// Code generated by pigeon; DO NOT EDIT.

package parser

import (
	"bytes"
	"errors"
	"fmt"
	"io"
	"io/ioutil"
	"math"
	"os"
	"sort"
	"strconv"
	"strings"
	"unicode"
	"unicode/utf8"

	"github.com/bytesparadise/libasciidoc/pkg/types"
)

// *****************************************************************************************
// This file is generated after its sibling `asciidoc-grammar.peg` file. DO NOT MODIFY !
// *****************************************************************************************

var g = &grammar{
	rules: []*rule{
		{
			name: "Document",
			pos:  position{line: 18, col: 1, offset: 504},
			expr: &actionExpr{
				pos: position{line: 18, col: 13, offset: 516},
				run: (*parser).callonDocument1,
				expr: &seqExpr{
					pos: position{line: 18, col: 13, offset: 516},
					exprs: []interface{}{
						&labeledExpr{
							pos:   position{line: 18, col: 13, offset: 516},
							label: "frontMatter",
							expr: &zeroOrOneExpr{
								pos: position{line: 18, col: 26, offset: 529},
								expr: &ruleRefExpr{
									pos:  position{line: 18, col: 26, offset: 529},
									name: "FrontMatter",
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 18, col: 40, offset: 543},
							label: "documentHeader",
							expr: &zeroOrOneExpr{
								pos: position{line: 18, col: 56, offset: 559},
								expr: &ruleRefExpr{
									pos:  position{line: 18, col: 56, offset: 559},
									name: "DocumentHeader",
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 18, col: 73, offset: 576},
							label: "blocks",
							expr: &zeroOrMoreExpr{
								pos: position{line: 18, col: 80, offset: 583},
								expr: &choiceExpr{
									pos: position{line: 18, col: 81, offset: 584},
									alternatives: []interface{}{
										&ruleRefExpr{
											pos:  position{line: 18, col: 81, offset: 584},
											name: "Section",
										},
										&ruleRefExpr{
											pos:  position{line: 18, col: 91, offset: 594},
											name: "DocumentBlock",
										},
									},
								},
							},
						},
						&notExpr{
							pos: position{line: 1030, col: 8, offset: 41712},
							expr: &anyMatcher{
								line: 1030, col: 9, offset: 41713,
							},
						},
					},
				},
			},
		},
		{
			name: "DocumentBlock",
			pos:  position{line: 22, col: 1, offset: 698},
			expr: &actionExpr{
				pos: position{line: 22, col: 18, offset: 715},
				run: (*parser).callonDocumentBlock1,
				expr: &seqExpr{
					pos: position{line: 22, col: 18, offset: 715},
					exprs: []interface{}{
						&notExpr{
							pos: position{line: 22, col: 18, offset: 715},
							expr: &notExpr{
								pos: position{line: 1030, col: 8, offset: 41712},
								expr: &anyMatcher{
									line: 1030, col: 9, offset: 41713,
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 23, col: 5, offset: 793},
							label: "block",
							expr: &choiceExpr{
								pos: position{line: 23, col: 12, offset: 800},
								alternatives: []interface{}{
									&actionExpr{
										pos: position{line: 991, col: 14, offset: 40968},
										run: (*parser).callonDocumentBlock8,
										expr: &seqExpr{
											pos: position{line: 991, col: 14, offset: 40968},
											exprs: []interface{}{
												&notExpr{
													pos: position{line: 991, col: 14, offset: 40968},
													expr: &notExpr{
														pos: position{line: 1030, col: 8, offset: 41712},
														expr: &anyMatcher{
															line: 1030, col: 9, offset: 41713,
														},
													},
												},
												&zeroOrMoreExpr{
													pos: position{line: 991, col: 19, offset: 40973},
													expr: &choiceExpr{
														pos: position{line: 1024, col: 7, offset: 41621},
														alternatives: []interface{}{
															&litMatcher{
																pos:        position{line: 1024, col: 7, offset: 41621},
																val:        " ",
																ignoreCase: false,
															},
															&actionExpr{
																pos: position{line: 1024, col: 13, offset: 41627},
																run: (*parser).callonDocumentBlock16,
																expr: &litMatcher{
																	pos:        position{line: 1024, col: 13, offset: 41627},
																	val:        "\t",
																	ignoreCase: false,
																},
															},
														},
													},
												},
												&choiceExpr{
													pos: position{line: 1032, col: 8, offset: 41723},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1028, col: 12, offset: 41683},
															val:        "\r\n",
															ignoreCase: false,
														},
														&charClassMatcher{
															pos:        position{line: 1028, col: 21, offset: 41692},
															val:        "[\\r\\n]",
															chars:      []rune{'\r', '\n'},
															ignoreCase: false,
															inverted:   false,
														},
														&notExpr{
															pos: position{line: 1030, col: 8, offset: 41712},
															expr: &anyMatcher{
																line: 1030, col: 9, offset: 41713,
															},
														},
													},
												},
											},
										},
									},
									&actionExpr{
										pos: position{line: 97, col: 33, offset: 3679},
										run: (*parser).callonDocumentBlock23,
										expr: &seqExpr{
											pos: position{line: 97, col: 33, offset: 3679},
											exprs: []interface{}{
												&litMatcher{
													pos:        position{line: 97, col: 33, offset: 3679},
													val:        ":",
													ignoreCase: false,
												},
												&labeledExpr{
													pos:   position{line: 97, col: 37, offset: 3683},
													label: "name",
													expr: &actionExpr{
														pos: position{line: 121, col: 26, offset: 4726},
														run: (*parser).callonDocumentBlock27,
														expr: &seqExpr{
															pos: position{line: 121, col: 26, offset: 4726},
															exprs: []interface{}{
																&charClassMatcher{
																	pos:        position{line: 121, col: 27, offset: 4727},
																	val:        "[_A-Za-z0-9]",
																	chars:      []rune{'_'},
																	ranges:     []rune{'A', 'Z', 'a', 'z', '0', '9'},
																	ignoreCase: false,
																	inverted:   false,
																},
																&zeroOrMoreExpr{
																	pos: position{line: 121, col: 56, offset: 4756},
																	expr: &charClassMatcher{
																		pos:        position{line: 121, col: 57, offset: 4757},
																		val:        "[-A-Za-z0-9]",
																		chars:      []rune{'-'},
																		ranges:     []rune{'A', 'Z', 'a', 'z', '0', '9'},
																		ignoreCase: false,
																		inverted:   false,
																	},
																},
															},
														},
													},
												},
												&litMatcher{
													pos:        position{line: 97, col: 66, offset: 3712},
													val:        ":",
													ignoreCase: false,
												},
												&zeroOrMoreExpr{
													pos: position{line: 97, col: 70, offset: 3716},
													expr: &choiceExpr{
														pos: position{line: 1024, col: 7, offset: 41621},
														alternatives: []interface{}{
															&litMatcher{
																pos:        position{line: 1024, col: 7, offset: 41621},
																val:        " ",
																ignoreCase: false,
															},
															&actionExpr{
																pos: position{line: 1024, col: 13, offset: 41627},
																run: (*parser).callonDocumentBlock36,
																expr: &litMatcher{
																	pos:        position{line: 1024, col: 13, offset: 41627},
																	val:        "\t",
																	ignoreCase: false,
																},
															},
														},
													},
												},
												&choiceExpr{
													pos: position{line: 1032, col: 8, offset: 41723},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1028, col: 12, offset: 41683},
															val:        "\r\n",
															ignoreCase: false,
														},
														&charClassMatcher{
															pos:        position{line: 1028, col: 21, offset: 41692},
															val:        "[\\r\\n]",
															chars:      []rune{'\r', '\n'},
															ignoreCase: false,
															inverted:   false,
														},
														&notExpr{
															pos: position{line: 1030, col: 8, offset: 41712},
															expr: &anyMatcher{
																line: 1030, col: 9, offset: 41713,
															},
														},
													},
												},
											},
										},
									},
									&actionExpr{
										pos: position{line: 99, col: 5, offset: 3799},
										run: (*parser).callonDocumentBlock43,
										expr: &seqExpr{
											pos: position{line: 99, col: 5, offset: 3799},
											exprs: []interface{}{
												&litMatcher{
													pos:        position{line: 99, col: 5, offset: 3799},
													val:        ":",
													ignoreCase: false,
												},
												&labeledExpr{
													pos:   position{line: 99, col: 9, offset: 3803},
													label: "name",
													expr: &actionExpr{
														pos: position{line: 121, col: 26, offset: 4726},
														run: (*parser).callonDocumentBlock47,
														expr: &seqExpr{
															pos: position{line: 121, col: 26, offset: 4726},
															exprs: []interface{}{
																&charClassMatcher{
																	pos:        position{line: 121, col: 27, offset: 4727},
																	val:        "[_A-Za-z0-9]",
																	chars:      []rune{'_'},
																	ranges:     []rune{'A', 'Z', 'a', 'z', '0', '9'},
																	ignoreCase: false,
																	inverted:   false,
																},
																&zeroOrMoreExpr{
																	pos: position{line: 121, col: 56, offset: 4756},
																	expr: &charClassMatcher{
																		pos:        position{line: 121, col: 57, offset: 4757},
																		val:        "[-A-Za-z0-9]",
																		chars:      []rune{'-'},
																		ranges:     []rune{'A', 'Z', 'a', 'z', '0', '9'},
																		ignoreCase: false,
																		inverted:   false,
																	},
																},
															},
														},
													},
												},
												&litMatcher{
													pos:        position{line: 99, col: 38, offset: 3832},
													val:        ":",
													ignoreCase: false,
												},
												&oneOrMoreExpr{
													pos: position{line: 99, col: 42, offset: 3836},
													expr: &choiceExpr{
														pos: position{line: 1024, col: 7, offset: 41621},
														alternatives: []interface{}{
															&litMatcher{
																pos:        position{line: 1024, col: 7, offset: 41621},
																val:        " ",
																ignoreCase: false,
															},
															&actionExpr{
																pos: position{line: 1024, col: 13, offset: 41627},
																run: (*parser).callonDocumentBlock56,
																expr: &litMatcher{
																	pos:        position{line: 1024, col: 13, offset: 41627},
																	val:        "\t",
																	ignoreCase: false,
																},
															},
														},
													},
												},
												&labeledExpr{
													pos:   position{line: 99, col: 46, offset: 3840},
													label: "value",
													expr: &actionExpr{
														pos: position{line: 125, col: 27, offset: 4849},
														run: (*parser).callonDocumentBlock59,
														expr: &zeroOrMoreExpr{
															pos: position{line: 125, col: 27, offset: 4849},
															expr: &seqExpr{
																pos: position{line: 125, col: 28, offset: 4850},
																exprs: []interface{}{
																	&notExpr{
																		pos: position{line: 125, col: 28, offset: 4850},
																		expr: &choiceExpr{
																			pos: position{line: 1028, col: 12, offset: 41683},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1028, col: 12, offset: 41683},
																					val:        "\r\n",
																					ignoreCase: false,
																				},
																				&charClassMatcher{
																					pos:        position{line: 1028, col: 21, offset: 41692},
																					val:        "[\\r\\n]",
																					chars:      []rune{'\r', '\n'},
																					ignoreCase: false,
																					inverted:   false,
																				},
																			},
																		},
																	},
																	&anyMatcher{
																		line: 125, col: 37, offset: 4859,
																	},
																},
															},
														},
													},
												},
												&choiceExpr{
													pos: position{line: 1032, col: 8, offset: 41723},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1028, col: 12, offset: 41683},
															val:        "\r\n",
															ignoreCase: false,
														},
														&charClassMatcher{
															pos:        position{line: 1028, col: 21, offset: 41692},
															val:        "[\\r\\n]",
															chars:      []rune{'\r', '\n'},
															ignoreCase: false,
															inverted:   false,
														},
														&notExpr{
															pos: position{line: 1030, col: 8, offset: 41712},
															expr: &anyMatcher{
																line: 1030, col: 9, offset: 41713,
															},
														},
													},
												},
											},
										},
									},
									&actionExpr{
										pos: position{line: 106, col: 53, offset: 4128},
										run: (*parser).callonDocumentBlock72,
										expr: &seqExpr{
											pos: position{line: 106, col: 53, offset: 4128},
											exprs: []interface{}{
												&litMatcher{
													pos:        position{line: 106, col: 53, offset: 4128},
													val:        ":!",
													ignoreCase: false,
												},
												&labeledExpr{
													pos:   position{line: 106, col: 58, offset: 4133},
													label: "name",
													expr: &actionExpr{
														pos: position{line: 121, col: 26, offset: 4726},
														run: (*parser).callonDocumentBlock76,
														expr: &seqExpr{
															pos: position{line: 121, col: 26, offset: 4726},
															exprs: []interface{}{
																&charClassMatcher{
																	pos:        position{line: 121, col: 27, offset: 4727},
																	val:        "[_A-Za-z0-9]",
																	chars:      []rune{'_'},
																	ranges:     []rune{'A', 'Z', 'a', 'z', '0', '9'},
																	ignoreCase: false,
																	inverted:   false,
																},
																&zeroOrMoreExpr{
																	pos: position{line: 121, col: 56, offset: 4756},
																	expr: &charClassMatcher{
																		pos:        position{line: 121, col: 57, offset: 4757},
																		val:        "[-A-Za-z0-9]",
																		chars:      []rune{'-'},
																		ranges:     []rune{'A', 'Z', 'a', 'z', '0', '9'},
																		ignoreCase: false,
																		inverted:   false,
																	},
																},
															},
														},
													},
												},
												&litMatcher{
													pos:        position{line: 106, col: 87, offset: 4162},
													val:        ":",
													ignoreCase: false,
												},
												&zeroOrMoreExpr{
													pos: position{line: 106, col: 91, offset: 4166},
													expr: &choiceExpr{
														pos: position{line: 1024, col: 7, offset: 41621},
														alternatives: []interface{}{
															&litMatcher{
																pos:        position{line: 1024, col: 7, offset: 41621},
																val:        " ",
																ignoreCase: false,
															},
															&actionExpr{
																pos: position{line: 1024, col: 13, offset: 41627},
																run: (*parser).callonDocumentBlock85,
																expr: &litMatcher{
																	pos:        position{line: 1024, col: 13, offset: 41627},
																	val:        "\t",
																	ignoreCase: false,
																},
															},
														},
													},
												},
												&choiceExpr{
													pos: position{line: 1032, col: 8, offset: 41723},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1028, col: 12, offset: 41683},
															val:        "\r\n",
															ignoreCase: false,
														},
														&charClassMatcher{
															pos:        position{line: 1028, col: 21, offset: 41692},
															val:        "[\\r\\n]",
															chars:      []rune{'\r', '\n'},
															ignoreCase: false,
															inverted:   false,
														},
														&notExpr{
															pos: position{line: 1030, col: 8, offset: 41712},
															expr: &anyMatcher{
																line: 1030, col: 9, offset: 41713,
															},
														},
													},
												},
											},
										},
									},
									&actionExpr{
										pos: position{line: 110, col: 49, offset: 4285},
										run: (*parser).callonDocumentBlock92,
										expr: &seqExpr{
											pos: position{line: 110, col: 49, offset: 4285},
											exprs: []interface{}{
												&litMatcher{
													pos:        position{line: 110, col: 49, offset: 4285},
													val:        ":",
													ignoreCase: false,
												},
												&labeledExpr{
													pos:   position{line: 110, col: 53, offset: 4289},
													label: "name",
													expr: &actionExpr{
														pos: position{line: 121, col: 26, offset: 4726},
														run: (*parser).callonDocumentBlock96,
														expr: &seqExpr{
															pos: position{line: 121, col: 26, offset: 4726},
															exprs: []interface{}{
																&charClassMatcher{
																	pos:        position{line: 121, col: 27, offset: 4727},
																	val:        "[_A-Za-z0-9]",
																	chars:      []rune{'_'},
																	ranges:     []rune{'A', 'Z', 'a', 'z', '0', '9'},
																	ignoreCase: false,
																	inverted:   false,
																},
																&zeroOrMoreExpr{
																	pos: position{line: 121, col: 56, offset: 4756},
																	expr: &charClassMatcher{
																		pos:        position{line: 121, col: 57, offset: 4757},
																		val:        "[-A-Za-z0-9]",
																		chars:      []rune{'-'},
																		ranges:     []rune{'A', 'Z', 'a', 'z', '0', '9'},
																		ignoreCase: false,
																		inverted:   false,
																	},
																},
															},
														},
													},
												},
												&litMatcher{
													pos:        position{line: 110, col: 82, offset: 4318},
													val:        "!:",
													ignoreCase: false,
												},
												&zeroOrMoreExpr{
													pos: position{line: 110, col: 87, offset: 4323},
													expr: &choiceExpr{
														pos: position{line: 1024, col: 7, offset: 41621},
														alternatives: []interface{}{
															&litMatcher{
																pos:        position{line: 1024, col: 7, offset: 41621},
																val:        " ",
																ignoreCase: false,
															},
															&actionExpr{
																pos: position{line: 1024, col: 13, offset: 41627},
																run: (*parser).callonDocumentBlock105,
																expr: &litMatcher{
																	pos:        position{line: 1024, col: 13, offset: 41627},
																	val:        "\t",
																	ignoreCase: false,
																},
															},
														},
													},
												},
												&choiceExpr{
													pos: position{line: 1032, col: 8, offset: 41723},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1028, col: 12, offset: 41683},
															val:        "\r\n",
															ignoreCase: false,
														},
														&charClassMatcher{
															pos:        position{line: 1028, col: 21, offset: 41692},
															val:        "[\\r\\n]",
															chars:      []rune{'\r', '\n'},
															ignoreCase: false,
															inverted:   false,
														},
														&notExpr{
															pos: position{line: 1030, col: 8, offset: 41712},
															expr: &anyMatcher{
																line: 1030, col: 9, offset: 41713,
															},
														},
													},
												},
											},
										},
									},
									&seqExpr{
										pos: position{line: 131, col: 25, offset: 5035},
										exprs: []interface{}{
											&litMatcher{
												pos:        position{line: 131, col: 25, offset: 5035},
												val:        "toc::[]",
												ignoreCase: false,
											},
											&choiceExpr{
												pos: position{line: 1028, col: 12, offset: 41683},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1028, col: 12, offset: 41683},
														val:        "\r\n",
														ignoreCase: false,
													},
													&charClassMatcher{
														pos:        position{line: 1028, col: 21, offset: 41692},
														val:        "[\\r\\n]",
														chars:      []rune{'\r', '\n'},
														ignoreCase: false,
														inverted:   false,
													},
												},
											},
										},
									},
									&ruleRefExpr{
										pos:  position{line: 23, col: 103, offset: 891},
										name: "List",
									},
									&actionExpr{
										pos: position{line: 706, col: 15, offset: 29179},
										run: (*parser).callonDocumentBlock118,
										expr: &seqExpr{
											pos: position{line: 706, col: 15, offset: 29179},
											exprs: []interface{}{
												&labeledExpr{
													pos:   position{line: 706, col: 15, offset: 29179},
													label: "attributes",
													expr: &zeroOrMoreExpr{
														pos: position{line: 706, col: 26, offset: 29190},
														expr: &actionExpr{
															pos: position{line: 136, col: 21, offset: 5188},
															run: (*parser).callonDocumentBlock122,
															expr: &seqExpr{
																pos: position{line: 136, col: 21, offset: 5188},
																exprs: []interface{}{
																	&labeledExpr{
																		pos:   position{line: 136, col: 21, offset: 5188},
																		label: "attr",
																		expr: &choiceExpr{
																			pos: position{line: 136, col: 27, offset: 5194},
																			alternatives: []interface{}{
																				&actionExpr{
																					pos: position{line: 145, col: 14, offset: 5645},
																					run: (*parser).callonDocumentBlock126,
																					expr: &labeledExpr{
																						pos:   position{line: 145, col: 14, offset: 5645},
																						label: "id",
																						expr: &actionExpr{
																							pos: position{line: 151, col: 20, offset: 5775},
																							run: (*parser).callonDocumentBlock128,
																							expr: &seqExpr{
																								pos: position{line: 151, col: 20, offset: 5775},
																								exprs: []interface{}{
																									&litMatcher{
																										pos:        position{line: 151, col: 20, offset: 5775},
																										val:        "[[",
																										ignoreCase: false,
																									},
																									&labeledExpr{
																										pos:   position{line: 151, col: 25, offset: 5780},
																										label: "id",
																										expr: &actionExpr{
																											pos: position{line: 1010, col: 7, offset: 41339},
																											run: (*parser).callonDocumentBlock132,
																											expr: &oneOrMoreExpr{
																												pos: position{line: 1010, col: 7, offset: 41339},
																												expr: &seqExpr{
																													pos: position{line: 1010, col: 8, offset: 41340},
																													exprs: []interface{}{
																														&notExpr{
																															pos: position{line: 1010, col: 8, offset: 41340},
																															expr: &choiceExpr{
																																pos: position{line: 1028, col: 12, offset: 41683},
																																alternatives: []interface{}{
																																	&litMatcher{
																																		pos:        position{line: 1028, col: 12, offset: 41683},
																																		val:        "\r\n",
																																		ignoreCase: false,
																																	},
																																	&charClassMatcher{
																																		pos:        position{line: 1028, col: 21, offset: 41692},
																																		val:        "[\\r\\n]",
																																		chars:      []rune{'\r', '\n'},
																																		ignoreCase: false,
																																		inverted:   false,
																																	},
																																},
																															},
																														},
																														&notExpr{
																															pos: position{line: 1010, col: 17, offset: 41349},
																															expr: &choiceExpr{
																																pos: position{line: 1024, col: 7, offset: 41621},
																																alternatives: []interface{}{
																																	&litMatcher{
																																		pos:        position{line: 1024, col: 7, offset: 41621},
																																		val:        " ",
																																		ignoreCase: false,
																																	},
																																	&actionExpr{
																																		pos: position{line: 1024, col: 13, offset: 41627},
																																		run: (*parser).callonDocumentBlock142,
																																		expr: &litMatcher{
																																			pos:        position{line: 1024, col: 13, offset: 41627},
																																			val:        "\t",
																																			ignoreCase: false,
																																		},
																																	},
																																},
																															},
																														},
																														&notExpr{
																															pos: position{line: 1010, col: 21, offset: 41353},
																															expr: &litMatcher{
																																pos:        position{line: 1010, col: 22, offset: 41354},
																																val:        "[",
																																ignoreCase: false,
																															},
																														},
																														&notExpr{
																															pos: position{line: 1010, col: 26, offset: 41358},
																															expr: &litMatcher{
																																pos:        position{line: 1010, col: 27, offset: 41359},
																																val:        "]",
																																ignoreCase: false,
																															},
																														},
																														&notExpr{
																															pos: position{line: 1010, col: 31, offset: 41363},
																															expr: &litMatcher{
																																pos:        position{line: 1010, col: 32, offset: 41364},
																																val:        "<<",
																																ignoreCase: false,
																															},
																														},
																														&notExpr{
																															pos: position{line: 1010, col: 37, offset: 41369},
																															expr: &litMatcher{
																																pos:        position{line: 1010, col: 38, offset: 41370},
																																val:        ">>",
																																ignoreCase: false,
																															},
																														},
																														&notExpr{
																															pos: position{line: 1010, col: 43, offset: 41375},
																															expr: &litMatcher{
																																pos:        position{line: 1010, col: 44, offset: 41376},
																																val:        ",",
																																ignoreCase: false,
																															},
																														},
																														&anyMatcher{
																															line: 1010, col: 48, offset: 41380,
																														},
																													},
																												},
																											},
																										},
																									},
																									&litMatcher{
																										pos:        position{line: 151, col: 33, offset: 5788},
																										val:        "]]",
																										ignoreCase: false,
																									},
																								},
																							},
																						},
																					},
																				},
																				&actionExpr{
																					pos: position{line: 147, col: 5, offset: 5691},
																					run: (*parser).callonDocumentBlock156,
																					expr: &seqExpr{
																						pos: position{line: 147, col: 5, offset: 5691},
																						exprs: []interface{}{
																							&litMatcher{
																								pos:        position{line: 147, col: 5, offset: 5691},
																								val:        "[#",
																								ignoreCase: false,
																							},
																							&labeledExpr{
																								pos:   position{line: 147, col: 10, offset: 5696},
																								label: "id",
																								expr: &actionExpr{
																									pos: position{line: 1010, col: 7, offset: 41339},
																									run: (*parser).callonDocumentBlock160,
																									expr: &oneOrMoreExpr{
																										pos: position{line: 1010, col: 7, offset: 41339},
																										expr: &seqExpr{
																											pos: position{line: 1010, col: 8, offset: 41340},
																											exprs: []interface{}{
																												&notExpr{
																													pos: position{line: 1010, col: 8, offset: 41340},
																													expr: &choiceExpr{
																														pos: position{line: 1028, col: 12, offset: 41683},
																														alternatives: []interface{}{
																															&litMatcher{
																																pos:        position{line: 1028, col: 12, offset: 41683},
																																val:        "\r\n",
																																ignoreCase: false,
																															},
																															&charClassMatcher{
																																pos:        position{line: 1028, col: 21, offset: 41692},
																																val:        "[\\r\\n]",
																																chars:      []rune{'\r', '\n'},
																																ignoreCase: false,
																																inverted:   false,
																															},
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 1010, col: 17, offset: 41349},
																													expr: &choiceExpr{
																														pos: position{line: 1024, col: 7, offset: 41621},
																														alternatives: []interface{}{
																															&litMatcher{
																																pos:        position{line: 1024, col: 7, offset: 41621},
																																val:        " ",
																																ignoreCase: false,
																															},
																															&actionExpr{
																																pos: position{line: 1024, col: 13, offset: 41627},
																																run: (*parser).callonDocumentBlock170,
																																expr: &litMatcher{
																																	pos:        position{line: 1024, col: 13, offset: 41627},
																																	val:        "\t",
																																	ignoreCase: false,
																																},
																															},
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 1010, col: 21, offset: 41353},
																													expr: &litMatcher{
																														pos:        position{line: 1010, col: 22, offset: 41354},
																														val:        "[",
																														ignoreCase: false,
																													},
																												},
																												&notExpr{
																													pos: position{line: 1010, col: 26, offset: 41358},
																													expr: &litMatcher{
																														pos:        position{line: 1010, col: 27, offset: 41359},
																														val:        "]",
																														ignoreCase: false,
																													},
																												},
																												&notExpr{
																													pos: position{line: 1010, col: 31, offset: 41363},
																													expr: &litMatcher{
																														pos:        position{line: 1010, col: 32, offset: 41364},
																														val:        "<<",
																														ignoreCase: false,
																													},
																												},
																												&notExpr{
																													pos: position{line: 1010, col: 37, offset: 41369},
																													expr: &litMatcher{
																														pos:        position{line: 1010, col: 38, offset: 41370},
																														val:        ">>",
																														ignoreCase: false,
																													},
																												},
																												&notExpr{
																													pos: position{line: 1010, col: 43, offset: 41375},
																													expr: &litMatcher{
																														pos:        position{line: 1010, col: 44, offset: 41376},
																														val:        ",",
																														ignoreCase: false,
																													},
																												},
																												&anyMatcher{
																													line: 1010, col: 48, offset: 41380,
																												},
																											},
																										},
																									},
																								},
																							},
																							&litMatcher{
																								pos:        position{line: 147, col: 18, offset: 5704},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																					},
																				},
																				&actionExpr{
																					pos: position{line: 157, col: 17, offset: 5997},
																					run: (*parser).callonDocumentBlock184,
																					expr: &seqExpr{
																						pos: position{line: 157, col: 17, offset: 5997},
																						exprs: []interface{}{
																							&litMatcher{
																								pos:        position{line: 157, col: 17, offset: 5997},
																								val:        ".",
																								ignoreCase: false,
																							},
																							&notExpr{
																								pos: position{line: 157, col: 21, offset: 6001},
																								expr: &litMatcher{
																									pos:        position{line: 157, col: 22, offset: 6002},
																									val:        ".",
																									ignoreCase: false,
																								},
																							},
																							&notExpr{
																								pos: position{line: 157, col: 26, offset: 6006},
																								expr: &choiceExpr{
																									pos: position{line: 1024, col: 7, offset: 41621},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1024, col: 7, offset: 41621},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1024, col: 13, offset: 41627},
																											run: (*parser).callonDocumentBlock192,
																											expr: &litMatcher{
																												pos:        position{line: 1024, col: 13, offset: 41627},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																							&labeledExpr{
																								pos:   position{line: 157, col: 30, offset: 6010},
																								label: "title",
																								expr: &actionExpr{
																									pos: position{line: 161, col: 24, offset: 6115},
																									run: (*parser).callonDocumentBlock195,
																									expr: &oneOrMoreExpr{
																										pos: position{line: 161, col: 24, offset: 6115},
																										expr: &seqExpr{
																											pos: position{line: 161, col: 25, offset: 6116},
																											exprs: []interface{}{
																												&notExpr{
																													pos: position{line: 161, col: 25, offset: 6116},
																													expr: &choiceExpr{
																														pos: position{line: 1028, col: 12, offset: 41683},
																														alternatives: []interface{}{
																															&litMatcher{
																																pos:        position{line: 1028, col: 12, offset: 41683},
																																val:        "\r\n",
																																ignoreCase: false,
																															},
																															&charClassMatcher{
																																pos:        position{line: 1028, col: 21, offset: 41692},
																																val:        "[\\r\\n]",
																																chars:      []rune{'\r', '\n'},
																																ignoreCase: false,
																																inverted:   false,
																															},
																														},
																													},
																												},
																												&anyMatcher{
																													line: 161, col: 34, offset: 6125,
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																				&actionExpr{
																					pos: position{line: 167, col: 16, offset: 6274},
																					run: (*parser).callonDocumentBlock203,
																					expr: &seqExpr{
																						pos: position{line: 167, col: 16, offset: 6274},
																						exprs: []interface{}{
																							&litMatcher{
																								pos:        position{line: 167, col: 16, offset: 6274},
																								val:        "[.",
																								ignoreCase: false,
																							},
																							&notExpr{
																								pos: position{line: 167, col: 21, offset: 6279},
																								expr: &choiceExpr{
																									pos: position{line: 1024, col: 7, offset: 41621},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1024, col: 7, offset: 41621},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1024, col: 13, offset: 41627},
																											run: (*parser).callonDocumentBlock209,
																											expr: &litMatcher{
																												pos:        position{line: 1024, col: 13, offset: 41627},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																							&labeledExpr{
																								pos:   position{line: 167, col: 25, offset: 6283},
																								label: "role",
																								expr: &actionExpr{
																									pos: position{line: 171, col: 23, offset: 6387},
																									run: (*parser).callonDocumentBlock212,
																									expr: &oneOrMoreExpr{
																										pos: position{line: 171, col: 23, offset: 6387},
																										expr: &seqExpr{
																											pos: position{line: 171, col: 24, offset: 6388},
																											exprs: []interface{}{
																												&notExpr{
																													pos: position{line: 171, col: 24, offset: 6388},
																													expr: &choiceExpr{
																														pos: position{line: 1028, col: 12, offset: 41683},
																														alternatives: []interface{}{
																															&litMatcher{
																																pos:        position{line: 1028, col: 12, offset: 41683},
																																val:        "\r\n",
																																ignoreCase: false,
																															},
																															&charClassMatcher{
																																pos:        position{line: 1028, col: 21, offset: 41692},
																																val:        "[\\r\\n]",
																																chars:      []rune{'\r', '\n'},
																																ignoreCase: false,
																																inverted:   false,
																															},
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 171, col: 33, offset: 6397},
																													expr: &litMatcher{
																														pos:        position{line: 171, col: 34, offset: 6398},
																														val:        "]",
																														ignoreCase: false,
																													},
																												},
																												&anyMatcher{
																													line: 171, col: 38, offset: 6402,
																												},
																											},
																										},
																									},
																								},
																							},
																							&litMatcher{
																								pos:        position{line: 167, col: 51, offset: 6309},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																					},
																				},
																				&actionExpr{
																					pos: position{line: 176, col: 30, offset: 6551},
																					run: (*parser).callonDocumentBlock223,
																					expr: &seqExpr{
																						pos: position{line: 176, col: 30, offset: 6551},
																						exprs: []interface{}{
																							&litMatcher{
																								pos:        position{line: 176, col: 30, offset: 6551},
																								val:        "[",
																								ignoreCase: false,
																							},
																							&labeledExpr{
																								pos:   position{line: 176, col: 34, offset: 6555},
																								label: "k",
																								expr: &choiceExpr{
																									pos: position{line: 494, col: 19, offset: 19245},
																									alternatives: []interface{}{
																										&actionExpr{
																											pos: position{line: 494, col: 19, offset: 19245},
																											run: (*parser).callonDocumentBlock228,
																											expr: &litMatcher{
																												pos:        position{line: 494, col: 19, offset: 19245},
																												val:        "TIP",
																												ignoreCase: false,
																											},
																										},
																										&actionExpr{
																											pos: position{line: 496, col: 5, offset: 19283},
																											run: (*parser).callonDocumentBlock230,
																											expr: &litMatcher{
																												pos:        position{line: 496, col: 5, offset: 19283},
																												val:        "NOTE",
																												ignoreCase: false,
																											},
																										},
																										&actionExpr{
																											pos: position{line: 498, col: 5, offset: 19323},
																											run: (*parser).callonDocumentBlock232,
																											expr: &litMatcher{
																												pos:        position{line: 498, col: 5, offset: 19323},
																												val:        "IMPORTANT",
																												ignoreCase: false,
																											},
																										},
																										&actionExpr{
																											pos: position{line: 500, col: 5, offset: 19373},
																											run: (*parser).callonDocumentBlock234,
																											expr: &litMatcher{
																												pos:        position{line: 500, col: 5, offset: 19373},
																												val:        "WARNING",
																												ignoreCase: false,
																											},
																										},
																										&actionExpr{
																											pos: position{line: 502, col: 5, offset: 19419},
																											run: (*parser).callonDocumentBlock236,
																											expr: &litMatcher{
																												pos:        position{line: 502, col: 5, offset: 19419},
																												val:        "CAUTION",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																							&litMatcher{
																								pos:        position{line: 176, col: 53, offset: 6574},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																					},
																				},
																				&actionExpr{
																					pos: position{line: 199, col: 21, offset: 7312},
																					run: (*parser).callonDocumentBlock239,
																					expr: &litMatcher{
																						pos:        position{line: 199, col: 21, offset: 7312},
																						val:        "[horizontal]",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 181, col: 19, offset: 6735},
																					run: (*parser).callonDocumentBlock241,
																					expr: &seqExpr{
																						pos: position{line: 181, col: 19, offset: 6735},
																						exprs: []interface{}{
																							&litMatcher{
																								pos:        position{line: 181, col: 19, offset: 6735},
																								val:        "[",
																								ignoreCase: false,
																							},
																							&notExpr{
																								pos: position{line: 181, col: 23, offset: 6739},
																								expr: &choiceExpr{
																									pos: position{line: 1024, col: 7, offset: 41621},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1024, col: 7, offset: 41621},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1024, col: 13, offset: 41627},
																											run: (*parser).callonDocumentBlock247,
																											expr: &litMatcher{
																												pos:        position{line: 1024, col: 13, offset: 41627},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																							&labeledExpr{
																								pos:   position{line: 181, col: 27, offset: 6743},
																								label: "attributes",
																								expr: &zeroOrMoreExpr{
																									pos: position{line: 181, col: 38, offset: 6754},
																									expr: &choiceExpr{
																										pos: position{line: 185, col: 21, offset: 6867},
																										alternatives: []interface{}{
																											&actionExpr{
																												pos: position{line: 185, col: 21, offset: 6867},
																												run: (*parser).callonDocumentBlock252,
																												expr: &seqExpr{
																													pos: position{line: 185, col: 21, offset: 6867},
																													exprs: []interface{}{
																														&labeledExpr{
																															pos:   position{line: 185, col: 21, offset: 6867},
																															label: "key",
																															expr: &actionExpr{
																																pos: position{line: 191, col: 17, offset: 7127},
																																run: (*parser).callonDocumentBlock255,
																																expr: &seqExpr{
																																	pos: position{line: 191, col: 17, offset: 7127},
																																	exprs: []interface{}{
																																		&notExpr{
																																			pos: position{line: 191, col: 17, offset: 7127},
																																			expr: &actionExpr{
																																				pos: position{line: 231, col: 14, offset: 8674},
																																				run: (*parser).callonDocumentBlock258,
																																				expr: &litMatcher{
																																					pos:        position{line: 231, col: 14, offset: 8674},
																																					val:        "verse",
																																					ignoreCase: false,
																																				},
																																			},
																																		},
																																		&notExpr{
																																			pos: position{line: 191, col: 28, offset: 7138},
																																			expr: &actionExpr{
																																				pos: position{line: 975, col: 16, offset: 40537},
																																				run: (*parser).callonDocumentBlock261,
																																				expr: &litMatcher{
																																					pos:        position{line: 975, col: 16, offset: 40537},
																																					val:        "literal",
																																					ignoreCase: false,
																																				},
																																			},
																																		},
																																		&labeledExpr{
																																			pos:   position{line: 191, col: 41, offset: 7151},
																																			label: "key",
																																			expr: &oneOrMoreExpr{
																																				pos: position{line: 191, col: 45, offset: 7155},
																																				expr: &seqExpr{
																																					pos: position{line: 191, col: 46, offset: 7156},
																																					exprs: []interface{}{
																																						&notExpr{
																																							pos: position{line: 191, col: 46, offset: 7156},
																																							expr: &litMatcher{
																																								pos:        position{line: 191, col: 47, offset: 7157},
																																								val:        "=",
																																								ignoreCase: false,
																																							},
																																						},
																																						&notExpr{
																																							pos: position{line: 191, col: 51, offset: 7161},
																																							expr: &litMatcher{
																																								pos:        position{line: 191, col: 52, offset: 7162},
																																								val:        ",",
																																								ignoreCase: false,
																																							},
																																						},
																																						&notExpr{
																																							pos: position{line: 191, col: 56, offset: 7166},
																																							expr: &litMatcher{
																																								pos:        position{line: 191, col: 57, offset: 7167},
																																								val:        "]",
																																								ignoreCase: false,
																																							},
																																						},
																																						&anyMatcher{
																																							line: 191, col: 61, offset: 7171,
																																						},
																																					},
																																				},
																																			},
																																		},
																																	},
																																},
																															},
																														},
																														&litMatcher{
																															pos:        position{line: 185, col: 40, offset: 6886},
																															val:        "=",
																															ignoreCase: false,
																														},
																														&labeledExpr{
																															pos:   position{line: 185, col: 44, offset: 6890},
																															label: "value",
																															expr: &actionExpr{
																																pos: position{line: 195, col: 19, offset: 7230},
																																run: (*parser).callonDocumentBlock275,
																																expr: &labeledExpr{
																																	pos:   position{line: 195, col: 19, offset: 7230},
																																	label: "value",
																																	expr: &zeroOrMoreExpr{
																																		pos: position{line: 195, col: 25, offset: 7236},
																																		expr: &seqExpr{
																																			pos: position{line: 195, col: 26, offset: 7237},
																																			exprs: []interface{}{
																																				&notExpr{
																																					pos: position{line: 195, col: 26, offset: 7237},
																																					expr: &litMatcher{
																																						pos:        position{line: 195, col: 27, offset: 7238},
																																						val:        "=",
																																						ignoreCase: false,
																																					},
																																				},
																																				&notExpr{
																																					pos: position{line: 195, col: 31, offset: 7242},
																																					expr: &litMatcher{
																																						pos:        position{line: 195, col: 32, offset: 7243},
																																						val:        ",",
																																						ignoreCase: false,
																																					},
																																				},
																																				&notExpr{
																																					pos: position{line: 195, col: 36, offset: 7247},
																																					expr: &litMatcher{
																																						pos:        position{line: 195, col: 37, offset: 7248},
																																						val:        "]",
																																						ignoreCase: false,
																																					},
																																				},
																																				&anyMatcher{
																																					line: 195, col: 41, offset: 7252,
																																				},
																																			},
																																		},
																																	},
																																},
																															},
																														},
																														&zeroOrOneExpr{
																															pos: position{line: 185, col: 67, offset: 6913},
																															expr: &litMatcher{
																																pos:        position{line: 185, col: 67, offset: 6913},
																																val:        ",",
																																ignoreCase: false,
																															},
																														},
																														&zeroOrMoreExpr{
																															pos: position{line: 185, col: 72, offset: 6918},
																															expr: &choiceExpr{
																																pos: position{line: 1024, col: 7, offset: 41621},
																																alternatives: []interface{}{
																																	&litMatcher{
																																		pos:        position{line: 1024, col: 7, offset: 41621},
																																		val:        " ",
																																		ignoreCase: false,
																																	},
																																	&actionExpr{
																																		pos: position{line: 1024, col: 13, offset: 41627},
																																		run: (*parser).callonDocumentBlock291,
																																		expr: &litMatcher{
																																			pos:        position{line: 1024, col: 13, offset: 41627},
																																			val:        "\t",
																																			ignoreCase: false,
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																											&actionExpr{
																												pos: position{line: 187, col: 5, offset: 7002},
																												run: (*parser).callonDocumentBlock293,
																												expr: &seqExpr{
																													pos: position{line: 187, col: 5, offset: 7002},
																													exprs: []interface{}{
																														&labeledExpr{
																															pos:   position{line: 187, col: 5, offset: 7002},
																															label: "key",
																															expr: &actionExpr{
																																pos: position{line: 191, col: 17, offset: 7127},
																																run: (*parser).callonDocumentBlock296,
																																expr: &seqExpr{
																																	pos: position{line: 191, col: 17, offset: 7127},
																																	exprs: []interface{}{
																																		&notExpr{
																																			pos: position{line: 191, col: 17, offset: 7127},
																																			expr: &actionExpr{
																																				pos: position{line: 231, col: 14, offset: 8674},
																																				run: (*parser).callonDocumentBlock299,
																																				expr: &litMatcher{
																																					pos:        position{line: 231, col: 14, offset: 8674},
																																					val:        "verse",
																																					ignoreCase: false,
																																				},
																																			},
																																		},
																																		&notExpr{
																																			pos: position{line: 191, col: 28, offset: 7138},
																																			expr: &actionExpr{
																																				pos: position{line: 975, col: 16, offset: 40537},
																																				run: (*parser).callonDocumentBlock302,
																																				expr: &litMatcher{
																																					pos:        position{line: 975, col: 16, offset: 40537},
																																					val:        "literal",
																																					ignoreCase: false,
																																				},
																																			},
																																		},
																																		&labeledExpr{
																																			pos:   position{line: 191, col: 41, offset: 7151},
																																			label: "key",
																																			expr: &oneOrMoreExpr{
																																				pos: position{line: 191, col: 45, offset: 7155},
																																				expr: &seqExpr{
																																					pos: position{line: 191, col: 46, offset: 7156},
																																					exprs: []interface{}{
																																						&notExpr{
																																							pos: position{line: 191, col: 46, offset: 7156},
																																							expr: &litMatcher{
																																								pos:        position{line: 191, col: 47, offset: 7157},
																																								val:        "=",
																																								ignoreCase: false,
																																							},
																																						},
																																						&notExpr{
																																							pos: position{line: 191, col: 51, offset: 7161},
																																							expr: &litMatcher{
																																								pos:        position{line: 191, col: 52, offset: 7162},
																																								val:        ",",
																																								ignoreCase: false,
																																							},
																																						},
																																						&notExpr{
																																							pos: position{line: 191, col: 56, offset: 7166},
																																							expr: &litMatcher{
																																								pos:        position{line: 191, col: 57, offset: 7167},
																																								val:        "]",
																																								ignoreCase: false,
																																							},
																																						},
																																						&anyMatcher{
																																							line: 191, col: 61, offset: 7171,
																																						},
																																					},
																																				},
																																			},
																																		},
																																	},
																																},
																															},
																														},
																														&zeroOrOneExpr{
																															pos: position{line: 187, col: 24, offset: 7021},
																															expr: &litMatcher{
																																pos:        position{line: 187, col: 24, offset: 7021},
																																val:        ",",
																																ignoreCase: false,
																															},
																														},
																														&zeroOrMoreExpr{
																															pos: position{line: 187, col: 29, offset: 7026},
																															expr: &choiceExpr{
																																pos: position{line: 1024, col: 7, offset: 41621},
																																alternatives: []interface{}{
																																	&litMatcher{
																																		pos:        position{line: 1024, col: 7, offset: 41621},
																																		val:        " ",
																																		ignoreCase: false,
																																	},
																																	&actionExpr{
																																		pos: position{line: 1024, col: 13, offset: 41627},
																																		run: (*parser).callonDocumentBlock319,
																																		expr: &litMatcher{
																																			pos:        position{line: 1024, col: 13, offset: 41627},
																																			val:        "\t",
																																			ignoreCase: false,
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&litMatcher{
																								pos:        position{line: 181, col: 59, offset: 6775},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&zeroOrMoreExpr{
																		pos: position{line: 136, col: 131, offset: 5298},
																		expr: &choiceExpr{
																			pos: position{line: 1024, col: 7, offset: 41621},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1024, col: 7, offset: 41621},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1024, col: 13, offset: 41627},
																					run: (*parser).callonDocumentBlock325,
																					expr: &litMatcher{
																						pos:        position{line: 1024, col: 13, offset: 41627},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&choiceExpr{
																		pos: position{line: 1032, col: 8, offset: 41723},
																		alternatives: []interface{}{
																			&litMatcher{
																				pos:        position{line: 1028, col: 12, offset: 41683},
																				val:        "\r\n",
																				ignoreCase: false,
																			},
																			&charClassMatcher{
																				pos:        position{line: 1028, col: 21, offset: 41692},
																				val:        "[\\r\\n]",
																				chars:      []rune{'\r', '\n'},
																				ignoreCase: false,
																				inverted:   false,
																			},
																			&notExpr{
																				pos: position{line: 1030, col: 8, offset: 41712},
																				expr: &anyMatcher{
																					line: 1030, col: 9, offset: 41713,
																				},
																			},
																		},
																	},
																},
															},
														},
													},
												},
												&litMatcher{
													pos:        position{line: 706, col: 46, offset: 29210},
													val:        "image::",
													ignoreCase: false,
												},
												&labeledExpr{
													pos:   position{line: 706, col: 56, offset: 29220},
													label: "path",
													expr: &actionExpr{
														pos: position{line: 1006, col: 8, offset: 41269},
														run: (*parser).callonDocumentBlock334,
														expr: &oneOrMoreExpr{
															pos: position{line: 1006, col: 8, offset: 41269},
															expr: &seqExpr{
																pos: position{line: 1006, col: 9, offset: 41270},
																exprs: []interface{}{
																	&notExpr{
																		pos: position{line: 1006, col: 9, offset: 41270},
																		expr: &choiceExpr{
																			pos: position{line: 1028, col: 12, offset: 41683},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1028, col: 12, offset: 41683},
																					val:        "\r\n",
																					ignoreCase: false,
																				},
																				&charClassMatcher{
																					pos:        position{line: 1028, col: 21, offset: 41692},
																					val:        "[\\r\\n]",
																					chars:      []rune{'\r', '\n'},
																					ignoreCase: false,
																					inverted:   false,
																				},
																			},
																		},
																	},
																	&notExpr{
																		pos: position{line: 1006, col: 18, offset: 41279},
																		expr: &choiceExpr{
																			pos: position{line: 1024, col: 7, offset: 41621},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1024, col: 7, offset: 41621},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1024, col: 13, offset: 41627},
																					run: (*parser).callonDocumentBlock344,
																					expr: &litMatcher{
																						pos:        position{line: 1024, col: 13, offset: 41627},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&notExpr{
																		pos: position{line: 1006, col: 22, offset: 41283},
																		expr: &litMatcher{
																			pos:        position{line: 1006, col: 23, offset: 41284},
																			val:        "[",
																			ignoreCase: false,
																		},
																	},
																	&notExpr{
																		pos: position{line: 1006, col: 27, offset: 41288},
																		expr: &litMatcher{
																			pos:        position{line: 1006, col: 28, offset: 41289},
																			val:        "]",
																			ignoreCase: false,
																		},
																	},
																	&anyMatcher{
																		line: 1006, col: 32, offset: 41293,
																	},
																},
															},
														},
													},
												},
												&labeledExpr{
													pos:   position{line: 706, col: 67, offset: 29231},
													label: "inlineAttributes",
													expr: &choiceExpr{
														pos: position{line: 715, col: 20, offset: 29682},
														alternatives: []interface{}{
															&actionExpr{
																pos: position{line: 715, col: 20, offset: 29682},
																run: (*parser).callonDocumentBlock353,
																expr: &seqExpr{
																	pos: position{line: 715, col: 20, offset: 29682},
																	exprs: []interface{}{
																		&litMatcher{
																			pos:        position{line: 715, col: 20, offset: 29682},
																			val:        "[",
																			ignoreCase: false,
																		},
																		&labeledExpr{
																			pos:   position{line: 715, col: 24, offset: 29686},
																			label: "alt",
																			expr: &actionExpr{
																				pos: position{line: 732, col: 19, offset: 30461},
																				run: (*parser).callonDocumentBlock357,
																				expr: &oneOrMoreExpr{
																					pos: position{line: 732, col: 19, offset: 30461},
																					expr: &seqExpr{
																						pos: position{line: 732, col: 20, offset: 30462},
																						exprs: []interface{}{
																							&notExpr{
																								pos: position{line: 732, col: 20, offset: 30462},
																								expr: &litMatcher{
																									pos:        position{line: 732, col: 21, offset: 30463},
																									val:        ",",
																									ignoreCase: false,
																								},
																							},
																							&notExpr{
																								pos: position{line: 732, col: 25, offset: 30467},
																								expr: &litMatcher{
																									pos:        position{line: 732, col: 26, offset: 30468},
																									val:        "=",
																									ignoreCase: false,
																								},
																							},
																							&notExpr{
																								pos: position{line: 732, col: 30, offset: 30472},
																								expr: &litMatcher{
																									pos:        position{line: 732, col: 31, offset: 30473},
																									val:        "]",
																									ignoreCase: false,
																								},
																							},
																							&anyMatcher{
																								line: 732, col: 35, offset: 30477,
																							},
																						},
																					},
																				},
																			},
																		},
																		&litMatcher{
																			pos:        position{line: 715, col: 45, offset: 29707},
																			val:        ",",
																			ignoreCase: false,
																		},
																		&labeledExpr{
																			pos:   position{line: 716, col: 9, offset: 29719},
																			label: "width",
																			expr: &actionExpr{
																				pos: position{line: 732, col: 19, offset: 30461},
																				run: (*parser).callonDocumentBlock369,
																				expr: &oneOrMoreExpr{
																					pos: position{line: 732, col: 19, offset: 30461},
																					expr: &seqExpr{
																						pos: position{line: 732, col: 20, offset: 30462},
																						exprs: []interface{}{
																							&notExpr{
																								pos: position{line: 732, col: 20, offset: 30462},
																								expr: &litMatcher{
																									pos:        position{line: 732, col: 21, offset: 30463},
																									val:        ",",
																									ignoreCase: false,
																								},
																							},
																							&notExpr{
																								pos: position{line: 732, col: 25, offset: 30467},
																								expr: &litMatcher{
																									pos:        position{line: 732, col: 26, offset: 30468},
																									val:        "=",
																									ignoreCase: false,
																								},
																							},
																							&notExpr{
																								pos: position{line: 732, col: 30, offset: 30472},
																								expr: &litMatcher{
																									pos:        position{line: 732, col: 31, offset: 30473},
																									val:        "]",
																									ignoreCase: false,
																								},
																							},
																							&anyMatcher{
																								line: 732, col: 35, offset: 30477,
																							},
																						},
																					},
																				},
																			},
																		},
																		&litMatcher{
																			pos:        position{line: 716, col: 33, offset: 29743},
																			val:        ",",
																			ignoreCase: false,
																		},
																		&labeledExpr{
																			pos:   position{line: 717, col: 9, offset: 29755},
																			label: "height",
																			expr: &actionExpr{
																				pos: position{line: 732, col: 19, offset: 30461},
																				run: (*parser).callonDocumentBlock381,
																				expr: &oneOrMoreExpr{
																					pos: position{line: 732, col: 19, offset: 30461},
																					expr: &seqExpr{
																						pos: position{line: 732, col: 20, offset: 30462},
																						exprs: []interface{}{
																							&notExpr{
																								pos: position{line: 732, col: 20, offset: 30462},
																								expr: &litMatcher{
																									pos:        position{line: 732, col: 21, offset: 30463},
																									val:        ",",
																									ignoreCase: false,
																								},
																							},
																							&notExpr{
																								pos: position{line: 732, col: 25, offset: 30467},
																								expr: &litMatcher{
																									pos:        position{line: 732, col: 26, offset: 30468},
																									val:        "=",
																									ignoreCase: false,
																								},
																							},
																							&notExpr{
																								pos: position{line: 732, col: 30, offset: 30472},
																								expr: &litMatcher{
																									pos:        position{line: 732, col: 31, offset: 30473},
																									val:        "]",
																									ignoreCase: false,
																								},
																							},
																							&anyMatcher{
																								line: 732, col: 35, offset: 30477,
																							},
																						},
																					},
																				},
																			},
																		},
																		&zeroOrOneExpr{
																			pos: position{line: 717, col: 33, offset: 29779},
																			expr: &litMatcher{
																				pos:        position{line: 717, col: 33, offset: 29779},
																				val:        ",",
																				ignoreCase: false,
																			},
																		},
																		&labeledExpr{
																			pos:   position{line: 718, col: 9, offset: 29792},
																			label: "otherAttrs",
																			expr: &zeroOrMoreExpr{
																				pos: position{line: 718, col: 20, offset: 29803},
																				expr: &choiceExpr{
																					pos: position{line: 185, col: 21, offset: 6867},
																					alternatives: []interface{}{
																						&actionExpr{
																							pos: position{line: 185, col: 21, offset: 6867},
																							run: (*parser).callonDocumentBlock396,
																							expr: &seqExpr{
																								pos: position{line: 185, col: 21, offset: 6867},
																								exprs: []interface{}{
																									&labeledExpr{
																										pos:   position{line: 185, col: 21, offset: 6867},
																										label: "key",
																										expr: &actionExpr{
																											pos: position{line: 191, col: 17, offset: 7127},
																											run: (*parser).callonDocumentBlock399,
																											expr: &seqExpr{
																												pos: position{line: 191, col: 17, offset: 7127},
																												exprs: []interface{}{
																													&notExpr{
																														pos: position{line: 191, col: 17, offset: 7127},
																														expr: &actionExpr{
																															pos: position{line: 231, col: 14, offset: 8674},
																															run: (*parser).callonDocumentBlock402,
																															expr: &litMatcher{
																																pos:        position{line: 231, col: 14, offset: 8674},
																																val:        "verse",
																																ignoreCase: false,
																															},
																														},
																													},
																													&notExpr{
																														pos: position{line: 191, col: 28, offset: 7138},
																														expr: &actionExpr{
																															pos: position{line: 975, col: 16, offset: 40537},
																															run: (*parser).callonDocumentBlock405,
																															expr: &litMatcher{
																																pos:        position{line: 975, col: 16, offset: 40537},
																																val:        "literal",
																																ignoreCase: false,
																															},
																														},
																													},
																													&labeledExpr{
																														pos:   position{line: 191, col: 41, offset: 7151},
																														label: "key",
																														expr: &oneOrMoreExpr{
																															pos: position{line: 191, col: 45, offset: 7155},
																															expr: &seqExpr{
																																pos: position{line: 191, col: 46, offset: 7156},
																																exprs: []interface{}{
																																	&notExpr{
																																		pos: position{line: 191, col: 46, offset: 7156},
																																		expr: &litMatcher{
																																			pos:        position{line: 191, col: 47, offset: 7157},
																																			val:        "=",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 191, col: 51, offset: 7161},
																																		expr: &litMatcher{
																																			pos:        position{line: 191, col: 52, offset: 7162},
																																			val:        ",",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 191, col: 56, offset: 7166},
																																		expr: &litMatcher{
																																			pos:        position{line: 191, col: 57, offset: 7167},
																																			val:        "]",
																																			ignoreCase: false,
																																		},
																																	},
																																	&anyMatcher{
																																		line: 191, col: 61, offset: 7171,
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																									&litMatcher{
																										pos:        position{line: 185, col: 40, offset: 6886},
																										val:        "=",
																										ignoreCase: false,
																									},
																									&labeledExpr{
																										pos:   position{line: 185, col: 44, offset: 6890},
																										label: "value",
																										expr: &actionExpr{
																											pos: position{line: 195, col: 19, offset: 7230},
																											run: (*parser).callonDocumentBlock419,
																											expr: &labeledExpr{
																												pos:   position{line: 195, col: 19, offset: 7230},
																												label: "value",
																												expr: &zeroOrMoreExpr{
																													pos: position{line: 195, col: 25, offset: 7236},
																													expr: &seqExpr{
																														pos: position{line: 195, col: 26, offset: 7237},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 195, col: 26, offset: 7237},
																																expr: &litMatcher{
																																	pos:        position{line: 195, col: 27, offset: 7238},
																																	val:        "=",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 195, col: 31, offset: 7242},
																																expr: &litMatcher{
																																	pos:        position{line: 195, col: 32, offset: 7243},
																																	val:        ",",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 195, col: 36, offset: 7247},
																																expr: &litMatcher{
																																	pos:        position{line: 195, col: 37, offset: 7248},
																																	val:        "]",
																																	ignoreCase: false,
																																},
																															},
																															&anyMatcher{
																																line: 195, col: 41, offset: 7252,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																									&zeroOrOneExpr{
																										pos: position{line: 185, col: 67, offset: 6913},
																										expr: &litMatcher{
																											pos:        position{line: 185, col: 67, offset: 6913},
																											val:        ",",
																											ignoreCase: false,
																										},
																									},
																									&zeroOrMoreExpr{
																										pos: position{line: 185, col: 72, offset: 6918},
																										expr: &choiceExpr{
																											pos: position{line: 1024, col: 7, offset: 41621},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1024, col: 7, offset: 41621},
																													val:        " ",
																													ignoreCase: false,
																												},
																												&actionExpr{
																													pos: position{line: 1024, col: 13, offset: 41627},
																													run: (*parser).callonDocumentBlock435,
																													expr: &litMatcher{
																														pos:        position{line: 1024, col: 13, offset: 41627},
																														val:        "\t",
																														ignoreCase: false,
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 187, col: 5, offset: 7002},
																							run: (*parser).callonDocumentBlock437,
																							expr: &seqExpr{
																								pos: position{line: 187, col: 5, offset: 7002},
																								exprs: []interface{}{
																									&labeledExpr{
																										pos:   position{line: 187, col: 5, offset: 7002},
																										label: "key",
																										expr: &actionExpr{
																											pos: position{line: 191, col: 17, offset: 7127},
																											run: (*parser).callonDocumentBlock440,
																											expr: &seqExpr{
																												pos: position{line: 191, col: 17, offset: 7127},
																												exprs: []interface{}{
																													&notExpr{
																														pos: position{line: 191, col: 17, offset: 7127},
																														expr: &actionExpr{
																															pos: position{line: 231, col: 14, offset: 8674},
																															run: (*parser).callonDocumentBlock443,
																															expr: &litMatcher{
																																pos:        position{line: 231, col: 14, offset: 8674},
																																val:        "verse",
																																ignoreCase: false,
																															},
																														},
																													},
																													&notExpr{
																														pos: position{line: 191, col: 28, offset: 7138},
																														expr: &actionExpr{
																															pos: position{line: 975, col: 16, offset: 40537},
																															run: (*parser).callonDocumentBlock446,
																															expr: &litMatcher{
																																pos:        position{line: 975, col: 16, offset: 40537},
																																val:        "literal",
																																ignoreCase: false,
																															},
																														},
																													},
																													&labeledExpr{
																														pos:   position{line: 191, col: 41, offset: 7151},
																														label: "key",
																														expr: &oneOrMoreExpr{
																															pos: position{line: 191, col: 45, offset: 7155},
																															expr: &seqExpr{
																																pos: position{line: 191, col: 46, offset: 7156},
																																exprs: []interface{}{
																																	&notExpr{
																																		pos: position{line: 191, col: 46, offset: 7156},
																																		expr: &litMatcher{
																																			pos:        position{line: 191, col: 47, offset: 7157},
																																			val:        "=",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 191, col: 51, offset: 7161},
																																		expr: &litMatcher{
																																			pos:        position{line: 191, col: 52, offset: 7162},
																																			val:        ",",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 191, col: 56, offset: 7166},
																																		expr: &litMatcher{
																																			pos:        position{line: 191, col: 57, offset: 7167},
																																			val:        "]",
																																			ignoreCase: false,
																																		},
																																	},
																																	&anyMatcher{
																																		line: 191, col: 61, offset: 7171,
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																									&zeroOrOneExpr{
																										pos: position{line: 187, col: 24, offset: 7021},
																										expr: &litMatcher{
																											pos:        position{line: 187, col: 24, offset: 7021},
																											val:        ",",
																											ignoreCase: false,
																										},
																									},
																									&zeroOrMoreExpr{
																										pos: position{line: 187, col: 29, offset: 7026},
																										expr: &choiceExpr{
																											pos: position{line: 1024, col: 7, offset: 41621},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1024, col: 7, offset: 41621},
																													val:        " ",
																													ignoreCase: false,
																												},
																												&actionExpr{
																													pos: position{line: 1024, col: 13, offset: 41627},
																													run: (*parser).callonDocumentBlock463,
																													expr: &litMatcher{
																														pos:        position{line: 1024, col: 13, offset: 41627},
																														val:        "\t",
																														ignoreCase: false,
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																		&litMatcher{
																			pos:        position{line: 718, col: 40, offset: 29823},
																			val:        "]",
																			ignoreCase: false,
																		},
																	},
																},
															},
															&actionExpr{
																pos: position{line: 720, col: 9, offset: 29929},
																run: (*parser).callonDocumentBlock466,
																expr: &seqExpr{
																	pos: position{line: 720, col: 9, offset: 29929},
																	exprs: []interface{}{
																		&litMatcher{
																			pos:        position{line: 720, col: 9, offset: 29929},
																			val:        "[",
																			ignoreCase: false,
																		},
																		&labeledExpr{
																			pos:   position{line: 720, col: 13, offset: 29933},
																			label: "alt",
																			expr: &actionExpr{
																				pos: position{line: 732, col: 19, offset: 30461},
																				run: (*parser).callonDocumentBlock470,
																				expr: &oneOrMoreExpr{
																					pos: position{line: 732, col: 19, offset: 30461},
																					expr: &seqExpr{
																						pos: position{line: 732, col: 20, offset: 30462},
																						exprs: []interface{}{
																							&notExpr{
																								pos: position{line: 732, col: 20, offset: 30462},
																								expr: &litMatcher{
																									pos:        position{line: 732, col: 21, offset: 30463},
																									val:        ",",
																									ignoreCase: false,
																								},
																							},
																							&notExpr{
																								pos: position{line: 732, col: 25, offset: 30467},
																								expr: &litMatcher{
																									pos:        position{line: 732, col: 26, offset: 30468},
																									val:        "=",
																									ignoreCase: false,
																								},
																							},
																							&notExpr{
																								pos: position{line: 732, col: 30, offset: 30472},
																								expr: &litMatcher{
																									pos:        position{line: 732, col: 31, offset: 30473},
																									val:        "]",
																									ignoreCase: false,
																								},
																							},
																							&anyMatcher{
																								line: 732, col: 35, offset: 30477,
																							},
																						},
																					},
																				},
																			},
																		},
																		&litMatcher{
																			pos:        position{line: 720, col: 34, offset: 29954},
																			val:        ",",
																			ignoreCase: false,
																		},
																		&labeledExpr{
																			pos:   position{line: 721, col: 9, offset: 29966},
																			label: "width",
																			expr: &actionExpr{
																				pos: position{line: 732, col: 19, offset: 30461},
																				run: (*parser).callonDocumentBlock482,
																				expr: &oneOrMoreExpr{
																					pos: position{line: 732, col: 19, offset: 30461},
																					expr: &seqExpr{
																						pos: position{line: 732, col: 20, offset: 30462},
																						exprs: []interface{}{
																							&notExpr{
																								pos: position{line: 732, col: 20, offset: 30462},
																								expr: &litMatcher{
																									pos:        position{line: 732, col: 21, offset: 30463},
																									val:        ",",
																									ignoreCase: false,
																								},
																							},
																							&notExpr{
																								pos: position{line: 732, col: 25, offset: 30467},
																								expr: &litMatcher{
																									pos:        position{line: 732, col: 26, offset: 30468},
																									val:        "=",
																									ignoreCase: false,
																								},
																							},
																							&notExpr{
																								pos: position{line: 732, col: 30, offset: 30472},
																								expr: &litMatcher{
																									pos:        position{line: 732, col: 31, offset: 30473},
																									val:        "]",
																									ignoreCase: false,
																								},
																							},
																							&anyMatcher{
																								line: 732, col: 35, offset: 30477,
																							},
																						},
																					},
																				},
																			},
																		},
																		&zeroOrOneExpr{
																			pos: position{line: 721, col: 32, offset: 29989},
																			expr: &litMatcher{
																				pos:        position{line: 721, col: 32, offset: 29989},
																				val:        ",",
																				ignoreCase: false,
																			},
																		},
																		&labeledExpr{
																			pos:   position{line: 722, col: 9, offset: 30002},
																			label: "otherAttrs",
																			expr: &zeroOrMoreExpr{
																				pos: position{line: 722, col: 20, offset: 30013},
																				expr: &choiceExpr{
																					pos: position{line: 185, col: 21, offset: 6867},
																					alternatives: []interface{}{
																						&actionExpr{
																							pos: position{line: 185, col: 21, offset: 6867},
																							run: (*parser).callonDocumentBlock497,
																							expr: &seqExpr{
																								pos: position{line: 185, col: 21, offset: 6867},
																								exprs: []interface{}{
																									&labeledExpr{
																										pos:   position{line: 185, col: 21, offset: 6867},
																										label: "key",
																										expr: &actionExpr{
																											pos: position{line: 191, col: 17, offset: 7127},
																											run: (*parser).callonDocumentBlock500,
																											expr: &seqExpr{
																												pos: position{line: 191, col: 17, offset: 7127},
																												exprs: []interface{}{
																													&notExpr{
																														pos: position{line: 191, col: 17, offset: 7127},
																														expr: &actionExpr{
																															pos: position{line: 231, col: 14, offset: 8674},
																															run: (*parser).callonDocumentBlock503,
																															expr: &litMatcher{
																																pos:        position{line: 231, col: 14, offset: 8674},
																																val:        "verse",
																																ignoreCase: false,
																															},
																														},
																													},
																													&notExpr{
																														pos: position{line: 191, col: 28, offset: 7138},
																														expr: &actionExpr{
																															pos: position{line: 975, col: 16, offset: 40537},
																															run: (*parser).callonDocumentBlock506,
																															expr: &litMatcher{
																																pos:        position{line: 975, col: 16, offset: 40537},
																																val:        "literal",
																																ignoreCase: false,
																															},
																														},
																													},
																													&labeledExpr{
																														pos:   position{line: 191, col: 41, offset: 7151},
																														label: "key",
																														expr: &oneOrMoreExpr{
																															pos: position{line: 191, col: 45, offset: 7155},
																															expr: &seqExpr{
																																pos: position{line: 191, col: 46, offset: 7156},
																																exprs: []interface{}{
																																	&notExpr{
																																		pos: position{line: 191, col: 46, offset: 7156},
																																		expr: &litMatcher{
																																			pos:        position{line: 191, col: 47, offset: 7157},
																																			val:        "=",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 191, col: 51, offset: 7161},
																																		expr: &litMatcher{
																																			pos:        position{line: 191, col: 52, offset: 7162},
																																			val:        ",",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 191, col: 56, offset: 7166},
																																		expr: &litMatcher{
																																			pos:        position{line: 191, col: 57, offset: 7167},
																																			val:        "]",
																																			ignoreCase: false,
																																		},
																																	},
																																	&anyMatcher{
																																		line: 191, col: 61, offset: 7171,
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																									&litMatcher{
																										pos:        position{line: 185, col: 40, offset: 6886},
																										val:        "=",
																										ignoreCase: false,
																									},
																									&labeledExpr{
																										pos:   position{line: 185, col: 44, offset: 6890},
																										label: "value",
																										expr: &actionExpr{
																											pos: position{line: 195, col: 19, offset: 7230},
																											run: (*parser).callonDocumentBlock520,
																											expr: &labeledExpr{
																												pos:   position{line: 195, col: 19, offset: 7230},
																												label: "value",
																												expr: &zeroOrMoreExpr{
																													pos: position{line: 195, col: 25, offset: 7236},
																													expr: &seqExpr{
																														pos: position{line: 195, col: 26, offset: 7237},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 195, col: 26, offset: 7237},
																																expr: &litMatcher{
																																	pos:        position{line: 195, col: 27, offset: 7238},
																																	val:        "=",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 195, col: 31, offset: 7242},
																																expr: &litMatcher{
																																	pos:        position{line: 195, col: 32, offset: 7243},
																																	val:        ",",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 195, col: 36, offset: 7247},
																																expr: &litMatcher{
																																	pos:        position{line: 195, col: 37, offset: 7248},
																																	val:        "]",
																																	ignoreCase: false,
																																},
																															},
																															&anyMatcher{
																																line: 195, col: 41, offset: 7252,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																									&zeroOrOneExpr{
																										pos: position{line: 185, col: 67, offset: 6913},
																										expr: &litMatcher{
																											pos:        position{line: 185, col: 67, offset: 6913},
																											val:        ",",
																											ignoreCase: false,
																										},
																									},
																									&zeroOrMoreExpr{
																										pos: position{line: 185, col: 72, offset: 6918},
																										expr: &choiceExpr{
																											pos: position{line: 1024, col: 7, offset: 41621},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1024, col: 7, offset: 41621},
																													val:        " ",
																													ignoreCase: false,
																												},
																												&actionExpr{
																													pos: position{line: 1024, col: 13, offset: 41627},
																													run: (*parser).callonDocumentBlock536,
																													expr: &litMatcher{
																														pos:        position{line: 1024, col: 13, offset: 41627},
																														val:        "\t",
																														ignoreCase: false,
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 187, col: 5, offset: 7002},
																							run: (*parser).callonDocumentBlock538,
																							expr: &seqExpr{
																								pos: position{line: 187, col: 5, offset: 7002},
																								exprs: []interface{}{
																									&labeledExpr{
																										pos:   position{line: 187, col: 5, offset: 7002},
																										label: "key",
																										expr: &actionExpr{
																											pos: position{line: 191, col: 17, offset: 7127},
																											run: (*parser).callonDocumentBlock541,
																											expr: &seqExpr{
																												pos: position{line: 191, col: 17, offset: 7127},
																												exprs: []interface{}{
																													&notExpr{
																														pos: position{line: 191, col: 17, offset: 7127},
																														expr: &actionExpr{
																															pos: position{line: 231, col: 14, offset: 8674},
																															run: (*parser).callonDocumentBlock544,
																															expr: &litMatcher{
																																pos:        position{line: 231, col: 14, offset: 8674},
																																val:        "verse",
																																ignoreCase: false,
																															},
																														},
																													},
																													&notExpr{
																														pos: position{line: 191, col: 28, offset: 7138},
																														expr: &actionExpr{
																															pos: position{line: 975, col: 16, offset: 40537},
																															run: (*parser).callonDocumentBlock547,
																															expr: &litMatcher{
																																pos:        position{line: 975, col: 16, offset: 40537},
																																val:        "literal",
																																ignoreCase: false,
																															},
																														},
																													},
																													&labeledExpr{
																														pos:   position{line: 191, col: 41, offset: 7151},
																														label: "key",
																														expr: &oneOrMoreExpr{
																															pos: position{line: 191, col: 45, offset: 7155},
																															expr: &seqExpr{
																																pos: position{line: 191, col: 46, offset: 7156},
																																exprs: []interface{}{
																																	&notExpr{
																																		pos: position{line: 191, col: 46, offset: 7156},
																																		expr: &litMatcher{
																																			pos:        position{line: 191, col: 47, offset: 7157},
																																			val:        "=",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 191, col: 51, offset: 7161},
																																		expr: &litMatcher{
																																			pos:        position{line: 191, col: 52, offset: 7162},
																																			val:        ",",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 191, col: 56, offset: 7166},
																																		expr: &litMatcher{
																																			pos:        position{line: 191, col: 57, offset: 7167},
																																			val:        "]",
																																			ignoreCase: false,
																																		},
																																	},
																																	&anyMatcher{
																																		line: 191, col: 61, offset: 7171,
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																									&zeroOrOneExpr{
																										pos: position{line: 187, col: 24, offset: 7021},
																										expr: &litMatcher{
																											pos:        position{line: 187, col: 24, offset: 7021},
																											val:        ",",
																											ignoreCase: false,
																										},
																									},
																									&zeroOrMoreExpr{
																										pos: position{line: 187, col: 29, offset: 7026},
																										expr: &choiceExpr{
																											pos: position{line: 1024, col: 7, offset: 41621},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1024, col: 7, offset: 41621},
																													val:        " ",
																													ignoreCase: false,
																												},
																												&actionExpr{
																													pos: position{line: 1024, col: 13, offset: 41627},
																													run: (*parser).callonDocumentBlock564,
																													expr: &litMatcher{
																														pos:        position{line: 1024, col: 13, offset: 41627},
																														val:        "\t",
																														ignoreCase: false,
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																		&litMatcher{
																			pos:        position{line: 722, col: 40, offset: 30033},
																			val:        "]",
																			ignoreCase: false,
																		},
																	},
																},
															},
															&actionExpr{
																pos: position{line: 724, col: 9, offset: 30136},
																run: (*parser).callonDocumentBlock567,
																expr: &seqExpr{
																	pos: position{line: 724, col: 9, offset: 30136},
																	exprs: []interface{}{
																		&litMatcher{
																			pos:        position{line: 724, col: 9, offset: 30136},
																			val:        "[",
																			ignoreCase: false,
																		},
																		&labeledExpr{
																			pos:   position{line: 724, col: 13, offset: 30140},
																			label: "alt",
																			expr: &actionExpr{
																				pos: position{line: 732, col: 19, offset: 30461},
																				run: (*parser).callonDocumentBlock571,
																				expr: &oneOrMoreExpr{
																					pos: position{line: 732, col: 19, offset: 30461},
																					expr: &seqExpr{
																						pos: position{line: 732, col: 20, offset: 30462},
																						exprs: []interface{}{
																							&notExpr{
																								pos: position{line: 732, col: 20, offset: 30462},
																								expr: &litMatcher{
																									pos:        position{line: 732, col: 21, offset: 30463},
																									val:        ",",
																									ignoreCase: false,
																								},
																							},
																							&notExpr{
																								pos: position{line: 732, col: 25, offset: 30467},
																								expr: &litMatcher{
																									pos:        position{line: 732, col: 26, offset: 30468},
																									val:        "=",
																									ignoreCase: false,
																								},
																							},
																							&notExpr{
																								pos: position{line: 732, col: 30, offset: 30472},
																								expr: &litMatcher{
																									pos:        position{line: 732, col: 31, offset: 30473},
																									val:        "]",
																									ignoreCase: false,
																								},
																							},
																							&anyMatcher{
																								line: 732, col: 35, offset: 30477,
																							},
																						},
																					},
																				},
																			},
																		},
																		&zeroOrOneExpr{
																			pos: position{line: 724, col: 34, offset: 30161},
																			expr: &litMatcher{
																				pos:        position{line: 724, col: 34, offset: 30161},
																				val:        ",",
																				ignoreCase: false,
																			},
																		},
																		&labeledExpr{
																			pos:   position{line: 725, col: 9, offset: 30174},
																			label: "otherAttrs",
																			expr: &zeroOrMoreExpr{
																				pos: position{line: 725, col: 20, offset: 30185},
																				expr: &choiceExpr{
																					pos: position{line: 185, col: 21, offset: 6867},
																					alternatives: []interface{}{
																						&actionExpr{
																							pos: position{line: 185, col: 21, offset: 6867},
																							run: (*parser).callonDocumentBlock586,
																							expr: &seqExpr{
																								pos: position{line: 185, col: 21, offset: 6867},
																								exprs: []interface{}{
																									&labeledExpr{
																										pos:   position{line: 185, col: 21, offset: 6867},
																										label: "key",
																										expr: &actionExpr{
																											pos: position{line: 191, col: 17, offset: 7127},
																											run: (*parser).callonDocumentBlock589,
																											expr: &seqExpr{
																												pos: position{line: 191, col: 17, offset: 7127},
																												exprs: []interface{}{
																													&notExpr{
																														pos: position{line: 191, col: 17, offset: 7127},
																														expr: &actionExpr{
																															pos: position{line: 231, col: 14, offset: 8674},
																															run: (*parser).callonDocumentBlock592,
																															expr: &litMatcher{
																																pos:        position{line: 231, col: 14, offset: 8674},
																																val:        "verse",
																																ignoreCase: false,
																															},
																														},
																													},
																													&notExpr{
																														pos: position{line: 191, col: 28, offset: 7138},
																														expr: &actionExpr{
																															pos: position{line: 975, col: 16, offset: 40537},
																															run: (*parser).callonDocumentBlock595,
																															expr: &litMatcher{
																																pos:        position{line: 975, col: 16, offset: 40537},
																																val:        "literal",
																																ignoreCase: false,
																															},
																														},
																													},
																													&labeledExpr{
																														pos:   position{line: 191, col: 41, offset: 7151},
																														label: "key",
																														expr: &oneOrMoreExpr{
																															pos: position{line: 191, col: 45, offset: 7155},
																															expr: &seqExpr{
																																pos: position{line: 191, col: 46, offset: 7156},
																																exprs: []interface{}{
																																	&notExpr{
																																		pos: position{line: 191, col: 46, offset: 7156},
																																		expr: &litMatcher{
																																			pos:        position{line: 191, col: 47, offset: 7157},
																																			val:        "=",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 191, col: 51, offset: 7161},
																																		expr: &litMatcher{
																																			pos:        position{line: 191, col: 52, offset: 7162},
																																			val:        ",",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 191, col: 56, offset: 7166},
																																		expr: &litMatcher{
																																			pos:        position{line: 191, col: 57, offset: 7167},
																																			val:        "]",
																																			ignoreCase: false,
																																		},
																																	},
																																	&anyMatcher{
																																		line: 191, col: 61, offset: 7171,
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																									&litMatcher{
																										pos:        position{line: 185, col: 40, offset: 6886},
																										val:        "=",
																										ignoreCase: false,
																									},
																									&labeledExpr{
																										pos:   position{line: 185, col: 44, offset: 6890},
																										label: "value",
																										expr: &actionExpr{
																											pos: position{line: 195, col: 19, offset: 7230},
																											run: (*parser).callonDocumentBlock609,
																											expr: &labeledExpr{
																												pos:   position{line: 195, col: 19, offset: 7230},
																												label: "value",
																												expr: &zeroOrMoreExpr{
																													pos: position{line: 195, col: 25, offset: 7236},
																													expr: &seqExpr{
																														pos: position{line: 195, col: 26, offset: 7237},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 195, col: 26, offset: 7237},
																																expr: &litMatcher{
																																	pos:        position{line: 195, col: 27, offset: 7238},
																																	val:        "=",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 195, col: 31, offset: 7242},
																																expr: &litMatcher{
																																	pos:        position{line: 195, col: 32, offset: 7243},
																																	val:        ",",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 195, col: 36, offset: 7247},
																																expr: &litMatcher{
																																	pos:        position{line: 195, col: 37, offset: 7248},
																																	val:        "]",
																																	ignoreCase: false,
																																},
																															},
																															&anyMatcher{
																																line: 195, col: 41, offset: 7252,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																									&zeroOrOneExpr{
																										pos: position{line: 185, col: 67, offset: 6913},
																										expr: &litMatcher{
																											pos:        position{line: 185, col: 67, offset: 6913},
																											val:        ",",
																											ignoreCase: false,
																										},
																									},
																									&zeroOrMoreExpr{
																										pos: position{line: 185, col: 72, offset: 6918},
																										expr: &choiceExpr{
																											pos: position{line: 1024, col: 7, offset: 41621},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1024, col: 7, offset: 41621},
																													val:        " ",
																													ignoreCase: false,
																												},
																												&actionExpr{
																													pos: position{line: 1024, col: 13, offset: 41627},
																													run: (*parser).callonDocumentBlock625,
																													expr: &litMatcher{
																														pos:        position{line: 1024, col: 13, offset: 41627},
																														val:        "\t",
																														ignoreCase: false,
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 187, col: 5, offset: 7002},
																							run: (*parser).callonDocumentBlock627,
																							expr: &seqExpr{
																								pos: position{line: 187, col: 5, offset: 7002},
																								exprs: []interface{}{
																									&labeledExpr{
																										pos:   position{line: 187, col: 5, offset: 7002},
																										label: "key",
																										expr: &actionExpr{
																											pos: position{line: 191, col: 17, offset: 7127},
																											run: (*parser).callonDocumentBlock630,
																											expr: &seqExpr{
																												pos: position{line: 191, col: 17, offset: 7127},
																												exprs: []interface{}{
																													&notExpr{
																														pos: position{line: 191, col: 17, offset: 7127},
																														expr: &actionExpr{
																															pos: position{line: 231, col: 14, offset: 8674},
																															run: (*parser).callonDocumentBlock633,
																															expr: &litMatcher{
																																pos:        position{line: 231, col: 14, offset: 8674},
																																val:        "verse",
																																ignoreCase: false,
																															},
																														},
																													},
																													&notExpr{
																														pos: position{line: 191, col: 28, offset: 7138},
																														expr: &actionExpr{
																															pos: position{line: 975, col: 16, offset: 40537},
																															run: (*parser).callonDocumentBlock636,
																															expr: &litMatcher{
																																pos:        position{line: 975, col: 16, offset: 40537},
																																val:        "literal",
																																ignoreCase: false,
																															},
																														},
																													},
																													&labeledExpr{
																														pos:   position{line: 191, col: 41, offset: 7151},
																														label: "key",
																														expr: &oneOrMoreExpr{
																															pos: position{line: 191, col: 45, offset: 7155},
																															expr: &seqExpr{
																																pos: position{line: 191, col: 46, offset: 7156},
																																exprs: []interface{}{
																																	&notExpr{
																																		pos: position{line: 191, col: 46, offset: 7156},
																																		expr: &litMatcher{
																																			pos:        position{line: 191, col: 47, offset: 7157},
																																			val:        "=",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 191, col: 51, offset: 7161},
																																		expr: &litMatcher{
																																			pos:        position{line: 191, col: 52, offset: 7162},
																																			val:        ",",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 191, col: 56, offset: 7166},
																																		expr: &litMatcher{
																																			pos:        position{line: 191, col: 57, offset: 7167},
																																			val:        "]",
																																			ignoreCase: false,
																																		},
																																	},
																																	&anyMatcher{
																																		line: 191, col: 61, offset: 7171,
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																									&zeroOrOneExpr{
																										pos: position{line: 187, col: 24, offset: 7021},
																										expr: &litMatcher{
																											pos:        position{line: 187, col: 24, offset: 7021},
																											val:        ",",
																											ignoreCase: false,
																										},
																									},
																									&zeroOrMoreExpr{
																										pos: position{line: 187, col: 29, offset: 7026},
																										expr: &choiceExpr{
																											pos: position{line: 1024, col: 7, offset: 41621},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1024, col: 7, offset: 41621},
																													val:        " ",
																													ignoreCase: false,
																												},
																												&actionExpr{
																													pos: position{line: 1024, col: 13, offset: 41627},
																													run: (*parser).callonDocumentBlock653,
																													expr: &litMatcher{
																														pos:        position{line: 1024, col: 13, offset: 41627},
																														val:        "\t",
																														ignoreCase: false,
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																		&litMatcher{
																			pos:        position{line: 725, col: 40, offset: 30205},
																			val:        "]",
																			ignoreCase: false,
																		},
																	},
																},
															},
															&actionExpr{
																pos: position{line: 727, col: 9, offset: 30306},
																run: (*parser).callonDocumentBlock656,
																expr: &seqExpr{
																	pos: position{line: 727, col: 9, offset: 30306},
																	exprs: []interface{}{
																		&litMatcher{
																			pos:        position{line: 727, col: 9, offset: 30306},
																			val:        "[",
																			ignoreCase: false,
																		},
																		&labeledExpr{
																			pos:   position{line: 727, col: 13, offset: 30310},
																			label: "otherAttrs",
																			expr: &zeroOrMoreExpr{
																				pos: position{line: 727, col: 24, offset: 30321},
																				expr: &choiceExpr{
																					pos: position{line: 185, col: 21, offset: 6867},
																					alternatives: []interface{}{
																						&actionExpr{
																							pos: position{line: 185, col: 21, offset: 6867},
																							run: (*parser).callonDocumentBlock662,
																							expr: &seqExpr{
																								pos: position{line: 185, col: 21, offset: 6867},
																								exprs: []interface{}{
																									&labeledExpr{
																										pos:   position{line: 185, col: 21, offset: 6867},
																										label: "key",
																										expr: &actionExpr{
																											pos: position{line: 191, col: 17, offset: 7127},
																											run: (*parser).callonDocumentBlock665,
																											expr: &seqExpr{
																												pos: position{line: 191, col: 17, offset: 7127},
																												exprs: []interface{}{
																													&notExpr{
																														pos: position{line: 191, col: 17, offset: 7127},
																														expr: &actionExpr{
																															pos: position{line: 231, col: 14, offset: 8674},
																															run: (*parser).callonDocumentBlock668,
																															expr: &litMatcher{
																																pos:        position{line: 231, col: 14, offset: 8674},
																																val:        "verse",
																																ignoreCase: false,
																															},
																														},
																													},
																													&notExpr{
																														pos: position{line: 191, col: 28, offset: 7138},
																														expr: &actionExpr{
																															pos: position{line: 975, col: 16, offset: 40537},
																															run: (*parser).callonDocumentBlock671,
																															expr: &litMatcher{
																																pos:        position{line: 975, col: 16, offset: 40537},
																																val:        "literal",
																																ignoreCase: false,
																															},
																														},
																													},
																													&labeledExpr{
																														pos:   position{line: 191, col: 41, offset: 7151},
																														label: "key",
																														expr: &oneOrMoreExpr{
																															pos: position{line: 191, col: 45, offset: 7155},
																															expr: &seqExpr{
																																pos: position{line: 191, col: 46, offset: 7156},
																																exprs: []interface{}{
																																	&notExpr{
																																		pos: position{line: 191, col: 46, offset: 7156},
																																		expr: &litMatcher{
																																			pos:        position{line: 191, col: 47, offset: 7157},
																																			val:        "=",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 191, col: 51, offset: 7161},
																																		expr: &litMatcher{
																																			pos:        position{line: 191, col: 52, offset: 7162},
																																			val:        ",",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 191, col: 56, offset: 7166},
																																		expr: &litMatcher{
																																			pos:        position{line: 191, col: 57, offset: 7167},
																																			val:        "]",
																																			ignoreCase: false,
																																		},
																																	},
																																	&anyMatcher{
																																		line: 191, col: 61, offset: 7171,
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																									&litMatcher{
																										pos:        position{line: 185, col: 40, offset: 6886},
																										val:        "=",
																										ignoreCase: false,
																									},
																									&labeledExpr{
																										pos:   position{line: 185, col: 44, offset: 6890},
																										label: "value",
																										expr: &actionExpr{
																											pos: position{line: 195, col: 19, offset: 7230},
																											run: (*parser).callonDocumentBlock685,
																											expr: &labeledExpr{
																												pos:   position{line: 195, col: 19, offset: 7230},
																												label: "value",
																												expr: &zeroOrMoreExpr{
																													pos: position{line: 195, col: 25, offset: 7236},
																													expr: &seqExpr{
																														pos: position{line: 195, col: 26, offset: 7237},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 195, col: 26, offset: 7237},
																																expr: &litMatcher{
																																	pos:        position{line: 195, col: 27, offset: 7238},
																																	val:        "=",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 195, col: 31, offset: 7242},
																																expr: &litMatcher{
																																	pos:        position{line: 195, col: 32, offset: 7243},
																																	val:        ",",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 195, col: 36, offset: 7247},
																																expr: &litMatcher{
																																	pos:        position{line: 195, col: 37, offset: 7248},
																																	val:        "]",
																																	ignoreCase: false,
																																},
																															},
																															&anyMatcher{
																																line: 195, col: 41, offset: 7252,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																									&zeroOrOneExpr{
																										pos: position{line: 185, col: 67, offset: 6913},
																										expr: &litMatcher{
																											pos:        position{line: 185, col: 67, offset: 6913},
																											val:        ",",
																											ignoreCase: false,
																										},
																									},
																									&zeroOrMoreExpr{
																										pos: position{line: 185, col: 72, offset: 6918},
																										expr: &choiceExpr{
																											pos: position{line: 1024, col: 7, offset: 41621},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1024, col: 7, offset: 41621},
																													val:        " ",
																													ignoreCase: false,
																												},
																												&actionExpr{
																													pos: position{line: 1024, col: 13, offset: 41627},
																													run: (*parser).callonDocumentBlock701,
																													expr: &litMatcher{
																														pos:        position{line: 1024, col: 13, offset: 41627},
																														val:        "\t",
																														ignoreCase: false,
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 187, col: 5, offset: 7002},
																							run: (*parser).callonDocumentBlock703,
																							expr: &seqExpr{
																								pos: position{line: 187, col: 5, offset: 7002},
																								exprs: []interface{}{
																									&labeledExpr{
																										pos:   position{line: 187, col: 5, offset: 7002},
																										label: "key",
																										expr: &actionExpr{
																											pos: position{line: 191, col: 17, offset: 7127},
																											run: (*parser).callonDocumentBlock706,
																											expr: &seqExpr{
																												pos: position{line: 191, col: 17, offset: 7127},
																												exprs: []interface{}{
																													&notExpr{
																														pos: position{line: 191, col: 17, offset: 7127},
																														expr: &actionExpr{
																															pos: position{line: 231, col: 14, offset: 8674},
																															run: (*parser).callonDocumentBlock709,
																															expr: &litMatcher{
																																pos:        position{line: 231, col: 14, offset: 8674},
																																val:        "verse",
																																ignoreCase: false,
																															},
																														},
																													},
																													&notExpr{
																														pos: position{line: 191, col: 28, offset: 7138},
																														expr: &actionExpr{
																															pos: position{line: 975, col: 16, offset: 40537},
																															run: (*parser).callonDocumentBlock712,
																															expr: &litMatcher{
																																pos:        position{line: 975, col: 16, offset: 40537},
																																val:        "literal",
																																ignoreCase: false,
																															},
																														},
																													},
																													&labeledExpr{
																														pos:   position{line: 191, col: 41, offset: 7151},
																														label: "key",
																														expr: &oneOrMoreExpr{
																															pos: position{line: 191, col: 45, offset: 7155},
																															expr: &seqExpr{
																																pos: position{line: 191, col: 46, offset: 7156},
																																exprs: []interface{}{
																																	&notExpr{
																																		pos: position{line: 191, col: 46, offset: 7156},
																																		expr: &litMatcher{
																																			pos:        position{line: 191, col: 47, offset: 7157},
																																			val:        "=",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 191, col: 51, offset: 7161},
																																		expr: &litMatcher{
																																			pos:        position{line: 191, col: 52, offset: 7162},
																																			val:        ",",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 191, col: 56, offset: 7166},
																																		expr: &litMatcher{
																																			pos:        position{line: 191, col: 57, offset: 7167},
																																			val:        "]",
																																			ignoreCase: false,
																																		},
																																	},
																																	&anyMatcher{
																																		line: 191, col: 61, offset: 7171,
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																									&zeroOrOneExpr{
																										pos: position{line: 187, col: 24, offset: 7021},
																										expr: &litMatcher{
																											pos:        position{line: 187, col: 24, offset: 7021},
																											val:        ",",
																											ignoreCase: false,
																										},
																									},
																									&zeroOrMoreExpr{
																										pos: position{line: 187, col: 29, offset: 7026},
																										expr: &choiceExpr{
																											pos: position{line: 1024, col: 7, offset: 41621},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1024, col: 7, offset: 41621},
																													val:        " ",
																													ignoreCase: false,
																												},
																												&actionExpr{
																													pos: position{line: 1024, col: 13, offset: 41627},
																													run: (*parser).callonDocumentBlock729,
																													expr: &litMatcher{
																														pos:        position{line: 1024, col: 13, offset: 41627},
																														val:        "\t",
																														ignoreCase: false,
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																		&litMatcher{
																			pos:        position{line: 727, col: 44, offset: 30341},
																			val:        "]",
																			ignoreCase: false,
																		},
																	},
																},
															},
														},
													},
												},
												&zeroOrMoreExpr{
													pos: position{line: 706, col: 102, offset: 29266},
													expr: &choiceExpr{
														pos: position{line: 1024, col: 7, offset: 41621},
														alternatives: []interface{}{
															&litMatcher{
																pos:        position{line: 1024, col: 7, offset: 41621},
																val:        " ",
																ignoreCase: false,
															},
															&actionExpr{
																pos: position{line: 1024, col: 13, offset: 41627},
																run: (*parser).callonDocumentBlock735,
																expr: &litMatcher{
																	pos:        position{line: 1024, col: 13, offset: 41627},
																	val:        "\t",
																	ignoreCase: false,
																},
															},
														},
													},
												},
												&choiceExpr{
													pos: position{line: 1032, col: 8, offset: 41723},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1028, col: 12, offset: 41683},
															val:        "\r\n",
															ignoreCase: false,
														},
														&charClassMatcher{
															pos:        position{line: 1028, col: 21, offset: 41692},
															val:        "[\\r\\n]",
															chars:      []rune{'\r', '\n'},
															ignoreCase: false,
															inverted:   false,
														},
														&notExpr{
															pos: position{line: 1030, col: 8, offset: 41712},
															expr: &anyMatcher{
																line: 1030, col: 9, offset: 41713,
															},
														},
													},
												},
											},
										},
									},
									&actionExpr{
										pos: position{line: 950, col: 24, offset: 39438},
										run: (*parser).callonDocumentBlock742,
										expr: &seqExpr{
											pos: position{line: 950, col: 24, offset: 39438},
											exprs: []interface{}{
												&labeledExpr{
													pos:   position{line: 950, col: 24, offset: 39438},
													label: "attributes",
													expr: &zeroOrMoreExpr{
														pos: position{line: 950, col: 35, offset: 39449},
														expr: &actionExpr{
															pos: position{line: 136, col: 21, offset: 5188},
															run: (*parser).callonDocumentBlock746,
															expr: &seqExpr{
																pos: position{line: 136, col: 21, offset: 5188},
																exprs: []interface{}{
																	&labeledExpr{
																		pos:   position{line: 136, col: 21, offset: 5188},
																		label: "attr",
																		expr: &choiceExpr{
																			pos: position{line: 136, col: 27, offset: 5194},
																			alternatives: []interface{}{
																				&actionExpr{
																					pos: position{line: 145, col: 14, offset: 5645},
																					run: (*parser).callonDocumentBlock750,
																					expr: &labeledExpr{
																						pos:   position{line: 145, col: 14, offset: 5645},
																						label: "id",
																						expr: &actionExpr{
																							pos: position{line: 151, col: 20, offset: 5775},
																							run: (*parser).callonDocumentBlock752,
																							expr: &seqExpr{
																								pos: position{line: 151, col: 20, offset: 5775},
																								exprs: []interface{}{
																									&litMatcher{
																										pos:        position{line: 151, col: 20, offset: 5775},
																										val:        "[[",
																										ignoreCase: false,
																									},
																									&labeledExpr{
																										pos:   position{line: 151, col: 25, offset: 5780},
																										label: "id",
																										expr: &actionExpr{
																											pos: position{line: 1010, col: 7, offset: 41339},
																											run: (*parser).callonDocumentBlock756,
																											expr: &oneOrMoreExpr{
																												pos: position{line: 1010, col: 7, offset: 41339},
																												expr: &seqExpr{
																													pos: position{line: 1010, col: 8, offset: 41340},
																													exprs: []interface{}{
																														&notExpr{
																															pos: position{line: 1010, col: 8, offset: 41340},
																															expr: &choiceExpr{
																																pos: position{line: 1028, col: 12, offset: 41683},
																																alternatives: []interface{}{
																																	&litMatcher{
																																		pos:        position{line: 1028, col: 12, offset: 41683},
																																		val:        "\r\n",
																																		ignoreCase: false,
																																	},
																																	&charClassMatcher{
																																		pos:        position{line: 1028, col: 21, offset: 41692},
																																		val:        "[\\r\\n]",
																																		chars:      []rune{'\r', '\n'},
																																		ignoreCase: false,
																																		inverted:   false,
																																	},
																																},
																															},
																														},
																														&notExpr{
																															pos: position{line: 1010, col: 17, offset: 41349},
																															expr: &choiceExpr{
																																pos: position{line: 1024, col: 7, offset: 41621},
																																alternatives: []interface{}{
																																	&litMatcher{
																																		pos:        position{line: 1024, col: 7, offset: 41621},
																																		val:        " ",
																																		ignoreCase: false,
																																	},
																																	&actionExpr{
																																		pos: position{line: 1024, col: 13, offset: 41627},
																																		run: (*parser).callonDocumentBlock766,
																																		expr: &litMatcher{
																																			pos:        position{line: 1024, col: 13, offset: 41627},
																																			val:        "\t",
																																			ignoreCase: false,
																																		},
																																	},
																																},
																															},
																														},
																														&notExpr{
																															pos: position{line: 1010, col: 21, offset: 41353},
																															expr: &litMatcher{
																																pos:        position{line: 1010, col: 22, offset: 41354},
																																val:        "[",
																																ignoreCase: false,
																															},
																														},
																														&notExpr{
																															pos: position{line: 1010, col: 26, offset: 41358},
																															expr: &litMatcher{
																																pos:        position{line: 1010, col: 27, offset: 41359},
																																val:        "]",
																																ignoreCase: false,
																															},
																														},
																														&notExpr{
																															pos: position{line: 1010, col: 31, offset: 41363},
																															expr: &litMatcher{
																																pos:        position{line: 1010, col: 32, offset: 41364},
																																val:        "<<",
																																ignoreCase: false,
																															},
																														},
																														&notExpr{
																															pos: position{line: 1010, col: 37, offset: 41369},
																															expr: &litMatcher{
																																pos:        position{line: 1010, col: 38, offset: 41370},
																																val:        ">>",
																																ignoreCase: false,
																															},
																														},
																														&notExpr{
																															pos: position{line: 1010, col: 43, offset: 41375},
																															expr: &litMatcher{
																																pos:        position{line: 1010, col: 44, offset: 41376},
																																val:        ",",
																																ignoreCase: false,
																															},
																														},
																														&anyMatcher{
																															line: 1010, col: 48, offset: 41380,
																														},
																													},
																												},
																											},
																										},
																									},
																									&litMatcher{
																										pos:        position{line: 151, col: 33, offset: 5788},
																										val:        "]]",
																										ignoreCase: false,
																									},
																								},
																							},
																						},
																					},
																				},
																				&actionExpr{
																					pos: position{line: 147, col: 5, offset: 5691},
																					run: (*parser).callonDocumentBlock780,
																					expr: &seqExpr{
																						pos: position{line: 147, col: 5, offset: 5691},
																						exprs: []interface{}{
																							&litMatcher{
																								pos:        position{line: 147, col: 5, offset: 5691},
																								val:        "[#",
																								ignoreCase: false,
																							},
																							&labeledExpr{
																								pos:   position{line: 147, col: 10, offset: 5696},
																								label: "id",
																								expr: &actionExpr{
																									pos: position{line: 1010, col: 7, offset: 41339},
																									run: (*parser).callonDocumentBlock784,
																									expr: &oneOrMoreExpr{
																										pos: position{line: 1010, col: 7, offset: 41339},
																										expr: &seqExpr{
																											pos: position{line: 1010, col: 8, offset: 41340},
																											exprs: []interface{}{
																												&notExpr{
																													pos: position{line: 1010, col: 8, offset: 41340},
																													expr: &choiceExpr{
																														pos: position{line: 1028, col: 12, offset: 41683},
																														alternatives: []interface{}{
																															&litMatcher{
																																pos:        position{line: 1028, col: 12, offset: 41683},
																																val:        "\r\n",
																																ignoreCase: false,
																															},
																															&charClassMatcher{
																																pos:        position{line: 1028, col: 21, offset: 41692},
																																val:        "[\\r\\n]",
																																chars:      []rune{'\r', '\n'},
																																ignoreCase: false,
																																inverted:   false,
																															},
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 1010, col: 17, offset: 41349},
																													expr: &choiceExpr{
																														pos: position{line: 1024, col: 7, offset: 41621},
																														alternatives: []interface{}{
																															&litMatcher{
																																pos:        position{line: 1024, col: 7, offset: 41621},
																																val:        " ",
																																ignoreCase: false,
																															},
																															&actionExpr{
																																pos: position{line: 1024, col: 13, offset: 41627},
																																run: (*parser).callonDocumentBlock794,
																																expr: &litMatcher{
																																	pos:        position{line: 1024, col: 13, offset: 41627},
																																	val:        "\t",
																																	ignoreCase: false,
																																},
																															},
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 1010, col: 21, offset: 41353},
																													expr: &litMatcher{
																														pos:        position{line: 1010, col: 22, offset: 41354},
																														val:        "[",
																														ignoreCase: false,
																													},
																												},
																												&notExpr{
																													pos: position{line: 1010, col: 26, offset: 41358},
																													expr: &litMatcher{
																														pos:        position{line: 1010, col: 27, offset: 41359},
																														val:        "]",
																														ignoreCase: false,
																													},
																												},
																												&notExpr{
																													pos: position{line: 1010, col: 31, offset: 41363},
																													expr: &litMatcher{
																														pos:        position{line: 1010, col: 32, offset: 41364},
																														val:        "<<",
																														ignoreCase: false,
																													},
																												},
																												&notExpr{
																													pos: position{line: 1010, col: 37, offset: 41369},
																													expr: &litMatcher{
																														pos:        position{line: 1010, col: 38, offset: 41370},
																														val:        ">>",
																														ignoreCase: false,
																													},
																												},
																												&notExpr{
																													pos: position{line: 1010, col: 43, offset: 41375},
																													expr: &litMatcher{
																														pos:        position{line: 1010, col: 44, offset: 41376},
																														val:        ",",
																														ignoreCase: false,
																													},
																												},
																												&anyMatcher{
																													line: 1010, col: 48, offset: 41380,
																												},
																											},
																										},
																									},
																								},
																							},
																							&litMatcher{
																								pos:        position{line: 147, col: 18, offset: 5704},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																					},
																				},
																				&actionExpr{
																					pos: position{line: 157, col: 17, offset: 5997},
																					run: (*parser).callonDocumentBlock808,
																					expr: &seqExpr{
																						pos: position{line: 157, col: 17, offset: 5997},
																						exprs: []interface{}{
																							&litMatcher{
																								pos:        position{line: 157, col: 17, offset: 5997},
																								val:        ".",
																								ignoreCase: false,
																							},
																							&notExpr{
																								pos: position{line: 157, col: 21, offset: 6001},
																								expr: &litMatcher{
																									pos:        position{line: 157, col: 22, offset: 6002},
																									val:        ".",
																									ignoreCase: false,
																								},
																							},
																							&notExpr{
																								pos: position{line: 157, col: 26, offset: 6006},
																								expr: &choiceExpr{
																									pos: position{line: 1024, col: 7, offset: 41621},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1024, col: 7, offset: 41621},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1024, col: 13, offset: 41627},
																											run: (*parser).callonDocumentBlock816,
																											expr: &litMatcher{
																												pos:        position{line: 1024, col: 13, offset: 41627},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																							&labeledExpr{
																								pos:   position{line: 157, col: 30, offset: 6010},
																								label: "title",
																								expr: &actionExpr{
																									pos: position{line: 161, col: 24, offset: 6115},
																									run: (*parser).callonDocumentBlock819,
																									expr: &oneOrMoreExpr{
																										pos: position{line: 161, col: 24, offset: 6115},
																										expr: &seqExpr{
																											pos: position{line: 161, col: 25, offset: 6116},
																											exprs: []interface{}{
																												&notExpr{
																													pos: position{line: 161, col: 25, offset: 6116},
																													expr: &choiceExpr{
																														pos: position{line: 1028, col: 12, offset: 41683},
																														alternatives: []interface{}{
																															&litMatcher{
																																pos:        position{line: 1028, col: 12, offset: 41683},
																																val:        "\r\n",
																																ignoreCase: false,
																															},
																															&charClassMatcher{
																																pos:        position{line: 1028, col: 21, offset: 41692},
																																val:        "[\\r\\n]",
																																chars:      []rune{'\r', '\n'},
																																ignoreCase: false,
																																inverted:   false,
																															},
																														},
																													},
																												},
																												&anyMatcher{
																													line: 161, col: 34, offset: 6125,
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																				&actionExpr{
																					pos: position{line: 167, col: 16, offset: 6274},
																					run: (*parser).callonDocumentBlock827,
																					expr: &seqExpr{
																						pos: position{line: 167, col: 16, offset: 6274},
																						exprs: []interface{}{
																							&litMatcher{
																								pos:        position{line: 167, col: 16, offset: 6274},
																								val:        "[.",
																								ignoreCase: false,
																							},
																							&notExpr{
																								pos: position{line: 167, col: 21, offset: 6279},
																								expr: &choiceExpr{
																									pos: position{line: 1024, col: 7, offset: 41621},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1024, col: 7, offset: 41621},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1024, col: 13, offset: 41627},
																											run: (*parser).callonDocumentBlock833,
																											expr: &litMatcher{
																												pos:        position{line: 1024, col: 13, offset: 41627},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																							&labeledExpr{
																								pos:   position{line: 167, col: 25, offset: 6283},
																								label: "role",
																								expr: &actionExpr{
																									pos: position{line: 171, col: 23, offset: 6387},
																									run: (*parser).callonDocumentBlock836,
																									expr: &oneOrMoreExpr{
																										pos: position{line: 171, col: 23, offset: 6387},
																										expr: &seqExpr{
																											pos: position{line: 171, col: 24, offset: 6388},
																											exprs: []interface{}{
																												&notExpr{
																													pos: position{line: 171, col: 24, offset: 6388},
																													expr: &choiceExpr{
																														pos: position{line: 1028, col: 12, offset: 41683},
																														alternatives: []interface{}{
																															&litMatcher{
																																pos:        position{line: 1028, col: 12, offset: 41683},
																																val:        "\r\n",
																																ignoreCase: false,
																															},
																															&charClassMatcher{
																																pos:        position{line: 1028, col: 21, offset: 41692},
																																val:        "[\\r\\n]",
																																chars:      []rune{'\r', '\n'},
																																ignoreCase: false,
																																inverted:   false,
																															},
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 171, col: 33, offset: 6397},
																													expr: &litMatcher{
																														pos:        position{line: 171, col: 34, offset: 6398},
																														val:        "]",
																														ignoreCase: false,
																													},
																												},
																												&anyMatcher{
																													line: 171, col: 38, offset: 6402,
																												},
																											},
																										},
																									},
																								},
																							},
																							&litMatcher{
																								pos:        position{line: 167, col: 51, offset: 6309},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																					},
																				},
																				&actionExpr{
																					pos: position{line: 176, col: 30, offset: 6551},
																					run: (*parser).callonDocumentBlock847,
																					expr: &seqExpr{
																						pos: position{line: 176, col: 30, offset: 6551},
																						exprs: []interface{}{
																							&litMatcher{
																								pos:        position{line: 176, col: 30, offset: 6551},
																								val:        "[",
																								ignoreCase: false,
																							},
																							&labeledExpr{
																								pos:   position{line: 176, col: 34, offset: 6555},
																								label: "k",
																								expr: &choiceExpr{
																									pos: position{line: 494, col: 19, offset: 19245},
																									alternatives: []interface{}{
																										&actionExpr{
																											pos: position{line: 494, col: 19, offset: 19245},
																											run: (*parser).callonDocumentBlock852,
																											expr: &litMatcher{
																												pos:        position{line: 494, col: 19, offset: 19245},
																												val:        "TIP",
																												ignoreCase: false,
																											},
																										},
																										&actionExpr{
																											pos: position{line: 496, col: 5, offset: 19283},
																											run: (*parser).callonDocumentBlock854,
																											expr: &litMatcher{
																												pos:        position{line: 496, col: 5, offset: 19283},
																												val:        "NOTE",
																												ignoreCase: false,
																											},
																										},
																										&actionExpr{
																											pos: position{line: 498, col: 5, offset: 19323},
																											run: (*parser).callonDocumentBlock856,
																											expr: &litMatcher{
																												pos:        position{line: 498, col: 5, offset: 19323},
																												val:        "IMPORTANT",
																												ignoreCase: false,
																											},
																										},
																										&actionExpr{
																											pos: position{line: 500, col: 5, offset: 19373},
																											run: (*parser).callonDocumentBlock858,
																											expr: &litMatcher{
																												pos:        position{line: 500, col: 5, offset: 19373},
																												val:        "WARNING",
																												ignoreCase: false,
																											},
																										},
																										&actionExpr{
																											pos: position{line: 502, col: 5, offset: 19419},
																											run: (*parser).callonDocumentBlock860,
																											expr: &litMatcher{
																												pos:        position{line: 502, col: 5, offset: 19419},
																												val:        "CAUTION",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																							&litMatcher{
																								pos:        position{line: 176, col: 53, offset: 6574},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																					},
																				},
																				&actionExpr{
																					pos: position{line: 199, col: 21, offset: 7312},
																					run: (*parser).callonDocumentBlock863,
																					expr: &litMatcher{
																						pos:        position{line: 199, col: 21, offset: 7312},
																						val:        "[horizontal]",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 181, col: 19, offset: 6735},
																					run: (*parser).callonDocumentBlock865,
																					expr: &seqExpr{
																						pos: position{line: 181, col: 19, offset: 6735},
																						exprs: []interface{}{
																							&litMatcher{
																								pos:        position{line: 181, col: 19, offset: 6735},
																								val:        "[",
																								ignoreCase: false,
																							},
																							&notExpr{
																								pos: position{line: 181, col: 23, offset: 6739},
																								expr: &choiceExpr{
																									pos: position{line: 1024, col: 7, offset: 41621},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1024, col: 7, offset: 41621},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1024, col: 13, offset: 41627},
																											run: (*parser).callonDocumentBlock871,
																											expr: &litMatcher{
																												pos:        position{line: 1024, col: 13, offset: 41627},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																							&labeledExpr{
																								pos:   position{line: 181, col: 27, offset: 6743},
																								label: "attributes",
																								expr: &zeroOrMoreExpr{
																									pos: position{line: 181, col: 38, offset: 6754},
																									expr: &choiceExpr{
																										pos: position{line: 185, col: 21, offset: 6867},
																										alternatives: []interface{}{
																											&actionExpr{
																												pos: position{line: 185, col: 21, offset: 6867},
																												run: (*parser).callonDocumentBlock876,
																												expr: &seqExpr{
																													pos: position{line: 185, col: 21, offset: 6867},
																													exprs: []interface{}{
																														&labeledExpr{
																															pos:   position{line: 185, col: 21, offset: 6867},
																															label: "key",
																															expr: &actionExpr{
																																pos: position{line: 191, col: 17, offset: 7127},
																																run: (*parser).callonDocumentBlock879,
																																expr: &seqExpr{
																																	pos: position{line: 191, col: 17, offset: 7127},
																																	exprs: []interface{}{
																																		&notExpr{
																																			pos: position{line: 191, col: 17, offset: 7127},
																																			expr: &actionExpr{
																																				pos: position{line: 231, col: 14, offset: 8674},
																																				run: (*parser).callonDocumentBlock882,
																																				expr: &litMatcher{
																																					pos:        position{line: 231, col: 14, offset: 8674},
																																					val:        "verse",
																																					ignoreCase: false,
																																				},
																																			},
																																		},
																																		&notExpr{
																																			pos: position{line: 191, col: 28, offset: 7138},
																																			expr: &actionExpr{
																																				pos: position{line: 975, col: 16, offset: 40537},
																																				run: (*parser).callonDocumentBlock885,
																																				expr: &litMatcher{
																																					pos:        position{line: 975, col: 16, offset: 40537},
																																					val:        "literal",
																																					ignoreCase: false,
																																				},
																																			},
																																		},
																																		&labeledExpr{
																																			pos:   position{line: 191, col: 41, offset: 7151},
																																			label: "key",
																																			expr: &oneOrMoreExpr{
																																				pos: position{line: 191, col: 45, offset: 7155},
																																				expr: &seqExpr{
																																					pos: position{line: 191, col: 46, offset: 7156},
																																					exprs: []interface{}{
																																						&notExpr{
																																							pos: position{line: 191, col: 46, offset: 7156},
																																							expr: &litMatcher{
																																								pos:        position{line: 191, col: 47, offset: 7157},
																																								val:        "=",
																																								ignoreCase: false,
																																							},
																																						},
																																						&notExpr{
																																							pos: position{line: 191, col: 51, offset: 7161},
																																							expr: &litMatcher{
																																								pos:        position{line: 191, col: 52, offset: 7162},
																																								val:        ",",
																																								ignoreCase: false,
																																							},
																																						},
																																						&notExpr{
																																							pos: position{line: 191, col: 56, offset: 7166},
																																							expr: &litMatcher{
																																								pos:        position{line: 191, col: 57, offset: 7167},
																																								val:        "]",
																																								ignoreCase: false,
																																							},
																																						},
																																						&anyMatcher{
																																							line: 191, col: 61, offset: 7171,
																																						},
																																					},
																																				},
																																			},
																																		},
																																	},
																																},
																															},
																														},
																														&litMatcher{
																															pos:        position{line: 185, col: 40, offset: 6886},
																															val:        "=",
																															ignoreCase: false,
																														},
																														&labeledExpr{
																															pos:   position{line: 185, col: 44, offset: 6890},
																															label: "value",
																															expr: &actionExpr{
																																pos: position{line: 195, col: 19, offset: 7230},
																																run: (*parser).callonDocumentBlock899,
																																expr: &labeledExpr{
																																	pos:   position{line: 195, col: 19, offset: 7230},
																																	label: "value",
																																	expr: &zeroOrMoreExpr{
																																		pos: position{line: 195, col: 25, offset: 7236},
																																		expr: &seqExpr{
																																			pos: position{line: 195, col: 26, offset: 7237},
																																			exprs: []interface{}{
																																				&notExpr{
																																					pos: position{line: 195, col: 26, offset: 7237},
																																					expr: &litMatcher{
																																						pos:        position{line: 195, col: 27, offset: 7238},
																																						val:        "=",
																																						ignoreCase: false,
																																					},
																																				},
																																				&notExpr{
																																					pos: position{line: 195, col: 31, offset: 7242},
																																					expr: &litMatcher{
																																						pos:        position{line: 195, col: 32, offset: 7243},
																																						val:        ",",
																																						ignoreCase: false,
																																					},
																																				},
																																				&notExpr{
																																					pos: position{line: 195, col: 36, offset: 7247},
																																					expr: &litMatcher{
																																						pos:        position{line: 195, col: 37, offset: 7248},
																																						val:        "]",
																																						ignoreCase: false,
																																					},
																																				},
																																				&anyMatcher{
																																					line: 195, col: 41, offset: 7252,
																																				},
																																			},
																																		},
																																	},
																																},
																															},
																														},
																														&zeroOrOneExpr{
																															pos: position{line: 185, col: 67, offset: 6913},
																															expr: &litMatcher{
																																pos:        position{line: 185, col: 67, offset: 6913},
																																val:        ",",
																																ignoreCase: false,
																															},
																														},
																														&zeroOrMoreExpr{
																															pos: position{line: 185, col: 72, offset: 6918},
																															expr: &choiceExpr{
																																pos: position{line: 1024, col: 7, offset: 41621},
																																alternatives: []interface{}{
																																	&litMatcher{
																																		pos:        position{line: 1024, col: 7, offset: 41621},
																																		val:        " ",
																																		ignoreCase: false,
																																	},
																																	&actionExpr{
																																		pos: position{line: 1024, col: 13, offset: 41627},
																																		run: (*parser).callonDocumentBlock915,
																																		expr: &litMatcher{
																																			pos:        position{line: 1024, col: 13, offset: 41627},
																																			val:        "\t",
																																			ignoreCase: false,
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																											&actionExpr{
																												pos: position{line: 187, col: 5, offset: 7002},
																												run: (*parser).callonDocumentBlock917,
																												expr: &seqExpr{
																													pos: position{line: 187, col: 5, offset: 7002},
																													exprs: []interface{}{
																														&labeledExpr{
																															pos:   position{line: 187, col: 5, offset: 7002},
																															label: "key",
																															expr: &actionExpr{
																																pos: position{line: 191, col: 17, offset: 7127},
																																run: (*parser).callonDocumentBlock920,
																																expr: &seqExpr{
																																	pos: position{line: 191, col: 17, offset: 7127},
																																	exprs: []interface{}{
																																		&notExpr{
																																			pos: position{line: 191, col: 17, offset: 7127},
																																			expr: &actionExpr{
																																				pos: position{line: 231, col: 14, offset: 8674},
																																				run: (*parser).callonDocumentBlock923,
																																				expr: &litMatcher{
																																					pos:        position{line: 231, col: 14, offset: 8674},
																																					val:        "verse",
																																					ignoreCase: false,
																																				},
																																			},
																																		},
																																		&notExpr{
																																			pos: position{line: 191, col: 28, offset: 7138},
																																			expr: &actionExpr{
																																				pos: position{line: 975, col: 16, offset: 40537},
																																				run: (*parser).callonDocumentBlock926,
																																				expr: &litMatcher{
																																					pos:        position{line: 975, col: 16, offset: 40537},
																																					val:        "literal",
																																					ignoreCase: false,
																																				},
																																			},
																																		},
																																		&labeledExpr{
																																			pos:   position{line: 191, col: 41, offset: 7151},
																																			label: "key",
																																			expr: &oneOrMoreExpr{
																																				pos: position{line: 191, col: 45, offset: 7155},
																																				expr: &seqExpr{
																																					pos: position{line: 191, col: 46, offset: 7156},
																																					exprs: []interface{}{
																																						&notExpr{
																																							pos: position{line: 191, col: 46, offset: 7156},
																																							expr: &litMatcher{
																																								pos:        position{line: 191, col: 47, offset: 7157},
																																								val:        "=",
																																								ignoreCase: false,
																																							},
																																						},
																																						&notExpr{
																																							pos: position{line: 191, col: 51, offset: 7161},
																																							expr: &litMatcher{
																																								pos:        position{line: 191, col: 52, offset: 7162},
																																								val:        ",",
																																								ignoreCase: false,
																																							},
																																						},
																																						&notExpr{
																																							pos: position{line: 191, col: 56, offset: 7166},
																																							expr: &litMatcher{
																																								pos:        position{line: 191, col: 57, offset: 7167},
																																								val:        "]",
																																								ignoreCase: false,
																																							},
																																						},
																																						&anyMatcher{
																																							line: 191, col: 61, offset: 7171,
																																						},
																																					},
																																				},
																																			},
																																		},
																																	},
																																},
																															},
																														},
																														&zeroOrOneExpr{
																															pos: position{line: 187, col: 24, offset: 7021},
																															expr: &litMatcher{
																																pos:        position{line: 187, col: 24, offset: 7021},
																																val:        ",",
																																ignoreCase: false,
																															},
																														},
																														&zeroOrMoreExpr{
																															pos: position{line: 187, col: 29, offset: 7026},
																															expr: &choiceExpr{
																																pos: position{line: 1024, col: 7, offset: 41621},
																																alternatives: []interface{}{
																																	&litMatcher{
																																		pos:        position{line: 1024, col: 7, offset: 41621},
																																		val:        " ",
																																		ignoreCase: false,
																																	},
																																	&actionExpr{
																																		pos: position{line: 1024, col: 13, offset: 41627},
																																		run: (*parser).callonDocumentBlock943,
																																		expr: &litMatcher{
																																			pos:        position{line: 1024, col: 13, offset: 41627},
																																			val:        "\t",
																																			ignoreCase: false,
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&litMatcher{
																								pos:        position{line: 181, col: 59, offset: 6775},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&zeroOrMoreExpr{
																		pos: position{line: 136, col: 131, offset: 5298},
																		expr: &choiceExpr{
																			pos: position{line: 1024, col: 7, offset: 41621},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1024, col: 7, offset: 41621},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1024, col: 13, offset: 41627},
																					run: (*parser).callonDocumentBlock949,
																					expr: &litMatcher{
																						pos:        position{line: 1024, col: 13, offset: 41627},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&choiceExpr{
																		pos: position{line: 1032, col: 8, offset: 41723},
																		alternatives: []interface{}{
																			&litMatcher{
																				pos:        position{line: 1028, col: 12, offset: 41683},
																				val:        "\r\n",
																				ignoreCase: false,
																			},
																			&charClassMatcher{
																				pos:        position{line: 1028, col: 21, offset: 41692},
																				val:        "[\\r\\n]",
																				chars:      []rune{'\r', '\n'},
																				ignoreCase: false,
																				inverted:   false,
																			},
																			&notExpr{
																				pos: position{line: 1030, col: 8, offset: 41712},
																				expr: &anyMatcher{
																					line: 1030, col: 9, offset: 41713,
																				},
																			},
																		},
																	},
																},
															},
														},
													},
												},
												&labeledExpr{
													pos:   position{line: 950, col: 55, offset: 39469},
													label: "content",
													expr: &actionExpr{
														pos: position{line: 955, col: 31, offset: 39700},
														run: (*parser).callonDocumentBlock957,
														expr: &seqExpr{
															pos: position{line: 955, col: 31, offset: 39700},
															exprs: []interface{}{
																&oneOrMoreExpr{
																	pos: position{line: 955, col: 31, offset: 39700},
																	expr: &choiceExpr{
																		pos: position{line: 1024, col: 7, offset: 41621},
																		alternatives: []interface{}{
																			&litMatcher{
																				pos:        position{line: 1024, col: 7, offset: 41621},
																				val:        " ",
																				ignoreCase: false,
																			},
																			&actionExpr{
																				pos: position{line: 1024, col: 13, offset: 41627},
																				run: (*parser).callonDocumentBlock962,
																				expr: &litMatcher{
																					pos:        position{line: 1024, col: 13, offset: 41627},
																					val:        "\t",
																					ignoreCase: false,
																				},
																			},
																		},
																	},
																},
																&notExpr{
																	pos: position{line: 955, col: 35, offset: 39704},
																	expr: &choiceExpr{
																		pos: position{line: 1028, col: 12, offset: 41683},
																		alternatives: []interface{}{
																			&litMatcher{
																				pos:        position{line: 1028, col: 12, offset: 41683},
																				val:        "\r\n",
																				ignoreCase: false,
																			},
																			&charClassMatcher{
																				pos:        position{line: 1028, col: 21, offset: 41692},
																				val:        "[\\r\\n]",
																				chars:      []rune{'\r', '\n'},
																				ignoreCase: false,
																				inverted:   false,
																			},
																		},
																	},
																},
																&oneOrMoreExpr{
																	pos: position{line: 955, col: 44, offset: 39713},
																	expr: &seqExpr{
																		pos: position{line: 955, col: 45, offset: 39714},
																		exprs: []interface{}{
																			&notExpr{
																				pos: position{line: 955, col: 45, offset: 39714},
																				expr: &seqExpr{
																					pos: position{line: 955, col: 47, offset: 39716},
																					exprs: []interface{}{
																						&choiceExpr{
																							pos: position{line: 1028, col: 12, offset: 41683},
																							alternatives: []interface{}{
																								&litMatcher{
																									pos:        position{line: 1028, col: 12, offset: 41683},
																									val:        "\r\n",
																									ignoreCase: false,
																								},
																								&charClassMatcher{
																									pos:        position{line: 1028, col: 21, offset: 41692},
																									val:        "[\\r\\n]",
																									chars:      []rune{'\r', '\n'},
																									ignoreCase: false,
																									inverted:   false,
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 991, col: 14, offset: 40968},
																							run: (*parser).callonDocumentBlock975,
																							expr: &seqExpr{
																								pos: position{line: 991, col: 14, offset: 40968},
																								exprs: []interface{}{
																									&notExpr{
																										pos: position{line: 991, col: 14, offset: 40968},
																										expr: &notExpr{
																											pos: position{line: 1030, col: 8, offset: 41712},
																											expr: &anyMatcher{
																												line: 1030, col: 9, offset: 41713,
																											},
																										},
																									},
																									&zeroOrMoreExpr{
																										pos: position{line: 991, col: 19, offset: 40973},
																										expr: &choiceExpr{
																											pos: position{line: 1024, col: 7, offset: 41621},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1024, col: 7, offset: 41621},
																													val:        " ",
																													ignoreCase: false,
																												},
																												&actionExpr{
																													pos: position{line: 1024, col: 13, offset: 41627},
																													run: (*parser).callonDocumentBlock983,
																													expr: &litMatcher{
																														pos:        position{line: 1024, col: 13, offset: 41627},
																														val:        "\t",
																														ignoreCase: false,
																													},
																												},
																											},
																										},
																									},
																									&choiceExpr{
																										pos: position{line: 1032, col: 8, offset: 41723},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1028, col: 12, offset: 41683},
																												val:        "\r\n",
																												ignoreCase: false,
																											},
																											&charClassMatcher{
																												pos:        position{line: 1028, col: 21, offset: 41692},
																												val:        "[\\r\\n]",
																												chars:      []rune{'\r', '\n'},
																												ignoreCase: false,
																												inverted:   false,
																											},
																											&notExpr{
																												pos: position{line: 1030, col: 8, offset: 41712},
																												expr: &anyMatcher{
																													line: 1030, col: 9, offset: 41713,
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																			&anyMatcher{
																				line: 955, col: 66, offset: 39735,
																			},
																		},
																	},
																},
															},
														},
													},
												},
												&choiceExpr{
													pos: position{line: 1032, col: 8, offset: 41723},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1028, col: 12, offset: 41683},
															val:        "\r\n",
															ignoreCase: false,
														},
														&charClassMatcher{
															pos:        position{line: 1028, col: 21, offset: 41692},
															val:        "[\\r\\n]",
															chars:      []rune{'\r', '\n'},
															ignoreCase: false,
															inverted:   false,
														},
														&notExpr{
															pos: position{line: 1030, col: 8, offset: 41712},
															expr: &anyMatcher{
																line: 1030, col: 9, offset: 41713,
															},
														},
													},
												},
											},
										},
									},
									&actionExpr{
										pos: position{line: 960, col: 39, offset: 39869},
										run: (*parser).callonDocumentBlock996,
										expr: &seqExpr{
											pos: position{line: 960, col: 39, offset: 39869},
											exprs: []interface{}{
												&labeledExpr{
													pos:   position{line: 960, col: 39, offset: 39869},
													label: "attributes",
													expr: &zeroOrMoreExpr{
														pos: position{line: 960, col: 50, offset: 39880},
														expr: &actionExpr{
															pos: position{line: 136, col: 21, offset: 5188},
															run: (*parser).callonDocumentBlock1000,
															expr: &seqExpr{
																pos: position{line: 136, col: 21, offset: 5188},
																exprs: []interface{}{
																	&labeledExpr{
																		pos:   position{line: 136, col: 21, offset: 5188},
																		label: "attr",
																		expr: &choiceExpr{
																			pos: position{line: 136, col: 27, offset: 5194},
																			alternatives: []interface{}{
																				&actionExpr{
																					pos: position{line: 145, col: 14, offset: 5645},
																					run: (*parser).callonDocumentBlock1004,
																					expr: &labeledExpr{
																						pos:   position{line: 145, col: 14, offset: 5645},
																						label: "id",
																						expr: &actionExpr{
																							pos: position{line: 151, col: 20, offset: 5775},
																							run: (*parser).callonDocumentBlock1006,
																							expr: &seqExpr{
																								pos: position{line: 151, col: 20, offset: 5775},
																								exprs: []interface{}{
																									&litMatcher{
																										pos:        position{line: 151, col: 20, offset: 5775},
																										val:        "[[",
																										ignoreCase: false,
																									},
																									&labeledExpr{
																										pos:   position{line: 151, col: 25, offset: 5780},
																										label: "id",
																										expr: &actionExpr{
																											pos: position{line: 1010, col: 7, offset: 41339},
																											run: (*parser).callonDocumentBlock1010,
																											expr: &oneOrMoreExpr{
																												pos: position{line: 1010, col: 7, offset: 41339},
																												expr: &seqExpr{
																													pos: position{line: 1010, col: 8, offset: 41340},
																													exprs: []interface{}{
																														&notExpr{
																															pos: position{line: 1010, col: 8, offset: 41340},
																															expr: &choiceExpr{
																																pos: position{line: 1028, col: 12, offset: 41683},
																																alternatives: []interface{}{
																																	&litMatcher{
																																		pos:        position{line: 1028, col: 12, offset: 41683},
																																		val:        "\r\n",
																																		ignoreCase: false,
																																	},
																																	&charClassMatcher{
																																		pos:        position{line: 1028, col: 21, offset: 41692},
																																		val:        "[\\r\\n]",
																																		chars:      []rune{'\r', '\n'},
																																		ignoreCase: false,
																																		inverted:   false,
																																	},
																																},
																															},
																														},
																														&notExpr{
																															pos: position{line: 1010, col: 17, offset: 41349},
																															expr: &choiceExpr{
																																pos: position{line: 1024, col: 7, offset: 41621},
																																alternatives: []interface{}{
																																	&litMatcher{
																																		pos:        position{line: 1024, col: 7, offset: 41621},
																																		val:        " ",
																																		ignoreCase: false,
																																	},
																																	&actionExpr{
																																		pos: position{line: 1024, col: 13, offset: 41627},
																																		run: (*parser).callonDocumentBlock1020,
																																		expr: &litMatcher{
																																			pos:        position{line: 1024, col: 13, offset: 41627},
																																			val:        "\t",
																																			ignoreCase: false,
																																		},
																																	},
																																},
																															},
																														},
																														&notExpr{
																															pos: position{line: 1010, col: 21, offset: 41353},
																															expr: &litMatcher{
																																pos:        position{line: 1010, col: 22, offset: 41354},
																																val:        "[",
																																ignoreCase: false,
																															},
																														},
																														&notExpr{
																															pos: position{line: 1010, col: 26, offset: 41358},
																															expr: &litMatcher{
																																pos:        position{line: 1010, col: 27, offset: 41359},
																																val:        "]",
																																ignoreCase: false,
																															},
																														},
																														&notExpr{
																															pos: position{line: 1010, col: 31, offset: 41363},
																															expr: &litMatcher{
																																pos:        position{line: 1010, col: 32, offset: 41364},
																																val:        "<<",
																																ignoreCase: false,
																															},
																														},
																														&notExpr{
																															pos: position{line: 1010, col: 37, offset: 41369},
																															expr: &litMatcher{
																																pos:        position{line: 1010, col: 38, offset: 41370},
																																val:        ">>",
																																ignoreCase: false,
																															},
																														},
																														&notExpr{
																															pos: position{line: 1010, col: 43, offset: 41375},
																															expr: &litMatcher{
																																pos:        position{line: 1010, col: 44, offset: 41376},
																																val:        ",",
																																ignoreCase: false,
																															},
																														},
																														&anyMatcher{
																															line: 1010, col: 48, offset: 41380,
																														},
																													},
																												},
																											},
																										},
																									},
																									&litMatcher{
																										pos:        position{line: 151, col: 33, offset: 5788},
																										val:        "]]",
																										ignoreCase: false,
																									},
																								},
																							},
																						},
																					},
																				},
																				&actionExpr{
																					pos: position{line: 147, col: 5, offset: 5691},
																					run: (*parser).callonDocumentBlock1034,
																					expr: &seqExpr{
																						pos: position{line: 147, col: 5, offset: 5691},
																						exprs: []interface{}{
																							&litMatcher{
																								pos:        position{line: 147, col: 5, offset: 5691},
																								val:        "[#",
																								ignoreCase: false,
																							},
																							&labeledExpr{
																								pos:   position{line: 147, col: 10, offset: 5696},
																								label: "id",
																								expr: &actionExpr{
																									pos: position{line: 1010, col: 7, offset: 41339},
																									run: (*parser).callonDocumentBlock1038,
																									expr: &oneOrMoreExpr{
																										pos: position{line: 1010, col: 7, offset: 41339},
																										expr: &seqExpr{
																											pos: position{line: 1010, col: 8, offset: 41340},
																											exprs: []interface{}{
																												&notExpr{
																													pos: position{line: 1010, col: 8, offset: 41340},
																													expr: &choiceExpr{
																														pos: position{line: 1028, col: 12, offset: 41683},
																														alternatives: []interface{}{
																															&litMatcher{
																																pos:        position{line: 1028, col: 12, offset: 41683},
																																val:        "\r\n",
																																ignoreCase: false,
																															},
																															&charClassMatcher{
																																pos:        position{line: 1028, col: 21, offset: 41692},
																																val:        "[\\r\\n]",
																																chars:      []rune{'\r', '\n'},
																																ignoreCase: false,
																																inverted:   false,
																															},
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 1010, col: 17, offset: 41349},
																													expr: &choiceExpr{
																														pos: position{line: 1024, col: 7, offset: 41621},
																														alternatives: []interface{}{
																															&litMatcher{
																																pos:        position{line: 1024, col: 7, offset: 41621},
																																val:        " ",
																																ignoreCase: false,
																															},
																															&actionExpr{
																																pos: position{line: 1024, col: 13, offset: 41627},
																																run: (*parser).callonDocumentBlock1048,
																																expr: &litMatcher{
																																	pos:        position{line: 1024, col: 13, offset: 41627},
																																	val:        "\t",
																																	ignoreCase: false,
																																},
																															},
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 1010, col: 21, offset: 41353},
																													expr: &litMatcher{
																														pos:        position{line: 1010, col: 22, offset: 41354},
																														val:        "[",
																														ignoreCase: false,
																													},
																												},
																												&notExpr{
																													pos: position{line: 1010, col: 26, offset: 41358},
																													expr: &litMatcher{
																														pos:        position{line: 1010, col: 27, offset: 41359},
																														val:        "]",
																														ignoreCase: false,
																													},
																												},
																												&notExpr{
																													pos: position{line: 1010, col: 31, offset: 41363},
																													expr: &litMatcher{
																														pos:        position{line: 1010, col: 32, offset: 41364},
																														val:        "<<",
																														ignoreCase: false,
																													},
																												},
																												&notExpr{
																													pos: position{line: 1010, col: 37, offset: 41369},
																													expr: &litMatcher{
																														pos:        position{line: 1010, col: 38, offset: 41370},
																														val:        ">>",
																														ignoreCase: false,
																													},
																												},
																												&notExpr{
																													pos: position{line: 1010, col: 43, offset: 41375},
																													expr: &litMatcher{
																														pos:        position{line: 1010, col: 44, offset: 41376},
																														val:        ",",
																														ignoreCase: false,
																													},
																												},
																												&anyMatcher{
																													line: 1010, col: 48, offset: 41380,
																												},
																											},
																										},
																									},
																								},
																							},
																							&litMatcher{
																								pos:        position{line: 147, col: 18, offset: 5704},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																					},
																				},
																				&actionExpr{
																					pos: position{line: 157, col: 17, offset: 5997},
																					run: (*parser).callonDocumentBlock1062,
																					expr: &seqExpr{
																						pos: position{line: 157, col: 17, offset: 5997},
																						exprs: []interface{}{
																							&litMatcher{
																								pos:        position{line: 157, col: 17, offset: 5997},
																								val:        ".",
																								ignoreCase: false,
																							},
																							&notExpr{
																								pos: position{line: 157, col: 21, offset: 6001},
																								expr: &litMatcher{
																									pos:        position{line: 157, col: 22, offset: 6002},
																									val:        ".",
																									ignoreCase: false,
																								},
																							},
																							&notExpr{
																								pos: position{line: 157, col: 26, offset: 6006},
																								expr: &choiceExpr{
																									pos: position{line: 1024, col: 7, offset: 41621},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1024, col: 7, offset: 41621},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1024, col: 13, offset: 41627},
																											run: (*parser).callonDocumentBlock1070,
																											expr: &litMatcher{
																												pos:        position{line: 1024, col: 13, offset: 41627},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																							&labeledExpr{
																								pos:   position{line: 157, col: 30, offset: 6010},
																								label: "title",
																								expr: &actionExpr{
																									pos: position{line: 161, col: 24, offset: 6115},
																									run: (*parser).callonDocumentBlock1073,
																									expr: &oneOrMoreExpr{
																										pos: position{line: 161, col: 24, offset: 6115},
																										expr: &seqExpr{
																											pos: position{line: 161, col: 25, offset: 6116},
																											exprs: []interface{}{
																												&notExpr{
																													pos: position{line: 161, col: 25, offset: 6116},
																													expr: &choiceExpr{
																														pos: position{line: 1028, col: 12, offset: 41683},
																														alternatives: []interface{}{
																															&litMatcher{
																																pos:        position{line: 1028, col: 12, offset: 41683},
																																val:        "\r\n",
																																ignoreCase: false,
																															},
																															&charClassMatcher{
																																pos:        position{line: 1028, col: 21, offset: 41692},
																																val:        "[\\r\\n]",
																																chars:      []rune{'\r', '\n'},
																																ignoreCase: false,
																																inverted:   false,
																															},
																														},
																													},
																												},
																												&anyMatcher{
																													line: 161, col: 34, offset: 6125,
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																				&actionExpr{
																					pos: position{line: 167, col: 16, offset: 6274},
																					run: (*parser).callonDocumentBlock1081,
																					expr: &seqExpr{
																						pos: position{line: 167, col: 16, offset: 6274},
																						exprs: []interface{}{
																							&litMatcher{
																								pos:        position{line: 167, col: 16, offset: 6274},
																								val:        "[.",
																								ignoreCase: false,
																							},
																							&notExpr{
																								pos: position{line: 167, col: 21, offset: 6279},
																								expr: &choiceExpr{
																									pos: position{line: 1024, col: 7, offset: 41621},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1024, col: 7, offset: 41621},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1024, col: 13, offset: 41627},
																											run: (*parser).callonDocumentBlock1087,
																											expr: &litMatcher{
																												pos:        position{line: 1024, col: 13, offset: 41627},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																							&labeledExpr{
																								pos:   position{line: 167, col: 25, offset: 6283},
																								label: "role",
																								expr: &actionExpr{
																									pos: position{line: 171, col: 23, offset: 6387},
																									run: (*parser).callonDocumentBlock1090,
																									expr: &oneOrMoreExpr{
																										pos: position{line: 171, col: 23, offset: 6387},
																										expr: &seqExpr{
																											pos: position{line: 171, col: 24, offset: 6388},
																											exprs: []interface{}{
																												&notExpr{
																													pos: position{line: 171, col: 24, offset: 6388},
																													expr: &choiceExpr{
																														pos: position{line: 1028, col: 12, offset: 41683},
																														alternatives: []interface{}{
																															&litMatcher{
																																pos:        position{line: 1028, col: 12, offset: 41683},
																																val:        "\r\n",
																																ignoreCase: false,
																															},
																															&charClassMatcher{
																																pos:        position{line: 1028, col: 21, offset: 41692},
																																val:        "[\\r\\n]",
																																chars:      []rune{'\r', '\n'},
																																ignoreCase: false,
																																inverted:   false,
																															},
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 171, col: 33, offset: 6397},
																													expr: &litMatcher{
																														pos:        position{line: 171, col: 34, offset: 6398},
																														val:        "]",
																														ignoreCase: false,
																													},
																												},
																												&anyMatcher{
																													line: 171, col: 38, offset: 6402,
																												},
																											},
																										},
																									},
																								},
																							},
																							&litMatcher{
																								pos:        position{line: 167, col: 51, offset: 6309},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																					},
																				},
																				&actionExpr{
																					pos: position{line: 176, col: 30, offset: 6551},
																					run: (*parser).callonDocumentBlock1101,
																					expr: &seqExpr{
																						pos: position{line: 176, col: 30, offset: 6551},
																						exprs: []interface{}{
																							&litMatcher{
																								pos:        position{line: 176, col: 30, offset: 6551},
																								val:        "[",
																								ignoreCase: false,
																							},
																							&labeledExpr{
																								pos:   position{line: 176, col: 34, offset: 6555},
																								label: "k",
																								expr: &choiceExpr{
																									pos: position{line: 494, col: 19, offset: 19245},
																									alternatives: []interface{}{
																										&actionExpr{
																											pos: position{line: 494, col: 19, offset: 19245},
																											run: (*parser).callonDocumentBlock1106,
																											expr: &litMatcher{
																												pos:        position{line: 494, col: 19, offset: 19245},
																												val:        "TIP",
																												ignoreCase: false,
																											},
																										},
																										&actionExpr{
																											pos: position{line: 496, col: 5, offset: 19283},
																											run: (*parser).callonDocumentBlock1108,
																											expr: &litMatcher{
																												pos:        position{line: 496, col: 5, offset: 19283},
																												val:        "NOTE",
																												ignoreCase: false,
																											},
																										},
																										&actionExpr{
																											pos: position{line: 498, col: 5, offset: 19323},
																											run: (*parser).callonDocumentBlock1110,
																											expr: &litMatcher{
																												pos:        position{line: 498, col: 5, offset: 19323},
																												val:        "IMPORTANT",
																												ignoreCase: false,
																											},
																										},
																										&actionExpr{
																											pos: position{line: 500, col: 5, offset: 19373},
																											run: (*parser).callonDocumentBlock1112,
																											expr: &litMatcher{
																												pos:        position{line: 500, col: 5, offset: 19373},
																												val:        "WARNING",
																												ignoreCase: false,
																											},
																										},
																										&actionExpr{
																											pos: position{line: 502, col: 5, offset: 19419},
																											run: (*parser).callonDocumentBlock1114,
																											expr: &litMatcher{
																												pos:        position{line: 502, col: 5, offset: 19419},
																												val:        "CAUTION",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																							&litMatcher{
																								pos:        position{line: 176, col: 53, offset: 6574},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																					},
																				},
																				&actionExpr{
																					pos: position{line: 199, col: 21, offset: 7312},
																					run: (*parser).callonDocumentBlock1117,
																					expr: &litMatcher{
																						pos:        position{line: 199, col: 21, offset: 7312},
																						val:        "[horizontal]",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 181, col: 19, offset: 6735},
																					run: (*parser).callonDocumentBlock1119,
																					expr: &seqExpr{
																						pos: position{line: 181, col: 19, offset: 6735},
																						exprs: []interface{}{
																							&litMatcher{
																								pos:        position{line: 181, col: 19, offset: 6735},
																								val:        "[",
																								ignoreCase: false,
																							},
																							&notExpr{
																								pos: position{line: 181, col: 23, offset: 6739},
																								expr: &choiceExpr{
																									pos: position{line: 1024, col: 7, offset: 41621},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1024, col: 7, offset: 41621},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1024, col: 13, offset: 41627},
																											run: (*parser).callonDocumentBlock1125,
																											expr: &litMatcher{
																												pos:        position{line: 1024, col: 13, offset: 41627},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																							&labeledExpr{
																								pos:   position{line: 181, col: 27, offset: 6743},
																								label: "attributes",
																								expr: &zeroOrMoreExpr{
																									pos: position{line: 181, col: 38, offset: 6754},
																									expr: &choiceExpr{
																										pos: position{line: 185, col: 21, offset: 6867},
																										alternatives: []interface{}{
																											&actionExpr{
																												pos: position{line: 185, col: 21, offset: 6867},
																												run: (*parser).callonDocumentBlock1130,
																												expr: &seqExpr{
																													pos: position{line: 185, col: 21, offset: 6867},
																													exprs: []interface{}{
																														&labeledExpr{
																															pos:   position{line: 185, col: 21, offset: 6867},
																															label: "key",
																															expr: &actionExpr{
																																pos: position{line: 191, col: 17, offset: 7127},
																																run: (*parser).callonDocumentBlock1133,
																																expr: &seqExpr{
																																	pos: position{line: 191, col: 17, offset: 7127},
																																	exprs: []interface{}{
																																		&notExpr{
																																			pos: position{line: 191, col: 17, offset: 7127},
																																			expr: &actionExpr{
																																				pos: position{line: 231, col: 14, offset: 8674},
																																				run: (*parser).callonDocumentBlock1136,
																																				expr: &litMatcher{
																																					pos:        position{line: 231, col: 14, offset: 8674},
																																					val:        "verse",
																																					ignoreCase: false,
																																				},
																																			},
																																		},
																																		&notExpr{
																																			pos: position{line: 191, col: 28, offset: 7138},
																																			expr: &actionExpr{
																																				pos: position{line: 975, col: 16, offset: 40537},
																																				run: (*parser).callonDocumentBlock1139,
																																				expr: &litMatcher{
																																					pos:        position{line: 975, col: 16, offset: 40537},
																																					val:        "literal",
																																					ignoreCase: false,
																																				},
																																			},
																																		},
																																		&labeledExpr{
																																			pos:   position{line: 191, col: 41, offset: 7151},
																																			label: "key",
																																			expr: &oneOrMoreExpr{
																																				pos: position{line: 191, col: 45, offset: 7155},
																																				expr: &seqExpr{
																																					pos: position{line: 191, col: 46, offset: 7156},
																																					exprs: []interface{}{
																																						&notExpr{
																																							pos: position{line: 191, col: 46, offset: 7156},
																																							expr: &litMatcher{
																																								pos:        position{line: 191, col: 47, offset: 7157},
																																								val:        "=",
																																								ignoreCase: false,
																																							},
																																						},
																																						&notExpr{
																																							pos: position{line: 191, col: 51, offset: 7161},
																																							expr: &litMatcher{
																																								pos:        position{line: 191, col: 52, offset: 7162},
																																								val:        ",",
																																								ignoreCase: false,
																																							},
																																						},
																																						&notExpr{
																																							pos: position{line: 191, col: 56, offset: 7166},
																																							expr: &litMatcher{
																																								pos:        position{line: 191, col: 57, offset: 7167},
																																								val:        "]",
																																								ignoreCase: false,
																																							},
																																						},
																																						&anyMatcher{
																																							line: 191, col: 61, offset: 7171,
																																						},
																																					},
																																				},
																																			},
																																		},
																																	},
																																},
																															},
																														},
																														&litMatcher{
																															pos:        position{line: 185, col: 40, offset: 6886},
																															val:        "=",
																															ignoreCase: false,
																														},
																														&labeledExpr{
																															pos:   position{line: 185, col: 44, offset: 6890},
																															label: "value",
																															expr: &actionExpr{
																																pos: position{line: 195, col: 19, offset: 7230},
																																run: (*parser).callonDocumentBlock1153,
																																expr: &labeledExpr{
																																	pos:   position{line: 195, col: 19, offset: 7230},
																																	label: "value",
																																	expr: &zeroOrMoreExpr{
																																		pos: position{line: 195, col: 25, offset: 7236},
																																		expr: &seqExpr{
																																			pos: position{line: 195, col: 26, offset: 7237},
																																			exprs: []interface{}{
																																				&notExpr{
																																					pos: position{line: 195, col: 26, offset: 7237},
																																					expr: &litMatcher{
																																						pos:        position{line: 195, col: 27, offset: 7238},
																																						val:        "=",
																																						ignoreCase: false,
																																					},
																																				},
																																				&notExpr{
																																					pos: position{line: 195, col: 31, offset: 7242},
																																					expr: &litMatcher{
																																						pos:        position{line: 195, col: 32, offset: 7243},
																																						val:        ",",
																																						ignoreCase: false,
																																					},
																																				},
																																				&notExpr{
																																					pos: position{line: 195, col: 36, offset: 7247},
																																					expr: &litMatcher{
																																						pos:        position{line: 195, col: 37, offset: 7248},
																																						val:        "]",
																																						ignoreCase: false,
																																					},
																																				},
																																				&anyMatcher{
																																					line: 195, col: 41, offset: 7252,
																																				},
																																			},
																																		},
																																	},
																																},
																															},
																														},
																														&zeroOrOneExpr{
																															pos: position{line: 185, col: 67, offset: 6913},
																															expr: &litMatcher{
																																pos:        position{line: 185, col: 67, offset: 6913},
																																val:        ",",
																																ignoreCase: false,
																															},
																														},
																														&zeroOrMoreExpr{
																															pos: position{line: 185, col: 72, offset: 6918},
																															expr: &choiceExpr{
																																pos: position{line: 1024, col: 7, offset: 41621},
																																alternatives: []interface{}{
																																	&litMatcher{
																																		pos:        position{line: 1024, col: 7, offset: 41621},
																																		val:        " ",
																																		ignoreCase: false,
																																	},
																																	&actionExpr{
																																		pos: position{line: 1024, col: 13, offset: 41627},
																																		run: (*parser).callonDocumentBlock1169,
																																		expr: &litMatcher{
																																			pos:        position{line: 1024, col: 13, offset: 41627},
																																			val:        "\t",
																																			ignoreCase: false,
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																											&actionExpr{
																												pos: position{line: 187, col: 5, offset: 7002},
																												run: (*parser).callonDocumentBlock1171,
																												expr: &seqExpr{
																													pos: position{line: 187, col: 5, offset: 7002},
																													exprs: []interface{}{
																														&labeledExpr{
																															pos:   position{line: 187, col: 5, offset: 7002},
																															label: "key",
																															expr: &actionExpr{
																																pos: position{line: 191, col: 17, offset: 7127},
																																run: (*parser).callonDocumentBlock1174,
																																expr: &seqExpr{
																																	pos: position{line: 191, col: 17, offset: 7127},
																																	exprs: []interface{}{
																																		&notExpr{
																																			pos: position{line: 191, col: 17, offset: 7127},
																																			expr: &actionExpr{
																																				pos: position{line: 231, col: 14, offset: 8674},
																																				run: (*parser).callonDocumentBlock1177,
																																				expr: &litMatcher{
																																					pos:        position{line: 231, col: 14, offset: 8674},
																																					val:        "verse",
																																					ignoreCase: false,
																																				},
																																			},
																																		},
																																		&notExpr{
																																			pos: position{line: 191, col: 28, offset: 7138},
																																			expr: &actionExpr{
																																				pos: position{line: 975, col: 16, offset: 40537},
																																				run: (*parser).callonDocumentBlock1180,
																																				expr: &litMatcher{
																																					pos:        position{line: 975, col: 16, offset: 40537},
																																					val:        "literal",
																																					ignoreCase: false,
																																				},
																																			},
																																		},
																																		&labeledExpr{
																																			pos:   position{line: 191, col: 41, offset: 7151},
																																			label: "key",
																																			expr: &oneOrMoreExpr{
																																				pos: position{line: 191, col: 45, offset: 7155},
																																				expr: &seqExpr{
																																					pos: position{line: 191, col: 46, offset: 7156},
																																					exprs: []interface{}{
																																						&notExpr{
																																							pos: position{line: 191, col: 46, offset: 7156},
																																							expr: &litMatcher{
																																								pos:        position{line: 191, col: 47, offset: 7157},
																																								val:        "=",
																																								ignoreCase: false,
																																							},
																																						},
																																						&notExpr{
																																							pos: position{line: 191, col: 51, offset: 7161},
																																							expr: &litMatcher{
																																								pos:        position{line: 191, col: 52, offset: 7162},
																																								val:        ",",
																																								ignoreCase: false,
																																							},
																																						},
																																						&notExpr{
																																							pos: position{line: 191, col: 56, offset: 7166},
																																							expr: &litMatcher{
																																								pos:        position{line: 191, col: 57, offset: 7167},
																																								val:        "]",
																																								ignoreCase: false,
																																							},
																																						},
																																						&anyMatcher{
																																							line: 191, col: 61, offset: 7171,
																																						},
																																					},
																																				},
																																			},
																																		},
																																	},
																																},
																															},
																														},
																														&zeroOrOneExpr{
																															pos: position{line: 187, col: 24, offset: 7021},
																															expr: &litMatcher{
																																pos:        position{line: 187, col: 24, offset: 7021},
																																val:        ",",
																																ignoreCase: false,
																															},
																														},
																														&zeroOrMoreExpr{
																															pos: position{line: 187, col: 29, offset: 7026},
																															expr: &choiceExpr{
																																pos: position{line: 1024, col: 7, offset: 41621},
																																alternatives: []interface{}{
																																	&litMatcher{
																																		pos:        position{line: 1024, col: 7, offset: 41621},
																																		val:        " ",
																																		ignoreCase: false,
																																	},
																																	&actionExpr{
																																		pos: position{line: 1024, col: 13, offset: 41627},
																																		run: (*parser).callonDocumentBlock1197,
																																		expr: &litMatcher{
																																			pos:        position{line: 1024, col: 13, offset: 41627},
																																			val:        "\t",
																																			ignoreCase: false,
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&litMatcher{
																								pos:        position{line: 181, col: 59, offset: 6775},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&zeroOrMoreExpr{
																		pos: position{line: 136, col: 131, offset: 5298},
																		expr: &choiceExpr{
																			pos: position{line: 1024, col: 7, offset: 41621},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1024, col: 7, offset: 41621},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1024, col: 13, offset: 41627},
																					run: (*parser).callonDocumentBlock1203,
																					expr: &litMatcher{
																						pos:        position{line: 1024, col: 13, offset: 41627},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&choiceExpr{
																		pos: position{line: 1032, col: 8, offset: 41723},
																		alternatives: []interface{}{
																			&litMatcher{
																				pos:        position{line: 1028, col: 12, offset: 41683},
																				val:        "\r\n",
																				ignoreCase: false,
																			},
																			&charClassMatcher{
																				pos:        position{line: 1028, col: 21, offset: 41692},
																				val:        "[\\r\\n]",
																				chars:      []rune{'\r', '\n'},
																				ignoreCase: false,
																				inverted:   false,
																			},
																			&notExpr{
																				pos: position{line: 1030, col: 8, offset: 41712},
																				expr: &anyMatcher{
																					line: 1030, col: 9, offset: 41713,
																				},
																			},
																		},
																	},
																},
															},
														},
													},
												},
												&litMatcher{
													pos:        position{line: 968, col: 26, offset: 40226},
													val:        "....",
													ignoreCase: false,
												},
												&zeroOrMoreExpr{
													pos: position{line: 960, col: 92, offset: 39922},
													expr: &choiceExpr{
														pos: position{line: 1024, col: 7, offset: 41621},
														alternatives: []interface{}{
															&litMatcher{
																pos:        position{line: 1024, col: 7, offset: 41621},
																val:        " ",
																ignoreCase: false,
															},
															&actionExpr{
																pos: position{line: 1024, col: 13, offset: 41627},
																run: (*parser).callonDocumentBlock1214,
																expr: &litMatcher{
																	pos:        position{line: 1024, col: 13, offset: 41627},
																	val:        "\t",
																	ignoreCase: false,
																},
															},
														},
													},
												},
												&choiceExpr{
													pos: position{line: 1028, col: 12, offset: 41683},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1028, col: 12, offset: 41683},
															val:        "\r\n",
															ignoreCase: false,
														},
														&charClassMatcher{
															pos:        position{line: 1028, col: 21, offset: 41692},
															val:        "[\\r\\n]",
															chars:      []rune{'\r', '\n'},
															ignoreCase: false,
															inverted:   false,
														},
													},
												},
												&labeledExpr{
													pos:   position{line: 960, col: 104, offset: 39934},
													label: "content",
													expr: &actionExpr{
														pos: position{line: 964, col: 37, offset: 40137},
														run: (*parser).callonDocumentBlock1220,
														expr: &zeroOrMoreExpr{
															pos: position{line: 964, col: 37, offset: 40137},
															expr: &seqExpr{
																pos: position{line: 964, col: 38, offset: 40138},
																exprs: []interface{}{
																	&notExpr{
																		pos: position{line: 964, col: 38, offset: 40138},
																		expr: &litMatcher{
																			pos:        position{line: 968, col: 26, offset: 40226},
																			val:        "....",
																			ignoreCase: false,
																		},
																	},
																	&anyMatcher{
																		line: 964, col: 61, offset: 40161,
																	},
																},
															},
														},
													},
												},
												&choiceExpr{
													pos: position{line: 960, col: 148, offset: 39978},
													alternatives: []interface{}{
														&seqExpr{
															pos: position{line: 960, col: 149, offset: 39979},
															exprs: []interface{}{
																&litMatcher{
																	pos:        position{line: 968, col: 26, offset: 40226},
																	val:        "....",
																	ignoreCase: false,
																},
																&zeroOrMoreExpr{
																	pos: position{line: 960, col: 171, offset: 40001},
																	expr: &choiceExpr{
																		pos: position{line: 1024, col: 7, offset: 41621},
																		alternatives: []interface{}{
																			&litMatcher{
																				pos:        position{line: 1024, col: 7, offset: 41621},
																				val:        " ",
																				ignoreCase: false,
																			},
																			&actionExpr{
																				pos: position{line: 1024, col: 13, offset: 41627},
																				run: (*parser).callonDocumentBlock1232,
																				expr: &litMatcher{
																					pos:        position{line: 1024, col: 13, offset: 41627},
																					val:        "\t",
																					ignoreCase: false,
																				},
																			},
																		},
																	},
																},
																&choiceExpr{
																	pos: position{line: 1032, col: 8, offset: 41723},
																	alternatives: []interface{}{
																		&litMatcher{
																			pos:        position{line: 1028, col: 12, offset: 41683},
																			val:        "\r\n",
																			ignoreCase: false,
																		},
																		&charClassMatcher{
																			pos:        position{line: 1028, col: 21, offset: 41692},
																			val:        "[\\r\\n]",
																			chars:      []rune{'\r', '\n'},
																			ignoreCase: false,
																			inverted:   false,
																		},
																		&notExpr{
																			pos: position{line: 1030, col: 8, offset: 41712},
																			expr: &anyMatcher{
																				line: 1030, col: 9, offset: 41713,
																			},
																		},
																	},
																},
															},
														},
														&notExpr{
															pos: position{line: 1030, col: 8, offset: 41712},
															expr: &anyMatcher{
																line: 1030, col: 9, offset: 41713,
															},
														},
													},
												},
											},
										},
									},
									&actionExpr{
										pos: position{line: 971, col: 34, offset: 40321},
										run: (*parser).callonDocumentBlock1241,
										expr: &seqExpr{
											pos: position{line: 971, col: 34, offset: 40321},
											exprs: []interface{}{
												&labeledExpr{
													pos:   position{line: 971, col: 34, offset: 40321},
													label: "attributes",
													expr: &seqExpr{
														pos: position{line: 971, col: 46, offset: 40333},
														exprs: []interface{}{
															&zeroOrMoreExpr{
																pos: position{line: 971, col: 46, offset: 40333},
																expr: &actionExpr{
																	pos: position{line: 136, col: 21, offset: 5188},
																	run: (*parser).callonDocumentBlock1246,
																	expr: &seqExpr{
																		pos: position{line: 136, col: 21, offset: 5188},
																		exprs: []interface{}{
																			&labeledExpr{
																				pos:   position{line: 136, col: 21, offset: 5188},
																				label: "attr",
																				expr: &choiceExpr{
																					pos: position{line: 136, col: 27, offset: 5194},
																					alternatives: []interface{}{
																						&actionExpr{
																							pos: position{line: 145, col: 14, offset: 5645},
																							run: (*parser).callonDocumentBlock1250,
																							expr: &labeledExpr{
																								pos:   position{line: 145, col: 14, offset: 5645},
																								label: "id",
																								expr: &actionExpr{
																									pos: position{line: 151, col: 20, offset: 5775},
																									run: (*parser).callonDocumentBlock1252,
																									expr: &seqExpr{
																										pos: position{line: 151, col: 20, offset: 5775},
																										exprs: []interface{}{
																											&litMatcher{
																												pos:        position{line: 151, col: 20, offset: 5775},
																												val:        "[[",
																												ignoreCase: false,
																											},
																											&labeledExpr{
																												pos:   position{line: 151, col: 25, offset: 5780},
																												label: "id",
																												expr: &actionExpr{
																													pos: position{line: 1010, col: 7, offset: 41339},
																													run: (*parser).callonDocumentBlock1256,
																													expr: &oneOrMoreExpr{
																														pos: position{line: 1010, col: 7, offset: 41339},
																														expr: &seqExpr{
																															pos: position{line: 1010, col: 8, offset: 41340},
																															exprs: []interface{}{
																																&notExpr{
																																	pos: position{line: 1010, col: 8, offset: 41340},
																																	expr: &choiceExpr{
																																		pos: position{line: 1028, col: 12, offset: 41683},
																																		alternatives: []interface{}{
																																			&litMatcher{
																																				pos:        position{line: 1028, col: 12, offset: 41683},
																																				val:        "\r\n",
																																				ignoreCase: false,
																																			},
																																			&charClassMatcher{
																																				pos:        position{line: 1028, col: 21, offset: 41692},
																																				val:        "[\\r\\n]",
																																				chars:      []rune{'\r', '\n'},
																																				ignoreCase: false,
																																				inverted:   false,
																																			},
																																		},
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 1010, col: 17, offset: 41349},
																																	expr: &choiceExpr{
																																		pos: position{line: 1024, col: 7, offset: 41621},
																																		alternatives: []interface{}{
																																			&litMatcher{
																																				pos:        position{line: 1024, col: 7, offset: 41621},
																																				val:        " ",
																																				ignoreCase: false,
																																			},
																																			&actionExpr{
																																				pos: position{line: 1024, col: 13, offset: 41627},
																																				run: (*parser).callonDocumentBlock1266,
																																				expr: &litMatcher{
																																					pos:        position{line: 1024, col: 13, offset: 41627},
																																					val:        "\t",
																																					ignoreCase: false,
																																				},
																																			},
																																		},
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 1010, col: 21, offset: 41353},
																																	expr: &litMatcher{
																																		pos:        position{line: 1010, col: 22, offset: 41354},
																																		val:        "[",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 1010, col: 26, offset: 41358},
																																	expr: &litMatcher{
																																		pos:        position{line: 1010, col: 27, offset: 41359},
																																		val:        "]",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 1010, col: 31, offset: 41363},
																																	expr: &litMatcher{
																																		pos:        position{line: 1010, col: 32, offset: 41364},
																																		val:        "<<",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 1010, col: 37, offset: 41369},
																																	expr: &litMatcher{
																																		pos:        position{line: 1010, col: 38, offset: 41370},
																																		val:        ">>",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 1010, col: 43, offset: 41375},
																																	expr: &litMatcher{
																																		pos:        position{line: 1010, col: 44, offset: 41376},
																																		val:        ",",
																																		ignoreCase: false,
																																	},
																																},
																																&anyMatcher{
																																	line: 1010, col: 48, offset: 41380,
																																},
																															},
																														},
																													},
																												},
																											},
																											&litMatcher{
																												pos:        position{line: 151, col: 33, offset: 5788},
																												val:        "]]",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 147, col: 5, offset: 5691},
																							run: (*parser).callonDocumentBlock1280,
																							expr: &seqExpr{
																								pos: position{line: 147, col: 5, offset: 5691},
																								exprs: []interface{}{
																									&litMatcher{
																										pos:        position{line: 147, col: 5, offset: 5691},
																										val:        "[#",
																										ignoreCase: false,
																									},
																									&labeledExpr{
																										pos:   position{line: 147, col: 10, offset: 5696},
																										label: "id",
																										expr: &actionExpr{
																											pos: position{line: 1010, col: 7, offset: 41339},
																											run: (*parser).callonDocumentBlock1284,
																											expr: &oneOrMoreExpr{
																												pos: position{line: 1010, col: 7, offset: 41339},
																												expr: &seqExpr{
																													pos: position{line: 1010, col: 8, offset: 41340},
																													exprs: []interface{}{
																														&notExpr{
																															pos: position{line: 1010, col: 8, offset: 41340},
																															expr: &choiceExpr{
																																pos: position{line: 1028, col: 12, offset: 41683},
																																alternatives: []interface{}{
																																	&litMatcher{
																																		pos:        position{line: 1028, col: 12, offset: 41683},
																																		val:        "\r\n",
																																		ignoreCase: false,
																																	},
																																	&charClassMatcher{
																																		pos:        position{line: 1028, col: 21, offset: 41692},
																																		val:        "[\\r\\n]",
																																		chars:      []rune{'\r', '\n'},
																																		ignoreCase: false,
																																		inverted:   false,
																																	},
																																},
																															},
																														},
																														&notExpr{
																															pos: position{line: 1010, col: 17, offset: 41349},
																															expr: &choiceExpr{
																																pos: position{line: 1024, col: 7, offset: 41621},
																																alternatives: []interface{}{
																																	&litMatcher{
																																		pos:        position{line: 1024, col: 7, offset: 41621},
																																		val:        " ",
																																		ignoreCase: false,
																																	},
																																	&actionExpr{
																																		pos: position{line: 1024, col: 13, offset: 41627},
																																		run: (*parser).callonDocumentBlock1294,
																																		expr: &litMatcher{
																																			pos:        position{line: 1024, col: 13, offset: 41627},
																																			val:        "\t",
																																			ignoreCase: false,
																																		},
																																	},
																																},
																															},
																														},
																														&notExpr{
																															pos: position{line: 1010, col: 21, offset: 41353},
																															expr: &litMatcher{
																																pos:        position{line: 1010, col: 22, offset: 41354},
																																val:        "[",
																																ignoreCase: false,
																															},
																														},
																														&notExpr{
																															pos: position{line: 1010, col: 26, offset: 41358},
																															expr: &litMatcher{
																																pos:        position{line: 1010, col: 27, offset: 41359},
																																val:        "]",
																																ignoreCase: false,
																															},
																														},
																														&notExpr{
																															pos: position{line: 1010, col: 31, offset: 41363},
																															expr: &litMatcher{
																																pos:        position{line: 1010, col: 32, offset: 41364},
																																val:        "<<",
																																ignoreCase: false,
																															},
																														},
																														&notExpr{
																															pos: position{line: 1010, col: 37, offset: 41369},
																															expr: &litMatcher{
																																pos:        position{line: 1010, col: 38, offset: 41370},
																																val:        ">>",
																																ignoreCase: false,
																															},
																														},
																														&notExpr{
																															pos: position{line: 1010, col: 43, offset: 41375},
																															expr: &litMatcher{
																																pos:        position{line: 1010, col: 44, offset: 41376},
																																val:        ",",
																																ignoreCase: false,
																															},
																														},
																														&anyMatcher{
																															line: 1010, col: 48, offset: 41380,
																														},
																													},
																												},
																											},
																										},
																									},
																									&litMatcher{
																										pos:        position{line: 147, col: 18, offset: 5704},
																										val:        "]",
																										ignoreCase: false,
																									},
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 157, col: 17, offset: 5997},
																							run: (*parser).callonDocumentBlock1308,
																							expr: &seqExpr{
																								pos: position{line: 157, col: 17, offset: 5997},
																								exprs: []interface{}{
																									&litMatcher{
																										pos:        position{line: 157, col: 17, offset: 5997},
																										val:        ".",
																										ignoreCase: false,
																									},
																									&notExpr{
																										pos: position{line: 157, col: 21, offset: 6001},
																										expr: &litMatcher{
																											pos:        position{line: 157, col: 22, offset: 6002},
																											val:        ".",
																											ignoreCase: false,
																										},
																									},
																									&notExpr{
																										pos: position{line: 157, col: 26, offset: 6006},
																										expr: &choiceExpr{
																											pos: position{line: 1024, col: 7, offset: 41621},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1024, col: 7, offset: 41621},
																													val:        " ",
																													ignoreCase: false,
																												},
																												&actionExpr{
																													pos: position{line: 1024, col: 13, offset: 41627},
																													run: (*parser).callonDocumentBlock1316,
																													expr: &litMatcher{
																														pos:        position{line: 1024, col: 13, offset: 41627},
																														val:        "\t",
																														ignoreCase: false,
																													},
																												},
																											},
																										},
																									},
																									&labeledExpr{
																										pos:   position{line: 157, col: 30, offset: 6010},
																										label: "title",
																										expr: &actionExpr{
																											pos: position{line: 161, col: 24, offset: 6115},
																											run: (*parser).callonDocumentBlock1319,
																											expr: &oneOrMoreExpr{
																												pos: position{line: 161, col: 24, offset: 6115},
																												expr: &seqExpr{
																													pos: position{line: 161, col: 25, offset: 6116},
																													exprs: []interface{}{
																														&notExpr{
																															pos: position{line: 161, col: 25, offset: 6116},
																															expr: &choiceExpr{
																																pos: position{line: 1028, col: 12, offset: 41683},
																																alternatives: []interface{}{
																																	&litMatcher{
																																		pos:        position{line: 1028, col: 12, offset: 41683},
																																		val:        "\r\n",
																																		ignoreCase: false,
																																	},
																																	&charClassMatcher{
																																		pos:        position{line: 1028, col: 21, offset: 41692},
																																		val:        "[\\r\\n]",
																																		chars:      []rune{'\r', '\n'},
																																		ignoreCase: false,
																																		inverted:   false,
																																	},
																																},
																															},
																														},
																														&anyMatcher{
																															line: 161, col: 34, offset: 6125,
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 167, col: 16, offset: 6274},
																							run: (*parser).callonDocumentBlock1327,
																							expr: &seqExpr{
																								pos: position{line: 167, col: 16, offset: 6274},
																								exprs: []interface{}{
																									&litMatcher{
																										pos:        position{line: 167, col: 16, offset: 6274},
																										val:        "[.",
																										ignoreCase: false,
																									},
																									&notExpr{
																										pos: position{line: 167, col: 21, offset: 6279},
																										expr: &choiceExpr{
																											pos: position{line: 1024, col: 7, offset: 41621},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1024, col: 7, offset: 41621},
																													val:        " ",
																													ignoreCase: false,
																												},
																												&actionExpr{
																													pos: position{line: 1024, col: 13, offset: 41627},
																													run: (*parser).callonDocumentBlock1333,
																													expr: &litMatcher{
																														pos:        position{line: 1024, col: 13, offset: 41627},
																														val:        "\t",
																														ignoreCase: false,
																													},
																												},
																											},
																										},
																									},
																									&labeledExpr{
																										pos:   position{line: 167, col: 25, offset: 6283},
																										label: "role",
																										expr: &actionExpr{
																											pos: position{line: 171, col: 23, offset: 6387},
																											run: (*parser).callonDocumentBlock1336,
																											expr: &oneOrMoreExpr{
																												pos: position{line: 171, col: 23, offset: 6387},
																												expr: &seqExpr{
																													pos: position{line: 171, col: 24, offset: 6388},
																													exprs: []interface{}{
																														&notExpr{
																															pos: position{line: 171, col: 24, offset: 6388},
																															expr: &choiceExpr{
																																pos: position{line: 1028, col: 12, offset: 41683},
																																alternatives: []interface{}{
																																	&litMatcher{
																																		pos:        position{line: 1028, col: 12, offset: 41683},
																																		val:        "\r\n",
																																		ignoreCase: false,
																																	},
																																	&charClassMatcher{
																																		pos:        position{line: 1028, col: 21, offset: 41692},
																																		val:        "[\\r\\n]",
																																		chars:      []rune{'\r', '\n'},
																																		ignoreCase: false,
																																		inverted:   false,
																																	},
																																},
																															},
																														},
																														&notExpr{
																															pos: position{line: 171, col: 33, offset: 6397},
																															expr: &litMatcher{
																																pos:        position{line: 171, col: 34, offset: 6398},
																																val:        "]",
																																ignoreCase: false,
																															},
																														},
																														&anyMatcher{
																															line: 171, col: 38, offset: 6402,
																														},
																													},
																												},
																											},
																										},
																									},
																									&litMatcher{
																										pos:        position{line: 167, col: 51, offset: 6309},
																										val:        "]",
																										ignoreCase: false,
																									},
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 176, col: 30, offset: 6551},
																							run: (*parser).callonDocumentBlock1347,
																							expr: &seqExpr{
																								pos: position{line: 176, col: 30, offset: 6551},
																								exprs: []interface{}{
																									&litMatcher{
																										pos:        position{line: 176, col: 30, offset: 6551},
																										val:        "[",
																										ignoreCase: false,
																									},
																									&labeledExpr{
																										pos:   position{line: 176, col: 34, offset: 6555},
																										label: "k",
																										expr: &choiceExpr{
																											pos: position{line: 494, col: 19, offset: 19245},
																											alternatives: []interface{}{
																												&actionExpr{
																													pos: position{line: 494, col: 19, offset: 19245},
																													run: (*parser).callonDocumentBlock1352,
																													expr: &litMatcher{
																														pos:        position{line: 494, col: 19, offset: 19245},
																														val:        "TIP",
																														ignoreCase: false,
																													},
																												},
																												&actionExpr{
																													pos: position{line: 496, col: 5, offset: 19283},
																													run: (*parser).callonDocumentBlock1354,
																													expr: &litMatcher{
																														pos:        position{line: 496, col: 5, offset: 19283},
																														val:        "NOTE",
																														ignoreCase: false,
																													},
																												},
																												&actionExpr{
																													pos: position{line: 498, col: 5, offset: 19323},
																													run: (*parser).callonDocumentBlock1356,
																													expr: &litMatcher{
																														pos:        position{line: 498, col: 5, offset: 19323},
																														val:        "IMPORTANT",
																														ignoreCase: false,
																													},
																												},
																												&actionExpr{
																													pos: position{line: 500, col: 5, offset: 19373},
																													run: (*parser).callonDocumentBlock1358,
																													expr: &litMatcher{
																														pos:        position{line: 500, col: 5, offset: 19373},
																														val:        "WARNING",
																														ignoreCase: false,
																													},
																												},
																												&actionExpr{
																													pos: position{line: 502, col: 5, offset: 19419},
																													run: (*parser).callonDocumentBlock1360,
																													expr: &litMatcher{
																														pos:        position{line: 502, col: 5, offset: 19419},
																														val:        "CAUTION",
																														ignoreCase: false,
																													},
																												},
																											},
																										},
																									},
																									&litMatcher{
																										pos:        position{line: 176, col: 53, offset: 6574},
																										val:        "]",
																										ignoreCase: false,
																									},
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 199, col: 21, offset: 7312},
																							run: (*parser).callonDocumentBlock1363,
																							expr: &litMatcher{
																								pos:        position{line: 199, col: 21, offset: 7312},
																								val:        "[horizontal]",
																								ignoreCase: false,
																							},
																						},
																						&actionExpr{
																							pos: position{line: 181, col: 19, offset: 6735},
																							run: (*parser).callonDocumentBlock1365,
																							expr: &seqExpr{
																								pos: position{line: 181, col: 19, offset: 6735},
																								exprs: []interface{}{
																									&litMatcher{
																										pos:        position{line: 181, col: 19, offset: 6735},
																										val:        "[",
																										ignoreCase: false,
																									},
																									&notExpr{
																										pos: position{line: 181, col: 23, offset: 6739},
																										expr: &choiceExpr{
																											pos: position{line: 1024, col: 7, offset: 41621},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1024, col: 7, offset: 41621},
																													val:        " ",
																													ignoreCase: false,
																												},
																												&actionExpr{
																													pos: position{line: 1024, col: 13, offset: 41627},
																													run: (*parser).callonDocumentBlock1371,
																													expr: &litMatcher{
																														pos:        position{line: 1024, col: 13, offset: 41627},
																														val:        "\t",
																														ignoreCase: false,
																													},
																												},
																											},
																										},
																									},
																									&labeledExpr{
																										pos:   position{line: 181, col: 27, offset: 6743},
																										label: "attributes",
																										expr: &zeroOrMoreExpr{
																											pos: position{line: 181, col: 38, offset: 6754},
																											expr: &choiceExpr{
																												pos: position{line: 185, col: 21, offset: 6867},
																												alternatives: []interface{}{
																													&actionExpr{
																														pos: position{line: 185, col: 21, offset: 6867},
																														run: (*parser).callonDocumentBlock1376,
																														expr: &seqExpr{
																															pos: position{line: 185, col: 21, offset: 6867},
																															exprs: []interface{}{
																																&labeledExpr{
																																	pos:   position{line: 185, col: 21, offset: 6867},
																																	label: "key",
																																	expr: &actionExpr{
																																		pos: position{line: 191, col: 17, offset: 7127},
																																		run: (*parser).callonDocumentBlock1379,
																																		expr: &seqExpr{
																																			pos: position{line: 191, col: 17, offset: 7127},
																																			exprs: []interface{}{
																																				&notExpr{
																																					pos: position{line: 191, col: 17, offset: 7127},
																																					expr: &actionExpr{
																																						pos: position{line: 231, col: 14, offset: 8674},
																																						run: (*parser).callonDocumentBlock1382,
																																						expr: &litMatcher{
																																							pos:        position{line: 231, col: 14, offset: 8674},
																																							val:        "verse",
																																							ignoreCase: false,
																																						},
																																					},
																																				},
																																				&notExpr{
																																					pos: position{line: 191, col: 28, offset: 7138},
																																					expr: &actionExpr{
																																						pos: position{line: 975, col: 16, offset: 40537},
																																						run: (*parser).callonDocumentBlock1385,
																																						expr: &litMatcher{
																																							pos:        position{line: 975, col: 16, offset: 40537},
																																							val:        "literal",
																																							ignoreCase: false,
																																						},
																																					},
																																				},
																																				&labeledExpr{
																																					pos:   position{line: 191, col: 41, offset: 7151},
																																					label: "key",
																																					expr: &oneOrMoreExpr{
																																						pos: position{line: 191, col: 45, offset: 7155},
																																						expr: &seqExpr{
																																							pos: position{line: 191, col: 46, offset: 7156},
																																							exprs: []interface{}{
																																								&notExpr{
																																									pos: position{line: 191, col: 46, offset: 7156},
																																									expr: &litMatcher{
																																										pos:        position{line: 191, col: 47, offset: 7157},
																																										val:        "=",
																																										ignoreCase: false,
																																									},
																																								},
																																								&notExpr{
																																									pos: position{line: 191, col: 51, offset: 7161},
																																									expr: &litMatcher{
																																										pos:        position{line: 191, col: 52, offset: 7162},
																																										val:        ",",
																																										ignoreCase: false,
																																									},
																																								},
																																								&notExpr{
																																									pos: position{line: 191, col: 56, offset: 7166},
																																									expr: &litMatcher{
																																										pos:        position{line: 191, col: 57, offset: 7167},
																																										val:        "]",
																																										ignoreCase: false,
																																									},
																																								},
																																								&anyMatcher{
																																									line: 191, col: 61, offset: 7171,
																																								},
																																							},
																																						},
																																					},
																																				},
																																			},
																																		},
																																	},
																																},
																																&litMatcher{
																																	pos:        position{line: 185, col: 40, offset: 6886},
																																	val:        "=",
																																	ignoreCase: false,
																																},
																																&labeledExpr{
																																	pos:   position{line: 185, col: 44, offset: 6890},
																																	label: "value",
																																	expr: &actionExpr{
																																		pos: position{line: 195, col: 19, offset: 7230},
																																		run: (*parser).callonDocumentBlock1399,
																																		expr: &labeledExpr{
																																			pos:   position{line: 195, col: 19, offset: 7230},
																																			label: "value",
																																			expr: &zeroOrMoreExpr{
																																				pos: position{line: 195, col: 25, offset: 7236},
																																				expr: &seqExpr{
																																					pos: position{line: 195, col: 26, offset: 7237},
																																					exprs: []interface{}{
																																						&notExpr{
																																							pos: position{line: 195, col: 26, offset: 7237},
																																							expr: &litMatcher{
																																								pos:        position{line: 195, col: 27, offset: 7238},
																																								val:        "=",
																																								ignoreCase: false,
																																							},
																																						},
																																						&notExpr{
																																							pos: position{line: 195, col: 31, offset: 7242},
																																							expr: &litMatcher{
																																								pos:        position{line: 195, col: 32, offset: 7243},
																																								val:        ",",
																																								ignoreCase: false,
																																							},
																																						},
																																						&notExpr{
																																							pos: position{line: 195, col: 36, offset: 7247},
																																							expr: &litMatcher{
																																								pos:        position{line: 195, col: 37, offset: 7248},
																																								val:        "]",
																																								ignoreCase: false,
																																							},
																																						},
																																						&anyMatcher{
																																							line: 195, col: 41, offset: 7252,
																																						},
																																					},
																																				},
																																			},
																																		},
																																	},
																																},
																																&zeroOrOneExpr{
																																	pos: position{line: 185, col: 67, offset: 6913},
																																	expr: &litMatcher{
																																		pos:        position{line: 185, col: 67, offset: 6913},
																																		val:        ",",
																																		ignoreCase: false,
																																	},
																																},
																																&zeroOrMoreExpr{
																																	pos: position{line: 185, col: 72, offset: 6918},
																																	expr: &choiceExpr{
																																		pos: position{line: 1024, col: 7, offset: 41621},
																																		alternatives: []interface{}{
																																			&litMatcher{
																																				pos:        position{line: 1024, col: 7, offset: 41621},
																																				val:        " ",
																																				ignoreCase: false,
																																			},
																																			&actionExpr{
																																				pos: position{line: 1024, col: 13, offset: 41627},
																																				run: (*parser).callonDocumentBlock1415,
																																				expr: &litMatcher{
																																					pos:        position{line: 1024, col: 13, offset: 41627},
																																					val:        "\t",
																																					ignoreCase: false,
																																				},
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																													&actionExpr{
																														pos: position{line: 187, col: 5, offset: 7002},
																														run: (*parser).callonDocumentBlock1417,
																														expr: &seqExpr{
																															pos: position{line: 187, col: 5, offset: 7002},
																															exprs: []interface{}{
																																&labeledExpr{
																																	pos:   position{line: 187, col: 5, offset: 7002},
																																	label: "key",
																																	expr: &actionExpr{
																																		pos: position{line: 191, col: 17, offset: 7127},
																																		run: (*parser).callonDocumentBlock1420,
																																		expr: &seqExpr{
																																			pos: position{line: 191, col: 17, offset: 7127},
																																			exprs: []interface{}{
																																				&notExpr{
																																					pos: position{line: 191, col: 17, offset: 7127},
																																					expr: &actionExpr{
																																						pos: position{line: 231, col: 14, offset: 8674},
																																						run: (*parser).callonDocumentBlock1423,
																																						expr: &litMatcher{
																																							pos:        position{line: 231, col: 14, offset: 8674},
																																							val:        "verse",
																																							ignoreCase: false,
																																						},
																																					},
																																				},
																																				&notExpr{
																																					pos: position{line: 191, col: 28, offset: 7138},
																																					expr: &actionExpr{
																																						pos: position{line: 975, col: 16, offset: 40537},
																																						run: (*parser).callonDocumentBlock1426,
																																						expr: &litMatcher{
																																							pos:        position{line: 975, col: 16, offset: 40537},
																																							val:        "literal",
																																							ignoreCase: false,
																																						},
																																					},
																																				},
																																				&labeledExpr{
																																					pos:   position{line: 191, col: 41, offset: 7151},
																																					label: "key",
																																					expr: &oneOrMoreExpr{
																																						pos: position{line: 191, col: 45, offset: 7155},
																																						expr: &seqExpr{
																																							pos: position{line: 191, col: 46, offset: 7156},
																																							exprs: []interface{}{
																																								&notExpr{
																																									pos: position{line: 191, col: 46, offset: 7156},
																																									expr: &litMatcher{
																																										pos:        position{line: 191, col: 47, offset: 7157},
																																										val:        "=",
																																										ignoreCase: false,
																																									},
																																								},
																																								&notExpr{
																																									pos: position{line: 191, col: 51, offset: 7161},
																																									expr: &litMatcher{
																																										pos:        position{line: 191, col: 52, offset: 7162},
																																										val:        ",",
																																										ignoreCase: false,
																																									},
																																								},
																																								&notExpr{
																																									pos: position{line: 191, col: 56, offset: 7166},
																																									expr: &litMatcher{
																																										pos:        position{line: 191, col: 57, offset: 7167},
																																										val:        "]",
																																										ignoreCase: false,
																																									},
																																								},
																																								&anyMatcher{
																																									line: 191, col: 61, offset: 7171,
																																								},
																																							},
																																						},
																																					},
																																				},
																																			},
																																		},
																																	},
																																},
																																&zeroOrOneExpr{
																																	pos: position{line: 187, col: 24, offset: 7021},
																																	expr: &litMatcher{
																																		pos:        position{line: 187, col: 24, offset: 7021},
																																		val:        ",",
																																		ignoreCase: false,
																																	},
																																},
																																&zeroOrMoreExpr{
																																	pos: position{line: 187, col: 29, offset: 7026},
																																	expr: &choiceExpr{
																																		pos: position{line: 1024, col: 7, offset: 41621},
																																		alternatives: []interface{}{
																																			&litMatcher{
																																				pos:        position{line: 1024, col: 7, offset: 41621},
																																				val:        " ",
																																				ignoreCase: false,
																																			},
																																			&actionExpr{
																																				pos: position{line: 1024, col: 13, offset: 41627},
																																				run: (*parser).callonDocumentBlock1443,
																																				expr: &litMatcher{
																																					pos:        position{line: 1024, col: 13, offset: 41627},
																																					val:        "\t",
																																					ignoreCase: false,
																																				},
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																									&litMatcher{
																										pos:        position{line: 181, col: 59, offset: 6775},
																										val:        "]",
																										ignoreCase: false,
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																			&zeroOrMoreExpr{
																				pos: position{line: 136, col: 131, offset: 5298},
																				expr: &choiceExpr{
																					pos: position{line: 1024, col: 7, offset: 41621},
																					alternatives: []interface{}{
																						&litMatcher{
																							pos:        position{line: 1024, col: 7, offset: 41621},
																							val:        " ",
																							ignoreCase: false,
																						},
																						&actionExpr{
																							pos: position{line: 1024, col: 13, offset: 41627},
																							run: (*parser).callonDocumentBlock1449,
																							expr: &litMatcher{
																								pos:        position{line: 1024, col: 13, offset: 41627},
																								val:        "\t",
																								ignoreCase: false,
																							},
																						},
																					},
																				},
																			},
																			&choiceExpr{
																				pos: position{line: 1032, col: 8, offset: 41723},
																				alternatives: []interface{}{
																					&litMatcher{
																						pos:        position{line: 1028, col: 12, offset: 41683},
																						val:        "\r\n",
																						ignoreCase: false,
																					},
																					&charClassMatcher{
																						pos:        position{line: 1028, col: 21, offset: 41692},
																						val:        "[\\r\\n]",
																						chars:      []rune{'\r', '\n'},
																						ignoreCase: false,
																						inverted:   false,
																					},
																					&notExpr{
																						pos: position{line: 1030, col: 8, offset: 41712},
																						expr: &anyMatcher{
																							line: 1030, col: 9, offset: 41713,
																						},
																					},
																				},
																			},
																		},
																	},
																},
															},
															&actionExpr{
																pos: position{line: 979, col: 21, offset: 40603},
																run: (*parser).callonDocumentBlock1456,
																expr: &seqExpr{
																	pos: position{line: 979, col: 21, offset: 40603},
																	exprs: []interface{}{
																		&litMatcher{
																			pos:        position{line: 979, col: 21, offset: 40603},
																			val:        "[literal]",
																			ignoreCase: false,
																		},
																		&zeroOrMoreExpr{
																			pos: position{line: 979, col: 33, offset: 40615},
																			expr: &choiceExpr{
																				pos: position{line: 1024, col: 7, offset: 41621},
																				alternatives: []interface{}{
																					&litMatcher{
																						pos:        position{line: 1024, col: 7, offset: 41621},
																						val:        " ",
																						ignoreCase: false,
																					},
																					&actionExpr{
																						pos: position{line: 1024, col: 13, offset: 41627},
																						run: (*parser).callonDocumentBlock1462,
																						expr: &litMatcher{
																							pos:        position{line: 1024, col: 13, offset: 41627},
																							val:        "\t",
																							ignoreCase: false,
																						},
																					},
																				},
																			},
																		},
																		&choiceExpr{
																			pos: position{line: 1028, col: 12, offset: 41683},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1028, col: 12, offset: 41683},
																					val:        "\r\n",
																					ignoreCase: false,
																				},
																				&charClassMatcher{
																					pos:        position{line: 1028, col: 21, offset: 41692},
																					val:        "[\\r\\n]",
																					chars:      []rune{'\r', '\n'},
																					ignoreCase: false,
																					inverted:   false,
																				},
																			},
																		},
																	},
																},
															},
															&zeroOrMoreExpr{
																pos: position{line: 971, col: 81, offset: 40368},
																expr: &actionExpr{
																	pos: position{line: 136, col: 21, offset: 5188},
																	run: (*parser).callonDocumentBlock1468,
																	expr: &seqExpr{
																		pos: position{line: 136, col: 21, offset: 5188},
																		exprs: []interface{}{
																			&labeledExpr{
																				pos:   position{line: 136, col: 21, offset: 5188},
																				label: "attr",
																				expr: &choiceExpr{
																					pos: position{line: 136, col: 27, offset: 5194},
																					alternatives: []interface{}{
																						&actionExpr{
																							pos: position{line: 145, col: 14, offset: 5645},
																							run: (*parser).callonDocumentBlock1472,
																							expr: &labeledExpr{
																								pos:   position{line: 145, col: 14, offset: 5645},
																								label: "id",
																								expr: &actionExpr{
																									pos: position{line: 151, col: 20, offset: 5775},
																									run: (*parser).callonDocumentBlock1474,
																									expr: &seqExpr{
																										pos: position{line: 151, col: 20, offset: 5775},
																										exprs: []interface{}{
																											&litMatcher{
																												pos:        position{line: 151, col: 20, offset: 5775},
																												val:        "[[",
																												ignoreCase: false,
																											},
																											&labeledExpr{
																												pos:   position{line: 151, col: 25, offset: 5780},
																												label: "id",
																												expr: &actionExpr{
																													pos: position{line: 1010, col: 7, offset: 41339},
																													run: (*parser).callonDocumentBlock1478,
																													expr: &oneOrMoreExpr{
																														pos: position{line: 1010, col: 7, offset: 41339},
																														expr: &seqExpr{
																															pos: position{line: 1010, col: 8, offset: 41340},
																															exprs: []interface{}{
																																&notExpr{
																																	pos: position{line: 1010, col: 8, offset: 41340},
																																	expr: &choiceExpr{
																																		pos: position{line: 1028, col: 12, offset: 41683},
																																		alternatives: []interface{}{
																																			&litMatcher{
																																				pos:        position{line: 1028, col: 12, offset: 41683},
																																				val:        "\r\n",
																																				ignoreCase: false,
																																			},
																																			&charClassMatcher{
																																				pos:        position{line: 1028, col: 21, offset: 41692},
																																				val:        "[\\r\\n]",
																																				chars:      []rune{'\r', '\n'},
																																				ignoreCase: false,
																																				inverted:   false,
																																			},
																																		},
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 1010, col: 17, offset: 41349},
																																	expr: &choiceExpr{
																																		pos: position{line: 1024, col: 7, offset: 41621},
																																		alternatives: []interface{}{
																																			&litMatcher{
																																				pos:        position{line: 1024, col: 7, offset: 41621},
																																				val:        " ",
																																				ignoreCase: false,
																																			},
																																			&actionExpr{
																																				pos: position{line: 1024, col: 13, offset: 41627},
																																				run: (*parser).callonDocumentBlock1488,
																																				expr: &litMatcher{
																																					pos:        position{line: 1024, col: 13, offset: 41627},
																																					val:        "\t",
																																					ignoreCase: false,
																																				},
																																			},
																																		},
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 1010, col: 21, offset: 41353},
																																	expr: &litMatcher{
																																		pos:        position{line: 1010, col: 22, offset: 41354},
																																		val:        "[",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 1010, col: 26, offset: 41358},
																																	expr: &litMatcher{
																																		pos:        position{line: 1010, col: 27, offset: 41359},
																																		val:        "]",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 1010, col: 31, offset: 41363},
																																	expr: &litMatcher{
																																		pos:        position{line: 1010, col: 32, offset: 41364},
																																		val:        "<<",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 1010, col: 37, offset: 41369},
																																	expr: &litMatcher{
																																		pos:        position{line: 1010, col: 38, offset: 41370},
																																		val:        ">>",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 1010, col: 43, offset: 41375},
																																	expr: &litMatcher{
																																		pos:        position{line: 1010, col: 44, offset: 41376},
																																		val:        ",",
																																		ignoreCase: false,
																																	},
																																},
																																&anyMatcher{
																																	line: 1010, col: 48, offset: 41380,
																																},
																															},
																														},
																													},
																												},
																											},
																											&litMatcher{
																												pos:        position{line: 151, col: 33, offset: 5788},
																												val:        "]]",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 147, col: 5, offset: 5691},
																							run: (*parser).callonDocumentBlock1502,
																							expr: &seqExpr{
																								pos: position{line: 147, col: 5, offset: 5691},
																								exprs: []interface{}{
																									&litMatcher{
																										pos:        position{line: 147, col: 5, offset: 5691},
																										val:        "[#",
																										ignoreCase: false,
																									},
																									&labeledExpr{
																										pos:   position{line: 147, col: 10, offset: 5696},
																										label: "id",
																										expr: &actionExpr{
																											pos: position{line: 1010, col: 7, offset: 41339},
																											run: (*parser).callonDocumentBlock1506,
																											expr: &oneOrMoreExpr{
																												pos: position{line: 1010, col: 7, offset: 41339},
																												expr: &seqExpr{
																													pos: position{line: 1010, col: 8, offset: 41340},
																													exprs: []interface{}{
																														&notExpr{
																															pos: position{line: 1010, col: 8, offset: 41340},
																															expr: &choiceExpr{
																																pos: position{line: 1028, col: 12, offset: 41683},
																																alternatives: []interface{}{
																																	&litMatcher{
																																		pos:        position{line: 1028, col: 12, offset: 41683},
																																		val:        "\r\n",
																																		ignoreCase: false,
																																	},
																																	&charClassMatcher{
																																		pos:        position{line: 1028, col: 21, offset: 41692},
																																		val:        "[\\r\\n]",
																																		chars:      []rune{'\r', '\n'},
																																		ignoreCase: false,
																																		inverted:   false,
																																	},
																																},
																															},
																														},
																														&notExpr{
																															pos: position{line: 1010, col: 17, offset: 41349},
																															expr: &choiceExpr{
																																pos: position{line: 1024, col: 7, offset: 41621},
																																alternatives: []interface{}{
																																	&litMatcher{
																																		pos:        position{line: 1024, col: 7, offset: 41621},
																																		val:        " ",
																																		ignoreCase: false,
																																	},
																																	&actionExpr{
																																		pos: position{line: 1024, col: 13, offset: 41627},
																																		run: (*parser).callonDocumentBlock1516,
																																		expr: &litMatcher{
																																			pos:        position{line: 1024, col: 13, offset: 41627},
																																			val:        "\t",
																																			ignoreCase: false,
																																		},
																																	},
																																},
																															},
																														},
																														&notExpr{
																															pos: position{line: 1010, col: 21, offset: 41353},
																															expr: &litMatcher{
																																pos:        position{line: 1010, col: 22, offset: 41354},
																																val:        "[",
																																ignoreCase: false,
																															},
																														},
																														&notExpr{
																															pos: position{line: 1010, col: 26, offset: 41358},
																															expr: &litMatcher{
																																pos:        position{line: 1010, col: 27, offset: 41359},
																																val:        "]",
																																ignoreCase: false,
																															},
																														},
																														&notExpr{
																															pos: position{line: 1010, col: 31, offset: 41363},
																															expr: &litMatcher{
																																pos:        position{line: 1010, col: 32, offset: 41364},
																																val:        "<<",
																																ignoreCase: false,
																															},
																														},
																														&notExpr{
																															pos: position{line: 1010, col: 37, offset: 41369},
																															expr: &litMatcher{
																																pos:        position{line: 1010, col: 38, offset: 41370},
																																val:        ">>",
																																ignoreCase: false,
																															},
																														},
																														&notExpr{
																															pos: position{line: 1010, col: 43, offset: 41375},
																															expr: &litMatcher{
																																pos:        position{line: 1010, col: 44, offset: 41376},
																																val:        ",",
																																ignoreCase: false,
																															},
																														},
																														&anyMatcher{
																															line: 1010, col: 48, offset: 41380,
																														},
																													},
																												},
																											},
																										},
																									},
																									&litMatcher{
																										pos:        position{line: 147, col: 18, offset: 5704},
																										val:        "]",
																										ignoreCase: false,
																									},
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 157, col: 17, offset: 5997},
																							run: (*parser).callonDocumentBlock1530,
																							expr: &seqExpr{
																								pos: position{line: 157, col: 17, offset: 5997},
																								exprs: []interface{}{
																									&litMatcher{
																										pos:        position{line: 157, col: 17, offset: 5997},
																										val:        ".",
																										ignoreCase: false,
																									},
																									&notExpr{
																										pos: position{line: 157, col: 21, offset: 6001},
																										expr: &litMatcher{
																											pos:        position{line: 157, col: 22, offset: 6002},
																											val:        ".",
																											ignoreCase: false,
																										},
																									},
																									&notExpr{
																										pos: position{line: 157, col: 26, offset: 6006},
																										expr: &choiceExpr{
																											pos: position{line: 1024, col: 7, offset: 41621},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1024, col: 7, offset: 41621},
																													val:        " ",
																													ignoreCase: false,
																												},
																												&actionExpr{
																													pos: position{line: 1024, col: 13, offset: 41627},
																													run: (*parser).callonDocumentBlock1538,
																													expr: &litMatcher{
																														pos:        position{line: 1024, col: 13, offset: 41627},
																														val:        "\t",
																														ignoreCase: false,
																													},
																												},
																											},
																										},
																									},
																									&labeledExpr{
																										pos:   position{line: 157, col: 30, offset: 6010},
																										label: "title",
																										expr: &actionExpr{
																											pos: position{line: 161, col: 24, offset: 6115},
																											run: (*parser).callonDocumentBlock1541,
																											expr: &oneOrMoreExpr{
																												pos: position{line: 161, col: 24, offset: 6115},
																												expr: &seqExpr{
																													pos: position{line: 161, col: 25, offset: 6116},
																													exprs: []interface{}{
																														&notExpr{
																															pos: position{line: 161, col: 25, offset: 6116},
																															expr: &choiceExpr{
																																pos: position{line: 1028, col: 12, offset: 41683},
																																alternatives: []interface{}{
																																	&litMatcher{
																																		pos:        position{line: 1028, col: 12, offset: 41683},
																																		val:        "\r\n",
																																		ignoreCase: false,
																																	},
																																	&charClassMatcher{
																																		pos:        position{line: 1028, col: 21, offset: 41692},
																																		val:        "[\\r\\n]",
																																		chars:      []rune{'\r', '\n'},
																																		ignoreCase: false,
																																		inverted:   false,
																																	},
																																},
																															},
																														},
																														&anyMatcher{
																															line: 161, col: 34, offset: 6125,
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 167, col: 16, offset: 6274},
																							run: (*parser).callonDocumentBlock1549,
																							expr: &seqExpr{
																								pos: position{line: 167, col: 16, offset: 6274},
																								exprs: []interface{}{
																									&litMatcher{
																										pos:        position{line: 167, col: 16, offset: 6274},
																										val:        "[.",
																										ignoreCase: false,
																									},
																									&notExpr{
																										pos: position{line: 167, col: 21, offset: 6279},
																										expr: &choiceExpr{
																											pos: position{line: 1024, col: 7, offset: 41621},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1024, col: 7, offset: 41621},
																													val:        " ",
																													ignoreCase: false,
																												},
																												&actionExpr{
																													pos: position{line: 1024, col: 13, offset: 41627},
																													run: (*parser).callonDocumentBlock1555,
																													expr: &litMatcher{
																														pos:        position{line: 1024, col: 13, offset: 41627},
																														val:        "\t",
																														ignoreCase: false,
																													},
																												},
																											},
																										},
																									},
																									&labeledExpr{
																										pos:   position{line: 167, col: 25, offset: 6283},
																										label: "role",
																										expr: &actionExpr{
																											pos: position{line: 171, col: 23, offset: 6387},
																											run: (*parser).callonDocumentBlock1558,
																											expr: &oneOrMoreExpr{
																												pos: position{line: 171, col: 23, offset: 6387},
																												expr: &seqExpr{
																													pos: position{line: 171, col: 24, offset: 6388},
																													exprs: []interface{}{
																														&notExpr{
																															pos: position{line: 171, col: 24, offset: 6388},
																															expr: &choiceExpr{
																																pos: position{line: 1028, col: 12, offset: 41683},
																																alternatives: []interface{}{
																																	&litMatcher{
																																		pos:        position{line: 1028, col: 12, offset: 41683},
																																		val:        "\r\n",
																																		ignoreCase: false,
																																	},
																																	&charClassMatcher{
																																		pos:        position{line: 1028, col: 21, offset: 41692},
																																		val:        "[\\r\\n]",
																																		chars:      []rune{'\r', '\n'},
																																		ignoreCase: false,
																																		inverted:   false,
																																	},
																																},
																															},
																														},
																														&notExpr{
																															pos: position{line: 171, col: 33, offset: 6397},
																															expr: &litMatcher{
																																pos:        position{line: 171, col: 34, offset: 6398},
																																val:        "]",
																																ignoreCase: false,
																															},
																														},
																														&anyMatcher{
																															line: 171, col: 38, offset: 6402,
																														},
																													},
																												},
																											},
																										},
																									},
																									&litMatcher{
																										pos:        position{line: 167, col: 51, offset: 6309},
																										val:        "]",
																										ignoreCase: false,
																									},
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 176, col: 30, offset: 6551},
																							run: (*parser).callonDocumentBlock1569,
																							expr: &seqExpr{
																								pos: position{line: 176, col: 30, offset: 6551},
																								exprs: []interface{}{
																									&litMatcher{
																										pos:        position{line: 176, col: 30, offset: 6551},
																										val:        "[",
																										ignoreCase: false,
																									},
																									&labeledExpr{
																										pos:   position{line: 176, col: 34, offset: 6555},
																										label: "k",
																										expr: &choiceExpr{
																											pos: position{line: 494, col: 19, offset: 19245},
																											alternatives: []interface{}{
																												&actionExpr{
																													pos: position{line: 494, col: 19, offset: 19245},
																													run: (*parser).callonDocumentBlock1574,
																													expr: &litMatcher{
																														pos:        position{line: 494, col: 19, offset: 19245},
																														val:        "TIP",
																														ignoreCase: false,
																													},
																												},
																												&actionExpr{
																													pos: position{line: 496, col: 5, offset: 19283},
																													run: (*parser).callonDocumentBlock1576,
																													expr: &litMatcher{
																														pos:        position{line: 496, col: 5, offset: 19283},
																														val:        "NOTE",
																														ignoreCase: false,
																													},
																												},
																												&actionExpr{
																													pos: position{line: 498, col: 5, offset: 19323},
																													run: (*parser).callonDocumentBlock1578,
																													expr: &litMatcher{
																														pos:        position{line: 498, col: 5, offset: 19323},
																														val:        "IMPORTANT",
																														ignoreCase: false,
																													},
																												},
																												&actionExpr{
																													pos: position{line: 500, col: 5, offset: 19373},
																													run: (*parser).callonDocumentBlock1580,
																													expr: &litMatcher{
																														pos:        position{line: 500, col: 5, offset: 19373},
																														val:        "WARNING",
																														ignoreCase: false,
																													},
																												},
																												&actionExpr{
																													pos: position{line: 502, col: 5, offset: 19419},
																													run: (*parser).callonDocumentBlock1582,
																													expr: &litMatcher{
																														pos:        position{line: 502, col: 5, offset: 19419},
																														val:        "CAUTION",
																														ignoreCase: false,
																													},
																												},
																											},
																										},
																									},
																									&litMatcher{
																										pos:        position{line: 176, col: 53, offset: 6574},
																										val:        "]",
																										ignoreCase: false,
																									},
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 199, col: 21, offset: 7312},
																							run: (*parser).callonDocumentBlock1585,
																							expr: &litMatcher{
																								pos:        position{line: 199, col: 21, offset: 7312},
																								val:        "[horizontal]",
																								ignoreCase: false,
																							},
																						},
																						&actionExpr{
																							pos: position{line: 181, col: 19, offset: 6735},
																							run: (*parser).callonDocumentBlock1587,
																							expr: &seqExpr{
																								pos: position{line: 181, col: 19, offset: 6735},
																								exprs: []interface{}{
																									&litMatcher{
																										pos:        position{line: 181, col: 19, offset: 6735},
																										val:        "[",
																										ignoreCase: false,
																									},
																									&notExpr{
																										pos: position{line: 181, col: 23, offset: 6739},
																										expr: &choiceExpr{
																											pos: position{line: 1024, col: 7, offset: 41621},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1024, col: 7, offset: 41621},
																													val:        " ",
																													ignoreCase: false,
																												},
																												&actionExpr{
																													pos: position{line: 1024, col: 13, offset: 41627},
																													run: (*parser).callonDocumentBlock1593,
																													expr: &litMatcher{
																														pos:        position{line: 1024, col: 13, offset: 41627},
																														val:        "\t",
																														ignoreCase: false,
																													},
																												},
																											},
																										},
																									},
																									&labeledExpr{
																										pos:   position{line: 181, col: 27, offset: 6743},
																										label: "attributes",
																										expr: &zeroOrMoreExpr{
																											pos: position{line: 181, col: 38, offset: 6754},
																											expr: &choiceExpr{
																												pos: position{line: 185, col: 21, offset: 6867},
																												alternatives: []interface{}{
																													&actionExpr{
																														pos: position{line: 185, col: 21, offset: 6867},
																														run: (*parser).callonDocumentBlock1598,
																														expr: &seqExpr{
																															pos: position{line: 185, col: 21, offset: 6867},
																															exprs: []interface{}{
																																&labeledExpr{
																																	pos:   position{line: 185, col: 21, offset: 6867},
																																	label: "key",
																																	expr: &actionExpr{
																																		pos: position{line: 191, col: 17, offset: 7127},
																																		run: (*parser).callonDocumentBlock1601,
																																		expr: &seqExpr{
																																			pos: position{line: 191, col: 17, offset: 7127},
																																			exprs: []interface{}{
																																				&notExpr{
																																					pos: position{line: 191, col: 17, offset: 7127},
																																					expr: &actionExpr{
																																						pos: position{line: 231, col: 14, offset: 8674},
																																						run: (*parser).callonDocumentBlock1604,
																																						expr: &litMatcher{
																																							pos:        position{line: 231, col: 14, offset: 8674},
																																							val:        "verse",
																																							ignoreCase: false,
																																						},
																																					},
																																				},
																																				&notExpr{
																																					pos: position{line: 191, col: 28, offset: 7138},
																																					expr: &actionExpr{
																																						pos: position{line: 975, col: 16, offset: 40537},
																																						run: (*parser).callonDocumentBlock1607,
																																						expr: &litMatcher{
																																							pos:        position{line: 975, col: 16, offset: 40537},
																																							val:        "literal",
																																							ignoreCase: false,
																																						},
																																					},
																																				},
																																				&labeledExpr{
																																					pos:   position{line: 191, col: 41, offset: 7151},
																																					label: "key",
																																					expr: &oneOrMoreExpr{
																																						pos: position{line: 191, col: 45, offset: 7155},
																																						expr: &seqExpr{
																																							pos: position{line: 191, col: 46, offset: 7156},
																																							exprs: []interface{}{
																																								&notExpr{
																																									pos: position{line: 191, col: 46, offset: 7156},
																																									expr: &litMatcher{
																																										pos:        position{line: 191, col: 47, offset: 7157},
																																										val:        "=",
																																										ignoreCase: false,
																																									},
																																								},
																																								&notExpr{
																																									pos: position{line: 191, col: 51, offset: 7161},
																																									expr: &litMatcher{
																																										pos:        position{line: 191, col: 52, offset: 7162},
																																										val:        ",",
																																										ignoreCase: false,
																																									},
																																								},
																																								&notExpr{
																																									pos: position{line: 191, col: 56, offset: 7166},
																																									expr: &litMatcher{
																																										pos:        position{line: 191, col: 57, offset: 7167},
																																										val:        "]",
																																										ignoreCase: false,
																																									},
																																								},
																																								&anyMatcher{
																																									line: 191, col: 61, offset: 7171,
																																								},
																																							},
																																						},
																																					},
																																				},
																																			},
																																		},
																																	},
																																},
																																&litMatcher{
																																	pos:        position{line: 185, col: 40, offset: 6886},
																																	val:        "=",
																																	ignoreCase: false,
																																},
																																&labeledExpr{
																																	pos:   position{line: 185, col: 44, offset: 6890},
																																	label: "value",
																																	expr: &actionExpr{
																																		pos: position{line: 195, col: 19, offset: 7230},
																																		run: (*parser).callonDocumentBlock1621,
																																		expr: &labeledExpr{
																																			pos:   position{line: 195, col: 19, offset: 7230},
																																			label: "value",
																																			expr: &zeroOrMoreExpr{
																																				pos: position{line: 195, col: 25, offset: 7236},
																																				expr: &seqExpr{
																																					pos: position{line: 195, col: 26, offset: 7237},
																																					exprs: []interface{}{
																																						&notExpr{
																																							pos: position{line: 195, col: 26, offset: 7237},
																																							expr: &litMatcher{
																																								pos:        position{line: 195, col: 27, offset: 7238},
																																								val:        "=",
																																								ignoreCase: false,
																																							},
																																						},
																																						&notExpr{
																																							pos: position{line: 195, col: 31, offset: 7242},
																																							expr: &litMatcher{
																																								pos:        position{line: 195, col: 32, offset: 7243},
																																								val:        ",",
																																								ignoreCase: false,
																																							},
																																						},
																																						&notExpr{
																																							pos: position{line: 195, col: 36, offset: 7247},
																																							expr: &litMatcher{
																																								pos:        position{line: 195, col: 37, offset: 7248},
																																								val:        "]",
																																								ignoreCase: false,
																																							},
																																						},
																																						&anyMatcher{
																																							line: 195, col: 41, offset: 7252,
																																						},
																																					},
																																				},
																																			},
																																		},
																																	},
																																},
																																&zeroOrOneExpr{
																																	pos: position{line: 185, col: 67, offset: 6913},
																																	expr: &litMatcher{
																																		pos:        position{line: 185, col: 67, offset: 6913},
																																		val:        ",",
																																		ignoreCase: false,
																																	},
																																},
																																&zeroOrMoreExpr{
																																	pos: position{line: 185, col: 72, offset: 6918},
																																	expr: &choiceExpr{
																																		pos: position{line: 1024, col: 7, offset: 41621},
																																		alternatives: []interface{}{
																																			&litMatcher{
																																				pos:        position{line: 1024, col: 7, offset: 41621},
																																				val:        " ",
																																				ignoreCase: false,
																																			},
																																			&actionExpr{
																																				pos: position{line: 1024, col: 13, offset: 41627},
																																				run: (*parser).callonDocumentBlock1637,
																																				expr: &litMatcher{
																																					pos:        position{line: 1024, col: 13, offset: 41627},
																																					val:        "\t",
																																					ignoreCase: false,
																																				},
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																													&actionExpr{
																														pos: position{line: 187, col: 5, offset: 7002},
																														run: (*parser).callonDocumentBlock1639,
																														expr: &seqExpr{
																															pos: position{line: 187, col: 5, offset: 7002},
																															exprs: []interface{}{
																																&labeledExpr{
																																	pos:   position{line: 187, col: 5, offset: 7002},
																																	label: "key",
																																	expr: &actionExpr{
																																		pos: position{line: 191, col: 17, offset: 7127},
																																		run: (*parser).callonDocumentBlock1642,
																																		expr: &seqExpr{
																																			pos: position{line: 191, col: 17, offset: 7127},
																																			exprs: []interface{}{
																																				&notExpr{
																																					pos: position{line: 191, col: 17, offset: 7127},
																																					expr: &actionExpr{
																																						pos: position{line: 231, col: 14, offset: 8674},
																																						run: (*parser).callonDocumentBlock1645,
																																						expr: &litMatcher{
																																							pos:        position{line: 231, col: 14, offset: 8674},
																																							val:        "verse",
																																							ignoreCase: false,
																																						},
																																					},
																																				},
																																				&notExpr{
																																					pos: position{line: 191, col: 28, offset: 7138},
																																					expr: &actionExpr{
																																						pos: position{line: 975, col: 16, offset: 40537},
																																						run: (*parser).callonDocumentBlock1648,
																																						expr: &litMatcher{
																																							pos:        position{line: 975, col: 16, offset: 40537},
																																							val:        "literal",
																																							ignoreCase: false,
																																						},
																																					},
																																				},
																																				&labeledExpr{
																																					pos:   position{line: 191, col: 41, offset: 7151},
																																					label: "key",
																																					expr: &oneOrMoreExpr{
																																						pos: position{line: 191, col: 45, offset: 7155},
																																						expr: &seqExpr{
																																							pos: position{line: 191, col: 46, offset: 7156},
																																							exprs: []interface{}{
																																								&notExpr{
																																									pos: position{line: 191, col: 46, offset: 7156},
																																									expr: &litMatcher{
																																										pos:        position{line: 191, col: 47, offset: 7157},
																																										val:        "=",
																																										ignoreCase: false,
																																									},
																																								},
																																								&notExpr{
																																									pos: position{line: 191, col: 51, offset: 7161},
																																									expr: &litMatcher{
																																										pos:        position{line: 191, col: 52, offset: 7162},
																																										val:        ",",
																																										ignoreCase: false,
																																									},
																																								},
																																								&notExpr{
																																									pos: position{line: 191, col: 56, offset: 7166},
																																									expr: &litMatcher{
																																										pos:        position{line: 191, col: 57, offset: 7167},
																																										val:        "]",
																																										ignoreCase: false,
																																									},
																																								},
																																								&anyMatcher{
																																									line: 191, col: 61, offset: 7171,
																																								},
																																							},
																																						},
																																					},
																																				},
																																			},
																																		},
																																	},
																																},
																																&zeroOrOneExpr{
																																	pos: position{line: 187, col: 24, offset: 7021},
																																	expr: &litMatcher{
																																		pos:        position{line: 187, col: 24, offset: 7021},
																																		val:        ",",
																																		ignoreCase: false,
																																	},
																																},
																																&zeroOrMoreExpr{
																																	pos: position{line: 187, col: 29, offset: 7026},
																																	expr: &choiceExpr{
																																		pos: position{line: 1024, col: 7, offset: 41621},
																																		alternatives: []interface{}{
																																			&litMatcher{
																																				pos:        position{line: 1024, col: 7, offset: 41621},
																																				val:        " ",
																																				ignoreCase: false,
																																			},
																																			&actionExpr{
																																				pos: position{line: 1024, col: 13, offset: 41627},
																																				run: (*parser).callonDocumentBlock1665,
																																				expr: &litMatcher{
																																					pos:        position{line: 1024, col: 13, offset: 41627},
																																					val:        "\t",
																																					ignoreCase: false,
																																				},
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																									&litMatcher{
																										pos:        position{line: 181, col: 59, offset: 6775},
																										val:        "]",
																										ignoreCase: false,
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																			&zeroOrMoreExpr{
																				pos: position{line: 136, col: 131, offset: 5298},
																				expr: &choiceExpr{
																					pos: position{line: 1024, col: 7, offset: 41621},
																					alternatives: []interface{}{
																						&litMatcher{
																							pos:        position{line: 1024, col: 7, offset: 41621},
																							val:        " ",
																							ignoreCase: false,
																						},
																						&actionExpr{
																							pos: position{line: 1024, col: 13, offset: 41627},
																							run: (*parser).callonDocumentBlock1671,
																							expr: &litMatcher{
																								pos:        position{line: 1024, col: 13, offset: 41627},
																								val:        "\t",
																								ignoreCase: false,
																							},
																						},
																					},
																				},
																			},
																			&choiceExpr{
																				pos: position{line: 1032, col: 8, offset: 41723},
																				alternatives: []interface{}{
																					&litMatcher{
																						pos:        position{line: 1028, col: 12, offset: 41683},
																						val:        "\r\n",
																						ignoreCase: false,
																					},
																					&charClassMatcher{
																						pos:        position{line: 1028, col: 21, offset: 41692},
																						val:        "[\\r\\n]",
																						chars:      []rune{'\r', '\n'},
																						ignoreCase: false,
																						inverted:   false,
																					},
																					&notExpr{
																						pos: position{line: 1030, col: 8, offset: 41712},
																						expr: &anyMatcher{
																							line: 1030, col: 9, offset: 41713,
																						},
																					},
																				},
																			},
																		},
																	},
																},
															},
														},
													},
												},
												&labeledExpr{
													pos:   position{line: 971, col: 100, offset: 40387},
													label: "content",
													expr: &actionExpr{
														pos: position{line: 984, col: 41, offset: 40787},
														run: (*parser).callonDocumentBlock1679,
														expr: &oneOrMoreExpr{
															pos: position{line: 984, col: 41, offset: 40787},
															expr: &seqExpr{
																pos: position{line: 984, col: 42, offset: 40788},
																exprs: []interface{}{
																	&notExpr{
																		pos: position{line: 984, col: 42, offset: 40788},
																		expr: &seqExpr{
																			pos: position{line: 984, col: 44, offset: 40790},
																			exprs: []interface{}{
																				&choiceExpr{
																					pos: position{line: 1028, col: 12, offset: 41683},
																					alternatives: []interface{}{
																						&litMatcher{
																							pos:        position{line: 1028, col: 12, offset: 41683},
																							val:        "\r\n",
																							ignoreCase: false,
																						},
																						&charClassMatcher{
																							pos:        position{line: 1028, col: 21, offset: 41692},
																							val:        "[\\r\\n]",
																							chars:      []rune{'\r', '\n'},
																							ignoreCase: false,
																							inverted:   false,
																						},
																					},
																				},
																				&actionExpr{
																					pos: position{line: 991, col: 14, offset: 40968},
																					run: (*parser).callonDocumentBlock1687,
																					expr: &seqExpr{
																						pos: position{line: 991, col: 14, offset: 40968},
																						exprs: []interface{}{
																							&notExpr{
																								pos: position{line: 991, col: 14, offset: 40968},
																								expr: &notExpr{
																									pos: position{line: 1030, col: 8, offset: 41712},
																									expr: &anyMatcher{
																										line: 1030, col: 9, offset: 41713,
																									},
																								},
																							},
																							&zeroOrMoreExpr{
																								pos: position{line: 991, col: 19, offset: 40973},
																								expr: &choiceExpr{
																									pos: position{line: 1024, col: 7, offset: 41621},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1024, col: 7, offset: 41621},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1024, col: 13, offset: 41627},
																											run: (*parser).callonDocumentBlock1695,
																											expr: &litMatcher{
																												pos:        position{line: 1024, col: 13, offset: 41627},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																							&choiceExpr{
																								pos: position{line: 1032, col: 8, offset: 41723},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1028, col: 12, offset: 41683},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 1028, col: 21, offset: 41692},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																									&notExpr{
																										pos: position{line: 1030, col: 8, offset: 41712},
																										expr: &anyMatcher{
																											line: 1030, col: 9, offset: 41713,
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&anyMatcher{
																		line: 984, col: 63, offset: 40809,
																	},
																},
															},
														},
													},
												},
												&choiceExpr{
													pos: position{line: 1032, col: 8, offset: 41723},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1028, col: 12, offset: 41683},
															val:        "\r\n",
															ignoreCase: false,
														},
														&charClassMatcher{
															pos:        position{line: 1028, col: 21, offset: 41692},
															val:        "[\\r\\n]",
															chars:      []rune{'\r', '\n'},
															ignoreCase: false,
															inverted:   false,
														},
														&notExpr{
															pos: position{line: 1030, col: 8, offset: 41712},
															expr: &anyMatcher{
																line: 1030, col: 9, offset: 41713,
															},
														},
													},
												},
											},
										},
									},
									&ruleRefExpr{
										pos:  position{line: 23, col: 138, offset: 926},
										name: "DelimitedBlock",
									},
									&ruleRefExpr{
										pos:  position{line: 23, col: 155, offset: 943},
										name: "Table",
									},
									&ruleRefExpr{
										pos:  position{line: 23, col: 163, offset: 951},
										name: "Paragraph",
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "FrontMatter",
			pos:  position{line: 30, col: 1, offset: 1159},
			expr: &ruleRefExpr{
				pos:  position{line: 30, col: 16, offset: 1174},
				name: "YamlFrontMatter",
			},
		},
		{
			name: "FrontMatter",
			pos:  position{line: 32, col: 1, offset: 1192},
			expr: &actionExpr{
				pos: position{line: 32, col: 16, offset: 1207},
				run: (*parser).callonFrontMatter1,
				expr: &seqExpr{
					pos: position{line: 32, col: 16, offset: 1207},
					exprs: []interface{}{
						&litMatcher{
							pos:        position{line: 36, col: 26, offset: 1366},
							val:        "---",
							ignoreCase: false,
						},
						&choiceExpr{
							pos: position{line: 1032, col: 8, offset: 41723},
							alternatives: []interface{}{
								&litMatcher{
									pos:        position{line: 1028, col: 12, offset: 41683},
									val:        "\r\n",
									ignoreCase: false,
								},
								&charClassMatcher{
									pos:        position{line: 1028, col: 21, offset: 41692},
									val:        "[\\r\\n]",
									chars:      []rune{'\r', '\n'},
									ignoreCase: false,
									inverted:   false,
								},
								&notExpr{
									pos: position{line: 1030, col: 8, offset: 41712},
									expr: &anyMatcher{
										line: 1030, col: 9, offset: 41713,
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 32, col: 37, offset: 1228},
							label: "content",
							expr: &actionExpr{
								pos: position{line: 38, col: 27, offset: 1403},
								run: (*parser).callonFrontMatter10,
								expr: &zeroOrMoreExpr{
									pos: position{line: 38, col: 27, offset: 1403},
									expr: &seqExpr{
										pos: position{line: 38, col: 28, offset: 1404},
										exprs: []interface{}{
											&notExpr{
												pos: position{line: 38, col: 28, offset: 1404},
												expr: &seqExpr{
													pos: position{line: 36, col: 26, offset: 1366},
													exprs: []interface{}{
														&litMatcher{
															pos:        position{line: 36, col: 26, offset: 1366},
															val:        "---",
															ignoreCase: false,
														},
														&choiceExpr{
															pos: position{line: 1032, col: 8, offset: 41723},
															alternatives: []interface{}{
																&litMatcher{
																	pos:        position{line: 1028, col: 12, offset: 41683},
																	val:        "\r\n",
																	ignoreCase: false,
																},
																&charClassMatcher{
																	pos:        position{line: 1028, col: 21, offset: 41692},
																	val:        "[\\r\\n]",
																	chars:      []rune{'\r', '\n'},
																	ignoreCase: false,
																	inverted:   false,
																},
																&notExpr{
																	pos: position{line: 1030, col: 8, offset: 41712},
																	expr: &anyMatcher{
																		line: 1030, col: 9, offset: 41713,
																	},
																},
															},
														},
													},
												},
											},
											&anyMatcher{
												line: 38, col: 50, offset: 1426,
											},
										},
									},
								},
							},
						},
						&litMatcher{
							pos:        position{line: 36, col: 26, offset: 1366},
							val:        "---",
							ignoreCase: false,
						},
						&choiceExpr{
							pos: position{line: 1032, col: 8, offset: 41723},
							alternatives: []interface{}{
								&litMatcher{
									pos:        position{line: 1028, col: 12, offset: 41683},
									val:        "\r\n",
									ignoreCase: false,
								},
								&charClassMatcher{
									pos:        position{line: 1028, col: 21, offset: 41692},
									val:        "[\\r\\n]",
									chars:      []rune{'\r', '\n'},
									ignoreCase: false,
									inverted:   false,
								},
								&notExpr{
									pos: position{line: 1030, col: 8, offset: 41712},
									expr: &anyMatcher{
										line: 1030, col: 9, offset: 41713,
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "DocumentHeader",
			pos:  position{line: 46, col: 1, offset: 1650},
			expr: &actionExpr{
				pos: position{line: 46, col: 19, offset: 1668},
				run: (*parser).callonDocumentHeader1,
				expr: &seqExpr{
					pos: position{line: 46, col: 19, offset: 1668},
					exprs: []interface{}{
						&labeledExpr{
							pos:   position{line: 46, col: 19, offset: 1668},
							label: "header",
							expr: &ruleRefExpr{
								pos:  position{line: 46, col: 27, offset: 1676},
								name: "Section0Title",
							},
						},
						&labeledExpr{
							pos:   position{line: 46, col: 42, offset: 1691},
							label: "authors",
							expr: &zeroOrOneExpr{
								pos: position{line: 46, col: 51, offset: 1700},
								expr: &choiceExpr{
									pos: position{line: 50, col: 20, offset: 1914},
									alternatives: []interface{}{
										&actionExpr{
											pos: position{line: 52, col: 30, offset: 2001},
											run: (*parser).callonDocumentHeader8,
											expr: &seqExpr{
												pos: position{line: 52, col: 30, offset: 2001},
												exprs: []interface{}{
													&zeroOrMoreExpr{
														pos: position{line: 52, col: 30, offset: 2001},
														expr: &choiceExpr{
															pos: position{line: 1024, col: 7, offset: 41621},
															alternatives: []interface{}{
																&litMatcher{
																	pos:        position{line: 1024, col: 7, offset: 41621},
																	val:        " ",
																	ignoreCase: false,
																},
																&actionExpr{
																	pos: position{line: 1024, col: 13, offset: 41627},
																	run: (*parser).callonDocumentHeader13,
																	expr: &litMatcher{
																		pos:        position{line: 1024, col: 13, offset: 41627},
																		val:        "\t",
																		ignoreCase: false,
																	},
																},
															},
														},
													},
													&notExpr{
														pos: position{line: 52, col: 34, offset: 2005},
														expr: &litMatcher{
															pos:        position{line: 52, col: 35, offset: 2006},
															val:        ":",
															ignoreCase: false,
														},
													},
													&labeledExpr{
														pos:   position{line: 52, col: 39, offset: 2010},
														label: "authors",
														expr: &oneOrMoreExpr{
															pos: position{line: 52, col: 48, offset: 2019},
															expr: &actionExpr{
																pos: position{line: 60, col: 19, offset: 2270},
																run: (*parser).callonDocumentHeader19,
																expr: &seqExpr{
																	pos: position{line: 60, col: 19, offset: 2270},
																	exprs: []interface{}{
																		&zeroOrMoreExpr{
																			pos: position{line: 60, col: 19, offset: 2270},
																			expr: &choiceExpr{
																				pos: position{line: 1024, col: 7, offset: 41621},
																				alternatives: []interface{}{
																					&litMatcher{
																						pos:        position{line: 1024, col: 7, offset: 41621},
																						val:        " ",
																						ignoreCase: false,
																					},
																					&actionExpr{
																						pos: position{line: 1024, col: 13, offset: 41627},
																						run: (*parser).callonDocumentHeader24,
																						expr: &litMatcher{
																							pos:        position{line: 1024, col: 13, offset: 41627},
																							val:        "\t",
																							ignoreCase: false,
																						},
																					},
																				},
																			},
																		},
																		&labeledExpr{
																			pos:   position{line: 60, col: 23, offset: 2274},
																			label: "namePart1",
																			expr: &actionExpr{
																				pos: position{line: 65, col: 27, offset: 2610},
																				run: (*parser).callonDocumentHeader27,
																				expr: &seqExpr{
																					pos: position{line: 65, col: 27, offset: 2610},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 65, col: 27, offset: 2610},
																							expr: &litMatcher{
																								pos:        position{line: 65, col: 28, offset: 2611},
																								val:        "<",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 65, col: 32, offset: 2615},
																							expr: &litMatcher{
																								pos:        position{line: 65, col: 33, offset: 2616},
																								val:        ";",
																								ignoreCase: false,
																							},
																						},
																						&oneOrMoreExpr{
																							pos: position{line: 65, col: 37, offset: 2620},
																							expr: &seqExpr{
																								pos: position{line: 65, col: 38, offset: 2621},
																								exprs: []interface{}{
																									&notExpr{
																										pos: position{line: 65, col: 38, offset: 2621},
																										expr: &choiceExpr{
																											pos: position{line: 1028, col: 12, offset: 41683},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1028, col: 12, offset: 41683},
																													val:        "\r\n",
																													ignoreCase: false,
																												},
																												&charClassMatcher{
																													pos:        position{line: 1028, col: 21, offset: 41692},
																													val:        "[\\r\\n]",
																													chars:      []rune{'\r', '\n'},
																													ignoreCase: false,
																													inverted:   false,
																												},
																											},
																										},
																									},
																									&notExpr{
																										pos: position{line: 65, col: 47, offset: 2630},
																										expr: &choiceExpr{
																											pos: position{line: 1024, col: 7, offset: 41621},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1024, col: 7, offset: 41621},
																													val:        " ",
																													ignoreCase: false,
																												},
																												&actionExpr{
																													pos: position{line: 1024, col: 13, offset: 41627},
																													run: (*parser).callonDocumentHeader42,
																													expr: &litMatcher{
																														pos:        position{line: 1024, col: 13, offset: 41627},
																														val:        "\t",
																														ignoreCase: false,
																													},
																												},
																											},
																										},
																									},
																									&anyMatcher{
																										line: 65, col: 51, offset: 2634,
																									},
																								},
																							},
																						},
																						&zeroOrMoreExpr{
																							pos: position{line: 65, col: 55, offset: 2638},
																							expr: &choiceExpr{
																								pos: position{line: 1024, col: 7, offset: 41621},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1024, col: 7, offset: 41621},
																										val:        " ",
																										ignoreCase: false,
																									},
																									&actionExpr{
																										pos: position{line: 1024, col: 13, offset: 41627},
																										run: (*parser).callonDocumentHeader48,
																										expr: &litMatcher{
																											pos:        position{line: 1024, col: 13, offset: 41627},
																											val:        "\t",
																											ignoreCase: false,
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																		&labeledExpr{
																			pos:   position{line: 60, col: 58, offset: 2309},
																			label: "namePart2",
																			expr: &zeroOrOneExpr{
																				pos: position{line: 60, col: 68, offset: 2319},
																				expr: &actionExpr{
																					pos: position{line: 65, col: 27, offset: 2610},
																					run: (*parser).callonDocumentHeader52,
																					expr: &seqExpr{
																						pos: position{line: 65, col: 27, offset: 2610},
																						exprs: []interface{}{
																							&notExpr{
																								pos: position{line: 65, col: 27, offset: 2610},
																								expr: &litMatcher{
																									pos:        position{line: 65, col: 28, offset: 2611},
																									val:        "<",
																									ignoreCase: false,
																								},
																							},
																							&notExpr{
																								pos: position{line: 65, col: 32, offset: 2615},
																								expr: &litMatcher{
																									pos:        position{line: 65, col: 33, offset: 2616},
																									val:        ";",
																									ignoreCase: false,
																								},
																							},
																							&oneOrMoreExpr{
																								pos: position{line: 65, col: 37, offset: 2620},
																								expr: &seqExpr{
																									pos: position{line: 65, col: 38, offset: 2621},
																									exprs: []interface{}{
																										&notExpr{
																											pos: position{line: 65, col: 38, offset: 2621},
																											expr: &choiceExpr{
																												pos: position{line: 1028, col: 12, offset: 41683},
																												alternatives: []interface{}{
																													&litMatcher{
																														pos:        position{line: 1028, col: 12, offset: 41683},
																														val:        "\r\n",
																														ignoreCase: false,
																													},
																													&charClassMatcher{
																														pos:        position{line: 1028, col: 21, offset: 41692},
																														val:        "[\\r\\n]",
																														chars:      []rune{'\r', '\n'},
																														ignoreCase: false,
																														inverted:   false,
																													},
																												},
																											},
																										},
																										&notExpr{
																											pos: position{line: 65, col: 47, offset: 2630},
																											expr: &choiceExpr{
																												pos: position{line: 1024, col: 7, offset: 41621},
																												alternatives: []interface{}{
																													&litMatcher{
																														pos:        position{line: 1024, col: 7, offset: 41621},
																														val:        " ",
																														ignoreCase: false,
																													},
																													&actionExpr{
																														pos: position{line: 1024, col: 13, offset: 41627},
																														run: (*parser).callonDocumentHeader67,
																														expr: &litMatcher{
																															pos:        position{line: 1024, col: 13, offset: 41627},
																															val:        "\t",
																															ignoreCase: false,
																														},
																													},
																												},
																											},
																										},
																										&anyMatcher{
																											line: 65, col: 51, offset: 2634,
																										},
																									},
																								},
																							},
																							&zeroOrMoreExpr{
																								pos: position{line: 65, col: 55, offset: 2638},
																								expr: &choiceExpr{
																									pos: position{line: 1024, col: 7, offset: 41621},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1024, col: 7, offset: 41621},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1024, col: 13, offset: 41627},
																											run: (*parser).callonDocumentHeader73,
																											expr: &litMatcher{
																												pos:        position{line: 1024, col: 13, offset: 41627},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																		&labeledExpr{
																			pos:   position{line: 60, col: 94, offset: 2345},
																			label: "namePart3",
																			expr: &zeroOrOneExpr{
																				pos: position{line: 60, col: 104, offset: 2355},
																				expr: &actionExpr{
																					pos: position{line: 65, col: 27, offset: 2610},
																					run: (*parser).callonDocumentHeader77,
																					expr: &seqExpr{
																						pos: position{line: 65, col: 27, offset: 2610},
																						exprs: []interface{}{
																							&notExpr{
																								pos: position{line: 65, col: 27, offset: 2610},
																								expr: &litMatcher{
																									pos:        position{line: 65, col: 28, offset: 2611},
																									val:        "<",
																									ignoreCase: false,
																								},
																							},
																							&notExpr{
																								pos: position{line: 65, col: 32, offset: 2615},
																								expr: &litMatcher{
																									pos:        position{line: 65, col: 33, offset: 2616},
																									val:        ";",
																									ignoreCase: false,
																								},
																							},
																							&oneOrMoreExpr{
																								pos: position{line: 65, col: 37, offset: 2620},
																								expr: &seqExpr{
																									pos: position{line: 65, col: 38, offset: 2621},
																									exprs: []interface{}{
																										&notExpr{
																											pos: position{line: 65, col: 38, offset: 2621},
																											expr: &choiceExpr{
																												pos: position{line: 1028, col: 12, offset: 41683},
																												alternatives: []interface{}{
																													&litMatcher{
																														pos:        position{line: 1028, col: 12, offset: 41683},
																														val:        "\r\n",
																														ignoreCase: false,
																													},
																													&charClassMatcher{
																														pos:        position{line: 1028, col: 21, offset: 41692},
																														val:        "[\\r\\n]",
																														chars:      []rune{'\r', '\n'},
																														ignoreCase: false,
																														inverted:   false,
																													},
																												},
																											},
																										},
																										&notExpr{
																											pos: position{line: 65, col: 47, offset: 2630},
																											expr: &choiceExpr{
																												pos: position{line: 1024, col: 7, offset: 41621},
																												alternatives: []interface{}{
																													&litMatcher{
																														pos:        position{line: 1024, col: 7, offset: 41621},
																														val:        " ",
																														ignoreCase: false,
																													},
																													&actionExpr{
																														pos: position{line: 1024, col: 13, offset: 41627},
																														run: (*parser).callonDocumentHeader92,
																														expr: &litMatcher{
																															pos:        position{line: 1024, col: 13, offset: 41627},
																															val:        "\t",
																															ignoreCase: false,
																														},
																													},
																												},
																											},
																										},
																										&anyMatcher{
																											line: 65, col: 51, offset: 2634,
																										},
																									},
																								},
																							},
																							&zeroOrMoreExpr{
																								pos: position{line: 65, col: 55, offset: 2638},
																								expr: &choiceExpr{
																									pos: position{line: 1024, col: 7, offset: 41621},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1024, col: 7, offset: 41621},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1024, col: 13, offset: 41627},
																											run: (*parser).callonDocumentHeader98,
																											expr: &litMatcher{
																												pos:        position{line: 1024, col: 13, offset: 41627},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																		&labeledExpr{
																			pos:   position{line: 60, col: 130, offset: 2381},
																			label: "email",
																			expr: &zeroOrOneExpr{
																				pos: position{line: 60, col: 136, offset: 2387},
																				expr: &actionExpr{
																					pos: position{line: 69, col: 24, offset: 2701},
																					run: (*parser).callonDocumentHeader102,
																					expr: &seqExpr{
																						pos: position{line: 69, col: 24, offset: 2701},
																						exprs: []interface{}{
																							&litMatcher{
																								pos:        position{line: 69, col: 24, offset: 2701},
																								val:        "<",
																								ignoreCase: false,
																							},
																							&labeledExpr{
																								pos:   position{line: 69, col: 28, offset: 2705},
																								label: "email",
																								expr: &oneOrMoreExpr{
																									pos: position{line: 69, col: 34, offset: 2711},
																									expr: &seqExpr{
																										pos: position{line: 69, col: 35, offset: 2712},
																										exprs: []interface{}{
																											&notExpr{
																												pos: position{line: 69, col: 35, offset: 2712},
																												expr: &litMatcher{
																													pos:        position{line: 69, col: 36, offset: 2713},
																													val:        ">",
																													ignoreCase: false,
																												},
																											},
																											&notExpr{
																												pos: position{line: 69, col: 40, offset: 2717},
																												expr: &choiceExpr{
																													pos: position{line: 1032, col: 8, offset: 41723},
																													alternatives: []interface{}{
																														&litMatcher{
																															pos:        position{line: 1028, col: 12, offset: 41683},
																															val:        "\r\n",
																															ignoreCase: false,
																														},
																														&charClassMatcher{
																															pos:        position{line: 1028, col: 21, offset: 41692},
																															val:        "[\\r\\n]",
																															chars:      []rune{'\r', '\n'},
																															ignoreCase: false,
																															inverted:   false,
																														},
																														&notExpr{
																															pos: position{line: 1030, col: 8, offset: 41712},
																															expr: &anyMatcher{
																																line: 1030, col: 9, offset: 41713,
																															},
																														},
																													},
																												},
																											},
																											&anyMatcher{
																												line: 69, col: 45, offset: 2722,
																											},
																										},
																									},
																								},
																							},
																							&litMatcher{
																								pos:        position{line: 69, col: 49, offset: 2726},
																								val:        ">",
																								ignoreCase: false,
																							},
																						},
																					},
																				},
																			},
																		},
																		&zeroOrMoreExpr{
																			pos: position{line: 60, col: 159, offset: 2410},
																			expr: &choiceExpr{
																				pos: position{line: 1024, col: 7, offset: 41621},
																				alternatives: []interface{}{
																					&litMatcher{
																						pos:        position{line: 1024, col: 7, offset: 41621},
																						val:        " ",
																						ignoreCase: false,
																					},
																					&actionExpr{
																						pos: position{line: 1024, col: 13, offset: 41627},
																						run: (*parser).callonDocumentHeader121,
																						expr: &litMatcher{
																							pos:        position{line: 1024, col: 13, offset: 41627},
																							val:        "\t",
																							ignoreCase: false,
																						},
																					},
																				},
																			},
																		},
																		&zeroOrOneExpr{
																			pos: position{line: 60, col: 163, offset: 2414},
																			expr: &litMatcher{
																				pos:        position{line: 60, col: 163, offset: 2414},
																				val:        ";",
																				ignoreCase: false,
																			},
																		},
																		&zeroOrMoreExpr{
																			pos: position{line: 60, col: 168, offset: 2419},
																			expr: &choiceExpr{
																				pos: position{line: 1024, col: 7, offset: 41621},
																				alternatives: []interface{}{
																					&litMatcher{
																						pos:        position{line: 1024, col: 7, offset: 41621},
																						val:        " ",
																						ignoreCase: false,
																					},
																					&actionExpr{
																						pos: position{line: 1024, col: 13, offset: 41627},
																						run: (*parser).callonDocumentHeader128,
																						expr: &litMatcher{
																							pos:        position{line: 1024, col: 13, offset: 41627},
																							val:        "\t",
																							ignoreCase: false,
																						},
																					},
																				},
																			},
																		},
																	},
																},
															},
														},
													},
													&choiceExpr{
														pos: position{line: 1032, col: 8, offset: 41723},
														alternatives: []interface{}{
															&litMatcher{
																pos:        position{line: 1028, col: 12, offset: 41683},
																val:        "\r\n",
																ignoreCase: false,
															},
															&charClassMatcher{
																pos:        position{line: 1028, col: 21, offset: 41692},
																val:        "[\\r\\n]",
																chars:      []rune{'\r', '\n'},
																ignoreCase: false,
																inverted:   false,
															},
															&notExpr{
																pos: position{line: 1030, col: 8, offset: 41712},
																expr: &anyMatcher{
																	line: 1030, col: 9, offset: 41713,
																},
															},
														},
													},
												},
											},
										},
										&actionExpr{
											pos: position{line: 56, col: 33, offset: 2138},
											run: (*parser).callonDocumentHeader135,
											expr: &seqExpr{
												pos: position{line: 56, col: 33, offset: 2138},
												exprs: []interface{}{
													&zeroOrMoreExpr{
														pos: position{line: 56, col: 33, offset: 2138},
														expr: &choiceExpr{
															pos: position{line: 1024, col: 7, offset: 41621},
															alternatives: []interface{}{
																&litMatcher{
																	pos:        position{line: 1024, col: 7, offset: 41621},
																	val:        " ",
																	ignoreCase: false,
																},
																&actionExpr{
																	pos: position{line: 1024, col: 13, offset: 41627},
																	run: (*parser).callonDocumentHeader140,
																	expr: &litMatcher{
																		pos:        position{line: 1024, col: 13, offset: 41627},
																		val:        "\t",
																		ignoreCase: false,
																	},
																},
															},
														},
													},
													&litMatcher{
														pos:        position{line: 56, col: 37, offset: 2142},
														val:        ":author:",
														ignoreCase: false,
													},
													&labeledExpr{
														pos:   position{line: 56, col: 48, offset: 2153},
														label: "author",
														expr: &actionExpr{
															pos: position{line: 60, col: 19, offset: 2270},
															run: (*parser).callonDocumentHeader144,
															expr: &seqExpr{
																pos: position{line: 60, col: 19, offset: 2270},
																exprs: []interface{}{
																	&zeroOrMoreExpr{
																		pos: position{line: 60, col: 19, offset: 2270},
																		expr: &choiceExpr{
																			pos: position{line: 1024, col: 7, offset: 41621},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1024, col: 7, offset: 41621},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1024, col: 13, offset: 41627},
																					run: (*parser).callonDocumentHeader149,
																					expr: &litMatcher{
																						pos:        position{line: 1024, col: 13, offset: 41627},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 60, col: 23, offset: 2274},
																		label: "namePart1",
																		expr: &actionExpr{
																			pos: position{line: 65, col: 27, offset: 2610},
																			run: (*parser).callonDocumentHeader152,
																			expr: &seqExpr{
																				pos: position{line: 65, col: 27, offset: 2610},
																				exprs: []interface{}{
																					&notExpr{
																						pos: position{line: 65, col: 27, offset: 2610},
																						expr: &litMatcher{
																							pos:        position{line: 65, col: 28, offset: 2611},
																							val:        "<",
																							ignoreCase: false,
																						},
																					},
																					&notExpr{
																						pos: position{line: 65, col: 32, offset: 2615},
																						expr: &litMatcher{
																							pos:        position{line: 65, col: 33, offset: 2616},
																							val:        ";",
																							ignoreCase: false,
																						},
																					},
																					&oneOrMoreExpr{
																						pos: position{line: 65, col: 37, offset: 2620},
																						expr: &seqExpr{
																							pos: position{line: 65, col: 38, offset: 2621},
																							exprs: []interface{}{
																								&notExpr{
																									pos: position{line: 65, col: 38, offset: 2621},
																									expr: &choiceExpr{
																										pos: position{line: 1028, col: 12, offset: 41683},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1028, col: 12, offset: 41683},
																												val:        "\r\n",
																												ignoreCase: false,
																											},
																											&charClassMatcher{
																												pos:        position{line: 1028, col: 21, offset: 41692},
																												val:        "[\\r\\n]",
																												chars:      []rune{'\r', '\n'},
																												ignoreCase: false,
																												inverted:   false,
																											},
																										},
																									},
																								},
																								&notExpr{
																									pos: position{line: 65, col: 47, offset: 2630},
																									expr: &choiceExpr{
																										pos: position{line: 1024, col: 7, offset: 41621},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1024, col: 7, offset: 41621},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 1024, col: 13, offset: 41627},
																												run: (*parser).callonDocumentHeader167,
																												expr: &litMatcher{
																													pos:        position{line: 1024, col: 13, offset: 41627},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																								&anyMatcher{
																									line: 65, col: 51, offset: 2634,
																								},
																							},
																						},
																					},
																					&zeroOrMoreExpr{
																						pos: position{line: 65, col: 55, offset: 2638},
																						expr: &choiceExpr{
																							pos: position{line: 1024, col: 7, offset: 41621},
																							alternatives: []interface{}{
																								&litMatcher{
																									pos:        position{line: 1024, col: 7, offset: 41621},
																									val:        " ",
																									ignoreCase: false,
																								},
																								&actionExpr{
																									pos: position{line: 1024, col: 13, offset: 41627},
																									run: (*parser).callonDocumentHeader173,
																									expr: &litMatcher{
																										pos:        position{line: 1024, col: 13, offset: 41627},
																										val:        "\t",
																										ignoreCase: false,
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 60, col: 58, offset: 2309},
																		label: "namePart2",
																		expr: &zeroOrOneExpr{
																			pos: position{line: 60, col: 68, offset: 2319},
																			expr: &actionExpr{
																				pos: position{line: 65, col: 27, offset: 2610},
																				run: (*parser).callonDocumentHeader52,
																				expr: &seqExpr{
																					pos: position{line: 65, col: 27, offset: 2610},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 65, col: 27, offset: 2610},
																							expr: &litMatcher{
																								pos:        position{line: 65, col: 28, offset: 2611},
																								val:        "<",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 65, col: 32, offset: 2615},
																							expr: &litMatcher{
																								pos:        position{line: 65, col: 33, offset: 2616},
																								val:        ";",
																								ignoreCase: false,
																							},
																						},
																						&oneOrMoreExpr{
																							pos: position{line: 65, col: 37, offset: 2620},
																							expr: &seqExpr{
																								pos: position{line: 65, col: 38, offset: 2621},
																								exprs: []interface{}{
																									&notExpr{
																										pos: position{line: 65, col: 38, offset: 2621},
																										expr: &choiceExpr{
																											pos: position{line: 1028, col: 12, offset: 41683},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1028, col: 12, offset: 41683},
																													val:        "\r\n",
																													ignoreCase: false,
																												},
																												&charClassMatcher{
																													pos:        position{line: 1028, col: 21, offset: 41692},
																													val:        "[\\r\\n]",
																													chars:      []rune{'\r', '\n'},
																													ignoreCase: false,
																													inverted:   false,
																												},
																											},
																										},
																									},
																									&notExpr{
																										pos: position{line: 65, col: 47, offset: 2630},
																										expr: &choiceExpr{
																											pos: position{line: 1024, col: 7, offset: 41621},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1024, col: 7, offset: 41621},
																													val:        " ",
																													ignoreCase: false,
																												},
																												&actionExpr{
																													pos: position{line: 1024, col: 13, offset: 41627},
																													run: (*parser).callonDocumentHeader67,
																													expr: &litMatcher{
																														pos:        position{line: 1024, col: 13, offset: 41627},
																														val:        "\t",
																														ignoreCase: false,
																													},
																												},
																											},
																										},
																									},
																									&anyMatcher{
																										line: 65, col: 51, offset: 2634,
																									},
																								},
																							},
																						},
																						&zeroOrMoreExpr{
																							pos: position{line: 65, col: 55, offset: 2638},
																							expr: &choiceExpr{
																								pos: position{line: 1024, col: 7, offset: 41621},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1024, col: 7, offset: 41621},
																										val:        " ",
																										ignoreCase: false,
																									},
																									&actionExpr{
																										pos: position{line: 1024, col: 13, offset: 41627},
																										run: (*parser).callonDocumentHeader73,
																										expr: &litMatcher{
																											pos:        position{line: 1024, col: 13, offset: 41627},
																											val:        "\t",
																											ignoreCase: false,
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 60, col: 94, offset: 2345},
																		label: "namePart3",
																		expr: &zeroOrOneExpr{
																			pos: position{line: 60, col: 104, offset: 2355},
																			expr: &actionExpr{
																				pos: position{line: 65, col: 27, offset: 2610},
																				run: (*parser).callonDocumentHeader77,
																				expr: &seqExpr{
																					pos: position{line: 65, col: 27, offset: 2610},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 65, col: 27, offset: 2610},
																							expr: &litMatcher{
																								pos:        position{line: 65, col: 28, offset: 2611},
																								val:        "<",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 65, col: 32, offset: 2615},
																							expr: &litMatcher{
																								pos:        position{line: 65, col: 33, offset: 2616},
																								val:        ";",
																								ignoreCase: false,
																							},
																						},
																						&oneOrMoreExpr{
																							pos: position{line: 65, col: 37, offset: 2620},
																							expr: &seqExpr{
																								pos: position{line: 65, col: 38, offset: 2621},
																								exprs: []interface{}{
																									&notExpr{
																										pos: position{line: 65, col: 38, offset: 2621},
																										expr: &choiceExpr{
																											pos: position{line: 1028, col: 12, offset: 41683},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1028, col: 12, offset: 41683},
																													val:        "\r\n",
																													ignoreCase: false,
																												},
																												&charClassMatcher{
																													pos:        position{line: 1028, col: 21, offset: 41692},
																													val:        "[\\r\\n]",
																													chars:      []rune{'\r', '\n'},
																													ignoreCase: false,
																													inverted:   false,
																												},
																											},
																										},
																									},
																									&notExpr{
																										pos: position{line: 65, col: 47, offset: 2630},
																										expr: &choiceExpr{
																											pos: position{line: 1024, col: 7, offset: 41621},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1024, col: 7, offset: 41621},
																													val:        " ",
																													ignoreCase: false,
																												},
																												&actionExpr{
																													pos: position{line: 1024, col: 13, offset: 41627},
																													run: (*parser).callonDocumentHeader92,
																													expr: &litMatcher{
																														pos:        position{line: 1024, col: 13, offset: 41627},
																														val:        "\t",
																														ignoreCase: false,
																													},
																												},
																											},
																										},
																									},
																									&anyMatcher{
																										line: 65, col: 51, offset: 2634,
																									},
																								},
																							},
																						},
																						&zeroOrMoreExpr{
																							pos: position{line: 65, col: 55, offset: 2638},
																							expr: &choiceExpr{
																								pos: position{line: 1024, col: 7, offset: 41621},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1024, col: 7, offset: 41621},
																										val:        " ",
																										ignoreCase: false,
																									},
																									&actionExpr{
																										pos: position{line: 1024, col: 13, offset: 41627},
																										run: (*parser).callonDocumentHeader98,
																										expr: &litMatcher{
																											pos:        position{line: 1024, col: 13, offset: 41627},
																											val:        "\t",
																											ignoreCase: false,
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 60, col: 130, offset: 2381},
																		label: "email",
																		expr: &zeroOrOneExpr{
																			pos: position{line: 60, col: 136, offset: 2387},
																			expr: &actionExpr{
																				pos: position{line: 69, col: 24, offset: 2701},
																				run: (*parser).callonDocumentHeader102,
																				expr: &seqExpr{
																					pos: position{line: 69, col: 24, offset: 2701},
																					exprs: []interface{}{
																						&litMatcher{
																							pos:        position{line: 69, col: 24, offset: 2701},
																							val:        "<",
																							ignoreCase: false,
																						},
																						&labeledExpr{
																							pos:   position{line: 69, col: 28, offset: 2705},
																							label: "email",
																							expr: &oneOrMoreExpr{
																								pos: position{line: 69, col: 34, offset: 2711},
																								expr: &seqExpr{
																									pos: position{line: 69, col: 35, offset: 2712},
																									exprs: []interface{}{
																										&notExpr{
																											pos: position{line: 69, col: 35, offset: 2712},
																											expr: &litMatcher{
																												pos:        position{line: 69, col: 36, offset: 2713},
																												val:        ">",
																												ignoreCase: false,
																											},
																										},
																										&notExpr{
																											pos: position{line: 69, col: 40, offset: 2717},
																											expr: &choiceExpr{
																												pos: position{line: 1032, col: 8, offset: 41723},
																												alternatives: []interface{}{
																													&litMatcher{
																														pos:        position{line: 1028, col: 12, offset: 41683},
																														val:        "\r\n",
																														ignoreCase: false,
																													},
																													&charClassMatcher{
																														pos:        position{line: 1028, col: 21, offset: 41692},
																														val:        "[\\r\\n]",
																														chars:      []rune{'\r', '\n'},
																														ignoreCase: false,
																														inverted:   false,
																													},
																													&notExpr{
																														pos: position{line: 1030, col: 8, offset: 41712},
																														expr: &anyMatcher{
																															line: 1030, col: 9, offset: 41713,
																														},
																													},
																												},
																											},
																										},
																										&anyMatcher{
																											line: 69, col: 45, offset: 2722,
																										},
																									},
																								},
																							},
																						},
																						&litMatcher{
																							pos:        position{line: 69, col: 49, offset: 2726},
																							val:        ">",
																							ignoreCase: false,
																						},
																					},
																				},
																			},
																		},
																	},
																	&zeroOrMoreExpr{
																		pos: position{line: 60, col: 159, offset: 2410},
																		expr: &choiceExpr{
																			pos: position{line: 1024, col: 7, offset: 41621},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1024, col: 7, offset: 41621},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1024, col: 13, offset: 41627},
																					run: (*parser).callonDocumentHeader246,
																					expr: &litMatcher{
																						pos:        position{line: 1024, col: 13, offset: 41627},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&zeroOrOneExpr{
																		pos: position{line: 60, col: 163, offset: 2414},
																		expr: &litMatcher{
																			pos:        position{line: 60, col: 163, offset: 2414},
																			val:        ";",
																			ignoreCase: false,
																		},
																	},
																	&zeroOrMoreExpr{
																		pos: position{line: 60, col: 168, offset: 2419},
																		expr: &choiceExpr{
																			pos: position{line: 1024, col: 7, offset: 41621},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1024, col: 7, offset: 41621},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1024, col: 13, offset: 41627},
																					run: (*parser).callonDocumentHeader253,
																					expr: &litMatcher{
																						pos:        position{line: 1024, col: 13, offset: 41627},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																},
															},
														},
													},
												},
											},
										},
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 46, col: 69, offset: 1718},
							label: "revision",
							expr: &zeroOrOneExpr{
								pos: position{line: 46, col: 79, offset: 1728},
								expr: &actionExpr{
									pos: position{line: 75, col: 21, offset: 2916},
									run: (*parser).callonDocumentHeader257,
									expr: &seqExpr{
										pos: position{line: 75, col: 21, offset: 2916},
										exprs: []interface{}{
											&zeroOrMoreExpr{
												pos: position{line: 75, col: 21, offset: 2916},
												expr: &choiceExpr{
													pos: position{line: 1024, col: 7, offset: 41621},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1024, col: 7, offset: 41621},
															val:        " ",
															ignoreCase: false,
														},
														&actionExpr{
															pos: position{line: 1024, col: 13, offset: 41627},
															run: (*parser).callonDocumentHeader262,
															expr: &litMatcher{
																pos:        position{line: 1024, col: 13, offset: 41627},
																val:        "\t",
																ignoreCase: false,
															},
														},
													},
												},
											},
											&notExpr{
												pos: position{line: 75, col: 25, offset: 2920},
												expr: &litMatcher{
													pos:        position{line: 75, col: 26, offset: 2921},
													val:        ":",
													ignoreCase: false,
												},
											},
											&labeledExpr{
												pos:   position{line: 75, col: 30, offset: 2925},
												label: "revnumber",
												expr: &zeroOrOneExpr{
													pos: position{line: 75, col: 40, offset: 2935},
													expr: &choiceExpr{
														pos: position{line: 80, col: 27, offset: 3238},
														alternatives: []interface{}{
															&actionExpr{
																pos: position{line: 80, col: 27, offset: 3238},
																run: (*parser).callonDocumentHeader269,
																expr: &seqExpr{
																	pos: position{line: 80, col: 27, offset: 3238},
																	exprs: []interface{}{
																		&litMatcher{
																			pos:        position{line: 80, col: 27, offset: 3238},
																			val:        "v",
																			ignoreCase: true,
																		},
																		&actionExpr{
																			pos: position{line: 1020, col: 10, offset: 41573},
																			run: (*parser).callonDocumentHeader272,
																			expr: &charClassMatcher{
																				pos:        position{line: 1020, col: 10, offset: 41573},
																				val:        "[0-9]",
																				ranges:     []rune{'0', '9'},
																				ignoreCase: false,
																				inverted:   false,
																			},
																		},
																		&zeroOrMoreExpr{
																			pos: position{line: 80, col: 39, offset: 3250},
																			expr: &seqExpr{
																				pos: position{line: 80, col: 40, offset: 3251},
																				exprs: []interface{}{
																					&notExpr{
																						pos: position{line: 80, col: 40, offset: 3251},
																						expr: &choiceExpr{
																							pos: position{line: 1032, col: 8, offset: 41723},
																							alternatives: []interface{}{
																								&litMatcher{
																									pos:        position{line: 1028, col: 12, offset: 41683},
																									val:        "\r\n",
																									ignoreCase: false,
																								},
																								&charClassMatcher{
																									pos:        position{line: 1028, col: 21, offset: 41692},
																									val:        "[\\r\\n]",
																									chars:      []rune{'\r', '\n'},
																									ignoreCase: false,
																									inverted:   false,
																								},
																								&notExpr{
																									pos: position{line: 1030, col: 8, offset: 41712},
																									expr: &anyMatcher{
																										line: 1030, col: 9, offset: 41713,
																									},
																								},
																							},
																						},
																					},
																					&notExpr{
																						pos: position{line: 80, col: 45, offset: 3256},
																						expr: &litMatcher{
																							pos:        position{line: 80, col: 46, offset: 3257},
																							val:        ",",
																							ignoreCase: false,
																						},
																					},
																					&notExpr{
																						pos: position{line: 80, col: 50, offset: 3261},
																						expr: &litMatcher{
																							pos:        position{line: 80, col: 51, offset: 3262},
																							val:        ":",
																							ignoreCase: false,
																						},
																					},
																					&anyMatcher{
																						line: 80, col: 55, offset: 3266,
																					},
																				},
																			},
																		},
																	},
																},
															},
															&actionExpr{
																pos: position{line: 82, col: 5, offset: 3307},
																run: (*parser).callonDocumentHeader287,
																expr: &seqExpr{
																	pos: position{line: 82, col: 5, offset: 3307},
																	exprs: []interface{}{
																		&zeroOrOneExpr{
																			pos: position{line: 82, col: 5, offset: 3307},
																			expr: &litMatcher{
																				pos:        position{line: 82, col: 5, offset: 3307},
																				val:        "v",
																				ignoreCase: true,
																			},
																		},
																		&actionExpr{
																			pos: position{line: 1020, col: 10, offset: 41573},
																			run: (*parser).callonDocumentHeader291,
																			expr: &charClassMatcher{
																				pos:        position{line: 1020, col: 10, offset: 41573},
																				val:        "[0-9]",
																				ranges:     []rune{'0', '9'},
																				ignoreCase: false,
																				inverted:   false,
																			},
																		},
																		&zeroOrMoreExpr{
																			pos: position{line: 82, col: 18, offset: 3320},
																			expr: &seqExpr{
																				pos: position{line: 82, col: 19, offset: 3321},
																				exprs: []interface{}{
																					&notExpr{
																						pos: position{line: 82, col: 19, offset: 3321},
																						expr: &choiceExpr{
																							pos: position{line: 1032, col: 8, offset: 41723},
																							alternatives: []interface{}{
																								&litMatcher{
																									pos:        position{line: 1028, col: 12, offset: 41683},
																									val:        "\r\n",
																									ignoreCase: false,
																								},
																								&charClassMatcher{
																									pos:        position{line: 1028, col: 21, offset: 41692},
																									val:        "[\\r\\n]",
																									chars:      []rune{'\r', '\n'},
																									ignoreCase: false,
																									inverted:   false,
																								},
																								&notExpr{
																									pos: position{line: 1030, col: 8, offset: 41712},
																									expr: &anyMatcher{
																										line: 1030, col: 9, offset: 41713,
																									},
																								},
																							},
																						},
																					},
																					&notExpr{
																						pos: position{line: 82, col: 24, offset: 3326},
																						expr: &litMatcher{
																							pos:        position{line: 82, col: 25, offset: 3327},
																							val:        ",",
																							ignoreCase: false,
																						},
																					},
																					&notExpr{
																						pos: position{line: 82, col: 29, offset: 3331},
																						expr: &litMatcher{
																							pos:        position{line: 82, col: 30, offset: 3332},
																							val:        ":",
																							ignoreCase: false,
																						},
																					},
																					&anyMatcher{
																						line: 82, col: 34, offset: 3336,
																					},
																				},
																			},
																		},
																		&zeroOrMoreExpr{
																			pos: position{line: 82, col: 38, offset: 3340},
																			expr: &choiceExpr{
																				pos: position{line: 1024, col: 7, offset: 41621},
																				alternatives: []interface{}{
																					&litMatcher{
																						pos:        position{line: 1024, col: 7, offset: 41621},
																						val:        " ",
																						ignoreCase: false,
																					},
																					&actionExpr{
																						pos: position{line: 1024, col: 13, offset: 41627},
																						run: (*parser).callonDocumentHeader309,
																						expr: &litMatcher{
																							pos:        position{line: 1024, col: 13, offset: 41627},
																							val:        "\t",
																							ignoreCase: false,
																						},
																					},
																				},
																			},
																		},
																		&andExpr{
																			pos: position{line: 82, col: 42, offset: 3344},
																			expr: &litMatcher{
																				pos:        position{line: 82, col: 43, offset: 3345},
																				val:        ",",
																				ignoreCase: false,
																			},
																		},
																	},
																},
															},
														},
													},
												},
											},
											&zeroOrOneExpr{
												pos: position{line: 75, col: 66, offset: 2961},
												expr: &litMatcher{
													pos:        position{line: 75, col: 66, offset: 2961},
													val:        ",",
													ignoreCase: false,
												},
											},
											&labeledExpr{
												pos:   position{line: 75, col: 71, offset: 2966},
												label: "revdate",
												expr: &zeroOrOneExpr{
													pos: position{line: 75, col: 79, offset: 2974},
													expr: &actionExpr{
														pos: position{line: 86, col: 25, offset: 3409},
														run: (*parser).callonDocumentHeader317,
														expr: &zeroOrMoreExpr{
															pos: position{line: 86, col: 25, offset: 3409},
															expr: &seqExpr{
																pos: position{line: 86, col: 26, offset: 3410},
																exprs: []interface{}{
																	&notExpr{
																		pos: position{line: 86, col: 26, offset: 3410},
																		expr: &choiceExpr{
																			pos: position{line: 1032, col: 8, offset: 41723},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1028, col: 12, offset: 41683},
																					val:        "\r\n",
																					ignoreCase: false,
																				},
																				&charClassMatcher{
																					pos:        position{line: 1028, col: 21, offset: 41692},
																					val:        "[\\r\\n]",
																					chars:      []rune{'\r', '\n'},
																					ignoreCase: false,
																					inverted:   false,
																				},
																				&notExpr{
																					pos: position{line: 1030, col: 8, offset: 41712},
																					expr: &anyMatcher{
																						line: 1030, col: 9, offset: 41713,
																					},
																				},
																			},
																		},
																	},
																	&notExpr{
																		pos: position{line: 86, col: 31, offset: 3415},
																		expr: &litMatcher{
																			pos:        position{line: 86, col: 32, offset: 3416},
																			val:        ":",
																			ignoreCase: false,
																		},
																	},
																	&anyMatcher{
																		line: 86, col: 36, offset: 3420,
																	},
																},
															},
														},
													},
												},
											},
											&zeroOrOneExpr{
												pos: position{line: 75, col: 103, offset: 2998},
												expr: &litMatcher{
													pos:        position{line: 75, col: 103, offset: 2998},
													val:        ":",
													ignoreCase: false,
												},
											},
											&labeledExpr{
												pos:   position{line: 75, col: 108, offset: 3003},
												label: "revremark",
												expr: &zeroOrOneExpr{
													pos: position{line: 75, col: 118, offset: 3013},
													expr: &actionExpr{
														pos: position{line: 90, col: 27, offset: 3486},
														run: (*parser).callonDocumentHeader333,
														expr: &zeroOrMoreExpr{
															pos: position{line: 90, col: 27, offset: 3486},
															expr: &seqExpr{
																pos: position{line: 90, col: 28, offset: 3487},
																exprs: []interface{}{
																	&notExpr{
																		pos: position{line: 90, col: 28, offset: 3487},
																		expr: &choiceExpr{
																			pos: position{line: 1032, col: 8, offset: 41723},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1028, col: 12, offset: 41683},
																					val:        "\r\n",
																					ignoreCase: false,
																				},
																				&charClassMatcher{
																					pos:        position{line: 1028, col: 21, offset: 41692},
																					val:        "[\\r\\n]",
																					chars:      []rune{'\r', '\n'},
																					ignoreCase: false,
																					inverted:   false,
																				},
																				&notExpr{
																					pos: position{line: 1030, col: 8, offset: 41712},
																					expr: &anyMatcher{
																						line: 1030, col: 9, offset: 41713,
																					},
																				},
																			},
																		},
																	},
																	&anyMatcher{
																		line: 90, col: 33, offset: 3492,
																	},
																},
															},
														},
													},
												},
											},
											&choiceExpr{
												pos: position{line: 1032, col: 8, offset: 41723},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1028, col: 12, offset: 41683},
														val:        "\r\n",
														ignoreCase: false,
													},
													&charClassMatcher{
														pos:        position{line: 1028, col: 21, offset: 41692},
														val:        "[\\r\\n]",
														chars:      []rune{'\r', '\n'},
														ignoreCase: false,
														inverted:   false,
													},
													&notExpr{
														pos: position{line: 1030, col: 8, offset: 41712},
														expr: &anyMatcher{
															line: 1030, col: 9, offset: 41713,
														},
													},
												},
											},
										},
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 46, col: 98, offset: 1747},
							label: "otherAttributes",
							expr: &zeroOrMoreExpr{
								pos: position{line: 46, col: 115, offset: 1764},
								expr: &choiceExpr{
									pos: position{line: 97, col: 33, offset: 3679},
									alternatives: []interface{}{
										&actionExpr{
											pos: position{line: 97, col: 33, offset: 3679},
											run: (*parser).callonDocumentHeader351,
											expr: &seqExpr{
												pos: position{line: 97, col: 33, offset: 3679},
												exprs: []interface{}{
													&litMatcher{
														pos:        position{line: 97, col: 33, offset: 3679},
														val:        ":",
														ignoreCase: false,
													},
													&labeledExpr{
														pos:   position{line: 97, col: 37, offset: 3683},
														label: "name",
														expr: &actionExpr{
															pos: position{line: 121, col: 26, offset: 4726},
															run: (*parser).callonDocumentHeader355,
															expr: &seqExpr{
																pos: position{line: 121, col: 26, offset: 4726},
																exprs: []interface{}{
																	&charClassMatcher{
																		pos:        position{line: 121, col: 27, offset: 4727},
																		val:        "[_A-Za-z0-9]",
																		chars:      []rune{'_'},
																		ranges:     []rune{'A', 'Z', 'a', 'z', '0', '9'},
																		ignoreCase: false,
																		inverted:   false,
																	},
																	&zeroOrMoreExpr{
																		pos: position{line: 121, col: 56, offset: 4756},
																		expr: &charClassMatcher{
																			pos:        position{line: 121, col: 57, offset: 4757},
																			val:        "[-A-Za-z0-9]",
																			chars:      []rune{'-'},
																			ranges:     []rune{'A', 'Z', 'a', 'z', '0', '9'},
																			ignoreCase: false,
																			inverted:   false,
																		},
																	},
																},
															},
														},
													},
													&litMatcher{
														pos:        position{line: 97, col: 66, offset: 3712},
														val:        ":",
														ignoreCase: false,
													},
													&zeroOrMoreExpr{
														pos: position{line: 97, col: 70, offset: 3716},
														expr: &choiceExpr{
															pos: position{line: 1024, col: 7, offset: 41621},
															alternatives: []interface{}{
																&litMatcher{
																	pos:        position{line: 1024, col: 7, offset: 41621},
																	val:        " ",
																	ignoreCase: false,
																},
																&actionExpr{
																	pos: position{line: 1024, col: 13, offset: 41627},
																	run: (*parser).callonDocumentHeader364,
																	expr: &litMatcher{
																		pos:        position{line: 1024, col: 13, offset: 41627},
																		val:        "\t",
																		ignoreCase: false,
																	},
																},
															},
														},
													},
													&choiceExpr{
														pos: position{line: 1032, col: 8, offset: 41723},
														alternatives: []interface{}{
															&litMatcher{
																pos:        position{line: 1028, col: 12, offset: 41683},
																val:        "\r\n",
																ignoreCase: false,
															},
															&charClassMatcher{
																pos:        position{line: 1028, col: 21, offset: 41692},
																val:        "[\\r\\n]",
																chars:      []rune{'\r', '\n'},
																ignoreCase: false,
																inverted:   false,
															},
															&notExpr{
																pos: position{line: 1030, col: 8, offset: 41712},
																expr: &anyMatcher{
																	line: 1030, col: 9, offset: 41713,
																},
															},
														},
													},
												},
											},
										},
										&actionExpr{
											pos: position{line: 99, col: 5, offset: 3799},
											run: (*parser).callonDocumentHeader371,
											expr: &seqExpr{
												pos: position{line: 99, col: 5, offset: 3799},
												exprs: []interface{}{
													&litMatcher{
														pos:        position{line: 99, col: 5, offset: 3799},
														val:        ":",
														ignoreCase: false,
													},
													&labeledExpr{
														pos:   position{line: 99, col: 9, offset: 3803},
														label: "name",
														expr: &actionExpr{
															pos: position{line: 121, col: 26, offset: 4726},
															run: (*parser).callonDocumentHeader375,
															expr: &seqExpr{
																pos: position{line: 121, col: 26, offset: 4726},
																exprs: []interface{}{
																	&charClassMatcher{
																		pos:        position{line: 121, col: 27, offset: 4727},
																		val:        "[_A-Za-z0-9]",
																		chars:      []rune{'_'},
																		ranges:     []rune{'A', 'Z', 'a', 'z', '0', '9'},
																		ignoreCase: false,
																		inverted:   false,
																	},
																	&zeroOrMoreExpr{
																		pos: position{line: 121, col: 56, offset: 4756},
																		expr: &charClassMatcher{
																			pos:        position{line: 121, col: 57, offset: 4757},
																			val:        "[-A-Za-z0-9]",
																			chars:      []rune{'-'},
																			ranges:     []rune{'A', 'Z', 'a', 'z', '0', '9'},
																			ignoreCase: false,
																			inverted:   false,
																		},
																	},
																},
															},
														},
													},
													&litMatcher{
														pos:        position{line: 99, col: 38, offset: 3832},
														val:        ":",
														ignoreCase: false,
													},
													&oneOrMoreExpr{
														pos: position{line: 99, col: 42, offset: 3836},
														expr: &choiceExpr{
															pos: position{line: 1024, col: 7, offset: 41621},
															alternatives: []interface{}{
																&litMatcher{
																	pos:        position{line: 1024, col: 7, offset: 41621},
																	val:        " ",
																	ignoreCase: false,
																},
																&actionExpr{
																	pos: position{line: 1024, col: 13, offset: 41627},
																	run: (*parser).callonDocumentHeader384,
																	expr: &litMatcher{
																		pos:        position{line: 1024, col: 13, offset: 41627},
																		val:        "\t",
																		ignoreCase: false,
																	},
																},
															},
														},
													},
													&labeledExpr{
														pos:   position{line: 99, col: 46, offset: 3840},
														label: "value",
														expr: &actionExpr{
															pos: position{line: 125, col: 27, offset: 4849},
															run: (*parser).callonDocumentHeader387,
															expr: &zeroOrMoreExpr{
																pos: position{line: 125, col: 27, offset: 4849},
																expr: &seqExpr{
																	pos: position{line: 125, col: 28, offset: 4850},
																	exprs: []interface{}{
																		&notExpr{
																			pos: position{line: 125, col: 28, offset: 4850},
																			expr: &choiceExpr{
																				pos: position{line: 1028, col: 12, offset: 41683},
																				alternatives: []interface{}{
																					&litMatcher{
																						pos:        position{line: 1028, col: 12, offset: 41683},
																						val:        "\r\n",
																						ignoreCase: false,
																					},
																					&charClassMatcher{
																						pos:        position{line: 1028, col: 21, offset: 41692},
																						val:        "[\\r\\n]",
																						chars:      []rune{'\r', '\n'},
																						ignoreCase: false,
																						inverted:   false,
																					},
																				},
																			},
																		},
																		&anyMatcher{
																			line: 125, col: 37, offset: 4859,
																		},
																	},
																},
															},
														},
													},
													&choiceExpr{
														pos: position{line: 1032, col: 8, offset: 41723},
														alternatives: []interface{}{
															&litMatcher{
																pos:        position{line: 1028, col: 12, offset: 41683},
																val:        "\r\n",
																ignoreCase: false,
															},
															&charClassMatcher{
																pos:        position{line: 1028, col: 21, offset: 41692},
																val:        "[\\r\\n]",
																chars:      []rune{'\r', '\n'},
																ignoreCase: false,
																inverted:   false,
															},
															&notExpr{
																pos: position{line: 1030, col: 8, offset: 41712},
																expr: &anyMatcher{
																	line: 1030, col: 9, offset: 41713,
																},
															},
														},
													},
												},
											},
										},
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "Section",
			pos:  position{line: 246, col: 1, offset: 8963},
			expr: &actionExpr{
				pos: position{line: 246, col: 12, offset: 8974},
				run: (*parser).callonSection1,
				expr: &seqExpr{
					pos: position{line: 246, col: 12, offset: 8974},
					exprs: []interface{}{
						&notExpr{
							pos: position{line: 246, col: 12, offset: 8974},
							expr: &notExpr{
								pos: position{line: 1030, col: 8, offset: 41712},
								expr: &anyMatcher{
									line: 1030, col: 9, offset: 41713,
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 247, col: 5, offset: 9045},
							label: "section",
							expr: &choiceExpr{
								pos: position{line: 247, col: 14, offset: 9054},
								alternatives: []interface{}{
									&ruleRefExpr{
										pos:  position{line: 247, col: 14, offset: 9054},
										name: "Section0",
									},
									&ruleRefExpr{
										pos:  position{line: 247, col: 25, offset: 9065},
										name: "Section1",
									},
									&ruleRefExpr{
										pos:  position{line: 247, col: 36, offset: 9076},
										name: "Section2",
									},
									&ruleRefExpr{
										pos:  position{line: 247, col: 47, offset: 9087},
										name: "Section3",
									},
									&ruleRefExpr{
										pos:  position{line: 247, col: 58, offset: 9098},
										name: "Section4",
									},
									&ruleRefExpr{
										pos:  position{line: 247, col: 69, offset: 9109},
										name: "Section5",
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "Section0",
			pos:  position{line: 253, col: 1, offset: 9190},
			expr: &actionExpr{
				pos: position{line: 253, col: 13, offset: 9202},
				run: (*parser).callonSection01,
				expr: &seqExpr{
					pos: position{line: 253, col: 13, offset: 9202},
					exprs: []interface{}{
						&notExpr{
							pos: position{line: 253, col: 13, offset: 9202},
							expr: &notExpr{
								pos: position{line: 1030, col: 8, offset: 41712},
								expr: &anyMatcher{
									line: 1030, col: 9, offset: 41713,
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 254, col: 5, offset: 9273},
							label: "section",
							expr: &actionExpr{
								pos: position{line: 254, col: 14, offset: 9282},
								run: (*parser).callonSection07,
								expr: &seqExpr{
									pos: position{line: 254, col: 14, offset: 9282},
									exprs: []interface{}{
										&labeledExpr{
											pos:   position{line: 254, col: 14, offset: 9282},
											label: "header",
											expr: &ruleRefExpr{
												pos:  position{line: 254, col: 22, offset: 9290},
												name: "Section0Title",
											},
										},
										&labeledExpr{
											pos:   position{line: 254, col: 37, offset: 9305},
											label: "elements",
											expr: &zeroOrMoreExpr{
												pos: position{line: 254, col: 47, offset: 9315},
												expr: &ruleRefExpr{
													pos:  position{line: 254, col: 47, offset: 9315},
													name: "Section0Block",
												},
											},
										},
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "Section0Title",
			pos:  position{line: 262, col: 1, offset: 9499},
			expr: &actionExpr{
				pos: position{line: 262, col: 18, offset: 9516},
				run: (*parser).callonSection0Title1,
				expr: &seqExpr{
					pos: position{line: 262, col: 18, offset: 9516},
					exprs: []interface{}{
						&labeledExpr{
							pos:   position{line: 262, col: 18, offset: 9516},
							label: "attributes",
							expr: &zeroOrMoreExpr{
								pos: position{line: 262, col: 29, offset: 9527},
								expr: &actionExpr{
									pos: position{line: 136, col: 21, offset: 5188},
									run: (*parser).callonSection0Title5,
									expr: &seqExpr{
										pos: position{line: 136, col: 21, offset: 5188},
										exprs: []interface{}{
											&labeledExpr{
												pos:   position{line: 136, col: 21, offset: 5188},
												label: "attr",
												expr: &choiceExpr{
													pos: position{line: 136, col: 27, offset: 5194},
													alternatives: []interface{}{
														&actionExpr{
															pos: position{line: 145, col: 14, offset: 5645},
															run: (*parser).callonSection0Title9,
															expr: &labeledExpr{
																pos:   position{line: 145, col: 14, offset: 5645},
																label: "id",
																expr: &actionExpr{
																	pos: position{line: 151, col: 20, offset: 5775},
																	run: (*parser).callonSection0Title11,
																	expr: &seqExpr{
																		pos: position{line: 151, col: 20, offset: 5775},
																		exprs: []interface{}{
																			&litMatcher{
																				pos:        position{line: 151, col: 20, offset: 5775},
																				val:        "[[",
																				ignoreCase: false,
																			},
																			&labeledExpr{
																				pos:   position{line: 151, col: 25, offset: 5780},
																				label: "id",
																				expr: &actionExpr{
																					pos: position{line: 1010, col: 7, offset: 41339},
																					run: (*parser).callonSection0Title15,
																					expr: &oneOrMoreExpr{
																						pos: position{line: 1010, col: 7, offset: 41339},
																						expr: &seqExpr{
																							pos: position{line: 1010, col: 8, offset: 41340},
																							exprs: []interface{}{
																								&notExpr{
																									pos: position{line: 1010, col: 8, offset: 41340},
																									expr: &choiceExpr{
																										pos: position{line: 1028, col: 12, offset: 41683},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1028, col: 12, offset: 41683},
																												val:        "\r\n",
																												ignoreCase: false,
																											},
																											&charClassMatcher{
																												pos:        position{line: 1028, col: 21, offset: 41692},
																												val:        "[\\r\\n]",
																												chars:      []rune{'\r', '\n'},
																												ignoreCase: false,
																												inverted:   false,
																											},
																										},
																									},
																								},
																								&notExpr{
																									pos: position{line: 1010, col: 17, offset: 41349},
																									expr: &choiceExpr{
																										pos: position{line: 1024, col: 7, offset: 41621},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1024, col: 7, offset: 41621},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 1024, col: 13, offset: 41627},
																												run: (*parser).callonSection0Title25,
																												expr: &litMatcher{
																													pos:        position{line: 1024, col: 13, offset: 41627},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																								&notExpr{
																									pos: position{line: 1010, col: 21, offset: 41353},
																									expr: &litMatcher{
																										pos:        position{line: 1010, col: 22, offset: 41354},
																										val:        "[",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 1010, col: 26, offset: 41358},
																									expr: &litMatcher{
																										pos:        position{line: 1010, col: 27, offset: 41359},
																										val:        "]",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 1010, col: 31, offset: 41363},
																									expr: &litMatcher{
																										pos:        position{line: 1010, col: 32, offset: 41364},
																										val:        "<<",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 1010, col: 37, offset: 41369},
																									expr: &litMatcher{
																										pos:        position{line: 1010, col: 38, offset: 41370},
																										val:        ">>",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 1010, col: 43, offset: 41375},
																									expr: &litMatcher{
																										pos:        position{line: 1010, col: 44, offset: 41376},
																										val:        ",",
																										ignoreCase: false,
																									},
																								},
																								&anyMatcher{
																									line: 1010, col: 48, offset: 41380,
																								},
																							},
																						},
																					},
																				},
																			},
																			&litMatcher{
																				pos:        position{line: 151, col: 33, offset: 5788},
																				val:        "]]",
																				ignoreCase: false,
																			},
																		},
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 147, col: 5, offset: 5691},
															run: (*parser).callonSection0Title39,
															expr: &seqExpr{
																pos: position{line: 147, col: 5, offset: 5691},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 147, col: 5, offset: 5691},
																		val:        "[#",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 147, col: 10, offset: 5696},
																		label: "id",
																		expr: &actionExpr{
																			pos: position{line: 1010, col: 7, offset: 41339},
																			run: (*parser).callonSection0Title43,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 1010, col: 7, offset: 41339},
																				expr: &seqExpr{
																					pos: position{line: 1010, col: 8, offset: 41340},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 1010, col: 8, offset: 41340},
																							expr: &choiceExpr{
																								pos: position{line: 1028, col: 12, offset: 41683},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1028, col: 12, offset: 41683},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 1028, col: 21, offset: 41692},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 1010, col: 17, offset: 41349},
																							expr: &choiceExpr{
																								pos: position{line: 1024, col: 7, offset: 41621},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1024, col: 7, offset: 41621},
																										val:        " ",
																										ignoreCase: false,
																									},
																									&actionExpr{
																										pos: position{line: 1024, col: 13, offset: 41627},
																										run: (*parser).callonSection0Title53,
																										expr: &litMatcher{
																											pos:        position{line: 1024, col: 13, offset: 41627},
																											val:        "\t",
																											ignoreCase: false,
																										},
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 1010, col: 21, offset: 41353},
																							expr: &litMatcher{
																								pos:        position{line: 1010, col: 22, offset: 41354},
																								val:        "[",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 1010, col: 26, offset: 41358},
																							expr: &litMatcher{
																								pos:        position{line: 1010, col: 27, offset: 41359},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 1010, col: 31, offset: 41363},
																							expr: &litMatcher{
																								pos:        position{line: 1010, col: 32, offset: 41364},
																								val:        "<<",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 1010, col: 37, offset: 41369},
																							expr: &litMatcher{
																								pos:        position{line: 1010, col: 38, offset: 41370},
																								val:        ">>",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 1010, col: 43, offset: 41375},
																							expr: &litMatcher{
																								pos:        position{line: 1010, col: 44, offset: 41376},
																								val:        ",",
																								ignoreCase: false,
																							},
																						},
																						&anyMatcher{
																							line: 1010, col: 48, offset: 41380,
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 147, col: 18, offset: 5704},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 157, col: 17, offset: 5997},
															run: (*parser).callonSection0Title67,
															expr: &seqExpr{
																pos: position{line: 157, col: 17, offset: 5997},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 157, col: 17, offset: 5997},
																		val:        ".",
																		ignoreCase: false,
																	},
																	&notExpr{
																		pos: position{line: 157, col: 21, offset: 6001},
																		expr: &litMatcher{
																			pos:        position{line: 157, col: 22, offset: 6002},
																			val:        ".",
																			ignoreCase: false,
																		},
																	},
																	&notExpr{
																		pos: position{line: 157, col: 26, offset: 6006},
																		expr: &choiceExpr{
																			pos: position{line: 1024, col: 7, offset: 41621},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1024, col: 7, offset: 41621},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1024, col: 13, offset: 41627},
																					run: (*parser).callonSection0Title75,
																					expr: &litMatcher{
																						pos:        position{line: 1024, col: 13, offset: 41627},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 157, col: 30, offset: 6010},
																		label: "title",
																		expr: &actionExpr{
																			pos: position{line: 161, col: 24, offset: 6115},
																			run: (*parser).callonSection0Title78,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 161, col: 24, offset: 6115},
																				expr: &seqExpr{
																					pos: position{line: 161, col: 25, offset: 6116},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 161, col: 25, offset: 6116},
																							expr: &choiceExpr{
																								pos: position{line: 1028, col: 12, offset: 41683},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1028, col: 12, offset: 41683},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 1028, col: 21, offset: 41692},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																						},
																						&anyMatcher{
																							line: 161, col: 34, offset: 6125,
																						},
																					},
																				},
																			},
																		},
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 167, col: 16, offset: 6274},
															run: (*parser).callonSection0Title86,
															expr: &seqExpr{
																pos: position{line: 167, col: 16, offset: 6274},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 167, col: 16, offset: 6274},
																		val:        "[.",
																		ignoreCase: false,
																	},
																	&notExpr{
																		pos: position{line: 167, col: 21, offset: 6279},
																		expr: &choiceExpr{
																			pos: position{line: 1024, col: 7, offset: 41621},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1024, col: 7, offset: 41621},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1024, col: 13, offset: 41627},
																					run: (*parser).callonSection0Title92,
																					expr: &litMatcher{
																						pos:        position{line: 1024, col: 13, offset: 41627},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 167, col: 25, offset: 6283},
																		label: "role",
																		expr: &actionExpr{
																			pos: position{line: 171, col: 23, offset: 6387},
																			run: (*parser).callonSection0Title95,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 171, col: 23, offset: 6387},
																				expr: &seqExpr{
																					pos: position{line: 171, col: 24, offset: 6388},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 171, col: 24, offset: 6388},
																							expr: &choiceExpr{
																								pos: position{line: 1028, col: 12, offset: 41683},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1028, col: 12, offset: 41683},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 1028, col: 21, offset: 41692},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 171, col: 33, offset: 6397},
																							expr: &litMatcher{
																								pos:        position{line: 171, col: 34, offset: 6398},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																						&anyMatcher{
																							line: 171, col: 38, offset: 6402,
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 167, col: 51, offset: 6309},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 176, col: 30, offset: 6551},
															run: (*parser).callonSection0Title106,
															expr: &seqExpr{
																pos: position{line: 176, col: 30, offset: 6551},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 176, col: 30, offset: 6551},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 176, col: 34, offset: 6555},
																		label: "k",
																		expr: &choiceExpr{
																			pos: position{line: 494, col: 19, offset: 19245},
																			alternatives: []interface{}{
																				&actionExpr{
																					pos: position{line: 494, col: 19, offset: 19245},
																					run: (*parser).callonSection0Title111,
																					expr: &litMatcher{
																						pos:        position{line: 494, col: 19, offset: 19245},
																						val:        "TIP",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 496, col: 5, offset: 19283},
																					run: (*parser).callonSection0Title113,
																					expr: &litMatcher{
																						pos:        position{line: 496, col: 5, offset: 19283},
																						val:        "NOTE",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 498, col: 5, offset: 19323},
																					run: (*parser).callonSection0Title115,
																					expr: &litMatcher{
																						pos:        position{line: 498, col: 5, offset: 19323},
																						val:        "IMPORTANT",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 500, col: 5, offset: 19373},
																					run: (*parser).callonSection0Title117,
																					expr: &litMatcher{
																						pos:        position{line: 500, col: 5, offset: 19373},
																						val:        "WARNING",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 502, col: 5, offset: 19419},
																					run: (*parser).callonSection0Title119,
																					expr: &litMatcher{
																						pos:        position{line: 502, col: 5, offset: 19419},
																						val:        "CAUTION",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 176, col: 53, offset: 6574},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 199, col: 21, offset: 7312},
															run: (*parser).callonSection0Title122,
															expr: &litMatcher{
																pos:        position{line: 199, col: 21, offset: 7312},
																val:        "[horizontal]",
																ignoreCase: false,
															},
														},
														&actionExpr{
															pos: position{line: 181, col: 19, offset: 6735},
															run: (*parser).callonSection0Title124,
															expr: &seqExpr{
																pos: position{line: 181, col: 19, offset: 6735},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 181, col: 19, offset: 6735},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&notExpr{
																		pos: position{line: 181, col: 23, offset: 6739},
																		expr: &choiceExpr{
																			pos: position{line: 1024, col: 7, offset: 41621},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1024, col: 7, offset: 41621},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1024, col: 13, offset: 41627},
																					run: (*parser).callonSection0Title130,
																					expr: &litMatcher{
																						pos:        position{line: 1024, col: 13, offset: 41627},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 181, col: 27, offset: 6743},
																		label: "attributes",
																		expr: &zeroOrMoreExpr{
																			pos: position{line: 181, col: 38, offset: 6754},
																			expr: &choiceExpr{
																				pos: position{line: 185, col: 21, offset: 6867},
																				alternatives: []interface{}{
																					&actionExpr{
																						pos: position{line: 185, col: 21, offset: 6867},
																						run: (*parser).callonSection0Title135,
																						expr: &seqExpr{
																							pos: position{line: 185, col: 21, offset: 6867},
																							exprs: []interface{}{
																								&labeledExpr{
																									pos:   position{line: 185, col: 21, offset: 6867},
																									label: "key",
																									expr: &actionExpr{
																										pos: position{line: 191, col: 17, offset: 7127},
																										run: (*parser).callonSection0Title138,
																										expr: &seqExpr{
																											pos: position{line: 191, col: 17, offset: 7127},
																											exprs: []interface{}{
																												&notExpr{
																													pos: position{line: 191, col: 17, offset: 7127},
																													expr: &actionExpr{
																														pos: position{line: 231, col: 14, offset: 8674},
																														run: (*parser).callonSection0Title141,
																														expr: &litMatcher{
																															pos:        position{line: 231, col: 14, offset: 8674},
																															val:        "verse",
																															ignoreCase: false,
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 191, col: 28, offset: 7138},
																													expr: &actionExpr{
																														pos: position{line: 975, col: 16, offset: 40537},
																														run: (*parser).callonSection0Title144,
																														expr: &litMatcher{
																															pos:        position{line: 975, col: 16, offset: 40537},
																															val:        "literal",
																															ignoreCase: false,
																														},
																													},
																												},
																												&labeledExpr{
																													pos:   position{line: 191, col: 41, offset: 7151},
																													label: "key",
																													expr: &oneOrMoreExpr{
																														pos: position{line: 191, col: 45, offset: 7155},
																														expr: &seqExpr{
																															pos: position{line: 191, col: 46, offset: 7156},
																															exprs: []interface{}{
																																&notExpr{
																																	pos: position{line: 191, col: 46, offset: 7156},
																																	expr: &litMatcher{
																																		pos:        position{line: 191, col: 47, offset: 7157},
																																		val:        "=",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 191, col: 51, offset: 7161},
																																	expr: &litMatcher{
																																		pos:        position{line: 191, col: 52, offset: 7162},
																																		val:        ",",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 191, col: 56, offset: 7166},
																																	expr: &litMatcher{
																																		pos:        position{line: 191, col: 57, offset: 7167},
																																		val:        "]",
																																		ignoreCase: false,
																																	},
																																},
																																&anyMatcher{
																																	line: 191, col: 61, offset: 7171,
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&litMatcher{
																									pos:        position{line: 185, col: 40, offset: 6886},
																									val:        "=",
																									ignoreCase: false,
																								},
																								&labeledExpr{
																									pos:   position{line: 185, col: 44, offset: 6890},
																									label: "value",
																									expr: &actionExpr{
																										pos: position{line: 195, col: 19, offset: 7230},
																										run: (*parser).callonSection0Title158,
																										expr: &labeledExpr{
																											pos:   position{line: 195, col: 19, offset: 7230},
																											label: "value",
																											expr: &zeroOrMoreExpr{
																												pos: position{line: 195, col: 25, offset: 7236},
																												expr: &seqExpr{
																													pos: position{line: 195, col: 26, offset: 7237},
																													exprs: []interface{}{
																														&notExpr{
																															pos: position{line: 195, col: 26, offset: 7237},
																															expr: &litMatcher{
																																pos:        position{line: 195, col: 27, offset: 7238},
																																val:        "=",
																																ignoreCase: false,
																															},
																														},
																														&notExpr{
																															pos: position{line: 195, col: 31, offset: 7242},
																															expr: &litMatcher{
																																pos:        position{line: 195, col: 32, offset: 7243},
																																val:        ",",
																																ignoreCase: false,
																															},
																														},
																														&notExpr{
																															pos: position{line: 195, col: 36, offset: 7247},
																															expr: &litMatcher{
																																pos:        position{line: 195, col: 37, offset: 7248},
																																val:        "]",
																																ignoreCase: false,
																															},
																														},
																														&anyMatcher{
																															line: 195, col: 41, offset: 7252,
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&zeroOrOneExpr{
																									pos: position{line: 185, col: 67, offset: 6913},
																									expr: &litMatcher{
																										pos:        position{line: 185, col: 67, offset: 6913},
																										val:        ",",
																										ignoreCase: false,
																									},
																								},
																								&zeroOrMoreExpr{
																									pos: position{line: 185, col: 72, offset: 6918},
																									expr: &choiceExpr{
																										pos: position{line: 1024, col: 7, offset: 41621},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1024, col: 7, offset: 41621},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 1024, col: 13, offset: 41627},
																												run: (*parser).callonSection0Title174,
																												expr: &litMatcher{
																													pos:        position{line: 1024, col: 13, offset: 41627},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																					&actionExpr{
																						pos: position{line: 187, col: 5, offset: 7002},
																						run: (*parser).callonSection0Title176,
																						expr: &seqExpr{
																							pos: position{line: 187, col: 5, offset: 7002},
																							exprs: []interface{}{
																								&labeledExpr{
																									pos:   position{line: 187, col: 5, offset: 7002},
																									label: "key",
																									expr: &actionExpr{
																										pos: position{line: 191, col: 17, offset: 7127},
																										run: (*parser).callonSection0Title179,
																										expr: &seqExpr{
																											pos: position{line: 191, col: 17, offset: 7127},
																											exprs: []interface{}{
																												&notExpr{
																													pos: position{line: 191, col: 17, offset: 7127},
																													expr: &actionExpr{
																														pos: position{line: 231, col: 14, offset: 8674},
																														run: (*parser).callonSection0Title182,
																														expr: &litMatcher{
																															pos:        position{line: 231, col: 14, offset: 8674},
																															val:        "verse",
																															ignoreCase: false,
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 191, col: 28, offset: 7138},
																													expr: &actionExpr{
																														pos: position{line: 975, col: 16, offset: 40537},
																														run: (*parser).callonSection0Title185,
																														expr: &litMatcher{
																															pos:        position{line: 975, col: 16, offset: 40537},
																															val:        "literal",
																															ignoreCase: false,
																														},
																													},
																												},
																												&labeledExpr{
																													pos:   position{line: 191, col: 41, offset: 7151},
																													label: "key",
																													expr: &oneOrMoreExpr{
																														pos: position{line: 191, col: 45, offset: 7155},
																														expr: &seqExpr{
																															pos: position{line: 191, col: 46, offset: 7156},
																															exprs: []interface{}{
																																&notExpr{
																																	pos: position{line: 191, col: 46, offset: 7156},
																																	expr: &litMatcher{
																																		pos:        position{line: 191, col: 47, offset: 7157},
																																		val:        "=",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 191, col: 51, offset: 7161},
																																	expr: &litMatcher{
																																		pos:        position{line: 191, col: 52, offset: 7162},
																																		val:        ",",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 191, col: 56, offset: 7166},
																																	expr: &litMatcher{
																																		pos:        position{line: 191, col: 57, offset: 7167},
																																		val:        "]",
																																		ignoreCase: false,
																																	},
																																},
																																&anyMatcher{
																																	line: 191, col: 61, offset: 7171,
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&zeroOrOneExpr{
																									pos: position{line: 187, col: 24, offset: 7021},
																									expr: &litMatcher{
																										pos:        position{line: 187, col: 24, offset: 7021},
																										val:        ",",
																										ignoreCase: false,
																									},
																								},
																								&zeroOrMoreExpr{
																									pos: position{line: 187, col: 29, offset: 7026},
																									expr: &choiceExpr{
																										pos: position{line: 1024, col: 7, offset: 41621},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1024, col: 7, offset: 41621},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 1024, col: 13, offset: 41627},
																												run: (*parser).callonSection0Title202,
																												expr: &litMatcher{
																													pos:        position{line: 1024, col: 13, offset: 41627},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 181, col: 59, offset: 6775},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
													},
												},
											},
											&zeroOrMoreExpr{
												pos: position{line: 136, col: 131, offset: 5298},
												expr: &choiceExpr{
													pos: position{line: 1024, col: 7, offset: 41621},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1024, col: 7, offset: 41621},
															val:        " ",
															ignoreCase: false,
														},
														&actionExpr{
															pos: position{line: 1024, col: 13, offset: 41627},
															run: (*parser).callonSection0Title208,
															expr: &litMatcher{
																pos:        position{line: 1024, col: 13, offset: 41627},
																val:        "\t",
																ignoreCase: false,
															},
														},
													},
												},
											},
											&choiceExpr{
												pos: position{line: 1032, col: 8, offset: 41723},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1028, col: 12, offset: 41683},
														val:        "\r\n",
														ignoreCase: false,
													},
													&charClassMatcher{
														pos:        position{line: 1028, col: 21, offset: 41692},
														val:        "[\\r\\n]",
														chars:      []rune{'\r', '\n'},
														ignoreCase: false,
														inverted:   false,
													},
													&notExpr{
														pos: position{line: 1030, col: 8, offset: 41712},
														expr: &anyMatcher{
															line: 1030, col: 9, offset: 41713,
														},
													},
												},
											},
										},
									},
								},
							},
						},
						&litMatcher{
							pos:        position{line: 260, col: 24, offset: 9490},
							val:        "=",
							ignoreCase: false,
						},
						&oneOrMoreExpr{
							pos: position{line: 260, col: 28, offset: 9494},
							expr: &choiceExpr{
								pos: position{line: 1024, col: 7, offset: 41621},
								alternatives: []interface{}{
									&litMatcher{
										pos:        position{line: 1024, col: 7, offset: 41621},
										val:        " ",
										ignoreCase: false,
									},
									&actionExpr{
										pos: position{line: 1024, col: 13, offset: 41627},
										run: (*parser).callonSection0Title219,
										expr: &litMatcher{
											pos:        position{line: 1024, col: 13, offset: 41627},
											val:        "\t",
											ignoreCase: false,
										},
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 262, col: 69, offset: 9567},
							label: "content",
							expr: &ruleRefExpr{
								pos:  position{line: 262, col: 78, offset: 9576},
								name: "TitleElements",
							},
						},
						&zeroOrMoreExpr{
							pos: position{line: 262, col: 93, offset: 9591},
							expr: &choiceExpr{
								pos: position{line: 1024, col: 7, offset: 41621},
								alternatives: []interface{}{
									&litMatcher{
										pos:        position{line: 1024, col: 7, offset: 41621},
										val:        " ",
										ignoreCase: false,
									},
									&actionExpr{
										pos: position{line: 1024, col: 13, offset: 41627},
										run: (*parser).callonSection0Title226,
										expr: &litMatcher{
											pos:        position{line: 1024, col: 13, offset: 41627},
											val:        "\t",
											ignoreCase: false,
										},
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 262, col: 97, offset: 9595},
							label: "id",
							expr: &zeroOrOneExpr{
								pos: position{line: 262, col: 100, offset: 9598},
								expr: &actionExpr{
									pos: position{line: 151, col: 20, offset: 5775},
									run: (*parser).callonSection0Title230,
									expr: &seqExpr{
										pos: position{line: 151, col: 20, offset: 5775},
										exprs: []interface{}{
											&litMatcher{
												pos:        position{line: 151, col: 20, offset: 5775},
												val:        "[[",
												ignoreCase: false,
											},
											&labeledExpr{
												pos:   position{line: 151, col: 25, offset: 5780},
												label: "id",
												expr: &actionExpr{
													pos: position{line: 1010, col: 7, offset: 41339},
													run: (*parser).callonSection0Title234,
													expr: &oneOrMoreExpr{
														pos: position{line: 1010, col: 7, offset: 41339},
														expr: &seqExpr{
															pos: position{line: 1010, col: 8, offset: 41340},
															exprs: []interface{}{
																&notExpr{
																	pos: position{line: 1010, col: 8, offset: 41340},
																	expr: &choiceExpr{
																		pos: position{line: 1028, col: 12, offset: 41683},
																		alternatives: []interface{}{
																			&litMatcher{
																				pos:        position{line: 1028, col: 12, offset: 41683},
																				val:        "\r\n",
																				ignoreCase: false,
																			},
																			&charClassMatcher{
																				pos:        position{line: 1028, col: 21, offset: 41692},
																				val:        "[\\r\\n]",
																				chars:      []rune{'\r', '\n'},
																				ignoreCase: false,
																				inverted:   false,
																			},
																		},
																	},
																},
																&notExpr{
																	pos: position{line: 1010, col: 17, offset: 41349},
																	expr: &choiceExpr{
																		pos: position{line: 1024, col: 7, offset: 41621},
																		alternatives: []interface{}{
																			&litMatcher{
																				pos:        position{line: 1024, col: 7, offset: 41621},
																				val:        " ",
																				ignoreCase: false,
																			},
																			&actionExpr{
																				pos: position{line: 1024, col: 13, offset: 41627},
																				run: (*parser).callonSection0Title244,
																				expr: &litMatcher{
																					pos:        position{line: 1024, col: 13, offset: 41627},
																					val:        "\t",
																					ignoreCase: false,
																				},
																			},
																		},
																	},
																},
																&notExpr{
																	pos: position{line: 1010, col: 21, offset: 41353},
																	expr: &litMatcher{
																		pos:        position{line: 1010, col: 22, offset: 41354},
																		val:        "[",
																		ignoreCase: false,
																	},
																},
																&notExpr{
																	pos: position{line: 1010, col: 26, offset: 41358},
																	expr: &litMatcher{
																		pos:        position{line: 1010, col: 27, offset: 41359},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
																&notExpr{
																	pos: position{line: 1010, col: 31, offset: 41363},
																	expr: &litMatcher{
																		pos:        position{line: 1010, col: 32, offset: 41364},
																		val:        "<<",
																		ignoreCase: false,
																	},
																},
																&notExpr{
																	pos: position{line: 1010, col: 37, offset: 41369},
																	expr: &litMatcher{
																		pos:        position{line: 1010, col: 38, offset: 41370},
																		val:        ">>",
																		ignoreCase: false,
																	},
																},
																&notExpr{
																	pos: position{line: 1010, col: 43, offset: 41375},
																	expr: &litMatcher{
																		pos:        position{line: 1010, col: 44, offset: 41376},
																		val:        ",",
																		ignoreCase: false,
																	},
																},
																&anyMatcher{
																	line: 1010, col: 48, offset: 41380,
																},
															},
														},
													},
												},
											},
											&litMatcher{
												pos:        position{line: 151, col: 33, offset: 5788},
												val:        "]]",
												ignoreCase: false,
											},
										},
									},
								},
							},
						},
						&zeroOrMoreExpr{
							pos: position{line: 262, col: 119, offset: 9617},
							expr: &choiceExpr{
								pos: position{line: 1024, col: 7, offset: 41621},
								alternatives: []interface{}{
									&litMatcher{
										pos:        position{line: 1024, col: 7, offset: 41621},
										val:        " ",
										ignoreCase: false,
									},
									&actionExpr{
										pos: position{line: 1024, col: 13, offset: 41627},
										run: (*parser).callonSection0Title261,
										expr: &litMatcher{
											pos:        position{line: 1024, col: 13, offset: 41627},
											val:        "\t",
											ignoreCase: false,
										},
									},
								},
							},
						},
						&choiceExpr{
							pos: position{line: 1032, col: 8, offset: 41723},
							alternatives: []interface{}{
								&litMatcher{
									pos:        position{line: 1028, col: 12, offset: 41683},
									val:        "\r\n",
									ignoreCase: false,
								},
								&charClassMatcher{
									pos:        position{line: 1028, col: 21, offset: 41692},
									val:        "[\\r\\n]",
									chars:      []rune{'\r', '\n'},
									ignoreCase: false,
									inverted:   false,
								},
								&notExpr{
									pos: position{line: 1030, col: 8, offset: 41712},
									expr: &anyMatcher{
										line: 1030, col: 9, offset: 41713,
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "Section0Block",
			pos:  position{line: 266, col: 1, offset: 9736},
			expr: &actionExpr{
				pos: position{line: 266, col: 18, offset: 9753},
				run: (*parser).callonSection0Block1,
				expr: &seqExpr{
					pos: position{line: 266, col: 18, offset: 9753},
					exprs: []interface{}{
						&notExpr{
							pos: position{line: 266, col: 18, offset: 9753},
							expr: &ruleRefExpr{
								pos:  position{line: 266, col: 19, offset: 9754},
								name: "Section0",
							},
						},
						&labeledExpr{
							pos:   position{line: 266, col: 28, offset: 9763},
							label: "content",
							expr: &choiceExpr{
								pos: position{line: 266, col: 37, offset: 9772},
								alternatives: []interface{}{
									&ruleRefExpr{
										pos:  position{line: 266, col: 37, offset: 9772},
										name: "Section1",
									},
									&ruleRefExpr{
										pos:  position{line: 266, col: 48, offset: 9783},
										name: "Section2",
									},
									&ruleRefExpr{
										pos:  position{line: 266, col: 59, offset: 9794},
										name: "Section3",
									},
									&ruleRefExpr{
										pos:  position{line: 266, col: 70, offset: 9805},
										name: "Section4",
									},
									&ruleRefExpr{
										pos:  position{line: 266, col: 81, offset: 9816},
										name: "Section5",
									},
									&ruleRefExpr{
										pos:  position{line: 266, col: 92, offset: 9827},
										name: "DocumentBlock",
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "Section1",
			pos:  position{line: 270, col: 1, offset: 9871},
			expr: &actionExpr{
				pos: position{line: 270, col: 13, offset: 9883},
				run: (*parser).callonSection11,
				expr: &seqExpr{
					pos: position{line: 270, col: 13, offset: 9883},
					exprs: []interface{}{
						&notExpr{
							pos: position{line: 270, col: 13, offset: 9883},
							expr: &notExpr{
								pos: position{line: 1030, col: 8, offset: 41712},
								expr: &anyMatcher{
									line: 1030, col: 9, offset: 41713,
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 271, col: 5, offset: 9954},
							label: "section",
							expr: &actionExpr{
								pos: position{line: 271, col: 14, offset: 9963},
								run: (*parser).callonSection17,
								expr: &seqExpr{
									pos: position{line: 271, col: 14, offset: 9963},
									exprs: []interface{}{
										&labeledExpr{
											pos:   position{line: 271, col: 14, offset: 9963},
											label: "header",
											expr: &ruleRefExpr{
												pos:  position{line: 271, col: 22, offset: 9971},
												name: "Section1Title",
											},
										},
										&labeledExpr{
											pos:   position{line: 271, col: 37, offset: 9986},
											label: "elements",
											expr: &zeroOrMoreExpr{
												pos: position{line: 271, col: 47, offset: 9996},
												expr: &ruleRefExpr{
													pos:  position{line: 271, col: 47, offset: 9996},
													name: "Section1Block",
												},
											},
										},
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "Section1Title",
			pos:  position{line: 279, col: 1, offset: 10173},
			expr: &actionExpr{
				pos: position{line: 279, col: 18, offset: 10190},
				run: (*parser).callonSection1Title1,
				expr: &seqExpr{
					pos: position{line: 279, col: 18, offset: 10190},
					exprs: []interface{}{
						&labeledExpr{
							pos:   position{line: 279, col: 18, offset: 10190},
							label: "attributes",
							expr: &zeroOrMoreExpr{
								pos: position{line: 279, col: 29, offset: 10201},
								expr: &actionExpr{
									pos: position{line: 136, col: 21, offset: 5188},
									run: (*parser).callonSection1Title5,
									expr: &seqExpr{
										pos: position{line: 136, col: 21, offset: 5188},
										exprs: []interface{}{
											&labeledExpr{
												pos:   position{line: 136, col: 21, offset: 5188},
												label: "attr",
												expr: &choiceExpr{
													pos: position{line: 136, col: 27, offset: 5194},
													alternatives: []interface{}{
														&actionExpr{
															pos: position{line: 145, col: 14, offset: 5645},
															run: (*parser).callonSection1Title9,
															expr: &labeledExpr{
																pos:   position{line: 145, col: 14, offset: 5645},
																label: "id",
																expr: &actionExpr{
																	pos: position{line: 151, col: 20, offset: 5775},
																	run: (*parser).callonSection1Title11,
																	expr: &seqExpr{
																		pos: position{line: 151, col: 20, offset: 5775},
																		exprs: []interface{}{
																			&litMatcher{
																				pos:        position{line: 151, col: 20, offset: 5775},
																				val:        "[[",
																				ignoreCase: false,
																			},
																			&labeledExpr{
																				pos:   position{line: 151, col: 25, offset: 5780},
																				label: "id",
																				expr: &actionExpr{
																					pos: position{line: 1010, col: 7, offset: 41339},
																					run: (*parser).callonSection1Title15,
																					expr: &oneOrMoreExpr{
																						pos: position{line: 1010, col: 7, offset: 41339},
																						expr: &seqExpr{
																							pos: position{line: 1010, col: 8, offset: 41340},
																							exprs: []interface{}{
																								&notExpr{
																									pos: position{line: 1010, col: 8, offset: 41340},
																									expr: &choiceExpr{
																										pos: position{line: 1028, col: 12, offset: 41683},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1028, col: 12, offset: 41683},
																												val:        "\r\n",
																												ignoreCase: false,
																											},
																											&charClassMatcher{
																												pos:        position{line: 1028, col: 21, offset: 41692},
																												val:        "[\\r\\n]",
																												chars:      []rune{'\r', '\n'},
																												ignoreCase: false,
																												inverted:   false,
																											},
																										},
																									},
																								},
																								&notExpr{
																									pos: position{line: 1010, col: 17, offset: 41349},
																									expr: &choiceExpr{
																										pos: position{line: 1024, col: 7, offset: 41621},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1024, col: 7, offset: 41621},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 1024, col: 13, offset: 41627},
																												run: (*parser).callonSection1Title25,
																												expr: &litMatcher{
																													pos:        position{line: 1024, col: 13, offset: 41627},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																								&notExpr{
																									pos: position{line: 1010, col: 21, offset: 41353},
																									expr: &litMatcher{
																										pos:        position{line: 1010, col: 22, offset: 41354},
																										val:        "[",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 1010, col: 26, offset: 41358},
																									expr: &litMatcher{
																										pos:        position{line: 1010, col: 27, offset: 41359},
																										val:        "]",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 1010, col: 31, offset: 41363},
																									expr: &litMatcher{
																										pos:        position{line: 1010, col: 32, offset: 41364},
																										val:        "<<",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 1010, col: 37, offset: 41369},
																									expr: &litMatcher{
																										pos:        position{line: 1010, col: 38, offset: 41370},
																										val:        ">>",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 1010, col: 43, offset: 41375},
																									expr: &litMatcher{
																										pos:        position{line: 1010, col: 44, offset: 41376},
																										val:        ",",
																										ignoreCase: false,
																									},
																								},
																								&anyMatcher{
																									line: 1010, col: 48, offset: 41380,
																								},
																							},
																						},
																					},
																				},
																			},
																			&litMatcher{
																				pos:        position{line: 151, col: 33, offset: 5788},
																				val:        "]]",
																				ignoreCase: false,
																			},
																		},
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 147, col: 5, offset: 5691},
															run: (*parser).callonSection1Title39,
															expr: &seqExpr{
																pos: position{line: 147, col: 5, offset: 5691},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 147, col: 5, offset: 5691},
																		val:        "[#",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 147, col: 10, offset: 5696},
																		label: "id",
																		expr: &actionExpr{
																			pos: position{line: 1010, col: 7, offset: 41339},
																			run: (*parser).callonSection1Title43,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 1010, col: 7, offset: 41339},
																				expr: &seqExpr{
																					pos: position{line: 1010, col: 8, offset: 41340},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 1010, col: 8, offset: 41340},
																							expr: &choiceExpr{
																								pos: position{line: 1028, col: 12, offset: 41683},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1028, col: 12, offset: 41683},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 1028, col: 21, offset: 41692},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 1010, col: 17, offset: 41349},
																							expr: &choiceExpr{
																								pos: position{line: 1024, col: 7, offset: 41621},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1024, col: 7, offset: 41621},
																										val:        " ",
																										ignoreCase: false,
																									},
																									&actionExpr{
																										pos: position{line: 1024, col: 13, offset: 41627},
																										run: (*parser).callonSection1Title53,
																										expr: &litMatcher{
																											pos:        position{line: 1024, col: 13, offset: 41627},
																											val:        "\t",
																											ignoreCase: false,
																										},
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 1010, col: 21, offset: 41353},
																							expr: &litMatcher{
																								pos:        position{line: 1010, col: 22, offset: 41354},
																								val:        "[",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 1010, col: 26, offset: 41358},
																							expr: &litMatcher{
																								pos:        position{line: 1010, col: 27, offset: 41359},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 1010, col: 31, offset: 41363},
																							expr: &litMatcher{
																								pos:        position{line: 1010, col: 32, offset: 41364},
																								val:        "<<",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 1010, col: 37, offset: 41369},
																							expr: &litMatcher{
																								pos:        position{line: 1010, col: 38, offset: 41370},
																								val:        ">>",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 1010, col: 43, offset: 41375},
																							expr: &litMatcher{
																								pos:        position{line: 1010, col: 44, offset: 41376},
																								val:        ",",
																								ignoreCase: false,
																							},
																						},
																						&anyMatcher{
																							line: 1010, col: 48, offset: 41380,
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 147, col: 18, offset: 5704},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 157, col: 17, offset: 5997},
															run: (*parser).callonSection1Title67,
															expr: &seqExpr{
																pos: position{line: 157, col: 17, offset: 5997},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 157, col: 17, offset: 5997},
																		val:        ".",
																		ignoreCase: false,
																	},
																	&notExpr{
																		pos: position{line: 157, col: 21, offset: 6001},
																		expr: &litMatcher{
																			pos:        position{line: 157, col: 22, offset: 6002},
																			val:        ".",
																			ignoreCase: false,
																		},
																	},
																	&notExpr{
																		pos: position{line: 157, col: 26, offset: 6006},
																		expr: &choiceExpr{
																			pos: position{line: 1024, col: 7, offset: 41621},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1024, col: 7, offset: 41621},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1024, col: 13, offset: 41627},
																					run: (*parser).callonSection1Title75,
																					expr: &litMatcher{
																						pos:        position{line: 1024, col: 13, offset: 41627},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 157, col: 30, offset: 6010},
																		label: "title",
																		expr: &actionExpr{
																			pos: position{line: 161, col: 24, offset: 6115},
																			run: (*parser).callonSection1Title78,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 161, col: 24, offset: 6115},
																				expr: &seqExpr{
																					pos: position{line: 161, col: 25, offset: 6116},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 161, col: 25, offset: 6116},
																							expr: &choiceExpr{
																								pos: position{line: 1028, col: 12, offset: 41683},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1028, col: 12, offset: 41683},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 1028, col: 21, offset: 41692},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																						},
																						&anyMatcher{
																							line: 161, col: 34, offset: 6125,
																						},
																					},
																				},
																			},
																		},
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 167, col: 16, offset: 6274},
															run: (*parser).callonSection1Title86,
															expr: &seqExpr{
																pos: position{line: 167, col: 16, offset: 6274},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 167, col: 16, offset: 6274},
																		val:        "[.",
																		ignoreCase: false,
																	},
																	&notExpr{
																		pos: position{line: 167, col: 21, offset: 6279},
																		expr: &choiceExpr{
																			pos: position{line: 1024, col: 7, offset: 41621},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1024, col: 7, offset: 41621},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1024, col: 13, offset: 41627},
																					run: (*parser).callonSection1Title92,
																					expr: &litMatcher{
																						pos:        position{line: 1024, col: 13, offset: 41627},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 167, col: 25, offset: 6283},
																		label: "role",
																		expr: &actionExpr{
																			pos: position{line: 171, col: 23, offset: 6387},
																			run: (*parser).callonSection1Title95,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 171, col: 23, offset: 6387},
																				expr: &seqExpr{
																					pos: position{line: 171, col: 24, offset: 6388},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 171, col: 24, offset: 6388},
																							expr: &choiceExpr{
																								pos: position{line: 1028, col: 12, offset: 41683},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1028, col: 12, offset: 41683},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 1028, col: 21, offset: 41692},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 171, col: 33, offset: 6397},
																							expr: &litMatcher{
																								pos:        position{line: 171, col: 34, offset: 6398},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																						&anyMatcher{
																							line: 171, col: 38, offset: 6402,
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 167, col: 51, offset: 6309},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 176, col: 30, offset: 6551},
															run: (*parser).callonSection1Title106,
															expr: &seqExpr{
																pos: position{line: 176, col: 30, offset: 6551},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 176, col: 30, offset: 6551},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 176, col: 34, offset: 6555},
																		label: "k",
																		expr: &choiceExpr{
																			pos: position{line: 494, col: 19, offset: 19245},
																			alternatives: []interface{}{
																				&actionExpr{
																					pos: position{line: 494, col: 19, offset: 19245},
																					run: (*parser).callonSection1Title111,
																					expr: &litMatcher{
																						pos:        position{line: 494, col: 19, offset: 19245},
																						val:        "TIP",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 496, col: 5, offset: 19283},
																					run: (*parser).callonSection1Title113,
																					expr: &litMatcher{
																						pos:        position{line: 496, col: 5, offset: 19283},
																						val:        "NOTE",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 498, col: 5, offset: 19323},
																					run: (*parser).callonSection1Title115,
																					expr: &litMatcher{
																						pos:        position{line: 498, col: 5, offset: 19323},
																						val:        "IMPORTANT",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 500, col: 5, offset: 19373},
																					run: (*parser).callonSection1Title117,
																					expr: &litMatcher{
																						pos:        position{line: 500, col: 5, offset: 19373},
																						val:        "WARNING",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 502, col: 5, offset: 19419},
																					run: (*parser).callonSection1Title119,
																					expr: &litMatcher{
																						pos:        position{line: 502, col: 5, offset: 19419},
																						val:        "CAUTION",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 176, col: 53, offset: 6574},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 199, col: 21, offset: 7312},
															run: (*parser).callonSection1Title122,
															expr: &litMatcher{
																pos:        position{line: 199, col: 21, offset: 7312},
																val:        "[horizontal]",
																ignoreCase: false,
															},
														},
														&actionExpr{
															pos: position{line: 181, col: 19, offset: 6735},
															run: (*parser).callonSection1Title124,
															expr: &seqExpr{
																pos: position{line: 181, col: 19, offset: 6735},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 181, col: 19, offset: 6735},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&notExpr{
																		pos: position{line: 181, col: 23, offset: 6739},
																		expr: &choiceExpr{
																			pos: position{line: 1024, col: 7, offset: 41621},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1024, col: 7, offset: 41621},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1024, col: 13, offset: 41627},
																					run: (*parser).callonSection1Title130,
																					expr: &litMatcher{
																						pos:        position{line: 1024, col: 13, offset: 41627},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 181, col: 27, offset: 6743},
																		label: "attributes",
																		expr: &zeroOrMoreExpr{
																			pos: position{line: 181, col: 38, offset: 6754},
																			expr: &choiceExpr{
																				pos: position{line: 185, col: 21, offset: 6867},
																				alternatives: []interface{}{
																					&actionExpr{
																						pos: position{line: 185, col: 21, offset: 6867},
																						run: (*parser).callonSection1Title135,
																						expr: &seqExpr{
																							pos: position{line: 185, col: 21, offset: 6867},
																							exprs: []interface{}{
																								&labeledExpr{
																									pos:   position{line: 185, col: 21, offset: 6867},
																									label: "key",
																									expr: &actionExpr{
																										pos: position{line: 191, col: 17, offset: 7127},
																										run: (*parser).callonSection1Title138,
																										expr: &seqExpr{
																											pos: position{line: 191, col: 17, offset: 7127},
																											exprs: []interface{}{
																												&notExpr{
																													pos: position{line: 191, col: 17, offset: 7127},
																													expr: &actionExpr{
																														pos: position{line: 231, col: 14, offset: 8674},
																														run: (*parser).callonSection1Title141,
																														expr: &litMatcher{
																															pos:        position{line: 231, col: 14, offset: 8674},
																															val:        "verse",
																															ignoreCase: false,
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 191, col: 28, offset: 7138},
																													expr: &actionExpr{
																														pos: position{line: 975, col: 16, offset: 40537},
																														run: (*parser).callonSection1Title144,
																														expr: &litMatcher{
																															pos:        position{line: 975, col: 16, offset: 40537},
																															val:        "literal",
																															ignoreCase: false,
																														},
																													},
																												},
																												&labeledExpr{
																													pos:   position{line: 191, col: 41, offset: 7151},
																													label: "key",
																													expr: &oneOrMoreExpr{
																														pos: position{line: 191, col: 45, offset: 7155},
																														expr: &seqExpr{
																															pos: position{line: 191, col: 46, offset: 7156},
																															exprs: []interface{}{
																																&notExpr{
																																	pos: position{line: 191, col: 46, offset: 7156},
																																	expr: &litMatcher{
																																		pos:        position{line: 191, col: 47, offset: 7157},
																																		val:        "=",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 191, col: 51, offset: 7161},
																																	expr: &litMatcher{
																																		pos:        position{line: 191, col: 52, offset: 7162},
																																		val:        ",",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 191, col: 56, offset: 7166},
																																	expr: &litMatcher{
																																		pos:        position{line: 191, col: 57, offset: 7167},
																																		val:        "]",
																																		ignoreCase: false,
																																	},
																																},
																																&anyMatcher{
																																	line: 191, col: 61, offset: 7171,
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&litMatcher{
																									pos:        position{line: 185, col: 40, offset: 6886},
																									val:        "=",
																									ignoreCase: false,
																								},
																								&labeledExpr{
																									pos:   position{line: 185, col: 44, offset: 6890},
																									label: "value",
																									expr: &actionExpr{
																										pos: position{line: 195, col: 19, offset: 7230},
																										run: (*parser).callonSection1Title158,
																										expr: &labeledExpr{
																											pos:   position{line: 195, col: 19, offset: 7230},
																											label: "value",
																											expr: &zeroOrMoreExpr{
																												pos: position{line: 195, col: 25, offset: 7236},
																												expr: &seqExpr{
																													pos: position{line: 195, col: 26, offset: 7237},
																													exprs: []interface{}{
																														&notExpr{
																															pos: position{line: 195, col: 26, offset: 7237},
																															expr: &litMatcher{
																																pos:        position{line: 195, col: 27, offset: 7238},
																																val:        "=",
																																ignoreCase: false,
																															},
																														},
																														&notExpr{
																															pos: position{line: 195, col: 31, offset: 7242},
																															expr: &litMatcher{
																																pos:        position{line: 195, col: 32, offset: 7243},
																																val:        ",",
																																ignoreCase: false,
																															},
																														},
																														&notExpr{
																															pos: position{line: 195, col: 36, offset: 7247},
																															expr: &litMatcher{
																																pos:        position{line: 195, col: 37, offset: 7248},
																																val:        "]",
																																ignoreCase: false,
																															},
																														},
																														&anyMatcher{
																															line: 195, col: 41, offset: 7252,
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&zeroOrOneExpr{
																									pos: position{line: 185, col: 67, offset: 6913},
																									expr: &litMatcher{
																										pos:        position{line: 185, col: 67, offset: 6913},
																										val:        ",",
																										ignoreCase: false,
																									},
																								},
																								&zeroOrMoreExpr{
																									pos: position{line: 185, col: 72, offset: 6918},
																									expr: &choiceExpr{
																										pos: position{line: 1024, col: 7, offset: 41621},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1024, col: 7, offset: 41621},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 1024, col: 13, offset: 41627},
																												run: (*parser).callonSection1Title174,
																												expr: &litMatcher{
																													pos:        position{line: 1024, col: 13, offset: 41627},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																					&actionExpr{
																						pos: position{line: 187, col: 5, offset: 7002},
																						run: (*parser).callonSection1Title176,
																						expr: &seqExpr{
																							pos: position{line: 187, col: 5, offset: 7002},
																							exprs: []interface{}{
																								&labeledExpr{
																									pos:   position{line: 187, col: 5, offset: 7002},
																									label: "key",
																									expr: &actionExpr{
																										pos: position{line: 191, col: 17, offset: 7127},
																										run: (*parser).callonSection1Title179,
																										expr: &seqExpr{
																											pos: position{line: 191, col: 17, offset: 7127},
																											exprs: []interface{}{
																												&notExpr{
																													pos: position{line: 191, col: 17, offset: 7127},
																													expr: &actionExpr{
																														pos: position{line: 231, col: 14, offset: 8674},
																														run: (*parser).callonSection1Title182,
																														expr: &litMatcher{
																															pos:        position{line: 231, col: 14, offset: 8674},
																															val:        "verse",
																															ignoreCase: false,
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 191, col: 28, offset: 7138},
																													expr: &actionExpr{
																														pos: position{line: 975, col: 16, offset: 40537},
																														run: (*parser).callonSection1Title185,
																														expr: &litMatcher{
																															pos:        position{line: 975, col: 16, offset: 40537},
																															val:        "literal",
																															ignoreCase: false,
																														},
																													},
																												},
																												&labeledExpr{
																													pos:   position{line: 191, col: 41, offset: 7151},
																													label: "key",
																													expr: &oneOrMoreExpr{
																														pos: position{line: 191, col: 45, offset: 7155},
																														expr: &seqExpr{
																															pos: position{line: 191, col: 46, offset: 7156},
																															exprs: []interface{}{
																																&notExpr{
																																	pos: position{line: 191, col: 46, offset: 7156},
																																	expr: &litMatcher{
																																		pos:        position{line: 191, col: 47, offset: 7157},
																																		val:        "=",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 191, col: 51, offset: 7161},
																																	expr: &litMatcher{
																																		pos:        position{line: 191, col: 52, offset: 7162},
																																		val:        ",",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 191, col: 56, offset: 7166},
																																	expr: &litMatcher{
																																		pos:        position{line: 191, col: 57, offset: 7167},
																																		val:        "]",
																																		ignoreCase: false,
																																	},
																																},
																																&anyMatcher{
																																	line: 191, col: 61, offset: 7171,
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&zeroOrOneExpr{
																									pos: position{line: 187, col: 24, offset: 7021},
																									expr: &litMatcher{
																										pos:        position{line: 187, col: 24, offset: 7021},
																										val:        ",",
																										ignoreCase: false,
																									},
																								},
																								&zeroOrMoreExpr{
																									pos: position{line: 187, col: 29, offset: 7026},
																									expr: &choiceExpr{
																										pos: position{line: 1024, col: 7, offset: 41621},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1024, col: 7, offset: 41621},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 1024, col: 13, offset: 41627},
																												run: (*parser).callonSection1Title202,
																												expr: &litMatcher{
																													pos:        position{line: 1024, col: 13, offset: 41627},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 181, col: 59, offset: 6775},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
													},
												},
											},
											&zeroOrMoreExpr{
												pos: position{line: 136, col: 131, offset: 5298},
												expr: &choiceExpr{
													pos: position{line: 1024, col: 7, offset: 41621},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1024, col: 7, offset: 41621},
															val:        " ",
															ignoreCase: false,
														},
														&actionExpr{
															pos: position{line: 1024, col: 13, offset: 41627},
															run: (*parser).callonSection1Title208,
															expr: &litMatcher{
																pos:        position{line: 1024, col: 13, offset: 41627},
																val:        "\t",
																ignoreCase: false,
															},
														},
													},
												},
											},
											&choiceExpr{
												pos: position{line: 1032, col: 8, offset: 41723},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1028, col: 12, offset: 41683},
														val:        "\r\n",
														ignoreCase: false,
													},
													&charClassMatcher{
														pos:        position{line: 1028, col: 21, offset: 41692},
														val:        "[\\r\\n]",
														chars:      []rune{'\r', '\n'},
														ignoreCase: false,
														inverted:   false,
													},
													&notExpr{
														pos: position{line: 1030, col: 8, offset: 41712},
														expr: &anyMatcher{
															line: 1030, col: 9, offset: 41713,
														},
													},
												},
											},
										},
									},
								},
							},
						},
						&litMatcher{
							pos:        position{line: 277, col: 24, offset: 10163},
							val:        "==",
							ignoreCase: false,
						},
						&oneOrMoreExpr{
							pos: position{line: 277, col: 29, offset: 10168},
							expr: &choiceExpr{
								pos: position{line: 1024, col: 7, offset: 41621},
								alternatives: []interface{}{
									&litMatcher{
										pos:        position{line: 1024, col: 7, offset: 41621},
										val:        " ",
										ignoreCase: false,
									},
									&actionExpr{
										pos: position{line: 1024, col: 13, offset: 41627},
										run: (*parser).callonSection1Title219,
										expr: &litMatcher{
											pos:        position{line: 1024, col: 13, offset: 41627},
											val:        "\t",
											ignoreCase: false,
										},
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 279, col: 69, offset: 10241},
							label: "content",
							expr: &ruleRefExpr{
								pos:  position{line: 279, col: 78, offset: 10250},
								name: "TitleElements",
							},
						},
						&zeroOrMoreExpr{
							pos: position{line: 279, col: 93, offset: 10265},
							expr: &choiceExpr{
								pos: position{line: 1024, col: 7, offset: 41621},
								alternatives: []interface{}{
									&litMatcher{
										pos:        position{line: 1024, col: 7, offset: 41621},
										val:        " ",
										ignoreCase: false,
									},
									&actionExpr{
										pos: position{line: 1024, col: 13, offset: 41627},
										run: (*parser).callonSection1Title226,
										expr: &litMatcher{
											pos:        position{line: 1024, col: 13, offset: 41627},
											val:        "\t",
											ignoreCase: false,
										},
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 279, col: 97, offset: 10269},
							label: "id",
							expr: &zeroOrOneExpr{
								pos: position{line: 279, col: 100, offset: 10272},
								expr: &actionExpr{
									pos: position{line: 151, col: 20, offset: 5775},
									run: (*parser).callonSection1Title230,
									expr: &seqExpr{
										pos: position{line: 151, col: 20, offset: 5775},
										exprs: []interface{}{
											&litMatcher{
												pos:        position{line: 151, col: 20, offset: 5775},
												val:        "[[",
												ignoreCase: false,
											},
											&labeledExpr{
												pos:   position{line: 151, col: 25, offset: 5780},
												label: "id",
												expr: &actionExpr{
													pos: position{line: 1010, col: 7, offset: 41339},
													run: (*parser).callonSection1Title234,
													expr: &oneOrMoreExpr{
														pos: position{line: 1010, col: 7, offset: 41339},
														expr: &seqExpr{
															pos: position{line: 1010, col: 8, offset: 41340},
															exprs: []interface{}{
																&notExpr{
																	pos: position{line: 1010, col: 8, offset: 41340},
																	expr: &choiceExpr{
																		pos: position{line: 1028, col: 12, offset: 41683},
																		alternatives: []interface{}{
																			&litMatcher{
																				pos:        position{line: 1028, col: 12, offset: 41683},
																				val:        "\r\n",
																				ignoreCase: false,
																			},
																			&charClassMatcher{
																				pos:        position{line: 1028, col: 21, offset: 41692},
																				val:        "[\\r\\n]",
																				chars:      []rune{'\r', '\n'},
																				ignoreCase: false,
																				inverted:   false,
																			},
																		},
																	},
																},
																&notExpr{
																	pos: position{line: 1010, col: 17, offset: 41349},
																	expr: &choiceExpr{
																		pos: position{line: 1024, col: 7, offset: 41621},
																		alternatives: []interface{}{
																			&litMatcher{
																				pos:        position{line: 1024, col: 7, offset: 41621},
																				val:        " ",
																				ignoreCase: false,
																			},
																			&actionExpr{
																				pos: position{line: 1024, col: 13, offset: 41627},
																				run: (*parser).callonSection1Title244,
																				expr: &litMatcher{
																					pos:        position{line: 1024, col: 13, offset: 41627},
																					val:        "\t",
																					ignoreCase: false,
																				},
																			},
																		},
																	},
																},
																&notExpr{
																	pos: position{line: 1010, col: 21, offset: 41353},
																	expr: &litMatcher{
																		pos:        position{line: 1010, col: 22, offset: 41354},
																		val:        "[",
																		ignoreCase: false,
																	},
																},
																&notExpr{
																	pos: position{line: 1010, col: 26, offset: 41358},
																	expr: &litMatcher{
																		pos:        position{line: 1010, col: 27, offset: 41359},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
																&notExpr{
																	pos: position{line: 1010, col: 31, offset: 41363},
																	expr: &litMatcher{
																		pos:        position{line: 1010, col: 32, offset: 41364},
																		val:        "<<",
																		ignoreCase: false,
																	},
																},
																&notExpr{
																	pos: position{line: 1010, col: 37, offset: 41369},
																	expr: &litMatcher{
																		pos:        position{line: 1010, col: 38, offset: 41370},
																		val:        ">>",
																		ignoreCase: false,
																	},
																},
																&notExpr{
																	pos: position{line: 1010, col: 43, offset: 41375},
																	expr: &litMatcher{
																		pos:        position{line: 1010, col: 44, offset: 41376},
																		val:        ",",
																		ignoreCase: false,
																	},
																},
																&anyMatcher{
																	line: 1010, col: 48, offset: 41380,
																},
															},
														},
													},
												},
											},
											&litMatcher{
												pos:        position{line: 151, col: 33, offset: 5788},
												val:        "]]",
												ignoreCase: false,
											},
										},
									},
								},
							},
						},
						&zeroOrMoreExpr{
							pos: position{line: 279, col: 119, offset: 10291},
							expr: &choiceExpr{
								pos: position{line: 1024, col: 7, offset: 41621},
								alternatives: []interface{}{
									&litMatcher{
										pos:        position{line: 1024, col: 7, offset: 41621},
										val:        " ",
										ignoreCase: false,
									},
									&actionExpr{
										pos: position{line: 1024, col: 13, offset: 41627},
										run: (*parser).callonSection1Title261,
										expr: &litMatcher{
											pos:        position{line: 1024, col: 13, offset: 41627},
											val:        "\t",
											ignoreCase: false,
										},
									},
								},
							},
						},
						&choiceExpr{
							pos: position{line: 1032, col: 8, offset: 41723},
							alternatives: []interface{}{
								&litMatcher{
									pos:        position{line: 1028, col: 12, offset: 41683},
									val:        "\r\n",
									ignoreCase: false,
								},
								&charClassMatcher{
									pos:        position{line: 1028, col: 21, offset: 41692},
									val:        "[\\r\\n]",
									chars:      []rune{'\r', '\n'},
									ignoreCase: false,
									inverted:   false,
								},
								&notExpr{
									pos: position{line: 1030, col: 8, offset: 41712},
									expr: &anyMatcher{
										line: 1030, col: 9, offset: 41713,
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "Section1Block",
			pos:  position{line: 283, col: 1, offset: 10410},
			expr: &actionExpr{
				pos: position{line: 283, col: 18, offset: 10427},
				run: (*parser).callonSection1Block1,
				expr: &seqExpr{
					pos: position{line: 283, col: 18, offset: 10427},
					exprs: []interface{}{
						&notExpr{
							pos: position{line: 283, col: 18, offset: 10427},
							expr: &ruleRefExpr{
								pos:  position{line: 283, col: 19, offset: 10428},
								name: "Section1Title",
							},
						},
						&labeledExpr{
							pos:   position{line: 283, col: 33, offset: 10442},
							label: "content",
							expr: &choiceExpr{
								pos: position{line: 283, col: 42, offset: 10451},
								alternatives: []interface{}{
									&ruleRefExpr{
										pos:  position{line: 283, col: 42, offset: 10451},
										name: "Section2",
									},
									&ruleRefExpr{
										pos:  position{line: 283, col: 53, offset: 10462},
										name: "Section3",
									},
									&ruleRefExpr{
										pos:  position{line: 283, col: 64, offset: 10473},
										name: "Section4",
									},
									&ruleRefExpr{
										pos:  position{line: 283, col: 75, offset: 10484},
										name: "Section5",
									},
									&ruleRefExpr{
										pos:  position{line: 283, col: 86, offset: 10495},
										name: "DocumentBlock",
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "Section2",
			pos:  position{line: 287, col: 1, offset: 10539},
			expr: &actionExpr{
				pos: position{line: 287, col: 13, offset: 10551},
				run: (*parser).callonSection21,
				expr: &seqExpr{
					pos: position{line: 287, col: 13, offset: 10551},
					exprs: []interface{}{
						&notExpr{
							pos: position{line: 287, col: 13, offset: 10551},
							expr: &notExpr{
								pos: position{line: 1030, col: 8, offset: 41712},
								expr: &anyMatcher{
									line: 1030, col: 9, offset: 41713,
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 288, col: 5, offset: 10622},
							label: "section",
							expr: &actionExpr{
								pos: position{line: 288, col: 14, offset: 10631},
								run: (*parser).callonSection27,
								expr: &seqExpr{
									pos: position{line: 288, col: 14, offset: 10631},
									exprs: []interface{}{
										&labeledExpr{
											pos:   position{line: 288, col: 14, offset: 10631},
											label: "header",
											expr: &ruleRefExpr{
												pos:  position{line: 288, col: 22, offset: 10639},
												name: "Section2Title",
											},
										},
										&labeledExpr{
											pos:   position{line: 288, col: 37, offset: 10654},
											label: "elements",
											expr: &zeroOrOneExpr{
												pos: position{line: 288, col: 47, offset: 10664},
												expr: &ruleRefExpr{
													pos:  position{line: 288, col: 47, offset: 10664},
													name: "Section2Block",
												},
											},
										},
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "Section2Title",
			pos:  position{line: 296, col: 1, offset: 10851},
			expr: &actionExpr{
				pos: position{line: 296, col: 18, offset: 10868},
				run: (*parser).callonSection2Title1,
				expr: &seqExpr{
					pos: position{line: 296, col: 18, offset: 10868},
					exprs: []interface{}{
						&labeledExpr{
							pos:   position{line: 296, col: 18, offset: 10868},
							label: "attributes",
							expr: &zeroOrMoreExpr{
								pos: position{line: 296, col: 29, offset: 10879},
								expr: &actionExpr{
									pos: position{line: 136, col: 21, offset: 5188},
									run: (*parser).callonSection2Title5,
									expr: &seqExpr{
										pos: position{line: 136, col: 21, offset: 5188},
										exprs: []interface{}{
											&labeledExpr{
												pos:   position{line: 136, col: 21, offset: 5188},
												label: "attr",
												expr: &choiceExpr{
													pos: position{line: 136, col: 27, offset: 5194},
													alternatives: []interface{}{
														&actionExpr{
															pos: position{line: 145, col: 14, offset: 5645},
															run: (*parser).callonSection2Title9,
															expr: &labeledExpr{
																pos:   position{line: 145, col: 14, offset: 5645},
																label: "id",
																expr: &actionExpr{
																	pos: position{line: 151, col: 20, offset: 5775},
																	run: (*parser).callonSection2Title11,
																	expr: &seqExpr{
																		pos: position{line: 151, col: 20, offset: 5775},
																		exprs: []interface{}{
																			&litMatcher{
																				pos:        position{line: 151, col: 20, offset: 5775},
																				val:        "[[",
																				ignoreCase: false,
																			},
																			&labeledExpr{
																				pos:   position{line: 151, col: 25, offset: 5780},
																				label: "id",
																				expr: &actionExpr{
																					pos: position{line: 1010, col: 7, offset: 41339},
																					run: (*parser).callonSection2Title15,
																					expr: &oneOrMoreExpr{
																						pos: position{line: 1010, col: 7, offset: 41339},
																						expr: &seqExpr{
																							pos: position{line: 1010, col: 8, offset: 41340},
																							exprs: []interface{}{
																								&notExpr{
																									pos: position{line: 1010, col: 8, offset: 41340},
																									expr: &choiceExpr{
																										pos: position{line: 1028, col: 12, offset: 41683},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1028, col: 12, offset: 41683},
																												val:        "\r\n",
																												ignoreCase: false,
																											},
																											&charClassMatcher{
																												pos:        position{line: 1028, col: 21, offset: 41692},
																												val:        "[\\r\\n]",
																												chars:      []rune{'\r', '\n'},
																												ignoreCase: false,
																												inverted:   false,
																											},
																										},
																									},
																								},
																								&notExpr{
																									pos: position{line: 1010, col: 17, offset: 41349},
																									expr: &choiceExpr{
																										pos: position{line: 1024, col: 7, offset: 41621},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1024, col: 7, offset: 41621},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 1024, col: 13, offset: 41627},
																												run: (*parser).callonSection2Title25,
																												expr: &litMatcher{
																													pos:        position{line: 1024, col: 13, offset: 41627},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																								&notExpr{
																									pos: position{line: 1010, col: 21, offset: 41353},
																									expr: &litMatcher{
																										pos:        position{line: 1010, col: 22, offset: 41354},
																										val:        "[",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 1010, col: 26, offset: 41358},
																									expr: &litMatcher{
																										pos:        position{line: 1010, col: 27, offset: 41359},
																										val:        "]",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 1010, col: 31, offset: 41363},
																									expr: &litMatcher{
																										pos:        position{line: 1010, col: 32, offset: 41364},
																										val:        "<<",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 1010, col: 37, offset: 41369},
																									expr: &litMatcher{
																										pos:        position{line: 1010, col: 38, offset: 41370},
																										val:        ">>",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 1010, col: 43, offset: 41375},
																									expr: &litMatcher{
																										pos:        position{line: 1010, col: 44, offset: 41376},
																										val:        ",",
																										ignoreCase: false,
																									},
																								},
																								&anyMatcher{
																									line: 1010, col: 48, offset: 41380,
																								},
																							},
																						},
																					},
																				},
																			},
																			&litMatcher{
																				pos:        position{line: 151, col: 33, offset: 5788},
																				val:        "]]",
																				ignoreCase: false,
																			},
																		},
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 147, col: 5, offset: 5691},
															run: (*parser).callonSection2Title39,
															expr: &seqExpr{
																pos: position{line: 147, col: 5, offset: 5691},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 147, col: 5, offset: 5691},
																		val:        "[#",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 147, col: 10, offset: 5696},
																		label: "id",
																		expr: &actionExpr{
																			pos: position{line: 1010, col: 7, offset: 41339},
																			run: (*parser).callonSection2Title43,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 1010, col: 7, offset: 41339},
																				expr: &seqExpr{
																					pos: position{line: 1010, col: 8, offset: 41340},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 1010, col: 8, offset: 41340},
																							expr: &choiceExpr{
																								pos: position{line: 1028, col: 12, offset: 41683},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1028, col: 12, offset: 41683},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 1028, col: 21, offset: 41692},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 1010, col: 17, offset: 41349},
																							expr: &choiceExpr{
																								pos: position{line: 1024, col: 7, offset: 41621},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1024, col: 7, offset: 41621},
																										val:        " ",
																										ignoreCase: false,
																									},
																									&actionExpr{
																										pos: position{line: 1024, col: 13, offset: 41627},
																										run: (*parser).callonSection2Title53,
																										expr: &litMatcher{
																											pos:        position{line: 1024, col: 13, offset: 41627},
																											val:        "\t",
																											ignoreCase: false,
																										},
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 1010, col: 21, offset: 41353},
																							expr: &litMatcher{
																								pos:        position{line: 1010, col: 22, offset: 41354},
																								val:        "[",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 1010, col: 26, offset: 41358},
																							expr: &litMatcher{
																								pos:        position{line: 1010, col: 27, offset: 41359},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 1010, col: 31, offset: 41363},
																							expr: &litMatcher{
																								pos:        position{line: 1010, col: 32, offset: 41364},
																								val:        "<<",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 1010, col: 37, offset: 41369},
																							expr: &litMatcher{
																								pos:        position{line: 1010, col: 38, offset: 41370},
																								val:        ">>",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 1010, col: 43, offset: 41375},
																							expr: &litMatcher{
																								pos:        position{line: 1010, col: 44, offset: 41376},
																								val:        ",",
																								ignoreCase: false,
																							},
																						},
																						&anyMatcher{
																							line: 1010, col: 48, offset: 41380,
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 147, col: 18, offset: 5704},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 157, col: 17, offset: 5997},
															run: (*parser).callonSection2Title67,
															expr: &seqExpr{
																pos: position{line: 157, col: 17, offset: 5997},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 157, col: 17, offset: 5997},
																		val:        ".",
																		ignoreCase: false,
																	},
																	&notExpr{
																		pos: position{line: 157, col: 21, offset: 6001},
																		expr: &litMatcher{
																			pos:        position{line: 157, col: 22, offset: 6002},
																			val:        ".",
																			ignoreCase: false,
																		},
																	},
																	&notExpr{
																		pos: position{line: 157, col: 26, offset: 6006},
																		expr: &choiceExpr{
																			pos: position{line: 1024, col: 7, offset: 41621},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1024, col: 7, offset: 41621},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1024, col: 13, offset: 41627},
																					run: (*parser).callonSection2Title75,
																					expr: &litMatcher{
																						pos:        position{line: 1024, col: 13, offset: 41627},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 157, col: 30, offset: 6010},
																		label: "title",
																		expr: &actionExpr{
																			pos: position{line: 161, col: 24, offset: 6115},
																			run: (*parser).callonSection2Title78,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 161, col: 24, offset: 6115},
																				expr: &seqExpr{
																					pos: position{line: 161, col: 25, offset: 6116},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 161, col: 25, offset: 6116},
																							expr: &choiceExpr{
																								pos: position{line: 1028, col: 12, offset: 41683},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1028, col: 12, offset: 41683},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 1028, col: 21, offset: 41692},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																						},
																						&anyMatcher{
																							line: 161, col: 34, offset: 6125,
																						},
																					},
																				},
																			},
																		},
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 167, col: 16, offset: 6274},
															run: (*parser).callonSection2Title86,
															expr: &seqExpr{
																pos: position{line: 167, col: 16, offset: 6274},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 167, col: 16, offset: 6274},
																		val:        "[.",
																		ignoreCase: false,
																	},
																	&notExpr{
																		pos: position{line: 167, col: 21, offset: 6279},
																		expr: &choiceExpr{
																			pos: position{line: 1024, col: 7, offset: 41621},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1024, col: 7, offset: 41621},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1024, col: 13, offset: 41627},
																					run: (*parser).callonSection2Title92,
																					expr: &litMatcher{
																						pos:        position{line: 1024, col: 13, offset: 41627},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 167, col: 25, offset: 6283},
																		label: "role",
																		expr: &actionExpr{
																			pos: position{line: 171, col: 23, offset: 6387},
																			run: (*parser).callonSection2Title95,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 171, col: 23, offset: 6387},
																				expr: &seqExpr{
																					pos: position{line: 171, col: 24, offset: 6388},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 171, col: 24, offset: 6388},
																							expr: &choiceExpr{
																								pos: position{line: 1028, col: 12, offset: 41683},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1028, col: 12, offset: 41683},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 1028, col: 21, offset: 41692},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 171, col: 33, offset: 6397},
																							expr: &litMatcher{
																								pos:        position{line: 171, col: 34, offset: 6398},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																						&anyMatcher{
																							line: 171, col: 38, offset: 6402,
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 167, col: 51, offset: 6309},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 176, col: 30, offset: 6551},
															run: (*parser).callonSection2Title106,
															expr: &seqExpr{
																pos: position{line: 176, col: 30, offset: 6551},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 176, col: 30, offset: 6551},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 176, col: 34, offset: 6555},
																		label: "k",
																		expr: &choiceExpr{
																			pos: position{line: 494, col: 19, offset: 19245},
																			alternatives: []interface{}{
																				&actionExpr{
																					pos: position{line: 494, col: 19, offset: 19245},
																					run: (*parser).callonSection2Title111,
																					expr: &litMatcher{
																						pos:        position{line: 494, col: 19, offset: 19245},
																						val:        "TIP",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 496, col: 5, offset: 19283},
																					run: (*parser).callonSection2Title113,
																					expr: &litMatcher{
																						pos:        position{line: 496, col: 5, offset: 19283},
																						val:        "NOTE",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 498, col: 5, offset: 19323},
																					run: (*parser).callonSection2Title115,
																					expr: &litMatcher{
																						pos:        position{line: 498, col: 5, offset: 19323},
																						val:        "IMPORTANT",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 500, col: 5, offset: 19373},
																					run: (*parser).callonSection2Title117,
																					expr: &litMatcher{
																						pos:        position{line: 500, col: 5, offset: 19373},
																						val:        "WARNING",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 502, col: 5, offset: 19419},
																					run: (*parser).callonSection2Title119,
																					expr: &litMatcher{
																						pos:        position{line: 502, col: 5, offset: 19419},
																						val:        "CAUTION",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 176, col: 53, offset: 6574},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 199, col: 21, offset: 7312},
															run: (*parser).callonSection2Title122,
															expr: &litMatcher{
																pos:        position{line: 199, col: 21, offset: 7312},
																val:        "[horizontal]",
																ignoreCase: false,
															},
														},
														&actionExpr{
															pos: position{line: 181, col: 19, offset: 6735},
															run: (*parser).callonSection2Title124,
															expr: &seqExpr{
																pos: position{line: 181, col: 19, offset: 6735},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 181, col: 19, offset: 6735},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&notExpr{
																		pos: position{line: 181, col: 23, offset: 6739},
																		expr: &choiceExpr{
																			pos: position{line: 1024, col: 7, offset: 41621},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1024, col: 7, offset: 41621},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1024, col: 13, offset: 41627},
																					run: (*parser).callonSection2Title130,
																					expr: &litMatcher{
																						pos:        position{line: 1024, col: 13, offset: 41627},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 181, col: 27, offset: 6743},
																		label: "attributes",
																		expr: &zeroOrMoreExpr{
																			pos: position{line: 181, col: 38, offset: 6754},
																			expr: &choiceExpr{
																				pos: position{line: 185, col: 21, offset: 6867},
																				alternatives: []interface{}{
																					&actionExpr{
																						pos: position{line: 185, col: 21, offset: 6867},
																						run: (*parser).callonSection2Title135,
																						expr: &seqExpr{
																							pos: position{line: 185, col: 21, offset: 6867},
																							exprs: []interface{}{
																								&labeledExpr{
																									pos:   position{line: 185, col: 21, offset: 6867},
																									label: "key",
																									expr: &actionExpr{
																										pos: position{line: 191, col: 17, offset: 7127},
																										run: (*parser).callonSection2Title138,
																										expr: &seqExpr{
																											pos: position{line: 191, col: 17, offset: 7127},
																											exprs: []interface{}{
																												&notExpr{
																													pos: position{line: 191, col: 17, offset: 7127},
																													expr: &actionExpr{
																														pos: position{line: 231, col: 14, offset: 8674},
																														run: (*parser).callonSection2Title141,
																														expr: &litMatcher{
																															pos:        position{line: 231, col: 14, offset: 8674},
																															val:        "verse",
																															ignoreCase: false,
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 191, col: 28, offset: 7138},
																													expr: &actionExpr{
																														pos: position{line: 975, col: 16, offset: 40537},
																														run: (*parser).callonSection2Title144,
																														expr: &litMatcher{
																															pos:        position{line: 975, col: 16, offset: 40537},
																															val:        "literal",
																															ignoreCase: false,
																														},
																													},
																												},
																												&labeledExpr{
																													pos:   position{line: 191, col: 41, offset: 7151},
																													label: "key",
																													expr: &oneOrMoreExpr{
																														pos: position{line: 191, col: 45, offset: 7155},
																														expr: &seqExpr{
																															pos: position{line: 191, col: 46, offset: 7156},
																															exprs: []interface{}{
																																&notExpr{
																																	pos: position{line: 191, col: 46, offset: 7156},
																																	expr: &litMatcher{
																																		pos:        position{line: 191, col: 47, offset: 7157},
																																		val:        "=",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 191, col: 51, offset: 7161},
																																	expr: &litMatcher{
																																		pos:        position{line: 191, col: 52, offset: 7162},
																																		val:        ",",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 191, col: 56, offset: 7166},
																																	expr: &litMatcher{
																																		pos:        position{line: 191, col: 57, offset: 7167},
																																		val:        "]",
																																		ignoreCase: false,
																																	},
																																},
																																&anyMatcher{
																																	line: 191, col: 61, offset: 7171,
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&litMatcher{
																									pos:        position{line: 185, col: 40, offset: 6886},
																									val:        "=",
																									ignoreCase: false,
																								},
																								&labeledExpr{
																									pos:   position{line: 185, col: 44, offset: 6890},
																									label: "value",
																									expr: &actionExpr{
																										pos: position{line: 195, col: 19, offset: 7230},
																										run: (*parser).callonSection2Title158,
																										expr: &labeledExpr{
																											pos:   position{line: 195, col: 19, offset: 7230},
																											label: "value",
																											expr: &zeroOrMoreExpr{
																												pos: position{line: 195, col: 25, offset: 7236},
																												expr: &seqExpr{
																													pos: position{line: 195, col: 26, offset: 7237},
																													exprs: []interface{}{
																														&notExpr{
																															pos: position{line: 195, col: 26, offset: 7237},
																															expr: &litMatcher{
																																pos:        position{line: 195, col: 27, offset: 7238},
																																val:        "=",
																																ignoreCase: false,
																															},
																														},
																														&notExpr{
																															pos: position{line: 195, col: 31, offset: 7242},
																															expr: &litMatcher{
																																pos:        position{line: 195, col: 32, offset: 7243},
																																val:        ",",
																																ignoreCase: false,
																															},
																														},
																														&notExpr{
																															pos: position{line: 195, col: 36, offset: 7247},
																															expr: &litMatcher{
																																pos:        position{line: 195, col: 37, offset: 7248},
																																val:        "]",
																																ignoreCase: false,
																															},
																														},
																														&anyMatcher{
																															line: 195, col: 41, offset: 7252,
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&zeroOrOneExpr{
																									pos: position{line: 185, col: 67, offset: 6913},
																									expr: &litMatcher{
																										pos:        position{line: 185, col: 67, offset: 6913},
																										val:        ",",
																										ignoreCase: false,
																									},
																								},
																								&zeroOrMoreExpr{
																									pos: position{line: 185, col: 72, offset: 6918},
																									expr: &choiceExpr{
																										pos: position{line: 1024, col: 7, offset: 41621},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1024, col: 7, offset: 41621},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 1024, col: 13, offset: 41627},
																												run: (*parser).callonSection2Title174,
																												expr: &litMatcher{
																													pos:        position{line: 1024, col: 13, offset: 41627},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																					&actionExpr{
																						pos: position{line: 187, col: 5, offset: 7002},
																						run: (*parser).callonSection2Title176,
																						expr: &seqExpr{
																							pos: position{line: 187, col: 5, offset: 7002},
																							exprs: []interface{}{
																								&labeledExpr{
																									pos:   position{line: 187, col: 5, offset: 7002},
																									label: "key",
																									expr: &actionExpr{
																										pos: position{line: 191, col: 17, offset: 7127},
																										run: (*parser).callonSection2Title179,
																										expr: &seqExpr{
																											pos: position{line: 191, col: 17, offset: 7127},
																											exprs: []interface{}{
																												&notExpr{
																													pos: position{line: 191, col: 17, offset: 7127},
																													expr: &actionExpr{
																														pos: position{line: 231, col: 14, offset: 8674},
																														run: (*parser).callonSection2Title182,
																														expr: &litMatcher{
																															pos:        position{line: 231, col: 14, offset: 8674},
																															val:        "verse",
																															ignoreCase: false,
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 191, col: 28, offset: 7138},
																													expr: &actionExpr{
																														pos: position{line: 975, col: 16, offset: 40537},
																														run: (*parser).callonSection2Title185,
																														expr: &litMatcher{
																															pos:        position{line: 975, col: 16, offset: 40537},
																															val:        "literal",
																															ignoreCase: false,
																														},
																													},
																												},
																												&labeledExpr{
																													pos:   position{line: 191, col: 41, offset: 7151},
																													label: "key",
																													expr: &oneOrMoreExpr{
																														pos: position{line: 191, col: 45, offset: 7155},
																														expr: &seqExpr{
																															pos: position{line: 191, col: 46, offset: 7156},
																															exprs: []interface{}{
																																&notExpr{
																																	pos: position{line: 191, col: 46, offset: 7156},
																																	expr: &litMatcher{
																																		pos:        position{line: 191, col: 47, offset: 7157},
																																		val:        "=",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 191, col: 51, offset: 7161},
																																	expr: &litMatcher{
																																		pos:        position{line: 191, col: 52, offset: 7162},
																																		val:        ",",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 191, col: 56, offset: 7166},
																																	expr: &litMatcher{
																																		pos:        position{line: 191, col: 57, offset: 7167},
																																		val:        "]",
																																		ignoreCase: false,
																																	},
																																},
																																&anyMatcher{
																																	line: 191, col: 61, offset: 7171,
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&zeroOrOneExpr{
																									pos: position{line: 187, col: 24, offset: 7021},
																									expr: &litMatcher{
																										pos:        position{line: 187, col: 24, offset: 7021},
																										val:        ",",
																										ignoreCase: false,
																									},
																								},
																								&zeroOrMoreExpr{
																									pos: position{line: 187, col: 29, offset: 7026},
																									expr: &choiceExpr{
																										pos: position{line: 1024, col: 7, offset: 41621},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1024, col: 7, offset: 41621},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 1024, col: 13, offset: 41627},
																												run: (*parser).callonSection2Title202,
																												expr: &litMatcher{
																													pos:        position{line: 1024, col: 13, offset: 41627},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 181, col: 59, offset: 6775},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
													},
												},
											},
											&zeroOrMoreExpr{
												pos: position{line: 136, col: 131, offset: 5298},
												expr: &choiceExpr{
													pos: position{line: 1024, col: 7, offset: 41621},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1024, col: 7, offset: 41621},
															val:        " ",
															ignoreCase: false,
														},
														&actionExpr{
															pos: position{line: 1024, col: 13, offset: 41627},
															run: (*parser).callonSection2Title208,
															expr: &litMatcher{
																pos:        position{line: 1024, col: 13, offset: 41627},
																val:        "\t",
																ignoreCase: false,
															},
														},
													},
												},
											},
											&choiceExpr{
												pos: position{line: 1032, col: 8, offset: 41723},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1028, col: 12, offset: 41683},
														val:        "\r\n",
														ignoreCase: false,
													},
													&charClassMatcher{
														pos:        position{line: 1028, col: 21, offset: 41692},
														val:        "[\\r\\n]",
														chars:      []rune{'\r', '\n'},
														ignoreCase: false,
														inverted:   false,
													},
													&notExpr{
														pos: position{line: 1030, col: 8, offset: 41712},
														expr: &anyMatcher{
															line: 1030, col: 9, offset: 41713,
														},
													},
												},
											},
										},
									},
								},
							},
						},
						&litMatcher{
							pos:        position{line: 294, col: 24, offset: 10839},
							val:        "===",
							ignoreCase: false,
						},
						&oneOrMoreExpr{
							pos: position{line: 294, col: 30, offset: 10845},
							expr: &choiceExpr{
								pos: position{line: 1024, col: 7, offset: 41621},
								alternatives: []interface{}{
									&litMatcher{
										pos:        position{line: 1024, col: 7, offset: 41621},
										val:        " ",
										ignoreCase: false,
									},
									&actionExpr{
										pos: position{line: 1024, col: 13, offset: 41627},
										run: (*parser).callonSection2Title219,
										expr: &litMatcher{
											pos:        position{line: 1024, col: 13, offset: 41627},
											val:        "\t",
											ignoreCase: false,
										},
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 296, col: 69, offset: 10919},
							label: "content",
							expr: &ruleRefExpr{
								pos:  position{line: 296, col: 78, offset: 10928},
								name: "TitleElements",
							},
						},
						&zeroOrMoreExpr{
							pos: position{line: 296, col: 93, offset: 10943},
							expr: &choiceExpr{
								pos: position{line: 1024, col: 7, offset: 41621},
								alternatives: []interface{}{
									&litMatcher{
										pos:        position{line: 1024, col: 7, offset: 41621},
										val:        " ",
										ignoreCase: false,
									},
									&actionExpr{
										pos: position{line: 1024, col: 13, offset: 41627},
										run: (*parser).callonSection2Title226,
										expr: &litMatcher{
											pos:        position{line: 1024, col: 13, offset: 41627},
											val:        "\t",
											ignoreCase: false,
										},
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 296, col: 97, offset: 10947},
							label: "id",
							expr: &zeroOrOneExpr{
								pos: position{line: 296, col: 100, offset: 10950},
								expr: &actionExpr{
									pos: position{line: 151, col: 20, offset: 5775},
									run: (*parser).callonSection2Title230,
									expr: &seqExpr{
										pos: position{line: 151, col: 20, offset: 5775},
										exprs: []interface{}{
											&litMatcher{
												pos:        position{line: 151, col: 20, offset: 5775},
												val:        "[[",
												ignoreCase: false,
											},
											&labeledExpr{
												pos:   position{line: 151, col: 25, offset: 5780},
												label: "id",
												expr: &actionExpr{
													pos: position{line: 1010, col: 7, offset: 41339},
													run: (*parser).callonSection2Title234,
													expr: &oneOrMoreExpr{
														pos: position{line: 1010, col: 7, offset: 41339},
														expr: &seqExpr{
															pos: position{line: 1010, col: 8, offset: 41340},
															exprs: []interface{}{
																&notExpr{
																	pos: position{line: 1010, col: 8, offset: 41340},
																	expr: &choiceExpr{
																		pos: position{line: 1028, col: 12, offset: 41683},
																		alternatives: []interface{}{
																			&litMatcher{
																				pos:        position{line: 1028, col: 12, offset: 41683},
																				val:        "\r\n",
																				ignoreCase: false,
																			},
																			&charClassMatcher{
																				pos:        position{line: 1028, col: 21, offset: 41692},
																				val:        "[\\r\\n]",
																				chars:      []rune{'\r', '\n'},
																				ignoreCase: false,
																				inverted:   false,
																			},
																		},
																	},
																},
																&notExpr{
																	pos: position{line: 1010, col: 17, offset: 41349},
																	expr: &choiceExpr{
																		pos: position{line: 1024, col: 7, offset: 41621},
																		alternatives: []interface{}{
																			&litMatcher{
																				pos:        position{line: 1024, col: 7, offset: 41621},
																				val:        " ",
																				ignoreCase: false,
																			},
																			&actionExpr{
																				pos: position{line: 1024, col: 13, offset: 41627},
																				run: (*parser).callonSection2Title244,
																				expr: &litMatcher{
																					pos:        position{line: 1024, col: 13, offset: 41627},
																					val:        "\t",
																					ignoreCase: false,
																				},
																			},
																		},
																	},
																},
																&notExpr{
																	pos: position{line: 1010, col: 21, offset: 41353},
																	expr: &litMatcher{
																		pos:        position{line: 1010, col: 22, offset: 41354},
																		val:        "[",
																		ignoreCase: false,
																	},
																},
																&notExpr{
																	pos: position{line: 1010, col: 26, offset: 41358},
																	expr: &litMatcher{
																		pos:        position{line: 1010, col: 27, offset: 41359},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
																&notExpr{
																	pos: position{line: 1010, col: 31, offset: 41363},
																	expr: &litMatcher{
																		pos:        position{line: 1010, col: 32, offset: 41364},
																		val:        "<<",
																		ignoreCase: false,
																	},
																},
																&notExpr{
																	pos: position{line: 1010, col: 37, offset: 41369},
																	expr: &litMatcher{
																		pos:        position{line: 1010, col: 38, offset: 41370},
																		val:        ">>",
																		ignoreCase: false,
																	},
																},
																&notExpr{
																	pos: position{line: 1010, col: 43, offset: 41375},
																	expr: &litMatcher{
																		pos:        position{line: 1010, col: 44, offset: 41376},
																		val:        ",",
																		ignoreCase: false,
																	},
																},
																&anyMatcher{
																	line: 1010, col: 48, offset: 41380,
																},
															},
														},
													},
												},
											},
											&litMatcher{
												pos:        position{line: 151, col: 33, offset: 5788},
												val:        "]]",
												ignoreCase: false,
											},
										},
									},
								},
							},
						},
						&zeroOrMoreExpr{
							pos: position{line: 296, col: 119, offset: 10969},
							expr: &choiceExpr{
								pos: position{line: 1024, col: 7, offset: 41621},
								alternatives: []interface{}{
									&litMatcher{
										pos:        position{line: 1024, col: 7, offset: 41621},
										val:        " ",
										ignoreCase: false,
									},
									&actionExpr{
										pos: position{line: 1024, col: 13, offset: 41627},
										run: (*parser).callonSection2Title261,
										expr: &litMatcher{
											pos:        position{line: 1024, col: 13, offset: 41627},
											val:        "\t",
											ignoreCase: false,
										},
									},
								},
							},
						},
						&choiceExpr{
							pos: position{line: 1032, col: 8, offset: 41723},
							alternatives: []interface{}{
								&litMatcher{
									pos:        position{line: 1028, col: 12, offset: 41683},
									val:        "\r\n",
									ignoreCase: false,
								},
								&charClassMatcher{
									pos:        position{line: 1028, col: 21, offset: 41692},
									val:        "[\\r\\n]",
									chars:      []rune{'\r', '\n'},
									ignoreCase: false,
									inverted:   false,
								},
								&notExpr{
									pos: position{line: 1030, col: 8, offset: 41712},
									expr: &anyMatcher{
										line: 1030, col: 9, offset: 41713,
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "Section2Block",
			pos:  position{line: 300, col: 1, offset: 11087},
			expr: &actionExpr{
				pos: position{line: 300, col: 18, offset: 11104},
				run: (*parser).callonSection2Block1,
				expr: &seqExpr{
					pos: position{line: 300, col: 18, offset: 11104},
					exprs: []interface{}{
						&notExpr{
							pos: position{line: 300, col: 18, offset: 11104},
							expr: &ruleRefExpr{
								pos:  position{line: 300, col: 19, offset: 11105},
								name: "Section1Title",
							},
						},
						&notExpr{
							pos: position{line: 300, col: 33, offset: 11119},
							expr: &ruleRefExpr{
								pos:  position{line: 300, col: 34, offset: 11120},
								name: "Section2Title",
							},
						},
						&labeledExpr{
							pos:   position{line: 300, col: 48, offset: 11134},
							label: "content",
							expr: &zeroOrMoreExpr{
								pos: position{line: 300, col: 56, offset: 11142},
								expr: &choiceExpr{
									pos: position{line: 300, col: 57, offset: 11143},
									alternatives: []interface{}{
										&ruleRefExpr{
											pos:  position{line: 300, col: 57, offset: 11143},
											name: "Section3",
										},
										&ruleRefExpr{
											pos:  position{line: 300, col: 68, offset: 11154},
											name: "Section4",
										},
										&ruleRefExpr{
											pos:  position{line: 300, col: 79, offset: 11165},
											name: "Section5",
										},
										&ruleRefExpr{
											pos:  position{line: 300, col: 90, offset: 11176},
											name: "DocumentBlock",
										},
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "Section3",
			pos:  position{line: 304, col: 1, offset: 11221},
			expr: &actionExpr{
				pos: position{line: 304, col: 13, offset: 11233},
				run: (*parser).callonSection31,
				expr: &seqExpr{
					pos: position{line: 304, col: 13, offset: 11233},
					exprs: []interface{}{
						&notExpr{
							pos: position{line: 304, col: 13, offset: 11233},
							expr: &notExpr{
								pos: position{line: 1030, col: 8, offset: 41712},
								expr: &anyMatcher{
									line: 1030, col: 9, offset: 41713,
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 305, col: 5, offset: 11304},
							label: "section",
							expr: &actionExpr{
								pos: position{line: 305, col: 14, offset: 11313},
								run: (*parser).callonSection37,
								expr: &seqExpr{
									pos: position{line: 305, col: 14, offset: 11313},
									exprs: []interface{}{
										&labeledExpr{
											pos:   position{line: 305, col: 14, offset: 11313},
											label: "header",
											expr: &ruleRefExpr{
												pos:  position{line: 305, col: 22, offset: 11321},
												name: "Section3Title",
											},
										},
										&labeledExpr{
											pos:   position{line: 305, col: 37, offset: 11336},
											label: "elements",
											expr: &zeroOrOneExpr{
												pos: position{line: 305, col: 47, offset: 11346},
												expr: &ruleRefExpr{
													pos:  position{line: 305, col: 47, offset: 11346},
													name: "Section3Block",
												},
											},
										},
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "Section3Title",
			pos:  position{line: 313, col: 1, offset: 11534},
			expr: &actionExpr{
				pos: position{line: 313, col: 18, offset: 11551},
				run: (*parser).callonSection3Title1,
				expr: &seqExpr{
					pos: position{line: 313, col: 18, offset: 11551},
					exprs: []interface{}{
						&labeledExpr{
							pos:   position{line: 313, col: 18, offset: 11551},
							label: "attributes",
							expr: &zeroOrMoreExpr{
								pos: position{line: 313, col: 29, offset: 11562},
								expr: &actionExpr{
									pos: position{line: 136, col: 21, offset: 5188},
									run: (*parser).callonSection3Title5,
									expr: &seqExpr{
										pos: position{line: 136, col: 21, offset: 5188},
										exprs: []interface{}{
											&labeledExpr{
												pos:   position{line: 136, col: 21, offset: 5188},
												label: "attr",
												expr: &choiceExpr{
													pos: position{line: 136, col: 27, offset: 5194},
													alternatives: []interface{}{
														&actionExpr{
															pos: position{line: 145, col: 14, offset: 5645},
															run: (*parser).callonSection3Title9,
															expr: &labeledExpr{
																pos:   position{line: 145, col: 14, offset: 5645},
																label: "id",
																expr: &actionExpr{
																	pos: position{line: 151, col: 20, offset: 5775},
																	run: (*parser).callonSection3Title11,
																	expr: &seqExpr{
																		pos: position{line: 151, col: 20, offset: 5775},
																		exprs: []interface{}{
																			&litMatcher{
																				pos:        position{line: 151, col: 20, offset: 5775},
																				val:        "[[",
																				ignoreCase: false,
																			},
																			&labeledExpr{
																				pos:   position{line: 151, col: 25, offset: 5780},
																				label: "id",
																				expr: &actionExpr{
																					pos: position{line: 1010, col: 7, offset: 41339},
																					run: (*parser).callonSection3Title15,
																					expr: &oneOrMoreExpr{
																						pos: position{line: 1010, col: 7, offset: 41339},
																						expr: &seqExpr{
																							pos: position{line: 1010, col: 8, offset: 41340},
																							exprs: []interface{}{
																								&notExpr{
																									pos: position{line: 1010, col: 8, offset: 41340},
																									expr: &choiceExpr{
																										pos: position{line: 1028, col: 12, offset: 41683},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1028, col: 12, offset: 41683},
																												val:        "\r\n",
																												ignoreCase: false,
																											},
																											&charClassMatcher{
																												pos:        position{line: 1028, col: 21, offset: 41692},
																												val:        "[\\r\\n]",
																												chars:      []rune{'\r', '\n'},
																												ignoreCase: false,
																												inverted:   false,
																											},
																										},
																									},
																								},
																								&notExpr{
																									pos: position{line: 1010, col: 17, offset: 41349},
																									expr: &choiceExpr{
																										pos: position{line: 1024, col: 7, offset: 41621},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1024, col: 7, offset: 41621},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 1024, col: 13, offset: 41627},
																												run: (*parser).callonSection3Title25,
																												expr: &litMatcher{
																													pos:        position{line: 1024, col: 13, offset: 41627},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																								&notExpr{
																									pos: position{line: 1010, col: 21, offset: 41353},
																									expr: &litMatcher{
																										pos:        position{line: 1010, col: 22, offset: 41354},
																										val:        "[",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 1010, col: 26, offset: 41358},
																									expr: &litMatcher{
																										pos:        position{line: 1010, col: 27, offset: 41359},
																										val:        "]",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 1010, col: 31, offset: 41363},
																									expr: &litMatcher{
																										pos:        position{line: 1010, col: 32, offset: 41364},
																										val:        "<<",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 1010, col: 37, offset: 41369},
																									expr: &litMatcher{
																										pos:        position{line: 1010, col: 38, offset: 41370},
																										val:        ">>",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 1010, col: 43, offset: 41375},
																									expr: &litMatcher{
																										pos:        position{line: 1010, col: 44, offset: 41376},
																										val:        ",",
																										ignoreCase: false,
																									},
																								},
																								&anyMatcher{
																									line: 1010, col: 48, offset: 41380,
																								},
																							},
																						},
																					},
																				},
																			},
																			&litMatcher{
																				pos:        position{line: 151, col: 33, offset: 5788},
																				val:        "]]",
																				ignoreCase: false,
																			},
																		},
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 147, col: 5, offset: 5691},
															run: (*parser).callonSection3Title39,
															expr: &seqExpr{
																pos: position{line: 147, col: 5, offset: 5691},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 147, col: 5, offset: 5691},
																		val:        "[#",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 147, col: 10, offset: 5696},
																		label: "id",
																		expr: &actionExpr{
																			pos: position{line: 1010, col: 7, offset: 41339},
																			run: (*parser).callonSection3Title43,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 1010, col: 7, offset: 41339},
																				expr: &seqExpr{
																					pos: position{line: 1010, col: 8, offset: 41340},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 1010, col: 8, offset: 41340},
																							expr: &choiceExpr{
																								pos: position{line: 1028, col: 12, offset: 41683},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1028, col: 12, offset: 41683},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 1028, col: 21, offset: 41692},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 1010, col: 17, offset: 41349},
																							expr: &choiceExpr{
																								pos: position{line: 1024, col: 7, offset: 41621},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1024, col: 7, offset: 41621},
																										val:        " ",
																										ignoreCase: false,
																									},
																									&actionExpr{
																										pos: position{line: 1024, col: 13, offset: 41627},
																										run: (*parser).callonSection3Title53,
																										expr: &litMatcher{
																											pos:        position{line: 1024, col: 13, offset: 41627},
																											val:        "\t",
																											ignoreCase: false,
																										},
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 1010, col: 21, offset: 41353},
																							expr: &litMatcher{
																								pos:        position{line: 1010, col: 22, offset: 41354},
																								val:        "[",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 1010, col: 26, offset: 41358},
																							expr: &litMatcher{
																								pos:        position{line: 1010, col: 27, offset: 41359},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 1010, col: 31, offset: 41363},
																							expr: &litMatcher{
																								pos:        position{line: 1010, col: 32, offset: 41364},
																								val:        "<<",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 1010, col: 37, offset: 41369},
																							expr: &litMatcher{
																								pos:        position{line: 1010, col: 38, offset: 41370},
																								val:        ">>",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 1010, col: 43, offset: 41375},
																							expr: &litMatcher{
																								pos:        position{line: 1010, col: 44, offset: 41376},
																								val:        ",",
																								ignoreCase: false,
																							},
																						},
																						&anyMatcher{
																							line: 1010, col: 48, offset: 41380,
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 147, col: 18, offset: 5704},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 157, col: 17, offset: 5997},
															run: (*parser).callonSection3Title67,
															expr: &seqExpr{
																pos: position{line: 157, col: 17, offset: 5997},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 157, col: 17, offset: 5997},
																		val:        ".",
																		ignoreCase: false,
																	},
																	&notExpr{
																		pos: position{line: 157, col: 21, offset: 6001},
																		expr: &litMatcher{
																			pos:        position{line: 157, col: 22, offset: 6002},
																			val:        ".",
																			ignoreCase: false,
																		},
																	},
																	&notExpr{
																		pos: position{line: 157, col: 26, offset: 6006},
																		expr: &choiceExpr{
																			pos: position{line: 1024, col: 7, offset: 41621},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1024, col: 7, offset: 41621},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1024, col: 13, offset: 41627},
																					run: (*parser).callonSection3Title75,
																					expr: &litMatcher{
																						pos:        position{line: 1024, col: 13, offset: 41627},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 157, col: 30, offset: 6010},
																		label: "title",
																		expr: &actionExpr{
																			pos: position{line: 161, col: 24, offset: 6115},
																			run: (*parser).callonSection3Title78,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 161, col: 24, offset: 6115},
																				expr: &seqExpr{
																					pos: position{line: 161, col: 25, offset: 6116},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 161, col: 25, offset: 6116},
																							expr: &choiceExpr{
																								pos: position{line: 1028, col: 12, offset: 41683},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1028, col: 12, offset: 41683},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 1028, col: 21, offset: 41692},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																						},
																						&anyMatcher{
																							line: 161, col: 34, offset: 6125,
																						},
																					},
																				},
																			},
																		},
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 167, col: 16, offset: 6274},
															run: (*parser).callonSection3Title86,
															expr: &seqExpr{
																pos: position{line: 167, col: 16, offset: 6274},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 167, col: 16, offset: 6274},
																		val:        "[.",
																		ignoreCase: false,
																	},
																	&notExpr{
																		pos: position{line: 167, col: 21, offset: 6279},
																		expr: &choiceExpr{
																			pos: position{line: 1024, col: 7, offset: 41621},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1024, col: 7, offset: 41621},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1024, col: 13, offset: 41627},
																					run: (*parser).callonSection3Title92,
																					expr: &litMatcher{
																						pos:        position{line: 1024, col: 13, offset: 41627},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 167, col: 25, offset: 6283},
																		label: "role",
																		expr: &actionExpr{
																			pos: position{line: 171, col: 23, offset: 6387},
																			run: (*parser).callonSection3Title95,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 171, col: 23, offset: 6387},
																				expr: &seqExpr{
																					pos: position{line: 171, col: 24, offset: 6388},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 171, col: 24, offset: 6388},
																							expr: &choiceExpr{
																								pos: position{line: 1028, col: 12, offset: 41683},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1028, col: 12, offset: 41683},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 1028, col: 21, offset: 41692},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 171, col: 33, offset: 6397},
																							expr: &litMatcher{
																								pos:        position{line: 171, col: 34, offset: 6398},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																						&anyMatcher{
																							line: 171, col: 38, offset: 6402,
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 167, col: 51, offset: 6309},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 176, col: 30, offset: 6551},
															run: (*parser).callonSection3Title106,
															expr: &seqExpr{
																pos: position{line: 176, col: 30, offset: 6551},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 176, col: 30, offset: 6551},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 176, col: 34, offset: 6555},
																		label: "k",
																		expr: &choiceExpr{
																			pos: position{line: 494, col: 19, offset: 19245},
																			alternatives: []interface{}{
																				&actionExpr{
																					pos: position{line: 494, col: 19, offset: 19245},
																					run: (*parser).callonSection3Title111,
																					expr: &litMatcher{
																						pos:        position{line: 494, col: 19, offset: 19245},
																						val:        "TIP",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 496, col: 5, offset: 19283},
																					run: (*parser).callonSection3Title113,
																					expr: &litMatcher{
																						pos:        position{line: 496, col: 5, offset: 19283},
																						val:        "NOTE",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 498, col: 5, offset: 19323},
																					run: (*parser).callonSection3Title115,
																					expr: &litMatcher{
																						pos:        position{line: 498, col: 5, offset: 19323},
																						val:        "IMPORTANT",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 500, col: 5, offset: 19373},
																					run: (*parser).callonSection3Title117,
																					expr: &litMatcher{
																						pos:        position{line: 500, col: 5, offset: 19373},
																						val:        "WARNING",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 502, col: 5, offset: 19419},
																					run: (*parser).callonSection3Title119,
																					expr: &litMatcher{
																						pos:        position{line: 502, col: 5, offset: 19419},
																						val:        "CAUTION",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 176, col: 53, offset: 6574},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 199, col: 21, offset: 7312},
															run: (*parser).callonSection3Title122,
															expr: &litMatcher{
																pos:        position{line: 199, col: 21, offset: 7312},
																val:        "[horizontal]",
																ignoreCase: false,
															},
														},
														&actionExpr{
															pos: position{line: 181, col: 19, offset: 6735},
															run: (*parser).callonSection3Title124,
															expr: &seqExpr{
																pos: position{line: 181, col: 19, offset: 6735},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 181, col: 19, offset: 6735},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&notExpr{
																		pos: position{line: 181, col: 23, offset: 6739},
																		expr: &choiceExpr{
																			pos: position{line: 1024, col: 7, offset: 41621},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1024, col: 7, offset: 41621},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1024, col: 13, offset: 41627},
																					run: (*parser).callonSection3Title130,
																					expr: &litMatcher{
																						pos:        position{line: 1024, col: 13, offset: 41627},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 181, col: 27, offset: 6743},
																		label: "attributes",
																		expr: &zeroOrMoreExpr{
																			pos: position{line: 181, col: 38, offset: 6754},
																			expr: &choiceExpr{
																				pos: position{line: 185, col: 21, offset: 6867},
																				alternatives: []interface{}{
																					&actionExpr{
																						pos: position{line: 185, col: 21, offset: 6867},
																						run: (*parser).callonSection3Title135,
																						expr: &seqExpr{
																							pos: position{line: 185, col: 21, offset: 6867},
																							exprs: []interface{}{
																								&labeledExpr{
																									pos:   position{line: 185, col: 21, offset: 6867},
																									label: "key",
																									expr: &actionExpr{
																										pos: position{line: 191, col: 17, offset: 7127},
																										run: (*parser).callonSection3Title138,
																										expr: &seqExpr{
																											pos: position{line: 191, col: 17, offset: 7127},
																											exprs: []interface{}{
																												&notExpr{
																													pos: position{line: 191, col: 17, offset: 7127},
																													expr: &actionExpr{
																														pos: position{line: 231, col: 14, offset: 8674},
																														run: (*parser).callonSection3Title141,
																														expr: &litMatcher{
																															pos:        position{line: 231, col: 14, offset: 8674},
																															val:        "verse",
																															ignoreCase: false,
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 191, col: 28, offset: 7138},
																													expr: &actionExpr{
																														pos: position{line: 975, col: 16, offset: 40537},
																														run: (*parser).callonSection3Title144,
																														expr: &litMatcher{
																															pos:        position{line: 975, col: 16, offset: 40537},
																															val:        "literal",
																															ignoreCase: false,
																														},
																													},
																												},
																												&labeledExpr{
																													pos:   position{line: 191, col: 41, offset: 7151},
																													label: "key",
																													expr: &oneOrMoreExpr{
																														pos: position{line: 191, col: 45, offset: 7155},
																														expr: &seqExpr{
																															pos: position{line: 191, col: 46, offset: 7156},
																															exprs: []interface{}{
																																&notExpr{
																																	pos: position{line: 191, col: 46, offset: 7156},
																																	expr: &litMatcher{
																																		pos:        position{line: 191, col: 47, offset: 7157},
																																		val:        "=",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 191, col: 51, offset: 7161},
																																	expr: &litMatcher{
																																		pos:        position{line: 191, col: 52, offset: 7162},
																																		val:        ",",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 191, col: 56, offset: 7166},
																																	expr: &litMatcher{
																																		pos:        position{line: 191, col: 57, offset: 7167},
																																		val:        "]",
																																		ignoreCase: false,
																																	},
																																},
																																&anyMatcher{
																																	line: 191, col: 61, offset: 7171,
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&litMatcher{
																									pos:        position{line: 185, col: 40, offset: 6886},
																									val:        "=",
																									ignoreCase: false,
																								},
																								&labeledExpr{
																									pos:   position{line: 185, col: 44, offset: 6890},
																									label: "value",
																									expr: &actionExpr{
																										pos: position{line: 195, col: 19, offset: 7230},
																										run: (*parser).callonSection3Title158,
																										expr: &labeledExpr{
																											pos:   position{line: 195, col: 19, offset: 7230},
																											label: "value",
																											expr: &zeroOrMoreExpr{
																												pos: position{line: 195, col: 25, offset: 7236},
																												expr: &seqExpr{
																													pos: position{line: 195, col: 26, offset: 7237},
																													exprs: []interface{}{
																														&notExpr{
																															pos: position{line: 195, col: 26, offset: 7237},
																															expr: &litMatcher{
																																pos:        position{line: 195, col: 27, offset: 7238},
																																val:        "=",
																																ignoreCase: false,
																															},
																														},
																														&notExpr{
																															pos: position{line: 195, col: 31, offset: 7242},
																															expr: &litMatcher{
																																pos:        position{line: 195, col: 32, offset: 7243},
																																val:        ",",
																																ignoreCase: false,
																															},
																														},
																														&notExpr{
																															pos: position{line: 195, col: 36, offset: 7247},
																															expr: &litMatcher{
																																pos:        position{line: 195, col: 37, offset: 7248},
																																val:        "]",
																																ignoreCase: false,
																															},
																														},
																														&anyMatcher{
																															line: 195, col: 41, offset: 7252,
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&zeroOrOneExpr{
																									pos: position{line: 185, col: 67, offset: 6913},
																									expr: &litMatcher{
																										pos:        position{line: 185, col: 67, offset: 6913},
																										val:        ",",
																										ignoreCase: false,
																									},
																								},
																								&zeroOrMoreExpr{
																									pos: position{line: 185, col: 72, offset: 6918},
																									expr: &choiceExpr{
																										pos: position{line: 1024, col: 7, offset: 41621},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1024, col: 7, offset: 41621},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 1024, col: 13, offset: 41627},
																												run: (*parser).callonSection3Title174,
																												expr: &litMatcher{
																													pos:        position{line: 1024, col: 13, offset: 41627},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																					&actionExpr{
																						pos: position{line: 187, col: 5, offset: 7002},
																						run: (*parser).callonSection3Title176,
																						expr: &seqExpr{
																							pos: position{line: 187, col: 5, offset: 7002},
																							exprs: []interface{}{
																								&labeledExpr{
																									pos:   position{line: 187, col: 5, offset: 7002},
																									label: "key",
																									expr: &actionExpr{
																										pos: position{line: 191, col: 17, offset: 7127},
																										run: (*parser).callonSection3Title179,
																										expr: &seqExpr{
																											pos: position{line: 191, col: 17, offset: 7127},
																											exprs: []interface{}{
																												&notExpr{
																													pos: position{line: 191, col: 17, offset: 7127},
																													expr: &actionExpr{
																														pos: position{line: 231, col: 14, offset: 8674},
																														run: (*parser).callonSection3Title182,
																														expr: &litMatcher{
																															pos:        position{line: 231, col: 14, offset: 8674},
																															val:        "verse",
																															ignoreCase: false,
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 191, col: 28, offset: 7138},
																													expr: &actionExpr{
																														pos: position{line: 975, col: 16, offset: 40537},
																														run: (*parser).callonSection3Title185,
																														expr: &litMatcher{
																															pos:        position{line: 975, col: 16, offset: 40537},
																															val:        "literal",
																															ignoreCase: false,
																														},
																													},
																												},
																												&labeledExpr{
																													pos:   position{line: 191, col: 41, offset: 7151},
																													label: "key",
																													expr: &oneOrMoreExpr{
																														pos: position{line: 191, col: 45, offset: 7155},
																														expr: &seqExpr{
																															pos: position{line: 191, col: 46, offset: 7156},
																															exprs: []interface{}{
																																&notExpr{
																																	pos: position{line: 191, col: 46, offset: 7156},
																																	expr: &litMatcher{
																																		pos:        position{line: 191, col: 47, offset: 7157},
																																		val:        "=",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 191, col: 51, offset: 7161},
																																	expr: &litMatcher{
																																		pos:        position{line: 191, col: 52, offset: 7162},
																																		val:        ",",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 191, col: 56, offset: 7166},
																																	expr: &litMatcher{
																																		pos:        position{line: 191, col: 57, offset: 7167},
																																		val:        "]",
																																		ignoreCase: false,
																																	},
																																},
																																&anyMatcher{
																																	line: 191, col: 61, offset: 7171,
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&zeroOrOneExpr{
																									pos: position{line: 187, col: 24, offset: 7021},
																									expr: &litMatcher{
																										pos:        position{line: 187, col: 24, offset: 7021},
																										val:        ",",
																										ignoreCase: false,
																									},
																								},
																								&zeroOrMoreExpr{
																									pos: position{line: 187, col: 29, offset: 7026},
																									expr: &choiceExpr{
																										pos: position{line: 1024, col: 7, offset: 41621},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1024, col: 7, offset: 41621},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 1024, col: 13, offset: 41627},
																												run: (*parser).callonSection3Title202,
																												expr: &litMatcher{
																													pos:        position{line: 1024, col: 13, offset: 41627},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 181, col: 59, offset: 6775},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
													},
												},
											},
											&zeroOrMoreExpr{
												pos: position{line: 136, col: 131, offset: 5298},
												expr: &choiceExpr{
													pos: position{line: 1024, col: 7, offset: 41621},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1024, col: 7, offset: 41621},
															val:        " ",
															ignoreCase: false,
														},
														&actionExpr{
															pos: position{line: 1024, col: 13, offset: 41627},
															run: (*parser).callonSection3Title208,
															expr: &litMatcher{
																pos:        position{line: 1024, col: 13, offset: 41627},
																val:        "\t",
																ignoreCase: false,
															},
														},
													},
												},
											},
											&choiceExpr{
												pos: position{line: 1032, col: 8, offset: 41723},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1028, col: 12, offset: 41683},
														val:        "\r\n",
														ignoreCase: false,
													},
													&charClassMatcher{
														pos:        position{line: 1028, col: 21, offset: 41692},
														val:        "[\\r\\n]",
														chars:      []rune{'\r', '\n'},
														ignoreCase: false,
														inverted:   false,
													},
													&notExpr{
														pos: position{line: 1030, col: 8, offset: 41712},
														expr: &anyMatcher{
															line: 1030, col: 9, offset: 41713,
														},
													},
												},
											},
										},
									},
								},
							},
						},
						&litMatcher{
							pos:        position{line: 311, col: 24, offset: 11521},
							val:        "====",
							ignoreCase: false,
						},
						&oneOrMoreExpr{
							pos: position{line: 311, col: 31, offset: 11528},
							expr: &choiceExpr{
								pos: position{line: 1024, col: 7, offset: 41621},
								alternatives: []interface{}{
									&litMatcher{
										pos:        position{line: 1024, col: 7, offset: 41621},
										val:        " ",
										ignoreCase: false,
									},
									&actionExpr{
										pos: position{line: 1024, col: 13, offset: 41627},
										run: (*parser).callonSection3Title219,
										expr: &litMatcher{
											pos:        position{line: 1024, col: 13, offset: 41627},
											val:        "\t",
											ignoreCase: false,
										},
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 313, col: 69, offset: 11602},
							label: "content",
							expr: &ruleRefExpr{
								pos:  position{line: 313, col: 78, offset: 11611},
								name: "TitleElements",
							},
						},
						&zeroOrMoreExpr{
							pos: position{line: 313, col: 93, offset: 11626},
							expr: &choiceExpr{
								pos: position{line: 1024, col: 7, offset: 41621},
								alternatives: []interface{}{
									&litMatcher{
										pos:        position{line: 1024, col: 7, offset: 41621},
										val:        " ",
										ignoreCase: false,
									},
									&actionExpr{
										pos: position{line: 1024, col: 13, offset: 41627},
										run: (*parser).callonSection3Title226,
										expr: &litMatcher{
											pos:        position{line: 1024, col: 13, offset: 41627},
											val:        "\t",
											ignoreCase: false,
										},
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 313, col: 97, offset: 11630},
							label: "id",
							expr: &zeroOrOneExpr{
								pos: position{line: 313, col: 100, offset: 11633},
								expr: &actionExpr{
									pos: position{line: 151, col: 20, offset: 5775},
									run: (*parser).callonSection3Title230,
									expr: &seqExpr{
										pos: position{line: 151, col: 20, offset: 5775},
										exprs: []interface{}{
											&litMatcher{
												pos:        position{line: 151, col: 20, offset: 5775},
												val:        "[[",
												ignoreCase: false,
											},
											&labeledExpr{
												pos:   position{line: 151, col: 25, offset: 5780},
												label: "id",
												expr: &actionExpr{
													pos: position{line: 1010, col: 7, offset: 41339},
													run: (*parser).callonSection3Title234,
													expr: &oneOrMoreExpr{
														pos: position{line: 1010, col: 7, offset: 41339},
														expr: &seqExpr{
															pos: position{line: 1010, col: 8, offset: 41340},
															exprs: []interface{}{
																&notExpr{
																	pos: position{line: 1010, col: 8, offset: 41340},
																	expr: &choiceExpr{
																		pos: position{line: 1028, col: 12, offset: 41683},
																		alternatives: []interface{}{
																			&litMatcher{
																				pos:        position{line: 1028, col: 12, offset: 41683},
																				val:        "\r\n",
																				ignoreCase: false,
																			},
																			&charClassMatcher{
																				pos:        position{line: 1028, col: 21, offset: 41692},
																				val:        "[\\r\\n]",
																				chars:      []rune{'\r', '\n'},
																				ignoreCase: false,
																				inverted:   false,
																			},
																		},
																	},
																},
																&notExpr{
																	pos: position{line: 1010, col: 17, offset: 41349},
																	expr: &choiceExpr{
																		pos: position{line: 1024, col: 7, offset: 41621},
																		alternatives: []interface{}{
																			&litMatcher{
																				pos:        position{line: 1024, col: 7, offset: 41621},
																				val:        " ",
																				ignoreCase: false,
																			},
																			&actionExpr{
																				pos: position{line: 1024, col: 13, offset: 41627},
																				run: (*parser).callonSection3Title244,
																				expr: &litMatcher{
																					pos:        position{line: 1024, col: 13, offset: 41627},
																					val:        "\t",
																					ignoreCase: false,
																				},
																			},
																		},
																	},
																},
																&notExpr{
																	pos: position{line: 1010, col: 21, offset: 41353},
																	expr: &litMatcher{
																		pos:        position{line: 1010, col: 22, offset: 41354},
																		val:        "[",
																		ignoreCase: false,
																	},
																},
																&notExpr{
																	pos: position{line: 1010, col: 26, offset: 41358},
																	expr: &litMatcher{
																		pos:        position{line: 1010, col: 27, offset: 41359},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
																&notExpr{
																	pos: position{line: 1010, col: 31, offset: 41363},
																	expr: &litMatcher{
																		pos:        position{line: 1010, col: 32, offset: 41364},
																		val:        "<<",
																		ignoreCase: false,
																	},
																},
																&notExpr{
																	pos: position{line: 1010, col: 37, offset: 41369},
																	expr: &litMatcher{
																		pos:        position{line: 1010, col: 38, offset: 41370},
																		val:        ">>",
																		ignoreCase: false,
																	},
																},
																&notExpr{
																	pos: position{line: 1010, col: 43, offset: 41375},
																	expr: &litMatcher{
																		pos:        position{line: 1010, col: 44, offset: 41376},
																		val:        ",",
																		ignoreCase: false,
																	},
																},
																&anyMatcher{
																	line: 1010, col: 48, offset: 41380,
																},
															},
														},
													},
												},
											},
											&litMatcher{
												pos:        position{line: 151, col: 33, offset: 5788},
												val:        "]]",
												ignoreCase: false,
											},
										},
									},
								},
							},
						},
						&choiceExpr{
							pos: position{line: 1032, col: 8, offset: 41723},
							alternatives: []interface{}{
								&litMatcher{
									pos:        position{line: 1028, col: 12, offset: 41683},
									val:        "\r\n",
									ignoreCase: false,
								},
								&charClassMatcher{
									pos:        position{line: 1028, col: 21, offset: 41692},
									val:        "[\\r\\n]",
									chars:      []rune{'\r', '\n'},
									ignoreCase: false,
									inverted:   false,
								},
								&notExpr{
									pos: position{line: 1030, col: 8, offset: 41712},
									expr: &anyMatcher{
										line: 1030, col: 9, offset: 41713,
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "Section3Block",
			pos:  position{line: 317, col: 1, offset: 11766},
			expr: &actionExpr{
				pos: position{line: 317, col: 18, offset: 11783},
				run: (*parser).callonSection3Block1,
				expr: &seqExpr{
					pos: position{line: 317, col: 18, offset: 11783},
					exprs: []interface{}{
						&notExpr{
							pos: position{line: 317, col: 18, offset: 11783},
							expr: &ruleRefExpr{
								pos:  position{line: 317, col: 19, offset: 11784},
								name: "Section1Title",
							},
						},
						&notExpr{
							pos: position{line: 317, col: 33, offset: 11798},
							expr: &ruleRefExpr{
								pos:  position{line: 317, col: 34, offset: 11799},
								name: "Section2Title",
							},
						},
						&notExpr{
							pos: position{line: 317, col: 48, offset: 11813},
							expr: &ruleRefExpr{
								pos:  position{line: 317, col: 49, offset: 11814},
								name: "Section3Title",
							},
						},
						&labeledExpr{
							pos:   position{line: 317, col: 64, offset: 11829},
							label: "content",
							expr: &zeroOrMoreExpr{
								pos: position{line: 317, col: 72, offset: 11837},
								expr: &choiceExpr{
									pos: position{line: 317, col: 73, offset: 11838},
									alternatives: []interface{}{
										&ruleRefExpr{
											pos:  position{line: 317, col: 73, offset: 11838},
											name: "Section4",
										},
										&ruleRefExpr{
											pos:  position{line: 317, col: 84, offset: 11849},
											name: "Section5",
										},
										&ruleRefExpr{
											pos:  position{line: 317, col: 95, offset: 11860},
											name: "DocumentBlock",
										},
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "Section4",
			pos:  position{line: 321, col: 1, offset: 11905},
			expr: &actionExpr{
				pos: position{line: 321, col: 13, offset: 11917},
				run: (*parser).callonSection41,
				expr: &seqExpr{
					pos: position{line: 321, col: 13, offset: 11917},
					exprs: []interface{}{
						&notExpr{
							pos: position{line: 321, col: 13, offset: 11917},
							expr: &notExpr{
								pos: position{line: 1030, col: 8, offset: 41712},
								expr: &anyMatcher{
									line: 1030, col: 9, offset: 41713,
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 322, col: 5, offset: 11988},
							label: "section",
							expr: &actionExpr{
								pos: position{line: 322, col: 14, offset: 11997},
								run: (*parser).callonSection47,
								expr: &seqExpr{
									pos: position{line: 322, col: 14, offset: 11997},
									exprs: []interface{}{
										&labeledExpr{
											pos:   position{line: 322, col: 14, offset: 11997},
											label: "header",
											expr: &ruleRefExpr{
												pos:  position{line: 322, col: 22, offset: 12005},
												name: "Section4Title",
											},
										},
										&labeledExpr{
											pos:   position{line: 322, col: 37, offset: 12020},
											label: "elements",
											expr: &zeroOrOneExpr{
												pos: position{line: 322, col: 47, offset: 12030},
												expr: &ruleRefExpr{
													pos:  position{line: 322, col: 47, offset: 12030},
													name: "Section4Block",
												},
											},
										},
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "Section4Title",
			pos:  position{line: 330, col: 1, offset: 12219},
			expr: &actionExpr{
				pos: position{line: 330, col: 18, offset: 12236},
				run: (*parser).callonSection4Title1,
				expr: &seqExpr{
					pos: position{line: 330, col: 18, offset: 12236},
					exprs: []interface{}{
						&labeledExpr{
							pos:   position{line: 330, col: 18, offset: 12236},
							label: "attributes",
							expr: &zeroOrMoreExpr{
								pos: position{line: 330, col: 29, offset: 12247},
								expr: &actionExpr{
									pos: position{line: 136, col: 21, offset: 5188},
									run: (*parser).callonSection4Title5,
									expr: &seqExpr{
										pos: position{line: 136, col: 21, offset: 5188},
										exprs: []interface{}{
											&labeledExpr{
												pos:   position{line: 136, col: 21, offset: 5188},
												label: "attr",
												expr: &choiceExpr{
													pos: position{line: 136, col: 27, offset: 5194},
													alternatives: []interface{}{
														&actionExpr{
															pos: position{line: 145, col: 14, offset: 5645},
															run: (*parser).callonSection4Title9,
															expr: &labeledExpr{
																pos:   position{line: 145, col: 14, offset: 5645},
																label: "id",
																expr: &actionExpr{
																	pos: position{line: 151, col: 20, offset: 5775},
																	run: (*parser).callonSection4Title11,
																	expr: &seqExpr{
																		pos: position{line: 151, col: 20, offset: 5775},
																		exprs: []interface{}{
																			&litMatcher{
																				pos:        position{line: 151, col: 20, offset: 5775},
																				val:        "[[",
																				ignoreCase: false,
																			},
																			&labeledExpr{
																				pos:   position{line: 151, col: 25, offset: 5780},
																				label: "id",
																				expr: &actionExpr{
																					pos: position{line: 1010, col: 7, offset: 41339},
																					run: (*parser).callonSection4Title15,
																					expr: &oneOrMoreExpr{
																						pos: position{line: 1010, col: 7, offset: 41339},
																						expr: &seqExpr{
																							pos: position{line: 1010, col: 8, offset: 41340},
																							exprs: []interface{}{
																								&notExpr{
																									pos: position{line: 1010, col: 8, offset: 41340},
																									expr: &choiceExpr{
																										pos: position{line: 1028, col: 12, offset: 41683},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1028, col: 12, offset: 41683},
																												val:        "\r\n",
																												ignoreCase: false,
																											},
																											&charClassMatcher{
																												pos:        position{line: 1028, col: 21, offset: 41692},
																												val:        "[\\r\\n]",
																												chars:      []rune{'\r', '\n'},
																												ignoreCase: false,
																												inverted:   false,
																											},
																										},
																									},
																								},
																								&notExpr{
																									pos: position{line: 1010, col: 17, offset: 41349},
																									expr: &choiceExpr{
																										pos: position{line: 1024, col: 7, offset: 41621},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1024, col: 7, offset: 41621},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 1024, col: 13, offset: 41627},
																												run: (*parser).callonSection4Title25,
																												expr: &litMatcher{
																													pos:        position{line: 1024, col: 13, offset: 41627},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																								&notExpr{
																									pos: position{line: 1010, col: 21, offset: 41353},
																									expr: &litMatcher{
																										pos:        position{line: 1010, col: 22, offset: 41354},
																										val:        "[",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 1010, col: 26, offset: 41358},
																									expr: &litMatcher{
																										pos:        position{line: 1010, col: 27, offset: 41359},
																										val:        "]",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 1010, col: 31, offset: 41363},
																									expr: &litMatcher{
																										pos:        position{line: 1010, col: 32, offset: 41364},
																										val:        "<<",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 1010, col: 37, offset: 41369},
																									expr: &litMatcher{
																										pos:        position{line: 1010, col: 38, offset: 41370},
																										val:        ">>",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 1010, col: 43, offset: 41375},
																									expr: &litMatcher{
																										pos:        position{line: 1010, col: 44, offset: 41376},
																										val:        ",",
																										ignoreCase: false,
																									},
																								},
																								&anyMatcher{
																									line: 1010, col: 48, offset: 41380,
																								},
																							},
																						},
																					},
																				},
																			},
																			&litMatcher{
																				pos:        position{line: 151, col: 33, offset: 5788},
																				val:        "]]",
																				ignoreCase: false,
																			},
																		},
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 147, col: 5, offset: 5691},
															run: (*parser).callonSection4Title39,
															expr: &seqExpr{
																pos: position{line: 147, col: 5, offset: 5691},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 147, col: 5, offset: 5691},
																		val:        "[#",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 147, col: 10, offset: 5696},
																		label: "id",
																		expr: &actionExpr{
																			pos: position{line: 1010, col: 7, offset: 41339},
																			run: (*parser).callonSection4Title43,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 1010, col: 7, offset: 41339},
																				expr: &seqExpr{
																					pos: position{line: 1010, col: 8, offset: 41340},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 1010, col: 8, offset: 41340},
																							expr: &choiceExpr{
																								pos: position{line: 1028, col: 12, offset: 41683},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1028, col: 12, offset: 41683},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 1028, col: 21, offset: 41692},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 1010, col: 17, offset: 41349},
																							expr: &choiceExpr{
																								pos: position{line: 1024, col: 7, offset: 41621},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1024, col: 7, offset: 41621},
																										val:        " ",
																										ignoreCase: false,
																									},
																									&actionExpr{
																										pos: position{line: 1024, col: 13, offset: 41627},
																										run: (*parser).callonSection4Title53,
																										expr: &litMatcher{
																											pos:        position{line: 1024, col: 13, offset: 41627},
																											val:        "\t",
																											ignoreCase: false,
																										},
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 1010, col: 21, offset: 41353},
																							expr: &litMatcher{
																								pos:        position{line: 1010, col: 22, offset: 41354},
																								val:        "[",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 1010, col: 26, offset: 41358},
																							expr: &litMatcher{
																								pos:        position{line: 1010, col: 27, offset: 41359},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 1010, col: 31, offset: 41363},
																							expr: &litMatcher{
																								pos:        position{line: 1010, col: 32, offset: 41364},
																								val:        "<<",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 1010, col: 37, offset: 41369},
																							expr: &litMatcher{
																								pos:        position{line: 1010, col: 38, offset: 41370},
																								val:        ">>",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 1010, col: 43, offset: 41375},
																							expr: &litMatcher{
																								pos:        position{line: 1010, col: 44, offset: 41376},
																								val:        ",",
																								ignoreCase: false,
																							},
																						},
																						&anyMatcher{
																							line: 1010, col: 48, offset: 41380,
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 147, col: 18, offset: 5704},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 157, col: 17, offset: 5997},
															run: (*parser).callonSection4Title67,
															expr: &seqExpr{
																pos: position{line: 157, col: 17, offset: 5997},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 157, col: 17, offset: 5997},
																		val:        ".",
																		ignoreCase: false,
																	},
																	&notExpr{
																		pos: position{line: 157, col: 21, offset: 6001},
																		expr: &litMatcher{
																			pos:        position{line: 157, col: 22, offset: 6002},
																			val:        ".",
																			ignoreCase: false,
																		},
																	},
																	&notExpr{
																		pos: position{line: 157, col: 26, offset: 6006},
																		expr: &choiceExpr{
																			pos: position{line: 1024, col: 7, offset: 41621},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1024, col: 7, offset: 41621},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1024, col: 13, offset: 41627},
																					run: (*parser).callonSection4Title75,
																					expr: &litMatcher{
																						pos:        position{line: 1024, col: 13, offset: 41627},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 157, col: 30, offset: 6010},
																		label: "title",
																		expr: &actionExpr{
																			pos: position{line: 161, col: 24, offset: 6115},
																			run: (*parser).callonSection4Title78,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 161, col: 24, offset: 6115},
																				expr: &seqExpr{
																					pos: position{line: 161, col: 25, offset: 6116},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 161, col: 25, offset: 6116},
																							expr: &choiceExpr{
																								pos: position{line: 1028, col: 12, offset: 41683},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1028, col: 12, offset: 41683},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 1028, col: 21, offset: 41692},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																						},
																						&anyMatcher{
																							line: 161, col: 34, offset: 6125,
																						},
																					},
																				},
																			},
																		},
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 167, col: 16, offset: 6274},
															run: (*parser).callonSection4Title86,
															expr: &seqExpr{
																pos: position{line: 167, col: 16, offset: 6274},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 167, col: 16, offset: 6274},
																		val:        "[.",
																		ignoreCase: false,
																	},
																	&notExpr{
																		pos: position{line: 167, col: 21, offset: 6279},
																		expr: &choiceExpr{
																			pos: position{line: 1024, col: 7, offset: 41621},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1024, col: 7, offset: 41621},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1024, col: 13, offset: 41627},
																					run: (*parser).callonSection4Title92,
																					expr: &litMatcher{
																						pos:        position{line: 1024, col: 13, offset: 41627},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 167, col: 25, offset: 6283},
																		label: "role",
																		expr: &actionExpr{
																			pos: position{line: 171, col: 23, offset: 6387},
																			run: (*parser).callonSection4Title95,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 171, col: 23, offset: 6387},
																				expr: &seqExpr{
																					pos: position{line: 171, col: 24, offset: 6388},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 171, col: 24, offset: 6388},
																							expr: &choiceExpr{
																								pos: position{line: 1028, col: 12, offset: 41683},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1028, col: 12, offset: 41683},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 1028, col: 21, offset: 41692},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 171, col: 33, offset: 6397},
																							expr: &litMatcher{
																								pos:        position{line: 171, col: 34, offset: 6398},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																						&anyMatcher{
																							line: 171, col: 38, offset: 6402,
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 167, col: 51, offset: 6309},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 176, col: 30, offset: 6551},
															run: (*parser).callonSection4Title106,
															expr: &seqExpr{
																pos: position{line: 176, col: 30, offset: 6551},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 176, col: 30, offset: 6551},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 176, col: 34, offset: 6555},
																		label: "k",
																		expr: &choiceExpr{
																			pos: position{line: 494, col: 19, offset: 19245},
																			alternatives: []interface{}{
																				&actionExpr{
																					pos: position{line: 494, col: 19, offset: 19245},
																					run: (*parser).callonSection4Title111,
																					expr: &litMatcher{
																						pos:        position{line: 494, col: 19, offset: 19245},
																						val:        "TIP",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 496, col: 5, offset: 19283},
																					run: (*parser).callonSection4Title113,
																					expr: &litMatcher{
																						pos:        position{line: 496, col: 5, offset: 19283},
																						val:        "NOTE",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 498, col: 5, offset: 19323},
																					run: (*parser).callonSection4Title115,
																					expr: &litMatcher{
																						pos:        position{line: 498, col: 5, offset: 19323},
																						val:        "IMPORTANT",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 500, col: 5, offset: 19373},
																					run: (*parser).callonSection4Title117,
																					expr: &litMatcher{
																						pos:        position{line: 500, col: 5, offset: 19373},
																						val:        "WARNING",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 502, col: 5, offset: 19419},
																					run: (*parser).callonSection4Title119,
																					expr: &litMatcher{
																						pos:        position{line: 502, col: 5, offset: 19419},
																						val:        "CAUTION",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 176, col: 53, offset: 6574},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 199, col: 21, offset: 7312},
															run: (*parser).callonSection4Title122,
															expr: &litMatcher{
																pos:        position{line: 199, col: 21, offset: 7312},
																val:        "[horizontal]",
																ignoreCase: false,
															},
														},
														&actionExpr{
															pos: position{line: 181, col: 19, offset: 6735},
															run: (*parser).callonSection4Title124,
															expr: &seqExpr{
																pos: position{line: 181, col: 19, offset: 6735},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 181, col: 19, offset: 6735},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&notExpr{
																		pos: position{line: 181, col: 23, offset: 6739},
																		expr: &choiceExpr{
																			pos: position{line: 1024, col: 7, offset: 41621},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1024, col: 7, offset: 41621},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1024, col: 13, offset: 41627},
																					run: (*parser).callonSection4Title130,
																					expr: &litMatcher{
																						pos:        position{line: 1024, col: 13, offset: 41627},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 181, col: 27, offset: 6743},
																		label: "attributes",
																		expr: &zeroOrMoreExpr{
																			pos: position{line: 181, col: 38, offset: 6754},
																			expr: &choiceExpr{
																				pos: position{line: 185, col: 21, offset: 6867},
																				alternatives: []interface{}{
																					&actionExpr{
																						pos: position{line: 185, col: 21, offset: 6867},
																						run: (*parser).callonSection4Title135,
																						expr: &seqExpr{
																							pos: position{line: 185, col: 21, offset: 6867},
																							exprs: []interface{}{
																								&labeledExpr{
																									pos:   position{line: 185, col: 21, offset: 6867},
																									label: "key",
																									expr: &actionExpr{
																										pos: position{line: 191, col: 17, offset: 7127},
																										run: (*parser).callonSection4Title138,
																										expr: &seqExpr{
																											pos: position{line: 191, col: 17, offset: 7127},
																											exprs: []interface{}{
																												&notExpr{
																													pos: position{line: 191, col: 17, offset: 7127},
																													expr: &actionExpr{
																														pos: position{line: 231, col: 14, offset: 8674},
																														run: (*parser).callonSection4Title141,
																														expr: &litMatcher{
																															pos:        position{line: 231, col: 14, offset: 8674},
																															val:        "verse",
																															ignoreCase: false,
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 191, col: 28, offset: 7138},
																													expr: &actionExpr{
																														pos: position{line: 975, col: 16, offset: 40537},
																														run: (*parser).callonSection4Title144,
																														expr: &litMatcher{
																															pos:        position{line: 975, col: 16, offset: 40537},
																															val:        "literal",
																															ignoreCase: false,
																														},
																													},
																												},
																												&labeledExpr{
																													pos:   position{line: 191, col: 41, offset: 7151},
																													label: "key",
																													expr: &oneOrMoreExpr{
																														pos: position{line: 191, col: 45, offset: 7155},
																														expr: &seqExpr{
																															pos: position{line: 191, col: 46, offset: 7156},
																															exprs: []interface{}{
																																&notExpr{
																																	pos: position{line: 191, col: 46, offset: 7156},
																																	expr: &litMatcher{
																																		pos:        position{line: 191, col: 47, offset: 7157},
																																		val:        "=",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 191, col: 51, offset: 7161},
																																	expr: &litMatcher{
																																		pos:        position{line: 191, col: 52, offset: 7162},
																																		val:        ",",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 191, col: 56, offset: 7166},
																																	expr: &litMatcher{
																																		pos:        position{line: 191, col: 57, offset: 7167},
																																		val:        "]",
																																		ignoreCase: false,
																																	},
																																},
																																&anyMatcher{
																																	line: 191, col: 61, offset: 7171,
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&litMatcher{
																									pos:        position{line: 185, col: 40, offset: 6886},
																									val:        "=",
																									ignoreCase: false,
																								},
																								&labeledExpr{
																									pos:   position{line: 185, col: 44, offset: 6890},
																									label: "value",
																									expr: &actionExpr{
																										pos: position{line: 195, col: 19, offset: 7230},
																										run: (*parser).callonSection4Title158,
																										expr: &labeledExpr{
																											pos:   position{line: 195, col: 19, offset: 7230},
																											label: "value",
																											expr: &zeroOrMoreExpr{
																												pos: position{line: 195, col: 25, offset: 7236},
																												expr: &seqExpr{
																													pos: position{line: 195, col: 26, offset: 7237},
																													exprs: []interface{}{
																														&notExpr{
																															pos: position{line: 195, col: 26, offset: 7237},
																															expr: &litMatcher{
																																pos:        position{line: 195, col: 27, offset: 7238},
																																val:        "=",
																																ignoreCase: false,
																															},
																														},
																														&notExpr{
																															pos: position{line: 195, col: 31, offset: 7242},
																															expr: &litMatcher{
																																pos:        position{line: 195, col: 32, offset: 7243},
																																val:        ",",
																																ignoreCase: false,
																															},
																														},
																														&notExpr{
																															pos: position{line: 195, col: 36, offset: 7247},
																															expr: &litMatcher{
																																pos:        position{line: 195, col: 37, offset: 7248},
																																val:        "]",
																																ignoreCase: false,
																															},
																														},
																														&anyMatcher{
																															line: 195, col: 41, offset: 7252,
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&zeroOrOneExpr{
																									pos: position{line: 185, col: 67, offset: 6913},
																									expr: &litMatcher{
																										pos:        position{line: 185, col: 67, offset: 6913},
																										val:        ",",
																										ignoreCase: false,
																									},
																								},
																								&zeroOrMoreExpr{
																									pos: position{line: 185, col: 72, offset: 6918},
																									expr: &choiceExpr{
																										pos: position{line: 1024, col: 7, offset: 41621},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1024, col: 7, offset: 41621},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 1024, col: 13, offset: 41627},
																												run: (*parser).callonSection4Title174,
																												expr: &litMatcher{
																													pos:        position{line: 1024, col: 13, offset: 41627},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																					&actionExpr{
																						pos: position{line: 187, col: 5, offset: 7002},
																						run: (*parser).callonSection4Title176,
																						expr: &seqExpr{
																							pos: position{line: 187, col: 5, offset: 7002},
																							exprs: []interface{}{
																								&labeledExpr{
																									pos:   position{line: 187, col: 5, offset: 7002},
																									label: "key",
																									expr: &actionExpr{
																										pos: position{line: 191, col: 17, offset: 7127},
																										run: (*parser).callonSection4Title179,
																										expr: &seqExpr{
																											pos: position{line: 191, col: 17, offset: 7127},
																											exprs: []interface{}{
																												&notExpr{
																													pos: position{line: 191, col: 17, offset: 7127},
																													expr: &actionExpr{
																														pos: position{line: 231, col: 14, offset: 8674},
																														run: (*parser).callonSection4Title182,
																														expr: &litMatcher{
																															pos:        position{line: 231, col: 14, offset: 8674},
																															val:        "verse",
																															ignoreCase: false,
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 191, col: 28, offset: 7138},
																													expr: &actionExpr{
																														pos: position{line: 975, col: 16, offset: 40537},
																														run: (*parser).callonSection4Title185,
																														expr: &litMatcher{
																															pos:        position{line: 975, col: 16, offset: 40537},
																															val:        "literal",
																															ignoreCase: false,
																														},
																													},
																												},
																												&labeledExpr{
																													pos:   position{line: 191, col: 41, offset: 7151},
																													label: "key",
																													expr: &oneOrMoreExpr{
																														pos: position{line: 191, col: 45, offset: 7155},
																														expr: &seqExpr{
																															pos: position{line: 191, col: 46, offset: 7156},
																															exprs: []interface{}{
																																&notExpr{
																																	pos: position{line: 191, col: 46, offset: 7156},
																																	expr: &litMatcher{
																																		pos:        position{line: 191, col: 47, offset: 7157},
																																		val:        "=",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 191, col: 51, offset: 7161},
																																	expr: &litMatcher{
																																		pos:        position{line: 191, col: 52, offset: 7162},
																																		val:        ",",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 191, col: 56, offset: 7166},
																																	expr: &litMatcher{
																																		pos:        position{line: 191, col: 57, offset: 7167},
																																		val:        "]",
																																		ignoreCase: false,
																																	},
																																},
																																&anyMatcher{
																																	line: 191, col: 61, offset: 7171,
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&zeroOrOneExpr{
																									pos: position{line: 187, col: 24, offset: 7021},
																									expr: &litMatcher{
																										pos:        position{line: 187, col: 24, offset: 7021},
																										val:        ",",
																										ignoreCase: false,
																									},
																								},
																								&zeroOrMoreExpr{
																									pos: position{line: 187, col: 29, offset: 7026},
																									expr: &choiceExpr{
																										pos: position{line: 1024, col: 7, offset: 41621},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1024, col: 7, offset: 41621},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 1024, col: 13, offset: 41627},
																												run: (*parser).callonSection4Title202,
																												expr: &litMatcher{
																													pos:        position{line: 1024, col: 13, offset: 41627},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 181, col: 59, offset: 6775},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
													},
												},
											},
											&zeroOrMoreExpr{
												pos: position{line: 136, col: 131, offset: 5298},
												expr: &choiceExpr{
													pos: position{line: 1024, col: 7, offset: 41621},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1024, col: 7, offset: 41621},
															val:        " ",
															ignoreCase: false,
														},
														&actionExpr{
															pos: position{line: 1024, col: 13, offset: 41627},
															run: (*parser).callonSection4Title208,
															expr: &litMatcher{
																pos:        position{line: 1024, col: 13, offset: 41627},
																val:        "\t",
																ignoreCase: false,
															},
														},
													},
												},
											},
											&choiceExpr{
												pos: position{line: 1032, col: 8, offset: 41723},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1028, col: 12, offset: 41683},
														val:        "\r\n",
														ignoreCase: false,
													},
													&charClassMatcher{
														pos:        position{line: 1028, col: 21, offset: 41692},
														val:        "[\\r\\n]",
														chars:      []rune{'\r', '\n'},
														ignoreCase: false,
														inverted:   false,
													},
													&notExpr{
														pos: position{line: 1030, col: 8, offset: 41712},
														expr: &anyMatcher{
															line: 1030, col: 9, offset: 41713,
														},
													},
												},
											},
										},
									},
								},
							},
						},
						&litMatcher{
							pos:        position{line: 328, col: 24, offset: 12205},
							val:        "=====",
							ignoreCase: false,
						},
						&oneOrMoreExpr{
							pos: position{line: 328, col: 32, offset: 12213},
							expr: &choiceExpr{
								pos: position{line: 1024, col: 7, offset: 41621},
								alternatives: []interface{}{
									&litMatcher{
										pos:        position{line: 1024, col: 7, offset: 41621},
										val:        " ",
										ignoreCase: false,
									},
									&actionExpr{
										pos: position{line: 1024, col: 13, offset: 41627},
										run: (*parser).callonSection4Title219,
										expr: &litMatcher{
											pos:        position{line: 1024, col: 13, offset: 41627},
											val:        "\t",
											ignoreCase: false,
										},
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 330, col: 69, offset: 12287},
							label: "content",
							expr: &ruleRefExpr{
								pos:  position{line: 330, col: 78, offset: 12296},
								name: "TitleElements",
							},
						},
						&zeroOrMoreExpr{
							pos: position{line: 330, col: 93, offset: 12311},
							expr: &choiceExpr{
								pos: position{line: 1024, col: 7, offset: 41621},
								alternatives: []interface{}{
									&litMatcher{
										pos:        position{line: 1024, col: 7, offset: 41621},
										val:        " ",
										ignoreCase: false,
									},
									&actionExpr{
										pos: position{line: 1024, col: 13, offset: 41627},
										run: (*parser).callonSection4Title226,
										expr: &litMatcher{
											pos:        position{line: 1024, col: 13, offset: 41627},
											val:        "\t",
											ignoreCase: false,
										},
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 330, col: 97, offset: 12315},
							label: "id",
							expr: &zeroOrOneExpr{
								pos: position{line: 330, col: 100, offset: 12318},
								expr: &actionExpr{
									pos: position{line: 151, col: 20, offset: 5775},
									run: (*parser).callonSection4Title230,
									expr: &seqExpr{
										pos: position{line: 151, col: 20, offset: 5775},
										exprs: []interface{}{
											&litMatcher{
												pos:        position{line: 151, col: 20, offset: 5775},
												val:        "[[",
												ignoreCase: false,
											},
											&labeledExpr{
												pos:   position{line: 151, col: 25, offset: 5780},
												label: "id",
												expr: &actionExpr{
													pos: position{line: 1010, col: 7, offset: 41339},
													run: (*parser).callonSection4Title234,
													expr: &oneOrMoreExpr{
														pos: position{line: 1010, col: 7, offset: 41339},
														expr: &seqExpr{
															pos: position{line: 1010, col: 8, offset: 41340},
															exprs: []interface{}{
																&notExpr{
																	pos: position{line: 1010, col: 8, offset: 41340},
																	expr: &choiceExpr{
																		pos: position{line: 1028, col: 12, offset: 41683},
																		alternatives: []interface{}{
																			&litMatcher{
																				pos:        position{line: 1028, col: 12, offset: 41683},
																				val:        "\r\n",
																				ignoreCase: false,
																			},
																			&charClassMatcher{
																				pos:        position{line: 1028, col: 21, offset: 41692},
																				val:        "[\\r\\n]",
																				chars:      []rune{'\r', '\n'},
																				ignoreCase: false,
																				inverted:   false,
																			},
																		},
																	},
																},
																&notExpr{
																	pos: position{line: 1010, col: 17, offset: 41349},
																	expr: &choiceExpr{
																		pos: position{line: 1024, col: 7, offset: 41621},
																		alternatives: []interface{}{
																			&litMatcher{
																				pos:        position{line: 1024, col: 7, offset: 41621},
																				val:        " ",
																				ignoreCase: false,
																			},
																			&actionExpr{
																				pos: position{line: 1024, col: 13, offset: 41627},
																				run: (*parser).callonSection4Title244,
																				expr: &litMatcher{
																					pos:        position{line: 1024, col: 13, offset: 41627},
																					val:        "\t",
																					ignoreCase: false,
																				},
																			},
																		},
																	},
																},
																&notExpr{
																	pos: position{line: 1010, col: 21, offset: 41353},
																	expr: &litMatcher{
																		pos:        position{line: 1010, col: 22, offset: 41354},
																		val:        "[",
																		ignoreCase: false,
																	},
																},
																&notExpr{
																	pos: position{line: 1010, col: 26, offset: 41358},
																	expr: &litMatcher{
																		pos:        position{line: 1010, col: 27, offset: 41359},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
																&notExpr{
																	pos: position{line: 1010, col: 31, offset: 41363},
																	expr: &litMatcher{
																		pos:        position{line: 1010, col: 32, offset: 41364},
																		val:        "<<",
																		ignoreCase: false,
																	},
																},
																&notExpr{
																	pos: position{line: 1010, col: 37, offset: 41369},
																	expr: &litMatcher{
																		pos:        position{line: 1010, col: 38, offset: 41370},
																		val:        ">>",
																		ignoreCase: false,
																	},
																},
																&notExpr{
																	pos: position{line: 1010, col: 43, offset: 41375},
																	expr: &litMatcher{
																		pos:        position{line: 1010, col: 44, offset: 41376},
																		val:        ",",
																		ignoreCase: false,
																	},
																},
																&anyMatcher{
																	line: 1010, col: 48, offset: 41380,
																},
															},
														},
													},
												},
											},
											&litMatcher{
												pos:        position{line: 151, col: 33, offset: 5788},
												val:        "]]",
												ignoreCase: false,
											},
										},
									},
								},
							},
						},
						&choiceExpr{
							pos: position{line: 1032, col: 8, offset: 41723},
							alternatives: []interface{}{
								&litMatcher{
									pos:        position{line: 1028, col: 12, offset: 41683},
									val:        "\r\n",
									ignoreCase: false,
								},
								&charClassMatcher{
									pos:        position{line: 1028, col: 21, offset: 41692},
									val:        "[\\r\\n]",
									chars:      []rune{'\r', '\n'},
									ignoreCase: false,
									inverted:   false,
								},
								&notExpr{
									pos: position{line: 1030, col: 8, offset: 41712},
									expr: &anyMatcher{
										line: 1030, col: 9, offset: 41713,
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "Section4Block",
			pos:  position{line: 334, col: 1, offset: 12451},
			expr: &actionExpr{
				pos: position{line: 334, col: 18, offset: 12468},
				run: (*parser).callonSection4Block1,
				expr: &seqExpr{
					pos: position{line: 334, col: 18, offset: 12468},
					exprs: []interface{}{
						&notExpr{
							pos: position{line: 334, col: 18, offset: 12468},
							expr: &ruleRefExpr{
								pos:  position{line: 334, col: 19, offset: 12469},
								name: "Section1Title",
							},
						},
						&notExpr{
							pos: position{line: 334, col: 33, offset: 12483},
							expr: &ruleRefExpr{
								pos:  position{line: 334, col: 34, offset: 12484},
								name: "Section2Title",
							},
						},
						&notExpr{
							pos: position{line: 334, col: 48, offset: 12498},
							expr: &ruleRefExpr{
								pos:  position{line: 334, col: 49, offset: 12499},
								name: "Section3Title",
							},
						},
						&notExpr{
							pos: position{line: 334, col: 63, offset: 12513},
							expr: &ruleRefExpr{
								pos:  position{line: 334, col: 64, offset: 12514},
								name: "Section4Title",
							},
						},
						&labeledExpr{
							pos:   position{line: 334, col: 79, offset: 12529},
							label: "content",
							expr: &zeroOrMoreExpr{
								pos: position{line: 334, col: 87, offset: 12537},
								expr: &choiceExpr{
									pos: position{line: 334, col: 88, offset: 12538},
									alternatives: []interface{}{
										&ruleRefExpr{
											pos:  position{line: 334, col: 88, offset: 12538},
											name: "Section5",
										},
										&ruleRefExpr{
											pos:  position{line: 334, col: 99, offset: 12549},
											name: "DocumentBlock",
										},
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "Section5",
			pos:  position{line: 338, col: 1, offset: 12594},
			expr: &actionExpr{
				pos: position{line: 338, col: 13, offset: 12606},
				run: (*parser).callonSection51,
				expr: &seqExpr{
					pos: position{line: 338, col: 13, offset: 12606},
					exprs: []interface{}{
						&notExpr{
							pos: position{line: 338, col: 13, offset: 12606},
							expr: &notExpr{
								pos: position{line: 1030, col: 8, offset: 41712},
								expr: &anyMatcher{
									line: 1030, col: 9, offset: 41713,
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 339, col: 5, offset: 12677},
							label: "section",
							expr: &actionExpr{
								pos: position{line: 339, col: 14, offset: 12686},
								run: (*parser).callonSection57,
								expr: &seqExpr{
									pos: position{line: 339, col: 14, offset: 12686},
									exprs: []interface{}{
										&labeledExpr{
											pos:   position{line: 339, col: 14, offset: 12686},
											label: "header",
											expr: &ruleRefExpr{
												pos:  position{line: 339, col: 22, offset: 12694},
												name: "Section5Title",
											},
										},
										&labeledExpr{
											pos:   position{line: 339, col: 37, offset: 12709},
											label: "elements",
											expr: &zeroOrOneExpr{
												pos: position{line: 339, col: 47, offset: 12719},
												expr: &ruleRefExpr{
													pos:  position{line: 339, col: 47, offset: 12719},
													name: "Section5Block",
												},
											},
										},
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "Section5Title",
			pos:  position{line: 347, col: 1, offset: 12909},
			expr: &actionExpr{
				pos: position{line: 347, col: 18, offset: 12926},
				run: (*parser).callonSection5Title1,
				expr: &seqExpr{
					pos: position{line: 347, col: 18, offset: 12926},
					exprs: []interface{}{
						&labeledExpr{
							pos:   position{line: 347, col: 18, offset: 12926},
							label: "attributes",
							expr: &zeroOrMoreExpr{
								pos: position{line: 347, col: 29, offset: 12937},
								expr: &actionExpr{
									pos: position{line: 136, col: 21, offset: 5188},
									run: (*parser).callonSection5Title5,
									expr: &seqExpr{
										pos: position{line: 136, col: 21, offset: 5188},
										exprs: []interface{}{
											&labeledExpr{
												pos:   position{line: 136, col: 21, offset: 5188},
												label: "attr",
												expr: &choiceExpr{
													pos: position{line: 136, col: 27, offset: 5194},
													alternatives: []interface{}{
														&actionExpr{
															pos: position{line: 145, col: 14, offset: 5645},
															run: (*parser).callonSection5Title9,
															expr: &labeledExpr{
																pos:   position{line: 145, col: 14, offset: 5645},
																label: "id",
																expr: &actionExpr{
																	pos: position{line: 151, col: 20, offset: 5775},
																	run: (*parser).callonSection5Title11,
																	expr: &seqExpr{
																		pos: position{line: 151, col: 20, offset: 5775},
																		exprs: []interface{}{
																			&litMatcher{
																				pos:        position{line: 151, col: 20, offset: 5775},
																				val:        "[[",
																				ignoreCase: false,
																			},
																			&labeledExpr{
																				pos:   position{line: 151, col: 25, offset: 5780},
																				label: "id",
																				expr: &actionExpr{
																					pos: position{line: 1010, col: 7, offset: 41339},
																					run: (*parser).callonSection5Title15,
																					expr: &oneOrMoreExpr{
																						pos: position{line: 1010, col: 7, offset: 41339},
																						expr: &seqExpr{
																							pos: position{line: 1010, col: 8, offset: 41340},
																							exprs: []interface{}{
																								&notExpr{
																									pos: position{line: 1010, col: 8, offset: 41340},
																									expr: &choiceExpr{
																										pos: position{line: 1028, col: 12, offset: 41683},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1028, col: 12, offset: 41683},
																												val:        "\r\n",
																												ignoreCase: false,
																											},
																											&charClassMatcher{
																												pos:        position{line: 1028, col: 21, offset: 41692},
																												val:        "[\\r\\n]",
																												chars:      []rune{'\r', '\n'},
																												ignoreCase: false,
																												inverted:   false,
																											},
																										},
																									},
																								},
																								&notExpr{
																									pos: position{line: 1010, col: 17, offset: 41349},
																									expr: &choiceExpr{
																										pos: position{line: 1024, col: 7, offset: 41621},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1024, col: 7, offset: 41621},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 1024, col: 13, offset: 41627},
																												run: (*parser).callonSection5Title25,
																												expr: &litMatcher{
																													pos:        position{line: 1024, col: 13, offset: 41627},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																								&notExpr{
																									pos: position{line: 1010, col: 21, offset: 41353},
																									expr: &litMatcher{
																										pos:        position{line: 1010, col: 22, offset: 41354},
																										val:        "[",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 1010, col: 26, offset: 41358},
																									expr: &litMatcher{
																										pos:        position{line: 1010, col: 27, offset: 41359},
																										val:        "]",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 1010, col: 31, offset: 41363},
																									expr: &litMatcher{
																										pos:        position{line: 1010, col: 32, offset: 41364},
																										val:        "<<",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 1010, col: 37, offset: 41369},
																									expr: &litMatcher{
																										pos:        position{line: 1010, col: 38, offset: 41370},
																										val:        ">>",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 1010, col: 43, offset: 41375},
																									expr: &litMatcher{
																										pos:        position{line: 1010, col: 44, offset: 41376},
																										val:        ",",
																										ignoreCase: false,
																									},
																								},
																								&anyMatcher{
																									line: 1010, col: 48, offset: 41380,
																								},
																							},
																						},
																					},
																				},
																			},
																			&litMatcher{
																				pos:        position{line: 151, col: 33, offset: 5788},
																				val:        "]]",
																				ignoreCase: false,
																			},
																		},
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 147, col: 5, offset: 5691},
															run: (*parser).callonSection5Title39,
															expr: &seqExpr{
																pos: position{line: 147, col: 5, offset: 5691},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 147, col: 5, offset: 5691},
																		val:        "[#",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 147, col: 10, offset: 5696},
																		label: "id",
																		expr: &actionExpr{
																			pos: position{line: 1010, col: 7, offset: 41339},
																			run: (*parser).callonSection5Title43,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 1010, col: 7, offset: 41339},
																				expr: &seqExpr{
																					pos: position{line: 1010, col: 8, offset: 41340},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 1010, col: 8, offset: 41340},
																							expr: &choiceExpr{
																								pos: position{line: 1028, col: 12, offset: 41683},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1028, col: 12, offset: 41683},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 1028, col: 21, offset: 41692},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 1010, col: 17, offset: 41349},
																							expr: &choiceExpr{
																								pos: position{line: 1024, col: 7, offset: 41621},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1024, col: 7, offset: 41621},
																										val:        " ",
																										ignoreCase: false,
																									},
																									&actionExpr{
																										pos: position{line: 1024, col: 13, offset: 41627},
																										run: (*parser).callonSection5Title53,
																										expr: &litMatcher{
																											pos:        position{line: 1024, col: 13, offset: 41627},
																											val:        "\t",
																											ignoreCase: false,
																										},
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 1010, col: 21, offset: 41353},
																							expr: &litMatcher{
																								pos:        position{line: 1010, col: 22, offset: 41354},
																								val:        "[",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 1010, col: 26, offset: 41358},
																							expr: &litMatcher{
																								pos:        position{line: 1010, col: 27, offset: 41359},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 1010, col: 31, offset: 41363},
																							expr: &litMatcher{
																								pos:        position{line: 1010, col: 32, offset: 41364},
																								val:        "<<",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 1010, col: 37, offset: 41369},
																							expr: &litMatcher{
																								pos:        position{line: 1010, col: 38, offset: 41370},
																								val:        ">>",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 1010, col: 43, offset: 41375},
																							expr: &litMatcher{
																								pos:        position{line: 1010, col: 44, offset: 41376},
																								val:        ",",
																								ignoreCase: false,
																							},
																						},
																						&anyMatcher{
																							line: 1010, col: 48, offset: 41380,
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 147, col: 18, offset: 5704},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 157, col: 17, offset: 5997},
															run: (*parser).callonSection5Title67,
															expr: &seqExpr{
																pos: position{line: 157, col: 17, offset: 5997},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 157, col: 17, offset: 5997},
																		val:        ".",
																		ignoreCase: false,
																	},
																	&notExpr{
																		pos: position{line: 157, col: 21, offset: 6001},
																		expr: &litMatcher{
																			pos:        position{line: 157, col: 22, offset: 6002},
																			val:        ".",
																			ignoreCase: false,
																		},
																	},
																	&notExpr{
																		pos: position{line: 157, col: 26, offset: 6006},
																		expr: &choiceExpr{
																			pos: position{line: 1024, col: 7, offset: 41621},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1024, col: 7, offset: 41621},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1024, col: 13, offset: 41627},
																					run: (*parser).callonSection5Title75,
																					expr: &litMatcher{
																						pos:        position{line: 1024, col: 13, offset: 41627},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 157, col: 30, offset: 6010},
																		label: "title",
																		expr: &actionExpr{
																			pos: position{line: 161, col: 24, offset: 6115},
																			run: (*parser).callonSection5Title78,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 161, col: 24, offset: 6115},
																				expr: &seqExpr{
																					pos: position{line: 161, col: 25, offset: 6116},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 161, col: 25, offset: 6116},
																							expr: &choiceExpr{
																								pos: position{line: 1028, col: 12, offset: 41683},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1028, col: 12, offset: 41683},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 1028, col: 21, offset: 41692},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																						},
																						&anyMatcher{
																							line: 161, col: 34, offset: 6125,
																						},
																					},
																				},
																			},
																		},
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 167, col: 16, offset: 6274},
															run: (*parser).callonSection5Title86,
															expr: &seqExpr{
																pos: position{line: 167, col: 16, offset: 6274},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 167, col: 16, offset: 6274},
																		val:        "[.",
																		ignoreCase: false,
																	},
																	&notExpr{
																		pos: position{line: 167, col: 21, offset: 6279},
																		expr: &choiceExpr{
																			pos: position{line: 1024, col: 7, offset: 41621},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1024, col: 7, offset: 41621},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1024, col: 13, offset: 41627},
																					run: (*parser).callonSection5Title92,
																					expr: &litMatcher{
																						pos:        position{line: 1024, col: 13, offset: 41627},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 167, col: 25, offset: 6283},
																		label: "role",
																		expr: &actionExpr{
																			pos: position{line: 171, col: 23, offset: 6387},
																			run: (*parser).callonSection5Title95,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 171, col: 23, offset: 6387},
																				expr: &seqExpr{
																					pos: position{line: 171, col: 24, offset: 6388},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 171, col: 24, offset: 6388},
																							expr: &choiceExpr{
																								pos: position{line: 1028, col: 12, offset: 41683},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1028, col: 12, offset: 41683},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 1028, col: 21, offset: 41692},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 171, col: 33, offset: 6397},
																							expr: &litMatcher{
																								pos:        position{line: 171, col: 34, offset: 6398},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																						&anyMatcher{
																							line: 171, col: 38, offset: 6402,
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 167, col: 51, offset: 6309},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 176, col: 30, offset: 6551},
															run: (*parser).callonSection5Title106,
															expr: &seqExpr{
																pos: position{line: 176, col: 30, offset: 6551},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 176, col: 30, offset: 6551},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 176, col: 34, offset: 6555},
																		label: "k",
																		expr: &choiceExpr{
																			pos: position{line: 494, col: 19, offset: 19245},
																			alternatives: []interface{}{
																				&actionExpr{
																					pos: position{line: 494, col: 19, offset: 19245},
																					run: (*parser).callonSection5Title111,
																					expr: &litMatcher{
																						pos:        position{line: 494, col: 19, offset: 19245},
																						val:        "TIP",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 496, col: 5, offset: 19283},
																					run: (*parser).callonSection5Title113,
																					expr: &litMatcher{
																						pos:        position{line: 496, col: 5, offset: 19283},
																						val:        "NOTE",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 498, col: 5, offset: 19323},
																					run: (*parser).callonSection5Title115,
																					expr: &litMatcher{
																						pos:        position{line: 498, col: 5, offset: 19323},
																						val:        "IMPORTANT",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 500, col: 5, offset: 19373},
																					run: (*parser).callonSection5Title117,
																					expr: &litMatcher{
																						pos:        position{line: 500, col: 5, offset: 19373},
																						val:        "WARNING",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 502, col: 5, offset: 19419},
																					run: (*parser).callonSection5Title119,
																					expr: &litMatcher{
																						pos:        position{line: 502, col: 5, offset: 19419},
																						val:        "CAUTION",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 176, col: 53, offset: 6574},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 199, col: 21, offset: 7312},
															run: (*parser).callonSection5Title122,
															expr: &litMatcher{
																pos:        position{line: 199, col: 21, offset: 7312},
																val:        "[horizontal]",
																ignoreCase: false,
															},
														},
														&actionExpr{
															pos: position{line: 181, col: 19, offset: 6735},
															run: (*parser).callonSection5Title124,
															expr: &seqExpr{
																pos: position{line: 181, col: 19, offset: 6735},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 181, col: 19, offset: 6735},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&notExpr{
																		pos: position{line: 181, col: 23, offset: 6739},
																		expr: &choiceExpr{
																			pos: position{line: 1024, col: 7, offset: 41621},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1024, col: 7, offset: 41621},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1024, col: 13, offset: 41627},
																					run: (*parser).callonSection5Title130,
																					expr: &litMatcher{
																						pos:        position{line: 1024, col: 13, offset: 41627},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 181, col: 27, offset: 6743},
																		label: "attributes",
																		expr: &zeroOrMoreExpr{
																			pos: position{line: 181, col: 38, offset: 6754},
																			expr: &choiceExpr{
																				pos: position{line: 185, col: 21, offset: 6867},
																				alternatives: []interface{}{
																					&actionExpr{
																						pos: position{line: 185, col: 21, offset: 6867},
																						run: (*parser).callonSection5Title135,
																						expr: &seqExpr{
																							pos: position{line: 185, col: 21, offset: 6867},
																							exprs: []interface{}{
																								&labeledExpr{
																									pos:   position{line: 185, col: 21, offset: 6867},
																									label: "key",
																									expr: &actionExpr{
																										pos: position{line: 191, col: 17, offset: 7127},
																										run: (*parser).callonSection5Title138,
																										expr: &seqExpr{
																											pos: position{line: 191, col: 17, offset: 7127},
																											exprs: []interface{}{
																												&notExpr{
																													pos: position{line: 191, col: 17, offset: 7127},
																													expr: &actionExpr{
																														pos: position{line: 231, col: 14, offset: 8674},
																														run: (*parser).callonSection5Title141,
																														expr: &litMatcher{
																															pos:        position{line: 231, col: 14, offset: 8674},
																															val:        "verse",
																															ignoreCase: false,
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 191, col: 28, offset: 7138},
																													expr: &actionExpr{
																														pos: position{line: 975, col: 16, offset: 40537},
																														run: (*parser).callonSection5Title144,
																														expr: &litMatcher{
																															pos:        position{line: 975, col: 16, offset: 40537},
																															val:        "literal",
																															ignoreCase: false,
																														},
																													},
																												},
																												&labeledExpr{
																													pos:   position{line: 191, col: 41, offset: 7151},
																													label: "key",
																													expr: &oneOrMoreExpr{
																														pos: position{line: 191, col: 45, offset: 7155},
																														expr: &seqExpr{
																															pos: position{line: 191, col: 46, offset: 7156},
																															exprs: []interface{}{
																																&notExpr{
																																	pos: position{line: 191, col: 46, offset: 7156},
																																	expr: &litMatcher{
																																		pos:        position{line: 191, col: 47, offset: 7157},
																																		val:        "=",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 191, col: 51, offset: 7161},
																																	expr: &litMatcher{
																																		pos:        position{line: 191, col: 52, offset: 7162},
																																		val:        ",",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 191, col: 56, offset: 7166},
																																	expr: &litMatcher{
																																		pos:        position{line: 191, col: 57, offset: 7167},
																																		val:        "]",
																																		ignoreCase: false,
																																	},
																																},
																																&anyMatcher{
																																	line: 191, col: 61, offset: 7171,
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&litMatcher{
																									pos:        position{line: 185, col: 40, offset: 6886},
																									val:        "=",
																									ignoreCase: false,
																								},
																								&labeledExpr{
																									pos:   position{line: 185, col: 44, offset: 6890},
																									label: "value",
																									expr: &actionExpr{
																										pos: position{line: 195, col: 19, offset: 7230},
																										run: (*parser).callonSection5Title158,
																										expr: &labeledExpr{
																											pos:   position{line: 195, col: 19, offset: 7230},
																											label: "value",
																											expr: &zeroOrMoreExpr{
																												pos: position{line: 195, col: 25, offset: 7236},
																												expr: &seqExpr{
																													pos: position{line: 195, col: 26, offset: 7237},
																													exprs: []interface{}{
																														&notExpr{
																															pos: position{line: 195, col: 26, offset: 7237},
																															expr: &litMatcher{
																																pos:        position{line: 195, col: 27, offset: 7238},
																																val:        "=",
																																ignoreCase: false,
																															},
																														},
																														&notExpr{
																															pos: position{line: 195, col: 31, offset: 7242},
																															expr: &litMatcher{
																																pos:        position{line: 195, col: 32, offset: 7243},
																																val:        ",",
																																ignoreCase: false,
																															},
																														},
																														&notExpr{
																															pos: position{line: 195, col: 36, offset: 7247},
																															expr: &litMatcher{
																																pos:        position{line: 195, col: 37, offset: 7248},
																																val:        "]",
																																ignoreCase: false,
																															},
																														},
																														&anyMatcher{
																															line: 195, col: 41, offset: 7252,
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&zeroOrOneExpr{
																									pos: position{line: 185, col: 67, offset: 6913},
																									expr: &litMatcher{
																										pos:        position{line: 185, col: 67, offset: 6913},
																										val:        ",",
																										ignoreCase: false,
																									},
																								},
																								&zeroOrMoreExpr{
																									pos: position{line: 185, col: 72, offset: 6918},
																									expr: &choiceExpr{
																										pos: position{line: 1024, col: 7, offset: 41621},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1024, col: 7, offset: 41621},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 1024, col: 13, offset: 41627},
																												run: (*parser).callonSection5Title174,
																												expr: &litMatcher{
																													pos:        position{line: 1024, col: 13, offset: 41627},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																					&actionExpr{
																						pos: position{line: 187, col: 5, offset: 7002},
																						run: (*parser).callonSection5Title176,
																						expr: &seqExpr{
																							pos: position{line: 187, col: 5, offset: 7002},
																							exprs: []interface{}{
																								&labeledExpr{
																									pos:   position{line: 187, col: 5, offset: 7002},
																									label: "key",
																									expr: &actionExpr{
																										pos: position{line: 191, col: 17, offset: 7127},
																										run: (*parser).callonSection5Title179,
																										expr: &seqExpr{
																											pos: position{line: 191, col: 17, offset: 7127},
																											exprs: []interface{}{
																												&notExpr{
																													pos: position{line: 191, col: 17, offset: 7127},
																													expr: &actionExpr{
																														pos: position{line: 231, col: 14, offset: 8674},
																														run: (*parser).callonSection5Title182,
																														expr: &litMatcher{
																															pos:        position{line: 231, col: 14, offset: 8674},
																															val:        "verse",
																															ignoreCase: false,
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 191, col: 28, offset: 7138},
																													expr: &actionExpr{
																														pos: position{line: 975, col: 16, offset: 40537},
																														run: (*parser).callonSection5Title185,
																														expr: &litMatcher{
																															pos:        position{line: 975, col: 16, offset: 40537},
																															val:        "literal",
																															ignoreCase: false,
																														},
																													},
																												},
																												&labeledExpr{
																													pos:   position{line: 191, col: 41, offset: 7151},
																													label: "key",
																													expr: &oneOrMoreExpr{
																														pos: position{line: 191, col: 45, offset: 7155},
																														expr: &seqExpr{
																															pos: position{line: 191, col: 46, offset: 7156},
																															exprs: []interface{}{
																																&notExpr{
																																	pos: position{line: 191, col: 46, offset: 7156},
																																	expr: &litMatcher{
																																		pos:        position{line: 191, col: 47, offset: 7157},
																																		val:        "=",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 191, col: 51, offset: 7161},
																																	expr: &litMatcher{
																																		pos:        position{line: 191, col: 52, offset: 7162},
																																		val:        ",",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 191, col: 56, offset: 7166},
																																	expr: &litMatcher{
																																		pos:        position{line: 191, col: 57, offset: 7167},
																																		val:        "]",
																																		ignoreCase: false,
																																	},
																																},
																																&anyMatcher{
																																	line: 191, col: 61, offset: 7171,
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&zeroOrOneExpr{
																									pos: position{line: 187, col: 24, offset: 7021},
																									expr: &litMatcher{
																										pos:        position{line: 187, col: 24, offset: 7021},
																										val:        ",",
																										ignoreCase: false,
																									},
																								},
																								&zeroOrMoreExpr{
																									pos: position{line: 187, col: 29, offset: 7026},
																									expr: &choiceExpr{
																										pos: position{line: 1024, col: 7, offset: 41621},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1024, col: 7, offset: 41621},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 1024, col: 13, offset: 41627},
																												run: (*parser).callonSection5Title202,
																												expr: &litMatcher{
																													pos:        position{line: 1024, col: 13, offset: 41627},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 181, col: 59, offset: 6775},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
													},
												},
											},
											&zeroOrMoreExpr{
												pos: position{line: 136, col: 131, offset: 5298},
												expr: &choiceExpr{
													pos: position{line: 1024, col: 7, offset: 41621},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1024, col: 7, offset: 41621},
															val:        " ",
															ignoreCase: false,
														},
														&actionExpr{
															pos: position{line: 1024, col: 13, offset: 41627},
															run: (*parser).callonSection5Title208,
															expr: &litMatcher{
																pos:        position{line: 1024, col: 13, offset: 41627},
																val:        "\t",
																ignoreCase: false,
															},
														},
													},
												},
											},
											&choiceExpr{
												pos: position{line: 1032, col: 8, offset: 41723},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1028, col: 12, offset: 41683},
														val:        "\r\n",
														ignoreCase: false,
													},
													&charClassMatcher{
														pos:        position{line: 1028, col: 21, offset: 41692},
														val:        "[\\r\\n]",
														chars:      []rune{'\r', '\n'},
														ignoreCase: false,
														inverted:   false,
													},
													&notExpr{
														pos: position{line: 1030, col: 8, offset: 41712},
														expr: &anyMatcher{
															line: 1030, col: 9, offset: 41713,
														},
													},
												},
											},
										},
									},
								},
							},
						},
						&litMatcher{
							pos:        position{line: 345, col: 24, offset: 12894},
							val:        "======",
							ignoreCase: false,
						},
						&oneOrMoreExpr{
							pos: position{line: 345, col: 33, offset: 12903},
							expr: &choiceExpr{
								pos: position{line: 1024, col: 7, offset: 41621},
								alternatives: []interface{}{
									&litMatcher{
										pos:        position{line: 1024, col: 7, offset: 41621},
										val:        " ",
										ignoreCase: false,
									},
									&actionExpr{
										pos: position{line: 1024, col: 13, offset: 41627},
										run: (*parser).callonSection5Title219,
										expr: &litMatcher{
											pos:        position{line: 1024, col: 13, offset: 41627},
											val:        "\t",
											ignoreCase: false,
										},
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 347, col: 69, offset: 12977},
							label: "content",
							expr: &ruleRefExpr{
								pos:  position{line: 347, col: 78, offset: 12986},
								name: "TitleElements",
							},
						},
						&zeroOrMoreExpr{
							pos: position{line: 347, col: 93, offset: 13001},
							expr: &choiceExpr{
								pos: position{line: 1024, col: 7, offset: 41621},
								alternatives: []interface{}{
									&litMatcher{
										pos:        position{line: 1024, col: 7, offset: 41621},
										val:        " ",
										ignoreCase: false,
									},
									&actionExpr{
										pos: position{line: 1024, col: 13, offset: 41627},
										run: (*parser).callonSection5Title226,
										expr: &litMatcher{
											pos:        position{line: 1024, col: 13, offset: 41627},
											val:        "\t",
											ignoreCase: false,
										},
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 347, col: 97, offset: 13005},
							label: "id",
							expr: &zeroOrOneExpr{
								pos: position{line: 347, col: 100, offset: 13008},
								expr: &actionExpr{
									pos: position{line: 151, col: 20, offset: 5775},
									run: (*parser).callonSection5Title230,
									expr: &seqExpr{
										pos: position{line: 151, col: 20, offset: 5775},
										exprs: []interface{}{
											&litMatcher{
												pos:        position{line: 151, col: 20, offset: 5775},
												val:        "[[",
												ignoreCase: false,
											},
											&labeledExpr{
												pos:   position{line: 151, col: 25, offset: 5780},
												label: "id",
												expr: &actionExpr{
													pos: position{line: 1010, col: 7, offset: 41339},
													run: (*parser).callonSection5Title234,
													expr: &oneOrMoreExpr{
														pos: position{line: 1010, col: 7, offset: 41339},
														expr: &seqExpr{
															pos: position{line: 1010, col: 8, offset: 41340},
															exprs: []interface{}{
																&notExpr{
																	pos: position{line: 1010, col: 8, offset: 41340},
																	expr: &choiceExpr{
																		pos: position{line: 1028, col: 12, offset: 41683},
																		alternatives: []interface{}{
																			&litMatcher{
																				pos:        position{line: 1028, col: 12, offset: 41683},
																				val:        "\r\n",
																				ignoreCase: false,
																			},
																			&charClassMatcher{
																				pos:        position{line: 1028, col: 21, offset: 41692},
																				val:        "[\\r\\n]",
																				chars:      []rune{'\r', '\n'},
																				ignoreCase: false,
																				inverted:   false,
																			},
																		},
																	},
																},
																&notExpr{
																	pos: position{line: 1010, col: 17, offset: 41349},
																	expr: &choiceExpr{
																		pos: position{line: 1024, col: 7, offset: 41621},
																		alternatives: []interface{}{
																			&litMatcher{
																				pos:        position{line: 1024, col: 7, offset: 41621},
																				val:        " ",
																				ignoreCase: false,
																			},
																			&actionExpr{
																				pos: position{line: 1024, col: 13, offset: 41627},
																				run: (*parser).callonSection5Title244,
																				expr: &litMatcher{
																					pos:        position{line: 1024, col: 13, offset: 41627},
																					val:        "\t",
																					ignoreCase: false,
																				},
																			},
																		},
																	},
																},
																&notExpr{
																	pos: position{line: 1010, col: 21, offset: 41353},
																	expr: &litMatcher{
																		pos:        position{line: 1010, col: 22, offset: 41354},
																		val:        "[",
																		ignoreCase: false,
																	},
																},
																&notExpr{
																	pos: position{line: 1010, col: 26, offset: 41358},
																	expr: &litMatcher{
																		pos:        position{line: 1010, col: 27, offset: 41359},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
																&notExpr{
																	pos: position{line: 1010, col: 31, offset: 41363},
																	expr: &litMatcher{
																		pos:        position{line: 1010, col: 32, offset: 41364},
																		val:        "<<",
																		ignoreCase: false,
																	},
																},
																&notExpr{
																	pos: position{line: 1010, col: 37, offset: 41369},
																	expr: &litMatcher{
																		pos:        position{line: 1010, col: 38, offset: 41370},
																		val:        ">>",
																		ignoreCase: false,
																	},
																},
																&notExpr{
																	pos: position{line: 1010, col: 43, offset: 41375},
																	expr: &litMatcher{
																		pos:        position{line: 1010, col: 44, offset: 41376},
																		val:        ",",
																		ignoreCase: false,
																	},
																},
																&anyMatcher{
																	line: 1010, col: 48, offset: 41380,
																},
															},
														},
													},
												},
											},
											&litMatcher{
												pos:        position{line: 151, col: 33, offset: 5788},
												val:        "]]",
												ignoreCase: false,
											},
										},
									},
								},
							},
						},
						&choiceExpr{
							pos: position{line: 1032, col: 8, offset: 41723},
							alternatives: []interface{}{
								&litMatcher{
									pos:        position{line: 1028, col: 12, offset: 41683},
									val:        "\r\n",
									ignoreCase: false,
								},
								&charClassMatcher{
									pos:        position{line: 1028, col: 21, offset: 41692},
									val:        "[\\r\\n]",
									chars:      []rune{'\r', '\n'},
									ignoreCase: false,
									inverted:   false,
								},
								&notExpr{
									pos: position{line: 1030, col: 8, offset: 41712},
									expr: &anyMatcher{
										line: 1030, col: 9, offset: 41713,
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "Section5Block",
			pos:  position{line: 351, col: 1, offset: 13141},
			expr: &actionExpr{
				pos: position{line: 351, col: 18, offset: 13158},
				run: (*parser).callonSection5Block1,
				expr: &seqExpr{
					pos: position{line: 351, col: 18, offset: 13158},
					exprs: []interface{}{
						&notExpr{
							pos: position{line: 351, col: 18, offset: 13158},
							expr: &ruleRefExpr{
								pos:  position{line: 351, col: 19, offset: 13159},
								name: "Section1Title",
							},
						},
						&notExpr{
							pos: position{line: 351, col: 33, offset: 13173},
							expr: &ruleRefExpr{
								pos:  position{line: 351, col: 34, offset: 13174},
								name: "Section2Title",
							},
						},
						&notExpr{
							pos: position{line: 351, col: 48, offset: 13188},
							expr: &ruleRefExpr{
								pos:  position{line: 351, col: 49, offset: 13189},
								name: "Section3Title",
							},
						},
						&notExpr{
							pos: position{line: 351, col: 63, offset: 13203},
							expr: &ruleRefExpr{
								pos:  position{line: 351, col: 64, offset: 13204},
								name: "Section4Title",
							},
						},
						&notExpr{
							pos: position{line: 351, col: 78, offset: 13218},
							expr: &ruleRefExpr{
								pos:  position{line: 351, col: 79, offset: 13219},
								name: "Section5Title",
							},
						},
						&labeledExpr{
							pos:   position{line: 351, col: 93, offset: 13233},
							label: "content",
							expr: &zeroOrMoreExpr{
								pos: position{line: 351, col: 101, offset: 13241},
								expr: &ruleRefExpr{
									pos:  position{line: 351, col: 102, offset: 13242},
									name: "DocumentBlock",
								},
							},
						},
					},
				},
			},
		},
		{
			name: "TitleElements",
			pos:  position{line: 355, col: 1, offset: 13287},
			expr: &actionExpr{
				pos: position{line: 355, col: 18, offset: 13304},
				run: (*parser).callonTitleElements1,
				expr: &labeledExpr{
					pos:   position{line: 355, col: 18, offset: 13304},
					label: "elements",
					expr: &oneOrMoreExpr{
						pos: position{line: 355, col: 27, offset: 13313},
						expr: &seqExpr{
							pos: position{line: 355, col: 28, offset: 13314},
							exprs: []interface{}{
								&notExpr{
									pos: position{line: 355, col: 28, offset: 13314},
									expr: &choiceExpr{
										pos: position{line: 1028, col: 12, offset: 41683},
										alternatives: []interface{}{
											&litMatcher{
												pos:        position{line: 1028, col: 12, offset: 41683},
												val:        "\r\n",
												ignoreCase: false,
											},
											&charClassMatcher{
												pos:        position{line: 1028, col: 21, offset: 41692},
												val:        "[\\r\\n]",
												chars:      []rune{'\r', '\n'},
												ignoreCase: false,
												inverted:   false,
											},
										},
									},
								},
								&zeroOrMoreExpr{
									pos: position{line: 355, col: 37, offset: 13323},
									expr: &choiceExpr{
										pos: position{line: 1024, col: 7, offset: 41621},
										alternatives: []interface{}{
											&litMatcher{
												pos:        position{line: 1024, col: 7, offset: 41621},
												val:        " ",
												ignoreCase: false,
											},
											&actionExpr{
												pos: position{line: 1024, col: 13, offset: 41627},
												run: (*parser).callonTitleElements12,
												expr: &litMatcher{
													pos:        position{line: 1024, col: 13, offset: 41627},
													val:        "\t",
													ignoreCase: false,
												},
											},
										},
									},
								},
								&notExpr{
									pos: position{line: 355, col: 41, offset: 13327},
									expr: &actionExpr{
										pos: position{line: 151, col: 20, offset: 5775},
										run: (*parser).callonTitleElements15,
										expr: &seqExpr{
											pos: position{line: 151, col: 20, offset: 5775},
											exprs: []interface{}{
												&litMatcher{
													pos:        position{line: 151, col: 20, offset: 5775},
													val:        "[[",
													ignoreCase: false,
												},
												&labeledExpr{
													pos:   position{line: 151, col: 25, offset: 5780},
													label: "id",
													expr: &actionExpr{
														pos: position{line: 1010, col: 7, offset: 41339},
														run: (*parser).callonTitleElements19,
														expr: &oneOrMoreExpr{
															pos: position{line: 1010, col: 7, offset: 41339},
															expr: &seqExpr{
																pos: position{line: 1010, col: 8, offset: 41340},
																exprs: []interface{}{
																	&notExpr{
																		pos: position{line: 1010, col: 8, offset: 41340},
																		expr: &choiceExpr{
																			pos: position{line: 1028, col: 12, offset: 41683},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1028, col: 12, offset: 41683},
																					val:        "\r\n",
																					ignoreCase: false,
																				},
																				&charClassMatcher{
																					pos:        position{line: 1028, col: 21, offset: 41692},
																					val:        "[\\r\\n]",
																					chars:      []rune{'\r', '\n'},
																					ignoreCase: false,
																					inverted:   false,
																				},
																			},
																		},
																	},
																	&notExpr{
																		pos: position{line: 1010, col: 17, offset: 41349},
																		expr: &choiceExpr{
																			pos: position{line: 1024, col: 7, offset: 41621},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1024, col: 7, offset: 41621},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1024, col: 13, offset: 41627},
																					run: (*parser).callonTitleElements29,
																					expr: &litMatcher{
																						pos:        position{line: 1024, col: 13, offset: 41627},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&notExpr{
																		pos: position{line: 1010, col: 21, offset: 41353},
																		expr: &litMatcher{
																			pos:        position{line: 1010, col: 22, offset: 41354},
																			val:        "[",
																			ignoreCase: false,
																		},
																	},
																	&notExpr{
																		pos: position{line: 1010, col: 26, offset: 41358},
																		expr: &litMatcher{
																			pos:        position{line: 1010, col: 27, offset: 41359},
																			val:        "]",
																			ignoreCase: false,
																		},
																	},
																	&notExpr{
																		pos: position{line: 1010, col: 31, offset: 41363},
																		expr: &litMatcher{
																			pos:        position{line: 1010, col: 32, offset: 41364},
																			val:        "<<",
																			ignoreCase: false,
																		},
																	},
																	&notExpr{
																		pos: position{line: 1010, col: 37, offset: 41369},
																		expr: &litMatcher{
																			pos:        position{line: 1010, col: 38, offset: 41370},
																			val:        ">>",
																			ignoreCase: false,
																		},
																	},
																	&notExpr{
																		pos: position{line: 1010, col: 43, offset: 41375},
																		expr: &litMatcher{
																			pos:        position{line: 1010, col: 44, offset: 41376},
																			val:        ",",
																			ignoreCase: false,
																		},
																	},
																	&anyMatcher{
																		line: 1010, col: 48, offset: 41380,
																	},
																},
															},
														},
													},
												},
												&litMatcher{
													pos:        position{line: 151, col: 33, offset: 5788},
													val:        "]]",
													ignoreCase: false,
												},
											},
										},
									},
								},
								&ruleRefExpr{
									pos:  position{line: 355, col: 58, offset: 13344},
									name: "TitleElement",
								},
								&zeroOrMoreExpr{
									pos: position{line: 355, col: 71, offset: 13357},
									expr: &choiceExpr{
										pos: position{line: 1024, col: 7, offset: 41621},
										alternatives: []interface{}{
											&litMatcher{
												pos:        position{line: 1024, col: 7, offset: 41621},
												val:        " ",
												ignoreCase: false,
											},
											&actionExpr{
												pos: position{line: 1024, col: 13, offset: 41627},
												run: (*parser).callonTitleElements47,
												expr: &litMatcher{
													pos:        position{line: 1024, col: 13, offset: 41627},
													val:        "\t",
													ignoreCase: false,
												},
											},
										},
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "TitleElement",
			pos:  position{line: 359, col: 1, offset: 13469},
			expr: &actionExpr{
				pos: position{line: 359, col: 17, offset: 13485},
				run: (*parser).callonTitleElement1,
				expr: &labeledExpr{
					pos:   position{line: 359, col: 17, offset: 13485},
					label: "element",
					expr: &choiceExpr{
						pos: position{line: 359, col: 26, offset: 13494},
						alternatives: []interface{}{
							&actionExpr{
								pos: position{line: 656, col: 19, offset: 27690},
								run: (*parser).callonTitleElement4,
								expr: &seqExpr{
									pos: position{line: 656, col: 19, offset: 27690},
									exprs: []interface{}{
										&litMatcher{
											pos:        position{line: 656, col: 19, offset: 27690},
											val:        "<<",
											ignoreCase: false,
										},
										&labeledExpr{
											pos:   position{line: 656, col: 24, offset: 27695},
											label: "id",
											expr: &actionExpr{
												pos: position{line: 1010, col: 7, offset: 41339},
												run: (*parser).callonTitleElement8,
												expr: &oneOrMoreExpr{
													pos: position{line: 1010, col: 7, offset: 41339},
													expr: &seqExpr{
														pos: position{line: 1010, col: 8, offset: 41340},
														exprs: []interface{}{
															&notExpr{
																pos: position{line: 1010, col: 8, offset: 41340},
																expr: &choiceExpr{
																	pos: position{line: 1028, col: 12, offset: 41683},
																	alternatives: []interface{}{
																		&litMatcher{
																			pos:        position{line: 1028, col: 12, offset: 41683},
																			val:        "\r\n",
																			ignoreCase: false,
																		},
																		&charClassMatcher{
																			pos:        position{line: 1028, col: 21, offset: 41692},
																			val:        "[\\r\\n]",
																			chars:      []rune{'\r', '\n'},
																			ignoreCase: false,
																			inverted:   false,
																		},
																	},
																},
															},
															&notExpr{
																pos: position{line: 1010, col: 17, offset: 41349},
																expr: &choiceExpr{
																	pos: position{line: 1024, col: 7, offset: 41621},
																	alternatives: []interface{}{
																		&litMatcher{
																			pos:        position{line: 1024, col: 7, offset: 41621},
																			val:        " ",
																			ignoreCase: false,
																		},
																		&actionExpr{
																			pos: position{line: 1024, col: 13, offset: 41627},
																			run: (*parser).callonTitleElement18,
																			expr: &litMatcher{
																				pos:        position{line: 1024, col: 13, offset: 41627},
																				val:        "\t",
																				ignoreCase: false,
																			},
																		},
																	},
																},
															},
															&notExpr{
																pos: position{line: 1010, col: 21, offset: 41353},
																expr: &litMatcher{
																	pos:        position{line: 1010, col: 22, offset: 41354},
																	val:        "[",
																	ignoreCase: false,
																},
															},
															&notExpr{
																pos: position{line: 1010, col: 26, offset: 41358},
																expr: &litMatcher{
																	pos:        position{line: 1010, col: 27, offset: 41359},
																	val:        "]",
																	ignoreCase: false,
																},
															},
															&notExpr{
																pos: position{line: 1010, col: 31, offset: 41363},
																expr: &litMatcher{
																	pos:        position{line: 1010, col: 32, offset: 41364},
																	val:        "<<",
																	ignoreCase: false,
																},
															},
															&notExpr{
																pos: position{line: 1010, col: 37, offset: 41369},
																expr: &litMatcher{
																	pos:        position{line: 1010, col: 38, offset: 41370},
																	val:        ">>",
																	ignoreCase: false,
																},
															},
															&notExpr{
																pos: position{line: 1010, col: 43, offset: 41375},
																expr: &litMatcher{
																	pos:        position{line: 1010, col: 44, offset: 41376},
																	val:        ",",
																	ignoreCase: false,
																},
															},
															&anyMatcher{
																line: 1010, col: 48, offset: 41380,
															},
														},
													},
												},
											},
										},
										&zeroOrMoreExpr{
											pos: position{line: 656, col: 32, offset: 27703},
											expr: &choiceExpr{
												pos: position{line: 1024, col: 7, offset: 41621},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1024, col: 7, offset: 41621},
														val:        " ",
														ignoreCase: false,
													},
													&actionExpr{
														pos: position{line: 1024, col: 13, offset: 41627},
														run: (*parser).callonTitleElement34,
														expr: &litMatcher{
															pos:        position{line: 1024, col: 13, offset: 41627},
															val:        "\t",
															ignoreCase: false,
														},
													},
												},
											},
										},
										&litMatcher{
											pos:        position{line: 656, col: 36, offset: 27707},
											val:        ",",
											ignoreCase: false,
										},
										&labeledExpr{
											pos:   position{line: 656, col: 40, offset: 27711},
											label: "label",
											expr: &actionExpr{
												pos: position{line: 662, col: 24, offset: 27913},
												run: (*parser).callonTitleElement38,
												expr: &oneOrMoreExpr{
													pos: position{line: 662, col: 24, offset: 27913},
													expr: &seqExpr{
														pos: position{line: 662, col: 25, offset: 27914},
														exprs: []interface{}{
															&notExpr{
																pos: position{line: 662, col: 25, offset: 27914},
																expr: &litMatcher{
																	pos:        position{line: 662, col: 26, offset: 27915},
																	val:        ">>",
																	ignoreCase: false,
																},
															},
															&anyMatcher{
																line: 662, col: 31, offset: 27920,
															},
														},
													},
												},
											},
										},
										&litMatcher{
											pos:        position{line: 656, col: 68, offset: 27739},
											val:        ">>",
											ignoreCase: false,
										},
									},
								},
							},
							&actionExpr{
								pos: position{line: 658, col: 5, offset: 27814},
								run: (*parser).callonTitleElement45,
								expr: &seqExpr{
									pos: position{line: 658, col: 5, offset: 27814},
									exprs: []interface{}{
										&litMatcher{
											pos:        position{line: 658, col: 5, offset: 27814},
											val:        "<<",
											ignoreCase: false,
										},
										&labeledExpr{
											pos:   position{line: 658, col: 10, offset: 27819},
											label: "id",
											expr: &actionExpr{
												pos: position{line: 1010, col: 7, offset: 41339},
												run: (*parser).callonTitleElement49,
												expr: &oneOrMoreExpr{
													pos: position{line: 1010, col: 7, offset: 41339},
													expr: &seqExpr{
														pos: position{line: 1010, col: 8, offset: 41340},
														exprs: []interface{}{
															&notExpr{
																pos: position{line: 1010, col: 8, offset: 41340},
																expr: &choiceExpr{
																	pos: position{line: 1028, col: 12, offset: 41683},
																	alternatives: []interface{}{
																		&litMatcher{
																			pos:        position{line: 1028, col: 12, offset: 41683},
																			val:        "\r\n",
																			ignoreCase: false,
																		},
																		&charClassMatcher{
																			pos:        position{line: 1028, col: 21, offset: 41692},
																			val:        "[\\r\\n]",
																			chars:      []rune{'\r', '\n'},
																			ignoreCase: false,
																			inverted:   false,
																		},
																	},
																},
															},
															&notExpr{
																pos: position{line: 1010, col: 17, offset: 41349},
																expr: &choiceExpr{
																	pos: position{line: 1024, col: 7, offset: 41621},
																	alternatives: []interface{}{
																		&litMatcher{
																			pos:        position{line: 1024, col: 7, offset: 41621},
																			val:        " ",
																			ignoreCase: false,
																		},
																		&actionExpr{
																			pos: position{line: 1024, col: 13, offset: 41627},
																			run: (*parser).callonTitleElement59,
																			expr: &litMatcher{
																				pos:        position{line: 1024, col: 13, offset: 41627},
																				val:        "\t",
																				ignoreCase: false,
																			},
																		},
																	},
																},
															},
															&notExpr{
																pos: position{line: 1010, col: 21, offset: 41353},
																expr: &litMatcher{
																	pos:        position{line: 1010, col: 22, offset: 41354},
																	val:        "[",
																	ignoreCase: false,
																},
															},
															&notExpr{
																pos: position{line: 1010, col: 26, offset: 41358},
																expr: &litMatcher{
																	pos:        position{line: 1010, col: 27, offset: 41359},
																	val:        "]",
																	ignoreCase: false,
																},
															},
															&notExpr{
																pos: position{line: 1010, col: 31, offset: 41363},
																expr: &litMatcher{
																	pos:        position{line: 1010, col: 32, offset: 41364},
																	val:        "<<",
																	ignoreCase: false,
																},
															},
															&notExpr{
																pos: position{line: 1010, col: 37, offset: 41369},
																expr: &litMatcher{
																	pos:        position{line: 1010, col: 38, offset: 41370},
																	val:        ">>",
																	ignoreCase: false,
																},
															},
															&notExpr{
																pos: position{line: 1010, col: 43, offset: 41375},
																expr: &litMatcher{
																	pos:        position{line: 1010, col: 44, offset: 41376},
																	val:        ",",
																	ignoreCase: false,
																},
															},
															&anyMatcher{
																line: 1010, col: 48, offset: 41380,
															},
														},
													},
												},
											},
										},
										&litMatcher{
											pos:        position{line: 658, col: 18, offset: 27827},
											val:        ">>",
											ignoreCase: false,
										},
									},
								},
							},
							&ruleRefExpr{
								pos:  position{line: 359, col: 43, offset: 13511},
								name: "Passthrough",
							},
							&actionExpr{
								pos: position{line: 710, col: 16, offset: 29412},
								run: (*parser).callonTitleElement74,
								expr: &seqExpr{
									pos: position{line: 710, col: 16, offset: 29412},
									exprs: []interface{}{
										&litMatcher{
											pos:        position{line: 710, col: 16, offset: 29412},
											val:        "image:",
											ignoreCase: false,
										},
										&notExpr{
											pos: position{line: 710, col: 25, offset: 29421},
											expr: &litMatcher{
												pos:        position{line: 710, col: 26, offset: 29422},
												val:        ":",
												ignoreCase: false,
											},
										},
										&labeledExpr{
											pos:   position{line: 710, col: 30, offset: 29426},
											label: "path",
											expr: &actionExpr{
												pos: position{line: 1006, col: 8, offset: 41269},
												run: (*parser).callonTitleElement80,
												expr: &oneOrMoreExpr{
													pos: position{line: 1006, col: 8, offset: 41269},
													expr: &seqExpr{
														pos: position{line: 1006, col: 9, offset: 41270},
														exprs: []interface{}{
															&notExpr{
																pos: position{line: 1006, col: 9, offset: 41270},
																expr: &choiceExpr{
																	pos: position{line: 1028, col: 12, offset: 41683},
																	alternatives: []interface{}{
																		&litMatcher{
																			pos:        position{line: 1028, col: 12, offset: 41683},
																			val:        "\r\n",
																			ignoreCase: false,
																		},
																		&charClassMatcher{
																			pos:        position{line: 1028, col: 21, offset: 41692},
																			val:        "[\\r\\n]",
																			chars:      []rune{'\r', '\n'},
																			ignoreCase: false,
																			inverted:   false,
																		},
																	},
																},
															},
															&notExpr{
																pos: position{line: 1006, col: 18, offset: 41279},
																expr: &choiceExpr{
																	pos: position{line: 1024, col: 7, offset: 41621},
																	alternatives: []interface{}{
																		&litMatcher{
																			pos:        position{line: 1024, col: 7, offset: 41621},
																			val:        " ",
																			ignoreCase: false,
																		},
																		&actionExpr{
																			pos: position{line: 1024, col: 13, offset: 41627},
																			run: (*parser).callonTitleElement90,
																			expr: &litMatcher{
																				pos:        position{line: 1024, col: 13, offset: 41627},
																				val:        "\t",
																				ignoreCase: false,
																			},
																		},
																	},
																},
															},
															&notExpr{
																pos: position{line: 1006, col: 22, offset: 41283},
																expr: &litMatcher{
																	pos:        position{line: 1006, col: 23, offset: 41284},
																	val:        "[",
																	ignoreCase: false,
																},
															},
															&notExpr{
																pos: position{line: 1006, col: 27, offset: 41288},
																expr: &litMatcher{
																	pos:        position{line: 1006, col: 28, offset: 41289},
																	val:        "]",
																	ignoreCase: false,
																},
															},
															&anyMatcher{
																line: 1006, col: 32, offset: 41293,
															},
														},
													},
												},
											},
										},
										&labeledExpr{
											pos:   position{line: 710, col: 41, offset: 29437},
											label: "attributes",
											expr: &choiceExpr{
												pos: position{line: 715, col: 20, offset: 29682},
												alternatives: []interface{}{
													&actionExpr{
														pos: position{line: 715, col: 20, offset: 29682},
														run: (*parser).callonTitleElement99,
														expr: &seqExpr{
															pos: position{line: 715, col: 20, offset: 29682},
															exprs: []interface{}{
																&litMatcher{
																	pos:        position{line: 715, col: 20, offset: 29682},
																	val:        "[",
																	ignoreCase: false,
																},
																&labeledExpr{
																	pos:   position{line: 715, col: 24, offset: 29686},
																	label: "alt",
																	expr: &actionExpr{
																		pos: position{line: 732, col: 19, offset: 30461},
																		run: (*parser).callonTitleElement103,
																		expr: &oneOrMoreExpr{
																			pos: position{line: 732, col: 19, offset: 30461},
																			expr: &seqExpr{
																				pos: position{line: 732, col: 20, offset: 30462},
																				exprs: []interface{}{
																					&notExpr{
																						pos: position{line: 732, col: 20, offset: 30462},
																						expr: &litMatcher{
																							pos:        position{line: 732, col: 21, offset: 30463},
																							val:        ",",
																							ignoreCase: false,
																						},
																					},
																					&notExpr{
																						pos: position{line: 732, col: 25, offset: 30467},
																						expr: &litMatcher{
																							pos:        position{line: 732, col: 26, offset: 30468},
																							val:        "=",
																							ignoreCase: false,
																						},
																					},
																					&notExpr{
																						pos: position{line: 732, col: 30, offset: 30472},
																						expr: &litMatcher{
																							pos:        position{line: 732, col: 31, offset: 30473},
																							val:        "]",
																							ignoreCase: false,
																						},
																					},
																					&anyMatcher{
																						line: 732, col: 35, offset: 30477,
																					},
																				},
																			},
																		},
																	},
																},
																&litMatcher{
																	pos:        position{line: 715, col: 45, offset: 29707},
																	val:        ",",
																	ignoreCase: false,
																},
																&labeledExpr{
																	pos:   position{line: 716, col: 9, offset: 29719},
																	label: "width",
																	expr: &actionExpr{
																		pos: position{line: 732, col: 19, offset: 30461},
																		run: (*parser).callonTitleElement115,
																		expr: &oneOrMoreExpr{
																			pos: position{line: 732, col: 19, offset: 30461},
																			expr: &seqExpr{
																				pos: position{line: 732, col: 20, offset: 30462},
																				exprs: []interface{}{
																					&notExpr{
																						pos: position{line: 732, col: 20, offset: 30462},
																						expr: &litMatcher{
																							pos:        position{line: 732, col: 21, offset: 30463},
																							val:        ",",
																							ignoreCase: false,
																						},
																					},
																					&notExpr{
																						pos: position{line: 732, col: 25, offset: 30467},
																						expr: &litMatcher{
																							pos:        position{line: 732, col: 26, offset: 30468},
																							val:        "=",
																							ignoreCase: false,
																						},
																					},
																					&notExpr{
																						pos: position{line: 732, col: 30, offset: 30472},
																						expr: &litMatcher{
																							pos:        position{line: 732, col: 31, offset: 30473},
																							val:        "]",
																							ignoreCase: false,
																						},
																					},
																					&anyMatcher{
																						line: 732, col: 35, offset: 30477,
																					},
																				},
																			},
																		},
																	},
																},
																&litMatcher{
																	pos:        position{line: 716, col: 33, offset: 29743},
																	val:        ",",
																	ignoreCase: false,
																},
																&labeledExpr{
																	pos:   position{line: 717, col: 9, offset: 29755},
																	label: "height",
																	expr: &actionExpr{
																		pos: position{line: 732, col: 19, offset: 30461},
																		run: (*parser).callonTitleElement127,
																		expr: &oneOrMoreExpr{
																			pos: position{line: 732, col: 19, offset: 30461},
																			expr: &seqExpr{
																				pos: position{line: 732, col: 20, offset: 30462},
																				exprs: []interface{}{
																					&notExpr{
																						pos: position{line: 732, col: 20, offset: 30462},
																						expr: &litMatcher{
																							pos:        position{line: 732, col: 21, offset: 30463},
																							val:        ",",
																							ignoreCase: false,
																						},
																					},
																					&notExpr{
																						pos: position{line: 732, col: 25, offset: 30467},
																						expr: &litMatcher{
																							pos:        position{line: 732, col: 26, offset: 30468},
																							val:        "=",
																							ignoreCase: false,
																						},
																					},
																					&notExpr{
																						pos: position{line: 732, col: 30, offset: 30472},
																						expr: &litMatcher{
																							pos:        position{line: 732, col: 31, offset: 30473},
																							val:        "]",
																							ignoreCase: false,
																						},
																					},
																					&anyMatcher{
																						line: 732, col: 35, offset: 30477,
																					},
																				},
																			},
																		},
																	},
																},
																&zeroOrOneExpr{
																	pos: position{line: 717, col: 33, offset: 29779},
																	expr: &litMatcher{
																		pos:        position{line: 717, col: 33, offset: 29779},
																		val:        ",",
																		ignoreCase: false,
																	},
																},
																&labeledExpr{
																	pos:   position{line: 718, col: 9, offset: 29792},
																	label: "otherAttrs",
																	expr: &zeroOrMoreExpr{
																		pos: position{line: 718, col: 20, offset: 29803},
																		expr: &choiceExpr{
																			pos: position{line: 185, col: 21, offset: 6867},
																			alternatives: []interface{}{
																				&actionExpr{
																					pos: position{line: 185, col: 21, offset: 6867},
																					run: (*parser).callonTitleElement142,
																					expr: &seqExpr{
																						pos: position{line: 185, col: 21, offset: 6867},
																						exprs: []interface{}{
																							&labeledExpr{
																								pos:   position{line: 185, col: 21, offset: 6867},
																								label: "key",
																								expr: &actionExpr{
																									pos: position{line: 191, col: 17, offset: 7127},
																									run: (*parser).callonTitleElement145,
																									expr: &seqExpr{
																										pos: position{line: 191, col: 17, offset: 7127},
																										exprs: []interface{}{
																											&notExpr{
																												pos: position{line: 191, col: 17, offset: 7127},
																												expr: &actionExpr{
																													pos: position{line: 231, col: 14, offset: 8674},
																													run: (*parser).callonTitleElement148,
																													expr: &litMatcher{
																														pos:        position{line: 231, col: 14, offset: 8674},
																														val:        "verse",
																														ignoreCase: false,
																													},
																												},
																											},
																											&notExpr{
																												pos: position{line: 191, col: 28, offset: 7138},
																												expr: &actionExpr{
																													pos: position{line: 975, col: 16, offset: 40537},
																													run: (*parser).callonTitleElement151,
																													expr: &litMatcher{
																														pos:        position{line: 975, col: 16, offset: 40537},
																														val:        "literal",
																														ignoreCase: false,
																													},
																												},
																											},
																											&labeledExpr{
																												pos:   position{line: 191, col: 41, offset: 7151},
																												label: "key",
																												expr: &oneOrMoreExpr{
																													pos: position{line: 191, col: 45, offset: 7155},
																													expr: &seqExpr{
																														pos: position{line: 191, col: 46, offset: 7156},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 191, col: 46, offset: 7156},
																																expr: &litMatcher{
																																	pos:        position{line: 191, col: 47, offset: 7157},
																																	val:        "=",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 191, col: 51, offset: 7161},
																																expr: &litMatcher{
																																	pos:        position{line: 191, col: 52, offset: 7162},
																																	val:        ",",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 191, col: 56, offset: 7166},
																																expr: &litMatcher{
																																	pos:        position{line: 191, col: 57, offset: 7167},
																																	val:        "]",
																																	ignoreCase: false,
																																},
																															},
																															&anyMatcher{
																																line: 191, col: 61, offset: 7171,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&litMatcher{
																								pos:        position{line: 185, col: 40, offset: 6886},
																								val:        "=",
																								ignoreCase: false,
																							},
																							&labeledExpr{
																								pos:   position{line: 185, col: 44, offset: 6890},
																								label: "value",
																								expr: &actionExpr{
																									pos: position{line: 195, col: 19, offset: 7230},
																									run: (*parser).callonTitleElement165,
																									expr: &labeledExpr{
																										pos:   position{line: 195, col: 19, offset: 7230},
																										label: "value",
																										expr: &zeroOrMoreExpr{
																											pos: position{line: 195, col: 25, offset: 7236},
																											expr: &seqExpr{
																												pos: position{line: 195, col: 26, offset: 7237},
																												exprs: []interface{}{
																													&notExpr{
																														pos: position{line: 195, col: 26, offset: 7237},
																														expr: &litMatcher{
																															pos:        position{line: 195, col: 27, offset: 7238},
																															val:        "=",
																															ignoreCase: false,
																														},
																													},
																													&notExpr{
																														pos: position{line: 195, col: 31, offset: 7242},
																														expr: &litMatcher{
																															pos:        position{line: 195, col: 32, offset: 7243},
																															val:        ",",
																															ignoreCase: false,
																														},
																													},
																													&notExpr{
																														pos: position{line: 195, col: 36, offset: 7247},
																														expr: &litMatcher{
																															pos:        position{line: 195, col: 37, offset: 7248},
																															val:        "]",
																															ignoreCase: false,
																														},
																													},
																													&anyMatcher{
																														line: 195, col: 41, offset: 7252,
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&zeroOrOneExpr{
																								pos: position{line: 185, col: 67, offset: 6913},
																								expr: &litMatcher{
																									pos:        position{line: 185, col: 67, offset: 6913},
																									val:        ",",
																									ignoreCase: false,
																								},
																							},
																							&zeroOrMoreExpr{
																								pos: position{line: 185, col: 72, offset: 6918},
																								expr: &choiceExpr{
																									pos: position{line: 1024, col: 7, offset: 41621},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1024, col: 7, offset: 41621},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1024, col: 13, offset: 41627},
																											run: (*parser).callonTitleElement181,
																											expr: &litMatcher{
																												pos:        position{line: 1024, col: 13, offset: 41627},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																				&actionExpr{
																					pos: position{line: 187, col: 5, offset: 7002},
																					run: (*parser).callonTitleElement183,
																					expr: &seqExpr{
																						pos: position{line: 187, col: 5, offset: 7002},
																						exprs: []interface{}{
																							&labeledExpr{
																								pos:   position{line: 187, col: 5, offset: 7002},
																								label: "key",
																								expr: &actionExpr{
																									pos: position{line: 191, col: 17, offset: 7127},
																									run: (*parser).callonTitleElement186,
																									expr: &seqExpr{
																										pos: position{line: 191, col: 17, offset: 7127},
																										exprs: []interface{}{
																											&notExpr{
																												pos: position{line: 191, col: 17, offset: 7127},
																												expr: &actionExpr{
																													pos: position{line: 231, col: 14, offset: 8674},
																													run: (*parser).callonTitleElement189,
																													expr: &litMatcher{
																														pos:        position{line: 231, col: 14, offset: 8674},
																														val:        "verse",
																														ignoreCase: false,
																													},
																												},
																											},
																											&notExpr{
																												pos: position{line: 191, col: 28, offset: 7138},
																												expr: &actionExpr{
																													pos: position{line: 975, col: 16, offset: 40537},
																													run: (*parser).callonTitleElement192,
																													expr: &litMatcher{
																														pos:        position{line: 975, col: 16, offset: 40537},
																														val:        "literal",
																														ignoreCase: false,
																													},
																												},
																											},
																											&labeledExpr{
																												pos:   position{line: 191, col: 41, offset: 7151},
																												label: "key",
																												expr: &oneOrMoreExpr{
																													pos: position{line: 191, col: 45, offset: 7155},
																													expr: &seqExpr{
																														pos: position{line: 191, col: 46, offset: 7156},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 191, col: 46, offset: 7156},
																																expr: &litMatcher{
																																	pos:        position{line: 191, col: 47, offset: 7157},
																																	val:        "=",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 191, col: 51, offset: 7161},
																																expr: &litMatcher{
																																	pos:        position{line: 191, col: 52, offset: 7162},
																																	val:        ",",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 191, col: 56, offset: 7166},
																																expr: &litMatcher{
																																	pos:        position{line: 191, col: 57, offset: 7167},
																																	val:        "]",
																																	ignoreCase: false,
																																},
																															},
																															&anyMatcher{
																																line: 191, col: 61, offset: 7171,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&zeroOrOneExpr{
																								pos: position{line: 187, col: 24, offset: 7021},
																								expr: &litMatcher{
																									pos:        position{line: 187, col: 24, offset: 7021},
																									val:        ",",
																									ignoreCase: false,
																								},
																							},
																							&zeroOrMoreExpr{
																								pos: position{line: 187, col: 29, offset: 7026},
																								expr: &choiceExpr{
																									pos: position{line: 1024, col: 7, offset: 41621},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1024, col: 7, offset: 41621},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1024, col: 13, offset: 41627},
																											run: (*parser).callonTitleElement209,
																											expr: &litMatcher{
																												pos:        position{line: 1024, col: 13, offset: 41627},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																},
																&litMatcher{
																	pos:        position{line: 718, col: 40, offset: 29823},
																	val:        "]",
																	ignoreCase: false,
																},
															},
														},
													},
													&actionExpr{
														pos: position{line: 720, col: 9, offset: 29929},
														run: (*parser).callonTitleElement212,
														expr: &seqExpr{
															pos: position{line: 720, col: 9, offset: 29929},
															exprs: []interface{}{
																&litMatcher{
																	pos:        position{line: 720, col: 9, offset: 29929},
																	val:        "[",
																	ignoreCase: false,
																},
																&labeledExpr{
																	pos:   position{line: 720, col: 13, offset: 29933},
																	label: "alt",
																	expr: &actionExpr{
																		pos: position{line: 732, col: 19, offset: 30461},
																		run: (*parser).callonTitleElement216,
																		expr: &oneOrMoreExpr{
																			pos: position{line: 732, col: 19, offset: 30461},
																			expr: &seqExpr{
																				pos: position{line: 732, col: 20, offset: 30462},
																				exprs: []interface{}{
																					&notExpr{
																						pos: position{line: 732, col: 20, offset: 30462},
																						expr: &litMatcher{
																							pos:        position{line: 732, col: 21, offset: 30463},
																							val:        ",",
																							ignoreCase: false,
																						},
																					},
																					&notExpr{
																						pos: position{line: 732, col: 25, offset: 30467},
																						expr: &litMatcher{
																							pos:        position{line: 732, col: 26, offset: 30468},
																							val:        "=",
																							ignoreCase: false,
																						},
																					},
																					&notExpr{
																						pos: position{line: 732, col: 30, offset: 30472},
																						expr: &litMatcher{
																							pos:        position{line: 732, col: 31, offset: 30473},
																							val:        "]",
																							ignoreCase: false,
																						},
																					},
																					&anyMatcher{
																						line: 732, col: 35, offset: 30477,
																					},
																				},
																			},
																		},
																	},
																},
																&litMatcher{
																	pos:        position{line: 720, col: 34, offset: 29954},
																	val:        ",",
																	ignoreCase: false,
																},
																&labeledExpr{
																	pos:   position{line: 721, col: 9, offset: 29966},
																	label: "width",
																	expr: &actionExpr{
																		pos: position{line: 732, col: 19, offset: 30461},
																		run: (*parser).callonTitleElement228,
																		expr: &oneOrMoreExpr{
																			pos: position{line: 732, col: 19, offset: 30461},
																			expr: &seqExpr{
																				pos: position{line: 732, col: 20, offset: 30462},
																				exprs: []interface{}{
																					&notExpr{
																						pos: position{line: 732, col: 20, offset: 30462},
																						expr: &litMatcher{
																							pos:        position{line: 732, col: 21, offset: 30463},
																							val:        ",",
																							ignoreCase: false,
																						},
																					},
																					&notExpr{
																						pos: position{line: 732, col: 25, offset: 30467},
																						expr: &litMatcher{
																							pos:        position{line: 732, col: 26, offset: 30468},
																							val:        "=",
																							ignoreCase: false,
																						},
																					},
																					&notExpr{
																						pos: position{line: 732, col: 30, offset: 30472},
																						expr: &litMatcher{
																							pos:        position{line: 732, col: 31, offset: 30473},
																							val:        "]",
																							ignoreCase: false,
																						},
																					},
																					&anyMatcher{
																						line: 732, col: 35, offset: 30477,
																					},
																				},
																			},
																		},
																	},
																},
																&zeroOrOneExpr{
																	pos: position{line: 721, col: 32, offset: 29989},
																	expr: &litMatcher{
																		pos:        position{line: 721, col: 32, offset: 29989},
																		val:        ",",
																		ignoreCase: false,
																	},
																},
																&labeledExpr{
																	pos:   position{line: 722, col: 9, offset: 30002},
																	label: "otherAttrs",
																	expr: &zeroOrMoreExpr{
																		pos: position{line: 722, col: 20, offset: 30013},
																		expr: &choiceExpr{
																			pos: position{line: 185, col: 21, offset: 6867},
																			alternatives: []interface{}{
																				&actionExpr{
																					pos: position{line: 185, col: 21, offset: 6867},
																					run: (*parser).callonTitleElement243,
																					expr: &seqExpr{
																						pos: position{line: 185, col: 21, offset: 6867},
																						exprs: []interface{}{
																							&labeledExpr{
																								pos:   position{line: 185, col: 21, offset: 6867},
																								label: "key",
																								expr: &actionExpr{
																									pos: position{line: 191, col: 17, offset: 7127},
																									run: (*parser).callonTitleElement246,
																									expr: &seqExpr{
																										pos: position{line: 191, col: 17, offset: 7127},
																										exprs: []interface{}{
																											&notExpr{
																												pos: position{line: 191, col: 17, offset: 7127},
																												expr: &actionExpr{
																													pos: position{line: 231, col: 14, offset: 8674},
																													run: (*parser).callonTitleElement249,
																													expr: &litMatcher{
																														pos:        position{line: 231, col: 14, offset: 8674},
																														val:        "verse",
																														ignoreCase: false,
																													},
																												},
																											},
																											&notExpr{
																												pos: position{line: 191, col: 28, offset: 7138},
																												expr: &actionExpr{
																													pos: position{line: 975, col: 16, offset: 40537},
																													run: (*parser).callonTitleElement252,
																													expr: &litMatcher{
																														pos:        position{line: 975, col: 16, offset: 40537},
																														val:        "literal",
																														ignoreCase: false,
																													},
																												},
																											},
																											&labeledExpr{
																												pos:   position{line: 191, col: 41, offset: 7151},
																												label: "key",
																												expr: &oneOrMoreExpr{
																													pos: position{line: 191, col: 45, offset: 7155},
																													expr: &seqExpr{
																														pos: position{line: 191, col: 46, offset: 7156},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 191, col: 46, offset: 7156},
																																expr: &litMatcher{
																																	pos:        position{line: 191, col: 47, offset: 7157},
																																	val:        "=",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 191, col: 51, offset: 7161},
																																expr: &litMatcher{
																																	pos:        position{line: 191, col: 52, offset: 7162},
																																	val:        ",",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 191, col: 56, offset: 7166},
																																expr: &litMatcher{
																																	pos:        position{line: 191, col: 57, offset: 7167},
																																	val:        "]",
																																	ignoreCase: false,
																																},
																															},
																															&anyMatcher{
																																line: 191, col: 61, offset: 7171,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&litMatcher{
																								pos:        position{line: 185, col: 40, offset: 6886},
																								val:        "=",
																								ignoreCase: false,
																							},
																							&labeledExpr{
																								pos:   position{line: 185, col: 44, offset: 6890},
																								label: "value",
																								expr: &actionExpr{
																									pos: position{line: 195, col: 19, offset: 7230},
																									run: (*parser).callonTitleElement266,
																									expr: &labeledExpr{
																										pos:   position{line: 195, col: 19, offset: 7230},
																										label: "value",
																										expr: &zeroOrMoreExpr{
																											pos: position{line: 195, col: 25, offset: 7236},
																											expr: &seqExpr{
																												pos: position{line: 195, col: 26, offset: 7237},
																												exprs: []interface{}{
																													&notExpr{
																														pos: position{line: 195, col: 26, offset: 7237},
																														expr: &litMatcher{
																															pos:        position{line: 195, col: 27, offset: 7238},
																															val:        "=",
																															ignoreCase: false,
																														},
																													},
																													&notExpr{
																														pos: position{line: 195, col: 31, offset: 7242},
																														expr: &litMatcher{
																															pos:        position{line: 195, col: 32, offset: 7243},
																															val:        ",",
																															ignoreCase: false,
																														},
																													},
																													&notExpr{
																														pos: position{line: 195, col: 36, offset: 7247},
																														expr: &litMatcher{
																															pos:        position{line: 195, col: 37, offset: 7248},
																															val:        "]",
																															ignoreCase: false,
																														},
																													},
																													&anyMatcher{
																														line: 195, col: 41, offset: 7252,
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&zeroOrOneExpr{
																								pos: position{line: 185, col: 67, offset: 6913},
																								expr: &litMatcher{
																									pos:        position{line: 185, col: 67, offset: 6913},
																									val:        ",",
																									ignoreCase: false,
																								},
																							},
																							&zeroOrMoreExpr{
																								pos: position{line: 185, col: 72, offset: 6918},
																								expr: &choiceExpr{
																									pos: position{line: 1024, col: 7, offset: 41621},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1024, col: 7, offset: 41621},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1024, col: 13, offset: 41627},
																											run: (*parser).callonTitleElement282,
																											expr: &litMatcher{
																												pos:        position{line: 1024, col: 13, offset: 41627},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																				&actionExpr{
																					pos: position{line: 187, col: 5, offset: 7002},
																					run: (*parser).callonTitleElement284,
																					expr: &seqExpr{
																						pos: position{line: 187, col: 5, offset: 7002},
																						exprs: []interface{}{
																							&labeledExpr{
																								pos:   position{line: 187, col: 5, offset: 7002},
																								label: "key",
																								expr: &actionExpr{
																									pos: position{line: 191, col: 17, offset: 7127},
																									run: (*parser).callonTitleElement287,
																									expr: &seqExpr{
																										pos: position{line: 191, col: 17, offset: 7127},
																										exprs: []interface{}{
																											&notExpr{
																												pos: position{line: 191, col: 17, offset: 7127},
																												expr: &actionExpr{
																													pos: position{line: 231, col: 14, offset: 8674},
																													run: (*parser).callonTitleElement290,
																													expr: &litMatcher{
																														pos:        position{line: 231, col: 14, offset: 8674},
																														val:        "verse",
																														ignoreCase: false,
																													},
																												},
																											},
																											&notExpr{
																												pos: position{line: 191, col: 28, offset: 7138},
																												expr: &actionExpr{
																													pos: position{line: 975, col: 16, offset: 40537},
																													run: (*parser).callonTitleElement293,
																													expr: &litMatcher{
																														pos:        position{line: 975, col: 16, offset: 40537},
																														val:        "literal",
																														ignoreCase: false,
																													},
																												},
																											},
																											&labeledExpr{
																												pos:   position{line: 191, col: 41, offset: 7151},
																												label: "key",
																												expr: &oneOrMoreExpr{
																													pos: position{line: 191, col: 45, offset: 7155},
																													expr: &seqExpr{
																														pos: position{line: 191, col: 46, offset: 7156},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 191, col: 46, offset: 7156},
																																expr: &litMatcher{
																																	pos:        position{line: 191, col: 47, offset: 7157},
																																	val:        "=",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 191, col: 51, offset: 7161},
																																expr: &litMatcher{
																																	pos:        position{line: 191, col: 52, offset: 7162},
																																	val:        ",",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 191, col: 56, offset: 7166},
																																expr: &litMatcher{
																																	pos:        position{line: 191, col: 57, offset: 7167},
																																	val:        "]",
																																	ignoreCase: false,
																																},
																															},
																															&anyMatcher{
																																line: 191, col: 61, offset: 7171,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&zeroOrOneExpr{
																								pos: position{line: 187, col: 24, offset: 7021},
																								expr: &litMatcher{
																									pos:        position{line: 187, col: 24, offset: 7021},
																									val:        ",",
																									ignoreCase: false,
																								},
																							},
																							&zeroOrMoreExpr{
																								pos: position{line: 187, col: 29, offset: 7026},
																								expr: &choiceExpr{
																									pos: position{line: 1024, col: 7, offset: 41621},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1024, col: 7, offset: 41621},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1024, col: 13, offset: 41627},
																											run: (*parser).callonTitleElement310,
																											expr: &litMatcher{
																												pos:        position{line: 1024, col: 13, offset: 41627},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																},
																&litMatcher{
																	pos:        position{line: 722, col: 40, offset: 30033},
																	val:        "]",
																	ignoreCase: false,
																},
															},
														},
													},
													&actionExpr{
														pos: position{line: 724, col: 9, offset: 30136},
														run: (*parser).callonTitleElement313,
														expr: &seqExpr{
															pos: position{line: 724, col: 9, offset: 30136},
															exprs: []interface{}{
																&litMatcher{
																	pos:        position{line: 724, col: 9, offset: 30136},
																	val:        "[",
																	ignoreCase: false,
																},
																&labeledExpr{
																	pos:   position{line: 724, col: 13, offset: 30140},
																	label: "alt",
																	expr: &actionExpr{
																		pos: position{line: 732, col: 19, offset: 30461},
																		run: (*parser).callonTitleElement317,
																		expr: &oneOrMoreExpr{
																			pos: position{line: 732, col: 19, offset: 30461},
																			expr: &seqExpr{
																				pos: position{line: 732, col: 20, offset: 30462},
																				exprs: []interface{}{
																					&notExpr{
																						pos: position{line: 732, col: 20, offset: 30462},
																						expr: &litMatcher{
																							pos:        position{line: 732, col: 21, offset: 30463},
																							val:        ",",
																							ignoreCase: false,
																						},
																					},
																					&notExpr{
																						pos: position{line: 732, col: 25, offset: 30467},
																						expr: &litMatcher{
																							pos:        position{line: 732, col: 26, offset: 30468},
																							val:        "=",
																							ignoreCase: false,
																						},
																					},
																					&notExpr{
																						pos: position{line: 732, col: 30, offset: 30472},
																						expr: &litMatcher{
																							pos:        position{line: 732, col: 31, offset: 30473},
																							val:        "]",
																							ignoreCase: false,
																						},
																					},
																					&anyMatcher{
																						line: 732, col: 35, offset: 30477,
																					},
																				},
																			},
																		},
																	},
																},
																&zeroOrOneExpr{
																	pos: position{line: 724, col: 34, offset: 30161},
																	expr: &litMatcher{
																		pos:        position{line: 724, col: 34, offset: 30161},
																		val:        ",",
																		ignoreCase: false,
																	},
																},
																&labeledExpr{
																	pos:   position{line: 725, col: 9, offset: 30174},
																	label: "otherAttrs",
																	expr: &zeroOrMoreExpr{
																		pos: position{line: 725, col: 20, offset: 30185},
																		expr: &choiceExpr{
																			pos: position{line: 185, col: 21, offset: 6867},
																			alternatives: []interface{}{
																				&actionExpr{
																					pos: position{line: 185, col: 21, offset: 6867},
																					run: (*parser).callonTitleElement332,
																					expr: &seqExpr{
																						pos: position{line: 185, col: 21, offset: 6867},
																						exprs: []interface{}{
																							&labeledExpr{
																								pos:   position{line: 185, col: 21, offset: 6867},
																								label: "key",
																								expr: &actionExpr{
																									pos: position{line: 191, col: 17, offset: 7127},
																									run: (*parser).callonTitleElement335,
																									expr: &seqExpr{
																										pos: position{line: 191, col: 17, offset: 7127},
																										exprs: []interface{}{
																											&notExpr{
																												pos: position{line: 191, col: 17, offset: 7127},
																												expr: &actionExpr{
																													pos: position{line: 231, col: 14, offset: 8674},
																													run: (*parser).callonTitleElement338,
																													expr: &litMatcher{
																														pos:        position{line: 231, col: 14, offset: 8674},
																														val:        "verse",
																														ignoreCase: false,
																													},
																												},
																											},
																											&notExpr{
																												pos: position{line: 191, col: 28, offset: 7138},
																												expr: &actionExpr{
																													pos: position{line: 975, col: 16, offset: 40537},
																													run: (*parser).callonTitleElement341,
																													expr: &litMatcher{
																														pos:        position{line: 975, col: 16, offset: 40537},
																														val:        "literal",
																														ignoreCase: false,
																													},
																												},
																											},
																											&labeledExpr{
																												pos:   position{line: 191, col: 41, offset: 7151},
																												label: "key",
																												expr: &oneOrMoreExpr{
																													pos: position{line: 191, col: 45, offset: 7155},
																													expr: &seqExpr{
																														pos: position{line: 191, col: 46, offset: 7156},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 191, col: 46, offset: 7156},
																																expr: &litMatcher{
																																	pos:        position{line: 191, col: 47, offset: 7157},
																																	val:        "=",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 191, col: 51, offset: 7161},
																																expr: &litMatcher{
																																	pos:        position{line: 191, col: 52, offset: 7162},
																																	val:        ",",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 191, col: 56, offset: 7166},
																																expr: &litMatcher{
																																	pos:        position{line: 191, col: 57, offset: 7167},
																																	val:        "]",
																																	ignoreCase: false,
																																},
																															},
																															&anyMatcher{
																																line: 191, col: 61, offset: 7171,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&litMatcher{
																								pos:        position{line: 185, col: 40, offset: 6886},
																								val:        "=",
																								ignoreCase: false,
																							},
																							&labeledExpr{
																								pos:   position{line: 185, col: 44, offset: 6890},
																								label: "value",
																								expr: &actionExpr{
																									pos: position{line: 195, col: 19, offset: 7230},
																									run: (*parser).callonTitleElement355,
																									expr: &labeledExpr{
																										pos:   position{line: 195, col: 19, offset: 7230},
																										label: "value",
																										expr: &zeroOrMoreExpr{
																											pos: position{line: 195, col: 25, offset: 7236},
																											expr: &seqExpr{
																												pos: position{line: 195, col: 26, offset: 7237},
																												exprs: []interface{}{
																													&notExpr{
																														pos: position{line: 195, col: 26, offset: 7237},
																														expr: &litMatcher{
																															pos:        position{line: 195, col: 27, offset: 7238},
																															val:        "=",
																															ignoreCase: false,
																														},
																													},
																													&notExpr{
																														pos: position{line: 195, col: 31, offset: 7242},
																														expr: &litMatcher{
																															pos:        position{line: 195, col: 32, offset: 7243},
																															val:        ",",
																															ignoreCase: false,
																														},
																													},
																													&notExpr{
																														pos: position{line: 195, col: 36, offset: 7247},
																														expr: &litMatcher{
																															pos:        position{line: 195, col: 37, offset: 7248},
																															val:        "]",
																															ignoreCase: false,
																														},
																													},
																													&anyMatcher{
																														line: 195, col: 41, offset: 7252,
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&zeroOrOneExpr{
																								pos: position{line: 185, col: 67, offset: 6913},
																								expr: &litMatcher{
																									pos:        position{line: 185, col: 67, offset: 6913},
																									val:        ",",
																									ignoreCase: false,
																								},
																							},
																							&zeroOrMoreExpr{
																								pos: position{line: 185, col: 72, offset: 6918},
																								expr: &choiceExpr{
																									pos: position{line: 1024, col: 7, offset: 41621},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1024, col: 7, offset: 41621},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1024, col: 13, offset: 41627},
																											run: (*parser).callonTitleElement371,
																											expr: &litMatcher{
																												pos:        position{line: 1024, col: 13, offset: 41627},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																				&actionExpr{
																					pos: position{line: 187, col: 5, offset: 7002},
																					run: (*parser).callonTitleElement373,
																					expr: &seqExpr{
																						pos: position{line: 187, col: 5, offset: 7002},
																						exprs: []interface{}{
																							&labeledExpr{
																								pos:   position{line: 187, col: 5, offset: 7002},
																								label: "key",
																								expr: &actionExpr{
																									pos: position{line: 191, col: 17, offset: 7127},
																									run: (*parser).callonTitleElement376,
																									expr: &seqExpr{
																										pos: position{line: 191, col: 17, offset: 7127},
																										exprs: []interface{}{
																											&notExpr{
																												pos: position{line: 191, col: 17, offset: 7127},
																												expr: &actionExpr{
																													pos: position{line: 231, col: 14, offset: 8674},
																													run: (*parser).callonTitleElement379,
																													expr: &litMatcher{
																														pos:        position{line: 231, col: 14, offset: 8674},
																														val:        "verse",
																														ignoreCase: false,
																													},
																												},
																											},
																											&notExpr{
																												pos: position{line: 191, col: 28, offset: 7138},
																												expr: &actionExpr{
																													pos: position{line: 975, col: 16, offset: 40537},
																													run: (*parser).callonTitleElement382,
																													expr: &litMatcher{
																														pos:        position{line: 975, col: 16, offset: 40537},
																														val:        "literal",
																														ignoreCase: false,
																													},
																												},
																											},
																											&labeledExpr{
																												pos:   position{line: 191, col: 41, offset: 7151},
																												label: "key",
																												expr: &oneOrMoreExpr{
																													pos: position{line: 191, col: 45, offset: 7155},
																													expr: &seqExpr{
																														pos: position{line: 191, col: 46, offset: 7156},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 191, col: 46, offset: 7156},
																																expr: &litMatcher{
																																	pos:        position{line: 191, col: 47, offset: 7157},
																																	val:        "=",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 191, col: 51, offset: 7161},
																																expr: &litMatcher{
																																	pos:        position{line: 191, col: 52, offset: 7162},
																																	val:        ",",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 191, col: 56, offset: 7166},
																																expr: &litMatcher{
																																	pos:        position{line: 191, col: 57, offset: 7167},
																																	val:        "]",
																																	ignoreCase: false,
																																},
																															},
																															&anyMatcher{
																																line: 191, col: 61, offset: 7171,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&zeroOrOneExpr{
																								pos: position{line: 187, col: 24, offset: 7021},
																								expr: &litMatcher{
																									pos:        position{line: 187, col: 24, offset: 7021},
																									val:        ",",
																									ignoreCase: false,
																								},
																							},
																							&zeroOrMoreExpr{
																								pos: position{line: 187, col: 29, offset: 7026},
																								expr: &choiceExpr{
																									pos: position{line: 1024, col: 7, offset: 41621},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1024, col: 7, offset: 41621},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1024, col: 13, offset: 41627},
																											run: (*parser).callonTitleElement399,
																											expr: &litMatcher{
																												pos:        position{line: 1024, col: 13, offset: 41627},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																},
																&litMatcher{
																	pos:        position{line: 725, col: 40, offset: 30205},
																	val:        "]",
																	ignoreCase: false,
																},
															},
														},
													},
													&actionExpr{
														pos: position{line: 727, col: 9, offset: 30306},
														run: (*parser).callonTitleElement402,
														expr: &seqExpr{
															pos: position{line: 727, col: 9, offset: 30306},
															exprs: []interface{}{
																&litMatcher{
																	pos:        position{line: 727, col: 9, offset: 30306},
																	val:        "[",
																	ignoreCase: false,
																},
																&labeledExpr{
																	pos:   position{line: 727, col: 13, offset: 30310},
																	label: "otherAttrs",
																	expr: &zeroOrMoreExpr{
																		pos: position{line: 727, col: 24, offset: 30321},
																		expr: &choiceExpr{
																			pos: position{line: 185, col: 21, offset: 6867},
																			alternatives: []interface{}{
																				&actionExpr{
																					pos: position{line: 185, col: 21, offset: 6867},
																					run: (*parser).callonTitleElement408,
																					expr: &seqExpr{
																						pos: position{line: 185, col: 21, offset: 6867},
																						exprs: []interface{}{
																							&labeledExpr{
																								pos:   position{line: 185, col: 21, offset: 6867},
																								label: "key",
																								expr: &actionExpr{
																									pos: position{line: 191, col: 17, offset: 7127},
																									run: (*parser).callonTitleElement411,
																									expr: &seqExpr{
																										pos: position{line: 191, col: 17, offset: 7127},
																										exprs: []interface{}{
																											&notExpr{
																												pos: position{line: 191, col: 17, offset: 7127},
																												expr: &actionExpr{
																													pos: position{line: 231, col: 14, offset: 8674},
																													run: (*parser).callonTitleElement414,
																													expr: &litMatcher{
																														pos:        position{line: 231, col: 14, offset: 8674},
																														val:        "verse",
																														ignoreCase: false,
																													},
																												},
																											},
																											&notExpr{
																												pos: position{line: 191, col: 28, offset: 7138},
																												expr: &actionExpr{
																													pos: position{line: 975, col: 16, offset: 40537},
																													run: (*parser).callonTitleElement417,
																													expr: &litMatcher{
																														pos:        position{line: 975, col: 16, offset: 40537},
																														val:        "literal",
																														ignoreCase: false,
																													},
																												},
																											},
																											&labeledExpr{
																												pos:   position{line: 191, col: 41, offset: 7151},
																												label: "key",
																												expr: &oneOrMoreExpr{
																													pos: position{line: 191, col: 45, offset: 7155},
																													expr: &seqExpr{
																														pos: position{line: 191, col: 46, offset: 7156},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 191, col: 46, offset: 7156},
																																expr: &litMatcher{
																																	pos:        position{line: 191, col: 47, offset: 7157},
																																	val:        "=",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 191, col: 51, offset: 7161},
																																expr: &litMatcher{
																																	pos:        position{line: 191, col: 52, offset: 7162},
																																	val:        ",",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 191, col: 56, offset: 7166},
																																expr: &litMatcher{
																																	pos:        position{line: 191, col: 57, offset: 7167},
																																	val:        "]",
																																	ignoreCase: false,
																																},
																															},
																															&anyMatcher{
																																line: 191, col: 61, offset: 7171,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&litMatcher{
																								pos:        position{line: 185, col: 40, offset: 6886},
																								val:        "=",
																								ignoreCase: false,
																							},
																							&labeledExpr{
																								pos:   position{line: 185, col: 44, offset: 6890},
																								label: "value",
																								expr: &actionExpr{
																									pos: position{line: 195, col: 19, offset: 7230},
																									run: (*parser).callonTitleElement431,
																									expr: &labeledExpr{
																										pos:   position{line: 195, col: 19, offset: 7230},
																										label: "value",
																										expr: &zeroOrMoreExpr{
																											pos: position{line: 195, col: 25, offset: 7236},
																											expr: &seqExpr{
																												pos: position{line: 195, col: 26, offset: 7237},
																												exprs: []interface{}{
																													&notExpr{
																														pos: position{line: 195, col: 26, offset: 7237},
																														expr: &litMatcher{
																															pos:        position{line: 195, col: 27, offset: 7238},
																															val:        "=",
																															ignoreCase: false,
																														},
																													},
																													&notExpr{
																														pos: position{line: 195, col: 31, offset: 7242},
																														expr: &litMatcher{
																															pos:        position{line: 195, col: 32, offset: 7243},
																															val:        ",",
																															ignoreCase: false,
																														},
																													},
																													&notExpr{
																														pos: position{line: 195, col: 36, offset: 7247},
																														expr: &litMatcher{
																															pos:        position{line: 195, col: 37, offset: 7248},
																															val:        "]",
																															ignoreCase: false,
																														},
																													},
																													&anyMatcher{
																														line: 195, col: 41, offset: 7252,
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&zeroOrOneExpr{
																								pos: position{line: 185, col: 67, offset: 6913},
																								expr: &litMatcher{
																									pos:        position{line: 185, col: 67, offset: 6913},
																									val:        ",",
																									ignoreCase: false,
																								},
																							},
																							&zeroOrMoreExpr{
																								pos: position{line: 185, col: 72, offset: 6918},
																								expr: &choiceExpr{
																									pos: position{line: 1024, col: 7, offset: 41621},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1024, col: 7, offset: 41621},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1024, col: 13, offset: 41627},
																											run: (*parser).callonTitleElement447,
																											expr: &litMatcher{
																												pos:        position{line: 1024, col: 13, offset: 41627},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																				&actionExpr{
																					pos: position{line: 187, col: 5, offset: 7002},
																					run: (*parser).callonTitleElement449,
																					expr: &seqExpr{
																						pos: position{line: 187, col: 5, offset: 7002},
																						exprs: []interface{}{
																							&labeledExpr{
																								pos:   position{line: 187, col: 5, offset: 7002},
																								label: "key",
																								expr: &actionExpr{
																									pos: position{line: 191, col: 17, offset: 7127},
																									run: (*parser).callonTitleElement452,
																									expr: &seqExpr{
																										pos: position{line: 191, col: 17, offset: 7127},
																										exprs: []interface{}{
																											&notExpr{
																												pos: position{line: 191, col: 17, offset: 7127},
																												expr: &actionExpr{
																													pos: position{line: 231, col: 14, offset: 8674},
																													run: (*parser).callonTitleElement455,
																													expr: &litMatcher{
																														pos:        position{line: 231, col: 14, offset: 8674},
																														val:        "verse",
																														ignoreCase: false,
																													},
																												},
																											},
																											&notExpr{
																												pos: position{line: 191, col: 28, offset: 7138},
																												expr: &actionExpr{
																													pos: position{line: 975, col: 16, offset: 40537},
																													run: (*parser).callonTitleElement458,
																													expr: &litMatcher{
																														pos:        position{line: 975, col: 16, offset: 40537},
																														val:        "literal",
																														ignoreCase: false,
																													},
																												},
																											},
																											&labeledExpr{
																												pos:   position{line: 191, col: 41, offset: 7151},
																												label: "key",
																												expr: &oneOrMoreExpr{
																													pos: position{line: 191, col: 45, offset: 7155},
																													expr: &seqExpr{
																														pos: position{line: 191, col: 46, offset: 7156},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 191, col: 46, offset: 7156},
																																expr: &litMatcher{
																																	pos:        position{line: 191, col: 47, offset: 7157},
																																	val:        "=",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 191, col: 51, offset: 7161},
																																expr: &litMatcher{
																																	pos:        position{line: 191, col: 52, offset: 7162},
																																	val:        ",",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 191, col: 56, offset: 7166},
																																expr: &litMatcher{
																																	pos:        position{line: 191, col: 57, offset: 7167},
																																	val:        "]",
																																	ignoreCase: false,
																																},
																															},
																															&anyMatcher{
																																line: 191, col: 61, offset: 7171,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&zeroOrOneExpr{
																								pos: position{line: 187, col: 24, offset: 7021},
																								expr: &litMatcher{
																									pos:        position{line: 187, col: 24, offset: 7021},
																									val:        ",",
																									ignoreCase: false,
																								},
																							},
																							&zeroOrMoreExpr{
																								pos: position{line: 187, col: 29, offset: 7026},
																								expr: &choiceExpr{
																									pos: position{line: 1024, col: 7, offset: 41621},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1024, col: 7, offset: 41621},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1024, col: 13, offset: 41627},
																											run: (*parser).callonTitleElement475,
																											expr: &litMatcher{
																												pos:        position{line: 1024, col: 13, offset: 41627},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																},
																&litMatcher{
																	pos:        position{line: 727, col: 44, offset: 30341},
																	val:        "]",
																	ignoreCase: false,
																},
															},
														},
													},
												},
											},
										},
									},
								},
							},
							&ruleRefExpr{
								pos:  position{line: 359, col: 71, offset: 13539},
								name: "QuotedText",
							},
							&actionExpr{
								pos: position{line: 669, col: 9, offset: 28069},
								run: (*parser).callonTitleElement479,
								expr: &labeledExpr{
									pos:   position{line: 669, col: 9, offset: 28069},
									label: "link",
									expr: &choiceExpr{
										pos: position{line: 669, col: 15, offset: 28075},
										alternatives: []interface{}{
											&actionExpr{
												pos: position{line: 684, col: 17, offset: 28503},
												run: (*parser).callonTitleElement482,
												expr: &seqExpr{
													pos: position{line: 684, col: 17, offset: 28503},
													exprs: []interface{}{
														&litMatcher{
															pos:        position{line: 684, col: 17, offset: 28503},
															val:        "link:",
															ignoreCase: false,
														},
														&labeledExpr{
															pos:   position{line: 684, col: 25, offset: 28511},
															label: "url",
															expr: &actionExpr{
																pos: position{line: 688, col: 20, offset: 28662},
																run: (*parser).callonTitleElement486,
																expr: &seqExpr{
																	pos: position{line: 688, col: 20, offset: 28662},
																	exprs: []interface{}{
																		&zeroOrOneExpr{
																			pos: position{line: 688, col: 20, offset: 28662},
																			expr: &choiceExpr{
																				pos: position{line: 1018, col: 15, offset: 41506},
																				alternatives: []interface{}{
																					&litMatcher{
																						pos:        position{line: 1018, col: 15, offset: 41506},
																						val:        "http://",
																						ignoreCase: false,
																					},
																					&litMatcher{
																						pos:        position{line: 1018, col: 27, offset: 41518},
																						val:        "https://",
																						ignoreCase: false,
																					},
																					&litMatcher{
																						pos:        position{line: 1018, col: 40, offset: 41531},
																						val:        "ftp://",
																						ignoreCase: false,
																					},
																					&litMatcher{
																						pos:        position{line: 1018, col: 51, offset: 41542},
																						val:        "irc://",
																						ignoreCase: false,
																					},
																					&litMatcher{
																						pos:        position{line: 1018, col: 62, offset: 41553},
																						val:        "mailto:",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																		&actionExpr{
																			pos: position{line: 1006, col: 8, offset: 41269},
																			run: (*parser).callonTitleElement495,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 1006, col: 8, offset: 41269},
																				expr: &seqExpr{
																					pos: position{line: 1006, col: 9, offset: 41270},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 1006, col: 9, offset: 41270},
																							expr: &choiceExpr{
																								pos: position{line: 1028, col: 12, offset: 41683},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1028, col: 12, offset: 41683},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 1028, col: 21, offset: 41692},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 1006, col: 18, offset: 41279},
																							expr: &choiceExpr{
																								pos: position{line: 1024, col: 7, offset: 41621},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1024, col: 7, offset: 41621},
																										val:        " ",
																										ignoreCase: false,
																									},
																									&actionExpr{
																										pos: position{line: 1024, col: 13, offset: 41627},
																										run: (*parser).callonTitleElement505,
																										expr: &litMatcher{
																											pos:        position{line: 1024, col: 13, offset: 41627},
																											val:        "\t",
																											ignoreCase: false,
																										},
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 1006, col: 22, offset: 41283},
																							expr: &litMatcher{
																								pos:        position{line: 1006, col: 23, offset: 41284},
																								val:        "[",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 1006, col: 27, offset: 41288},
																							expr: &litMatcher{
																								pos:        position{line: 1006, col: 28, offset: 41289},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																						&anyMatcher{
																							line: 1006, col: 32, offset: 41293,
																						},
																					},
																				},
																			},
																		},
																	},
																},
															},
														},
														&labeledExpr{
															pos:   position{line: 684, col: 47, offset: 28533},
															label: "attributes",
															expr: &choiceExpr{
																pos: position{line: 692, col: 19, offset: 28732},
																alternatives: []interface{}{
																	&actionExpr{
																		pos: position{line: 692, col: 19, offset: 28732},
																		run: (*parser).callonTitleElement514,
																		expr: &seqExpr{
																			pos: position{line: 692, col: 19, offset: 28732},
																			exprs: []interface{}{
																				&litMatcher{
																					pos:        position{line: 692, col: 19, offset: 28732},
																					val:        "[",
																					ignoreCase: false,
																				},
																				&labeledExpr{
																					pos:   position{line: 692, col: 23, offset: 28736},
																					label: "text",
																					expr: &actionExpr{
																						pos: position{line: 699, col: 22, offset: 29012},
																						run: (*parser).callonTitleElement518,
																						expr: &oneOrMoreExpr{
																							pos: position{line: 699, col: 22, offset: 29012},
																							expr: &seqExpr{
																								pos: position{line: 699, col: 23, offset: 29013},
																								exprs: []interface{}{
																									&notExpr{
																										pos: position{line: 699, col: 23, offset: 29013},
																										expr: &litMatcher{
																											pos:        position{line: 699, col: 24, offset: 29014},
																											val:        ",",
																											ignoreCase: false,
																										},
																									},
																									&notExpr{
																										pos: position{line: 699, col: 28, offset: 29018},
																										expr: &litMatcher{
																											pos:        position{line: 699, col: 29, offset: 29019},
																											val:        "]",
																											ignoreCase: false,
																										},
																									},
																									&anyMatcher{
																										line: 699, col: 33, offset: 29023,
																									},
																								},
																							},
																						},
																					},
																				},
																				&labeledExpr{
																					pos:   position{line: 693, col: 9, offset: 28769},
																					label: "otherAttrs",
																					expr: &zeroOrMoreExpr{
																						pos: position{line: 693, col: 20, offset: 28780},
																						expr: &choiceExpr{
																							pos: position{line: 185, col: 21, offset: 6867},
																							alternatives: []interface{}{
																								&actionExpr{
																									pos: position{line: 185, col: 21, offset: 6867},
																									run: (*parser).callonTitleElement529,
																									expr: &seqExpr{
																										pos: position{line: 185, col: 21, offset: 6867},
																										exprs: []interface{}{
																											&labeledExpr{
																												pos:   position{line: 185, col: 21, offset: 6867},
																												label: "key",
																												expr: &actionExpr{
																													pos: position{line: 191, col: 17, offset: 7127},
																													run: (*parser).callonTitleElement532,
																													expr: &seqExpr{
																														pos: position{line: 191, col: 17, offset: 7127},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 191, col: 17, offset: 7127},
																																expr: &actionExpr{
																																	pos: position{line: 231, col: 14, offset: 8674},
																																	run: (*parser).callonTitleElement535,
																																	expr: &litMatcher{
																																		pos:        position{line: 231, col: 14, offset: 8674},
																																		val:        "verse",
																																		ignoreCase: false,
																																	},
																																},
																															},
																															&notExpr{
																																pos: position{line: 191, col: 28, offset: 7138},
																																expr: &actionExpr{
																																	pos: position{line: 975, col: 16, offset: 40537},
																																	run: (*parser).callonTitleElement538,
																																	expr: &litMatcher{
																																		pos:        position{line: 975, col: 16, offset: 40537},
																																		val:        "literal",
																																		ignoreCase: false,
																																	},
																																},
																															},
																															&labeledExpr{
																																pos:   position{line: 191, col: 41, offset: 7151},
																																label: "key",
																																expr: &oneOrMoreExpr{
																																	pos: position{line: 191, col: 45, offset: 7155},
																																	expr: &seqExpr{
																																		pos: position{line: 191, col: 46, offset: 7156},
																																		exprs: []interface{}{
																																			&notExpr{
																																				pos: position{line: 191, col: 46, offset: 7156},
																																				expr: &litMatcher{
																																					pos:        position{line: 191, col: 47, offset: 7157},
																																					val:        "=",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 191, col: 51, offset: 7161},
																																				expr: &litMatcher{
																																					pos:        position{line: 191, col: 52, offset: 7162},
																																					val:        ",",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 191, col: 56, offset: 7166},
																																				expr: &litMatcher{
																																					pos:        position{line: 191, col: 57, offset: 7167},
																																					val:        "]",
																																					ignoreCase: false,
																																				},
																																			},
																																			&anyMatcher{
																																				line: 191, col: 61, offset: 7171,
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																											&litMatcher{
																												pos:        position{line: 185, col: 40, offset: 6886},
																												val:        "=",
																												ignoreCase: false,
																											},
																											&labeledExpr{
																												pos:   position{line: 185, col: 44, offset: 6890},
																												label: "value",
																												expr: &actionExpr{
																													pos: position{line: 195, col: 19, offset: 7230},
																													run: (*parser).callonTitleElement552,
																													expr: &labeledExpr{
																														pos:   position{line: 195, col: 19, offset: 7230},
																														label: "value",
																														expr: &zeroOrMoreExpr{
																															pos: position{line: 195, col: 25, offset: 7236},
																															expr: &seqExpr{
																																pos: position{line: 195, col: 26, offset: 7237},
																																exprs: []interface{}{
																																	&notExpr{
																																		pos: position{line: 195, col: 26, offset: 7237},
																																		expr: &litMatcher{
																																			pos:        position{line: 195, col: 27, offset: 7238},
																																			val:        "=",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 195, col: 31, offset: 7242},
																																		expr: &litMatcher{
																																			pos:        position{line: 195, col: 32, offset: 7243},
																																			val:        ",",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 195, col: 36, offset: 7247},
																																		expr: &litMatcher{
																																			pos:        position{line: 195, col: 37, offset: 7248},
																																			val:        "]",
																																			ignoreCase: false,
																																		},
																																	},
																																	&anyMatcher{
																																		line: 195, col: 41, offset: 7252,
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																											&zeroOrOneExpr{
																												pos: position{line: 185, col: 67, offset: 6913},
																												expr: &litMatcher{
																													pos:        position{line: 185, col: 67, offset: 6913},
																													val:        ",",
																													ignoreCase: false,
																												},
																											},
																											&zeroOrMoreExpr{
																												pos: position{line: 185, col: 72, offset: 6918},
																												expr: &choiceExpr{
																													pos: position{line: 1024, col: 7, offset: 41621},
																													alternatives: []interface{}{
																														&litMatcher{
																															pos:        position{line: 1024, col: 7, offset: 41621},
																															val:        " ",
																															ignoreCase: false,
																														},
																														&actionExpr{
																															pos: position{line: 1024, col: 13, offset: 41627},
																															run: (*parser).callonTitleElement568,
																															expr: &litMatcher{
																																pos:        position{line: 1024, col: 13, offset: 41627},
																																val:        "\t",
																																ignoreCase: false,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&actionExpr{
																									pos: position{line: 187, col: 5, offset: 7002},
																									run: (*parser).callonTitleElement570,
																									expr: &seqExpr{
																										pos: position{line: 187, col: 5, offset: 7002},
																										exprs: []interface{}{
																											&labeledExpr{
																												pos:   position{line: 187, col: 5, offset: 7002},
																												label: "key",
																												expr: &actionExpr{
																													pos: position{line: 191, col: 17, offset: 7127},
																													run: (*parser).callonTitleElement573,
																													expr: &seqExpr{
																														pos: position{line: 191, col: 17, offset: 7127},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 191, col: 17, offset: 7127},
																																expr: &actionExpr{
																																	pos: position{line: 231, col: 14, offset: 8674},
																																	run: (*parser).callonTitleElement576,
																																	expr: &litMatcher{
																																		pos:        position{line: 231, col: 14, offset: 8674},
																																		val:        "verse",
																																		ignoreCase: false,
																																	},
																																},
																															},
																															&notExpr{
																																pos: position{line: 191, col: 28, offset: 7138},
																																expr: &actionExpr{
																																	pos: position{line: 975, col: 16, offset: 40537},
																																	run: (*parser).callonTitleElement579,
																																	expr: &litMatcher{
																																		pos:        position{line: 975, col: 16, offset: 40537},
																																		val:        "literal",
																																		ignoreCase: false,
																																	},
																																},
																															},
																															&labeledExpr{
																																pos:   position{line: 191, col: 41, offset: 7151},
																																label: "key",
																																expr: &oneOrMoreExpr{
																																	pos: position{line: 191, col: 45, offset: 7155},
																																	expr: &seqExpr{
																																		pos: position{line: 191, col: 46, offset: 7156},
																																		exprs: []interface{}{
																																			&notExpr{
																																				pos: position{line: 191, col: 46, offset: 7156},
																																				expr: &litMatcher{
																																					pos:        position{line: 191, col: 47, offset: 7157},
																																					val:        "=",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 191, col: 51, offset: 7161},
																																				expr: &litMatcher{
																																					pos:        position{line: 191, col: 52, offset: 7162},
																																					val:        ",",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 191, col: 56, offset: 7166},
																																				expr: &litMatcher{
																																					pos:        position{line: 191, col: 57, offset: 7167},
																																					val:        "]",
																																					ignoreCase: false,
																																				},
																																			},
																																			&anyMatcher{
																																				line: 191, col: 61, offset: 7171,
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																											&zeroOrOneExpr{
																												pos: position{line: 187, col: 24, offset: 7021},
																												expr: &litMatcher{
																													pos:        position{line: 187, col: 24, offset: 7021},
																													val:        ",",
																													ignoreCase: false,
																												},
																											},
																											&zeroOrMoreExpr{
																												pos: position{line: 187, col: 29, offset: 7026},
																												expr: &choiceExpr{
																													pos: position{line: 1024, col: 7, offset: 41621},
																													alternatives: []interface{}{
																														&litMatcher{
																															pos:        position{line: 1024, col: 7, offset: 41621},
																															val:        " ",
																															ignoreCase: false,
																														},
																														&actionExpr{
																															pos: position{line: 1024, col: 13, offset: 41627},
																															run: (*parser).callonTitleElement596,
																															expr: &litMatcher{
																																pos:        position{line: 1024, col: 13, offset: 41627},
																																val:        "\t",
																																ignoreCase: false,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																				&litMatcher{
																					pos:        position{line: 693, col: 40, offset: 28800},
																					val:        "]",
																					ignoreCase: false,
																				},
																			},
																		},
																	},
																	&actionExpr{
																		pos: position{line: 695, col: 5, offset: 28879},
																		run: (*parser).callonTitleElement599,
																		expr: &seqExpr{
																			pos: position{line: 695, col: 5, offset: 28879},
																			exprs: []interface{}{
																				&litMatcher{
																					pos:        position{line: 695, col: 5, offset: 28879},
																					val:        "[",
																					ignoreCase: false,
																				},
																				&labeledExpr{
																					pos:   position{line: 695, col: 9, offset: 28883},
																					label: "otherAttrs",
																					expr: &zeroOrMoreExpr{
																						pos: position{line: 695, col: 20, offset: 28894},
																						expr: &choiceExpr{
																							pos: position{line: 185, col: 21, offset: 6867},
																							alternatives: []interface{}{
																								&actionExpr{
																									pos: position{line: 185, col: 21, offset: 6867},
																									run: (*parser).callonTitleElement605,
																									expr: &seqExpr{
																										pos: position{line: 185, col: 21, offset: 6867},
																										exprs: []interface{}{
																											&labeledExpr{
																												pos:   position{line: 185, col: 21, offset: 6867},
																												label: "key",
																												expr: &actionExpr{
																													pos: position{line: 191, col: 17, offset: 7127},
																													run: (*parser).callonTitleElement608,
																													expr: &seqExpr{
																														pos: position{line: 191, col: 17, offset: 7127},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 191, col: 17, offset: 7127},
																																expr: &actionExpr{
																																	pos: position{line: 231, col: 14, offset: 8674},
																																	run: (*parser).callonTitleElement611,
																																	expr: &litMatcher{
																																		pos:        position{line: 231, col: 14, offset: 8674},
																																		val:        "verse",
																																		ignoreCase: false,
																																	},
																																},
																															},
																															&notExpr{
																																pos: position{line: 191, col: 28, offset: 7138},
																																expr: &actionExpr{
																																	pos: position{line: 975, col: 16, offset: 40537},
																																	run: (*parser).callonTitleElement614,
																																	expr: &litMatcher{
																																		pos:        position{line: 975, col: 16, offset: 40537},
																																		val:        "literal",
																																		ignoreCase: false,
																																	},
																																},
																															},
																															&labeledExpr{
																																pos:   position{line: 191, col: 41, offset: 7151},
																																label: "key",
																																expr: &oneOrMoreExpr{
																																	pos: position{line: 191, col: 45, offset: 7155},
																																	expr: &seqExpr{
																																		pos: position{line: 191, col: 46, offset: 7156},
																																		exprs: []interface{}{
																																			&notExpr{
																																				pos: position{line: 191, col: 46, offset: 7156},
																																				expr: &litMatcher{
																																					pos:        position{line: 191, col: 47, offset: 7157},
																																					val:        "=",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 191, col: 51, offset: 7161},
																																				expr: &litMatcher{
																																					pos:        position{line: 191, col: 52, offset: 7162},
																																					val:        ",",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 191, col: 56, offset: 7166},
																																				expr: &litMatcher{
																																					pos:        position{line: 191, col: 57, offset: 7167},
																																					val:        "]",
																																					ignoreCase: false,
																																				},
																																			},
																																			&anyMatcher{
																																				line: 191, col: 61, offset: 7171,
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																											&litMatcher{
																												pos:        position{line: 185, col: 40, offset: 6886},
																												val:        "=",
																												ignoreCase: false,
																											},
																											&labeledExpr{
																												pos:   position{line: 185, col: 44, offset: 6890},
																												label: "value",
																												expr: &actionExpr{
																													pos: position{line: 195, col: 19, offset: 7230},
																													run: (*parser).callonTitleElement628,
																													expr: &labeledExpr{
																														pos:   position{line: 195, col: 19, offset: 7230},
																														label: "value",
																														expr: &zeroOrMoreExpr{
																															pos: position{line: 195, col: 25, offset: 7236},
																															expr: &seqExpr{
																																pos: position{line: 195, col: 26, offset: 7237},
																																exprs: []interface{}{
																																	&notExpr{
																																		pos: position{line: 195, col: 26, offset: 7237},
																																		expr: &litMatcher{
																																			pos:        position{line: 195, col: 27, offset: 7238},
																																			val:        "=",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 195, col: 31, offset: 7242},
																																		expr: &litMatcher{
																																			pos:        position{line: 195, col: 32, offset: 7243},
																																			val:        ",",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 195, col: 36, offset: 7247},
																																		expr: &litMatcher{
																																			pos:        position{line: 195, col: 37, offset: 7248},
																																			val:        "]",
																																			ignoreCase: false,
																																		},
																																	},
																																	&anyMatcher{
																																		line: 195, col: 41, offset: 7252,
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																											&zeroOrOneExpr{
																												pos: position{line: 185, col: 67, offset: 6913},
																												expr: &litMatcher{
																													pos:        position{line: 185, col: 67, offset: 6913},
																													val:        ",",
																													ignoreCase: false,
																												},
																											},
																											&zeroOrMoreExpr{
																												pos: position{line: 185, col: 72, offset: 6918},
																												expr: &choiceExpr{
																													pos: position{line: 1024, col: 7, offset: 41621},
																													alternatives: []interface{}{
																														&litMatcher{
																															pos:        position{line: 1024, col: 7, offset: 41621},
																															val:        " ",
																															ignoreCase: false,
																														},
																														&actionExpr{
																															pos: position{line: 1024, col: 13, offset: 41627},
																															run: (*parser).callonTitleElement644,
																															expr: &litMatcher{
																																pos:        position{line: 1024, col: 13, offset: 41627},
																																val:        "\t",
																																ignoreCase: false,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&actionExpr{
																									pos: position{line: 187, col: 5, offset: 7002},
																									run: (*parser).callonTitleElement646,
																									expr: &seqExpr{
																										pos: position{line: 187, col: 5, offset: 7002},
																										exprs: []interface{}{
																											&labeledExpr{
																												pos:   position{line: 187, col: 5, offset: 7002},
																												label: "key",
																												expr: &actionExpr{
																													pos: position{line: 191, col: 17, offset: 7127},
																													run: (*parser).callonTitleElement649,
																													expr: &seqExpr{
																														pos: position{line: 191, col: 17, offset: 7127},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 191, col: 17, offset: 7127},
																																expr: &actionExpr{
																																	pos: position{line: 231, col: 14, offset: 8674},
																																	run: (*parser).callonTitleElement652,
																																	expr: &litMatcher{
																																		pos:        position{line: 231, col: 14, offset: 8674},
																																		val:        "verse",
																																		ignoreCase: false,
																																	},
																																},
																															},
																															&notExpr{
																																pos: position{line: 191, col: 28, offset: 7138},
																																expr: &actionExpr{
																																	pos: position{line: 975, col: 16, offset: 40537},
																																	run: (*parser).callonTitleElement655,
																																	expr: &litMatcher{
																																		pos:        position{line: 975, col: 16, offset: 40537},
																																		val:        "literal",
																																		ignoreCase: false,
																																	},
																																},
																															},
																															&labeledExpr{
																																pos:   position{line: 191, col: 41, offset: 7151},
																																label: "key",
																																expr: &oneOrMoreExpr{
																																	pos: position{line: 191, col: 45, offset: 7155},
																																	expr: &seqExpr{
																																		pos: position{line: 191, col: 46, offset: 7156},
																																		exprs: []interface{}{
																																			&notExpr{
																																				pos: position{line: 191, col: 46, offset: 7156},
																																				expr: &litMatcher{
																																					pos:        position{line: 191, col: 47, offset: 7157},
																																					val:        "=",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 191, col: 51, offset: 7161},
																																				expr: &litMatcher{
																																					pos:        position{line: 191, col: 52, offset: 7162},
																																					val:        ",",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 191, col: 56, offset: 7166},
																																				expr: &litMatcher{
																																					pos:        position{line: 191, col: 57, offset: 7167},
																																					val:        "]",
																																					ignoreCase: false,
																																				},
																																			},
																																			&anyMatcher{
																																				line: 191, col: 61, offset: 7171,
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																											&zeroOrOneExpr{
																												pos: position{line: 187, col: 24, offset: 7021},
																												expr: &litMatcher{
																													pos:        position{line: 187, col: 24, offset: 7021},
																													val:        ",",
																													ignoreCase: false,
																												},
																											},
																											&zeroOrMoreExpr{
																												pos: position{line: 187, col: 29, offset: 7026},
																												expr: &choiceExpr{
																													pos: position{line: 1024, col: 7, offset: 41621},
																													alternatives: []interface{}{
																														&litMatcher{
																															pos:        position{line: 1024, col: 7, offset: 41621},
																															val:        " ",
																															ignoreCase: false,
																														},
																														&actionExpr{
																															pos: position{line: 1024, col: 13, offset: 41627},
																															run: (*parser).callonTitleElement672,
																															expr: &litMatcher{
																																pos:        position{line: 1024, col: 13, offset: 41627},
																																val:        "\t",
																																ignoreCase: false,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																				&litMatcher{
																					pos:        position{line: 695, col: 40, offset: 28914},
																					val:        "]",
																					ignoreCase: false,
																				},
																			},
																		},
																	},
																},
															},
														},
													},
												},
											},
											&actionExpr{
												pos: position{line: 673, col: 17, offset: 28146},
												run: (*parser).callonTitleElement675,
												expr: &seqExpr{
													pos: position{line: 673, col: 17, offset: 28146},
													exprs: []interface{}{
														&labeledExpr{
															pos:   position{line: 673, col: 17, offset: 28146},
															label: "url",
															expr: &actionExpr{
																pos: position{line: 679, col: 20, offset: 28369},
																run: (*parser).callonTitleElement678,
																expr: &seqExpr{
																	pos: position{line: 679, col: 20, offset: 28369},
																	exprs: []interface{}{
																		&choiceExpr{
																			pos: position{line: 1018, col: 15, offset: 41506},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1018, col: 15, offset: 41506},
																					val:        "http://",
																					ignoreCase: false,
																				},
																				&litMatcher{
																					pos:        position{line: 1018, col: 27, offset: 41518},
																					val:        "https://",
																					ignoreCase: false,
																				},
																				&litMatcher{
																					pos:        position{line: 1018, col: 40, offset: 41531},
																					val:        "ftp://",
																					ignoreCase: false,
																				},
																				&litMatcher{
																					pos:        position{line: 1018, col: 51, offset: 41542},
																					val:        "irc://",
																					ignoreCase: false,
																				},
																				&litMatcher{
																					pos:        position{line: 1018, col: 62, offset: 41553},
																					val:        "mailto:",
																					ignoreCase: false,
																				},
																			},
																		},
																		&actionExpr{
																			pos: position{line: 1006, col: 8, offset: 41269},
																			run: (*parser).callonTitleElement686,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 1006, col: 8, offset: 41269},
																				expr: &seqExpr{
																					pos: position{line: 1006, col: 9, offset: 41270},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 1006, col: 9, offset: 41270},
																							expr: &choiceExpr{
																								pos: position{line: 1028, col: 12, offset: 41683},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1028, col: 12, offset: 41683},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 1028, col: 21, offset: 41692},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 1006, col: 18, offset: 41279},
																							expr: &choiceExpr{
																								pos: position{line: 1024, col: 7, offset: 41621},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1024, col: 7, offset: 41621},
																										val:        " ",
																										ignoreCase: false,
																									},
																									&actionExpr{
																										pos: position{line: 1024, col: 13, offset: 41627},
																										run: (*parser).callonTitleElement696,
																										expr: &litMatcher{
																											pos:        position{line: 1024, col: 13, offset: 41627},
																											val:        "\t",
																											ignoreCase: false,
																										},
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 1006, col: 22, offset: 41283},
																							expr: &litMatcher{
																								pos:        position{line: 1006, col: 23, offset: 41284},
																								val:        "[",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 1006, col: 27, offset: 41288},
																							expr: &litMatcher{
																								pos:        position{line: 1006, col: 28, offset: 41289},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																						&anyMatcher{
																							line: 1006, col: 32, offset: 41293,
																						},
																					},
																				},
																			},
																		},
																	},
																},
															},
														},
														&labeledExpr{
															pos:   position{line: 673, col: 39, offset: 28168},
															label: "attributes",
															expr: &choiceExpr{
																pos: position{line: 692, col: 19, offset: 28732},
																alternatives: []interface{}{
																	&actionExpr{
																		pos: position{line: 692, col: 19, offset: 28732},
																		run: (*parser).callonTitleElement705,
																		expr: &seqExpr{
																			pos: position{line: 692, col: 19, offset: 28732},
																			exprs: []interface{}{
																				&litMatcher{
																					pos:        position{line: 692, col: 19, offset: 28732},
																					val:        "[",
																					ignoreCase: false,
																				},
																				&labeledExpr{
																					pos:   position{line: 692, col: 23, offset: 28736},
																					label: "text",
																					expr: &actionExpr{
																						pos: position{line: 699, col: 22, offset: 29012},
																						run: (*parser).callonTitleElement709,
																						expr: &oneOrMoreExpr{
																							pos: position{line: 699, col: 22, offset: 29012},
																							expr: &seqExpr{
																								pos: position{line: 699, col: 23, offset: 29013},
																								exprs: []interface{}{
																									&notExpr{
																										pos: position{line: 699, col: 23, offset: 29013},
																										expr: &litMatcher{
																											pos:        position{line: 699, col: 24, offset: 29014},
																											val:        ",",
																											ignoreCase: false,
																										},
																									},
																									&notExpr{
																										pos: position{line: 699, col: 28, offset: 29018},
																										expr: &litMatcher{
																											pos:        position{line: 699, col: 29, offset: 29019},
																											val:        "]",
																											ignoreCase: false,
																										},
																									},
																									&anyMatcher{
																										line: 699, col: 33, offset: 29023,
																									},
																								},
																							},
																						},
																					},
																				},
																				&labeledExpr{
																					pos:   position{line: 693, col: 9, offset: 28769},
																					label: "otherAttrs",
																					expr: &zeroOrMoreExpr{
																						pos: position{line: 693, col: 20, offset: 28780},
																						expr: &choiceExpr{
																							pos: position{line: 185, col: 21, offset: 6867},
																							alternatives: []interface{}{
																								&actionExpr{
																									pos: position{line: 185, col: 21, offset: 6867},
																									run: (*parser).callonTitleElement720,
																									expr: &seqExpr{
																										pos: position{line: 185, col: 21, offset: 6867},
																										exprs: []interface{}{
																											&labeledExpr{
																												pos:   position{line: 185, col: 21, offset: 6867},
																												label: "key",
																												expr: &actionExpr{
																													pos: position{line: 191, col: 17, offset: 7127},
																													run: (*parser).callonTitleElement723,
																													expr: &seqExpr{
																														pos: position{line: 191, col: 17, offset: 7127},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 191, col: 17, offset: 7127},
																																expr: &actionExpr{
																																	pos: position{line: 231, col: 14, offset: 8674},
																																	run: (*parser).callonTitleElement726,
																																	expr: &litMatcher{
																																		pos:        position{line: 231, col: 14, offset: 8674},
																																		val:        "verse",
																																		ignoreCase: false,
																																	},
																																},
																															},
																															&notExpr{
																																pos: position{line: 191, col: 28, offset: 7138},
																																expr: &actionExpr{
																																	pos: position{line: 975, col: 16, offset: 40537},
																																	run: (*parser).callonTitleElement729,
																																	expr: &litMatcher{
																																		pos:        position{line: 975, col: 16, offset: 40537},
																																		val:        "literal",
																																		ignoreCase: false,
																																	},
																																},
																															},
																															&labeledExpr{
																																pos:   position{line: 191, col: 41, offset: 7151},
																																label: "key",
																																expr: &oneOrMoreExpr{
																																	pos: position{line: 191, col: 45, offset: 7155},
																																	expr: &seqExpr{
																																		pos: position{line: 191, col: 46, offset: 7156},
																																		exprs: []interface{}{
																																			&notExpr{
																																				pos: position{line: 191, col: 46, offset: 7156},
																																				expr: &litMatcher{
																																					pos:        position{line: 191, col: 47, offset: 7157},
																																					val:        "=",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 191, col: 51, offset: 7161},
																																				expr: &litMatcher{
																																					pos:        position{line: 191, col: 52, offset: 7162},
																																					val:        ",",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 191, col: 56, offset: 7166},
																																				expr: &litMatcher{
																																					pos:        position{line: 191, col: 57, offset: 7167},
																																					val:        "]",
																																					ignoreCase: false,
																																				},
																																			},
																																			&anyMatcher{
																																				line: 191, col: 61, offset: 7171,
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																											&litMatcher{
																												pos:        position{line: 185, col: 40, offset: 6886},
																												val:        "=",
																												ignoreCase: false,
																											},
																											&labeledExpr{
																												pos:   position{line: 185, col: 44, offset: 6890},
																												label: "value",
																												expr: &actionExpr{
																													pos: position{line: 195, col: 19, offset: 7230},
																													run: (*parser).callonTitleElement743,
																													expr: &labeledExpr{
																														pos:   position{line: 195, col: 19, offset: 7230},
																														label: "value",
																														expr: &zeroOrMoreExpr{
																															pos: position{line: 195, col: 25, offset: 7236},
																															expr: &seqExpr{
																																pos: position{line: 195, col: 26, offset: 7237},
																																exprs: []interface{}{
																																	&notExpr{
																																		pos: position{line: 195, col: 26, offset: 7237},
																																		expr: &litMatcher{
																																			pos:        position{line: 195, col: 27, offset: 7238},
																																			val:        "=",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 195, col: 31, offset: 7242},
																																		expr: &litMatcher{
																																			pos:        position{line: 195, col: 32, offset: 7243},
																																			val:        ",",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 195, col: 36, offset: 7247},
																																		expr: &litMatcher{
																																			pos:        position{line: 195, col: 37, offset: 7248},
																																			val:        "]",
																																			ignoreCase: false,
																																		},
																																	},
																																	&anyMatcher{
																																		line: 195, col: 41, offset: 7252,
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																											&zeroOrOneExpr{
																												pos: position{line: 185, col: 67, offset: 6913},
																												expr: &litMatcher{
																													pos:        position{line: 185, col: 67, offset: 6913},
																													val:        ",",
																													ignoreCase: false,
																												},
																											},
																											&zeroOrMoreExpr{
																												pos: position{line: 185, col: 72, offset: 6918},
																												expr: &choiceExpr{
																													pos: position{line: 1024, col: 7, offset: 41621},
																													alternatives: []interface{}{
																														&litMatcher{
																															pos:        position{line: 1024, col: 7, offset: 41621},
																															val:        " ",
																															ignoreCase: false,
																														},
																														&actionExpr{
																															pos: position{line: 1024, col: 13, offset: 41627},
																															run: (*parser).callonTitleElement759,
																															expr: &litMatcher{
																																pos:        position{line: 1024, col: 13, offset: 41627},
																																val:        "\t",
																																ignoreCase: false,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&actionExpr{
																									pos: position{line: 187, col: 5, offset: 7002},
																									run: (*parser).callonTitleElement761,
																									expr: &seqExpr{
																										pos: position{line: 187, col: 5, offset: 7002},
																										exprs: []interface{}{
																											&labeledExpr{
																												pos:   position{line: 187, col: 5, offset: 7002},
																												label: "key",
																												expr: &actionExpr{
																													pos: position{line: 191, col: 17, offset: 7127},
																													run: (*parser).callonTitleElement764,
																													expr: &seqExpr{
																														pos: position{line: 191, col: 17, offset: 7127},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 191, col: 17, offset: 7127},
																																expr: &actionExpr{
																																	pos: position{line: 231, col: 14, offset: 8674},
																																	run: (*parser).callonTitleElement767,
																																	expr: &litMatcher{
																																		pos:        position{line: 231, col: 14, offset: 8674},
																																		val:        "verse",
																																		ignoreCase: false,
																																	},
																																},
																															},
																															&notExpr{
																																pos: position{line: 191, col: 28, offset: 7138},
																																expr: &actionExpr{
																																	pos: position{line: 975, col: 16, offset: 40537},
																																	run: (*parser).callonTitleElement770,
																																	expr: &litMatcher{
																																		pos:        position{line: 975, col: 16, offset: 40537},
																																		val:        "literal",
																																		ignoreCase: false,
																																	},
																																},
																															},
																															&labeledExpr{
																																pos:   position{line: 191, col: 41, offset: 7151},
																																label: "key",
																																expr: &oneOrMoreExpr{
																																	pos: position{line: 191, col: 45, offset: 7155},
																																	expr: &seqExpr{
																																		pos: position{line: 191, col: 46, offset: 7156},
																																		exprs: []interface{}{
																																			&notExpr{
																																				pos: position{line: 191, col: 46, offset: 7156},
																																				expr: &litMatcher{
																																					pos:        position{line: 191, col: 47, offset: 7157},
																																					val:        "=",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 191, col: 51, offset: 7161},
																																				expr: &litMatcher{
																																					pos:        position{line: 191, col: 52, offset: 7162},
																																					val:        ",",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 191, col: 56, offset: 7166},
																																				expr: &litMatcher{
																																					pos:        position{line: 191, col: 57, offset: 7167},
																																					val:        "]",
																																					ignoreCase: false,
																																				},
																																			},
																																			&anyMatcher{
																																				line: 191, col: 61, offset: 7171,
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																											&zeroOrOneExpr{
																												pos: position{line: 187, col: 24, offset: 7021},
																												expr: &litMatcher{
																													pos:        position{line: 187, col: 24, offset: 7021},
																													val:        ",",
																													ignoreCase: false,
																												},
																											},
																											&zeroOrMoreExpr{
																												pos: position{line: 187, col: 29, offset: 7026},
																												expr: &choiceExpr{
																													pos: position{line: 1024, col: 7, offset: 41621},
																													alternatives: []interface{}{
																														&litMatcher{
																															pos:        position{line: 1024, col: 7, offset: 41621},
																															val:        " ",
																															ignoreCase: false,
																														},
																														&actionExpr{
																															pos: position{line: 1024, col: 13, offset: 41627},
																															run: (*parser).callonTitleElement787,
																															expr: &litMatcher{
																																pos:        position{line: 1024, col: 13, offset: 41627},
																																val:        "\t",
																																ignoreCase: false,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																				&litMatcher{
																					pos:        position{line: 693, col: 40, offset: 28800},
																					val:        "]",
																					ignoreCase: false,
																				},
																			},
																		},
																	},
																	&actionExpr{
																		pos: position{line: 695, col: 5, offset: 28879},
																		run: (*parser).callonTitleElement790,
																		expr: &seqExpr{
																			pos: position{line: 695, col: 5, offset: 28879},
																			exprs: []interface{}{
																				&litMatcher{
																					pos:        position{line: 695, col: 5, offset: 28879},
																					val:        "[",
																					ignoreCase: false,
																				},
																				&labeledExpr{
																					pos:   position{line: 695, col: 9, offset: 28883},
																					label: "otherAttrs",
																					expr: &zeroOrMoreExpr{
																						pos: position{line: 695, col: 20, offset: 28894},
																						expr: &choiceExpr{
																							pos: position{line: 185, col: 21, offset: 6867},
																							alternatives: []interface{}{
																								&actionExpr{
																									pos: position{line: 185, col: 21, offset: 6867},
																									run: (*parser).callonTitleElement796,
																									expr: &seqExpr{
																										pos: position{line: 185, col: 21, offset: 6867},
																										exprs: []interface{}{
																											&labeledExpr{
																												pos:   position{line: 185, col: 21, offset: 6867},
																												label: "key",
																												expr: &actionExpr{
																													pos: position{line: 191, col: 17, offset: 7127},
																													run: (*parser).callonTitleElement799,
																													expr: &seqExpr{
																														pos: position{line: 191, col: 17, offset: 7127},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 191, col: 17, offset: 7127},
																																expr: &actionExpr{
																																	pos: position{line: 231, col: 14, offset: 8674},
																																	run: (*parser).callonTitleElement802,
																																	expr: &litMatcher{
																																		pos:        position{line: 231, col: 14, offset: 8674},
																																		val:        "verse",
																																		ignoreCase: false,
																																	},
																																},
																															},
																															&notExpr{
																																pos: position{line: 191, col: 28, offset: 7138},
																																expr: &actionExpr{
																																	pos: position{line: 975, col: 16, offset: 40537},
																																	run: (*parser).callonTitleElement805,
																																	expr: &litMatcher{
																																		pos:        position{line: 975, col: 16, offset: 40537},
																																		val:        "literal",
																																		ignoreCase: false,
																																	},
																																},
																															},
																															&labeledExpr{
																																pos:   position{line: 191, col: 41, offset: 7151},
																																label: "key",
																																expr: &oneOrMoreExpr{
																																	pos: position{line: 191, col: 45, offset: 7155},
																																	expr: &seqExpr{
																																		pos: position{line: 191, col: 46, offset: 7156},
																																		exprs: []interface{}{
																																			&notExpr{
																																				pos: position{line: 191, col: 46, offset: 7156},
																																				expr: &litMatcher{
																																					pos:        position{line: 191, col: 47, offset: 7157},
																																					val:        "=",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 191, col: 51, offset: 7161},
																																				expr: &litMatcher{
																																					pos:        position{line: 191, col: 52, offset: 7162},
																																					val:        ",",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 191, col: 56, offset: 7166},
																																				expr: &litMatcher{
																																					pos:        position{line: 191, col: 57, offset: 7167},
																																					val:        "]",
																																					ignoreCase: false,
																																				},
																																			},
																																			&anyMatcher{
																																				line: 191, col: 61, offset: 7171,
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																											&litMatcher{
																												pos:        position{line: 185, col: 40, offset: 6886},
																												val:        "=",
																												ignoreCase: false,
																											},
																											&labeledExpr{
																												pos:   position{line: 185, col: 44, offset: 6890},
																												label: "value",
																												expr: &actionExpr{
																													pos: position{line: 195, col: 19, offset: 7230},
																													run: (*parser).callonTitleElement819,
																													expr: &labeledExpr{
																														pos:   position{line: 195, col: 19, offset: 7230},
																														label: "value",
																														expr: &zeroOrMoreExpr{
																															pos: position{line: 195, col: 25, offset: 7236},
																															expr: &seqExpr{
																																pos: position{line: 195, col: 26, offset: 7237},
																																exprs: []interface{}{
																																	&notExpr{
																																		pos: position{line: 195, col: 26, offset: 7237},
																																		expr: &litMatcher{
																																			pos:        position{line: 195, col: 27, offset: 7238},
																																			val:        "=",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 195, col: 31, offset: 7242},
																																		expr: &litMatcher{
																																			pos:        position{line: 195, col: 32, offset: 7243},
																																			val:        ",",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 195, col: 36, offset: 7247},
																																		expr: &litMatcher{
																																			pos:        position{line: 195, col: 37, offset: 7248},
																																			val:        "]",
																																			ignoreCase: false,
																																		},
																																	},
																																	&anyMatcher{
																																		line: 195, col: 41, offset: 7252,
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																											&zeroOrOneExpr{
																												pos: position{line: 185, col: 67, offset: 6913},
																												expr: &litMatcher{
																													pos:        position{line: 185, col: 67, offset: 6913},
																													val:        ",",
																													ignoreCase: false,
																												},
																											},
																											&zeroOrMoreExpr{
																												pos: position{line: 185, col: 72, offset: 6918},
																												expr: &choiceExpr{
																													pos: position{line: 1024, col: 7, offset: 41621},
																													alternatives: []interface{}{
																														&litMatcher{
																															pos:        position{line: 1024, col: 7, offset: 41621},
																															val:        " ",
																															ignoreCase: false,
																														},
																														&actionExpr{
																															pos: position{line: 1024, col: 13, offset: 41627},
																															run: (*parser).callonTitleElement835,
																															expr: &litMatcher{
																																pos:        position{line: 1024, col: 13, offset: 41627},
																																val:        "\t",
																																ignoreCase: false,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&actionExpr{
																									pos: position{line: 187, col: 5, offset: 7002},
																									run: (*parser).callonTitleElement837,
																									expr: &seqExpr{
																										pos: position{line: 187, col: 5, offset: 7002},
																										exprs: []interface{}{
																											&labeledExpr{
																												pos:   position{line: 187, col: 5, offset: 7002},
																												label: "key",
																												expr: &actionExpr{
																													pos: position{line: 191, col: 17, offset: 7127},
																													run: (*parser).callonTitleElement840,
																													expr: &seqExpr{
																														pos: position{line: 191, col: 17, offset: 7127},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 191, col: 17, offset: 7127},
																																expr: &actionExpr{
																																	pos: position{line: 231, col: 14, offset: 8674},
																																	run: (*parser).callonTitleElement843,
																																	expr: &litMatcher{
																																		pos:        position{line: 231, col: 14, offset: 8674},
																																		val:        "verse",
																																		ignoreCase: false,
																																	},
																																},
																															},
																															&notExpr{
																																pos: position{line: 191, col: 28, offset: 7138},
																																expr: &actionExpr{
																																	pos: position{line: 975, col: 16, offset: 40537},
																																	run: (*parser).callonTitleElement846,
																																	expr: &litMatcher{
																																		pos:        position{line: 975, col: 16, offset: 40537},
																																		val:        "literal",
																																		ignoreCase: false,
																																	},
																																},
																															},
																															&labeledExpr{
																																pos:   position{line: 191, col: 41, offset: 7151},
																																label: "key",
																																expr: &oneOrMoreExpr{
																																	pos: position{line: 191, col: 45, offset: 7155},
																																	expr: &seqExpr{
																																		pos: position{line: 191, col: 46, offset: 7156},
																																		exprs: []interface{}{
																																			&notExpr{
																																				pos: position{line: 191, col: 46, offset: 7156},
																																				expr: &litMatcher{
																																					pos:        position{line: 191, col: 47, offset: 7157},
																																					val:        "=",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 191, col: 51, offset: 7161},
																																				expr: &litMatcher{
																																					pos:        position{line: 191, col: 52, offset: 7162},
																																					val:        ",",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 191, col: 56, offset: 7166},
																																				expr: &litMatcher{
																																					pos:        position{line: 191, col: 57, offset: 7167},
																																					val:        "]",
																																					ignoreCase: false,
																																				},
																																			},
																																			&anyMatcher{
																																				line: 191, col: 61, offset: 7171,
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																											&zeroOrOneExpr{
																												pos: position{line: 187, col: 24, offset: 7021},
																												expr: &litMatcher{
																													pos:        position{line: 187, col: 24, offset: 7021},
																													val:        ",",
																													ignoreCase: false,
																												},
																											},
																											&zeroOrMoreExpr{
																												pos: position{line: 187, col: 29, offset: 7026},
																												expr: &choiceExpr{
																													pos: position{line: 1024, col: 7, offset: 41621},
																													alternatives: []interface{}{
																														&litMatcher{
																															pos:        position{line: 1024, col: 7, offset: 41621},
																															val:        " ",
																															ignoreCase: false,
																														},
																														&actionExpr{
																															pos: position{line: 1024, col: 13, offset: 41627},
																															run: (*parser).callonTitleElement863,
																															expr: &litMatcher{
																																pos:        position{line: 1024, col: 13, offset: 41627},
																																val:        "\t",
																																ignoreCase: false,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																				&litMatcher{
																					pos:        position{line: 695, col: 40, offset: 28914},
																					val:        "]",
																					ignoreCase: false,
																				},
																			},
																		},
																	},
																},
															},
														},
													},
												},
											},
											&actionExpr{
												pos: position{line: 675, col: 5, offset: 28279},
												run: (*parser).callonTitleElement866,
												expr: &labeledExpr{
													pos:   position{line: 675, col: 5, offset: 28279},
													label: "url",
													expr: &actionExpr{
														pos: position{line: 679, col: 20, offset: 28369},
														run: (*parser).callonTitleElement868,
														expr: &seqExpr{
															pos: position{line: 679, col: 20, offset: 28369},
															exprs: []interface{}{
																&choiceExpr{
																	pos: position{line: 1018, col: 15, offset: 41506},
																	alternatives: []interface{}{
																		&litMatcher{
																			pos:        position{line: 1018, col: 15, offset: 41506},
																			val:        "http://",
																			ignoreCase: false,
																		},
																		&litMatcher{
																			pos:        position{line: 1018, col: 27, offset: 41518},
																			val:        "https://",
																			ignoreCase: false,
																		},
																		&litMatcher{
																			pos:        position{line: 1018, col: 40, offset: 41531},
																			val:        "ftp://",
																			ignoreCase: false,
																		},
																		&litMatcher{
																			pos:        position{line: 1018, col: 51, offset: 41542},
																			val:        "irc://",
																			ignoreCase: false,
																		},
																		&litMatcher{
																			pos:        position{line: 1018, col: 62, offset: 41553},
																			val:        "mailto:",
																			ignoreCase: false,
																		},
																	},
																},
																&actionExpr{
																	pos: position{line: 1006, col: 8, offset: 41269},
																	run: (*parser).callonTitleElement876,
																	expr: &oneOrMoreExpr{
																		pos: position{line: 1006, col: 8, offset: 41269},
																		expr: &seqExpr{
																			pos: position{line: 1006, col: 9, offset: 41270},
																			exprs: []interface{}{
																				&notExpr{
																					pos: position{line: 1006, col: 9, offset: 41270},
																					expr: &choiceExpr{
																						pos: position{line: 1028, col: 12, offset: 41683},
																						alternatives: []interface{}{
																							&litMatcher{
																								pos:        position{line: 1028, col: 12, offset: 41683},
																								val:        "\r\n",
																								ignoreCase: false,
																							},
																							&charClassMatcher{
																								pos:        position{line: 1028, col: 21, offset: 41692},
																								val:        "[\\r\\n]",
																								chars:      []rune{'\r', '\n'},
																								ignoreCase: false,
																								inverted:   false,
																							},
																						},
																					},
																				},
																				&notExpr{
																					pos: position{line: 1006, col: 18, offset: 41279},
																					expr: &choiceExpr{
																						pos: position{line: 1024, col: 7, offset: 41621},
																						alternatives: []interface{}{
																							&litMatcher{
																								pos:        position{line: 1024, col: 7, offset: 41621},
																								val:        " ",
																								ignoreCase: false,
																							},
																							&actionExpr{
																								pos: position{line: 1024, col: 13, offset: 41627},
																								run: (*parser).callonTitleElement886,
																								expr: &litMatcher{
																									pos:        position{line: 1024, col: 13, offset: 41627},
																									val:        "\t",
																									ignoreCase: false,
																								},
																							},
																						},
																					},
																				},
																				&notExpr{
																					pos: position{line: 1006, col: 22, offset: 41283},
																					expr: &litMatcher{
																						pos:        position{line: 1006, col: 23, offset: 41284},
																						val:        "[",
																						ignoreCase: false,
																					},
																				},
																				&notExpr{
																					pos: position{line: 1006, col: 27, offset: 41288},
																					expr: &litMatcher{
																						pos:        position{line: 1006, col: 28, offset: 41289},
																						val:        "]",
																						ignoreCase: false,
																					},
																				},
																				&anyMatcher{
																					line: 1006, col: 32, offset: 41293,
																				},
																			},
																		},
																	},
																},
															},
														},
													},
												},
											},
										},
									},
								},
							},
							&actionExpr{
								pos: position{line: 114, col: 34, offset: 4427},
								run: (*parser).callonTitleElement893,
								expr: &seqExpr{
									pos: position{line: 114, col: 34, offset: 4427},
									exprs: []interface{}{
										&litMatcher{
											pos:        position{line: 114, col: 34, offset: 4427},
											val:        "{",
											ignoreCase: false,
										},
										&labeledExpr{
											pos:   position{line: 114, col: 38, offset: 4431},
											label: "name",
											expr: &actionExpr{
												pos: position{line: 121, col: 26, offset: 4726},
												run: (*parser).callonTitleElement897,
												expr: &seqExpr{
													pos: position{line: 121, col: 26, offset: 4726},
													exprs: []interface{}{
														&charClassMatcher{
															pos:        position{line: 121, col: 27, offset: 4727},
															val:        "[_A-Za-z0-9]",
															chars:      []rune{'_'},
															ranges:     []rune{'A', 'Z', 'a', 'z', '0', '9'},
															ignoreCase: false,
															inverted:   false,
														},
														&zeroOrMoreExpr{
															pos: position{line: 121, col: 56, offset: 4756},
															expr: &charClassMatcher{
																pos:        position{line: 121, col: 57, offset: 4757},
																val:        "[-A-Za-z0-9]",
																chars:      []rune{'-'},
																ranges:     []rune{'A', 'Z', 'a', 'z', '0', '9'},
																ignoreCase: false,
																inverted:   false,
															},
														},
													},
												},
											},
										},
										&litMatcher{
											pos:        position{line: 114, col: 67, offset: 4460},
											val:        "}",
											ignoreCase: false,
										},
									},
								},
							},
							&ruleRefExpr{
								pos:  position{line: 359, col: 123, offset: 13591},
								name: "InlineFootnote",
							},
							&actionExpr{
								pos: position{line: 1002, col: 9, offset: 41195},
								run: (*parser).callonTitleElement904,
								expr: &oneOrMoreExpr{
									pos: position{line: 1002, col: 9, offset: 41195},
									expr: &seqExpr{
										pos: position{line: 1002, col: 10, offset: 41196},
										exprs: []interface{}{
											&notExpr{
												pos: position{line: 1002, col: 10, offset: 41196},
												expr: &choiceExpr{
													pos: position{line: 1028, col: 12, offset: 41683},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1028, col: 12, offset: 41683},
															val:        "\r\n",
															ignoreCase: false,
														},
														&charClassMatcher{
															pos:        position{line: 1028, col: 21, offset: 41692},
															val:        "[\\r\\n]",
															chars:      []rune{'\r', '\n'},
															ignoreCase: false,
															inverted:   false,
														},
													},
												},
											},
											&notExpr{
												pos: position{line: 1002, col: 19, offset: 41205},
												expr: &choiceExpr{
													pos: position{line: 1024, col: 7, offset: 41621},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1024, col: 7, offset: 41621},
															val:        " ",
															ignoreCase: false,
														},
														&actionExpr{
															pos: position{line: 1024, col: 13, offset: 41627},
															run: (*parser).callonTitleElement914,
															expr: &litMatcher{
																pos:        position{line: 1024, col: 13, offset: 41627},
																val:        "\t",
																ignoreCase: false,
															},
														},
													},
												},
											},
											&notExpr{
												pos: position{line: 1002, col: 23, offset: 41209},
												expr: &charClassMatcher{
													pos:        position{line: 1000, col: 16, offset: 41164},
													val:        "[()[]]",
													chars:      []rune{'(', ')', '[', ']'},
													ignoreCase: false,
													inverted:   false,
												},
											},
											&anyMatcher{
												line: 1002, col: 36, offset: 41222,
											},
										},
									},
								},
							},
							&charClassMatcher{
								pos:        position{line: 1000, col: 16, offset: 41164},
								val:        "[()[]]",
								chars:      []rune{'(', ')', '[', ']'},
								ignoreCase: false,
								inverted:   false,
							},
						},
					},
				},
			},
		},
		{
			name: "List",
			pos:  position{line: 367, col: 1, offset: 13759},
			expr: &actionExpr{
				pos: position{line: 367, col: 9, offset: 13767},
				run: (*parser).callonList1,
				expr: &seqExpr{
					pos: position{line: 367, col: 9, offset: 13767},
					exprs: []interface{}{
						&labeledExpr{
							pos:   position{line: 367, col: 9, offset: 13767},
							label: "attributes",
							expr: &zeroOrMoreExpr{
								pos: position{line: 367, col: 20, offset: 13778},
								expr: &actionExpr{
									pos: position{line: 136, col: 21, offset: 5188},
									run: (*parser).callonList5,
									expr: &seqExpr{
										pos: position{line: 136, col: 21, offset: 5188},
										exprs: []interface{}{
											&labeledExpr{
												pos:   position{line: 136, col: 21, offset: 5188},
												label: "attr",
												expr: &choiceExpr{
													pos: position{line: 136, col: 27, offset: 5194},
													alternatives: []interface{}{
														&actionExpr{
															pos: position{line: 145, col: 14, offset: 5645},
															run: (*parser).callonList9,
															expr: &labeledExpr{
																pos:   position{line: 145, col: 14, offset: 5645},
																label: "id",
																expr: &actionExpr{
																	pos: position{line: 151, col: 20, offset: 5775},
																	run: (*parser).callonList11,
																	expr: &seqExpr{
																		pos: position{line: 151, col: 20, offset: 5775},
																		exprs: []interface{}{
																			&litMatcher{
																				pos:        position{line: 151, col: 20, offset: 5775},
																				val:        "[[",
																				ignoreCase: false,
																			},
																			&labeledExpr{
																				pos:   position{line: 151, col: 25, offset: 5780},
																				label: "id",
																				expr: &actionExpr{
																					pos: position{line: 1010, col: 7, offset: 41339},
																					run: (*parser).callonList15,
																					expr: &oneOrMoreExpr{
																						pos: position{line: 1010, col: 7, offset: 41339},
																						expr: &seqExpr{
																							pos: position{line: 1010, col: 8, offset: 41340},
																							exprs: []interface{}{
																								&notExpr{
																									pos: position{line: 1010, col: 8, offset: 41340},
																									expr: &choiceExpr{
																										pos: position{line: 1028, col: 12, offset: 41683},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1028, col: 12, offset: 41683},
																												val:        "\r\n",
																												ignoreCase: false,
																											},
																											&charClassMatcher{
																												pos:        position{line: 1028, col: 21, offset: 41692},
																												val:        "[\\r\\n]",
																												chars:      []rune{'\r', '\n'},
																												ignoreCase: false,
																												inverted:   false,
																											},
																										},
																									},
																								},
																								&notExpr{
																									pos: position{line: 1010, col: 17, offset: 41349},
																									expr: &choiceExpr{
																										pos: position{line: 1024, col: 7, offset: 41621},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1024, col: 7, offset: 41621},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 1024, col: 13, offset: 41627},
																												run: (*parser).callonList25,
																												expr: &litMatcher{
																													pos:        position{line: 1024, col: 13, offset: 41627},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																								&notExpr{
																									pos: position{line: 1010, col: 21, offset: 41353},
																									expr: &litMatcher{
																										pos:        position{line: 1010, col: 22, offset: 41354},
																										val:        "[",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 1010, col: 26, offset: 41358},
																									expr: &litMatcher{
																										pos:        position{line: 1010, col: 27, offset: 41359},
																										val:        "]",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 1010, col: 31, offset: 41363},
																									expr: &litMatcher{
																										pos:        position{line: 1010, col: 32, offset: 41364},
																										val:        "<<",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 1010, col: 37, offset: 41369},
																									expr: &litMatcher{
																										pos:        position{line: 1010, col: 38, offset: 41370},
																										val:        ">>",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 1010, col: 43, offset: 41375},
																									expr: &litMatcher{
																										pos:        position{line: 1010, col: 44, offset: 41376},
																										val:        ",",
																										ignoreCase: false,
																									},
																								},
																								&anyMatcher{
																									line: 1010, col: 48, offset: 41380,
																								},
																							},
																						},
																					},
																				},
																			},
																			&litMatcher{
																				pos:        position{line: 151, col: 33, offset: 5788},
																				val:        "]]",
																				ignoreCase: false,
																			},
																		},
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 147, col: 5, offset: 5691},
															run: (*parser).callonList39,
															expr: &seqExpr{
																pos: position{line: 147, col: 5, offset: 5691},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 147, col: 5, offset: 5691},
																		val:        "[#",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 147, col: 10, offset: 5696},
																		label: "id",
																		expr: &actionExpr{
																			pos: position{line: 1010, col: 7, offset: 41339},
																			run: (*parser).callonList43,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 1010, col: 7, offset: 41339},
																				expr: &seqExpr{
																					pos: position{line: 1010, col: 8, offset: 41340},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 1010, col: 8, offset: 41340},
																							expr: &choiceExpr{
																								pos: position{line: 1028, col: 12, offset: 41683},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1028, col: 12, offset: 41683},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 1028, col: 21, offset: 41692},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 1010, col: 17, offset: 41349},
																							expr: &choiceExpr{
																								pos: position{line: 1024, col: 7, offset: 41621},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1024, col: 7, offset: 41621},
																										val:        " ",
																										ignoreCase: false,
																									},
																									&actionExpr{
																										pos: position{line: 1024, col: 13, offset: 41627},
																										run: (*parser).callonList53,
																										expr: &litMatcher{
																											pos:        position{line: 1024, col: 13, offset: 41627},
																											val:        "\t",
																											ignoreCase: false,
																										},
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 1010, col: 21, offset: 41353},
																							expr: &litMatcher{
																								pos:        position{line: 1010, col: 22, offset: 41354},
																								val:        "[",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 1010, col: 26, offset: 41358},
																							expr: &litMatcher{
																								pos:        position{line: 1010, col: 27, offset: 41359},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 1010, col: 31, offset: 41363},
																							expr: &litMatcher{
																								pos:        position{line: 1010, col: 32, offset: 41364},
																								val:        "<<",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 1010, col: 37, offset: 41369},
																							expr: &litMatcher{
																								pos:        position{line: 1010, col: 38, offset: 41370},
																								val:        ">>",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 1010, col: 43, offset: 41375},
																							expr: &litMatcher{
																								pos:        position{line: 1010, col: 44, offset: 41376},
																								val:        ",",
																								ignoreCase: false,
																							},
																						},
																						&anyMatcher{
																							line: 1010, col: 48, offset: 41380,
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 147, col: 18, offset: 5704},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 157, col: 17, offset: 5997},
															run: (*parser).callonList67,
															expr: &seqExpr{
																pos: position{line: 157, col: 17, offset: 5997},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 157, col: 17, offset: 5997},
																		val:        ".",
																		ignoreCase: false,
																	},
																	&notExpr{
																		pos: position{line: 157, col: 21, offset: 6001},
																		expr: &litMatcher{
																			pos:        position{line: 157, col: 22, offset: 6002},
																			val:        ".",
																			ignoreCase: false,
																		},
																	},
																	&notExpr{
																		pos: position{line: 157, col: 26, offset: 6006},
																		expr: &choiceExpr{
																			pos: position{line: 1024, col: 7, offset: 41621},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1024, col: 7, offset: 41621},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1024, col: 13, offset: 41627},
																					run: (*parser).callonList75,
																					expr: &litMatcher{
																						pos:        position{line: 1024, col: 13, offset: 41627},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 157, col: 30, offset: 6010},
																		label: "title",
																		expr: &actionExpr{
																			pos: position{line: 161, col: 24, offset: 6115},
																			run: (*parser).callonList78,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 161, col: 24, offset: 6115},
																				expr: &seqExpr{
																					pos: position{line: 161, col: 25, offset: 6116},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 161, col: 25, offset: 6116},
																							expr: &choiceExpr{
																								pos: position{line: 1028, col: 12, offset: 41683},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1028, col: 12, offset: 41683},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 1028, col: 21, offset: 41692},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																						},
																						&anyMatcher{
																							line: 161, col: 34, offset: 6125,
																						},
																					},
																				},
																			},
																		},
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 167, col: 16, offset: 6274},
															run: (*parser).callonList86,
															expr: &seqExpr{
																pos: position{line: 167, col: 16, offset: 6274},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 167, col: 16, offset: 6274},
																		val:        "[.",
																		ignoreCase: false,
																	},
																	&notExpr{
																		pos: position{line: 167, col: 21, offset: 6279},
																		expr: &choiceExpr{
																			pos: position{line: 1024, col: 7, offset: 41621},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1024, col: 7, offset: 41621},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1024, col: 13, offset: 41627},
																					run: (*parser).callonList92,
																					expr: &litMatcher{
																						pos:        position{line: 1024, col: 13, offset: 41627},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 167, col: 25, offset: 6283},
																		label: "role",
																		expr: &actionExpr{
																			pos: position{line: 171, col: 23, offset: 6387},
																			run: (*parser).callonList95,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 171, col: 23, offset: 6387},
																				expr: &seqExpr{
																					pos: position{line: 171, col: 24, offset: 6388},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 171, col: 24, offset: 6388},
																							expr: &choiceExpr{
																								pos: position{line: 1028, col: 12, offset: 41683},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1028, col: 12, offset: 41683},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 1028, col: 21, offset: 41692},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 171, col: 33, offset: 6397},
																							expr: &litMatcher{
																								pos:        position{line: 171, col: 34, offset: 6398},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																						&anyMatcher{
																							line: 171, col: 38, offset: 6402,
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 167, col: 51, offset: 6309},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 176, col: 30, offset: 6551},
															run: (*parser).callonList106,
															expr: &seqExpr{
																pos: position{line: 176, col: 30, offset: 6551},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 176, col: 30, offset: 6551},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 176, col: 34, offset: 6555},
																		label: "k",
																		expr: &choiceExpr{
																			pos: position{line: 494, col: 19, offset: 19245},
																			alternatives: []interface{}{
																				&actionExpr{
																					pos: position{line: 494, col: 19, offset: 19245},
																					run: (*parser).callonList111,
																					expr: &litMatcher{
																						pos:        position{line: 494, col: 19, offset: 19245},
																						val:        "TIP",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 496, col: 5, offset: 19283},
																					run: (*parser).callonList113,
																					expr: &litMatcher{
																						pos:        position{line: 496, col: 5, offset: 19283},
																						val:        "NOTE",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 498, col: 5, offset: 19323},
																					run: (*parser).callonList115,
																					expr: &litMatcher{
																						pos:        position{line: 498, col: 5, offset: 19323},
																						val:        "IMPORTANT",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 500, col: 5, offset: 19373},
																					run: (*parser).callonList117,
																					expr: &litMatcher{
																						pos:        position{line: 500, col: 5, offset: 19373},
																						val:        "WARNING",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 502, col: 5, offset: 19419},
																					run: (*parser).callonList119,
																					expr: &litMatcher{
																						pos:        position{line: 502, col: 5, offset: 19419},
																						val:        "CAUTION",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 176, col: 53, offset: 6574},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 199, col: 21, offset: 7312},
															run: (*parser).callonList122,
															expr: &litMatcher{
																pos:        position{line: 199, col: 21, offset: 7312},
																val:        "[horizontal]",
																ignoreCase: false,
															},
														},
														&actionExpr{
															pos: position{line: 181, col: 19, offset: 6735},
															run: (*parser).callonList124,
															expr: &seqExpr{
																pos: position{line: 181, col: 19, offset: 6735},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 181, col: 19, offset: 6735},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&notExpr{
																		pos: position{line: 181, col: 23, offset: 6739},
																		expr: &choiceExpr{
																			pos: position{line: 1024, col: 7, offset: 41621},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1024, col: 7, offset: 41621},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1024, col: 13, offset: 41627},
																					run: (*parser).callonList130,
																					expr: &litMatcher{
																						pos:        position{line: 1024, col: 13, offset: 41627},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 181, col: 27, offset: 6743},
																		label: "attributes",
																		expr: &zeroOrMoreExpr{
																			pos: position{line: 181, col: 38, offset: 6754},
																			expr: &choiceExpr{
																				pos: position{line: 185, col: 21, offset: 6867},
																				alternatives: []interface{}{
																					&actionExpr{
																						pos: position{line: 185, col: 21, offset: 6867},
																						run: (*parser).callonList135,
																						expr: &seqExpr{
																							pos: position{line: 185, col: 21, offset: 6867},
																							exprs: []interface{}{
																								&labeledExpr{
																									pos:   position{line: 185, col: 21, offset: 6867},
																									label: "key",
																									expr: &actionExpr{
																										pos: position{line: 191, col: 17, offset: 7127},
																										run: (*parser).callonList138,
																										expr: &seqExpr{
																											pos: position{line: 191, col: 17, offset: 7127},
																											exprs: []interface{}{
																												&notExpr{
																													pos: position{line: 191, col: 17, offset: 7127},
																													expr: &actionExpr{
																														pos: position{line: 231, col: 14, offset: 8674},
																														run: (*parser).callonList141,
																														expr: &litMatcher{
																															pos:        position{line: 231, col: 14, offset: 8674},
																															val:        "verse",
																															ignoreCase: false,
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 191, col: 28, offset: 7138},
																													expr: &actionExpr{
																														pos: position{line: 975, col: 16, offset: 40537},
																														run: (*parser).callonList144,
																														expr: &litMatcher{
																															pos:        position{line: 975, col: 16, offset: 40537},
																															val:        "literal",
																															ignoreCase: false,
																														},
																													},
																												},
																												&labeledExpr{
																													pos:   position{line: 191, col: 41, offset: 7151},
																													label: "key",
																													expr: &oneOrMoreExpr{
																														pos: position{line: 191, col: 45, offset: 7155},
																														expr: &seqExpr{
																															pos: position{line: 191, col: 46, offset: 7156},
																															exprs: []interface{}{
																																&notExpr{
																																	pos: position{line: 191, col: 46, offset: 7156},
																																	expr: &litMatcher{
																																		pos:        position{line: 191, col: 47, offset: 7157},
																																		val:        "=",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 191, col: 51, offset: 7161},
																																	expr: &litMatcher{
																																		pos:        position{line: 191, col: 52, offset: 7162},
																																		val:        ",",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 191, col: 56, offset: 7166},
																																	expr: &litMatcher{
																																		pos:        position{line: 191, col: 57, offset: 7167},
																																		val:        "]",
																																		ignoreCase: false,
																																	},
																																},
																																&anyMatcher{
																																	line: 191, col: 61, offset: 7171,
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&litMatcher{
																									pos:        position{line: 185, col: 40, offset: 6886},
																									val:        "=",
																									ignoreCase: false,
																								},
																								&labeledExpr{
																									pos:   position{line: 185, col: 44, offset: 6890},
																									label: "value",
																									expr: &actionExpr{
																										pos: position{line: 195, col: 19, offset: 7230},
																										run: (*parser).callonList158,
																										expr: &labeledExpr{
																											pos:   position{line: 195, col: 19, offset: 7230},
																											label: "value",
																											expr: &zeroOrMoreExpr{
																												pos: position{line: 195, col: 25, offset: 7236},
																												expr: &seqExpr{
																													pos: position{line: 195, col: 26, offset: 7237},
																													exprs: []interface{}{
																														&notExpr{
																															pos: position{line: 195, col: 26, offset: 7237},
																															expr: &litMatcher{
																																pos:        position{line: 195, col: 27, offset: 7238},
																																val:        "=",
																																ignoreCase: false,
																															},
																														},
																														&notExpr{
																															pos: position{line: 195, col: 31, offset: 7242},
																															expr: &litMatcher{
																																pos:        position{line: 195, col: 32, offset: 7243},
																																val:        ",",
																																ignoreCase: false,
																															},
																														},
																														&notExpr{
																															pos: position{line: 195, col: 36, offset: 7247},
																															expr: &litMatcher{
																																pos:        position{line: 195, col: 37, offset: 7248},
																																val:        "]",
																																ignoreCase: false,
																															},
																														},
																														&anyMatcher{
																															line: 195, col: 41, offset: 7252,
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&zeroOrOneExpr{
																									pos: position{line: 185, col: 67, offset: 6913},
																									expr: &litMatcher{
																										pos:        position{line: 185, col: 67, offset: 6913},
																										val:        ",",
																										ignoreCase: false,
																									},
																								},
																								&zeroOrMoreExpr{
																									pos: position{line: 185, col: 72, offset: 6918},
																									expr: &choiceExpr{
																										pos: position{line: 1024, col: 7, offset: 41621},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1024, col: 7, offset: 41621},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 1024, col: 13, offset: 41627},
																												run: (*parser).callonList174,
																												expr: &litMatcher{
																													pos:        position{line: 1024, col: 13, offset: 41627},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																					&actionExpr{
																						pos: position{line: 187, col: 5, offset: 7002},
																						run: (*parser).callonList176,
																						expr: &seqExpr{
																							pos: position{line: 187, col: 5, offset: 7002},
																							exprs: []interface{}{
																								&labeledExpr{
																									pos:   position{line: 187, col: 5, offset: 7002},
																									label: "key",
																									expr: &actionExpr{
																										pos: position{line: 191, col: 17, offset: 7127},
																										run: (*parser).callonList179,
																										expr: &seqExpr{
																											pos: position{line: 191, col: 17, offset: 7127},
																											exprs: []interface{}{
																												&notExpr{
																													pos: position{line: 191, col: 17, offset: 7127},
																													expr: &actionExpr{
																														pos: position{line: 231, col: 14, offset: 8674},
																														run: (*parser).callonList182,
																														expr: &litMatcher{
																															pos:        position{line: 231, col: 14, offset: 8674},
																															val:        "verse",
																															ignoreCase: false,
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 191, col: 28, offset: 7138},
																													expr: &actionExpr{
																														pos: position{line: 975, col: 16, offset: 40537},
																														run: (*parser).callonList185,
																														expr: &litMatcher{
																															pos:        position{line: 975, col: 16, offset: 40537},
																															val:        "literal",
																															ignoreCase: false,
																														},
																													},
																												},
																												&labeledExpr{
																													pos:   position{line: 191, col: 41, offset: 7151},
																													label: "key",
																													expr: &oneOrMoreExpr{
																														pos: position{line: 191, col: 45, offset: 7155},
																														expr: &seqExpr{
																															pos: position{line: 191, col: 46, offset: 7156},
																															exprs: []interface{}{
																																&notExpr{
																																	pos: position{line: 191, col: 46, offset: 7156},
																																	expr: &litMatcher{
																																		pos:        position{line: 191, col: 47, offset: 7157},
																																		val:        "=",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 191, col: 51, offset: 7161},
																																	expr: &litMatcher{
																																		pos:        position{line: 191, col: 52, offset: 7162},
																																		val:        ",",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 191, col: 56, offset: 7166},
																																	expr: &litMatcher{
																																		pos:        position{line: 191, col: 57, offset: 7167},
																																		val:        "]",
																																		ignoreCase: false,
																																	},
																																},
																																&anyMatcher{
																																	line: 191, col: 61, offset: 7171,
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&zeroOrOneExpr{
																									pos: position{line: 187, col: 24, offset: 7021},
																									expr: &litMatcher{
																										pos:        position{line: 187, col: 24, offset: 7021},
																										val:        ",",
																										ignoreCase: false,
																									},
																								},
																								&zeroOrMoreExpr{
																									pos: position{line: 187, col: 29, offset: 7026},
																									expr: &choiceExpr{
																										pos: position{line: 1024, col: 7, offset: 41621},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1024, col: 7, offset: 41621},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 1024, col: 13, offset: 41627},
																												run: (*parser).callonList202,
																												expr: &litMatcher{
																													pos:        position{line: 1024, col: 13, offset: 41627},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 181, col: 59, offset: 6775},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
													},
												},
											},
											&zeroOrMoreExpr{
												pos: position{line: 136, col: 131, offset: 5298},
												expr: &choiceExpr{
													pos: position{line: 1024, col: 7, offset: 41621},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1024, col: 7, offset: 41621},
															val:        " ",
															ignoreCase: false,
														},
														&actionExpr{
															pos: position{line: 1024, col: 13, offset: 41627},
															run: (*parser).callonList208,
															expr: &litMatcher{
																pos:        position{line: 1024, col: 13, offset: 41627},
																val:        "\t",
																ignoreCase: false,
															},
														},
													},
												},
											},
											&choiceExpr{
												pos: position{line: 1032, col: 8, offset: 41723},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1028, col: 12, offset: 41683},
														val:        "\r\n",
														ignoreCase: false,
													},
													&charClassMatcher{
														pos:        position{line: 1028, col: 21, offset: 41692},
														val:        "[\\r\\n]",
														chars:      []rune{'\r', '\n'},
														ignoreCase: false,
														inverted:   false,
													},
													&notExpr{
														pos: position{line: 1030, col: 8, offset: 41712},
														expr: &anyMatcher{
															line: 1030, col: 9, offset: 41713,
														},
													},
												},
											},
										},
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 369, col: 5, offset: 13871},
							label: "elements",
							expr: &ruleRefExpr{
								pos:  position{line: 369, col: 14, offset: 13880},
								name: "ListItems",
							},
						},
					},
				},
			},
		},
		{
			name: "ListItems",
			pos:  position{line: 373, col: 1, offset: 13974},
			expr: &oneOrMoreExpr{
				pos: position{line: 373, col: 14, offset: 13987},
				expr: &choiceExpr{
					pos: position{line: 373, col: 15, offset: 13988},
					alternatives: []interface{}{
						&ruleRefExpr{
							pos:  position{line: 373, col: 15, offset: 13988},
							name: "OrderedListItem",
						},
						&ruleRefExpr{
							pos:  position{line: 373, col: 33, offset: 14006},
							name: "UnorderedListItem",
						},
						&ruleRefExpr{
							pos:  position{line: 373, col: 53, offset: 14026},
							name: "LabeledListItem",
						},
					},
				},
			},
		},
		{
			name: "ListParagraph",
			pos:  position{line: 375, col: 1, offset: 14045},
			expr: &actionExpr{
				pos: position{line: 375, col: 18, offset: 14062},
				run: (*parser).callonListParagraph1,
				expr: &labeledExpr{
					pos:   position{line: 375, col: 18, offset: 14062},
					label: "lines",
					expr: &oneOrMoreExpr{
						pos: position{line: 375, col: 24, offset: 14068},
						expr: &ruleRefExpr{
							pos:  position{line: 375, col: 25, offset: 14069},
							name: "ListParagraphLine",
						},
					},
				},
			},
		},
		{
			name: "ListParagraphLine",
			pos:  position{line: 379, col: 1, offset: 14153},
			expr: &actionExpr{
				pos: position{line: 380, col: 5, offset: 14179},
				run: (*parser).callonListParagraphLine1,
				expr: &seqExpr{
					pos: position{line: 380, col: 5, offset: 14179},
					exprs: []interface{}{
						&notExpr{
							pos: position{line: 380, col: 5, offset: 14179},
							expr: &actionExpr{
								pos: position{line: 405, col: 26, offset: 14999},
								run: (*parser).callonListParagraphLine4,
								expr: &seqExpr{
									pos: position{line: 405, col: 26, offset: 14999},
									exprs: []interface{}{
										&zeroOrMoreExpr{
											pos: position{line: 405, col: 26, offset: 14999},
											expr: &choiceExpr{
												pos: position{line: 1024, col: 7, offset: 41621},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1024, col: 7, offset: 41621},
														val:        " ",
														ignoreCase: false,
													},
													&actionExpr{
														pos: position{line: 1024, col: 13, offset: 41627},
														run: (*parser).callonListParagraphLine9,
														expr: &litMatcher{
															pos:        position{line: 1024, col: 13, offset: 41627},
															val:        "\t",
															ignoreCase: false,
														},
													},
												},
											},
										},
										&labeledExpr{
											pos:   position{line: 405, col: 30, offset: 15003},
											label: "prefix",
											expr: &choiceExpr{
												pos: position{line: 407, col: 5, offset: 15058},
												alternatives: []interface{}{
													&actionExpr{
														pos: position{line: 407, col: 5, offset: 15058},
														run: (*parser).callonListParagraphLine13,
														expr: &litMatcher{
															pos:        position{line: 407, col: 5, offset: 15058},
															val:        ".....",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 409, col: 9, offset: 15171},
														run: (*parser).callonListParagraphLine15,
														expr: &litMatcher{
															pos:        position{line: 409, col: 9, offset: 15171},
															val:        "....",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 411, col: 9, offset: 15282},
														run: (*parser).callonListParagraphLine17,
														expr: &litMatcher{
															pos:        position{line: 411, col: 9, offset: 15282},
															val:        "...",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 413, col: 9, offset: 15391},
														run: (*parser).callonListParagraphLine19,
														expr: &litMatcher{
															pos:        position{line: 413, col: 9, offset: 15391},
															val:        "..",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 415, col: 9, offset: 15498},
														run: (*parser).callonListParagraphLine21,
														expr: &litMatcher{
															pos:        position{line: 415, col: 9, offset: 15498},
															val:        ".",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 418, col: 9, offset: 15625},
														run: (*parser).callonListParagraphLine23,
														expr: &seqExpr{
															pos: position{line: 418, col: 9, offset: 15625},
															exprs: []interface{}{
																&oneOrMoreExpr{
																	pos: position{line: 418, col: 9, offset: 15625},
																	expr: &charClassMatcher{
																		pos:        position{line: 418, col: 10, offset: 15626},
																		val:        "[0-9]",
																		ranges:     []rune{'0', '9'},
																		ignoreCase: false,
																		inverted:   false,
																	},
																},
																&litMatcher{
																	pos:        position{line: 418, col: 18, offset: 15634},
																	val:        ".",
																	ignoreCase: false,
																},
															},
														},
													},
													&actionExpr{
														pos: position{line: 420, col: 9, offset: 15737},
														run: (*parser).callonListParagraphLine28,
														expr: &seqExpr{
															pos: position{line: 420, col: 9, offset: 15737},
															exprs: []interface{}{
																&oneOrMoreExpr{
																	pos: position{line: 420, col: 9, offset: 15737},
																	expr: &charClassMatcher{
																		pos:        position{line: 420, col: 10, offset: 15738},
																		val:        "[a-z]",
																		ranges:     []rune{'a', 'z'},
																		ignoreCase: false,
																		inverted:   false,
																	},
																},
																&litMatcher{
																	pos:        position{line: 420, col: 18, offset: 15746},
																	val:        ".",
																	ignoreCase: false,
																},
															},
														},
													},
													&actionExpr{
														pos: position{line: 422, col: 9, offset: 15852},
														run: (*parser).callonListParagraphLine33,
														expr: &seqExpr{
															pos: position{line: 422, col: 9, offset: 15852},
															exprs: []interface{}{
																&oneOrMoreExpr{
																	pos: position{line: 422, col: 9, offset: 15852},
																	expr: &charClassMatcher{
																		pos:        position{line: 422, col: 10, offset: 15853},
																		val:        "[A-Z]",
																		ranges:     []rune{'A', 'Z'},
																		ignoreCase: false,
																		inverted:   false,
																	},
																},
																&litMatcher{
																	pos:        position{line: 422, col: 18, offset: 15861},
																	val:        ".",
																	ignoreCase: false,
																},
															},
														},
													},
													&actionExpr{
														pos: position{line: 424, col: 9, offset: 15967},
														run: (*parser).callonListParagraphLine38,
														expr: &seqExpr{
															pos: position{line: 424, col: 9, offset: 15967},
															exprs: []interface{}{
																&oneOrMoreExpr{
																	pos: position{line: 424, col: 9, offset: 15967},
																	expr: &charClassMatcher{
																		pos:        position{line: 424, col: 10, offset: 15968},
																		val:        "[a-z]",
																		ranges:     []rune{'a', 'z'},
																		ignoreCase: false,
																		inverted:   false,
																	},
																},
																&litMatcher{
																	pos:        position{line: 424, col: 18, offset: 15976},
																	val:        ")",
																	ignoreCase: false,
																},
															},
														},
													},
													&actionExpr{
														pos: position{line: 426, col: 9, offset: 16082},
														run: (*parser).callonListParagraphLine43,
														expr: &seqExpr{
															pos: position{line: 426, col: 9, offset: 16082},
															exprs: []interface{}{
																&oneOrMoreExpr{
																	pos: position{line: 426, col: 9, offset: 16082},
																	expr: &charClassMatcher{
																		pos:        position{line: 426, col: 10, offset: 16083},
																		val:        "[A-Z]",
																		ranges:     []rune{'A', 'Z'},
																		ignoreCase: false,
																		inverted:   false,
																	},
																},
																&litMatcher{
																	pos:        position{line: 426, col: 18, offset: 16091},
																	val:        ")",
																	ignoreCase: false,
																},
															},
														},
													},
												},
											},
										},
										&oneOrMoreExpr{
											pos: position{line: 428, col: 8, offset: 16196},
											expr: &choiceExpr{
												pos: position{line: 1024, col: 7, offset: 41621},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1024, col: 7, offset: 41621},
														val:        " ",
														ignoreCase: false,
													},
													&actionExpr{
														pos: position{line: 1024, col: 13, offset: 41627},
														run: (*parser).callonListParagraphLine51,
														expr: &litMatcher{
															pos:        position{line: 1024, col: 13, offset: 41627},
															val:        "\t",
															ignoreCase: false,
														},
													},
												},
											},
										},
									},
								},
							},
						},
						&notExpr{
							pos: position{line: 381, col: 5, offset: 14209},
							expr: &actionExpr{
								pos: position{line: 444, col: 5, offset: 16854},
								run: (*parser).callonListParagraphLine54,
								expr: &seqExpr{
									pos: position{line: 444, col: 5, offset: 16854},
									exprs: []interface{}{
										&zeroOrMoreExpr{
											pos: position{line: 444, col: 5, offset: 16854},
											expr: &choiceExpr{
												pos: position{line: 1024, col: 7, offset: 41621},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1024, col: 7, offset: 41621},
														val:        " ",
														ignoreCase: false,
													},
													&actionExpr{
														pos: position{line: 1024, col: 13, offset: 41627},
														run: (*parser).callonListParagraphLine59,
														expr: &litMatcher{
															pos:        position{line: 1024, col: 13, offset: 41627},
															val:        "\t",
															ignoreCase: false,
														},
													},
												},
											},
										},
										&labeledExpr{
											pos:   position{line: 444, col: 9, offset: 16858},
											label: "prefix",
											expr: &choiceExpr{
												pos: position{line: 445, col: 9, offset: 16875},
												alternatives: []interface{}{
													&actionExpr{
														pos: position{line: 445, col: 9, offset: 16875},
														run: (*parser).callonListParagraphLine63,
														expr: &litMatcher{
															pos:        position{line: 445, col: 9, offset: 16875},
															val:        "*****",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 448, col: 11, offset: 17044},
														run: (*parser).callonListParagraphLine65,
														expr: &litMatcher{
															pos:        position{line: 448, col: 11, offset: 17044},
															val:        "****",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 451, col: 11, offset: 17213},
														run: (*parser).callonListParagraphLine67,
														expr: &litMatcher{
															pos:        position{line: 451, col: 11, offset: 17213},
															val:        "***",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 454, col: 11, offset: 17382},
														run: (*parser).callonListParagraphLine69,
														expr: &litMatcher{
															pos:        position{line: 454, col: 11, offset: 17382},
															val:        "**",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 457, col: 11, offset: 17548},
														run: (*parser).callonListParagraphLine71,
														expr: &litMatcher{
															pos:        position{line: 457, col: 11, offset: 17548},
															val:        "*",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 460, col: 11, offset: 17712},
														run: (*parser).callonListParagraphLine73,
														expr: &litMatcher{
															pos:        position{line: 460, col: 11, offset: 17712},
															val:        "-",
															ignoreCase: false,
														},
													},
												},
											},
										},
										&oneOrMoreExpr{
											pos: position{line: 462, col: 12, offset: 17859},
											expr: &choiceExpr{
												pos: position{line: 1024, col: 7, offset: 41621},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1024, col: 7, offset: 41621},
														val:        " ",
														ignoreCase: false,
													},
													&actionExpr{
														pos: position{line: 1024, col: 13, offset: 41627},
														run: (*parser).callonListParagraphLine78,
														expr: &litMatcher{
															pos:        position{line: 1024, col: 13, offset: 41627},
															val:        "\t",
															ignoreCase: false,
														},
													},
												},
											},
										},
									},
								},
							},
						},
						&notExpr{
							pos: position{line: 382, col: 5, offset: 14241},
							expr: &seqExpr{
								pos: position{line: 382, col: 7, offset: 14243},
								exprs: []interface{}{
									&actionExpr{
										pos: position{line: 480, col: 24, offset: 18695},
										run: (*parser).callonListParagraphLine82,
										expr: &zeroOrMoreExpr{
											pos: position{line: 480, col: 24, offset: 18695},
											expr: &seqExpr{
												pos: position{line: 480, col: 25, offset: 18696},
												exprs: []interface{}{
													&notExpr{
														pos: position{line: 480, col: 25, offset: 18696},
														expr: &choiceExpr{
															pos: position{line: 1028, col: 12, offset: 41683},
															alternatives: []interface{}{
																&litMatcher{
																	pos:        position{line: 1028, col: 12, offset: 41683},
																	val:        "\r\n",
																	ignoreCase: false,
																},
																&charClassMatcher{
																	pos:        position{line: 1028, col: 21, offset: 41692},
																	val:        "[\\r\\n]",
																	chars:      []rune{'\r', '\n'},
																	ignoreCase: false,
																	inverted:   false,
																},
															},
														},
													},
													&notExpr{
														pos: position{line: 480, col: 34, offset: 18705},
														expr: &litMatcher{
															pos:        position{line: 480, col: 35, offset: 18706},
															val:        "::",
															ignoreCase: false,
														},
													},
													&anyMatcher{
														line: 480, col: 40, offset: 18711,
													},
												},
											},
										},
									},
									&litMatcher{
										pos:        position{line: 485, col: 30, offset: 18841},
										val:        "::",
										ignoreCase: false,
									},
									&oneOrMoreExpr{
										pos: position{line: 485, col: 35, offset: 18846},
										expr: &choiceExpr{
											pos: position{line: 485, col: 36, offset: 18847},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 1024, col: 7, offset: 41621},
													val:        " ",
													ignoreCase: false,
												},
												&actionExpr{
													pos: position{line: 1024, col: 13, offset: 41627},
													run: (*parser).callonListParagraphLine96,
													expr: &litMatcher{
														pos:        position{line: 1024, col: 13, offset: 41627},
														val:        "\t",
														ignoreCase: false,
													},
												},
												&litMatcher{
													pos:        position{line: 1028, col: 12, offset: 41683},
													val:        "\r\n",
													ignoreCase: false,
												},
												&charClassMatcher{
													pos:        position{line: 1028, col: 21, offset: 41692},
													val:        "[\\r\\n]",
													chars:      []rune{'\r', '\n'},
													ignoreCase: false,
													inverted:   false,
												},
											},
										},
									},
								},
							},
						},
						&notExpr{
							pos: position{line: 383, col: 5, offset: 14294},
							expr: &actionExpr{
								pos: position{line: 390, col: 25, offset: 14445},
								run: (*parser).callonListParagraphLine101,
								expr: &seqExpr{
									pos: position{line: 390, col: 25, offset: 14445},
									exprs: []interface{}{
										&litMatcher{
											pos:        position{line: 390, col: 25, offset: 14445},
											val:        "+",
											ignoreCase: false,
										},
										&zeroOrMoreExpr{
											pos: position{line: 390, col: 29, offset: 14449},
											expr: &choiceExpr{
												pos: position{line: 1024, col: 7, offset: 41621},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1024, col: 7, offset: 41621},
														val:        " ",
														ignoreCase: false,
													},
													&actionExpr{
														pos: position{line: 1024, col: 13, offset: 41627},
														run: (*parser).callonListParagraphLine107,
														expr: &litMatcher{
															pos:        position{line: 1024, col: 13, offset: 41627},
															val:        "\t",
															ignoreCase: false,
														},
													},
												},
											},
										},
										&choiceExpr{
											pos: position{line: 1032, col: 8, offset: 41723},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 1028, col: 12, offset: 41683},
													val:        "\r\n",
													ignoreCase: false,
												},
												&charClassMatcher{
													pos:        position{line: 1028, col: 21, offset: 41692},
													val:        "[\\r\\n]",
													chars:      []rune{'\r', '\n'},
													ignoreCase: false,
													inverted:   false,
												},
												&notExpr{
													pos: position{line: 1030, col: 8, offset: 41712},
													expr: &anyMatcher{
														line: 1030, col: 9, offset: 41713,
													},
												},
											},
										},
									},
								},
							},
						},
						&notExpr{
							pos: position{line: 384, col: 5, offset: 14323},
							expr: &actionExpr{
								pos: position{line: 136, col: 21, offset: 5188},
								run: (*parser).callonListParagraphLine115,
								expr: &seqExpr{
									pos: position{line: 136, col: 21, offset: 5188},
									exprs: []interface{}{
										&labeledExpr{
											pos:   position{line: 136, col: 21, offset: 5188},
											label: "attr",
											expr: &choiceExpr{
												pos: position{line: 136, col: 27, offset: 5194},
												alternatives: []interface{}{
													&actionExpr{
														pos: position{line: 145, col: 14, offset: 5645},
														run: (*parser).callonListParagraphLine119,
														expr: &labeledExpr{
															pos:   position{line: 145, col: 14, offset: 5645},
															label: "id",
															expr: &actionExpr{
																pos: position{line: 151, col: 20, offset: 5775},
																run: (*parser).callonListParagraphLine121,
																expr: &seqExpr{
																	pos: position{line: 151, col: 20, offset: 5775},
																	exprs: []interface{}{
																		&litMatcher{
																			pos:        position{line: 151, col: 20, offset: 5775},
																			val:        "[[",
																			ignoreCase: false,
																		},
																		&labeledExpr{
																			pos:   position{line: 151, col: 25, offset: 5780},
																			label: "id",
																			expr: &actionExpr{
																				pos: position{line: 1010, col: 7, offset: 41339},
																				run: (*parser).callonListParagraphLine125,
																				expr: &oneOrMoreExpr{
																					pos: position{line: 1010, col: 7, offset: 41339},
																					expr: &seqExpr{
																						pos: position{line: 1010, col: 8, offset: 41340},
																						exprs: []interface{}{
																							&notExpr{
																								pos: position{line: 1010, col: 8, offset: 41340},
																								expr: &choiceExpr{
																									pos: position{line: 1028, col: 12, offset: 41683},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1028, col: 12, offset: 41683},
																											val:        "\r\n",
																											ignoreCase: false,
																										},
																										&charClassMatcher{
																											pos:        position{line: 1028, col: 21, offset: 41692},
																											val:        "[\\r\\n]",
																											chars:      []rune{'\r', '\n'},
																											ignoreCase: false,
																											inverted:   false,
																										},
																									},
																								},
																							},
																							&notExpr{
																								pos: position{line: 1010, col: 17, offset: 41349},
																								expr: &choiceExpr{
																									pos: position{line: 1024, col: 7, offset: 41621},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1024, col: 7, offset: 41621},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1024, col: 13, offset: 41627},
																											run: (*parser).callonListParagraphLine135,
																											expr: &litMatcher{
																												pos:        position{line: 1024, col: 13, offset: 41627},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																							&notExpr{
																								pos: position{line: 1010, col: 21, offset: 41353},
																								expr: &litMatcher{
																									pos:        position{line: 1010, col: 22, offset: 41354},
																									val:        "[",
																									ignoreCase: false,
																								},
																							},
																							&notExpr{
																								pos: position{line: 1010, col: 26, offset: 41358},
																								expr: &litMatcher{
																									pos:        position{line: 1010, col: 27, offset: 41359},
																									val:        "]",
																									ignoreCase: false,
																								},
																							},
																							&notExpr{
																								pos: position{line: 1010, col: 31, offset: 41363},
																								expr: &litMatcher{
																									pos:        position{line: 1010, col: 32, offset: 41364},
																									val:        "<<",
																									ignoreCase: false,
																								},
																							},
																							&notExpr{
																								pos: position{line: 1010, col: 37, offset: 41369},
																								expr: &litMatcher{
																									pos:        position{line: 1010, col: 38, offset: 41370},
																									val:        ">>",
																									ignoreCase: false,
																								},
																							},
																							&notExpr{
																								pos: position{line: 1010, col: 43, offset: 41375},
																								expr: &litMatcher{
																									pos:        position{line: 1010, col: 44, offset: 41376},
																									val:        ",",
																									ignoreCase: false,
																								},
																							},
																							&anyMatcher{
																								line: 1010, col: 48, offset: 41380,
																							},
																						},
																					},
																				},
																			},
																		},
																		&litMatcher{
																			pos:        position{line: 151, col: 33, offset: 5788},
																			val:        "]]",
																			ignoreCase: false,
																		},
																	},
																},
															},
														},
													},
													&actionExpr{
														pos: position{line: 147, col: 5, offset: 5691},
														run: (*parser).callonListParagraphLine149,
														expr: &seqExpr{
															pos: position{line: 147, col: 5, offset: 5691},
															exprs: []interface{}{
																&litMatcher{
																	pos:        position{line: 147, col: 5, offset: 5691},
																	val:        "[#",
																	ignoreCase: false,
																},
																&labeledExpr{
																	pos:   position{line: 147, col: 10, offset: 5696},
																	label: "id",
																	expr: &actionExpr{
																		pos: position{line: 1010, col: 7, offset: 41339},
																		run: (*parser).callonListParagraphLine153,
																		expr: &oneOrMoreExpr{
																			pos: position{line: 1010, col: 7, offset: 41339},
																			expr: &seqExpr{
																				pos: position{line: 1010, col: 8, offset: 41340},
																				exprs: []interface{}{
																					&notExpr{
																						pos: position{line: 1010, col: 8, offset: 41340},
																						expr: &choiceExpr{
																							pos: position{line: 1028, col: 12, offset: 41683},
																							alternatives: []interface{}{
																								&litMatcher{
																									pos:        position{line: 1028, col: 12, offset: 41683},
																									val:        "\r\n",
																									ignoreCase: false,
																								},
																								&charClassMatcher{
																									pos:        position{line: 1028, col: 21, offset: 41692},
																									val:        "[\\r\\n]",
																									chars:      []rune{'\r', '\n'},
																									ignoreCase: false,
																									inverted:   false,
																								},
																							},
																						},
																					},
																					&notExpr{
																						pos: position{line: 1010, col: 17, offset: 41349},
																						expr: &choiceExpr{
																							pos: position{line: 1024, col: 7, offset: 41621},
																							alternatives: []interface{}{
																								&litMatcher{
																									pos:        position{line: 1024, col: 7, offset: 41621},
																									val:        " ",
																									ignoreCase: false,
																								},
																								&actionExpr{
																									pos: position{line: 1024, col: 13, offset: 41627},
																									run: (*parser).callonListParagraphLine163,
																									expr: &litMatcher{
																										pos:        position{line: 1024, col: 13, offset: 41627},
																										val:        "\t",
																										ignoreCase: false,
																									},
																								},
																							},
																						},
																					},
																					&notExpr{
																						pos: position{line: 1010, col: 21, offset: 41353},
																						expr: &litMatcher{
																							pos:        position{line: 1010, col: 22, offset: 41354},
																							val:        "[",
																							ignoreCase: false,
																						},
																					},
																					&notExpr{
																						pos: position{line: 1010, col: 26, offset: 41358},
																						expr: &litMatcher{
																							pos:        position{line: 1010, col: 27, offset: 41359},
																							val:        "]",
																							ignoreCase: false,
																						},
																					},
																					&notExpr{
																						pos: position{line: 1010, col: 31, offset: 41363},
																						expr: &litMatcher{
																							pos:        position{line: 1010, col: 32, offset: 41364},
																							val:        "<<",
																							ignoreCase: false,
																						},
																					},
																					&notExpr{
																						pos: position{line: 1010, col: 37, offset: 41369},
																						expr: &litMatcher{
																							pos:        position{line: 1010, col: 38, offset: 41370},
																							val:        ">>",
																							ignoreCase: false,
																						},
																					},
																					&notExpr{
																						pos: position{line: 1010, col: 43, offset: 41375},
																						expr: &litMatcher{
																							pos:        position{line: 1010, col: 44, offset: 41376},
																							val:        ",",
																							ignoreCase: false,
																						},
																					},
																					&anyMatcher{
																						line: 1010, col: 48, offset: 41380,
																					},
																				},
																			},
																		},
																	},
																},
																&litMatcher{
																	pos:        position{line: 147, col: 18, offset: 5704},
																	val:        "]",
																	ignoreCase: false,
																},
															},
														},
													},
													&actionExpr{
														pos: position{line: 157, col: 17, offset: 5997},
														run: (*parser).callonListParagraphLine177,
														expr: &seqExpr{
															pos: position{line: 157, col: 17, offset: 5997},
															exprs: []interface{}{
																&litMatcher{
																	pos:        position{line: 157, col: 17, offset: 5997},
																	val:        ".",
																	ignoreCase: false,
																},
																&notExpr{
																	pos: position{line: 157, col: 21, offset: 6001},
																	expr: &litMatcher{
																		pos:        position{line: 157, col: 22, offset: 6002},
																		val:        ".",
																		ignoreCase: false,
																	},
																},
																&notExpr{
																	pos: position{line: 157, col: 26, offset: 6006},
																	expr: &choiceExpr{
																		pos: position{line: 1024, col: 7, offset: 41621},
																		alternatives: []interface{}{
																			&litMatcher{
																				pos:        position{line: 1024, col: 7, offset: 41621},
																				val:        " ",
																				ignoreCase: false,
																			},
																			&actionExpr{
																				pos: position{line: 1024, col: 13, offset: 41627},
																				run: (*parser).callonListParagraphLine185,
																				expr: &litMatcher{
																					pos:        position{line: 1024, col: 13, offset: 41627},
																					val:        "\t",
																					ignoreCase: false,
																				},
																			},
																		},
																	},
																},
																&labeledExpr{
																	pos:   position{line: 157, col: 30, offset: 6010},
																	label: "title",
																	expr: &actionExpr{
																		pos: position{line: 161, col: 24, offset: 6115},
																		run: (*parser).callonListParagraphLine188,
																		expr: &oneOrMoreExpr{
																			pos: position{line: 161, col: 24, offset: 6115},
																			expr: &seqExpr{
																				pos: position{line: 161, col: 25, offset: 6116},
																				exprs: []interface{}{
																					&notExpr{
																						pos: position{line: 161, col: 25, offset: 6116},
																						expr: &choiceExpr{
																							pos: position{line: 1028, col: 12, offset: 41683},
																							alternatives: []interface{}{
																								&litMatcher{
																									pos:        position{line: 1028, col: 12, offset: 41683},
																									val:        "\r\n",
																									ignoreCase: false,
																								},
																								&charClassMatcher{
																									pos:        position{line: 1028, col: 21, offset: 41692},
																									val:        "[\\r\\n]",
																									chars:      []rune{'\r', '\n'},
																									ignoreCase: false,
																									inverted:   false,
																								},
																							},
																						},
																					},
																					&anyMatcher{
																						line: 161, col: 34, offset: 6125,
																					},
																				},
																			},
																		},
																	},
																},
															},
														},
													},
													&actionExpr{
														pos: position{line: 167, col: 16, offset: 6274},
														run: (*parser).callonListParagraphLine196,
														expr: &seqExpr{
															pos: position{line: 167, col: 16, offset: 6274},
															exprs: []interface{}{
																&litMatcher{
																	pos:        position{line: 167, col: 16, offset: 6274},
																	val:        "[.",
																	ignoreCase: false,
																},
																&notExpr{
																	pos: position{line: 167, col: 21, offset: 6279},
																	expr: &choiceExpr{
																		pos: position{line: 1024, col: 7, offset: 41621},
																		alternatives: []interface{}{
																			&litMatcher{
																				pos:        position{line: 1024, col: 7, offset: 41621},
																				val:        " ",
																				ignoreCase: false,
																			},
																			&actionExpr{
																				pos: position{line: 1024, col: 13, offset: 41627},
																				run: (*parser).callonListParagraphLine202,
																				expr: &litMatcher{
																					pos:        position{line: 1024, col: 13, offset: 41627},
																					val:        "\t",
																					ignoreCase: false,
																				},
																			},
																		},
																	},
																},
																&labeledExpr{
																	pos:   position{line: 167, col: 25, offset: 6283},
																	label: "role",
																	expr: &actionExpr{
																		pos: position{line: 171, col: 23, offset: 6387},
																		run: (*parser).callonListParagraphLine205,
																		expr: &oneOrMoreExpr{
																			pos: position{line: 171, col: 23, offset: 6387},
																			expr: &seqExpr{
																				pos: position{line: 171, col: 24, offset: 6388},
																				exprs: []interface{}{
																					&notExpr{
																						pos: position{line: 171, col: 24, offset: 6388},
																						expr: &choiceExpr{
																							pos: position{line: 1028, col: 12, offset: 41683},
																							alternatives: []interface{}{
																								&litMatcher{
																									pos:        position{line: 1028, col: 12, offset: 41683},
																									val:        "\r\n",
																									ignoreCase: false,
																								},
																								&charClassMatcher{
																									pos:        position{line: 1028, col: 21, offset: 41692},
																									val:        "[\\r\\n]",
																									chars:      []rune{'\r', '\n'},
																									ignoreCase: false,
																									inverted:   false,
																								},
																							},
																						},
																					},
																					&notExpr{
																						pos: position{line: 171, col: 33, offset: 6397},
																						expr: &litMatcher{
																							pos:        position{line: 171, col: 34, offset: 6398},
																							val:        "]",
																							ignoreCase: false,
																						},
																					},
																					&anyMatcher{
																						line: 171, col: 38, offset: 6402,
																					},
																				},
																			},
																		},
																	},
																},
																&litMatcher{
																	pos:        position{line: 167, col: 51, offset: 6309},
																	val:        "]",
																	ignoreCase: false,
																},
															},
														},
													},
													&actionExpr{
														pos: position{line: 176, col: 30, offset: 6551},
														run: (*parser).callonListParagraphLine216,
														expr: &seqExpr{
															pos: position{line: 176, col: 30, offset: 6551},
															exprs: []interface{}{
																&litMatcher{
																	pos:        position{line: 176, col: 30, offset: 6551},
																	val:        "[",
																	ignoreCase: false,
																},
																&labeledExpr{
																	pos:   position{line: 176, col: 34, offset: 6555},
																	label: "k",
																	expr: &choiceExpr{
																		pos: position{line: 494, col: 19, offset: 19245},
																		alternatives: []interface{}{
																			&actionExpr{
																				pos: position{line: 494, col: 19, offset: 19245},
																				run: (*parser).callonListParagraphLine221,
																				expr: &litMatcher{
																					pos:        position{line: 494, col: 19, offset: 19245},
																					val:        "TIP",
																					ignoreCase: false,
																				},
																			},
																			&actionExpr{
																				pos: position{line: 496, col: 5, offset: 19283},
																				run: (*parser).callonListParagraphLine223,
																				expr: &litMatcher{
																					pos:        position{line: 496, col: 5, offset: 19283},
																					val:        "NOTE",
																					ignoreCase: false,
																				},
																			},
																			&actionExpr{
																				pos: position{line: 498, col: 5, offset: 19323},
																				run: (*parser).callonListParagraphLine225,
																				expr: &litMatcher{
																					pos:        position{line: 498, col: 5, offset: 19323},
																					val:        "IMPORTANT",
																					ignoreCase: false,
																				},
																			},
																			&actionExpr{
																				pos: position{line: 500, col: 5, offset: 19373},
																				run: (*parser).callonListParagraphLine227,
																				expr: &litMatcher{
																					pos:        position{line: 500, col: 5, offset: 19373},
																					val:        "WARNING",
																					ignoreCase: false,
																				},
																			},
																			&actionExpr{
																				pos: position{line: 502, col: 5, offset: 19419},
																				run: (*parser).callonListParagraphLine229,
																				expr: &litMatcher{
																					pos:        position{line: 502, col: 5, offset: 19419},
																					val:        "CAUTION",
																					ignoreCase: false,
																				},
																			},
																		},
																	},
																},
																&litMatcher{
																	pos:        position{line: 176, col: 53, offset: 6574},
																	val:        "]",
																	ignoreCase: false,
																},
															},
														},
													},
													&actionExpr{
														pos: position{line: 199, col: 21, offset: 7312},
														run: (*parser).callonListParagraphLine232,
														expr: &litMatcher{
															pos:        position{line: 199, col: 21, offset: 7312},
															val:        "[horizontal]",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 181, col: 19, offset: 6735},
														run: (*parser).callonListParagraphLine234,
														expr: &seqExpr{
															pos: position{line: 181, col: 19, offset: 6735},
															exprs: []interface{}{
																&litMatcher{
																	pos:        position{line: 181, col: 19, offset: 6735},
																	val:        "[",
																	ignoreCase: false,
																},
																&notExpr{
																	pos: position{line: 181, col: 23, offset: 6739},
																	expr: &choiceExpr{
																		pos: position{line: 1024, col: 7, offset: 41621},
																		alternatives: []interface{}{
																			&litMatcher{
																				pos:        position{line: 1024, col: 7, offset: 41621},
																				val:        " ",
																				ignoreCase: false,
																			},
																			&actionExpr{
																				pos: position{line: 1024, col: 13, offset: 41627},
																				run: (*parser).callonListParagraphLine240,
																				expr: &litMatcher{
																					pos:        position{line: 1024, col: 13, offset: 41627},
																					val:        "\t",
																					ignoreCase: false,
																				},
																			},
																		},
																	},
																},
																&labeledExpr{
																	pos:   position{line: 181, col: 27, offset: 6743},
																	label: "attributes",
																	expr: &zeroOrMoreExpr{
																		pos: position{line: 181, col: 38, offset: 6754},
																		expr: &choiceExpr{
																			pos: position{line: 185, col: 21, offset: 6867},
																			alternatives: []interface{}{
																				&actionExpr{
																					pos: position{line: 185, col: 21, offset: 6867},
																					run: (*parser).callonListParagraphLine245,
																					expr: &seqExpr{
																						pos: position{line: 185, col: 21, offset: 6867},
																						exprs: []interface{}{
																							&labeledExpr{
																								pos:   position{line: 185, col: 21, offset: 6867},
																								label: "key",
																								expr: &actionExpr{
																									pos: position{line: 191, col: 17, offset: 7127},
																									run: (*parser).callonListParagraphLine248,
																									expr: &seqExpr{
																										pos: position{line: 191, col: 17, offset: 7127},
																										exprs: []interface{}{
																											&notExpr{
																												pos: position{line: 191, col: 17, offset: 7127},
																												expr: &actionExpr{
																													pos: position{line: 231, col: 14, offset: 8674},
																													run: (*parser).callonListParagraphLine251,
																													expr: &litMatcher{
																														pos:        position{line: 231, col: 14, offset: 8674},
																														val:        "verse",
																														ignoreCase: false,
																													},
																												},
																											},
																											&notExpr{
																												pos: position{line: 191, col: 28, offset: 7138},
																												expr: &actionExpr{
																													pos: position{line: 975, col: 16, offset: 40537},
																													run: (*parser).callonListParagraphLine254,
																													expr: &litMatcher{
																														pos:        position{line: 975, col: 16, offset: 40537},
																														val:        "literal",
																														ignoreCase: false,
																													},
																												},
																											},
																											&labeledExpr{
																												pos:   position{line: 191, col: 41, offset: 7151},
																												label: "key",
																												expr: &oneOrMoreExpr{
																													pos: position{line: 191, col: 45, offset: 7155},
																													expr: &seqExpr{
																														pos: position{line: 191, col: 46, offset: 7156},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 191, col: 46, offset: 7156},
																																expr: &litMatcher{
																																	pos:        position{line: 191, col: 47, offset: 7157},
																																	val:        "=",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 191, col: 51, offset: 7161},
																																expr: &litMatcher{
																																	pos:        position{line: 191, col: 52, offset: 7162},
																																	val:        ",",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 191, col: 56, offset: 7166},
																																expr: &litMatcher{
																																	pos:        position{line: 191, col: 57, offset: 7167},
																																	val:        "]",
																																	ignoreCase: false,
																																},
																															},
																															&anyMatcher{
																																line: 191, col: 61, offset: 7171,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&litMatcher{
																								pos:        position{line: 185, col: 40, offset: 6886},
																								val:        "=",
																								ignoreCase: false,
																							},
																							&labeledExpr{
																								pos:   position{line: 185, col: 44, offset: 6890},
																								label: "value",
																								expr: &actionExpr{
																									pos: position{line: 195, col: 19, offset: 7230},
																									run: (*parser).callonListParagraphLine268,
																									expr: &labeledExpr{
																										pos:   position{line: 195, col: 19, offset: 7230},
																										label: "value",
																										expr: &zeroOrMoreExpr{
																											pos: position{line: 195, col: 25, offset: 7236},
																											expr: &seqExpr{
																												pos: position{line: 195, col: 26, offset: 7237},
																												exprs: []interface{}{
																													&notExpr{
																														pos: position{line: 195, col: 26, offset: 7237},
																														expr: &litMatcher{
																															pos:        position{line: 195, col: 27, offset: 7238},
																															val:        "=",
																															ignoreCase: false,
																														},
																													},
																													&notExpr{
																														pos: position{line: 195, col: 31, offset: 7242},
																														expr: &litMatcher{
																															pos:        position{line: 195, col: 32, offset: 7243},
																															val:        ",",
																															ignoreCase: false,
																														},
																													},
																													&notExpr{
																														pos: position{line: 195, col: 36, offset: 7247},
																														expr: &litMatcher{
																															pos:        position{line: 195, col: 37, offset: 7248},
																															val:        "]",
																															ignoreCase: false,
																														},
																													},
																													&anyMatcher{
																														line: 195, col: 41, offset: 7252,
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&zeroOrOneExpr{
																								pos: position{line: 185, col: 67, offset: 6913},
																								expr: &litMatcher{
																									pos:        position{line: 185, col: 67, offset: 6913},
																									val:        ",",
																									ignoreCase: false,
																								},
																							},
																							&zeroOrMoreExpr{
																								pos: position{line: 185, col: 72, offset: 6918},
																								expr: &choiceExpr{
																									pos: position{line: 1024, col: 7, offset: 41621},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1024, col: 7, offset: 41621},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1024, col: 13, offset: 41627},
																											run: (*parser).callonListParagraphLine284,
																											expr: &litMatcher{
																												pos:        position{line: 1024, col: 13, offset: 41627},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																				&actionExpr{
																					pos: position{line: 187, col: 5, offset: 7002},
																					run: (*parser).callonListParagraphLine286,
																					expr: &seqExpr{
																						pos: position{line: 187, col: 5, offset: 7002},
																						exprs: []interface{}{
																							&labeledExpr{
																								pos:   position{line: 187, col: 5, offset: 7002},
																								label: "key",
																								expr: &actionExpr{
																									pos: position{line: 191, col: 17, offset: 7127},
																									run: (*parser).callonListParagraphLine289,
																									expr: &seqExpr{
																										pos: position{line: 191, col: 17, offset: 7127},
																										exprs: []interface{}{
																											&notExpr{
																												pos: position{line: 191, col: 17, offset: 7127},
																												expr: &actionExpr{
																													pos: position{line: 231, col: 14, offset: 8674},
																													run: (*parser).callonListParagraphLine292,
																													expr: &litMatcher{
																														pos:        position{line: 231, col: 14, offset: 8674},
																														val:        "verse",
																														ignoreCase: false,
																													},
																												},
																											},
																											&notExpr{
																												pos: position{line: 191, col: 28, offset: 7138},
																												expr: &actionExpr{
																													pos: position{line: 975, col: 16, offset: 40537},
																													run: (*parser).callonListParagraphLine295,
																													expr: &litMatcher{
																														pos:        position{line: 975, col: 16, offset: 40537},
																														val:        "literal",
																														ignoreCase: false,
																													},
																												},
																											},
																											&labeledExpr{
																												pos:   position{line: 191, col: 41, offset: 7151},
																												label: "key",
																												expr: &oneOrMoreExpr{
																													pos: position{line: 191, col: 45, offset: 7155},
																													expr: &seqExpr{
																														pos: position{line: 191, col: 46, offset: 7156},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 191, col: 46, offset: 7156},
																																expr: &litMatcher{
																																	pos:        position{line: 191, col: 47, offset: 7157},
																																	val:        "=",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 191, col: 51, offset: 7161},
																																expr: &litMatcher{
																																	pos:        position{line: 191, col: 52, offset: 7162},
																																	val:        ",",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 191, col: 56, offset: 7166},
																																expr: &litMatcher{
																																	pos:        position{line: 191, col: 57, offset: 7167},
																																	val:        "]",
																																	ignoreCase: false,
																																},
																															},
																															&anyMatcher{
																																line: 191, col: 61, offset: 7171,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&zeroOrOneExpr{
																								pos: position{line: 187, col: 24, offset: 7021},
																								expr: &litMatcher{
																									pos:        position{line: 187, col: 24, offset: 7021},
																									val:        ",",
																									ignoreCase: false,
																								},
																							},
																							&zeroOrMoreExpr{
																								pos: position{line: 187, col: 29, offset: 7026},
																								expr: &choiceExpr{
																									pos: position{line: 1024, col: 7, offset: 41621},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1024, col: 7, offset: 41621},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1024, col: 13, offset: 41627},
																											run: (*parser).callonListParagraphLine312,
																											expr: &litMatcher{
																												pos:        position{line: 1024, col: 13, offset: 41627},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																},
																&litMatcher{
																	pos:        position{line: 181, col: 59, offset: 6775},
																	val:        "]",
																	ignoreCase: false,
																},
															},
														},
													},
												},
											},
										},
										&zeroOrMoreExpr{
											pos: position{line: 136, col: 131, offset: 5298},
											expr: &choiceExpr{
												pos: position{line: 1024, col: 7, offset: 41621},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1024, col: 7, offset: 41621},
														val:        " ",
														ignoreCase: false,
													},
													&actionExpr{
														pos: position{line: 1024, col: 13, offset: 41627},
														run: (*parser).callonListParagraphLine318,
														expr: &litMatcher{
															pos:        position{line: 1024, col: 13, offset: 41627},
															val:        "\t",
															ignoreCase: false,
														},
													},
												},
											},
										},
										&choiceExpr{
											pos: position{line: 1032, col: 8, offset: 41723},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 1028, col: 12, offset: 41683},
													val:        "\r\n",
													ignoreCase: false,
												},
												&charClassMatcher{
													pos:        position{line: 1028, col: 21, offset: 41692},
													val:        "[\\r\\n]",
													chars:      []rune{'\r', '\n'},
													ignoreCase: false,
													inverted:   false,
												},
												&notExpr{
													pos: position{line: 1030, col: 8, offset: 41712},
													expr: &anyMatcher{
														line: 1030, col: 9, offset: 41713,
													},
												},
											},
										},
									},
								},
							},
						},
						&notExpr{
							pos: position{line: 385, col: 5, offset: 14347},
							expr: &choiceExpr{
								pos: position{line: 763, col: 19, offset: 31912},
								alternatives: []interface{}{
									&litMatcher{
										pos:        position{line: 968, col: 26, offset: 40226},
										val:        "....",
										ignoreCase: false,
									},
									&litMatcher{
										pos:        position{line: 771, col: 25, offset: 32329},
										val:        "```",
										ignoreCase: false,
									},
									&litMatcher{
										pos:        position{line: 782, col: 26, offset: 32881},
										val:        "----",
										ignoreCase: false,
									},
									&litMatcher{
										pos:        position{line: 804, col: 26, offset: 33857},
										val:        "====",
										ignoreCase: false,
									},
									&litMatcher{
										pos:        position{line: 925, col: 26, offset: 38379},
										val:        "////",
										ignoreCase: false,
									},
									&litMatcher{
										pos:        position{line: 827, col: 24, offset: 34755},
										val:        "____",
										ignoreCase: false,
									},
									&litMatcher{
										pos:        position{line: 881, col: 26, offset: 36707},
										val:        "****",
										ignoreCase: false,
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 386, col: 5, offset: 14369},
							label: "line",
							expr: &ruleRefExpr{
								pos:  position{line: 386, col: 11, offset: 14375},
								name: "InlineElements",
							},
						},
					},
				},
			},
		},
		{
			name: "ContinuedDocumentBlock",
			pos:  position{line: 394, col: 1, offset: 14505},
			expr: &actionExpr{
				pos: position{line: 394, col: 27, offset: 14531},
				run: (*parser).callonContinuedDocumentBlock1,
				expr: &seqExpr{
					pos: position{line: 394, col: 27, offset: 14531},
					exprs: []interface{}{
						&actionExpr{
							pos: position{line: 390, col: 25, offset: 14445},
							run: (*parser).callonContinuedDocumentBlock3,
							expr: &seqExpr{
								pos: position{line: 390, col: 25, offset: 14445},
								exprs: []interface{}{
									&litMatcher{
										pos:        position{line: 390, col: 25, offset: 14445},
										val:        "+",
										ignoreCase: false,
									},
									&zeroOrMoreExpr{
										pos: position{line: 390, col: 29, offset: 14449},
										expr: &choiceExpr{
											pos: position{line: 1024, col: 7, offset: 41621},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 1024, col: 7, offset: 41621},
													val:        " ",
													ignoreCase: false,
												},
												&actionExpr{
													pos: position{line: 1024, col: 13, offset: 41627},
													run: (*parser).callonContinuedDocumentBlock9,
													expr: &litMatcher{
														pos:        position{line: 1024, col: 13, offset: 41627},
														val:        "\t",
														ignoreCase: false,
													},
												},
											},
										},
									},
									&choiceExpr{
										pos: position{line: 1032, col: 8, offset: 41723},
										alternatives: []interface{}{
											&litMatcher{
												pos:        position{line: 1028, col: 12, offset: 41683},
												val:        "\r\n",
												ignoreCase: false,
											},
											&charClassMatcher{
												pos:        position{line: 1028, col: 21, offset: 41692},
												val:        "[\\r\\n]",
												chars:      []rune{'\r', '\n'},
												ignoreCase: false,
												inverted:   false,
											},
											&notExpr{
												pos: position{line: 1030, col: 8, offset: 41712},
												expr: &anyMatcher{
													line: 1030, col: 9, offset: 41713,
												},
											},
										},
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 394, col: 48, offset: 14552},
							label: "element",
							expr: &ruleRefExpr{
								pos:  position{line: 394, col: 56, offset: 14560},
								name: "DocumentBlock",
							},
						},
					},
				},
			},
		},
		{
			name: "OrderedListItem",
			pos:  position{line: 401, col: 1, offset: 14717},
			expr: &actionExpr{
				pos: position{line: 401, col: 20, offset: 14736},
				run: (*parser).callonOrderedListItem1,
				expr: &seqExpr{
					pos: position{line: 401, col: 20, offset: 14736},
					exprs: []interface{}{
						&labeledExpr{
							pos:   position{line: 401, col: 20, offset: 14736},
							label: "attributes",
							expr: &zeroOrMoreExpr{
								pos: position{line: 401, col: 31, offset: 14747},
								expr: &actionExpr{
									pos: position{line: 136, col: 21, offset: 5188},
									run: (*parser).callonOrderedListItem5,
									expr: &seqExpr{
										pos: position{line: 136, col: 21, offset: 5188},
										exprs: []interface{}{
											&labeledExpr{
												pos:   position{line: 136, col: 21, offset: 5188},
												label: "attr",
												expr: &choiceExpr{
													pos: position{line: 136, col: 27, offset: 5194},
													alternatives: []interface{}{
														&actionExpr{
															pos: position{line: 145, col: 14, offset: 5645},
															run: (*parser).callonOrderedListItem9,
															expr: &labeledExpr{
																pos:   position{line: 145, col: 14, offset: 5645},
																label: "id",
																expr: &actionExpr{
																	pos: position{line: 151, col: 20, offset: 5775},
																	run: (*parser).callonOrderedListItem11,
																	expr: &seqExpr{
																		pos: position{line: 151, col: 20, offset: 5775},
																		exprs: []interface{}{
																			&litMatcher{
																				pos:        position{line: 151, col: 20, offset: 5775},
																				val:        "[[",
																				ignoreCase: false,
																			},
																			&labeledExpr{
																				pos:   position{line: 151, col: 25, offset: 5780},
																				label: "id",
																				expr: &actionExpr{
																					pos: position{line: 1010, col: 7, offset: 41339},
																					run: (*parser).callonOrderedListItem15,
																					expr: &oneOrMoreExpr{
																						pos: position{line: 1010, col: 7, offset: 41339},
																						expr: &seqExpr{
																							pos: position{line: 1010, col: 8, offset: 41340},
																							exprs: []interface{}{
																								&notExpr{
																									pos: position{line: 1010, col: 8, offset: 41340},
																									expr: &choiceExpr{
																										pos: position{line: 1028, col: 12, offset: 41683},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1028, col: 12, offset: 41683},
																												val:        "\r\n",
																												ignoreCase: false,
																											},
																											&charClassMatcher{
																												pos:        position{line: 1028, col: 21, offset: 41692},
																												val:        "[\\r\\n]",
																												chars:      []rune{'\r', '\n'},
																												ignoreCase: false,
																												inverted:   false,
																											},
																										},
																									},
																								},
																								&notExpr{
																									pos: position{line: 1010, col: 17, offset: 41349},
																									expr: &choiceExpr{
																										pos: position{line: 1024, col: 7, offset: 41621},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1024, col: 7, offset: 41621},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 1024, col: 13, offset: 41627},
																												run: (*parser).callonOrderedListItem25,
																												expr: &litMatcher{
																													pos:        position{line: 1024, col: 13, offset: 41627},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																								&notExpr{
																									pos: position{line: 1010, col: 21, offset: 41353},
																									expr: &litMatcher{
																										pos:        position{line: 1010, col: 22, offset: 41354},
																										val:        "[",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 1010, col: 26, offset: 41358},
																									expr: &litMatcher{
																										pos:        position{line: 1010, col: 27, offset: 41359},
																										val:        "]",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 1010, col: 31, offset: 41363},
																									expr: &litMatcher{
																										pos:        position{line: 1010, col: 32, offset: 41364},
																										val:        "<<",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 1010, col: 37, offset: 41369},
																									expr: &litMatcher{
																										pos:        position{line: 1010, col: 38, offset: 41370},
																										val:        ">>",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 1010, col: 43, offset: 41375},
																									expr: &litMatcher{
																										pos:        position{line: 1010, col: 44, offset: 41376},
																										val:        ",",
																										ignoreCase: false,
																									},
																								},
																								&anyMatcher{
																									line: 1010, col: 48, offset: 41380,
																								},
																							},
																						},
																					},
																				},
																			},
																			&litMatcher{
																				pos:        position{line: 151, col: 33, offset: 5788},
																				val:        "]]",
																				ignoreCase: false,
																			},
																		},
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 147, col: 5, offset: 5691},
															run: (*parser).callonOrderedListItem39,
															expr: &seqExpr{
																pos: position{line: 147, col: 5, offset: 5691},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 147, col: 5, offset: 5691},
																		val:        "[#",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 147, col: 10, offset: 5696},
																		label: "id",
																		expr: &actionExpr{
																			pos: position{line: 1010, col: 7, offset: 41339},
																			run: (*parser).callonOrderedListItem43,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 1010, col: 7, offset: 41339},
																				expr: &seqExpr{
																					pos: position{line: 1010, col: 8, offset: 41340},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 1010, col: 8, offset: 41340},
																							expr: &choiceExpr{
																								pos: position{line: 1028, col: 12, offset: 41683},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1028, col: 12, offset: 41683},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 1028, col: 21, offset: 41692},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 1010, col: 17, offset: 41349},
																							expr: &choiceExpr{
																								pos: position{line: 1024, col: 7, offset: 41621},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1024, col: 7, offset: 41621},
																										val:        " ",
																										ignoreCase: false,
																									},
																									&actionExpr{
																										pos: position{line: 1024, col: 13, offset: 41627},
																										run: (*parser).callonOrderedListItem53,
																										expr: &litMatcher{
																											pos:        position{line: 1024, col: 13, offset: 41627},
																											val:        "\t",
																											ignoreCase: false,
																										},
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 1010, col: 21, offset: 41353},
																							expr: &litMatcher{
																								pos:        position{line: 1010, col: 22, offset: 41354},
																								val:        "[",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 1010, col: 26, offset: 41358},
																							expr: &litMatcher{
																								pos:        position{line: 1010, col: 27, offset: 41359},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 1010, col: 31, offset: 41363},
																							expr: &litMatcher{
																								pos:        position{line: 1010, col: 32, offset: 41364},
																								val:        "<<",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 1010, col: 37, offset: 41369},
																							expr: &litMatcher{
																								pos:        position{line: 1010, col: 38, offset: 41370},
																								val:        ">>",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 1010, col: 43, offset: 41375},
																							expr: &litMatcher{
																								pos:        position{line: 1010, col: 44, offset: 41376},
																								val:        ",",
																								ignoreCase: false,
																							},
																						},
																						&anyMatcher{
																							line: 1010, col: 48, offset: 41380,
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 147, col: 18, offset: 5704},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 157, col: 17, offset: 5997},
															run: (*parser).callonOrderedListItem67,
															expr: &seqExpr{
																pos: position{line: 157, col: 17, offset: 5997},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 157, col: 17, offset: 5997},
																		val:        ".",
																		ignoreCase: false,
																	},
																	&notExpr{
																		pos: position{line: 157, col: 21, offset: 6001},
																		expr: &litMatcher{
																			pos:        position{line: 157, col: 22, offset: 6002},
																			val:        ".",
																			ignoreCase: false,
																		},
																	},
																	&notExpr{
																		pos: position{line: 157, col: 26, offset: 6006},
																		expr: &choiceExpr{
																			pos: position{line: 1024, col: 7, offset: 41621},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1024, col: 7, offset: 41621},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1024, col: 13, offset: 41627},
																					run: (*parser).callonOrderedListItem75,
																					expr: &litMatcher{
																						pos:        position{line: 1024, col: 13, offset: 41627},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 157, col: 30, offset: 6010},
																		label: "title",
																		expr: &actionExpr{
																			pos: position{line: 161, col: 24, offset: 6115},
																			run: (*parser).callonOrderedListItem78,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 161, col: 24, offset: 6115},
																				expr: &seqExpr{
																					pos: position{line: 161, col: 25, offset: 6116},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 161, col: 25, offset: 6116},
																							expr: &choiceExpr{
																								pos: position{line: 1028, col: 12, offset: 41683},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1028, col: 12, offset: 41683},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 1028, col: 21, offset: 41692},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																						},
																						&anyMatcher{
																							line: 161, col: 34, offset: 6125,
																						},
																					},
																				},
																			},
																		},
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 167, col: 16, offset: 6274},
															run: (*parser).callonOrderedListItem86,
															expr: &seqExpr{
																pos: position{line: 167, col: 16, offset: 6274},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 167, col: 16, offset: 6274},
																		val:        "[.",
																		ignoreCase: false,
																	},
																	&notExpr{
																		pos: position{line: 167, col: 21, offset: 6279},
																		expr: &choiceExpr{
																			pos: position{line: 1024, col: 7, offset: 41621},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1024, col: 7, offset: 41621},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1024, col: 13, offset: 41627},
																					run: (*parser).callonOrderedListItem92,
																					expr: &litMatcher{
																						pos:        position{line: 1024, col: 13, offset: 41627},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 167, col: 25, offset: 6283},
																		label: "role",
																		expr: &actionExpr{
																			pos: position{line: 171, col: 23, offset: 6387},
																			run: (*parser).callonOrderedListItem95,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 171, col: 23, offset: 6387},
																				expr: &seqExpr{
																					pos: position{line: 171, col: 24, offset: 6388},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 171, col: 24, offset: 6388},
																							expr: &choiceExpr{
																								pos: position{line: 1028, col: 12, offset: 41683},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1028, col: 12, offset: 41683},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 1028, col: 21, offset: 41692},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 171, col: 33, offset: 6397},
																							expr: &litMatcher{
																								pos:        position{line: 171, col: 34, offset: 6398},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																						&anyMatcher{
																							line: 171, col: 38, offset: 6402,
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 167, col: 51, offset: 6309},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 176, col: 30, offset: 6551},
															run: (*parser).callonOrderedListItem106,
															expr: &seqExpr{
																pos: position{line: 176, col: 30, offset: 6551},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 176, col: 30, offset: 6551},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 176, col: 34, offset: 6555},
																		label: "k",
																		expr: &choiceExpr{
																			pos: position{line: 494, col: 19, offset: 19245},
																			alternatives: []interface{}{
																				&actionExpr{
																					pos: position{line: 494, col: 19, offset: 19245},
																					run: (*parser).callonOrderedListItem111,
																					expr: &litMatcher{
																						pos:        position{line: 494, col: 19, offset: 19245},
																						val:        "TIP",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 496, col: 5, offset: 19283},
																					run: (*parser).callonOrderedListItem113,
																					expr: &litMatcher{
																						pos:        position{line: 496, col: 5, offset: 19283},
																						val:        "NOTE",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 498, col: 5, offset: 19323},
																					run: (*parser).callonOrderedListItem115,
																					expr: &litMatcher{
																						pos:        position{line: 498, col: 5, offset: 19323},
																						val:        "IMPORTANT",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 500, col: 5, offset: 19373},
																					run: (*parser).callonOrderedListItem117,
																					expr: &litMatcher{
																						pos:        position{line: 500, col: 5, offset: 19373},
																						val:        "WARNING",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 502, col: 5, offset: 19419},
																					run: (*parser).callonOrderedListItem119,
																					expr: &litMatcher{
																						pos:        position{line: 502, col: 5, offset: 19419},
																						val:        "CAUTION",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 176, col: 53, offset: 6574},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 199, col: 21, offset: 7312},
															run: (*parser).callonOrderedListItem122,
															expr: &litMatcher{
																pos:        position{line: 199, col: 21, offset: 7312},
																val:        "[horizontal]",
																ignoreCase: false,
															},
														},
														&actionExpr{
															pos: position{line: 181, col: 19, offset: 6735},
															run: (*parser).callonOrderedListItem124,
															expr: &seqExpr{
																pos: position{line: 181, col: 19, offset: 6735},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 181, col: 19, offset: 6735},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&notExpr{
																		pos: position{line: 181, col: 23, offset: 6739},
																		expr: &choiceExpr{
																			pos: position{line: 1024, col: 7, offset: 41621},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1024, col: 7, offset: 41621},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1024, col: 13, offset: 41627},
																					run: (*parser).callonOrderedListItem130,
																					expr: &litMatcher{
																						pos:        position{line: 1024, col: 13, offset: 41627},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 181, col: 27, offset: 6743},
																		label: "attributes",
																		expr: &zeroOrMoreExpr{
																			pos: position{line: 181, col: 38, offset: 6754},
																			expr: &choiceExpr{
																				pos: position{line: 185, col: 21, offset: 6867},
																				alternatives: []interface{}{
																					&actionExpr{
																						pos: position{line: 185, col: 21, offset: 6867},
																						run: (*parser).callonOrderedListItem135,
																						expr: &seqExpr{
																							pos: position{line: 185, col: 21, offset: 6867},
																							exprs: []interface{}{
																								&labeledExpr{
																									pos:   position{line: 185, col: 21, offset: 6867},
																									label: "key",
																									expr: &actionExpr{
																										pos: position{line: 191, col: 17, offset: 7127},
																										run: (*parser).callonOrderedListItem138,
																										expr: &seqExpr{
																											pos: position{line: 191, col: 17, offset: 7127},
																											exprs: []interface{}{
																												&notExpr{
																													pos: position{line: 191, col: 17, offset: 7127},
																													expr: &actionExpr{
																														pos: position{line: 231, col: 14, offset: 8674},
																														run: (*parser).callonOrderedListItem141,
																														expr: &litMatcher{
																															pos:        position{line: 231, col: 14, offset: 8674},
																															val:        "verse",
																															ignoreCase: false,
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 191, col: 28, offset: 7138},
																													expr: &actionExpr{
																														pos: position{line: 975, col: 16, offset: 40537},
																														run: (*parser).callonOrderedListItem144,
																														expr: &litMatcher{
																															pos:        position{line: 975, col: 16, offset: 40537},
																															val:        "literal",
																															ignoreCase: false,
																														},
																													},
																												},
																												&labeledExpr{
																													pos:   position{line: 191, col: 41, offset: 7151},
																													label: "key",
																													expr: &oneOrMoreExpr{
																														pos: position{line: 191, col: 45, offset: 7155},
																														expr: &seqExpr{
																															pos: position{line: 191, col: 46, offset: 7156},
																															exprs: []interface{}{
																																&notExpr{
																																	pos: position{line: 191, col: 46, offset: 7156},
																																	expr: &litMatcher{
																																		pos:        position{line: 191, col: 47, offset: 7157},
																																		val:        "=",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 191, col: 51, offset: 7161},
																																	expr: &litMatcher{
																																		pos:        position{line: 191, col: 52, offset: 7162},
																																		val:        ",",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 191, col: 56, offset: 7166},
																																	expr: &litMatcher{
																																		pos:        position{line: 191, col: 57, offset: 7167},
																																		val:        "]",
																																		ignoreCase: false,
																																	},
																																},
																																&anyMatcher{
																																	line: 191, col: 61, offset: 7171,
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&litMatcher{
																									pos:        position{line: 185, col: 40, offset: 6886},
																									val:        "=",
																									ignoreCase: false,
																								},
																								&labeledExpr{
																									pos:   position{line: 185, col: 44, offset: 6890},
																									label: "value",
																									expr: &actionExpr{
																										pos: position{line: 195, col: 19, offset: 7230},
																										run: (*parser).callonOrderedListItem158,
																										expr: &labeledExpr{
																											pos:   position{line: 195, col: 19, offset: 7230},
																											label: "value",
																											expr: &zeroOrMoreExpr{
																												pos: position{line: 195, col: 25, offset: 7236},
																												expr: &seqExpr{
																													pos: position{line: 195, col: 26, offset: 7237},
																													exprs: []interface{}{
																														&notExpr{
																															pos: position{line: 195, col: 26, offset: 7237},
																															expr: &litMatcher{
																																pos:        position{line: 195, col: 27, offset: 7238},
																																val:        "=",
																																ignoreCase: false,
																															},
																														},
																														&notExpr{
																															pos: position{line: 195, col: 31, offset: 7242},
																															expr: &litMatcher{
																																pos:        position{line: 195, col: 32, offset: 7243},
																																val:        ",",
																																ignoreCase: false,
																															},
																														},
																														&notExpr{
																															pos: position{line: 195, col: 36, offset: 7247},
																															expr: &litMatcher{
																																pos:        position{line: 195, col: 37, offset: 7248},
																																val:        "]",
																																ignoreCase: false,
																															},
																														},
																														&anyMatcher{
																															line: 195, col: 41, offset: 7252,
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&zeroOrOneExpr{
																									pos: position{line: 185, col: 67, offset: 6913},
																									expr: &litMatcher{
																										pos:        position{line: 185, col: 67, offset: 6913},
																										val:        ",",
																										ignoreCase: false,
																									},
																								},
																								&zeroOrMoreExpr{
																									pos: position{line: 185, col: 72, offset: 6918},
																									expr: &choiceExpr{
																										pos: position{line: 1024, col: 7, offset: 41621},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1024, col: 7, offset: 41621},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 1024, col: 13, offset: 41627},
																												run: (*parser).callonOrderedListItem174,
																												expr: &litMatcher{
																													pos:        position{line: 1024, col: 13, offset: 41627},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																					&actionExpr{
																						pos: position{line: 187, col: 5, offset: 7002},
																						run: (*parser).callonOrderedListItem176,
																						expr: &seqExpr{
																							pos: position{line: 187, col: 5, offset: 7002},
																							exprs: []interface{}{
																								&labeledExpr{
																									pos:   position{line: 187, col: 5, offset: 7002},
																									label: "key",
																									expr: &actionExpr{
																										pos: position{line: 191, col: 17, offset: 7127},
																										run: (*parser).callonOrderedListItem179,
																										expr: &seqExpr{
																											pos: position{line: 191, col: 17, offset: 7127},
																											exprs: []interface{}{
																												&notExpr{
																													pos: position{line: 191, col: 17, offset: 7127},
																													expr: &actionExpr{
																														pos: position{line: 231, col: 14, offset: 8674},
																														run: (*parser).callonOrderedListItem182,
																														expr: &litMatcher{
																															pos:        position{line: 231, col: 14, offset: 8674},
																															val:        "verse",
																															ignoreCase: false,
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 191, col: 28, offset: 7138},
																													expr: &actionExpr{
																														pos: position{line: 975, col: 16, offset: 40537},
																														run: (*parser).callonOrderedListItem185,
																														expr: &litMatcher{
																															pos:        position{line: 975, col: 16, offset: 40537},
																															val:        "literal",
																															ignoreCase: false,
																														},
																													},
																												},
																												&labeledExpr{
																													pos:   position{line: 191, col: 41, offset: 7151},
																													label: "key",
																													expr: &oneOrMoreExpr{
																														pos: position{line: 191, col: 45, offset: 7155},
																														expr: &seqExpr{
																															pos: position{line: 191, col: 46, offset: 7156},
																															exprs: []interface{}{
																																&notExpr{
																																	pos: position{line: 191, col: 46, offset: 7156},
																																	expr: &litMatcher{
																																		pos:        position{line: 191, col: 47, offset: 7157},
																																		val:        "=",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 191, col: 51, offset: 7161},
																																	expr: &litMatcher{
																																		pos:        position{line: 191, col: 52, offset: 7162},
																																		val:        ",",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 191, col: 56, offset: 7166},
																																	expr: &litMatcher{
																																		pos:        position{line: 191, col: 57, offset: 7167},
																																		val:        "]",
																																		ignoreCase: false,
																																	},
																																},
																																&anyMatcher{
																																	line: 191, col: 61, offset: 7171,
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&zeroOrOneExpr{
																									pos: position{line: 187, col: 24, offset: 7021},
																									expr: &litMatcher{
																										pos:        position{line: 187, col: 24, offset: 7021},
																										val:        ",",
																										ignoreCase: false,
																									},
																								},
																								&zeroOrMoreExpr{
																									pos: position{line: 187, col: 29, offset: 7026},
																									expr: &choiceExpr{
																										pos: position{line: 1024, col: 7, offset: 41621},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1024, col: 7, offset: 41621},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 1024, col: 13, offset: 41627},
																												run: (*parser).callonOrderedListItem202,
																												expr: &litMatcher{
																													pos:        position{line: 1024, col: 13, offset: 41627},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 181, col: 59, offset: 6775},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
													},
												},
											},
											&zeroOrMoreExpr{
												pos: position{line: 136, col: 131, offset: 5298},
												expr: &choiceExpr{
													pos: position{line: 1024, col: 7, offset: 41621},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1024, col: 7, offset: 41621},
															val:        " ",
															ignoreCase: false,
														},
														&actionExpr{
															pos: position{line: 1024, col: 13, offset: 41627},
															run: (*parser).callonOrderedListItem208,
															expr: &litMatcher{
																pos:        position{line: 1024, col: 13, offset: 41627},
																val:        "\t",
																ignoreCase: false,
															},
														},
													},
												},
											},
											&choiceExpr{
												pos: position{line: 1032, col: 8, offset: 41723},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1028, col: 12, offset: 41683},
														val:        "\r\n",
														ignoreCase: false,
													},
													&charClassMatcher{
														pos:        position{line: 1028, col: 21, offset: 41692},
														val:        "[\\r\\n]",
														chars:      []rune{'\r', '\n'},
														ignoreCase: false,
														inverted:   false,
													},
													&notExpr{
														pos: position{line: 1030, col: 8, offset: 41712},
														expr: &anyMatcher{
															line: 1030, col: 9, offset: 41713,
														},
													},
												},
											},
										},
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 401, col: 51, offset: 14767},
							label: "prefix",
							expr: &actionExpr{
								pos: position{line: 405, col: 26, offset: 14999},
								run: (*parser).callonOrderedListItem216,
								expr: &seqExpr{
									pos: position{line: 405, col: 26, offset: 14999},
									exprs: []interface{}{
										&zeroOrMoreExpr{
											pos: position{line: 405, col: 26, offset: 14999},
											expr: &choiceExpr{
												pos: position{line: 1024, col: 7, offset: 41621},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1024, col: 7, offset: 41621},
														val:        " ",
														ignoreCase: false,
													},
													&actionExpr{
														pos: position{line: 1024, col: 13, offset: 41627},
														run: (*parser).callonOrderedListItem221,
														expr: &litMatcher{
															pos:        position{line: 1024, col: 13, offset: 41627},
															val:        "\t",
															ignoreCase: false,
														},
													},
												},
											},
										},
										&labeledExpr{
											pos:   position{line: 405, col: 30, offset: 15003},
											label: "prefix",
											expr: &choiceExpr{
												pos: position{line: 407, col: 5, offset: 15058},
												alternatives: []interface{}{
													&actionExpr{
														pos: position{line: 407, col: 5, offset: 15058},
														run: (*parser).callonOrderedListItem225,
														expr: &litMatcher{
															pos:        position{line: 407, col: 5, offset: 15058},
															val:        ".....",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 409, col: 9, offset: 15171},
														run: (*parser).callonOrderedListItem227,
														expr: &litMatcher{
															pos:        position{line: 409, col: 9, offset: 15171},
															val:        "....",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 411, col: 9, offset: 15282},
														run: (*parser).callonOrderedListItem229,
														expr: &litMatcher{
															pos:        position{line: 411, col: 9, offset: 15282},
															val:        "...",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 413, col: 9, offset: 15391},
														run: (*parser).callonOrderedListItem231,
														expr: &litMatcher{
															pos:        position{line: 413, col: 9, offset: 15391},
															val:        "..",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 415, col: 9, offset: 15498},
														run: (*parser).callonOrderedListItem233,
														expr: &litMatcher{
															pos:        position{line: 415, col: 9, offset: 15498},
															val:        ".",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 418, col: 9, offset: 15625},
														run: (*parser).callonOrderedListItem235,
														expr: &seqExpr{
															pos: position{line: 418, col: 9, offset: 15625},
															exprs: []interface{}{
																&oneOrMoreExpr{
																	pos: position{line: 418, col: 9, offset: 15625},
																	expr: &charClassMatcher{
																		pos:        position{line: 418, col: 10, offset: 15626},
																		val:        "[0-9]",
																		ranges:     []rune{'0', '9'},
																		ignoreCase: false,
																		inverted:   false,
																	},
																},
																&litMatcher{
																	pos:        position{line: 418, col: 18, offset: 15634},
																	val:        ".",
																	ignoreCase: false,
																},
															},
														},
													},
													&actionExpr{
														pos: position{line: 420, col: 9, offset: 15737},
														run: (*parser).callonOrderedListItem240,
														expr: &seqExpr{
															pos: position{line: 420, col: 9, offset: 15737},
															exprs: []interface{}{
																&oneOrMoreExpr{
																	pos: position{line: 420, col: 9, offset: 15737},
																	expr: &charClassMatcher{
																		pos:        position{line: 420, col: 10, offset: 15738},
																		val:        "[a-z]",
																		ranges:     []rune{'a', 'z'},
																		ignoreCase: false,
																		inverted:   false,
																	},
																},
																&litMatcher{
																	pos:        position{line: 420, col: 18, offset: 15746},
																	val:        ".",
																	ignoreCase: false,
																},
															},
														},
													},
													&actionExpr{
														pos: position{line: 422, col: 9, offset: 15852},
														run: (*parser).callonOrderedListItem245,
														expr: &seqExpr{
															pos: position{line: 422, col: 9, offset: 15852},
															exprs: []interface{}{
																&oneOrMoreExpr{
																	pos: position{line: 422, col: 9, offset: 15852},
																	expr: &charClassMatcher{
																		pos:        position{line: 422, col: 10, offset: 15853},
																		val:        "[A-Z]",
																		ranges:     []rune{'A', 'Z'},
																		ignoreCase: false,
																		inverted:   false,
																	},
																},
																&litMatcher{
																	pos:        position{line: 422, col: 18, offset: 15861},
																	val:        ".",
																	ignoreCase: false,
																},
															},
														},
													},
													&actionExpr{
														pos: position{line: 424, col: 9, offset: 15967},
														run: (*parser).callonOrderedListItem250,
														expr: &seqExpr{
															pos: position{line: 424, col: 9, offset: 15967},
															exprs: []interface{}{
																&oneOrMoreExpr{
																	pos: position{line: 424, col: 9, offset: 15967},
																	expr: &charClassMatcher{
																		pos:        position{line: 424, col: 10, offset: 15968},
																		val:        "[a-z]",
																		ranges:     []rune{'a', 'z'},
																		ignoreCase: false,
																		inverted:   false,
																	},
																},
																&litMatcher{
																	pos:        position{line: 424, col: 18, offset: 15976},
																	val:        ")",
																	ignoreCase: false,
																},
															},
														},
													},
													&actionExpr{
														pos: position{line: 426, col: 9, offset: 16082},
														run: (*parser).callonOrderedListItem255,
														expr: &seqExpr{
															pos: position{line: 426, col: 9, offset: 16082},
															exprs: []interface{}{
																&oneOrMoreExpr{
																	pos: position{line: 426, col: 9, offset: 16082},
																	expr: &charClassMatcher{
																		pos:        position{line: 426, col: 10, offset: 16083},
																		val:        "[A-Z]",
																		ranges:     []rune{'A', 'Z'},
																		ignoreCase: false,
																		inverted:   false,
																	},
																},
																&litMatcher{
																	pos:        position{line: 426, col: 18, offset: 16091},
																	val:        ")",
																	ignoreCase: false,
																},
															},
														},
													},
												},
											},
										},
										&oneOrMoreExpr{
											pos: position{line: 428, col: 8, offset: 16196},
											expr: &choiceExpr{
												pos: position{line: 1024, col: 7, offset: 41621},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1024, col: 7, offset: 41621},
														val:        " ",
														ignoreCase: false,
													},
													&actionExpr{
														pos: position{line: 1024, col: 13, offset: 41627},
														run: (*parser).callonOrderedListItem263,
														expr: &litMatcher{
															pos:        position{line: 1024, col: 13, offset: 41627},
															val:        "\t",
															ignoreCase: false,
														},
													},
												},
											},
										},
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 401, col: 82, offset: 14798},
							label: "content",
							expr: &ruleRefExpr{
								pos:  position{line: 401, col: 91, offset: 14807},
								name: "OrderedListItemContent",
							},
						},
						&zeroOrMoreExpr{
							pos: position{line: 401, col: 115, offset: 14831},
							expr: &actionExpr{
								pos: position{line: 991, col: 14, offset: 40968},
								run: (*parser).callonOrderedListItem268,
								expr: &seqExpr{
									pos: position{line: 991, col: 14, offset: 40968},
									exprs: []interface{}{
										&notExpr{
											pos: position{line: 991, col: 14, offset: 40968},
											expr: &notExpr{
												pos: position{line: 1030, col: 8, offset: 41712},
												expr: &anyMatcher{
													line: 1030, col: 9, offset: 41713,
												},
											},
										},
										&zeroOrMoreExpr{
											pos: position{line: 991, col: 19, offset: 40973},
											expr: &choiceExpr{
												pos: position{line: 1024, col: 7, offset: 41621},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1024, col: 7, offset: 41621},
														val:        " ",
														ignoreCase: false,
													},
													&actionExpr{
														pos: position{line: 1024, col: 13, offset: 41627},
														run: (*parser).callonOrderedListItem276,
														expr: &litMatcher{
															pos:        position{line: 1024, col: 13, offset: 41627},
															val:        "\t",
															ignoreCase: false,
														},
													},
												},
											},
										},
										&choiceExpr{
											pos: position{line: 1032, col: 8, offset: 41723},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 1028, col: 12, offset: 41683},
													val:        "\r\n",
													ignoreCase: false,
												},
												&charClassMatcher{
													pos:        position{line: 1028, col: 21, offset: 41692},
													val:        "[\\r\\n]",
													chars:      []rune{'\r', '\n'},
													ignoreCase: false,
													inverted:   false,
												},
												&notExpr{
													pos: position{line: 1030, col: 8, offset: 41712},
													expr: &anyMatcher{
														line: 1030, col: 9, offset: 41713,
													},
												},
											},
										},
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "OrderedListItemContent",
			pos:  position{line: 432, col: 1, offset: 16236},
			expr: &actionExpr{
				pos: position{line: 432, col: 27, offset: 16262},
				run: (*parser).callonOrderedListItemContent1,
				expr: &labeledExpr{
					pos:   position{line: 432, col: 27, offset: 16262},
					label: "elements",
					expr: &seqExpr{
						pos: position{line: 432, col: 37, offset: 16272},
						exprs: []interface{}{
							&oneOrMoreExpr{
								pos: position{line: 432, col: 37, offset: 16272},
								expr: &ruleRefExpr{
									pos:  position{line: 432, col: 37, offset: 16272},
									name: "ListParagraph",
								},
							},
							&zeroOrMoreExpr{
								pos: position{line: 432, col: 52, offset: 16287},
								expr: &ruleRefExpr{
									pos:  position{line: 432, col: 52, offset: 16287},
									name: "ContinuedDocumentBlock",
								},
							},
						},
					},
				},
			},
		},
		{
			name: "UnorderedListItem",
			pos:  position{line: 439, col: 1, offset: 16614},
			expr: &actionExpr{
				pos: position{line: 439, col: 22, offset: 16635},
				run: (*parser).callonUnorderedListItem1,
				expr: &seqExpr{
					pos: position{line: 439, col: 22, offset: 16635},
					exprs: []interface{}{
						&labeledExpr{
							pos:   position{line: 439, col: 22, offset: 16635},
							label: "prefix",
							expr: &actionExpr{
								pos: position{line: 444, col: 5, offset: 16854},
								run: (*parser).callonUnorderedListItem4,
								expr: &seqExpr{
									pos: position{line: 444, col: 5, offset: 16854},
									exprs: []interface{}{
										&zeroOrMoreExpr{
											pos: position{line: 444, col: 5, offset: 16854},
											expr: &choiceExpr{
												pos: position{line: 1024, col: 7, offset: 41621},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1024, col: 7, offset: 41621},
														val:        " ",
														ignoreCase: false,
													},
													&actionExpr{
														pos: position{line: 1024, col: 13, offset: 41627},
														run: (*parser).callonUnorderedListItem9,
														expr: &litMatcher{
															pos:        position{line: 1024, col: 13, offset: 41627},
															val:        "\t",
															ignoreCase: false,
														},
													},
												},
											},
										},
										&labeledExpr{
											pos:   position{line: 444, col: 9, offset: 16858},
											label: "prefix",
											expr: &choiceExpr{
												pos: position{line: 445, col: 9, offset: 16875},
												alternatives: []interface{}{
													&actionExpr{
														pos: position{line: 445, col: 9, offset: 16875},
														run: (*parser).callonUnorderedListItem13,
														expr: &litMatcher{
															pos:        position{line: 445, col: 9, offset: 16875},
															val:        "*****",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 448, col: 11, offset: 17044},
														run: (*parser).callonUnorderedListItem15,
														expr: &litMatcher{
															pos:        position{line: 448, col: 11, offset: 17044},
															val:        "****",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 451, col: 11, offset: 17213},
														run: (*parser).callonUnorderedListItem17,
														expr: &litMatcher{
															pos:        position{line: 451, col: 11, offset: 17213},
															val:        "***",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 454, col: 11, offset: 17382},
														run: (*parser).callonUnorderedListItem19,
														expr: &litMatcher{
															pos:        position{line: 454, col: 11, offset: 17382},
															val:        "**",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 457, col: 11, offset: 17548},
														run: (*parser).callonUnorderedListItem21,
														expr: &litMatcher{
															pos:        position{line: 457, col: 11, offset: 17548},
															val:        "*",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 460, col: 11, offset: 17712},
														run: (*parser).callonUnorderedListItem23,
														expr: &litMatcher{
															pos:        position{line: 460, col: 11, offset: 17712},
															val:        "-",
															ignoreCase: false,
														},
													},
												},
											},
										},
										&oneOrMoreExpr{
											pos: position{line: 462, col: 12, offset: 17859},
											expr: &choiceExpr{
												pos: position{line: 1024, col: 7, offset: 41621},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1024, col: 7, offset: 41621},
														val:        " ",
														ignoreCase: false,
													},
													&actionExpr{
														pos: position{line: 1024, col: 13, offset: 41627},
														run: (*parser).callonUnorderedListItem28,
														expr: &litMatcher{
															pos:        position{line: 1024, col: 13, offset: 41627},
															val:        "\t",
															ignoreCase: false,
														},
													},
												},
											},
										},
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 439, col: 55, offset: 16668},
							label: "content",
							expr: &ruleRefExpr{
								pos:  position{line: 439, col: 64, offset: 16677},
								name: "UnorderedListItemContent",
							},
						},
						&zeroOrMoreExpr{
							pos: position{line: 439, col: 90, offset: 16703},
							expr: &actionExpr{
								pos: position{line: 991, col: 14, offset: 40968},
								run: (*parser).callonUnorderedListItem33,
								expr: &seqExpr{
									pos: position{line: 991, col: 14, offset: 40968},
									exprs: []interface{}{
										&notExpr{
											pos: position{line: 991, col: 14, offset: 40968},
											expr: &notExpr{
												pos: position{line: 1030, col: 8, offset: 41712},
												expr: &anyMatcher{
													line: 1030, col: 9, offset: 41713,
												},
											},
										},
										&zeroOrMoreExpr{
											pos: position{line: 991, col: 19, offset: 40973},
											expr: &choiceExpr{
												pos: position{line: 1024, col: 7, offset: 41621},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1024, col: 7, offset: 41621},
														val:        " ",
														ignoreCase: false,
													},
													&actionExpr{
														pos: position{line: 1024, col: 13, offset: 41627},
														run: (*parser).callonUnorderedListItem41,
														expr: &litMatcher{
															pos:        position{line: 1024, col: 13, offset: 41627},
															val:        "\t",
															ignoreCase: false,
														},
													},
												},
											},
										},
										&choiceExpr{
											pos: position{line: 1032, col: 8, offset: 41723},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 1028, col: 12, offset: 41683},
													val:        "\r\n",
													ignoreCase: false,
												},
												&charClassMatcher{
													pos:        position{line: 1028, col: 21, offset: 41692},
													val:        "[\\r\\n]",
													chars:      []rune{'\r', '\n'},
													ignoreCase: false,
													inverted:   false,
												},
												&notExpr{
													pos: position{line: 1030, col: 8, offset: 41712},
													expr: &anyMatcher{
														line: 1030, col: 9, offset: 41713,
													},
												},
											},
										},
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "UnorderedListItemContent",
			pos:  position{line: 466, col: 1, offset: 17908},
			expr: &actionExpr{
				pos: position{line: 466, col: 29, offset: 17936},
				run: (*parser).callonUnorderedListItemContent1,
				expr: &labeledExpr{
					pos:   position{line: 466, col: 29, offset: 17936},
					label: "elements",
					expr: &seqExpr{
						pos: position{line: 466, col: 39, offset: 17946},
						exprs: []interface{}{
							&oneOrMoreExpr{
								pos: position{line: 466, col: 39, offset: 17946},
								expr: &ruleRefExpr{
									pos:  position{line: 466, col: 39, offset: 17946},
									name: "ListParagraph",
								},
							},
							&zeroOrMoreExpr{
								pos: position{line: 466, col: 54, offset: 17961},
								expr: &ruleRefExpr{
									pos:  position{line: 466, col: 54, offset: 17961},
									name: "ContinuedDocumentBlock",
								},
							},
						},
					},
				},
			},
		},
		{
			name: "LabeledListItem",
			pos:  position{line: 473, col: 1, offset: 18286},
			expr: &choiceExpr{
				pos: position{line: 474, col: 5, offset: 18310},
				alternatives: []interface{}{
					&actionExpr{
						pos: position{line: 474, col: 5, offset: 18310},
						run: (*parser).callonLabeledListItem2,
						expr: &seqExpr{
							pos: position{line: 474, col: 5, offset: 18310},
							exprs: []interface{}{
								&labeledExpr{
									pos:   position{line: 474, col: 5, offset: 18310},
									label: "term",
									expr: &actionExpr{
										pos: position{line: 480, col: 24, offset: 18695},
										run: (*parser).callonLabeledListItem5,
										expr: &zeroOrMoreExpr{
											pos: position{line: 480, col: 24, offset: 18695},
											expr: &seqExpr{
												pos: position{line: 480, col: 25, offset: 18696},
												exprs: []interface{}{
													&notExpr{
														pos: position{line: 480, col: 25, offset: 18696},
														expr: &choiceExpr{
															pos: position{line: 1028, col: 12, offset: 41683},
															alternatives: []interface{}{
																&litMatcher{
																	pos:        position{line: 1028, col: 12, offset: 41683},
																	val:        "\r\n",
																	ignoreCase: false,
																},
																&charClassMatcher{
																	pos:        position{line: 1028, col: 21, offset: 41692},
																	val:        "[\\r\\n]",
																	chars:      []rune{'\r', '\n'},
																	ignoreCase: false,
																	inverted:   false,
																},
															},
														},
													},
													&notExpr{
														pos: position{line: 480, col: 34, offset: 18705},
														expr: &litMatcher{
															pos:        position{line: 480, col: 35, offset: 18706},
															val:        "::",
															ignoreCase: false,
														},
													},
													&anyMatcher{
														line: 480, col: 40, offset: 18711,
													},
												},
											},
										},
									},
								},
								&litMatcher{
									pos:        position{line: 485, col: 30, offset: 18841},
									val:        "::",
									ignoreCase: false,
								},
								&oneOrMoreExpr{
									pos: position{line: 485, col: 35, offset: 18846},
									expr: &choiceExpr{
										pos: position{line: 485, col: 36, offset: 18847},
										alternatives: []interface{}{
											&litMatcher{
												pos:        position{line: 1024, col: 7, offset: 41621},
												val:        " ",
												ignoreCase: false,
											},
											&actionExpr{
												pos: position{line: 1024, col: 13, offset: 41627},
												run: (*parser).callonLabeledListItem19,
												expr: &litMatcher{
													pos:        position{line: 1024, col: 13, offset: 41627},
													val:        "\t",
													ignoreCase: false,
												},
											},
											&litMatcher{
												pos:        position{line: 1028, col: 12, offset: 41683},
												val:        "\r\n",
												ignoreCase: false,
											},
											&charClassMatcher{
												pos:        position{line: 1028, col: 21, offset: 41692},
												val:        "[\\r\\n]",
												chars:      []rune{'\r', '\n'},
												ignoreCase: false,
												inverted:   false,
											},
										},
									},
								},
								&labeledExpr{
									pos:   position{line: 474, col: 57, offset: 18362},
									label: "description",
									expr: &ruleRefExpr{
										pos:  position{line: 474, col: 70, offset: 18375},
										name: "LabeledListItemDescription",
									},
								},
							},
						},
					},
					&actionExpr{
						pos: position{line: 476, col: 10, offset: 18498},
						run: (*parser).callonLabeledListItem25,
						expr: &seqExpr{
							pos: position{line: 476, col: 10, offset: 18498},
							exprs: []interface{}{
								&labeledExpr{
									pos:   position{line: 476, col: 10, offset: 18498},
									label: "term",
									expr: &actionExpr{
										pos: position{line: 480, col: 24, offset: 18695},
										run: (*parser).callonLabeledListItem28,
										expr: &zeroOrMoreExpr{
											pos: position{line: 480, col: 24, offset: 18695},
											expr: &seqExpr{
												pos: position{line: 480, col: 25, offset: 18696},
												exprs: []interface{}{
													&notExpr{
														pos: position{line: 480, col: 25, offset: 18696},
														expr: &choiceExpr{
															pos: position{line: 1028, col: 12, offset: 41683},
															alternatives: []interface{}{
																&litMatcher{
																	pos:        position{line: 1028, col: 12, offset: 41683},
																	val:        "\r\n",
																	ignoreCase: false,
																},
																&charClassMatcher{
																	pos:        position{line: 1028, col: 21, offset: 41692},
																	val:        "[\\r\\n]",
																	chars:      []rune{'\r', '\n'},
																	ignoreCase: false,
																	inverted:   false,
																},
															},
														},
													},
													&notExpr{
														pos: position{line: 480, col: 34, offset: 18705},
														expr: &litMatcher{
															pos:        position{line: 480, col: 35, offset: 18706},
															val:        "::",
															ignoreCase: false,
														},
													},
													&anyMatcher{
														line: 480, col: 40, offset: 18711,
													},
												},
											},
										},
									},
								},
								&litMatcher{
									pos:        position{line: 476, col: 37, offset: 18525},
									val:        "::",
									ignoreCase: false,
								},
								&zeroOrMoreExpr{
									pos: position{line: 476, col: 42, offset: 18530},
									expr: &choiceExpr{
										pos: position{line: 1024, col: 7, offset: 41621},
										alternatives: []interface{}{
											&litMatcher{
												pos:        position{line: 1024, col: 7, offset: 41621},
												val:        " ",
												ignoreCase: false,
											},
											&actionExpr{
												pos: position{line: 1024, col: 13, offset: 41627},
												run: (*parser).callonLabeledListItem42,
												expr: &litMatcher{
													pos:        position{line: 1024, col: 13, offset: 41627},
													val:        "\t",
													ignoreCase: false,
												},
											},
										},
									},
								},
								&choiceExpr{
									pos: position{line: 1032, col: 8, offset: 41723},
									alternatives: []interface{}{
										&litMatcher{
											pos:        position{line: 1028, col: 12, offset: 41683},
											val:        "\r\n",
											ignoreCase: false,
										},
										&charClassMatcher{
											pos:        position{line: 1028, col: 21, offset: 41692},
											val:        "[\\r\\n]",
											chars:      []rune{'\r', '\n'},
											ignoreCase: false,
											inverted:   false,
										},
										&notExpr{
											pos: position{line: 1030, col: 8, offset: 41712},
											expr: &anyMatcher{
												line: 1030, col: 9, offset: 41713,
											},
										},
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "LabeledListItemDescription",
			pos:  position{line: 487, col: 1, offset: 18863},
			expr: &actionExpr{
				pos: position{line: 487, col: 31, offset: 18893},
				run: (*parser).callonLabeledListItemDescription1,
				expr: &labeledExpr{
					pos:   position{line: 487, col: 31, offset: 18893},
					label: "elements",
					expr: &zeroOrMoreExpr{
						pos: position{line: 487, col: 40, offset: 18902},
						expr: &choiceExpr{
							pos: position{line: 487, col: 41, offset: 18903},
							alternatives: []interface{}{
								&ruleRefExpr{
									pos:  position{line: 487, col: 41, offset: 18903},
									name: "ListParagraph",
								},
								&ruleRefExpr{
									pos:  position{line: 487, col: 57, offset: 18919},
									name: "ContinuedDocumentBlock",
								},
							},
						},
					},
				},
			},
		},
		{
			name: "Paragraph",
			pos:  position{line: 511, col: 1, offset: 19722},
			expr: &choiceExpr{
				pos: position{line: 513, col: 5, offset: 19769},
				alternatives: []interface{}{
					&actionExpr{
						pos: position{line: 513, col: 5, offset: 19769},
						run: (*parser).callonParagraph2,
						expr: &seqExpr{
							pos: position{line: 513, col: 5, offset: 19769},
							exprs: []interface{}{
								&labeledExpr{
									pos:   position{line: 513, col: 5, offset: 19769},
									label: "attributes",
									expr: &zeroOrMoreExpr{
										pos: position{line: 513, col: 16, offset: 19780},
										expr: &choiceExpr{
											pos: position{line: 521, col: 23, offset: 20258},
											alternatives: []interface{}{
												&actionExpr{
													pos: position{line: 141, col: 24, offset: 5496},
													run: (*parser).callonParagraph7,
													expr: &seqExpr{
														pos: position{line: 141, col: 24, offset: 5496},
														exprs: []interface{}{
															&labeledExpr{
																pos:   position{line: 141, col: 24, offset: 5496},
																label: "attr",
																expr: &choiceExpr{
																	pos: position{line: 141, col: 30, offset: 5502},
																	alternatives: []interface{}{
																		&actionExpr{
																			pos: position{line: 203, col: 20, offset: 7415},
																			run: (*parser).callonParagraph11,
																			expr: &seqExpr{
																				pos: position{line: 203, col: 20, offset: 7415},
																				exprs: []interface{}{
																					&litMatcher{
																						pos:        position{line: 203, col: 20, offset: 7415},
																						val:        "[",
																						ignoreCase: false,
																					},
																					&labeledExpr{
																						pos:   position{line: 203, col: 24, offset: 7419},
																						label: "kind",
																						expr: &actionExpr{
																							pos: position{line: 215, col: 14, offset: 7925},
																							run: (*parser).callonParagraph15,
																							expr: &seqExpr{
																								pos: position{line: 215, col: 14, offset: 7925},
																								exprs: []interface{}{
																									&notExpr{
																										pos: position{line: 215, col: 14, offset: 7925},
																										expr: &actionExpr{
																											pos: position{line: 975, col: 16, offset: 40537},
																											run: (*parser).callonParagraph18,
																											expr: &litMatcher{
																												pos:        position{line: 975, col: 16, offset: 40537},
																												val:        "literal",
																												ignoreCase: false,
																											},
																										},
																									},
																									&notExpr{
																										pos: position{line: 215, col: 27, offset: 7938},
																										expr: &actionExpr{
																											pos: position{line: 231, col: 14, offset: 8674},
																											run: (*parser).callonParagraph21,
																											expr: &litMatcher{
																												pos:        position{line: 231, col: 14, offset: 8674},
																												val:        "verse",
																												ignoreCase: false,
																											},
																										},
																									},
																									&zeroOrMoreExpr{
																										pos: position{line: 215, col: 38, offset: 7949},
																										expr: &seqExpr{
																											pos: position{line: 215, col: 39, offset: 7950},
																											exprs: []interface{}{
																												&notExpr{
																													pos: position{line: 215, col: 39, offset: 7950},
																													expr: &choiceExpr{
																														pos: position{line: 1032, col: 8, offset: 41723},
																														alternatives: []interface{}{
																															&litMatcher{
																																pos:        position{line: 1028, col: 12, offset: 41683},
																																val:        "\r\n",
																																ignoreCase: false,
																															},
																															&charClassMatcher{
																																pos:        position{line: 1028, col: 21, offset: 41692},
																																val:        "[\\r\\n]",
																																chars:      []rune{'\r', '\n'},
																																ignoreCase: false,
																																inverted:   false,
																															},
																															&notExpr{
																																pos: position{line: 1030, col: 8, offset: 41712},
																																expr: &anyMatcher{
																																	line: 1030, col: 9, offset: 41713,
																																},
																															},
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 215, col: 44, offset: 7955},
																													expr: &choiceExpr{
																														pos: position{line: 1024, col: 7, offset: 41621},
																														alternatives: []interface{}{
																															&litMatcher{
																																pos:        position{line: 1024, col: 7, offset: 41621},
																																val:        " ",
																																ignoreCase: false,
																															},
																															&actionExpr{
																																pos: position{line: 1024, col: 13, offset: 41627},
																																run: (*parser).callonParagraph34,
																																expr: &litMatcher{
																																	pos:        position{line: 1024, col: 13, offset: 41627},
																																	val:        "\t",
																																	ignoreCase: false,
																																},
																															},
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 215, col: 48, offset: 7959},
																													expr: &litMatcher{
																														pos:        position{line: 215, col: 49, offset: 7960},
																														val:        ",",
																														ignoreCase: false,
																													},
																												},
																												&notExpr{
																													pos: position{line: 215, col: 53, offset: 7964},
																													expr: &litMatcher{
																														pos:        position{line: 215, col: 54, offset: 7965},
																														val:        "]",
																														ignoreCase: false,
																													},
																												},
																												&notExpr{
																													pos: position{line: 215, col: 58, offset: 7969},
																													expr: &litMatcher{
																														pos:        position{line: 215, col: 59, offset: 7970},
																														val:        "#",
																														ignoreCase: false,
																													},
																												},
																												&notExpr{
																													pos: position{line: 215, col: 63, offset: 7974},
																													expr: &litMatcher{
																														pos:        position{line: 215, col: 64, offset: 7975},
																														val:        "=",
																														ignoreCase: false,
																													},
																												},
																												&notExpr{
																													pos: position{line: 215, col: 68, offset: 7979},
																													expr: &choiceExpr{
																														pos: position{line: 494, col: 19, offset: 19245},
																														alternatives: []interface{}{
																															&actionExpr{
																																pos: position{line: 494, col: 19, offset: 19245},
																																run: (*parser).callonParagraph46,
																																expr: &litMatcher{
																																	pos:        position{line: 494, col: 19, offset: 19245},
																																	val:        "TIP",
																																	ignoreCase: false,
																																},
																															},
																															&actionExpr{
																																pos: position{line: 496, col: 5, offset: 19283},
																																run: (*parser).callonParagraph48,
																																expr: &litMatcher{
																																	pos:        position{line: 496, col: 5, offset: 19283},
																																	val:        "NOTE",
																																	ignoreCase: false,
																																},
																															},
																															&actionExpr{
																																pos: position{line: 498, col: 5, offset: 19323},
																																run: (*parser).callonParagraph50,
																																expr: &litMatcher{
																																	pos:        position{line: 498, col: 5, offset: 19323},
																																	val:        "IMPORTANT",
																																	ignoreCase: false,
																																},
																															},
																															&actionExpr{
																																pos: position{line: 500, col: 5, offset: 19373},
																																run: (*parser).callonParagraph52,
																																expr: &litMatcher{
																																	pos:        position{line: 500, col: 5, offset: 19373},
																																	val:        "WARNING",
																																	ignoreCase: false,
																																},
																															},
																															&actionExpr{
																																pos: position{line: 502, col: 5, offset: 19419},
																																run: (*parser).callonParagraph54,
																																expr: &litMatcher{
																																	pos:        position{line: 502, col: 5, offset: 19419},
																																	val:        "CAUTION",
																																	ignoreCase: false,
																																},
																															},
																														},
																													},
																												},
																												&anyMatcher{
																													line: 215, col: 84, offset: 7995,
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																					&zeroOrMoreExpr{
																						pos: position{line: 203, col: 41, offset: 7436},
																						expr: &choiceExpr{
																							pos: position{line: 1024, col: 7, offset: 41621},
																							alternatives: []interface{}{
																								&litMatcher{
																									pos:        position{line: 1024, col: 7, offset: 41621},
																									val:        " ",
																									ignoreCase: false,
																								},
																								&actionExpr{
																									pos: position{line: 1024, col: 13, offset: 41627},
																									run: (*parser).callonParagraph60,
																									expr: &litMatcher{
																										pos:        position{line: 1024, col: 13, offset: 41627},
																										val:        "\t",
																										ignoreCase: false,
																									},
																								},
																							},
																						},
																					},
																					&litMatcher{
																						pos:        position{line: 203, col: 45, offset: 7440},
																						val:        ",",
																						ignoreCase: false,
																					},
																					&labeledExpr{
																						pos:   position{line: 203, col: 49, offset: 7444},
																						label: "author",
																						expr: &actionExpr{
																							pos: position{line: 235, col: 16, offset: 8733},
																							run: (*parser).callonParagraph64,
																							expr: &zeroOrMoreExpr{
																								pos: position{line: 235, col: 16, offset: 8733},
																								expr: &seqExpr{
																									pos: position{line: 235, col: 17, offset: 8734},
																									exprs: []interface{}{
																										&notExpr{
																											pos: position{line: 235, col: 17, offset: 8734},
																											expr: &choiceExpr{
																												pos: position{line: 1032, col: 8, offset: 41723},
																												alternatives: []interface{}{
																													&litMatcher{
																														pos:        position{line: 1028, col: 12, offset: 41683},
																														val:        "\r\n",
																														ignoreCase: false,
																													},
																													&charClassMatcher{
																														pos:        position{line: 1028, col: 21, offset: 41692},
																														val:        "[\\r\\n]",
																														chars:      []rune{'\r', '\n'},
																														ignoreCase: false,
																														inverted:   false,
																													},
																													&notExpr{
																														pos: position{line: 1030, col: 8, offset: 41712},
																														expr: &anyMatcher{
																															line: 1030, col: 9, offset: 41713,
																														},
																													},
																												},
																											},
																										},
																										&notExpr{
																											pos: position{line: 235, col: 22, offset: 8739},
																											expr: &litMatcher{
																												pos:        position{line: 235, col: 23, offset: 8740},
																												val:        ",",
																												ignoreCase: false,
																											},
																										},
																										&notExpr{
																											pos: position{line: 235, col: 27, offset: 8744},
																											expr: &litMatcher{
																												pos:        position{line: 235, col: 28, offset: 8745},
																												val:        "]",
																												ignoreCase: false,
																											},
																										},
																										&anyMatcher{
																											line: 235, col: 32, offset: 8749,
																										},
																									},
																								},
																							},
																						},
																					},
																					&litMatcher{
																						pos:        position{line: 203, col: 70, offset: 7465},
																						val:        ",",
																						ignoreCase: false,
																					},
																					&labeledExpr{
																						pos:   position{line: 203, col: 74, offset: 7469},
																						label: "title",
																						expr: &actionExpr{
																							pos: position{line: 239, col: 15, offset: 8803},
																							run: (*parser).callonParagraph80,
																							expr: &zeroOrMoreExpr{
																								pos: position{line: 239, col: 15, offset: 8803},
																								expr: &seqExpr{
																									pos: position{line: 239, col: 16, offset: 8804},
																									exprs: []interface{}{
																										&notExpr{
																											pos: position{line: 239, col: 16, offset: 8804},
																											expr: &choiceExpr{
																												pos: position{line: 1032, col: 8, offset: 41723},
																												alternatives: []interface{}{
																													&litMatcher{
																														pos:        position{line: 1028, col: 12, offset: 41683},
																														val:        "\r\n",
																														ignoreCase: false,
																													},
																													&charClassMatcher{
																														pos:        position{line: 1028, col: 21, offset: 41692},
																														val:        "[\\r\\n]",
																														chars:      []rune{'\r', '\n'},
																														ignoreCase: false,
																														inverted:   false,
																													},
																													&notExpr{
																														pos: position{line: 1030, col: 8, offset: 41712},
																														expr: &anyMatcher{
																															line: 1030, col: 9, offset: 41713,
																														},
																													},
																												},
																											},
																										},
																										&notExpr{
																											pos: position{line: 239, col: 21, offset: 8809},
																											expr: &litMatcher{
																												pos:        position{line: 239, col: 22, offset: 8810},
																												val:        ",",
																												ignoreCase: false,
																											},
																										},
																										&notExpr{
																											pos: position{line: 239, col: 26, offset: 8814},
																											expr: &litMatcher{
																												pos:        position{line: 239, col: 27, offset: 8815},
																												val:        "]",
																												ignoreCase: false,
																											},
																										},
																										&anyMatcher{
																											line: 239, col: 31, offset: 8819,
																										},
																									},
																								},
																							},
																						},
																					},
																					&litMatcher{
																						pos:        position{line: 203, col: 93, offset: 7488},
																						val:        "]",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																		&actionExpr{
																			pos: position{line: 207, col: 5, offset: 7631},
																			run: (*parser).callonParagraph95,
																			expr: &seqExpr{
																				pos: position{line: 207, col: 5, offset: 7631},
																				exprs: []interface{}{
																					&litMatcher{
																						pos:        position{line: 207, col: 5, offset: 7631},
																						val:        "[",
																						ignoreCase: false,
																					},
																					&labeledExpr{
																						pos:   position{line: 207, col: 9, offset: 7635},
																						label: "kind",
																						expr: &actionExpr{
																							pos: position{line: 215, col: 14, offset: 7925},
																							run: (*parser).callonParagraph99,
																							expr: &seqExpr{
																								pos: position{line: 215, col: 14, offset: 7925},
																								exprs: []interface{}{
																									&notExpr{
																										pos: position{line: 215, col: 14, offset: 7925},
																										expr: &actionExpr{
																											pos: position{line: 975, col: 16, offset: 40537},
																											run: (*parser).callonParagraph102,
																											expr: &litMatcher{
																												pos:        position{line: 975, col: 16, offset: 40537},
																												val:        "literal",
																												ignoreCase: false,
																											},
																										},
																									},
																									&notExpr{
																										pos: position{line: 215, col: 27, offset: 7938},
																										expr: &actionExpr{
																											pos: position{line: 231, col: 14, offset: 8674},
																											run: (*parser).callonParagraph105,
																											expr: &litMatcher{
																												pos:        position{line: 231, col: 14, offset: 8674},
																												val:        "verse",
																												ignoreCase: false,
																											},
																										},
																									},
																									&zeroOrMoreExpr{
																										pos: position{line: 215, col: 38, offset: 7949},
																										expr: &seqExpr{
																											pos: position{line: 215, col: 39, offset: 7950},
																											exprs: []interface{}{
																												&notExpr{
																													pos: position{line: 215, col: 39, offset: 7950},
																													expr: &choiceExpr{
																														pos: position{line: 1032, col: 8, offset: 41723},
																														alternatives: []interface{}{
																															&litMatcher{
																																pos:        position{line: 1028, col: 12, offset: 41683},
																																val:        "\r\n",
																																ignoreCase: false,
																															},
																															&charClassMatcher{
																																pos:        position{line: 1028, col: 21, offset: 41692},
																																val:        "[\\r\\n]",
																																chars:      []rune{'\r', '\n'},
																																ignoreCase: false,
																																inverted:   false,
																															},
																															&notExpr{
																																pos: position{line: 1030, col: 8, offset: 41712},
																																expr: &anyMatcher{
																																	line: 1030, col: 9, offset: 41713,
																																},
																															},
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 215, col: 44, offset: 7955},
																													expr: &choiceExpr{
																														pos: position{line: 1024, col: 7, offset: 41621},
																														alternatives: []interface{}{
																															&litMatcher{
																																pos:        position{line: 1024, col: 7, offset: 41621},
																																val:        " ",
																																ignoreCase: false,
																															},
																															&actionExpr{
																																pos: position{line: 1024, col: 13, offset: 41627},
																																run: (*parser).callonParagraph118,
																																expr: &litMatcher{
																																	pos:        position{line: 1024, col: 13, offset: 41627},
																																	val:        "\t",
																																	ignoreCase: false,
																																},
																															},
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 215, col: 48, offset: 7959},
																													expr: &litMatcher{
																														pos:        position{line: 215, col: 49, offset: 7960},
																														val:        ",",
																														ignoreCase: false,
																													},
																												},
																												&notExpr{
																													pos: position{line: 215, col: 53, offset: 7964},
																													expr: &litMatcher{
																														pos:        position{line: 215, col: 54, offset: 7965},
																														val:        "]",
																														ignoreCase: false,
																													},
																												},
																												&notExpr{
																													pos: position{line: 215, col: 58, offset: 7969},
																													expr: &litMatcher{
																														pos:        position{line: 215, col: 59, offset: 7970},
																														val:        "#",
																														ignoreCase: false,
																													},
																												},
																												&notExpr{
																													pos: position{line: 215, col: 63, offset: 7974},
																													expr: &litMatcher{
																														pos:        position{line: 215, col: 64, offset: 7975},
																														val:        "=",
																														ignoreCase: false,
																													},
																												},
																												&notExpr{
																													pos: position{line: 215, col: 68, offset: 7979},
																													expr: &choiceExpr{
																														pos: position{line: 494, col: 19, offset: 19245},
																														alternatives: []interface{}{
																															&actionExpr{
																																pos: position{line: 494, col: 19, offset: 19245},
																																run: (*parser).callonParagraph130,
																																expr: &litMatcher{
																																	pos:        position{line: 494, col: 19, offset: 19245},
																																	val:        "TIP",
																																	ignoreCase: false,
																																},
																															},
																															&actionExpr{
																																pos: position{line: 496, col: 5, offset: 19283},
																																run: (*parser).callonParagraph132,
																																expr: &litMatcher{
																																	pos:        position{line: 496, col: 5, offset: 19283},
																																	val:        "NOTE",
																																	ignoreCase: false,
																																},
																															},
																															&actionExpr{
																																pos: position{line: 498, col: 5, offset: 19323},
																																run: (*parser).callonParagraph134,
																																expr: &litMatcher{
																																	pos:        position{line: 498, col: 5, offset: 19323},
																																	val:        "IMPORTANT",
																																	ignoreCase: false,
																																},
																															},
																															&actionExpr{
																																pos: position{line: 500, col: 5, offset: 19373},
																																run: (*parser).callonParagraph136,
																																expr: &litMatcher{
																																	pos:        position{line: 500, col: 5, offset: 19373},
																																	val:        "WARNING",
																																	ignoreCase: false,
																																},
																															},
																															&actionExpr{
																																pos: position{line: 502, col: 5, offset: 19419},
																																run: (*parser).callonParagraph138,
																																expr: &litMatcher{
																																	pos:        position{line: 502, col: 5, offset: 19419},
																																	val:        "CAUTION",
																																	ignoreCase: false,
																																},
																															},
																														},
																													},
																												},
																												&anyMatcher{
																													line: 215, col: 84, offset: 7995,
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																					&zeroOrMoreExpr{
																						pos: position{line: 207, col: 26, offset: 7652},
																						expr: &choiceExpr{
																							pos: position{line: 1024, col: 7, offset: 41621},
																							alternatives: []interface{}{
																								&litMatcher{
																									pos:        position{line: 1024, col: 7, offset: 41621},
																									val:        " ",
																									ignoreCase: false,
																								},
																								&actionExpr{
																									pos: position{line: 1024, col: 13, offset: 41627},
																									run: (*parser).callonParagraph144,
																									expr: &litMatcher{
																										pos:        position{line: 1024, col: 13, offset: 41627},
																										val:        "\t",
																										ignoreCase: false,
																									},
																								},
																							},
																						},
																					},
																					&litMatcher{
																						pos:        position{line: 207, col: 30, offset: 7656},
																						val:        ",",
																						ignoreCase: false,
																					},
																					&labeledExpr{
																						pos:   position{line: 207, col: 34, offset: 7660},
																						label: "author",
																						expr: &actionExpr{
																							pos: position{line: 235, col: 16, offset: 8733},
																							run: (*parser).callonParagraph148,
																							expr: &zeroOrMoreExpr{
																								pos: position{line: 235, col: 16, offset: 8733},
																								expr: &seqExpr{
																									pos: position{line: 235, col: 17, offset: 8734},
																									exprs: []interface{}{
																										&notExpr{
																											pos: position{line: 235, col: 17, offset: 8734},
																											expr: &choiceExpr{
																												pos: position{line: 1032, col: 8, offset: 41723},
																												alternatives: []interface{}{
																													&litMatcher{
																														pos:        position{line: 1028, col: 12, offset: 41683},
																														val:        "\r\n",
																														ignoreCase: false,
																													},
																													&charClassMatcher{
																														pos:        position{line: 1028, col: 21, offset: 41692},
																														val:        "[\\r\\n]",
																														chars:      []rune{'\r', '\n'},
																														ignoreCase: false,
																														inverted:   false,
																													},
																													&notExpr{
																														pos: position{line: 1030, col: 8, offset: 41712},
																														expr: &anyMatcher{
																															line: 1030, col: 9, offset: 41713,
																														},
																													},
																												},
																											},
																										},
																										&notExpr{
																											pos: position{line: 235, col: 22, offset: 8739},
																											expr: &litMatcher{
																												pos:        position{line: 235, col: 23, offset: 8740},
																												val:        ",",
																												ignoreCase: false,
																											},
																										},
																										&notExpr{
																											pos: position{line: 235, col: 27, offset: 8744},
																											expr: &litMatcher{
																												pos:        position{line: 235, col: 28, offset: 8745},
																												val:        "]",
																												ignoreCase: false,
																											},
																										},
																										&anyMatcher{
																											line: 235, col: 32, offset: 8749,
																										},
																									},
																								},
																							},
																						},
																					},
																					&litMatcher{
																						pos:        position{line: 207, col: 55, offset: 7681},
																						val:        "]",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																		&actionExpr{
																			pos: position{line: 211, col: 5, offset: 7812},
																			run: (*parser).callonParagraph163,
																			expr: &seqExpr{
																				pos: position{line: 211, col: 5, offset: 7812},
																				exprs: []interface{}{
																					&litMatcher{
																						pos:        position{line: 211, col: 5, offset: 7812},
																						val:        "[",
																						ignoreCase: false,
																					},
																					&labeledExpr{
																						pos:   position{line: 211, col: 9, offset: 7816},
																						label: "kind",
																						expr: &actionExpr{
																							pos: position{line: 215, col: 14, offset: 7925},
																							run: (*parser).callonParagraph167,
																							expr: &seqExpr{
																								pos: position{line: 215, col: 14, offset: 7925},
																								exprs: []interface{}{
																									&notExpr{
																										pos: position{line: 215, col: 14, offset: 7925},
																										expr: &actionExpr{
																											pos: position{line: 975, col: 16, offset: 40537},
																											run: (*parser).callonParagraph170,
																											expr: &litMatcher{
																												pos:        position{line: 975, col: 16, offset: 40537},
																												val:        "literal",
																												ignoreCase: false,
																											},
																										},
																									},
																									&notExpr{
																										pos: position{line: 215, col: 27, offset: 7938},
																										expr: &actionExpr{
																											pos: position{line: 231, col: 14, offset: 8674},
																											run: (*parser).callonParagraph173,
																											expr: &litMatcher{
																												pos:        position{line: 231, col: 14, offset: 8674},
																												val:        "verse",
																												ignoreCase: false,
																											},
																										},
																									},
																									&zeroOrMoreExpr{
																										pos: position{line: 215, col: 38, offset: 7949},
																										expr: &seqExpr{
																											pos: position{line: 215, col: 39, offset: 7950},
																											exprs: []interface{}{
																												&notExpr{
																													pos: position{line: 215, col: 39, offset: 7950},
																													expr: &choiceExpr{
																														pos: position{line: 1032, col: 8, offset: 41723},
																														alternatives: []interface{}{
																															&litMatcher{
																																pos:        position{line: 1028, col: 12, offset: 41683},
																																val:        "\r\n",
																																ignoreCase: false,
																															},
																															&charClassMatcher{
																																pos:        position{line: 1028, col: 21, offset: 41692},
																																val:        "[\\r\\n]",
																																chars:      []rune{'\r', '\n'},
																																ignoreCase: false,
																																inverted:   false,
																															},
																															&notExpr{
																																pos: position{line: 1030, col: 8, offset: 41712},
																																expr: &anyMatcher{
																																	line: 1030, col: 9, offset: 41713,
																																},
																															},
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 215, col: 44, offset: 7955},
																													expr: &choiceExpr{
																														pos: position{line: 1024, col: 7, offset: 41621},
																														alternatives: []interface{}{
																															&litMatcher{
																																pos:        position{line: 1024, col: 7, offset: 41621},
																																val:        " ",
																																ignoreCase: false,
																															},
																															&actionExpr{
																																pos: position{line: 1024, col: 13, offset: 41627},
																																run: (*parser).callonParagraph186,
																																expr: &litMatcher{
																																	pos:        position{line: 1024, col: 13, offset: 41627},
																																	val:        "\t",
																																	ignoreCase: false,
																																},
																															},
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 215, col: 48, offset: 7959},
																													expr: &litMatcher{
																														pos:        position{line: 215, col: 49, offset: 7960},
																														val:        ",",
																														ignoreCase: false,
																													},
																												},
																												&notExpr{
																													pos: position{line: 215, col: 53, offset: 7964},
																													expr: &litMatcher{
																														pos:        position{line: 215, col: 54, offset: 7965},
																														val:        "]",
																														ignoreCase: false,
																													},
																												},
																												&notExpr{
																													pos: position{line: 215, col: 58, offset: 7969},
																													expr: &litMatcher{
																														pos:        position{line: 215, col: 59, offset: 7970},
																														val:        "#",
																														ignoreCase: false,
																													},
																												},
																												&notExpr{
																													pos: position{line: 215, col: 63, offset: 7974},
																													expr: &litMatcher{
																														pos:        position{line: 215, col: 64, offset: 7975},
																														val:        "=",
																														ignoreCase: false,
																													},
																												},
																												&notExpr{
																													pos: position{line: 215, col: 68, offset: 7979},
																													expr: &choiceExpr{
																														pos: position{line: 494, col: 19, offset: 19245},
																														alternatives: []interface{}{
																															&actionExpr{
																																pos: position{line: 494, col: 19, offset: 19245},
																																run: (*parser).callonParagraph198,
																																expr: &litMatcher{
																																	pos:        position{line: 494, col: 19, offset: 19245},
																																	val:        "TIP",
																																	ignoreCase: false,
																																},
																															},
																															&actionExpr{
																																pos: position{line: 496, col: 5, offset: 19283},
																																run: (*parser).callonParagraph200,
																																expr: &litMatcher{
																																	pos:        position{line: 496, col: 5, offset: 19283},
																																	val:        "NOTE",
																																	ignoreCase: false,
																																},
																															},
																															&actionExpr{
																																pos: position{line: 498, col: 5, offset: 19323},
																																run: (*parser).callonParagraph202,
																																expr: &litMatcher{
																																	pos:        position{line: 498, col: 5, offset: 19323},
																																	val:        "IMPORTANT",
																																	ignoreCase: false,
																																},
																															},
																															&actionExpr{
																																pos: position{line: 500, col: 5, offset: 19373},
																																run: (*parser).callonParagraph204,
																																expr: &litMatcher{
																																	pos:        position{line: 500, col: 5, offset: 19373},
																																	val:        "WARNING",
																																	ignoreCase: false,
																																},
																															},
																															&actionExpr{
																																pos: position{line: 502, col: 5, offset: 19419},
																																run: (*parser).callonParagraph206,
																																expr: &litMatcher{
																																	pos:        position{line: 502, col: 5, offset: 19419},
																																	val:        "CAUTION",
																																	ignoreCase: false,
																																},
																															},
																														},
																													},
																												},
																												&anyMatcher{
																													line: 215, col: 84, offset: 7995,
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																					&zeroOrMoreExpr{
																						pos: position{line: 211, col: 26, offset: 7833},
																						expr: &choiceExpr{
																							pos: position{line: 1024, col: 7, offset: 41621},
																							alternatives: []interface{}{
																								&litMatcher{
																									pos:        position{line: 1024, col: 7, offset: 41621},
																									val:        " ",
																									ignoreCase: false,
																								},
																								&actionExpr{
																									pos: position{line: 1024, col: 13, offset: 41627},
																									run: (*parser).callonParagraph212,
																									expr: &litMatcher{
																										pos:        position{line: 1024, col: 13, offset: 41627},
																										val:        "\t",
																										ignoreCase: false,
																									},
																								},
																							},
																						},
																					},
																					&litMatcher{
																						pos:        position{line: 211, col: 30, offset: 7837},
																						val:        "]",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																		&actionExpr{
																			pos: position{line: 219, col: 20, offset: 8164},
																			run: (*parser).callonParagraph215,
																			expr: &seqExpr{
																				pos: position{line: 219, col: 20, offset: 8164},
																				exprs: []interface{}{
																					&litMatcher{
																						pos:        position{line: 219, col: 20, offset: 8164},
																						val:        "[",
																						ignoreCase: false,
																					},
																					&labeledExpr{
																						pos:   position{line: 219, col: 24, offset: 8168},
																						label: "kind",
																						expr: &actionExpr{
																							pos: position{line: 231, col: 14, offset: 8674},
																							run: (*parser).callonParagraph219,
																							expr: &litMatcher{
																								pos:        position{line: 231, col: 14, offset: 8674},
																								val:        "verse",
																								ignoreCase: false,
																							},
																						},
																					},
																					&zeroOrMoreExpr{
																						pos: position{line: 219, col: 41, offset: 8185},
																						expr: &choiceExpr{
																							pos: position{line: 1024, col: 7, offset: 41621},
																							alternatives: []interface{}{
																								&litMatcher{
																									pos:        position{line: 1024, col: 7, offset: 41621},
																									val:        " ",
																									ignoreCase: false,
																								},
																								&actionExpr{
																									pos: position{line: 1024, col: 13, offset: 41627},
																									run: (*parser).callonParagraph224,
																									expr: &litMatcher{
																										pos:        position{line: 1024, col: 13, offset: 41627},
																										val:        "\t",
																										ignoreCase: false,
																									},
																								},
																							},
																						},
																					},
																					&litMatcher{
																						pos:        position{line: 219, col: 45, offset: 8189},
																						val:        ",",
																						ignoreCase: false,
																					},
																					&labeledExpr{
																						pos:   position{line: 219, col: 49, offset: 8193},
																						label: "author",
																						expr: &actionExpr{
																							pos: position{line: 235, col: 16, offset: 8733},
																							run: (*parser).callonParagraph228,
																							expr: &zeroOrMoreExpr{
																								pos: position{line: 235, col: 16, offset: 8733},
																								expr: &seqExpr{
																									pos: position{line: 235, col: 17, offset: 8734},
																									exprs: []interface{}{
																										&notExpr{
																											pos: position{line: 235, col: 17, offset: 8734},
																											expr: &choiceExpr{
																												pos: position{line: 1032, col: 8, offset: 41723},
																												alternatives: []interface{}{
																													&litMatcher{
																														pos:        position{line: 1028, col: 12, offset: 41683},
																														val:        "\r\n",
																														ignoreCase: false,
																													},
																													&charClassMatcher{
																														pos:        position{line: 1028, col: 21, offset: 41692},
																														val:        "[\\r\\n]",
																														chars:      []rune{'\r', '\n'},
																														ignoreCase: false,
																														inverted:   false,
																													},
																													&notExpr{
																														pos: position{line: 1030, col: 8, offset: 41712},
																														expr: &anyMatcher{
																															line: 1030, col: 9, offset: 41713,
																														},
																													},
																												},
																											},
																										},
																										&notExpr{
																											pos: position{line: 235, col: 22, offset: 8739},
																											expr: &litMatcher{
																												pos:        position{line: 235, col: 23, offset: 8740},
																												val:        ",",
																												ignoreCase: false,
																											},
																										},
																										&notExpr{
																											pos: position{line: 235, col: 27, offset: 8744},
																											expr: &litMatcher{
																												pos:        position{line: 235, col: 28, offset: 8745},
																												val:        "]",
																												ignoreCase: false,
																											},
																										},
																										&anyMatcher{
																											line: 235, col: 32, offset: 8749,
																										},
																									},
																								},
																							},
																						},
																					},
																					&litMatcher{
																						pos:        position{line: 219, col: 70, offset: 8214},
																						val:        ",",
																						ignoreCase: false,
																					},
																					&labeledExpr{
																						pos:   position{line: 219, col: 74, offset: 8218},
																						label: "title",
																						expr: &actionExpr{
																							pos: position{line: 239, col: 15, offset: 8803},
																							run: (*parser).callonParagraph244,
																							expr: &zeroOrMoreExpr{
																								pos: position{line: 239, col: 15, offset: 8803},
																								expr: &seqExpr{
																									pos: position{line: 239, col: 16, offset: 8804},
																									exprs: []interface{}{
																										&notExpr{
																											pos: position{line: 239, col: 16, offset: 8804},
																											expr: &choiceExpr{
																												pos: position{line: 1032, col: 8, offset: 41723},
																												alternatives: []interface{}{
																													&litMatcher{
																														pos:        position{line: 1028, col: 12, offset: 41683},
																														val:        "\r\n",
																														ignoreCase: false,
																													},
																													&charClassMatcher{
																														pos:        position{line: 1028, col: 21, offset: 41692},
																														val:        "[\\r\\n]",
																														chars:      []rune{'\r', '\n'},
																														ignoreCase: false,
																														inverted:   false,
																													},
																													&notExpr{
																														pos: position{line: 1030, col: 8, offset: 41712},
																														expr: &anyMatcher{
																															line: 1030, col: 9, offset: 41713,
																														},
																													},
																												},
																											},
																										},
																										&notExpr{
																											pos: position{line: 239, col: 21, offset: 8809},
																											expr: &litMatcher{
																												pos:        position{line: 239, col: 22, offset: 8810},
																												val:        ",",
																												ignoreCase: false,
																											},
																										},
																										&notExpr{
																											pos: position{line: 239, col: 26, offset: 8814},
																											expr: &litMatcher{
																												pos:        position{line: 239, col: 27, offset: 8815},
																												val:        "]",
																												ignoreCase: false,
																											},
																										},
																										&anyMatcher{
																											line: 239, col: 31, offset: 8819,
																										},
																									},
																								},
																							},
																						},
																					},
																					&litMatcher{
																						pos:        position{line: 219, col: 93, offset: 8237},
																						val:        "]",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																		&actionExpr{
																			pos: position{line: 223, col: 5, offset: 8380},
																			run: (*parser).callonParagraph259,
																			expr: &seqExpr{
																				pos: position{line: 223, col: 5, offset: 8380},
																				exprs: []interface{}{
																					&litMatcher{
																						pos:        position{line: 223, col: 5, offset: 8380},
																						val:        "[",
																						ignoreCase: false,
																					},
																					&labeledExpr{
																						pos:   position{line: 223, col: 9, offset: 8384},
																						label: "kind",
																						expr: &actionExpr{
																							pos: position{line: 231, col: 14, offset: 8674},
																							run: (*parser).callonParagraph263,
																							expr: &litMatcher{
																								pos:        position{line: 231, col: 14, offset: 8674},
																								val:        "verse",
																								ignoreCase: false,
																							},
																						},
																					},
																					&zeroOrMoreExpr{
																						pos: position{line: 223, col: 26, offset: 8401},
																						expr: &choiceExpr{
																							pos: position{line: 1024, col: 7, offset: 41621},
																							alternatives: []interface{}{
																								&litMatcher{
																									pos:        position{line: 1024, col: 7, offset: 41621},
																									val:        " ",
																									ignoreCase: false,
																								},
																								&actionExpr{
																									pos: position{line: 1024, col: 13, offset: 41627},
																									run: (*parser).callonParagraph268,
																									expr: &litMatcher{
																										pos:        position{line: 1024, col: 13, offset: 41627},
																										val:        "\t",
																										ignoreCase: false,
																									},
																								},
																							},
																						},
																					},
																					&litMatcher{
																						pos:        position{line: 223, col: 30, offset: 8405},
																						val:        ",",
																						ignoreCase: false,
																					},
																					&labeledExpr{
																						pos:   position{line: 223, col: 34, offset: 8409},
																						label: "author",
																						expr: &actionExpr{
																							pos: position{line: 235, col: 16, offset: 8733},
																							run: (*parser).callonParagraph272,
																							expr: &zeroOrMoreExpr{
																								pos: position{line: 235, col: 16, offset: 8733},
																								expr: &seqExpr{
																									pos: position{line: 235, col: 17, offset: 8734},
																									exprs: []interface{}{
																										&notExpr{
																											pos: position{line: 235, col: 17, offset: 8734},
																											expr: &choiceExpr{
																												pos: position{line: 1032, col: 8, offset: 41723},
																												alternatives: []interface{}{
																													&litMatcher{
																														pos:        position{line: 1028, col: 12, offset: 41683},
																														val:        "\r\n",
																														ignoreCase: false,
																													},
																													&charClassMatcher{
																														pos:        position{line: 1028, col: 21, offset: 41692},
																														val:        "[\\r\\n]",
																														chars:      []rune{'\r', '\n'},
																														ignoreCase: false,
																														inverted:   false,
																													},
																													&notExpr{
																														pos: position{line: 1030, col: 8, offset: 41712},
																														expr: &anyMatcher{
																															line: 1030, col: 9, offset: 41713,
																														},
																													},
																												},
																											},
																										},
																										&notExpr{
																											pos: position{line: 235, col: 22, offset: 8739},
																											expr: &litMatcher{
																												pos:        position{line: 235, col: 23, offset: 8740},
																												val:        ",",
																												ignoreCase: false,
																											},
																										},
																										&notExpr{
																											pos: position{line: 235, col: 27, offset: 8744},
																											expr: &litMatcher{
																												pos:        position{line: 235, col: 28, offset: 8745},
																												val:        "]",
																												ignoreCase: false,
																											},
																										},
																										&anyMatcher{
																											line: 235, col: 32, offset: 8749,
																										},
																									},
																								},
																							},
																						},
																					},
																					&litMatcher{
																						pos:        position{line: 223, col: 55, offset: 8430},
																						val:        "]",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																		&actionExpr{
																			pos: position{line: 227, col: 5, offset: 8561},
																			run: (*parser).callonParagraph287,
																			expr: &seqExpr{
																				pos: position{line: 227, col: 5, offset: 8561},
																				exprs: []interface{}{
																					&litMatcher{
																						pos:        position{line: 227, col: 5, offset: 8561},
																						val:        "[",
																						ignoreCase: false,
																					},
																					&labeledExpr{
																						pos:   position{line: 227, col: 9, offset: 8565},
																						label: "kind",
																						expr: &actionExpr{
																							pos: position{line: 231, col: 14, offset: 8674},
																							run: (*parser).callonParagraph291,
																							expr: &litMatcher{
																								pos:        position{line: 231, col: 14, offset: 8674},
																								val:        "verse",
																								ignoreCase: false,
																							},
																						},
																					},
																					&zeroOrMoreExpr{
																						pos: position{line: 227, col: 26, offset: 8582},
																						expr: &choiceExpr{
																							pos: position{line: 1024, col: 7, offset: 41621},
																							alternatives: []interface{}{
																								&litMatcher{
																									pos:        position{line: 1024, col: 7, offset: 41621},
																									val:        " ",
																									ignoreCase: false,
																								},
																								&actionExpr{
																									pos: position{line: 1024, col: 13, offset: 41627},
																									run: (*parser).callonParagraph296,
																									expr: &litMatcher{
																										pos:        position{line: 1024, col: 13, offset: 41627},
																										val:        "\t",
																										ignoreCase: false,
																									},
																								},
																							},
																						},
																					},
																					&litMatcher{
																						pos:        position{line: 227, col: 30, offset: 8586},
																						val:        "]",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																},
															},
															&zeroOrMoreExpr{
																pos: position{line: 141, col: 65, offset: 5537},
																expr: &choiceExpr{
																	pos: position{line: 1024, col: 7, offset: 41621},
																	alternatives: []interface{}{
																		&litMatcher{
																			pos:        position{line: 1024, col: 7, offset: 41621},
																			val:        " ",
																			ignoreCase: false,
																		},
																		&actionExpr{
																			pos: position{line: 1024, col: 13, offset: 41627},
																			run: (*parser).callonParagraph302,
																			expr: &litMatcher{
																				pos:        position{line: 1024, col: 13, offset: 41627},
																				val:        "\t",
																				ignoreCase: false,
																			},
																		},
																	},
																},
															},
															&choiceExpr{
																pos: position{line: 1032, col: 8, offset: 41723},
																alternatives: []interface{}{
																	&litMatcher{
																		pos:        position{line: 1028, col: 12, offset: 41683},
																		val:        "\r\n",
																		ignoreCase: false,
																	},
																	&charClassMatcher{
																		pos:        position{line: 1028, col: 21, offset: 41692},
																		val:        "[\\r\\n]",
																		chars:      []rune{'\r', '\n'},
																		ignoreCase: false,
																		inverted:   false,
																	},
																	&notExpr{
																		pos: position{line: 1030, col: 8, offset: 41712},
																		expr: &anyMatcher{
																			line: 1030, col: 9, offset: 41713,
																		},
																	},
																},
															},
														},
													},
												},
												&actionExpr{
													pos: position{line: 136, col: 21, offset: 5188},
													run: (*parser).callonParagraph309,
													expr: &seqExpr{
														pos: position{line: 136, col: 21, offset: 5188},
														exprs: []interface{}{
															&labeledExpr{
																pos:   position{line: 136, col: 21, offset: 5188},
																label: "attr",
																expr: &choiceExpr{
																	pos: position{line: 136, col: 27, offset: 5194},
																	alternatives: []interface{}{
																		&actionExpr{
																			pos: position{line: 145, col: 14, offset: 5645},
																			run: (*parser).callonParagraph313,
																			expr: &labeledExpr{
																				pos:   position{line: 145, col: 14, offset: 5645},
																				label: "id",
																				expr: &actionExpr{
																					pos: position{line: 151, col: 20, offset: 5775},
																					run: (*parser).callonParagraph315,
																					expr: &seqExpr{
																						pos: position{line: 151, col: 20, offset: 5775},
																						exprs: []interface{}{
																							&litMatcher{
																								pos:        position{line: 151, col: 20, offset: 5775},
																								val:        "[[",
																								ignoreCase: false,
																							},
																							&labeledExpr{
																								pos:   position{line: 151, col: 25, offset: 5780},
																								label: "id",
																								expr: &actionExpr{
																									pos: position{line: 1010, col: 7, offset: 41339},
																									run: (*parser).callonParagraph319,
																									expr: &oneOrMoreExpr{
																										pos: position{line: 1010, col: 7, offset: 41339},
																										expr: &seqExpr{
																											pos: position{line: 1010, col: 8, offset: 41340},
																											exprs: []interface{}{
																												&notExpr{
																													pos: position{line: 1010, col: 8, offset: 41340},
																													expr: &choiceExpr{
																														pos: position{line: 1028, col: 12, offset: 41683},
																														alternatives: []interface{}{
																															&litMatcher{
																																pos:        position{line: 1028, col: 12, offset: 41683},
																																val:        "\r\n",
																																ignoreCase: false,
																															},
																															&charClassMatcher{
																																pos:        position{line: 1028, col: 21, offset: 41692},
																																val:        "[\\r\\n]",
																																chars:      []rune{'\r', '\n'},
																																ignoreCase: false,
																																inverted:   false,
																															},
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 1010, col: 17, offset: 41349},
																													expr: &choiceExpr{
																														pos: position{line: 1024, col: 7, offset: 41621},
																														alternatives: []interface{}{
																															&litMatcher{
																																pos:        position{line: 1024, col: 7, offset: 41621},
																																val:        " ",
																																ignoreCase: false,
																															},
																															&actionExpr{
																																pos: position{line: 1024, col: 13, offset: 41627},
																																run: (*parser).callonParagraph329,
																																expr: &litMatcher{
																																	pos:        position{line: 1024, col: 13, offset: 41627},
																																	val:        "\t",
																																	ignoreCase: false,
																																},
																															},
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 1010, col: 21, offset: 41353},
																													expr: &litMatcher{
																														pos:        position{line: 1010, col: 22, offset: 41354},
																														val:        "[",
																														ignoreCase: false,
																													},
																												},
																												&notExpr{
																													pos: position{line: 1010, col: 26, offset: 41358},
																													expr: &litMatcher{
																														pos:        position{line: 1010, col: 27, offset: 41359},
																														val:        "]",
																														ignoreCase: false,
																													},
																												},
																												&notExpr{
																													pos: position{line: 1010, col: 31, offset: 41363},
																													expr: &litMatcher{
																														pos:        position{line: 1010, col: 32, offset: 41364},
																														val:        "<<",
																														ignoreCase: false,
																													},
																												},
																												&notExpr{
																													pos: position{line: 1010, col: 37, offset: 41369},
																													expr: &litMatcher{
																														pos:        position{line: 1010, col: 38, offset: 41370},
																														val:        ">>",
																														ignoreCase: false,
																													},
																												},
																												&notExpr{
																													pos: position{line: 1010, col: 43, offset: 41375},
																													expr: &litMatcher{
																														pos:        position{line: 1010, col: 44, offset: 41376},
																														val:        ",",
																														ignoreCase: false,
																													},
																												},
																												&anyMatcher{
																													line: 1010, col: 48, offset: 41380,
																												},
																											},
																										},
																									},
																								},
																							},
																							&litMatcher{
																								pos:        position{line: 151, col: 33, offset: 5788},
																								val:        "]]",
																								ignoreCase: false,
																							},
																						},
																					},
																				},
																			},
																		},
																		&actionExpr{
																			pos: position{line: 147, col: 5, offset: 5691},
																			run: (*parser).callonParagraph343,
																			expr: &seqExpr{
																				pos: position{line: 147, col: 5, offset: 5691},
																				exprs: []interface{}{
																					&litMatcher{
																						pos:        position{line: 147, col: 5, offset: 5691},
																						val:        "[#",
																						ignoreCase: false,
																					},
																					&labeledExpr{
																						pos:   position{line: 147, col: 10, offset: 5696},
																						label: "id",
																						expr: &actionExpr{
																							pos: position{line: 1010, col: 7, offset: 41339},
																							run: (*parser).callonParagraph347,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 1010, col: 7, offset: 41339},
																								expr: &seqExpr{
																									pos: position{line: 1010, col: 8, offset: 41340},
																									exprs: []interface{}{
																										&notExpr{
																											pos: position{line: 1010, col: 8, offset: 41340},
																											expr: &choiceExpr{
																												pos: position{line: 1028, col: 12, offset: 41683},
																												alternatives: []interface{}{
																													&litMatcher{
																														pos:        position{line: 1028, col: 12, offset: 41683},
																														val:        "\r\n",
																														ignoreCase: false,
																													},
																													&charClassMatcher{
																														pos:        position{line: 1028, col: 21, offset: 41692},
																														val:        "[\\r\\n]",
																														chars:      []rune{'\r', '\n'},
																														ignoreCase: false,
																														inverted:   false,
																													},
																												},
																											},
																										},
																										&notExpr{
																											pos: position{line: 1010, col: 17, offset: 41349},
																											expr: &choiceExpr{
																												pos: position{line: 1024, col: 7, offset: 41621},
																												alternatives: []interface{}{
																													&litMatcher{
																														pos:        position{line: 1024, col: 7, offset: 41621},
																														val:        " ",
																														ignoreCase: false,
																													},
																													&actionExpr{
																														pos: position{line: 1024, col: 13, offset: 41627},
																														run: (*parser).callonParagraph357,
																														expr: &litMatcher{
																															pos:        position{line: 1024, col: 13, offset: 41627},
																															val:        "\t",
																															ignoreCase: false,
																														},
																													},
																												},
																											},
																										},
																										&notExpr{
																											pos: position{line: 1010, col: 21, offset: 41353},
																											expr: &litMatcher{
																												pos:        position{line: 1010, col: 22, offset: 41354},
																												val:        "[",
																												ignoreCase: false,
																											},
																										},
																										&notExpr{
																											pos: position{line: 1010, col: 26, offset: 41358},
																											expr: &litMatcher{
																												pos:        position{line: 1010, col: 27, offset: 41359},
																												val:        "]",
																												ignoreCase: false,
																											},
																										},
																										&notExpr{
																											pos: position{line: 1010, col: 31, offset: 41363},
																											expr: &litMatcher{
																												pos:        position{line: 1010, col: 32, offset: 41364},
																												val:        "<<",
																												ignoreCase: false,
																											},
																										},
																										&notExpr{
																											pos: position{line: 1010, col: 37, offset: 41369},
																											expr: &litMatcher{
																												pos:        position{line: 1010, col: 38, offset: 41370},
																												val:        ">>",
																												ignoreCase: false,
																											},
																										},
																										&notExpr{
																											pos: position{line: 1010, col: 43, offset: 41375},
																											expr: &litMatcher{
																												pos:        position{line: 1010, col: 44, offset: 41376},
																												val:        ",",
																												ignoreCase: false,
																											},
																										},
																										&anyMatcher{
																											line: 1010, col: 48, offset: 41380,
																										},
																									},
																								},
																							},
																						},
																					},
																					&litMatcher{
																						pos:        position{line: 147, col: 18, offset: 5704},
																						val:        "]",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																		&actionExpr{
																			pos: position{line: 157, col: 17, offset: 5997},
																			run: (*parser).callonParagraph371,
																			expr: &seqExpr{
																				pos: position{line: 157, col: 17, offset: 5997},
																				exprs: []interface{}{
																					&litMatcher{
																						pos:        position{line: 157, col: 17, offset: 5997},
																						val:        ".",
																						ignoreCase: false,
																					},
																					&notExpr{
																						pos: position{line: 157, col: 21, offset: 6001},
																						expr: &litMatcher{
																							pos:        position{line: 157, col: 22, offset: 6002},
																							val:        ".",
																							ignoreCase: false,
																						},
																					},
																					&notExpr{
																						pos: position{line: 157, col: 26, offset: 6006},
																						expr: &choiceExpr{
																							pos: position{line: 1024, col: 7, offset: 41621},
																							alternatives: []interface{}{
																								&litMatcher{
																									pos:        position{line: 1024, col: 7, offset: 41621},
																									val:        " ",
																									ignoreCase: false,
																								},
																								&actionExpr{
																									pos: position{line: 1024, col: 13, offset: 41627},
																									run: (*parser).callonParagraph379,
																									expr: &litMatcher{
																										pos:        position{line: 1024, col: 13, offset: 41627},
																										val:        "\t",
																										ignoreCase: false,
																									},
																								},
																							},
																						},
																					},
																					&labeledExpr{
																						pos:   position{line: 157, col: 30, offset: 6010},
																						label: "title",
																						expr: &actionExpr{
																							pos: position{line: 161, col: 24, offset: 6115},
																							run: (*parser).callonParagraph382,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 161, col: 24, offset: 6115},
																								expr: &seqExpr{
																									pos: position{line: 161, col: 25, offset: 6116},
																									exprs: []interface{}{
																										&notExpr{
																											pos: position{line: 161, col: 25, offset: 6116},
																											expr: &choiceExpr{
																												pos: position{line: 1028, col: 12, offset: 41683},
																												alternatives: []interface{}{
																													&litMatcher{
																														pos:        position{line: 1028, col: 12, offset: 41683},
																														val:        "\r\n",
																														ignoreCase: false,
																													},
																													&charClassMatcher{
																														pos:        position{line: 1028, col: 21, offset: 41692},
																														val:        "[\\r\\n]",
																														chars:      []rune{'\r', '\n'},
																														ignoreCase: false,
																														inverted:   false,
																													},
																												},
																											},
																										},
																										&anyMatcher{
																											line: 161, col: 34, offset: 6125,
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																		&actionExpr{
																			pos: position{line: 167, col: 16, offset: 6274},
																			run: (*parser).callonParagraph390,
																			expr: &seqExpr{
																				pos: position{line: 167, col: 16, offset: 6274},
																				exprs: []interface{}{
																					&litMatcher{
																						pos:        position{line: 167, col: 16, offset: 6274},
																						val:        "[.",
																						ignoreCase: false,
																					},
																					&notExpr{
																						pos: position{line: 167, col: 21, offset: 6279},
																						expr: &choiceExpr{
																							pos: position{line: 1024, col: 7, offset: 41621},
																							alternatives: []interface{}{
																								&litMatcher{
																									pos:        position{line: 1024, col: 7, offset: 41621},
																									val:        " ",
																									ignoreCase: false,
																								},
																								&actionExpr{
																									pos: position{line: 1024, col: 13, offset: 41627},
																									run: (*parser).callonParagraph396,
																									expr: &litMatcher{
																										pos:        position{line: 1024, col: 13, offset: 41627},
																										val:        "\t",
																										ignoreCase: false,
																									},
																								},
																							},
																						},
																					},
																					&labeledExpr{
																						pos:   position{line: 167, col: 25, offset: 6283},
																						label: "role",
																						expr: &actionExpr{
																							pos: position{line: 171, col: 23, offset: 6387},
																							run: (*parser).callonParagraph399,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 171, col: 23, offset: 6387},
																								expr: &seqExpr{
																									pos: position{line: 171, col: 24, offset: 6388},
																									exprs: []interface{}{
																										&notExpr{
																											pos: position{line: 171, col: 24, offset: 6388},
																											expr: &choiceExpr{
																												pos: position{line: 1028, col: 12, offset: 41683},
																												alternatives: []interface{}{
																													&litMatcher{
																														pos:        position{line: 1028, col: 12, offset: 41683},
																														val:        "\r\n",
																														ignoreCase: false,
																													},
																													&charClassMatcher{
																														pos:        position{line: 1028, col: 21, offset: 41692},
																														val:        "[\\r\\n]",
																														chars:      []rune{'\r', '\n'},
																														ignoreCase: false,
																														inverted:   false,
																													},
																												},
																											},
																										},
																										&notExpr{
																											pos: position{line: 171, col: 33, offset: 6397},
																											expr: &litMatcher{
																												pos:        position{line: 171, col: 34, offset: 6398},
																												val:        "]",
																												ignoreCase: false,
																											},
																										},
																										&anyMatcher{
																											line: 171, col: 38, offset: 6402,
																										},
																									},
																								},
																							},
																						},
																					},
																					&litMatcher{
																						pos:        position{line: 167, col: 51, offset: 6309},
																						val:        "]",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																		&actionExpr{
																			pos: position{line: 176, col: 30, offset: 6551},
																			run: (*parser).callonParagraph410,
																			expr: &seqExpr{
																				pos: position{line: 176, col: 30, offset: 6551},
																				exprs: []interface{}{
																					&litMatcher{
																						pos:        position{line: 176, col: 30, offset: 6551},
																						val:        "[",
																						ignoreCase: false,
																					},
																					&labeledExpr{
																						pos:   position{line: 176, col: 34, offset: 6555},
																						label: "k",
																						expr: &choiceExpr{
																							pos: position{line: 494, col: 19, offset: 19245},
																							alternatives: []interface{}{
																								&actionExpr{
																									pos: position{line: 494, col: 19, offset: 19245},
																									run: (*parser).callonParagraph415,
																									expr: &litMatcher{
																										pos:        position{line: 494, col: 19, offset: 19245},
																										val:        "TIP",
																										ignoreCase: false,
																									},
																								},
																								&actionExpr{
																									pos: position{line: 496, col: 5, offset: 19283},
																									run: (*parser).callonParagraph417,
																									expr: &litMatcher{
																										pos:        position{line: 496, col: 5, offset: 19283},
																										val:        "NOTE",
																										ignoreCase: false,
																									},
																								},
																								&actionExpr{
																									pos: position{line: 498, col: 5, offset: 19323},
																									run: (*parser).callonParagraph419,
																									expr: &litMatcher{
																										pos:        position{line: 498, col: 5, offset: 19323},
																										val:        "IMPORTANT",
																										ignoreCase: false,
																									},
																								},
																								&actionExpr{
																									pos: position{line: 500, col: 5, offset: 19373},
																									run: (*parser).callonParagraph421,
																									expr: &litMatcher{
																										pos:        position{line: 500, col: 5, offset: 19373},
																										val:        "WARNING",
																										ignoreCase: false,
																									},
																								},
																								&actionExpr{
																									pos: position{line: 502, col: 5, offset: 19419},
																									run: (*parser).callonParagraph423,
																									expr: &litMatcher{
																										pos:        position{line: 502, col: 5, offset: 19419},
																										val:        "CAUTION",
																										ignoreCase: false,
																									},
																								},
																							},
																						},
																					},
																					&litMatcher{
																						pos:        position{line: 176, col: 53, offset: 6574},
																						val:        "]",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																		&actionExpr{
																			pos: position{line: 199, col: 21, offset: 7312},
																			run: (*parser).callonParagraph426,
																			expr: &litMatcher{
																				pos:        position{line: 199, col: 21, offset: 7312},
																				val:        "[horizontal]",
																				ignoreCase: false,
																			},
																		},
																		&actionExpr{
																			pos: position{line: 181, col: 19, offset: 6735},
																			run: (*parser).callonParagraph428,
																			expr: &seqExpr{
																				pos: position{line: 181, col: 19, offset: 6735},
																				exprs: []interface{}{
																					&litMatcher{
																						pos:        position{line: 181, col: 19, offset: 6735},
																						val:        "[",
																						ignoreCase: false,
																					},
																					&notExpr{
																						pos: position{line: 181, col: 23, offset: 6739},
																						expr: &choiceExpr{
																							pos: position{line: 1024, col: 7, offset: 41621},
																							alternatives: []interface{}{
																								&litMatcher{
																									pos:        position{line: 1024, col: 7, offset: 41621},
																									val:        " ",
																									ignoreCase: false,
																								},
																								&actionExpr{
																									pos: position{line: 1024, col: 13, offset: 41627},
																									run: (*parser).callonParagraph434,
																									expr: &litMatcher{
																										pos:        position{line: 1024, col: 13, offset: 41627},
																										val:        "\t",
																										ignoreCase: false,
																									},
																								},
																							},
																						},
																					},
																					&labeledExpr{
																						pos:   position{line: 181, col: 27, offset: 6743},
																						label: "attributes",
																						expr: &zeroOrMoreExpr{
																							pos: position{line: 181, col: 38, offset: 6754},
																							expr: &choiceExpr{
																								pos: position{line: 185, col: 21, offset: 6867},
																								alternatives: []interface{}{
																									&actionExpr{
																										pos: position{line: 185, col: 21, offset: 6867},
																										run: (*parser).callonParagraph439,
																										expr: &seqExpr{
																											pos: position{line: 185, col: 21, offset: 6867},
																											exprs: []interface{}{
																												&labeledExpr{
																													pos:   position{line: 185, col: 21, offset: 6867},
																													label: "key",
																													expr: &actionExpr{
																														pos: position{line: 191, col: 17, offset: 7127},
																														run: (*parser).callonParagraph442,
																														expr: &seqExpr{
																															pos: position{line: 191, col: 17, offset: 7127},
																															exprs: []interface{}{
																																&notExpr{
																																	pos: position{line: 191, col: 17, offset: 7127},
																																	expr: &actionExpr{
																																		pos: position{line: 231, col: 14, offset: 8674},
																																		run: (*parser).callonParagraph445,
																																		expr: &litMatcher{
																																			pos:        position{line: 231, col: 14, offset: 8674},
																																			val:        "verse",
																																			ignoreCase: false,
																																		},
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 191, col: 28, offset: 7138},
																																	expr: &actionExpr{
																																		pos: position{line: 975, col: 16, offset: 40537},
																																		run: (*parser).callonParagraph448,
																																		expr: &litMatcher{
																																			pos:        position{line: 975, col: 16, offset: 40537},
																																			val:        "literal",
																																			ignoreCase: false,
																																		},
																																	},
																																},
																																&labeledExpr{
																																	pos:   position{line: 191, col: 41, offset: 7151},
																																	label: "key",
																																	expr: &oneOrMoreExpr{
																																		pos: position{line: 191, col: 45, offset: 7155},
																																		expr: &seqExpr{
																																			pos: position{line: 191, col: 46, offset: 7156},
																																			exprs: []interface{}{
																																				&notExpr{
																																					pos: position{line: 191, col: 46, offset: 7156},
																																					expr: &litMatcher{
																																						pos:        position{line: 191, col: 47, offset: 7157},
																																						val:        "=",
																																						ignoreCase: false,
																																					},
																																				},
																																				&notExpr{
																																					pos: position{line: 191, col: 51, offset: 7161},
																																					expr: &litMatcher{
																																						pos:        position{line: 191, col: 52, offset: 7162},
																																						val:        ",",
																																						ignoreCase: false,
																																					},
																																				},
																																				&notExpr{
																																					pos: position{line: 191, col: 56, offset: 7166},
																																					expr: &litMatcher{
																																						pos:        position{line: 191, col: 57, offset: 7167},
																																						val:        "]",
																																						ignoreCase: false,
																																					},
																																				},
																																				&anyMatcher{
																																					line: 191, col: 61, offset: 7171,
																																				},
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																												&litMatcher{
																													pos:        position{line: 185, col: 40, offset: 6886},
																													val:        "=",
																													ignoreCase: false,
																												},
																												&labeledExpr{
																													pos:   position{line: 185, col: 44, offset: 6890},
																													label: "value",
																													expr: &actionExpr{
																														pos: position{line: 195, col: 19, offset: 7230},
																														run: (*parser).callonParagraph462,
																														expr: &labeledExpr{
																															pos:   position{line: 195, col: 19, offset: 7230},
																															label: "value",
																															expr: &zeroOrMoreExpr{
																																pos: position{line: 195, col: 25, offset: 7236},
																																expr: &seqExpr{
																																	pos: position{line: 195, col: 26, offset: 7237},
																																	exprs: []interface{}{
																																		&notExpr{
																																			pos: position{line: 195, col: 26, offset: 7237},
																																			expr: &litMatcher{
																																				pos:        position{line: 195, col: 27, offset: 7238},
																																				val:        "=",
																																				ignoreCase: false,
																																			},
																																		},
																																		&notExpr{
																																			pos: position{line: 195, col: 31, offset: 7242},
																																			expr: &litMatcher{
																																				pos:        position{line: 195, col: 32, offset: 7243},
																																				val:        ",",
																																				ignoreCase: false,
																																			},
																																		},
																																		&notExpr{
																																			pos: position{line: 195, col: 36, offset: 7247},
																																			expr: &litMatcher{
																																				pos:        position{line: 195, col: 37, offset: 7248},
																																				val:        "]",
																																				ignoreCase: false,
																																			},
																																		},
																																		&anyMatcher{
																																			line: 195, col: 41, offset: 7252,
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																												&zeroOrOneExpr{
																													pos: position{line: 185, col: 67, offset: 6913},
																													expr: &litMatcher{
																														pos:        position{line: 185, col: 67, offset: 6913},
																														val:        ",",
																														ignoreCase: false,
																													},
																												},
																												&zeroOrMoreExpr{
																													pos: position{line: 185, col: 72, offset: 6918},
																													expr: &choiceExpr{
																														pos: position{line: 1024, col: 7, offset: 41621},
																														alternatives: []interface{}{
																															&litMatcher{
																																pos:        position{line: 1024, col: 7, offset: 41621},
																																val:        " ",
																																ignoreCase: false,
																															},
																															&actionExpr{
																																pos: position{line: 1024, col: 13, offset: 41627},
																																run: (*parser).callonParagraph478,
																																expr: &litMatcher{
																																	pos:        position{line: 1024, col: 13, offset: 41627},
																																	val:        "\t",
																																	ignoreCase: false,
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																									&actionExpr{
																										pos: position{line: 187, col: 5, offset: 7002},
																										run: (*parser).callonParagraph480,
																										expr: &seqExpr{
																											pos: position{line: 187, col: 5, offset: 7002},
																											exprs: []interface{}{
																												&labeledExpr{
																													pos:   position{line: 187, col: 5, offset: 7002},
																													label: "key",
																													expr: &actionExpr{
																														pos: position{line: 191, col: 17, offset: 7127},
																														run: (*parser).callonParagraph483,
																														expr: &seqExpr{
																															pos: position{line: 191, col: 17, offset: 7127},
																															exprs: []interface{}{
																																&notExpr{
																																	pos: position{line: 191, col: 17, offset: 7127},
																																	expr: &actionExpr{
																																		pos: position{line: 231, col: 14, offset: 8674},
																																		run: (*parser).callonParagraph486,
																																		expr: &litMatcher{
																																			pos:        position{line: 231, col: 14, offset: 8674},
																																			val:        "verse",
																																			ignoreCase: false,
																																		},
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 191, col: 28, offset: 7138},
																																	expr: &actionExpr{
																																		pos: position{line: 975, col: 16, offset: 40537},
																																		run: (*parser).callonParagraph489,
																																		expr: &litMatcher{
																																			pos:        position{line: 975, col: 16, offset: 40537},
																																			val:        "literal",
																																			ignoreCase: false,
																																		},
																																	},
																																},
																																&labeledExpr{
																																	pos:   position{line: 191, col: 41, offset: 7151},
																																	label: "key",
																																	expr: &oneOrMoreExpr{
																																		pos: position{line: 191, col: 45, offset: 7155},
																																		expr: &seqExpr{
																																			pos: position{line: 191, col: 46, offset: 7156},
																																			exprs: []interface{}{
																																				&notExpr{
																																					pos: position{line: 191, col: 46, offset: 7156},
																																					expr: &litMatcher{
																																						pos:        position{line: 191, col: 47, offset: 7157},
																																						val:        "=",
																																						ignoreCase: false,
																																					},
																																				},
																																				&notExpr{
																																					pos: position{line: 191, col: 51, offset: 7161},
																																					expr: &litMatcher{
																																						pos:        position{line: 191, col: 52, offset: 7162},
																																						val:        ",",
																																						ignoreCase: false,
																																					},
																																				},
																																				&notExpr{
																																					pos: position{line: 191, col: 56, offset: 7166},
																																					expr: &litMatcher{
																																						pos:        position{line: 191, col: 57, offset: 7167},
																																						val:        "]",
																																						ignoreCase: false,
																																					},
																																				},
																																				&anyMatcher{
																																					line: 191, col: 61, offset: 7171,
																																				},
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																												&zeroOrOneExpr{
																													pos: position{line: 187, col: 24, offset: 7021},
																													expr: &litMatcher{
																														pos:        position{line: 187, col: 24, offset: 7021},
																														val:        ",",
																														ignoreCase: false,
																													},
																												},
																												&zeroOrMoreExpr{
																													pos: position{line: 187, col: 29, offset: 7026},
																													expr: &choiceExpr{
																														pos: position{line: 1024, col: 7, offset: 41621},
																														alternatives: []interface{}{
																															&litMatcher{
																																pos:        position{line: 1024, col: 7, offset: 41621},
																																val:        " ",
																																ignoreCase: false,
																															},
																															&actionExpr{
																																pos: position{line: 1024, col: 13, offset: 41627},
																																run: (*parser).callonParagraph506,
																																expr: &litMatcher{
																																	pos:        position{line: 1024, col: 13, offset: 41627},
																																	val:        "\t",
																																	ignoreCase: false,
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																					&litMatcher{
																						pos:        position{line: 181, col: 59, offset: 6775},
																						val:        "]",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																},
															},
															&zeroOrMoreExpr{
																pos: position{line: 136, col: 131, offset: 5298},
																expr: &choiceExpr{
																	pos: position{line: 1024, col: 7, offset: 41621},
																	alternatives: []interface{}{
																		&litMatcher{
																			pos:        position{line: 1024, col: 7, offset: 41621},
																			val:        " ",
																			ignoreCase: false,
																		},
																		&actionExpr{
																			pos: position{line: 1024, col: 13, offset: 41627},
																			run: (*parser).callonParagraph512,
																			expr: &litMatcher{
																				pos:        position{line: 1024, col: 13, offset: 41627},
																				val:        "\t",
																				ignoreCase: false,
																			},
																		},
																	},
																},
															},
															&choiceExpr{
																pos: position{line: 1032, col: 8, offset: 41723},
																alternatives: []interface{}{
																	&litMatcher{
																		pos:        position{line: 1028, col: 12, offset: 41683},
																		val:        "\r\n",
																		ignoreCase: false,
																	},
																	&charClassMatcher{
																		pos:        position{line: 1028, col: 21, offset: 41692},
																		val:        "[\\r\\n]",
																		chars:      []rune{'\r', '\n'},
																		ignoreCase: false,
																		inverted:   false,
																	},
																	&notExpr{
																		pos: position{line: 1030, col: 8, offset: 41712},
																		expr: &anyMatcher{
																			line: 1030, col: 9, offset: 41713,
																		},
																	},
																},
															},
														},
													},
												},
											},
										},
									},
								},
								&notExpr{
									pos: position{line: 513, col: 38, offset: 19802},
									expr: &seqExpr{
										pos: position{line: 513, col: 40, offset: 19804},
										exprs: []interface{}{
											&oneOrMoreExpr{
												pos: position{line: 513, col: 40, offset: 19804},
												expr: &litMatcher{
													pos:        position{line: 513, col: 40, offset: 19804},
													val:        "=",
													ignoreCase: false,
												},
											},
											&oneOrMoreExpr{
												pos: position{line: 513, col: 45, offset: 19809},
												expr: &choiceExpr{
													pos: position{line: 1024, col: 7, offset: 41621},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1024, col: 7, offset: 41621},
															val:        " ",
															ignoreCase: false,
														},
														&actionExpr{
															pos: position{line: 1024, col: 13, offset: 41627},
															run: (*parser).callonParagraph526,
															expr: &litMatcher{
																pos:        position{line: 1024, col: 13, offset: 41627},
																val:        "\t",
																ignoreCase: false,
															},
														},
													},
												},
											},
											&notExpr{
												pos: position{line: 513, col: 49, offset: 19813},
												expr: &choiceExpr{
													pos: position{line: 1028, col: 12, offset: 41683},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1028, col: 12, offset: 41683},
															val:        "\r\n",
															ignoreCase: false,
														},
														&charClassMatcher{
															pos:        position{line: 1028, col: 21, offset: 41692},
															val:        "[\\r\\n]",
															chars:      []rune{'\r', '\n'},
															ignoreCase: false,
															inverted:   false,
														},
													},
												},
											},
										},
									},
								},
								&labeledExpr{
									pos:   position{line: 513, col: 59, offset: 19823},
									label: "t",
									expr: &choiceExpr{
										pos: position{line: 494, col: 19, offset: 19245},
										alternatives: []interface{}{
											&actionExpr{
												pos: position{line: 494, col: 19, offset: 19245},
												run: (*parser).callonParagraph534,
												expr: &litMatcher{
													pos:        position{line: 494, col: 19, offset: 19245},
													val:        "TIP",
													ignoreCase: false,
												},
											},
											&actionExpr{
												pos: position{line: 496, col: 5, offset: 19283},
												run: (*parser).callonParagraph536,
												expr: &litMatcher{
													pos:        position{line: 496, col: 5, offset: 19283},
													val:        "NOTE",
													ignoreCase: false,
												},
											},
											&actionExpr{
												pos: position{line: 498, col: 5, offset: 19323},
												run: (*parser).callonParagraph538,
												expr: &litMatcher{
													pos:        position{line: 498, col: 5, offset: 19323},
													val:        "IMPORTANT",
													ignoreCase: false,
												},
											},
											&actionExpr{
												pos: position{line: 500, col: 5, offset: 19373},
												run: (*parser).callonParagraph540,
												expr: &litMatcher{
													pos:        position{line: 500, col: 5, offset: 19373},
													val:        "WARNING",
													ignoreCase: false,
												},
											},
											&actionExpr{
												pos: position{line: 502, col: 5, offset: 19419},
												run: (*parser).callonParagraph542,
												expr: &litMatcher{
													pos:        position{line: 502, col: 5, offset: 19419},
													val:        "CAUTION",
													ignoreCase: false,
												},
											},
										},
									},
								},
								&litMatcher{
									pos:        position{line: 513, col: 78, offset: 19842},
									val:        ": ",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 513, col: 83, offset: 19847},
									label: "lines",
									expr: &oneOrMoreExpr{
										pos: position{line: 513, col: 89, offset: 19853},
										expr: &ruleRefExpr{
											pos:  position{line: 513, col: 90, offset: 19854},
											name: "InlineElements",
										},
									},
								},
							},
						},
					},
					&actionExpr{
						pos: position{line: 517, col: 5, offset: 20062},
						run: (*parser).callonParagraph548,
						expr: &seqExpr{
							pos: position{line: 517, col: 5, offset: 20062},
							exprs: []interface{}{
								&labeledExpr{
									pos:   position{line: 517, col: 5, offset: 20062},
									label: "attributes",
									expr: &zeroOrMoreExpr{
										pos: position{line: 517, col: 16, offset: 20073},
										expr: &choiceExpr{
											pos: position{line: 521, col: 23, offset: 20258},
											alternatives: []interface{}{
												&actionExpr{
													pos: position{line: 141, col: 24, offset: 5496},
													run: (*parser).callonParagraph553,
													expr: &seqExpr{
														pos: position{line: 141, col: 24, offset: 5496},
														exprs: []interface{}{
															&labeledExpr{
																pos:   position{line: 141, col: 24, offset: 5496},
																label: "attr",
																expr: &choiceExpr{
																	pos: position{line: 141, col: 30, offset: 5502},
																	alternatives: []interface{}{
																		&actionExpr{
																			pos: position{line: 203, col: 20, offset: 7415},
																			run: (*parser).callonParagraph557,
																			expr: &seqExpr{
																				pos: position{line: 203, col: 20, offset: 7415},
																				exprs: []interface{}{
																					&litMatcher{
																						pos:        position{line: 203, col: 20, offset: 7415},
																						val:        "[",
																						ignoreCase: false,
																					},
																					&labeledExpr{
																						pos:   position{line: 203, col: 24, offset: 7419},
																						label: "kind",
																						expr: &actionExpr{
																							pos: position{line: 215, col: 14, offset: 7925},
																							run: (*parser).callonParagraph561,
																							expr: &seqExpr{
																								pos: position{line: 215, col: 14, offset: 7925},
																								exprs: []interface{}{
																									&notExpr{
																										pos: position{line: 215, col: 14, offset: 7925},
																										expr: &actionExpr{
																											pos: position{line: 975, col: 16, offset: 40537},
																											run: (*parser).callonParagraph564,
																											expr: &litMatcher{
																												pos:        position{line: 975, col: 16, offset: 40537},
																												val:        "literal",
																												ignoreCase: false,
																											},
																										},
																									},
																									&notExpr{
																										pos: position{line: 215, col: 27, offset: 7938},
																										expr: &actionExpr{
																											pos: position{line: 231, col: 14, offset: 8674},
																											run: (*parser).callonParagraph567,
																											expr: &litMatcher{
																												pos:        position{line: 231, col: 14, offset: 8674},
																												val:        "verse",
																												ignoreCase: false,
																											},
																										},
																									},
																									&zeroOrMoreExpr{
																										pos: position{line: 215, col: 38, offset: 7949},
																										expr: &seqExpr{
																											pos: position{line: 215, col: 39, offset: 7950},
																											exprs: []interface{}{
																												&notExpr{
																													pos: position{line: 215, col: 39, offset: 7950},
																													expr: &choiceExpr{
																														pos: position{line: 1032, col: 8, offset: 41723},
																														alternatives: []interface{}{
																															&litMatcher{
																																pos:        position{line: 1028, col: 12, offset: 41683},
																																val:        "\r\n",
																																ignoreCase: false,
																															},
																															&charClassMatcher{
																																pos:        position{line: 1028, col: 21, offset: 41692},
																																val:        "[\\r\\n]",
																																chars:      []rune{'\r', '\n'},
																																ignoreCase: false,
																																inverted:   false,
																															},
																															&notExpr{
																																pos: position{line: 1030, col: 8, offset: 41712},
																																expr: &anyMatcher{
																																	line: 1030, col: 9, offset: 41713,
																																},
																															},
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 215, col: 44, offset: 7955},
																													expr: &choiceExpr{
																														pos: position{line: 1024, col: 7, offset: 41621},
																														alternatives: []interface{}{
																															&litMatcher{
																																pos:        position{line: 1024, col: 7, offset: 41621},
																																val:        " ",
																																ignoreCase: false,
																															},
																															&actionExpr{
																																pos: position{line: 1024, col: 13, offset: 41627},
																																run: (*parser).callonParagraph580,
																																expr: &litMatcher{
																																	pos:        position{line: 1024, col: 13, offset: 41627},
																																	val:        "\t",
																																	ignoreCase: false,
																																},
																															},
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 215, col: 48, offset: 7959},
																													expr: &litMatcher{
																														pos:        position{line: 215, col: 49, offset: 7960},
																														val:        ",",
																														ignoreCase: false,
																													},
																												},
																												&notExpr{
																													pos: position{line: 215, col: 53, offset: 7964},
																													expr: &litMatcher{
																														pos:        position{line: 215, col: 54, offset: 7965},
																														val:        "]",
																														ignoreCase: false,
																													},
																												},
																												&notExpr{
																													pos: position{line: 215, col: 58, offset: 7969},
																													expr: &litMatcher{
																														pos:        position{line: 215, col: 59, offset: 7970},
																														val:        "#",
																														ignoreCase: false,
																													},
																												},
																												&notExpr{
																													pos: position{line: 215, col: 63, offset: 7974},
																													expr: &litMatcher{
																														pos:        position{line: 215, col: 64, offset: 7975},
																														val:        "=",
																														ignoreCase: false,
																													},
																												},
																												&notExpr{
																													pos: position{line: 215, col: 68, offset: 7979},
																													expr: &choiceExpr{
																														pos: position{line: 494, col: 19, offset: 19245},
																														alternatives: []interface{}{
																															&actionExpr{
																																pos: position{line: 494, col: 19, offset: 19245},
																																run: (*parser).callonParagraph592,
																																expr: &litMatcher{
																																	pos:        position{line: 494, col: 19, offset: 19245},
																																	val:        "TIP",
																																	ignoreCase: false,
																																},
																															},
																															&actionExpr{
																																pos: position{line: 496, col: 5, offset: 19283},
																																run: (*parser).callonParagraph594,
																																expr: &litMatcher{
																																	pos:        position{line: 496, col: 5, offset: 19283},
																																	val:        "NOTE",
																																	ignoreCase: false,
																																},
																															},
																															&actionExpr{
																																pos: position{line: 498, col: 5, offset: 19323},
																																run: (*parser).callonParagraph596,
																																expr: &litMatcher{
																																	pos:        position{line: 498, col: 5, offset: 19323},
																																	val:        "IMPORTANT",
																																	ignoreCase: false,
																																},
																															},
																															&actionExpr{
																																pos: position{line: 500, col: 5, offset: 19373},
																																run: (*parser).callonParagraph598,
																																expr: &litMatcher{
																																	pos:        position{line: 500, col: 5, offset: 19373},
																																	val:        "WARNING",
																																	ignoreCase: false,
																																},
																															},
																															&actionExpr{
																																pos: position{line: 502, col: 5, offset: 19419},
																																run: (*parser).callonParagraph600,
																																expr: &litMatcher{
																																	pos:        position{line: 502, col: 5, offset: 19419},
																																	val:        "CAUTION",
																																	ignoreCase: false,
																																},
																															},
																														},
																													},
																												},
																												&anyMatcher{
																													line: 215, col: 84, offset: 7995,
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																					&zeroOrMoreExpr{
																						pos: position{line: 203, col: 41, offset: 7436},
																						expr: &choiceExpr{
																							pos: position{line: 1024, col: 7, offset: 41621},
																							alternatives: []interface{}{
																								&litMatcher{
																									pos:        position{line: 1024, col: 7, offset: 41621},
																									val:        " ",
																									ignoreCase: false,
																								},
																								&actionExpr{
																									pos: position{line: 1024, col: 13, offset: 41627},
																									run: (*parser).callonParagraph606,
																									expr: &litMatcher{
																										pos:        position{line: 1024, col: 13, offset: 41627},
																										val:        "\t",
																										ignoreCase: false,
																									},
																								},
																							},
																						},
																					},
																					&litMatcher{
																						pos:        position{line: 203, col: 45, offset: 7440},
																						val:        ",",
																						ignoreCase: false,
																					},
																					&labeledExpr{
																						pos:   position{line: 203, col: 49, offset: 7444},
																						label: "author",
																						expr: &actionExpr{
																							pos: position{line: 235, col: 16, offset: 8733},
																							run: (*parser).callonParagraph610,
																							expr: &zeroOrMoreExpr{
																								pos: position{line: 235, col: 16, offset: 8733},
																								expr: &seqExpr{
																									pos: position{line: 235, col: 17, offset: 8734},
																									exprs: []interface{}{
																										&notExpr{
																											pos: position{line: 235, col: 17, offset: 8734},
																											expr: &choiceExpr{
																												pos: position{line: 1032, col: 8, offset: 41723},
																												alternatives: []interface{}{
																													&litMatcher{
																														pos:        position{line: 1028, col: 12, offset: 41683},
																														val:        "\r\n",
																														ignoreCase: false,
																													},
																													&charClassMatcher{
																														pos:        position{line: 1028, col: 21, offset: 41692},
																														val:        "[\\r\\n]",
																														chars:      []rune{'\r', '\n'},
																														ignoreCase: false,
																														inverted:   false,
																													},
																													&notExpr{
																														pos: position{line: 1030, col: 8, offset: 41712},
																														expr: &anyMatcher{
																															line: 1030, col: 9, offset: 41713,
																														},
																													},
																												},
																											},
																										},
																										&notExpr{
																											pos: position{line: 235, col: 22, offset: 8739},
																											expr: &litMatcher{
																												pos:        position{line: 235, col: 23, offset: 8740},
																												val:        ",",
																												ignoreCase: false,
																											},
																										},
																										&notExpr{
																											pos: position{line: 235, col: 27, offset: 8744},
																											expr: &litMatcher{
																												pos:        position{line: 235, col: 28, offset: 8745},
																												val:        "]",
																												ignoreCase: false,
																											},
																										},
																										&anyMatcher{
																											line: 235, col: 32, offset: 8749,
																										},
																									},
																								},
																							},
																						},
																					},
																					&litMatcher{
																						pos:        position{line: 203, col: 70, offset: 7465},
																						val:        ",",
																						ignoreCase: false,
																					},
																					&labeledExpr{
																						pos:   position{line: 203, col: 74, offset: 7469},
																						label: "title",
																						expr: &actionExpr{
																							pos: position{line: 239, col: 15, offset: 8803},
																							run: (*parser).callonParagraph626,
																							expr: &zeroOrMoreExpr{
																								pos: position{line: 239, col: 15, offset: 8803},
																								expr: &seqExpr{
																									pos: position{line: 239, col: 16, offset: 8804},
																									exprs: []interface{}{
																										&notExpr{
																											pos: position{line: 239, col: 16, offset: 8804},
																											expr: &choiceExpr{
																												pos: position{line: 1032, col: 8, offset: 41723},
																												alternatives: []interface{}{
																													&litMatcher{
																														pos:        position{line: 1028, col: 12, offset: 41683},
																														val:        "\r\n",
																														ignoreCase: false,
																													},
																													&charClassMatcher{
																														pos:        position{line: 1028, col: 21, offset: 41692},
																														val:        "[\\r\\n]",
																														chars:      []rune{'\r', '\n'},
																														ignoreCase: false,
																														inverted:   false,
																													},
																													&notExpr{
																														pos: position{line: 1030, col: 8, offset: 41712},
																														expr: &anyMatcher{
																															line: 1030, col: 9, offset: 41713,
																														},
																													},
																												},
																											},
																										},
																										&notExpr{
																											pos: position{line: 239, col: 21, offset: 8809},
																											expr: &litMatcher{
																												pos:        position{line: 239, col: 22, offset: 8810},
																												val:        ",",
																												ignoreCase: false,
																											},
																										},
																										&notExpr{
																											pos: position{line: 239, col: 26, offset: 8814},
																											expr: &litMatcher{
																												pos:        position{line: 239, col: 27, offset: 8815},
																												val:        "]",
																												ignoreCase: false,
																											},
																										},
																										&anyMatcher{
																											line: 239, col: 31, offset: 8819,
																										},
																									},
																								},
																							},
																						},
																					},
																					&litMatcher{
																						pos:        position{line: 203, col: 93, offset: 7488},
																						val:        "]",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																		&actionExpr{
																			pos: position{line: 207, col: 5, offset: 7631},
																			run: (*parser).callonParagraph641,
																			expr: &seqExpr{
																				pos: position{line: 207, col: 5, offset: 7631},
																				exprs: []interface{}{
																					&litMatcher{
																						pos:        position{line: 207, col: 5, offset: 7631},
																						val:        "[",
																						ignoreCase: false,
																					},
																					&labeledExpr{
																						pos:   position{line: 207, col: 9, offset: 7635},
																						label: "kind",
																						expr: &actionExpr{
																							pos: position{line: 215, col: 14, offset: 7925},
																							run: (*parser).callonParagraph645,
																							expr: &seqExpr{
																								pos: position{line: 215, col: 14, offset: 7925},
																								exprs: []interface{}{
																									&notExpr{
																										pos: position{line: 215, col: 14, offset: 7925},
																										expr: &actionExpr{
																											pos: position{line: 975, col: 16, offset: 40537},
																											run: (*parser).callonParagraph648,
																											expr: &litMatcher{
																												pos:        position{line: 975, col: 16, offset: 40537},
																												val:        "literal",
																												ignoreCase: false,
																											},
																										},
																									},
																									&notExpr{
																										pos: position{line: 215, col: 27, offset: 7938},
																										expr: &actionExpr{
																											pos: position{line: 231, col: 14, offset: 8674},
																											run: (*parser).callonParagraph651,
																											expr: &litMatcher{
																												pos:        position{line: 231, col: 14, offset: 8674},
																												val:        "verse",
																												ignoreCase: false,
																											},
																										},
																									},
																									&zeroOrMoreExpr{
																										pos: position{line: 215, col: 38, offset: 7949},
																										expr: &seqExpr{
																											pos: position{line: 215, col: 39, offset: 7950},
																											exprs: []interface{}{
																												&notExpr{
																													pos: position{line: 215, col: 39, offset: 7950},
																													expr: &choiceExpr{
																														pos: position{line: 1032, col: 8, offset: 41723},
																														alternatives: []interface{}{
																															&litMatcher{
																																pos:        position{line: 1028, col: 12, offset: 41683},
																																val:        "\r\n",
																																ignoreCase: false,
																															},
																															&charClassMatcher{
																																pos:        position{line: 1028, col: 21, offset: 41692},
																																val:        "[\\r\\n]",
																																chars:      []rune{'\r', '\n'},
																																ignoreCase: false,
																																inverted:   false,
																															},
																															&notExpr{
																																pos: position{line: 1030, col: 8, offset: 41712},
																																expr: &anyMatcher{
																																	line: 1030, col: 9, offset: 41713,
																																},
																															},
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 215, col: 44, offset: 7955},
																													expr: &choiceExpr{
																														pos: position{line: 1024, col: 7, offset: 41621},
																														alternatives: []interface{}{
																															&litMatcher{
																																pos:        position{line: 1024, col: 7, offset: 41621},
																																val:        " ",
																																ignoreCase: false,
																															},
																															&actionExpr{
																																pos: position{line: 1024, col: 13, offset: 41627},
																																run: (*parser).callonParagraph664,
																																expr: &litMatcher{
																																	pos:        position{line: 1024, col: 13, offset: 41627},
																																	val:        "\t",
																																	ignoreCase: false,
																																},
																															},
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 215, col: 48, offset: 7959},
																													expr: &litMatcher{
																														pos:        position{line: 215, col: 49, offset: 7960},
																														val:        ",",
																														ignoreCase: false,
																													},
																												},
																												&notExpr{
																													pos: position{line: 215, col: 53, offset: 7964},
																													expr: &litMatcher{
																														pos:        position{line: 215, col: 54, offset: 7965},
																														val:        "]",
																														ignoreCase: false,
																													},
																												},
																												&notExpr{
																													pos: position{line: 215, col: 58, offset: 7969},
																													expr: &litMatcher{
																														pos:        position{line: 215, col: 59, offset: 7970},
																														val:        "#",
																														ignoreCase: false,
																													},
																												},
																												&notExpr{
																													pos: position{line: 215, col: 63, offset: 7974},
																													expr: &litMatcher{
																														pos:        position{line: 215, col: 64, offset: 7975},
																														val:        "=",
																														ignoreCase: false,
																													},
																												},
																												&notExpr{
																													pos: position{line: 215, col: 68, offset: 7979},
																													expr: &choiceExpr{
																														pos: position{line: 494, col: 19, offset: 19245},
																														alternatives: []interface{}{
																															&actionExpr{
																																pos: position{line: 494, col: 19, offset: 19245},
																																run: (*parser).callonParagraph676,
																																expr: &litMatcher{
																																	pos:        position{line: 494, col: 19, offset: 19245},
																																	val:        "TIP",
																																	ignoreCase: false,
																																},
																															},
																															&actionExpr{
																																pos: position{line: 496, col: 5, offset: 19283},
																																run: (*parser).callonParagraph678,
																																expr: &litMatcher{
																																	pos:        position{line: 496, col: 5, offset: 19283},
																																	val:        "NOTE",
																																	ignoreCase: false,
																																},
																															},
																															&actionExpr{
																																pos: position{line: 498, col: 5, offset: 19323},
																																run: (*parser).callonParagraph680,
																																expr: &litMatcher{
																																	pos:        position{line: 498, col: 5, offset: 19323},
																																	val:        "IMPORTANT",
																																	ignoreCase: false,
																																},
																															},
																															&actionExpr{
																																pos: position{line: 500, col: 5, offset: 19373},
																																run: (*parser).callonParagraph682,
																																expr: &litMatcher{
																																	pos:        position{line: 500, col: 5, offset: 19373},
																																	val:        "WARNING",
																																	ignoreCase: false,
																																},
																															},
																															&actionExpr{
																																pos: position{line: 502, col: 5, offset: 19419},
																																run: (*parser).callonParagraph684,
																																expr: &litMatcher{
																																	pos:        position{line: 502, col: 5, offset: 19419},
																																	val:        "CAUTION",
																																	ignoreCase: false,
																																},
																															},
																														},
																													},
																												},
																												&anyMatcher{
																													line: 215, col: 84, offset: 7995,
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																					&zeroOrMoreExpr{
																						pos: position{line: 207, col: 26, offset: 7652},
																						expr: &choiceExpr{
																							pos: position{line: 1024, col: 7, offset: 41621},
																							alternatives: []interface{}{
																								&litMatcher{
																									pos:        position{line: 1024, col: 7, offset: 41621},
																									val:        " ",
																									ignoreCase: false,
																								},
																								&actionExpr{
																									pos: position{line: 1024, col: 13, offset: 41627},
																									run: (*parser).callonParagraph690,
																									expr: &litMatcher{
																										pos:        position{line: 1024, col: 13, offset: 41627},
																										val:        "\t",
																										ignoreCase: false,
																									},
																								},
																							},
																						},
																					},
																					&litMatcher{
																						pos:        position{line: 207, col: 30, offset: 7656},
																						val:        ",",
																						ignoreCase: false,
																					},
																					&labeledExpr{
																						pos:   position{line: 207, col: 34, offset: 7660},
																						label: "author",
																						expr: &actionExpr{
																							pos: position{line: 235, col: 16, offset: 8733},
																							run: (*parser).callonParagraph694,
																							expr: &zeroOrMoreExpr{
																								pos: position{line: 235, col: 16, offset: 8733},
																								expr: &seqExpr{
																									pos: position{line: 235, col: 17, offset: 8734},
																									exprs: []interface{}{
																										&notExpr{
																											pos: position{line: 235, col: 17, offset: 8734},
																											expr: &choiceExpr{
																												pos: position{line: 1032, col: 8, offset: 41723},
																												alternatives: []interface{}{
																													&litMatcher{
																														pos:        position{line: 1028, col: 12, offset: 41683},
																														val:        "\r\n",
																														ignoreCase: false,
																													},
																													&charClassMatcher{
																														pos:        position{line: 1028, col: 21, offset: 41692},
																														val:        "[\\r\\n]",
																														chars:      []rune{'\r', '\n'},
																														ignoreCase: false,
																														inverted:   false,
																													},
																													&notExpr{
																														pos: position{line: 1030, col: 8, offset: 41712},
																														expr: &anyMatcher{
																															line: 1030, col: 9, offset: 41713,
																														},
																													},
																												},
																											},
																										},
																										&notExpr{
																											pos: position{line: 235, col: 22, offset: 8739},
																											expr: &litMatcher{
																												pos:        position{line: 235, col: 23, offset: 8740},
																												val:        ",",
																												ignoreCase: false,
																											},
																										},
																										&notExpr{
																											pos: position{line: 235, col: 27, offset: 8744},
																											expr: &litMatcher{
																												pos:        position{line: 235, col: 28, offset: 8745},
																												val:        "]",
																												ignoreCase: false,
																											},
																										},
																										&anyMatcher{
																											line: 235, col: 32, offset: 8749,
																										},
																									},
																								},
																							},
																						},
																					},
																					&litMatcher{
																						pos:        position{line: 207, col: 55, offset: 7681},
																						val:        "]",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																		&actionExpr{
																			pos: position{line: 211, col: 5, offset: 7812},
																			run: (*parser).callonParagraph709,
																			expr: &seqExpr{
																				pos: position{line: 211, col: 5, offset: 7812},
																				exprs: []interface{}{
																					&litMatcher{
																						pos:        position{line: 211, col: 5, offset: 7812},
																						val:        "[",
																						ignoreCase: false,
																					},
																					&labeledExpr{
																						pos:   position{line: 211, col: 9, offset: 7816},
																						label: "kind",
																						expr: &actionExpr{
																							pos: position{line: 215, col: 14, offset: 7925},
																							run: (*parser).callonParagraph713,
																							expr: &seqExpr{
																								pos: position{line: 215, col: 14, offset: 7925},
																								exprs: []interface{}{
																									&notExpr{
																										pos: position{line: 215, col: 14, offset: 7925},
																										expr: &actionExpr{
																											pos: position{line: 975, col: 16, offset: 40537},
																											run: (*parser).callonParagraph716,
																											expr: &litMatcher{
																												pos:        position{line: 975, col: 16, offset: 40537},
																												val:        "literal",
																												ignoreCase: false,
																											},
																										},
																									},
																									&notExpr{
																										pos: position{line: 215, col: 27, offset: 7938},
																										expr: &actionExpr{
																											pos: position{line: 231, col: 14, offset: 8674},
																											run: (*parser).callonParagraph719,
																											expr: &litMatcher{
																												pos:        position{line: 231, col: 14, offset: 8674},
																												val:        "verse",
																												ignoreCase: false,
																											},
																										},
																									},
																									&zeroOrMoreExpr{
																										pos: position{line: 215, col: 38, offset: 7949},
																										expr: &seqExpr{
																											pos: position{line: 215, col: 39, offset: 7950},
																											exprs: []interface{}{
																												&notExpr{
																													pos: position{line: 215, col: 39, offset: 7950},
																													expr: &choiceExpr{
																														pos: position{line: 1032, col: 8, offset: 41723},
																														alternatives: []interface{}{
																															&litMatcher{
																																pos:        position{line: 1028, col: 12, offset: 41683},
																																val:        "\r\n",
																																ignoreCase: false,
																															},
																															&charClassMatcher{
																																pos:        position{line: 1028, col: 21, offset: 41692},
																																val:        "[\\r\\n]",
																																chars:      []rune{'\r', '\n'},
																																ignoreCase: false,
																																inverted:   false,
																															},
																															&notExpr{
																																pos: position{line: 1030, col: 8, offset: 41712},
																																expr: &anyMatcher{
																																	line: 1030, col: 9, offset: 41713,
																																},
																															},
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 215, col: 44, offset: 7955},
																													expr: &choiceExpr{
																														pos: position{line: 1024, col: 7, offset: 41621},
																														alternatives: []interface{}{
																															&litMatcher{
																																pos:        position{line: 1024, col: 7, offset: 41621},
																																val:        " ",
																																ignoreCase: false,
																															},
																															&actionExpr{
																																pos: position{line: 1024, col: 13, offset: 41627},
																																run: (*parser).callonParagraph732,
																																expr: &litMatcher{
																																	pos:        position{line: 1024, col: 13, offset: 41627},
																																	val:        "\t",
																																	ignoreCase: false,
																																},
																															},
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 215, col: 48, offset: 7959},
																													expr: &litMatcher{
																														pos:        position{line: 215, col: 49, offset: 7960},
																														val:        ",",
																														ignoreCase: false,
																													},
																												},
																												&notExpr{
																													pos: position{line: 215, col: 53, offset: 7964},
																													expr: &litMatcher{
																														pos:        position{line: 215, col: 54, offset: 7965},
																														val:        "]",
																														ignoreCase: false,
																													},
																												},
																												&notExpr{
																													pos: position{line: 215, col: 58, offset: 7969},
																													expr: &litMatcher{
																														pos:        position{line: 215, col: 59, offset: 7970},
																														val:        "#",
																														ignoreCase: false,
																													},
																												},
																												&notExpr{
																													pos: position{line: 215, col: 63, offset: 7974},
																													expr: &litMatcher{
																														pos:        position{line: 215, col: 64, offset: 7975},
																														val:        "=",
																														ignoreCase: false,
																													},
																												},
																												&notExpr{
																													pos: position{line: 215, col: 68, offset: 7979},
																													expr: &choiceExpr{
																														pos: position{line: 494, col: 19, offset: 19245},
																														alternatives: []interface{}{
																															&actionExpr{
																																pos: position{line: 494, col: 19, offset: 19245},
																																run: (*parser).callonParagraph744,
																																expr: &litMatcher{
																																	pos:        position{line: 494, col: 19, offset: 19245},
																																	val:        "TIP",
																																	ignoreCase: false,
																																},
																															},
																															&actionExpr{
																																pos: position{line: 496, col: 5, offset: 19283},
																																run: (*parser).callonParagraph746,
																																expr: &litMatcher{
																																	pos:        position{line: 496, col: 5, offset: 19283},
																																	val:        "NOTE",
																																	ignoreCase: false,
																																},
																															},
																															&actionExpr{
																																pos: position{line: 498, col: 5, offset: 19323},
																																run: (*parser).callonParagraph748,
																																expr: &litMatcher{
																																	pos:        position{line: 498, col: 5, offset: 19323},
																																	val:        "IMPORTANT",
																																	ignoreCase: false,
																																},
																															},
																															&actionExpr{
																																pos: position{line: 500, col: 5, offset: 19373},
																																run: (*parser).callonParagraph750,
																																expr: &litMatcher{
																																	pos:        position{line: 500, col: 5, offset: 19373},
																																	val:        "WARNING",
																																	ignoreCase: false,
																																},
																															},
																															&actionExpr{
																																pos: position{line: 502, col: 5, offset: 19419},
																																run: (*parser).callonParagraph752,
																																expr: &litMatcher{
																																	pos:        position{line: 502, col: 5, offset: 19419},
																																	val:        "CAUTION",
																																	ignoreCase: false,
																																},
																															},
																														},
																													},
																												},
																												&anyMatcher{
																													line: 215, col: 84, offset: 7995,
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																					&zeroOrMoreExpr{
																						pos: position{line: 211, col: 26, offset: 7833},
																						expr: &choiceExpr{
																							pos: position{line: 1024, col: 7, offset: 41621},
																							alternatives: []interface{}{
																								&litMatcher{
																									pos:        position{line: 1024, col: 7, offset: 41621},
																									val:        " ",
																									ignoreCase: false,
																								},
																								&actionExpr{
																									pos: position{line: 1024, col: 13, offset: 41627},
																									run: (*parser).callonParagraph758,
																									expr: &litMatcher{
																										pos:        position{line: 1024, col: 13, offset: 41627},
																										val:        "\t",
																										ignoreCase: false,
																									},
																								},
																							},
																						},
																					},
																					&litMatcher{
																						pos:        position{line: 211, col: 30, offset: 7837},
																						val:        "]",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																		&actionExpr{
																			pos: position{line: 219, col: 20, offset: 8164},
																			run: (*parser).callonParagraph761,
																			expr: &seqExpr{
																				pos: position{line: 219, col: 20, offset: 8164},
																				exprs: []interface{}{
																					&litMatcher{
																						pos:        position{line: 219, col: 20, offset: 8164},
																						val:        "[",
																						ignoreCase: false,
																					},
																					&labeledExpr{
																						pos:   position{line: 219, col: 24, offset: 8168},
																						label: "kind",
																						expr: &actionExpr{
																							pos: position{line: 231, col: 14, offset: 8674},
																							run: (*parser).callonParagraph765,
																							expr: &litMatcher{
																								pos:        position{line: 231, col: 14, offset: 8674},
																								val:        "verse",
																								ignoreCase: false,
																							},
																						},
																					},
																					&zeroOrMoreExpr{
																						pos: position{line: 219, col: 41, offset: 8185},
																						expr: &choiceExpr{
																							pos: position{line: 1024, col: 7, offset: 41621},
																							alternatives: []interface{}{
																								&litMatcher{
																									pos:        position{line: 1024, col: 7, offset: 41621},
																									val:        " ",
																									ignoreCase: false,
																								},
																								&actionExpr{
																									pos: position{line: 1024, col: 13, offset: 41627},
																									run: (*parser).callonParagraph770,
																									expr: &litMatcher{
																										pos:        position{line: 1024, col: 13, offset: 41627},
																										val:        "\t",
																										ignoreCase: false,
																									},
																								},
																							},
																						},
																					},
																					&litMatcher{
																						pos:        position{line: 219, col: 45, offset: 8189},
																						val:        ",",
																						ignoreCase: false,
																					},
																					&labeledExpr{
																						pos:   position{line: 219, col: 49, offset: 8193},
																						label: "author",
																						expr: &actionExpr{
																							pos: position{line: 235, col: 16, offset: 8733},
																							run: (*parser).callonParagraph774,
																							expr: &zeroOrMoreExpr{
																								pos: position{line: 235, col: 16, offset: 8733},
																								expr: &seqExpr{
																									pos: position{line: 235, col: 17, offset: 8734},
																									exprs: []interface{}{
																										&notExpr{
																											pos: position{line: 235, col: 17, offset: 8734},
																											expr: &choiceExpr{
																												pos: position{line: 1032, col: 8, offset: 41723},
																												alternatives: []interface{}{
																													&litMatcher{
																														pos:        position{line: 1028, col: 12, offset: 41683},
																														val:        "\r\n",
																														ignoreCase: false,
																													},
																													&charClassMatcher{
																														pos:        position{line: 1028, col: 21, offset: 41692},
																														val:        "[\\r\\n]",
																														chars:      []rune{'\r', '\n'},
																														ignoreCase: false,
																														inverted:   false,
																													},
																													&notExpr{
																														pos: position{line: 1030, col: 8, offset: 41712},
																														expr: &anyMatcher{
																															line: 1030, col: 9, offset: 41713,
																														},
																													},
																												},
																											},
																										},
																										&notExpr{
																											pos: position{line: 235, col: 22, offset: 8739},
																											expr: &litMatcher{
																												pos:        position{line: 235, col: 23, offset: 8740},
																												val:        ",",
																												ignoreCase: false,
																											},
																										},
																										&notExpr{
																											pos: position{line: 235, col: 27, offset: 8744},
																											expr: &litMatcher{
																												pos:        position{line: 235, col: 28, offset: 8745},
																												val:        "]",
																												ignoreCase: false,
																											},
																										},
																										&anyMatcher{
																											line: 235, col: 32, offset: 8749,
																										},
																									},
																								},
																							},
																						},
																					},
																					&litMatcher{
																						pos:        position{line: 219, col: 70, offset: 8214},
																						val:        ",",
																						ignoreCase: false,
																					},
																					&labeledExpr{
																						pos:   position{line: 219, col: 74, offset: 8218},
																						label: "title",
																						expr: &actionExpr{
																							pos: position{line: 239, col: 15, offset: 8803},
																							run: (*parser).callonParagraph790,
																							expr: &zeroOrMoreExpr{
																								pos: position{line: 239, col: 15, offset: 8803},
																								expr: &seqExpr{
																									pos: position{line: 239, col: 16, offset: 8804},
																									exprs: []interface{}{
																										&notExpr{
																											pos: position{line: 239, col: 16, offset: 8804},
																											expr: &choiceExpr{
																												pos: position{line: 1032, col: 8, offset: 41723},
																												alternatives: []interface{}{
																													&litMatcher{
																														pos:        position{line: 1028, col: 12, offset: 41683},
																														val:        "\r\n",
																														ignoreCase: false,
																													},
																													&charClassMatcher{
																														pos:        position{line: 1028, col: 21, offset: 41692},
																														val:        "[\\r\\n]",
																														chars:      []rune{'\r', '\n'},
																														ignoreCase: false,
																														inverted:   false,
																													},
																													&notExpr{
																														pos: position{line: 1030, col: 8, offset: 41712},
																														expr: &anyMatcher{
																															line: 1030, col: 9, offset: 41713,
																														},
																													},
																												},
																											},
																										},
																										&notExpr{
																											pos: position{line: 239, col: 21, offset: 8809},
																											expr: &litMatcher{
																												pos:        position{line: 239, col: 22, offset: 8810},
																												val:        ",",
																												ignoreCase: false,
																											},
																										},
																										&notExpr{
																											pos: position{line: 239, col: 26, offset: 8814},
																											expr: &litMatcher{
																												pos:        position{line: 239, col: 27, offset: 8815},
																												val:        "]",
																												ignoreCase: false,
																											},
																										},
																										&anyMatcher{
																											line: 239, col: 31, offset: 8819,
																										},
																									},
																								},
																							},
																						},
																					},
																					&litMatcher{
																						pos:        position{line: 219, col: 93, offset: 8237},
																						val:        "]",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																		&actionExpr{
																			pos: position{line: 223, col: 5, offset: 8380},
																			run: (*parser).callonParagraph805,
																			expr: &seqExpr{
																				pos: position{line: 223, col: 5, offset: 8380},
																				exprs: []interface{}{
																					&litMatcher{
																						pos:        position{line: 223, col: 5, offset: 8380},
																						val:        "[",
																						ignoreCase: false,
																					},
																					&labeledExpr{
																						pos:   position{line: 223, col: 9, offset: 8384},
																						label: "kind",
																						expr: &actionExpr{
																							pos: position{line: 231, col: 14, offset: 8674},
																							run: (*parser).callonParagraph809,
																							expr: &litMatcher{
																								pos:        position{line: 231, col: 14, offset: 8674},
																								val:        "verse",
																								ignoreCase: false,
																							},
																						},
																					},
																					&zeroOrMoreExpr{
																						pos: position{line: 223, col: 26, offset: 8401},
																						expr: &choiceExpr{
																							pos: position{line: 1024, col: 7, offset: 41621},
																							alternatives: []interface{}{
																								&litMatcher{
																									pos:        position{line: 1024, col: 7, offset: 41621},
																									val:        " ",
																									ignoreCase: false,
																								},
																								&actionExpr{
																									pos: position{line: 1024, col: 13, offset: 41627},
																									run: (*parser).callonParagraph814,
																									expr: &litMatcher{
																										pos:        position{line: 1024, col: 13, offset: 41627},
																										val:        "\t",
																										ignoreCase: false,
																									},
																								},
																							},
																						},
																					},
																					&litMatcher{
																						pos:        position{line: 223, col: 30, offset: 8405},
																						val:        ",",
																						ignoreCase: false,
																					},
																					&labeledExpr{
																						pos:   position{line: 223, col: 34, offset: 8409},
																						label: "author",
																						expr: &actionExpr{
																							pos: position{line: 235, col: 16, offset: 8733},
																							run: (*parser).callonParagraph818,
																							expr: &zeroOrMoreExpr{
																								pos: position{line: 235, col: 16, offset: 8733},
																								expr: &seqExpr{
																									pos: position{line: 235, col: 17, offset: 8734},
																									exprs: []interface{}{
																										&notExpr{
																											pos: position{line: 235, col: 17, offset: 8734},
																											expr: &choiceExpr{
																												pos: position{line: 1032, col: 8, offset: 41723},
																												alternatives: []interface{}{
																													&litMatcher{
																														pos:        position{line: 1028, col: 12, offset: 41683},
																														val:        "\r\n",
																														ignoreCase: false,
																													},
																													&charClassMatcher{
																														pos:        position{line: 1028, col: 21, offset: 41692},
																														val:        "[\\r\\n]",
																														chars:      []rune{'\r', '\n'},
																														ignoreCase: false,
																														inverted:   false,
																													},
																													&notExpr{
																														pos: position{line: 1030, col: 8, offset: 41712},
																														expr: &anyMatcher{
																															line: 1030, col: 9, offset: 41713,
																														},
																													},
																												},
																											},
																										},
																										&notExpr{
																											pos: position{line: 235, col: 22, offset: 8739},
																											expr: &litMatcher{
																												pos:        position{line: 235, col: 23, offset: 8740},
																												val:        ",",
																												ignoreCase: false,
																											},
																										},
																										&notExpr{
																											pos: position{line: 235, col: 27, offset: 8744},
																											expr: &litMatcher{
																												pos:        position{line: 235, col: 28, offset: 8745},
																												val:        "]",
																												ignoreCase: false,
																											},
																										},
																										&anyMatcher{
																											line: 235, col: 32, offset: 8749,
																										},
																									},
																								},
																							},
																						},
																					},
																					&litMatcher{
																						pos:        position{line: 223, col: 55, offset: 8430},
																						val:        "]",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																		&actionExpr{
																			pos: position{line: 227, col: 5, offset: 8561},
																			run: (*parser).callonParagraph833,
																			expr: &seqExpr{
																				pos: position{line: 227, col: 5, offset: 8561},
																				exprs: []interface{}{
																					&litMatcher{
																						pos:        position{line: 227, col: 5, offset: 8561},
																						val:        "[",
																						ignoreCase: false,
																					},
																					&labeledExpr{
																						pos:   position{line: 227, col: 9, offset: 8565},
																						label: "kind",
																						expr: &actionExpr{
																							pos: position{line: 231, col: 14, offset: 8674},
																							run: (*parser).callonParagraph837,
																							expr: &litMatcher{
																								pos:        position{line: 231, col: 14, offset: 8674},
																								val:        "verse",
																								ignoreCase: false,
																							},
																						},
																					},
																					&zeroOrMoreExpr{
																						pos: position{line: 227, col: 26, offset: 8582},
																						expr: &choiceExpr{
																							pos: position{line: 1024, col: 7, offset: 41621},
																							alternatives: []interface{}{
																								&litMatcher{
																									pos:        position{line: 1024, col: 7, offset: 41621},
																									val:        " ",
																									ignoreCase: false,
																								},
																								&actionExpr{
																									pos: position{line: 1024, col: 13, offset: 41627},
																									run: (*parser).callonParagraph842,
																									expr: &litMatcher{
																										pos:        position{line: 1024, col: 13, offset: 41627},
																										val:        "\t",
																										ignoreCase: false,
																									},
																								},
																							},
																						},
																					},
																					&litMatcher{
																						pos:        position{line: 227, col: 30, offset: 8586},
																						val:        "]",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																},
															},
															&zeroOrMoreExpr{
																pos: position{line: 141, col: 65, offset: 5537},
																expr: &choiceExpr{
																	pos: position{line: 1024, col: 7, offset: 41621},
																	alternatives: []interface{}{
																		&litMatcher{
																			pos:        position{line: 1024, col: 7, offset: 41621},
																			val:        " ",
																			ignoreCase: false,
																		},
																		&actionExpr{
																			pos: position{line: 1024, col: 13, offset: 41627},
																			run: (*parser).callonParagraph848,
																			expr: &litMatcher{
																				pos:        position{line: 1024, col: 13, offset: 41627},
																				val:        "\t",
																				ignoreCase: false,
																			},
																		},
																	},
																},
															},
															&choiceExpr{
																pos: position{line: 1032, col: 8, offset: 41723},
																alternatives: []interface{}{
																	&litMatcher{
																		pos:        position{line: 1028, col: 12, offset: 41683},
																		val:        "\r\n",
																		ignoreCase: false,
																	},
																	&charClassMatcher{
																		pos:        position{line: 1028, col: 21, offset: 41692},
																		val:        "[\\r\\n]",
																		chars:      []rune{'\r', '\n'},
																		ignoreCase: false,
																		inverted:   false,
																	},
																	&notExpr{
																		pos: position{line: 1030, col: 8, offset: 41712},
																		expr: &anyMatcher{
																			line: 1030, col: 9, offset: 41713,
																		},
																	},
																},
															},
														},
													},
												},
												&actionExpr{
													pos: position{line: 136, col: 21, offset: 5188},
													run: (*parser).callonParagraph855,
													expr: &seqExpr{
														pos: position{line: 136, col: 21, offset: 5188},
														exprs: []interface{}{
															&labeledExpr{
																pos:   position{line: 136, col: 21, offset: 5188},
																label: "attr",
																expr: &choiceExpr{
																	pos: position{line: 136, col: 27, offset: 5194},
																	alternatives: []interface{}{
																		&actionExpr{
																			pos: position{line: 145, col: 14, offset: 5645},
																			run: (*parser).callonParagraph859,
																			expr: &labeledExpr{
																				pos:   position{line: 145, col: 14, offset: 5645},
																				label: "id",
																				expr: &actionExpr{
																					pos: position{line: 151, col: 20, offset: 5775},
																					run: (*parser).callonParagraph861,
																					expr: &seqExpr{
																						pos: position{line: 151, col: 20, offset: 5775},
																						exprs: []interface{}{
																							&litMatcher{
																								pos:        position{line: 151, col: 20, offset: 5775},
																								val:        "[[",
																								ignoreCase: false,
																							},
																							&labeledExpr{
																								pos:   position{line: 151, col: 25, offset: 5780},
																								label: "id",
																								expr: &actionExpr{
																									pos: position{line: 1010, col: 7, offset: 41339},
																									run: (*parser).callonParagraph865,
																									expr: &oneOrMoreExpr{
																										pos: position{line: 1010, col: 7, offset: 41339},
																										expr: &seqExpr{
																											pos: position{line: 1010, col: 8, offset: 41340},
																											exprs: []interface{}{
																												&notExpr{
																													pos: position{line: 1010, col: 8, offset: 41340},
																													expr: &choiceExpr{
																														pos: position{line: 1028, col: 12, offset: 41683},
																														alternatives: []interface{}{
																															&litMatcher{
																																pos:        position{line: 1028, col: 12, offset: 41683},
																																val:        "\r\n",
																																ignoreCase: false,
																															},
																															&charClassMatcher{
																																pos:        position{line: 1028, col: 21, offset: 41692},
																																val:        "[\\r\\n]",
																																chars:      []rune{'\r', '\n'},
																																ignoreCase: false,
																																inverted:   false,
																															},
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 1010, col: 17, offset: 41349},
																													expr: &choiceExpr{
																														pos: position{line: 1024, col: 7, offset: 41621},
																														alternatives: []interface{}{
																															&litMatcher{
																																pos:        position{line: 1024, col: 7, offset: 41621},
																																val:        " ",
																																ignoreCase: false,
																															},
																															&actionExpr{
																																pos: position{line: 1024, col: 13, offset: 41627},
																																run: (*parser).callonParagraph875,
																																expr: &litMatcher{
																																	pos:        position{line: 1024, col: 13, offset: 41627},
																																	val:        "\t",
																																	ignoreCase: false,
																																},
																															},
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 1010, col: 21, offset: 41353},
																													expr: &litMatcher{
																														pos:        position{line: 1010, col: 22, offset: 41354},
																														val:        "[",
																														ignoreCase: false,
																													},
																												},
																												&notExpr{
																													pos: position{line: 1010, col: 26, offset: 41358},
																													expr: &litMatcher{
																														pos:        position{line: 1010, col: 27, offset: 41359},
																														val:        "]",
																														ignoreCase: false,
																													},
																												},
																												&notExpr{
																													pos: position{line: 1010, col: 31, offset: 41363},
																													expr: &litMatcher{
																														pos:        position{line: 1010, col: 32, offset: 41364},
																														val:        "<<",
																														ignoreCase: false,
																													},
																												},
																												&notExpr{
																													pos: position{line: 1010, col: 37, offset: 41369},
																													expr: &litMatcher{
																														pos:        position{line: 1010, col: 38, offset: 41370},
																														val:        ">>",
																														ignoreCase: false,
																													},
																												},
																												&notExpr{
																													pos: position{line: 1010, col: 43, offset: 41375},
																													expr: &litMatcher{
																														pos:        position{line: 1010, col: 44, offset: 41376},
																														val:        ",",
																														ignoreCase: false,
																													},
																												},
																												&anyMatcher{
																													line: 1010, col: 48, offset: 41380,
																												},
																											},
																										},
																									},
																								},
																							},
																							&litMatcher{
																								pos:        position{line: 151, col: 33, offset: 5788},
																								val:        "]]",
																								ignoreCase: false,
																							},
																						},
																					},
																				},
																			},
																		},
																		&actionExpr{
																			pos: position{line: 147, col: 5, offset: 5691},
																			run: (*parser).callonParagraph889,
																			expr: &seqExpr{
																				pos: position{line: 147, col: 5, offset: 5691},
																				exprs: []interface{}{
																					&litMatcher{
																						pos:        position{line: 147, col: 5, offset: 5691},
																						val:        "[#",
																						ignoreCase: false,
																					},
																					&labeledExpr{
																						pos:   position{line: 147, col: 10, offset: 5696},
																						label: "id",
																						expr: &actionExpr{
																							pos: position{line: 1010, col: 7, offset: 41339},
																							run: (*parser).callonParagraph893,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 1010, col: 7, offset: 41339},
																								expr: &seqExpr{
																									pos: position{line: 1010, col: 8, offset: 41340},
																									exprs: []interface{}{
																										&notExpr{
																											pos: position{line: 1010, col: 8, offset: 41340},
																											expr: &choiceExpr{
																												pos: position{line: 1028, col: 12, offset: 41683},
																												alternatives: []interface{}{
																													&litMatcher{
																														pos:        position{line: 1028, col: 12, offset: 41683},
																														val:        "\r\n",
																														ignoreCase: false,
																													},
																													&charClassMatcher{
																														pos:        position{line: 1028, col: 21, offset: 41692},
																														val:        "[\\r\\n]",
																														chars:      []rune{'\r', '\n'},
																														ignoreCase: false,
																														inverted:   false,
																													},
																												},
																											},
																										},
																										&notExpr{
																											pos: position{line: 1010, col: 17, offset: 41349},
																											expr: &choiceExpr{
																												pos: position{line: 1024, col: 7, offset: 41621},
																												alternatives: []interface{}{
																													&litMatcher{
																														pos:        position{line: 1024, col: 7, offset: 41621},
																														val:        " ",
																														ignoreCase: false,
																													},
																													&actionExpr{
																														pos: position{line: 1024, col: 13, offset: 41627},
																														run: (*parser).callonParagraph903,
																														expr: &litMatcher{
																															pos:        position{line: 1024, col: 13, offset: 41627},
																															val:        "\t",
																															ignoreCase: false,
																														},
																													},
																												},
																											},
																										},
																										&notExpr{
																											pos: position{line: 1010, col: 21, offset: 41353},
																											expr: &litMatcher{
																												pos:        position{line: 1010, col: 22, offset: 41354},
																												val:        "[",
																												ignoreCase: false,
																											},
																										},
																										&notExpr{
																											pos: position{line: 1010, col: 26, offset: 41358},
																											expr: &litMatcher{
																												pos:        position{line: 1010, col: 27, offset: 41359},
																												val:        "]",
																												ignoreCase: false,
																											},
																										},
																										&notExpr{
																											pos: position{line: 1010, col: 31, offset: 41363},
																											expr: &litMatcher{
																												pos:        position{line: 1010, col: 32, offset: 41364},
																												val:        "<<",
																												ignoreCase: false,
																											},
																										},
																										&notExpr{
																											pos: position{line: 1010, col: 37, offset: 41369},
																											expr: &litMatcher{
																												pos:        position{line: 1010, col: 38, offset: 41370},
																												val:        ">>",
																												ignoreCase: false,
																											},
																										},
																										&notExpr{
																											pos: position{line: 1010, col: 43, offset: 41375},
																											expr: &litMatcher{
																												pos:        position{line: 1010, col: 44, offset: 41376},
																												val:        ",",
																												ignoreCase: false,
																											},
																										},
																										&anyMatcher{
																											line: 1010, col: 48, offset: 41380,
																										},
																									},
																								},
																							},
																						},
																					},
																					&litMatcher{
																						pos:        position{line: 147, col: 18, offset: 5704},
																						val:        "]",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																		&actionExpr{
																			pos: position{line: 157, col: 17, offset: 5997},
																			run: (*parser).callonParagraph917,
																			expr: &seqExpr{
																				pos: position{line: 157, col: 17, offset: 5997},
																				exprs: []interface{}{
																					&litMatcher{
																						pos:        position{line: 157, col: 17, offset: 5997},
																						val:        ".",
																						ignoreCase: false,
																					},
																					&notExpr{
																						pos: position{line: 157, col: 21, offset: 6001},
																						expr: &litMatcher{
																							pos:        position{line: 157, col: 22, offset: 6002},
																							val:        ".",
																							ignoreCase: false,
																						},
																					},
																					&notExpr{
																						pos: position{line: 157, col: 26, offset: 6006},
																						expr: &choiceExpr{
																							pos: position{line: 1024, col: 7, offset: 41621},
																							alternatives: []interface{}{
																								&litMatcher{
																									pos:        position{line: 1024, col: 7, offset: 41621},
																									val:        " ",
																									ignoreCase: false,
																								},
																								&actionExpr{
																									pos: position{line: 1024, col: 13, offset: 41627},
																									run: (*parser).callonParagraph925,
																									expr: &litMatcher{
																										pos:        position{line: 1024, col: 13, offset: 41627},
																										val:        "\t",
																										ignoreCase: false,
																									},
																								},
																							},
																						},
																					},
																					&labeledExpr{
																						pos:   position{line: 157, col: 30, offset: 6010},
																						label: "title",
																						expr: &actionExpr{
																							pos: position{line: 161, col: 24, offset: 6115},
																							run: (*parser).callonParagraph928,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 161, col: 24, offset: 6115},
																								expr: &seqExpr{
																									pos: position{line: 161, col: 25, offset: 6116},
																									exprs: []interface{}{
																										&notExpr{
																											pos: position{line: 161, col: 25, offset: 6116},
																											expr: &choiceExpr{
																												pos: position{line: 1028, col: 12, offset: 41683},
																												alternatives: []interface{}{
																													&litMatcher{
																														pos:        position{line: 1028, col: 12, offset: 41683},
																														val:        "\r\n",
																														ignoreCase: false,
																													},
																													&charClassMatcher{
																														pos:        position{line: 1028, col: 21, offset: 41692},
																														val:        "[\\r\\n]",
																														chars:      []rune{'\r', '\n'},
																														ignoreCase: false,
																														inverted:   false,
																													},
																												},
																											},
																										},
																										&anyMatcher{
																											line: 161, col: 34, offset: 6125,
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																		&actionExpr{
																			pos: position{line: 167, col: 16, offset: 6274},
																			run: (*parser).callonParagraph936,
																			expr: &seqExpr{
																				pos: position{line: 167, col: 16, offset: 6274},
																				exprs: []interface{}{
																					&litMatcher{
																						pos:        position{line: 167, col: 16, offset: 6274},
																						val:        "[.",
																						ignoreCase: false,
																					},
																					&notExpr{
																						pos: position{line: 167, col: 21, offset: 6279},
																						expr: &choiceExpr{
																							pos: position{line: 1024, col: 7, offset: 41621},
																							alternatives: []interface{}{
																								&litMatcher{
																									pos:        position{line: 1024, col: 7, offset: 41621},
																									val:        " ",
																									ignoreCase: false,
																								},
																								&actionExpr{
																									pos: position{line: 1024, col: 13, offset: 41627},
																									run: (*parser).callonParagraph942,
																									expr: &litMatcher{
																										pos:        position{line: 1024, col: 13, offset: 41627},
																										val:        "\t",
																										ignoreCase: false,
																									},
																								},
																							},
																						},
																					},
																					&labeledExpr{
																						pos:   position{line: 167, col: 25, offset: 6283},
																						label: "role",
																						expr: &actionExpr{
																							pos: position{line: 171, col: 23, offset: 6387},
																							run: (*parser).callonParagraph945,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 171, col: 23, offset: 6387},
																								expr: &seqExpr{
																									pos: position{line: 171, col: 24, offset: 6388},
																									exprs: []interface{}{
																										&notExpr{
																											pos: position{line: 171, col: 24, offset: 6388},
																											expr: &choiceExpr{
																												pos: position{line: 1028, col: 12, offset: 41683},
																												alternatives: []interface{}{
																													&litMatcher{
																														pos:        position{line: 1028, col: 12, offset: 41683},
																														val:        "\r\n",
																														ignoreCase: false,
																													},
																													&charClassMatcher{
																														pos:        position{line: 1028, col: 21, offset: 41692},
																														val:        "[\\r\\n]",
																														chars:      []rune{'\r', '\n'},
																														ignoreCase: false,
																														inverted:   false,
																													},
																												},
																											},
																										},
																										&notExpr{
																											pos: position{line: 171, col: 33, offset: 6397},
																											expr: &litMatcher{
																												pos:        position{line: 171, col: 34, offset: 6398},
																												val:        "]",
																												ignoreCase: false,
																											},
																										},
																										&anyMatcher{
																											line: 171, col: 38, offset: 6402,
																										},
																									},
																								},
																							},
																						},
																					},
																					&litMatcher{
																						pos:        position{line: 167, col: 51, offset: 6309},
																						val:        "]",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																		&actionExpr{
																			pos: position{line: 176, col: 30, offset: 6551},
																			run: (*parser).callonParagraph956,
																			expr: &seqExpr{
																				pos: position{line: 176, col: 30, offset: 6551},
																				exprs: []interface{}{
																					&litMatcher{
																						pos:        position{line: 176, col: 30, offset: 6551},
																						val:        "[",
																						ignoreCase: false,
																					},
																					&labeledExpr{
																						pos:   position{line: 176, col: 34, offset: 6555},
																						label: "k",
																						expr: &choiceExpr{
																							pos: position{line: 494, col: 19, offset: 19245},
																							alternatives: []interface{}{
																								&actionExpr{
																									pos: position{line: 494, col: 19, offset: 19245},
																									run: (*parser).callonParagraph961,
																									expr: &litMatcher{
																										pos:        position{line: 494, col: 19, offset: 19245},
																										val:        "TIP",
																										ignoreCase: false,
																									},
																								},
																								&actionExpr{
																									pos: position{line: 496, col: 5, offset: 19283},
																									run: (*parser).callonParagraph963,
																									expr: &litMatcher{
																										pos:        position{line: 496, col: 5, offset: 19283},
																										val:        "NOTE",
																										ignoreCase: false,
																									},
																								},
																								&actionExpr{
																									pos: position{line: 498, col: 5, offset: 19323},
																									run: (*parser).callonParagraph965,
																									expr: &litMatcher{
																										pos:        position{line: 498, col: 5, offset: 19323},
																										val:        "IMPORTANT",
																										ignoreCase: false,
																									},
																								},
																								&actionExpr{
																									pos: position{line: 500, col: 5, offset: 19373},
																									run: (*parser).callonParagraph967,
																									expr: &litMatcher{
																										pos:        position{line: 500, col: 5, offset: 19373},
																										val:        "WARNING",
																										ignoreCase: false,
																									},
																								},
																								&actionExpr{
																									pos: position{line: 502, col: 5, offset: 19419},
																									run: (*parser).callonParagraph969,
																									expr: &litMatcher{
																										pos:        position{line: 502, col: 5, offset: 19419},
																										val:        "CAUTION",
																										ignoreCase: false,
																									},
																								},
																							},
																						},
																					},
																					&litMatcher{
																						pos:        position{line: 176, col: 53, offset: 6574},
																						val:        "]",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																		&actionExpr{
																			pos: position{line: 199, col: 21, offset: 7312},
																			run: (*parser).callonParagraph972,
																			expr: &litMatcher{
																				pos:        position{line: 199, col: 21, offset: 7312},
																				val:        "[horizontal]",
																				ignoreCase: false,
																			},
																		},
																		&actionExpr{
																			pos: position{line: 181, col: 19, offset: 6735},
																			run: (*parser).callonParagraph974,
																			expr: &seqExpr{
																				pos: position{line: 181, col: 19, offset: 6735},
																				exprs: []interface{}{
																					&litMatcher{
																						pos:        position{line: 181, col: 19, offset: 6735},
																						val:        "[",
																						ignoreCase: false,
																					},
																					&notExpr{
																						pos: position{line: 181, col: 23, offset: 6739},
																						expr: &choiceExpr{
																							pos: position{line: 1024, col: 7, offset: 41621},
																							alternatives: []interface{}{
																								&litMatcher{
																									pos:        position{line: 1024, col: 7, offset: 41621},
																									val:        " ",
																									ignoreCase: false,
																								},
																								&actionExpr{
																									pos: position{line: 1024, col: 13, offset: 41627},
																									run: (*parser).callonParagraph980,
																									expr: &litMatcher{
																										pos:        position{line: 1024, col: 13, offset: 41627},
																										val:        "\t",
																										ignoreCase: false,
																									},
																								},
																							},
																						},
																					},
																					&labeledExpr{
																						pos:   position{line: 181, col: 27, offset: 6743},
																						label: "attributes",
																						expr: &zeroOrMoreExpr{
																							pos: position{line: 181, col: 38, offset: 6754},
																							expr: &choiceExpr{
																								pos: position{line: 185, col: 21, offset: 6867},
																								alternatives: []interface{}{
																									&actionExpr{
																										pos: position{line: 185, col: 21, offset: 6867},
																										run: (*parser).callonParagraph985,
																										expr: &seqExpr{
																											pos: position{line: 185, col: 21, offset: 6867},
																											exprs: []interface{}{
																												&labeledExpr{
																													pos:   position{line: 185, col: 21, offset: 6867},
																													label: "key",
																													expr: &actionExpr{
																														pos: position{line: 191, col: 17, offset: 7127},
																														run: (*parser).callonParagraph988,
																														expr: &seqExpr{
																															pos: position{line: 191, col: 17, offset: 7127},
																															exprs: []interface{}{
																																&notExpr{
																																	pos: position{line: 191, col: 17, offset: 7127},
																																	expr: &actionExpr{
																																		pos: position{line: 231, col: 14, offset: 8674},
																																		run: (*parser).callonParagraph991,
																																		expr: &litMatcher{
																																			pos:        position{line: 231, col: 14, offset: 8674},
																																			val:        "verse",
																																			ignoreCase: false,
																																		},
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 191, col: 28, offset: 7138},
																																	expr: &actionExpr{
																																		pos: position{line: 975, col: 16, offset: 40537},
																																		run: (*parser).callonParagraph994,
																																		expr: &litMatcher{
																																			pos:        position{line: 975, col: 16, offset: 40537},
																																			val:        "literal",
																																			ignoreCase: false,
																																		},
																																	},
																																},
																																&labeledExpr{
																																	pos:   position{line: 191, col: 41, offset: 7151},
																																	label: "key",
																																	expr: &oneOrMoreExpr{
																																		pos: position{line: 191, col: 45, offset: 7155},
																																		expr: &seqExpr{
																																			pos: position{line: 191, col: 46, offset: 7156},
																																			exprs: []interface{}{
																																				&notExpr{
																																					pos: position{line: 191, col: 46, offset: 7156},
																																					expr: &litMatcher{
																																						pos:        position{line: 191, col: 47, offset: 7157},
																																						val:        "=",
																																						ignoreCase: false,
																																					},
																																				},
																																				&notExpr{
																																					pos: position{line: 191, col: 51, offset: 7161},
																																					expr: &litMatcher{
																																						pos:        position{line: 191, col: 52, offset: 7162},
																																						val:        ",",
																																						ignoreCase: false,
																																					},
																																				},
																																				&notExpr{
																																					pos: position{line: 191, col: 56, offset: 7166},
																																					expr: &litMatcher{
																																						pos:        position{line: 191, col: 57, offset: 7167},
																																						val:        "]",
																																						ignoreCase: false,
																																					},
																																				},
																																				&anyMatcher{
																																					line: 191, col: 61, offset: 7171,
																																				},
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																												&litMatcher{
																													pos:        position{line: 185, col: 40, offset: 6886},
																													val:        "=",
																													ignoreCase: false,
																												},
																												&labeledExpr{
																													pos:   position{line: 185, col: 44, offset: 6890},
																													label: "value",
																													expr: &actionExpr{
																														pos: position{line: 195, col: 19, offset: 7230},
																														run: (*parser).callonParagraph1008,
																														expr: &labeledExpr{
																															pos:   position{line: 195, col: 19, offset: 7230},
																															label: "value",
																															expr: &zeroOrMoreExpr{
																																pos: position{line: 195, col: 25, offset: 7236},
																																expr: &seqExpr{
																																	pos: position{line: 195, col: 26, offset: 7237},
																																	exprs: []interface{}{
																																		&notExpr{
																																			pos: position{line: 195, col: 26, offset: 7237},
																																			expr: &litMatcher{
																																				pos:        position{line: 195, col: 27, offset: 7238},
																																				val:        "=",
																																				ignoreCase: false,
																																			},
																																		},
																																		&notExpr{
																																			pos: position{line: 195, col: 31, offset: 7242},
																																			expr: &litMatcher{
																																				pos:        position{line: 195, col: 32, offset: 7243},
																																				val:        ",",
																																				ignoreCase: false,
																																			},
																																		},
																																		&notExpr{
																																			pos: position{line: 195, col: 36, offset: 7247},
																																			expr: &litMatcher{
																																				pos:        position{line: 195, col: 37, offset: 7248},
																																				val:        "]",
																																				ignoreCase: false,
																																			},
																																		},
																																		&anyMatcher{
																																			line: 195, col: 41, offset: 7252,
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																												&zeroOrOneExpr{
																													pos: position{line: 185, col: 67, offset: 6913},
																													expr: &litMatcher{
																														pos:        position{line: 185, col: 67, offset: 6913},
																														val:        ",",
																														ignoreCase: false,
																													},
																												},
																												&zeroOrMoreExpr{
																													pos: position{line: 185, col: 72, offset: 6918},
																													expr: &choiceExpr{
																														pos: position{line: 1024, col: 7, offset: 41621},
																														alternatives: []interface{}{
																															&litMatcher{
																																pos:        position{line: 1024, col: 7, offset: 41621},
																																val:        " ",
																																ignoreCase: false,
																															},
																															&actionExpr{
																																pos: position{line: 1024, col: 13, offset: 41627},
																																run: (*parser).callonParagraph1024,
																																expr: &litMatcher{
																																	pos:        position{line: 1024, col: 13, offset: 41627},
																																	val:        "\t",
																																	ignoreCase: false,
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																									&actionExpr{
																										pos: position{line: 187, col: 5, offset: 7002},
																										run: (*parser).callonParagraph1026,
																										expr: &seqExpr{
																											pos: position{line: 187, col: 5, offset: 7002},
																											exprs: []interface{}{
																												&labeledExpr{
																													pos:   position{line: 187, col: 5, offset: 7002},
																													label: "key",
																													expr: &actionExpr{
																														pos: position{line: 191, col: 17, offset: 7127},
																														run: (*parser).callonParagraph1029,
																														expr: &seqExpr{
																															pos: position{line: 191, col: 17, offset: 7127},
																															exprs: []interface{}{
																																&notExpr{
																																	pos: position{line: 191, col: 17, offset: 7127},
																																	expr: &actionExpr{
																																		pos: position{line: 231, col: 14, offset: 8674},
																																		run: (*parser).callonParagraph1032,
																																		expr: &litMatcher{
																																			pos:        position{line: 231, col: 14, offset: 8674},
																																			val:        "verse",
																																			ignoreCase: false,
																																		},
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 191, col: 28, offset: 7138},
																																	expr: &actionExpr{
																																		pos: position{line: 975, col: 16, offset: 40537},
																																		run: (*parser).callonParagraph1035,
																																		expr: &litMatcher{
																																			pos:        position{line: 975, col: 16, offset: 40537},
																																			val:        "literal",
																																			ignoreCase: false,
																																		},
																																	},
																																},
																																&labeledExpr{
																																	pos:   position{line: 191, col: 41, offset: 7151},
																																	label: "key",
																																	expr: &oneOrMoreExpr{
																																		pos: position{line: 191, col: 45, offset: 7155},
																																		expr: &seqExpr{
																																			pos: position{line: 191, col: 46, offset: 7156},
																																			exprs: []interface{}{
																																				&notExpr{
																																					pos: position{line: 191, col: 46, offset: 7156},
																																					expr: &litMatcher{
																																						pos:        position{line: 191, col: 47, offset: 7157},
																																						val:        "=",
																																						ignoreCase: false,
																																					},
																																				},
																																				&notExpr{
																																					pos: position{line: 191, col: 51, offset: 7161},
																																					expr: &litMatcher{
																																						pos:        position{line: 191, col: 52, offset: 7162},
																																						val:        ",",
																																						ignoreCase: false,
																																					},
																																				},
																																				&notExpr{
																																					pos: position{line: 191, col: 56, offset: 7166},
																																					expr: &litMatcher{
																																						pos:        position{line: 191, col: 57, offset: 7167},
																																						val:        "]",
																																						ignoreCase: false,
																																					},
																																				},
																																				&anyMatcher{
																																					line: 191, col: 61, offset: 7171,
																																				},
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																												&zeroOrOneExpr{
																													pos: position{line: 187, col: 24, offset: 7021},
																													expr: &litMatcher{
																														pos:        position{line: 187, col: 24, offset: 7021},
																														val:        ",",
																														ignoreCase: false,
																													},
																												},
																												&zeroOrMoreExpr{
																													pos: position{line: 187, col: 29, offset: 7026},
																													expr: &choiceExpr{
																														pos: position{line: 1024, col: 7, offset: 41621},
																														alternatives: []interface{}{
																															&litMatcher{
																																pos:        position{line: 1024, col: 7, offset: 41621},
																																val:        " ",
																																ignoreCase: false,
																															},
																															&actionExpr{
																																pos: position{line: 1024, col: 13, offset: 41627},
																																run: (*parser).callonParagraph1052,
																																expr: &litMatcher{
																																	pos:        position{line: 1024, col: 13, offset: 41627},
																																	val:        "\t",
																																	ignoreCase: false,
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																					&litMatcher{
																						pos:        position{line: 181, col: 59, offset: 6775},
																						val:        "]",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																},
															},
															&zeroOrMoreExpr{
																pos: position{line: 136, col: 131, offset: 5298},
																expr: &choiceExpr{
																	pos: position{line: 1024, col: 7, offset: 41621},
																	alternatives: []interface{}{
																		&litMatcher{
																			pos:        position{line: 1024, col: 7, offset: 41621},
																			val:        " ",
																			ignoreCase: false,
																		},
																		&actionExpr{
																			pos: position{line: 1024, col: 13, offset: 41627},
																			run: (*parser).callonParagraph1058,
																			expr: &litMatcher{
																				pos:        position{line: 1024, col: 13, offset: 41627},
																				val:        "\t",
																				ignoreCase: false,
																			},
																		},
																	},
																},
															},
															&choiceExpr{
																pos: position{line: 1032, col: 8, offset: 41723},
																alternatives: []interface{}{
																	&litMatcher{
																		pos:        position{line: 1028, col: 12, offset: 41683},
																		val:        "\r\n",
																		ignoreCase: false,
																	},
																	&charClassMatcher{
																		pos:        position{line: 1028, col: 21, offset: 41692},
																		val:        "[\\r\\n]",
																		chars:      []rune{'\r', '\n'},
																		ignoreCase: false,
																		inverted:   false,
																	},
																	&notExpr{
																		pos: position{line: 1030, col: 8, offset: 41712},
																		expr: &anyMatcher{
																			line: 1030, col: 9, offset: 41713,
																		},
																	},
																},
															},
														},
													},
												},
											},
										},
									},
								},
								&notExpr{
									pos: position{line: 517, col: 38, offset: 20095},
									expr: &seqExpr{
										pos: position{line: 517, col: 40, offset: 20097},
										exprs: []interface{}{
											&oneOrMoreExpr{
												pos: position{line: 517, col: 40, offset: 20097},
												expr: &litMatcher{
													pos:        position{line: 517, col: 40, offset: 20097},
													val:        "=",
													ignoreCase: false,
												},
											},
											&oneOrMoreExpr{
												pos: position{line: 517, col: 45, offset: 20102},
												expr: &choiceExpr{
													pos: position{line: 1024, col: 7, offset: 41621},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1024, col: 7, offset: 41621},
															val:        " ",
															ignoreCase: false,
														},
														&actionExpr{
															pos: position{line: 1024, col: 13, offset: 41627},
															run: (*parser).callonParagraph1072,
															expr: &litMatcher{
																pos:        position{line: 1024, col: 13, offset: 41627},
																val:        "\t",
																ignoreCase: false,
															},
														},
													},
												},
											},
											&notExpr{
												pos: position{line: 517, col: 49, offset: 20106},
												expr: &choiceExpr{
													pos: position{line: 1028, col: 12, offset: 41683},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1028, col: 12, offset: 41683},
															val:        "\r\n",
															ignoreCase: false,
														},
														&charClassMatcher{
															pos:        position{line: 1028, col: 21, offset: 41692},
															val:        "[\\r\\n]",
															chars:      []rune{'\r', '\n'},
															ignoreCase: false,
															inverted:   false,
														},
													},
												},
											},
										},
									},
								},
								&labeledExpr{
									pos:   position{line: 517, col: 59, offset: 20116},
									label: "lines",
									expr: &oneOrMoreExpr{
										pos: position{line: 517, col: 65, offset: 20122},
										expr: &ruleRefExpr{
											pos:  position{line: 517, col: 66, offset: 20123},
											name: "InlineElements",
										},
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "InlineElements",
			pos:  position{line: 523, col: 1, offset: 20332},
			expr: &choiceExpr{
				pos: position{line: 524, col: 5, offset: 20355},
				alternatives: []interface{}{
					&actionExpr{
						pos: position{line: 524, col: 5, offset: 20355},
						run: (*parser).callonInlineElements2,
						expr: &labeledExpr{
							pos:   position{line: 524, col: 5, offset: 20355},
							label: "comment",
							expr: &actionExpr{
								pos: position{line: 935, col: 22, offset: 38775},
								run: (*parser).callonInlineElements4,
								expr: &seqExpr{
									pos: position{line: 935, col: 22, offset: 38775},
									exprs: []interface{}{
										&notExpr{
											pos: position{line: 935, col: 22, offset: 38775},
											expr: &litMatcher{
												pos:        position{line: 925, col: 26, offset: 38379},
												val:        "////",
												ignoreCase: false,
											},
										},
										&litMatcher{
											pos:        position{line: 935, col: 45, offset: 38798},
											val:        "//",
											ignoreCase: false,
										},
										&labeledExpr{
											pos:   position{line: 935, col: 50, offset: 38803},
											label: "content",
											expr: &actionExpr{
												pos: position{line: 939, col: 29, offset: 38931},
												run: (*parser).callonInlineElements10,
												expr: &zeroOrMoreExpr{
													pos: position{line: 939, col: 29, offset: 38931},
													expr: &seqExpr{
														pos: position{line: 939, col: 30, offset: 38932},
														exprs: []interface{}{
															&notExpr{
																pos: position{line: 939, col: 30, offset: 38932},
																expr: &choiceExpr{
																	pos: position{line: 1032, col: 8, offset: 41723},
																	alternatives: []interface{}{
																		&litMatcher{
																			pos:        position{line: 1028, col: 12, offset: 41683},
																			val:        "\r\n",
																			ignoreCase: false,
																		},
																		&charClassMatcher{
																			pos:        position{line: 1028, col: 21, offset: 41692},
																			val:        "[\\r\\n]",
																			chars:      []rune{'\r', '\n'},
																			ignoreCase: false,
																			inverted:   false,
																		},
																		&notExpr{
																			pos: position{line: 1030, col: 8, offset: 41712},
																			expr: &anyMatcher{
																				line: 1030, col: 9, offset: 41713,
																			},
																		},
																	},
																},
															},
															&anyMatcher{
																line: 939, col: 35, offset: 38937,
															},
														},
													},
												},
											},
										},
										&choiceExpr{
											pos: position{line: 1032, col: 8, offset: 41723},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 1028, col: 12, offset: 41683},
													val:        "\r\n",
													ignoreCase: false,
												},
												&charClassMatcher{
													pos:        position{line: 1028, col: 21, offset: 41692},
													val:        "[\\r\\n]",
													chars:      []rune{'\r', '\n'},
													ignoreCase: false,
													inverted:   false,
												},
												&notExpr{
													pos: position{line: 1030, col: 8, offset: 41712},
													expr: &anyMatcher{
														line: 1030, col: 9, offset: 41713,
													},
												},
											},
										},
									},
								},
							},
						},
					},
					&actionExpr{
						pos: position{line: 526, col: 9, offset: 20456},
						run: (*parser).callonInlineElements25,
						expr: &seqExpr{
							pos: position{line: 526, col: 9, offset: 20456},
							exprs: []interface{}{
								&notExpr{
									pos: position{line: 526, col: 9, offset: 20456},
									expr: &notExpr{
										pos: position{line: 1030, col: 8, offset: 41712},
										expr: &anyMatcher{
											line: 1030, col: 9, offset: 41713,
										},
									},
								},
								&notExpr{
									pos: position{line: 526, col: 14, offset: 20461},
									expr: &choiceExpr{
										pos: position{line: 763, col: 19, offset: 31912},
										alternatives: []interface{}{
											&litMatcher{
												pos:        position{line: 968, col: 26, offset: 40226},
												val:        "....",
												ignoreCase: false,
											},
											&litMatcher{
												pos:        position{line: 771, col: 25, offset: 32329},
												val:        "```",
												ignoreCase: false,
											},
											&litMatcher{
												pos:        position{line: 782, col: 26, offset: 32881},
												val:        "----",
												ignoreCase: false,
											},
											&litMatcher{
												pos:        position{line: 804, col: 26, offset: 33857},
												val:        "====",
												ignoreCase: false,
											},
											&litMatcher{
												pos:        position{line: 925, col: 26, offset: 38379},
												val:        "////",
												ignoreCase: false,
											},
											&litMatcher{
												pos:        position{line: 827, col: 24, offset: 34755},
												val:        "____",
												ignoreCase: false,
											},
											&litMatcher{
												pos:        position{line: 881, col: 26, offset: 36707},
												val:        "****",
												ignoreCase: false,
											},
										},
									},
								},
								&labeledExpr{
									pos:   position{line: 526, col: 30, offset: 20477},
									label: "elements",
									expr: &oneOrMoreExpr{
										pos: position{line: 526, col: 39, offset: 20486},
										expr: &seqExpr{
											pos: position{line: 526, col: 40, offset: 20487},
											exprs: []interface{}{
												&notExpr{
													pos: position{line: 526, col: 40, offset: 20487},
													expr: &choiceExpr{
														pos: position{line: 1032, col: 8, offset: 41723},
														alternatives: []interface{}{
															&litMatcher{
																pos:        position{line: 1028, col: 12, offset: 41683},
																val:        "\r\n",
																ignoreCase: false,
															},
															&charClassMatcher{
																pos:        position{line: 1028, col: 21, offset: 41692},
																val:        "[\\r\\n]",
																chars:      []rune{'\r', '\n'},
																ignoreCase: false,
																inverted:   false,
															},
															&notExpr{
																pos: position{line: 1030, col: 8, offset: 41712},
																expr: &anyMatcher{
																	line: 1030, col: 9, offset: 41713,
																},
															},
														},
													},
												},
												&zeroOrMoreExpr{
													pos: position{line: 526, col: 45, offset: 20492},
													expr: &choiceExpr{
														pos: position{line: 1024, col: 7, offset: 41621},
														alternatives: []interface{}{
															&litMatcher{
																pos:        position{line: 1024, col: 7, offset: 41621},
																val:        " ",
																ignoreCase: false,
															},
															&actionExpr{
																pos: position{line: 1024, col: 13, offset: 41627},
																run: (*parser).callonInlineElements51,
																expr: &litMatcher{
																	pos:        position{line: 1024, col: 13, offset: 41627},
																	val:        "\t",
																	ignoreCase: false,
																},
															},
														},
													},
												},
												&notExpr{
													pos: position{line: 526, col: 49, offset: 20496},
													expr: &actionExpr{
														pos: position{line: 151, col: 20, offset: 5775},
														run: (*parser).callonInlineElements54,
														expr: &seqExpr{
															pos: position{line: 151, col: 20, offset: 5775},
															exprs: []interface{}{
																&litMatcher{
																	pos:        position{line: 151, col: 20, offset: 5775},
																	val:        "[[",
																	ignoreCase: false,
																},
																&labeledExpr{
																	pos:   position{line: 151, col: 25, offset: 5780},
																	label: "id",
																	expr: &actionExpr{
																		pos: position{line: 1010, col: 7, offset: 41339},
																		run: (*parser).callonInlineElements58,
																		expr: &oneOrMoreExpr{
																			pos: position{line: 1010, col: 7, offset: 41339},
																			expr: &seqExpr{
																				pos: position{line: 1010, col: 8, offset: 41340},
																				exprs: []interface{}{
																					&notExpr{
																						pos: position{line: 1010, col: 8, offset: 41340},
																						expr: &choiceExpr{
																							pos: position{line: 1028, col: 12, offset: 41683},
																							alternatives: []interface{}{
																								&litMatcher{
																									pos:        position{line: 1028, col: 12, offset: 41683},
																									val:        "\r\n",
																									ignoreCase: false,
																								},
																								&charClassMatcher{
																									pos:        position{line: 1028, col: 21, offset: 41692},
																									val:        "[\\r\\n]",
																									chars:      []rune{'\r', '\n'},
																									ignoreCase: false,
																									inverted:   false,
																								},
																							},
																						},
																					},
																					&notExpr{
																						pos: position{line: 1010, col: 17, offset: 41349},
																						expr: &choiceExpr{
																							pos: position{line: 1024, col: 7, offset: 41621},
																							alternatives: []interface{}{
																								&litMatcher{
																									pos:        position{line: 1024, col: 7, offset: 41621},
																									val:        " ",
																									ignoreCase: false,
																								},
																								&actionExpr{
																									pos: position{line: 1024, col: 13, offset: 41627},
																									run: (*parser).callonInlineElements68,
																									expr: &litMatcher{
																										pos:        position{line: 1024, col: 13, offset: 41627},
																										val:        "\t",
																										ignoreCase: false,
																									},
																								},
																							},
																						},
																					},
																					&notExpr{
																						pos: position{line: 1010, col: 21, offset: 41353},
																						expr: &litMatcher{
																							pos:        position{line: 1010, col: 22, offset: 41354},
																							val:        "[",
																							ignoreCase: false,
																						},
																					},
																					&notExpr{
																						pos: position{line: 1010, col: 26, offset: 41358},
																						expr: &litMatcher{
																							pos:        position{line: 1010, col: 27, offset: 41359},
																							val:        "]",
																							ignoreCase: false,
																						},
																					},
																					&notExpr{
																						pos: position{line: 1010, col: 31, offset: 41363},
																						expr: &litMatcher{
																							pos:        position{line: 1010, col: 32, offset: 41364},
																							val:        "<<",
																							ignoreCase: false,
																						},
																					},
																					&notExpr{
																						pos: position{line: 1010, col: 37, offset: 41369},
																						expr: &litMatcher{
																							pos:        position{line: 1010, col: 38, offset: 41370},
																							val:        ">>",
																							ignoreCase: false,
																						},
																					},
																					&notExpr{
																						pos: position{line: 1010, col: 43, offset: 41375},
																						expr: &litMatcher{
																							pos:        position{line: 1010, col: 44, offset: 41376},
																							val:        ",",
																							ignoreCase: false,
																						},
																					},
																					&anyMatcher{
																						line: 1010, col: 48, offset: 41380,
																					},
																				},
																			},
																		},
																	},
																},
																&litMatcher{
																	pos:        position{line: 151, col: 33, offset: 5788},
																	val:        "]]",
																	ignoreCase: false,
																},
															},
														},
													},
												},
												&ruleRefExpr{
													pos:  position{line: 526, col: 66, offset: 20513},
													name: "InlineElement",
												},
												&zeroOrMoreExpr{
													pos: position{line: 526, col: 80, offset: 20527},
													expr: &choiceExpr{
														pos: position{line: 1024, col: 7, offset: 41621},
														alternatives: []interface{}{
															&litMatcher{
																pos:        position{line: 1024, col: 7, offset: 41621},
																val:        " ",
																ignoreCase: false,
															},
															&actionExpr{
																pos: position{line: 1024, col: 13, offset: 41627},
																run: (*parser).callonInlineElements86,
																expr: &litMatcher{
																	pos:        position{line: 1024, col: 13, offset: 41627},
																	val:        "\t",
																	ignoreCase: false,
																},
															},
														},
													},
												},
											},
										},
									},
								},
								&choiceExpr{
									pos: position{line: 1032, col: 8, offset: 41723},
									alternatives: []interface{}{
										&litMatcher{
											pos:        position{line: 1028, col: 12, offset: 41683},
											val:        "\r\n",
											ignoreCase: false,
										},
										&charClassMatcher{
											pos:        position{line: 1028, col: 21, offset: 41692},
											val:        "[\\r\\n]",
											chars:      []rune{'\r', '\n'},
											ignoreCase: false,
											inverted:   false,
										},
										&notExpr{
											pos: position{line: 1030, col: 8, offset: 41712},
											expr: &anyMatcher{
												line: 1030, col: 9, offset: 41713,
											},
										},
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "InlineElement",
			pos:  position{line: 530, col: 1, offset: 20651},
			expr: &actionExpr{
				pos: position{line: 530, col: 18, offset: 20668},
				run: (*parser).callonInlineElement1,
				expr: &labeledExpr{
					pos:   position{line: 530, col: 18, offset: 20668},
					label: "element",
					expr: &choiceExpr{
						pos: position{line: 530, col: 27, offset: 20677},
						alternatives: []interface{}{
							&ruleRefExpr{
								pos:  position{line: 530, col: 27, offset: 20677},
								name: "QuotedText",
							},
							&actionExpr{
								pos: position{line: 656, col: 19, offset: 27690},
								run: (*parser).callonInlineElement5,
								expr: &seqExpr{
									pos: position{line: 656, col: 19, offset: 27690},
									exprs: []interface{}{
										&litMatcher{
											pos:        position{line: 656, col: 19, offset: 27690},
											val:        "<<",
											ignoreCase: false,
										},
										&labeledExpr{
											pos:   position{line: 656, col: 24, offset: 27695},
											label: "id",
											expr: &actionExpr{
												pos: position{line: 1010, col: 7, offset: 41339},
												run: (*parser).callonInlineElement9,
												expr: &oneOrMoreExpr{
													pos: position{line: 1010, col: 7, offset: 41339},
													expr: &seqExpr{
														pos: position{line: 1010, col: 8, offset: 41340},
														exprs: []interface{}{
															&notExpr{
																pos: position{line: 1010, col: 8, offset: 41340},
																expr: &choiceExpr{
																	pos: position{line: 1028, col: 12, offset: 41683},
																	alternatives: []interface{}{
																		&litMatcher{
																			pos:        position{line: 1028, col: 12, offset: 41683},
																			val:        "\r\n",
																			ignoreCase: false,
																		},
																		&charClassMatcher{
																			pos:        position{line: 1028, col: 21, offset: 41692},
																			val:        "[\\r\\n]",
																			chars:      []rune{'\r', '\n'},
																			ignoreCase: false,
																			inverted:   false,
																		},
																	},
																},
															},
															&notExpr{
																pos: position{line: 1010, col: 17, offset: 41349},
																expr: &choiceExpr{
																	pos: position{line: 1024, col: 7, offset: 41621},
																	alternatives: []interface{}{
																		&litMatcher{
																			pos:        position{line: 1024, col: 7, offset: 41621},
																			val:        " ",
																			ignoreCase: false,
																		},
																		&actionExpr{
																			pos: position{line: 1024, col: 13, offset: 41627},
																			run: (*parser).callonInlineElement19,
																			expr: &litMatcher{
																				pos:        position{line: 1024, col: 13, offset: 41627},
																				val:        "\t",
																				ignoreCase: false,
																			},
																		},
																	},
																},
															},
															&notExpr{
																pos: position{line: 1010, col: 21, offset: 41353},
																expr: &litMatcher{
																	pos:        position{line: 1010, col: 22, offset: 41354},
																	val:        "[",
																	ignoreCase: false,
																},
															},
															&notExpr{
																pos: position{line: 1010, col: 26, offset: 41358},
																expr: &litMatcher{
																	pos:        position{line: 1010, col: 27, offset: 41359},
																	val:        "]",
																	ignoreCase: false,
																},
															},
															&notExpr{
																pos: position{line: 1010, col: 31, offset: 41363},
																expr: &litMatcher{
																	pos:        position{line: 1010, col: 32, offset: 41364},
																	val:        "<<",
																	ignoreCase: false,
																},
															},
															&notExpr{
																pos: position{line: 1010, col: 37, offset: 41369},
																expr: &litMatcher{
																	pos:        position{line: 1010, col: 38, offset: 41370},
																	val:        ">>",
																	ignoreCase: false,
																},
															},
															&notExpr{
																pos: position{line: 1010, col: 43, offset: 41375},
																expr: &litMatcher{
																	pos:        position{line: 1010, col: 44, offset: 41376},
																	val:        ",",
																	ignoreCase: false,
																},
															},
															&anyMatcher{
																line: 1010, col: 48, offset: 41380,
															},
														},
													},
												},
											},
										},
										&zeroOrMoreExpr{
											pos: position{line: 656, col: 32, offset: 27703},
											expr: &choiceExpr{
												pos: position{line: 1024, col: 7, offset: 41621},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1024, col: 7, offset: 41621},
														val:        " ",
														ignoreCase: false,
													},
													&actionExpr{
														pos: position{line: 1024, col: 13, offset: 41627},
														run: (*parser).callonInlineElement35,
														expr: &litMatcher{
															pos:        position{line: 1024, col: 13, offset: 41627},
															val:        "\t",
															ignoreCase: false,
														},
													},
												},
											},
										},
										&litMatcher{
											pos:        position{line: 656, col: 36, offset: 27707},
											val:        ",",
											ignoreCase: false,
										},
										&labeledExpr{
											pos:   position{line: 656, col: 40, offset: 27711},
											label: "label",
											expr: &actionExpr{
												pos: position{line: 662, col: 24, offset: 27913},
												run: (*parser).callonInlineElement39,
												expr: &oneOrMoreExpr{
													pos: position{line: 662, col: 24, offset: 27913},
													expr: &seqExpr{
														pos: position{line: 662, col: 25, offset: 27914},
														exprs: []interface{}{
															&notExpr{
																pos: position{line: 662, col: 25, offset: 27914},
																expr: &litMatcher{
																	pos:        position{line: 662, col: 26, offset: 27915},
																	val:        ">>",
																	ignoreCase: false,
																},
															},
															&anyMatcher{
																line: 662, col: 31, offset: 27920,
															},
														},
													},
												},
											},
										},
										&litMatcher{
											pos:        position{line: 656, col: 68, offset: 27739},
											val:        ">>",
											ignoreCase: false,
										},
									},
								},
							},
							&actionExpr{
								pos: position{line: 658, col: 5, offset: 27814},
								run: (*parser).callonInlineElement46,
								expr: &seqExpr{
									pos: position{line: 658, col: 5, offset: 27814},
									exprs: []interface{}{
										&litMatcher{
											pos:        position{line: 658, col: 5, offset: 27814},
											val:        "<<",
											ignoreCase: false,
										},
										&labeledExpr{
											pos:   position{line: 658, col: 10, offset: 27819},
											label: "id",
											expr: &actionExpr{
												pos: position{line: 1010, col: 7, offset: 41339},
												run: (*parser).callonInlineElement50,
												expr: &oneOrMoreExpr{
													pos: position{line: 1010, col: 7, offset: 41339},
													expr: &seqExpr{
														pos: position{line: 1010, col: 8, offset: 41340},
														exprs: []interface{}{
															&notExpr{
																pos: position{line: 1010, col: 8, offset: 41340},
																expr: &choiceExpr{
																	pos: position{line: 1028, col: 12, offset: 41683},
																	alternatives: []interface{}{
																		&litMatcher{
																			pos:        position{line: 1028, col: 12, offset: 41683},
																			val:        "\r\n",
																			ignoreCase: false,
																		},
																		&charClassMatcher{
																			pos:        position{line: 1028, col: 21, offset: 41692},
																			val:        "[\\r\\n]",
																			chars:      []rune{'\r', '\n'},
																			ignoreCase: false,
																			inverted:   false,
																		},
																	},
																},
															},
															&notExpr{
																pos: position{line: 1010, col: 17, offset: 41349},
																expr: &choiceExpr{
																	pos: position{line: 1024, col: 7, offset: 41621},
																	alternatives: []interface{}{
																		&litMatcher{
																			pos:        position{line: 1024, col: 7, offset: 41621},
																			val:        " ",
																			ignoreCase: false,
																		},
																		&actionExpr{
																			pos: position{line: 1024, col: 13, offset: 41627},
																			run: (*parser).callonInlineElement60,
																			expr: &litMatcher{
																				pos:        position{line: 1024, col: 13, offset: 41627},
																				val:        "\t",
																				ignoreCase: false,
																			},
																		},
																	},
																},
															},
															&notExpr{
																pos: position{line: 1010, col: 21, offset: 41353},
																expr: &litMatcher{
																	pos:        position{line: 1010, col: 22, offset: 41354},
																	val:        "[",
																	ignoreCase: false,
																},
															},
															&notExpr{
																pos: position{line: 1010, col: 26, offset: 41358},
																expr: &litMatcher{
																	pos:        position{line: 1010, col: 27, offset: 41359},
																	val:        "]",
																	ignoreCase: false,
																},
															},
															&notExpr{
																pos: position{line: 1010, col: 31, offset: 41363},
																expr: &litMatcher{
																	pos:        position{line: 1010, col: 32, offset: 41364},
																	val:        "<<",
																	ignoreCase: false,
																},
															},
															&notExpr{
																pos: position{line: 1010, col: 37, offset: 41369},
																expr: &litMatcher{
																	pos:        position{line: 1010, col: 38, offset: 41370},
																	val:        ">>",
																	ignoreCase: false,
																},
															},
															&notExpr{
																pos: position{line: 1010, col: 43, offset: 41375},
																expr: &litMatcher{
																	pos:        position{line: 1010, col: 44, offset: 41376},
																	val:        ",",
																	ignoreCase: false,
																},
															},
															&anyMatcher{
																line: 1010, col: 48, offset: 41380,
															},
														},
													},
												},
											},
										},
										&litMatcher{
											pos:        position{line: 658, col: 18, offset: 27827},
											val:        ">>",
											ignoreCase: false,
										},
									},
								},
							},
							&ruleRefExpr{
								pos:  position{line: 530, col: 57, offset: 20707},
								name: "Passthrough",
							},
							&actionExpr{
								pos: position{line: 710, col: 16, offset: 29412},
								run: (*parser).callonInlineElement75,
								expr: &seqExpr{
									pos: position{line: 710, col: 16, offset: 29412},
									exprs: []interface{}{
										&litMatcher{
											pos:        position{line: 710, col: 16, offset: 29412},
											val:        "image:",
											ignoreCase: false,
										},
										&notExpr{
											pos: position{line: 710, col: 25, offset: 29421},
											expr: &litMatcher{
												pos:        position{line: 710, col: 26, offset: 29422},
												val:        ":",
												ignoreCase: false,
											},
										},
										&labeledExpr{
											pos:   position{line: 710, col: 30, offset: 29426},
											label: "path",
											expr: &actionExpr{
												pos: position{line: 1006, col: 8, offset: 41269},
												run: (*parser).callonInlineElement81,
												expr: &oneOrMoreExpr{
													pos: position{line: 1006, col: 8, offset: 41269},
													expr: &seqExpr{
														pos: position{line: 1006, col: 9, offset: 41270},
														exprs: []interface{}{
															&notExpr{
																pos: position{line: 1006, col: 9, offset: 41270},
																expr: &choiceExpr{
																	pos: position{line: 1028, col: 12, offset: 41683},
																	alternatives: []interface{}{
																		&litMatcher{
																			pos:        position{line: 1028, col: 12, offset: 41683},
																			val:        "\r\n",
																			ignoreCase: false,
																		},
																		&charClassMatcher{
																			pos:        position{line: 1028, col: 21, offset: 41692},
																			val:        "[\\r\\n]",
																			chars:      []rune{'\r', '\n'},
																			ignoreCase: false,
																			inverted:   false,
																		},
																	},
																},
															},
															&notExpr{
																pos: position{line: 1006, col: 18, offset: 41279},
																expr: &choiceExpr{
																	pos: position{line: 1024, col: 7, offset: 41621},
																	alternatives: []interface{}{
																		&litMatcher{
																			pos:        position{line: 1024, col: 7, offset: 41621},
																			val:        " ",
																			ignoreCase: false,
																		},
																		&actionExpr{
																			pos: position{line: 1024, col: 13, offset: 41627},
																			run: (*parser).callonInlineElement91,
																			expr: &litMatcher{
																				pos:        position{line: 1024, col: 13, offset: 41627},
																				val:        "\t",
																				ignoreCase: false,
																			},
																		},
																	},
																},
															},
															&notExpr{
																pos: position{line: 1006, col: 22, offset: 41283},
																expr: &litMatcher{
																	pos:        position{line: 1006, col: 23, offset: 41284},
																	val:        "[",
																	ignoreCase: false,
																},
															},
															&notExpr{
																pos: position{line: 1006, col: 27, offset: 41288},
																expr: &litMatcher{
																	pos:        position{line: 1006, col: 28, offset: 41289},
																	val:        "]",
																	ignoreCase: false,
																},
															},
															&anyMatcher{
																line: 1006, col: 32, offset: 41293,
															},
														},
													},
												},
											},
										},
										&labeledExpr{
											pos:   position{line: 710, col: 41, offset: 29437},
											label: "attributes",
											expr: &choiceExpr{
												pos: position{line: 715, col: 20, offset: 29682},
												alternatives: []interface{}{
													&actionExpr{
														pos: position{line: 715, col: 20, offset: 29682},
														run: (*parser).callonInlineElement100,
														expr: &seqExpr{
															pos: position{line: 715, col: 20, offset: 29682},
															exprs: []interface{}{
																&litMatcher{
																	pos:        position{line: 715, col: 20, offset: 29682},
																	val:        "[",
																	ignoreCase: false,
																},
																&labeledExpr{
																	pos:   position{line: 715, col: 24, offset: 29686},
																	label: "alt",
																	expr: &actionExpr{
																		pos: position{line: 732, col: 19, offset: 30461},
																		run: (*parser).callonInlineElement104,
																		expr: &oneOrMoreExpr{
																			pos: position{line: 732, col: 19, offset: 30461},
																			expr: &seqExpr{
																				pos: position{line: 732, col: 20, offset: 30462},
																				exprs: []interface{}{
																					&notExpr{
																						pos: position{line: 732, col: 20, offset: 30462},
																						expr: &litMatcher{
																							pos:        position{line: 732, col: 21, offset: 30463},
																							val:        ",",
																							ignoreCase: false,
																						},
																					},
																					&notExpr{
																						pos: position{line: 732, col: 25, offset: 30467},
																						expr: &litMatcher{
																							pos:        position{line: 732, col: 26, offset: 30468},
																							val:        "=",
																							ignoreCase: false,
																						},
																					},
																					&notExpr{
																						pos: position{line: 732, col: 30, offset: 30472},
																						expr: &litMatcher{
																							pos:        position{line: 732, col: 31, offset: 30473},
																							val:        "]",
																							ignoreCase: false,
																						},
																					},
																					&anyMatcher{
																						line: 732, col: 35, offset: 30477,
																					},
																				},
																			},
																		},
																	},
																},
																&litMatcher{
																	pos:        position{line: 715, col: 45, offset: 29707},
																	val:        ",",
																	ignoreCase: false,
																},
																&labeledExpr{
																	pos:   position{line: 716, col: 9, offset: 29719},
																	label: "width",
																	expr: &actionExpr{
																		pos: position{line: 732, col: 19, offset: 30461},
																		run: (*parser).callonInlineElement116,
																		expr: &oneOrMoreExpr{
																			pos: position{line: 732, col: 19, offset: 30461},
																			expr: &seqExpr{
																				pos: position{line: 732, col: 20, offset: 30462},
																				exprs: []interface{}{
																					&notExpr{
																						pos: position{line: 732, col: 20, offset: 30462},
																						expr: &litMatcher{
																							pos:        position{line: 732, col: 21, offset: 30463},
																							val:        ",",
																							ignoreCase: false,
																						},
																					},
																					&notExpr{
																						pos: position{line: 732, col: 25, offset: 30467},
																						expr: &litMatcher{
																							pos:        position{line: 732, col: 26, offset: 30468},
																							val:        "=",
																							ignoreCase: false,
																						},
																					},
																					&notExpr{
																						pos: position{line: 732, col: 30, offset: 30472},
																						expr: &litMatcher{
																							pos:        position{line: 732, col: 31, offset: 30473},
																							val:        "]",
																							ignoreCase: false,
																						},
																					},
																					&anyMatcher{
																						line: 732, col: 35, offset: 30477,
																					},
																				},
																			},
																		},
																	},
																},
																&litMatcher{
																	pos:        position{line: 716, col: 33, offset: 29743},
																	val:        ",",
																	ignoreCase: false,
																},
																&labeledExpr{
																	pos:   position{line: 717, col: 9, offset: 29755},
																	label: "height",
																	expr: &actionExpr{
																		pos: position{line: 732, col: 19, offset: 30461},
																		run: (*parser).callonInlineElement128,
																		expr: &oneOrMoreExpr{
																			pos: position{line: 732, col: 19, offset: 30461},
																			expr: &seqExpr{
																				pos: position{line: 732, col: 20, offset: 30462},
																				exprs: []interface{}{
																					&notExpr{
																						pos: position{line: 732, col: 20, offset: 30462},
																						expr: &litMatcher{
																							pos:        position{line: 732, col: 21, offset: 30463},
																							val:        ",",
																							ignoreCase: false,
																						},
																					},
																					&notExpr{
																						pos: position{line: 732, col: 25, offset: 30467},
																						expr: &litMatcher{
																							pos:        position{line: 732, col: 26, offset: 30468},
																							val:        "=",
																							ignoreCase: false,
																						},
																					},
																					&notExpr{
																						pos: position{line: 732, col: 30, offset: 30472},
																						expr: &litMatcher{
																							pos:        position{line: 732, col: 31, offset: 30473},
																							val:        "]",
																							ignoreCase: false,
																						},
																					},
																					&anyMatcher{
																						line: 732, col: 35, offset: 30477,
																					},
																				},
																			},
																		},
																	},
																},
																&zeroOrOneExpr{
																	pos: position{line: 717, col: 33, offset: 29779},
																	expr: &litMatcher{
																		pos:        position{line: 717, col: 33, offset: 29779},
																		val:        ",",
																		ignoreCase: false,
																	},
																},
																&labeledExpr{
																	pos:   position{line: 718, col: 9, offset: 29792},
																	label: "otherAttrs",
																	expr: &zeroOrMoreExpr{
																		pos: position{line: 718, col: 20, offset: 29803},
																		expr: &choiceExpr{
																			pos: position{line: 185, col: 21, offset: 6867},
																			alternatives: []interface{}{
																				&actionExpr{
																					pos: position{line: 185, col: 21, offset: 6867},
																					run: (*parser).callonInlineElement143,
																					expr: &seqExpr{
																						pos: position{line: 185, col: 21, offset: 6867},
																						exprs: []interface{}{
																							&labeledExpr{
																								pos:   position{line: 185, col: 21, offset: 6867},
																								label: "key",
																								expr: &actionExpr{
																									pos: position{line: 191, col: 17, offset: 7127},
																									run: (*parser).callonInlineElement146,
																									expr: &seqExpr{
																										pos: position{line: 191, col: 17, offset: 7127},
																										exprs: []interface{}{
																											&notExpr{
																												pos: position{line: 191, col: 17, offset: 7127},
																												expr: &actionExpr{
																													pos: position{line: 231, col: 14, offset: 8674},
																													run: (*parser).callonInlineElement149,
																													expr: &litMatcher{
																														pos:        position{line: 231, col: 14, offset: 8674},
																														val:        "verse",
																														ignoreCase: false,
																													},
																												},
																											},
																											&notExpr{
																												pos: position{line: 191, col: 28, offset: 7138},
																												expr: &actionExpr{
																													pos: position{line: 975, col: 16, offset: 40537},
																													run: (*parser).callonInlineElement152,
																													expr: &litMatcher{
																														pos:        position{line: 975, col: 16, offset: 40537},
																														val:        "literal",
																														ignoreCase: false,
																													},
																												},
																											},
																											&labeledExpr{
																												pos:   position{line: 191, col: 41, offset: 7151},
																												label: "key",
																												expr: &oneOrMoreExpr{
																													pos: position{line: 191, col: 45, offset: 7155},
																													expr: &seqExpr{
																														pos: position{line: 191, col: 46, offset: 7156},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 191, col: 46, offset: 7156},
																																expr: &litMatcher{
																																	pos:        position{line: 191, col: 47, offset: 7157},
																																	val:        "=",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 191, col: 51, offset: 7161},
																																expr: &litMatcher{
																																	pos:        position{line: 191, col: 52, offset: 7162},
																																	val:        ",",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 191, col: 56, offset: 7166},
																																expr: &litMatcher{
																																	pos:        position{line: 191, col: 57, offset: 7167},
																																	val:        "]",
																																	ignoreCase: false,
																																},
																															},
																															&anyMatcher{
																																line: 191, col: 61, offset: 7171,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&litMatcher{
																								pos:        position{line: 185, col: 40, offset: 6886},
																								val:        "=",
																								ignoreCase: false,
																							},
																							&labeledExpr{
																								pos:   position{line: 185, col: 44, offset: 6890},
																								label: "value",
																								expr: &actionExpr{
																									pos: position{line: 195, col: 19, offset: 7230},
																									run: (*parser).callonInlineElement166,
																									expr: &labeledExpr{
																										pos:   position{line: 195, col: 19, offset: 7230},
																										label: "value",
																										expr: &zeroOrMoreExpr{
																											pos: position{line: 195, col: 25, offset: 7236},
																											expr: &seqExpr{
																												pos: position{line: 195, col: 26, offset: 7237},
																												exprs: []interface{}{
																													&notExpr{
																														pos: position{line: 195, col: 26, offset: 7237},
																														expr: &litMatcher{
																															pos:        position{line: 195, col: 27, offset: 7238},
																															val:        "=",
																															ignoreCase: false,
																														},
																													},
																													&notExpr{
																														pos: position{line: 195, col: 31, offset: 7242},
																														expr: &litMatcher{
																															pos:        position{line: 195, col: 32, offset: 7243},
																															val:        ",",
																															ignoreCase: false,
																														},
																													},
																													&notExpr{
																														pos: position{line: 195, col: 36, offset: 7247},
																														expr: &litMatcher{
																															pos:        position{line: 195, col: 37, offset: 7248},
																															val:        "]",
																															ignoreCase: false,
																														},
																													},
																													&anyMatcher{
																														line: 195, col: 41, offset: 7252,
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&zeroOrOneExpr{
																								pos: position{line: 185, col: 67, offset: 6913},
																								expr: &litMatcher{
																									pos:        position{line: 185, col: 67, offset: 6913},
																									val:        ",",
																									ignoreCase: false,
																								},
																							},
																							&zeroOrMoreExpr{
																								pos: position{line: 185, col: 72, offset: 6918},
																								expr: &choiceExpr{
																									pos: position{line: 1024, col: 7, offset: 41621},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1024, col: 7, offset: 41621},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1024, col: 13, offset: 41627},
																											run: (*parser).callonInlineElement182,
																											expr: &litMatcher{
																												pos:        position{line: 1024, col: 13, offset: 41627},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																				&actionExpr{
																					pos: position{line: 187, col: 5, offset: 7002},
																					run: (*parser).callonInlineElement184,
																					expr: &seqExpr{
																						pos: position{line: 187, col: 5, offset: 7002},
																						exprs: []interface{}{
																							&labeledExpr{
																								pos:   position{line: 187, col: 5, offset: 7002},
																								label: "key",
																								expr: &actionExpr{
																									pos: position{line: 191, col: 17, offset: 7127},
																									run: (*parser).callonInlineElement187,
																									expr: &seqExpr{
																										pos: position{line: 191, col: 17, offset: 7127},
																										exprs: []interface{}{
																											&notExpr{
																												pos: position{line: 191, col: 17, offset: 7127},
																												expr: &actionExpr{
																													pos: position{line: 231, col: 14, offset: 8674},
																													run: (*parser).callonInlineElement190,
																													expr: &litMatcher{
																														pos:        position{line: 231, col: 14, offset: 8674},
																														val:        "verse",
																														ignoreCase: false,
																													},
																												},
																											},
																											&notExpr{
																												pos: position{line: 191, col: 28, offset: 7138},
																												expr: &actionExpr{
																													pos: position{line: 975, col: 16, offset: 40537},
																													run: (*parser).callonInlineElement193,
																													expr: &litMatcher{
																														pos:        position{line: 975, col: 16, offset: 40537},
																														val:        "literal",
																														ignoreCase: false,
																													},
																												},
																											},
																											&labeledExpr{
																												pos:   position{line: 191, col: 41, offset: 7151},
																												label: "key",
																												expr: &oneOrMoreExpr{
																													pos: position{line: 191, col: 45, offset: 7155},
																													expr: &seqExpr{
																														pos: position{line: 191, col: 46, offset: 7156},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 191, col: 46, offset: 7156},
																																expr: &litMatcher{
																																	pos:        position{line: 191, col: 47, offset: 7157},
																																	val:        "=",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 191, col: 51, offset: 7161},
																																expr: &litMatcher{
																																	pos:        position{line: 191, col: 52, offset: 7162},
																																	val:        ",",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 191, col: 56, offset: 7166},
																																expr: &litMatcher{
																																	pos:        position{line: 191, col: 57, offset: 7167},
																																	val:        "]",
																																	ignoreCase: false,
																																},
																															},
																															&anyMatcher{
																																line: 191, col: 61, offset: 7171,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&zeroOrOneExpr{
																								pos: position{line: 187, col: 24, offset: 7021},
																								expr: &litMatcher{
																									pos:        position{line: 187, col: 24, offset: 7021},
																									val:        ",",
																									ignoreCase: false,
																								},
																							},
																							&zeroOrMoreExpr{
																								pos: position{line: 187, col: 29, offset: 7026},
																								expr: &choiceExpr{
																									pos: position{line: 1024, col: 7, offset: 41621},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1024, col: 7, offset: 41621},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1024, col: 13, offset: 41627},
																											run: (*parser).callonInlineElement210,
																											expr: &litMatcher{
																												pos:        position{line: 1024, col: 13, offset: 41627},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																},
																&litMatcher{
																	pos:        position{line: 718, col: 40, offset: 29823},
																	val:        "]",
																	ignoreCase: false,
																},
															},
														},
													},
													&actionExpr{
														pos: position{line: 720, col: 9, offset: 29929},
														run: (*parser).callonInlineElement213,
														expr: &seqExpr{
															pos: position{line: 720, col: 9, offset: 29929},
															exprs: []interface{}{
																&litMatcher{
																	pos:        position{line: 720, col: 9, offset: 29929},
																	val:        "[",
																	ignoreCase: false,
																},
																&labeledExpr{
																	pos:   position{line: 720, col: 13, offset: 29933},
																	label: "alt",
																	expr: &actionExpr{
																		pos: position{line: 732, col: 19, offset: 30461},
																		run: (*parser).callonInlineElement217,
																		expr: &oneOrMoreExpr{
																			pos: position{line: 732, col: 19, offset: 30461},
																			expr: &seqExpr{
																				pos: position{line: 732, col: 20, offset: 30462},
																				exprs: []interface{}{
																					&notExpr{
																						pos: position{line: 732, col: 20, offset: 30462},
																						expr: &litMatcher{
																							pos:        position{line: 732, col: 21, offset: 30463},
																							val:        ",",
																							ignoreCase: false,
																						},
																					},
																					&notExpr{
																						pos: position{line: 732, col: 25, offset: 30467},
																						expr: &litMatcher{
																							pos:        position{line: 732, col: 26, offset: 30468},
																							val:        "=",
																							ignoreCase: false,
																						},
																					},
																					&notExpr{
																						pos: position{line: 732, col: 30, offset: 30472},
																						expr: &litMatcher{
																							pos:        position{line: 732, col: 31, offset: 30473},
																							val:        "]",
																							ignoreCase: false,
																						},
																					},
																					&anyMatcher{
																						line: 732, col: 35, offset: 30477,
																					},
																				},
																			},
																		},
																	},
																},
																&litMatcher{
																	pos:        position{line: 720, col: 34, offset: 29954},
																	val:        ",",
																	ignoreCase: false,
																},
																&labeledExpr{
																	pos:   position{line: 721, col: 9, offset: 29966},
																	label: "width",
																	expr: &actionExpr{
																		pos: position{line: 732, col: 19, offset: 30461},
																		run: (*parser).callonInlineElement229,
																		expr: &oneOrMoreExpr{
																			pos: position{line: 732, col: 19, offset: 30461},
																			expr: &seqExpr{
																				pos: position{line: 732, col: 20, offset: 30462},
																				exprs: []interface{}{
																					&notExpr{
																						pos: position{line: 732, col: 20, offset: 30462},
																						expr: &litMatcher{
																							pos:        position{line: 732, col: 21, offset: 30463},
																							val:        ",",
																							ignoreCase: false,
																						},
																					},
																					&notExpr{
																						pos: position{line: 732, col: 25, offset: 30467},
																						expr: &litMatcher{
																							pos:        position{line: 732, col: 26, offset: 30468},
																							val:        "=",
																							ignoreCase: false,
																						},
																					},
																					&notExpr{
																						pos: position{line: 732, col: 30, offset: 30472},
																						expr: &litMatcher{
																							pos:        position{line: 732, col: 31, offset: 30473},
																							val:        "]",
																							ignoreCase: false,
																						},
																					},
																					&anyMatcher{
																						line: 732, col: 35, offset: 30477,
																					},
																				},
																			},
																		},
																	},
																},
																&zeroOrOneExpr{
																	pos: position{line: 721, col: 32, offset: 29989},
																	expr: &litMatcher{
																		pos:        position{line: 721, col: 32, offset: 29989},
																		val:        ",",
																		ignoreCase: false,
																	},
																},
																&labeledExpr{
																	pos:   position{line: 722, col: 9, offset: 30002},
																	label: "otherAttrs",
																	expr: &zeroOrMoreExpr{
																		pos: position{line: 722, col: 20, offset: 30013},
																		expr: &choiceExpr{
																			pos: position{line: 185, col: 21, offset: 6867},
																			alternatives: []interface{}{
																				&actionExpr{
																					pos: position{line: 185, col: 21, offset: 6867},
																					run: (*parser).callonInlineElement244,
																					expr: &seqExpr{
																						pos: position{line: 185, col: 21, offset: 6867},
																						exprs: []interface{}{
																							&labeledExpr{
																								pos:   position{line: 185, col: 21, offset: 6867},
																								label: "key",
																								expr: &actionExpr{
																									pos: position{line: 191, col: 17, offset: 7127},
																									run: (*parser).callonInlineElement247,
																									expr: &seqExpr{
																										pos: position{line: 191, col: 17, offset: 7127},
																										exprs: []interface{}{
																											&notExpr{
																												pos: position{line: 191, col: 17, offset: 7127},
																												expr: &actionExpr{
																													pos: position{line: 231, col: 14, offset: 8674},
																													run: (*parser).callonInlineElement250,
																													expr: &litMatcher{
																														pos:        position{line: 231, col: 14, offset: 8674},
																														val:        "verse",
																														ignoreCase: false,
																													},
																												},
																											},
																											&notExpr{
																												pos: position{line: 191, col: 28, offset: 7138},
																												expr: &actionExpr{
																													pos: position{line: 975, col: 16, offset: 40537},
																													run: (*parser).callonInlineElement253,
																													expr: &litMatcher{
																														pos:        position{line: 975, col: 16, offset: 40537},
																														val:        "literal",
																														ignoreCase: false,
																													},
																												},
																											},
																											&labeledExpr{
																												pos:   position{line: 191, col: 41, offset: 7151},
																												label: "key",
																												expr: &oneOrMoreExpr{
																													pos: position{line: 191, col: 45, offset: 7155},
																													expr: &seqExpr{
																														pos: position{line: 191, col: 46, offset: 7156},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 191, col: 46, offset: 7156},
																																expr: &litMatcher{
																																	pos:        position{line: 191, col: 47, offset: 7157},
																																	val:        "=",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 191, col: 51, offset: 7161},
																																expr: &litMatcher{
																																	pos:        position{line: 191, col: 52, offset: 7162},
																																	val:        ",",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 191, col: 56, offset: 7166},
																																expr: &litMatcher{
																																	pos:        position{line: 191, col: 57, offset: 7167},
																																	val:        "]",
																																	ignoreCase: false,
																																},
																															},
																															&anyMatcher{
																																line: 191, col: 61, offset: 7171,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&litMatcher{
																								pos:        position{line: 185, col: 40, offset: 6886},
																								val:        "=",
																								ignoreCase: false,
																							},
																							&labeledExpr{
																								pos:   position{line: 185, col: 44, offset: 6890},
																								label: "value",
																								expr: &actionExpr{
																									pos: position{line: 195, col: 19, offset: 7230},
																									run: (*parser).callonInlineElement267,
																									expr: &labeledExpr{
																										pos:   position{line: 195, col: 19, offset: 7230},
																										label: "value",
																										expr: &zeroOrMoreExpr{
																											pos: position{line: 195, col: 25, offset: 7236},
																											expr: &seqExpr{
																												pos: position{line: 195, col: 26, offset: 7237},
																												exprs: []interface{}{
																													&notExpr{
																														pos: position{line: 195, col: 26, offset: 7237},
																														expr: &litMatcher{
																															pos:        position{line: 195, col: 27, offset: 7238},
																															val:        "=",
																															ignoreCase: false,
																														},
																													},
																													&notExpr{
																														pos: position{line: 195, col: 31, offset: 7242},
																														expr: &litMatcher{
																															pos:        position{line: 195, col: 32, offset: 7243},
																															val:        ",",
																															ignoreCase: false,
																														},
																													},
																													&notExpr{
																														pos: position{line: 195, col: 36, offset: 7247},
																														expr: &litMatcher{
																															pos:        position{line: 195, col: 37, offset: 7248},
																															val:        "]",
																															ignoreCase: false,
																														},
																													},
																													&anyMatcher{
																														line: 195, col: 41, offset: 7252,
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&zeroOrOneExpr{
																								pos: position{line: 185, col: 67, offset: 6913},
																								expr: &litMatcher{
																									pos:        position{line: 185, col: 67, offset: 6913},
																									val:        ",",
																									ignoreCase: false,
																								},
																							},
																							&zeroOrMoreExpr{
																								pos: position{line: 185, col: 72, offset: 6918},
																								expr: &choiceExpr{
																									pos: position{line: 1024, col: 7, offset: 41621},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1024, col: 7, offset: 41621},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1024, col: 13, offset: 41627},
																											run: (*parser).callonInlineElement283,
																											expr: &litMatcher{
																												pos:        position{line: 1024, col: 13, offset: 41627},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																				&actionExpr{
																					pos: position{line: 187, col: 5, offset: 7002},
																					run: (*parser).callonInlineElement285,
																					expr: &seqExpr{
																						pos: position{line: 187, col: 5, offset: 7002},
																						exprs: []interface{}{
																							&labeledExpr{
																								pos:   position{line: 187, col: 5, offset: 7002},
																								label: "key",
																								expr: &actionExpr{
																									pos: position{line: 191, col: 17, offset: 7127},
																									run: (*parser).callonInlineElement288,
																									expr: &seqExpr{
																										pos: position{line: 191, col: 17, offset: 7127},
																										exprs: []interface{}{
																											&notExpr{
																												pos: position{line: 191, col: 17, offset: 7127},
																												expr: &actionExpr{
																													pos: position{line: 231, col: 14, offset: 8674},
																													run: (*parser).callonInlineElement291,
																													expr: &litMatcher{
																														pos:        position{line: 231, col: 14, offset: 8674},
																														val:        "verse",
																														ignoreCase: false,
																													},
																												},
																											},
																											&notExpr{
																												pos: position{line: 191, col: 28, offset: 7138},
																												expr: &actionExpr{
																													pos: position{line: 975, col: 16, offset: 40537},
																													run: (*parser).callonInlineElement294,
																													expr: &litMatcher{
																														pos:        position{line: 975, col: 16, offset: 40537},
																														val:        "literal",
																														ignoreCase: false,
																													},
																												},
																											},
																											&labeledExpr{
																												pos:   position{line: 191, col: 41, offset: 7151},
																												label: "key",
																												expr: &oneOrMoreExpr{
																													pos: position{line: 191, col: 45, offset: 7155},
																													expr: &seqExpr{
																														pos: position{line: 191, col: 46, offset: 7156},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 191, col: 46, offset: 7156},
																																expr: &litMatcher{
																																	pos:        position{line: 191, col: 47, offset: 7157},
																																	val:        "=",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 191, col: 51, offset: 7161},
																																expr: &litMatcher{
																																	pos:        position{line: 191, col: 52, offset: 7162},
																																	val:        ",",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 191, col: 56, offset: 7166},
																																expr: &litMatcher{
																																	pos:        position{line: 191, col: 57, offset: 7167},
																																	val:        "]",
																																	ignoreCase: false,
																																},
																															},
																															&anyMatcher{
																																line: 191, col: 61, offset: 7171,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&zeroOrOneExpr{
																								pos: position{line: 187, col: 24, offset: 7021},
																								expr: &litMatcher{
																									pos:        position{line: 187, col: 24, offset: 7021},
																									val:        ",",
																									ignoreCase: false,
																								},
																							},
																							&zeroOrMoreExpr{
																								pos: position{line: 187, col: 29, offset: 7026},
																								expr: &choiceExpr{
																									pos: position{line: 1024, col: 7, offset: 41621},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1024, col: 7, offset: 41621},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1024, col: 13, offset: 41627},
																											run: (*parser).callonInlineElement311,
																											expr: &litMatcher{
																												pos:        position{line: 1024, col: 13, offset: 41627},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																},
																&litMatcher{
																	pos:        position{line: 722, col: 40, offset: 30033},
																	val:        "]",
																	ignoreCase: false,
																},
															},
														},
													},
													&actionExpr{
														pos: position{line: 724, col: 9, offset: 30136},
														run: (*parser).callonInlineElement314,
														expr: &seqExpr{
															pos: position{line: 724, col: 9, offset: 30136},
															exprs: []interface{}{
																&litMatcher{
																	pos:        position{line: 724, col: 9, offset: 30136},
																	val:        "[",
																	ignoreCase: false,
																},
																&labeledExpr{
																	pos:   position{line: 724, col: 13, offset: 30140},
																	label: "alt",
																	expr: &actionExpr{
																		pos: position{line: 732, col: 19, offset: 30461},
																		run: (*parser).callonInlineElement318,
																		expr: &oneOrMoreExpr{
																			pos: position{line: 732, col: 19, offset: 30461},
																			expr: &seqExpr{
																				pos: position{line: 732, col: 20, offset: 30462},
																				exprs: []interface{}{
																					&notExpr{
																						pos: position{line: 732, col: 20, offset: 30462},
																						expr: &litMatcher{
																							pos:        position{line: 732, col: 21, offset: 30463},
																							val:        ",",
																							ignoreCase: false,
																						},
																					},
																					&notExpr{
																						pos: position{line: 732, col: 25, offset: 30467},
																						expr: &litMatcher{
																							pos:        position{line: 732, col: 26, offset: 30468},
																							val:        "=",
																							ignoreCase: false,
																						},
																					},
																					&notExpr{
																						pos: position{line: 732, col: 30, offset: 30472},
																						expr: &litMatcher{
																							pos:        position{line: 732, col: 31, offset: 30473},
																							val:        "]",
																							ignoreCase: false,
																						},
																					},
																					&anyMatcher{
																						line: 732, col: 35, offset: 30477,
																					},
																				},
																			},
																		},
																	},
																},
																&zeroOrOneExpr{
																	pos: position{line: 724, col: 34, offset: 30161},
																	expr: &litMatcher{
																		pos:        position{line: 724, col: 34, offset: 30161},
																		val:        ",",
																		ignoreCase: false,
																	},
																},
																&labeledExpr{
																	pos:   position{line: 725, col: 9, offset: 30174},
																	label: "otherAttrs",
																	expr: &zeroOrMoreExpr{
																		pos: position{line: 725, col: 20, offset: 30185},
																		expr: &choiceExpr{
																			pos: position{line: 185, col: 21, offset: 6867},
																			alternatives: []interface{}{
																				&actionExpr{
																					pos: position{line: 185, col: 21, offset: 6867},
																					run: (*parser).callonInlineElement333,
																					expr: &seqExpr{
																						pos: position{line: 185, col: 21, offset: 6867},
																						exprs: []interface{}{
																							&labeledExpr{
																								pos:   position{line: 185, col: 21, offset: 6867},
																								label: "key",
																								expr: &actionExpr{
																									pos: position{line: 191, col: 17, offset: 7127},
																									run: (*parser).callonInlineElement336,
																									expr: &seqExpr{
																										pos: position{line: 191, col: 17, offset: 7127},
																										exprs: []interface{}{
																											&notExpr{
																												pos: position{line: 191, col: 17, offset: 7127},
																												expr: &actionExpr{
																													pos: position{line: 231, col: 14, offset: 8674},
																													run: (*parser).callonInlineElement339,
																													expr: &litMatcher{
																														pos:        position{line: 231, col: 14, offset: 8674},
																														val:        "verse",
																														ignoreCase: false,
																													},
																												},
																											},
																											&notExpr{
																												pos: position{line: 191, col: 28, offset: 7138},
																												expr: &actionExpr{
																													pos: position{line: 975, col: 16, offset: 40537},
																													run: (*parser).callonInlineElement342,
																													expr: &litMatcher{
																														pos:        position{line: 975, col: 16, offset: 40537},
																														val:        "literal",
																														ignoreCase: false,
																													},
																												},
																											},
																											&labeledExpr{
																												pos:   position{line: 191, col: 41, offset: 7151},
																												label: "key",
																												expr: &oneOrMoreExpr{
																													pos: position{line: 191, col: 45, offset: 7155},
																													expr: &seqExpr{
																														pos: position{line: 191, col: 46, offset: 7156},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 191, col: 46, offset: 7156},
																																expr: &litMatcher{
																																	pos:        position{line: 191, col: 47, offset: 7157},
																																	val:        "=",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 191, col: 51, offset: 7161},
																																expr: &litMatcher{
																																	pos:        position{line: 191, col: 52, offset: 7162},
																																	val:        ",",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 191, col: 56, offset: 7166},
																																expr: &litMatcher{
																																	pos:        position{line: 191, col: 57, offset: 7167},
																																	val:        "]",
																																	ignoreCase: false,
																																},
																															},
																															&anyMatcher{
																																line: 191, col: 61, offset: 7171,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&litMatcher{
																								pos:        position{line: 185, col: 40, offset: 6886},
																								val:        "=",
																								ignoreCase: false,
																							},
																							&labeledExpr{
																								pos:   position{line: 185, col: 44, offset: 6890},
																								label: "value",
																								expr: &actionExpr{
																									pos: position{line: 195, col: 19, offset: 7230},
																									run: (*parser).callonInlineElement356,
																									expr: &labeledExpr{
																										pos:   position{line: 195, col: 19, offset: 7230},
																										label: "value",
																										expr: &zeroOrMoreExpr{
																											pos: position{line: 195, col: 25, offset: 7236},
																											expr: &seqExpr{
																												pos: position{line: 195, col: 26, offset: 7237},
																												exprs: []interface{}{
																													&notExpr{
																														pos: position{line: 195, col: 26, offset: 7237},
																														expr: &litMatcher{
																															pos:        position{line: 195, col: 27, offset: 7238},
																															val:        "=",
																															ignoreCase: false,
																														},
																													},
																													&notExpr{
																														pos: position{line: 195, col: 31, offset: 7242},
																														expr: &litMatcher{
																															pos:        position{line: 195, col: 32, offset: 7243},
																															val:        ",",
																															ignoreCase: false,
																														},
																													},
																													&notExpr{
																														pos: position{line: 195, col: 36, offset: 7247},
																														expr: &litMatcher{
																															pos:        position{line: 195, col: 37, offset: 7248},
																															val:        "]",
																															ignoreCase: false,
																														},
																													},
																													&anyMatcher{
																														line: 195, col: 41, offset: 7252,
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&zeroOrOneExpr{
																								pos: position{line: 185, col: 67, offset: 6913},
																								expr: &litMatcher{
																									pos:        position{line: 185, col: 67, offset: 6913},
																									val:        ",",
																									ignoreCase: false,
																								},
																							},
																							&zeroOrMoreExpr{
																								pos: position{line: 185, col: 72, offset: 6918},
																								expr: &choiceExpr{
																									pos: position{line: 1024, col: 7, offset: 41621},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1024, col: 7, offset: 41621},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1024, col: 13, offset: 41627},
																											run: (*parser).callonInlineElement372,
																											expr: &litMatcher{
																												pos:        position{line: 1024, col: 13, offset: 41627},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																				&actionExpr{
																					pos: position{line: 187, col: 5, offset: 7002},
																					run: (*parser).callonInlineElement374,
																					expr: &seqExpr{
																						pos: position{line: 187, col: 5, offset: 7002},
																						exprs: []interface{}{
																							&labeledExpr{
																								pos:   position{line: 187, col: 5, offset: 7002},
																								label: "key",
																								expr: &actionExpr{
																									pos: position{line: 191, col: 17, offset: 7127},
																									run: (*parser).callonInlineElement377,
																									expr: &seqExpr{
																										pos: position{line: 191, col: 17, offset: 7127},
																										exprs: []interface{}{
																											&notExpr{
																												pos: position{line: 191, col: 17, offset: 7127},
																												expr: &actionExpr{
																													pos: position{line: 231, col: 14, offset: 8674},
																													run: (*parser).callonInlineElement380,
																													expr: &litMatcher{
																														pos:        position{line: 231, col: 14, offset: 8674},
																														val:        "verse",
																														ignoreCase: false,
																													},
																												},
																											},
																											&notExpr{
																												pos: position{line: 191, col: 28, offset: 7138},
																												expr: &actionExpr{
																													pos: position{line: 975, col: 16, offset: 40537},
																													run: (*parser).callonInlineElement383,
																													expr: &litMatcher{
																														pos:        position{line: 975, col: 16, offset: 40537},
																														val:        "literal",
																														ignoreCase: false,
																													},
																												},
																											},
																											&labeledExpr{
																												pos:   position{line: 191, col: 41, offset: 7151},
																												label: "key",
																												expr: &oneOrMoreExpr{
																													pos: position{line: 191, col: 45, offset: 7155},
																													expr: &seqExpr{
																														pos: position{line: 191, col: 46, offset: 7156},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 191, col: 46, offset: 7156},
																																expr: &litMatcher{
																																	pos:        position{line: 191, col: 47, offset: 7157},
																																	val:        "=",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 191, col: 51, offset: 7161},
																																expr: &litMatcher{
																																	pos:        position{line: 191, col: 52, offset: 7162},
																																	val:        ",",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 191, col: 56, offset: 7166},
																																expr: &litMatcher{
																																	pos:        position{line: 191, col: 57, offset: 7167},
																																	val:        "]",
																																	ignoreCase: false,
																																},
																															},
																															&anyMatcher{
																																line: 191, col: 61, offset: 7171,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&zeroOrOneExpr{
																								pos: position{line: 187, col: 24, offset: 7021},
																								expr: &litMatcher{
																									pos:        position{line: 187, col: 24, offset: 7021},
																									val:        ",",
																									ignoreCase: false,
																								},
																							},
																							&zeroOrMoreExpr{
																								pos: position{line: 187, col: 29, offset: 7026},
																								expr: &choiceExpr{
																									pos: position{line: 1024, col: 7, offset: 41621},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1024, col: 7, offset: 41621},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1024, col: 13, offset: 41627},
																											run: (*parser).callonInlineElement400,
																											expr: &litMatcher{
																												pos:        position{line: 1024, col: 13, offset: 41627},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																},
																&litMatcher{
																	pos:        position{line: 725, col: 40, offset: 30205},
																	val:        "]",
																	ignoreCase: false,
																},
															},
														},
													},
													&actionExpr{
														pos: position{line: 727, col: 9, offset: 30306},
														run: (*parser).callonInlineElement403,
														expr: &seqExpr{
															pos: position{line: 727, col: 9, offset: 30306},
															exprs: []interface{}{
																&litMatcher{
																	pos:        position{line: 727, col: 9, offset: 30306},
																	val:        "[",
																	ignoreCase: false,
																},
																&labeledExpr{
																	pos:   position{line: 727, col: 13, offset: 30310},
																	label: "otherAttrs",
																	expr: &zeroOrMoreExpr{
																		pos: position{line: 727, col: 24, offset: 30321},
																		expr: &choiceExpr{
																			pos: position{line: 185, col: 21, offset: 6867},
																			alternatives: []interface{}{
																				&actionExpr{
																					pos: position{line: 185, col: 21, offset: 6867},
																					run: (*parser).callonInlineElement409,
																					expr: &seqExpr{
																						pos: position{line: 185, col: 21, offset: 6867},
																						exprs: []interface{}{
																							&labeledExpr{
																								pos:   position{line: 185, col: 21, offset: 6867},
																								label: "key",
																								expr: &actionExpr{
																									pos: position{line: 191, col: 17, offset: 7127},
																									run: (*parser).callonInlineElement412,
																									expr: &seqExpr{
																										pos: position{line: 191, col: 17, offset: 7127},
																										exprs: []interface{}{
																											&notExpr{
																												pos: position{line: 191, col: 17, offset: 7127},
																												expr: &actionExpr{
																													pos: position{line: 231, col: 14, offset: 8674},
																													run: (*parser).callonInlineElement415,
																													expr: &litMatcher{
																														pos:        position{line: 231, col: 14, offset: 8674},
																														val:        "verse",
																														ignoreCase: false,
																													},
																												},
																											},
																											&notExpr{
																												pos: position{line: 191, col: 28, offset: 7138},
																												expr: &actionExpr{
																													pos: position{line: 975, col: 16, offset: 40537},
																													run: (*parser).callonInlineElement418,
																													expr: &litMatcher{
																														pos:        position{line: 975, col: 16, offset: 40537},
																														val:        "literal",
																														ignoreCase: false,
																													},
																												},
																											},
																											&labeledExpr{
																												pos:   position{line: 191, col: 41, offset: 7151},
																												label: "key",
																												expr: &oneOrMoreExpr{
																													pos: position{line: 191, col: 45, offset: 7155},
																													expr: &seqExpr{
																														pos: position{line: 191, col: 46, offset: 7156},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 191, col: 46, offset: 7156},
																																expr: &litMatcher{
																																	pos:        position{line: 191, col: 47, offset: 7157},
																																	val:        "=",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 191, col: 51, offset: 7161},
																																expr: &litMatcher{
																																	pos:        position{line: 191, col: 52, offset: 7162},
																																	val:        ",",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 191, col: 56, offset: 7166},
																																expr: &litMatcher{
																																	pos:        position{line: 191, col: 57, offset: 7167},
																																	val:        "]",
																																	ignoreCase: false,
																																},
																															},
																															&anyMatcher{
																																line: 191, col: 61, offset: 7171,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&litMatcher{
																								pos:        position{line: 185, col: 40, offset: 6886},
																								val:        "=",
																								ignoreCase: false,
																							},
																							&labeledExpr{
																								pos:   position{line: 185, col: 44, offset: 6890},
																								label: "value",
																								expr: &actionExpr{
																									pos: position{line: 195, col: 19, offset: 7230},
																									run: (*parser).callonInlineElement432,
																									expr: &labeledExpr{
																										pos:   position{line: 195, col: 19, offset: 7230},
																										label: "value",
																										expr: &zeroOrMoreExpr{
																											pos: position{line: 195, col: 25, offset: 7236},
																											expr: &seqExpr{
																												pos: position{line: 195, col: 26, offset: 7237},
																												exprs: []interface{}{
																													&notExpr{
																														pos: position{line: 195, col: 26, offset: 7237},
																														expr: &litMatcher{
																															pos:        position{line: 195, col: 27, offset: 7238},
																															val:        "=",
																															ignoreCase: false,
																														},
																													},
																													&notExpr{
																														pos: position{line: 195, col: 31, offset: 7242},
																														expr: &litMatcher{
																															pos:        position{line: 195, col: 32, offset: 7243},
																															val:        ",",
																															ignoreCase: false,
																														},
																													},
																													&notExpr{
																														pos: position{line: 195, col: 36, offset: 7247},
																														expr: &litMatcher{
																															pos:        position{line: 195, col: 37, offset: 7248},
																															val:        "]",
																															ignoreCase: false,
																														},
																													},
																													&anyMatcher{
																														line: 195, col: 41, offset: 7252,
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&zeroOrOneExpr{
																								pos: position{line: 185, col: 67, offset: 6913},
																								expr: &litMatcher{
																									pos:        position{line: 185, col: 67, offset: 6913},
																									val:        ",",
																									ignoreCase: false,
																								},
																							},
																							&zeroOrMoreExpr{
																								pos: position{line: 185, col: 72, offset: 6918},
																								expr: &choiceExpr{
																									pos: position{line: 1024, col: 7, offset: 41621},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1024, col: 7, offset: 41621},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1024, col: 13, offset: 41627},
																											run: (*parser).callonInlineElement448,
																											expr: &litMatcher{
																												pos:        position{line: 1024, col: 13, offset: 41627},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																				&actionExpr{
																					pos: position{line: 187, col: 5, offset: 7002},
																					run: (*parser).callonInlineElement450,
																					expr: &seqExpr{
																						pos: position{line: 187, col: 5, offset: 7002},
																						exprs: []interface{}{
																							&labeledExpr{
																								pos:   position{line: 187, col: 5, offset: 7002},
																								label: "key",
																								expr: &actionExpr{
																									pos: position{line: 191, col: 17, offset: 7127},
																									run: (*parser).callonInlineElement453,
																									expr: &seqExpr{
																										pos: position{line: 191, col: 17, offset: 7127},
																										exprs: []interface{}{
																											&notExpr{
																												pos: position{line: 191, col: 17, offset: 7127},
																												expr: &actionExpr{
																													pos: position{line: 231, col: 14, offset: 8674},
																													run: (*parser).callonInlineElement456,
																													expr: &litMatcher{
																														pos:        position{line: 231, col: 14, offset: 8674},
																														val:        "verse",
																														ignoreCase: false,
																													},
																												},
																											},
																											&notExpr{
																												pos: position{line: 191, col: 28, offset: 7138},
																												expr: &actionExpr{
																													pos: position{line: 975, col: 16, offset: 40537},
																													run: (*parser).callonInlineElement459,
																													expr: &litMatcher{
																														pos:        position{line: 975, col: 16, offset: 40537},
																														val:        "literal",
																														ignoreCase: false,
																													},
																												},
																											},
																											&labeledExpr{
																												pos:   position{line: 191, col: 41, offset: 7151},
																												label: "key",
																												expr: &oneOrMoreExpr{
																													pos: position{line: 191, col: 45, offset: 7155},
																													expr: &seqExpr{
																														pos: position{line: 191, col: 46, offset: 7156},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 191, col: 46, offset: 7156},
																																expr: &litMatcher{
																																	pos:        position{line: 191, col: 47, offset: 7157},
																																	val:        "=",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 191, col: 51, offset: 7161},
																																expr: &litMatcher{
																																	pos:        position{line: 191, col: 52, offset: 7162},
																																	val:        ",",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 191, col: 56, offset: 7166},
																																expr: &litMatcher{
																																	pos:        position{line: 191, col: 57, offset: 7167},
																																	val:        "]",
																																	ignoreCase: false,
																																},
																															},
																															&anyMatcher{
																																line: 191, col: 61, offset: 7171,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&zeroOrOneExpr{
																								pos: position{line: 187, col: 24, offset: 7021},
																								expr: &litMatcher{
																									pos:        position{line: 187, col: 24, offset: 7021},
																									val:        ",",
																									ignoreCase: false,
																								},
																							},
																							&zeroOrMoreExpr{
																								pos: position{line: 187, col: 29, offset: 7026},
																								expr: &choiceExpr{
																									pos: position{line: 1024, col: 7, offset: 41621},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1024, col: 7, offset: 41621},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1024, col: 13, offset: 41627},
																											run: (*parser).callonInlineElement476,
																											expr: &litMatcher{
																												pos:        position{line: 1024, col: 13, offset: 41627},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																},
																&litMatcher{
																	pos:        position{line: 727, col: 44, offset: 30341},
																	val:        "]",
																	ignoreCase: false,
																},
															},
														},
													},
												},
											},
										},
									},
								},
							},
							&actionExpr{
								pos: position{line: 669, col: 9, offset: 28069},
								run: (*parser).callonInlineElement479,
								expr: &labeledExpr{
									pos:   position{line: 669, col: 9, offset: 28069},
									label: "link",
									expr: &choiceExpr{
										pos: position{line: 669, col: 15, offset: 28075},
										alternatives: []interface{}{
											&actionExpr{
												pos: position{line: 684, col: 17, offset: 28503},
												run: (*parser).callonInlineElement482,
												expr: &seqExpr{
													pos: position{line: 684, col: 17, offset: 28503},
													exprs: []interface{}{
														&litMatcher{
															pos:        position{line: 684, col: 17, offset: 28503},
															val:        "link:",
															ignoreCase: false,
														},
														&labeledExpr{
															pos:   position{line: 684, col: 25, offset: 28511},
															label: "url",
															expr: &actionExpr{
																pos: position{line: 688, col: 20, offset: 28662},
																run: (*parser).callonInlineElement486,
																expr: &seqExpr{
																	pos: position{line: 688, col: 20, offset: 28662},
																	exprs: []interface{}{
																		&zeroOrOneExpr{
																			pos: position{line: 688, col: 20, offset: 28662},
																			expr: &choiceExpr{
																				pos: position{line: 1018, col: 15, offset: 41506},
																				alternatives: []interface{}{
																					&litMatcher{
																						pos:        position{line: 1018, col: 15, offset: 41506},
																						val:        "http://",
																						ignoreCase: false,
																					},
																					&litMatcher{
																						pos:        position{line: 1018, col: 27, offset: 41518},
																						val:        "https://",
																						ignoreCase: false,
																					},
																					&litMatcher{
																						pos:        position{line: 1018, col: 40, offset: 41531},
																						val:        "ftp://",
																						ignoreCase: false,
																					},
																					&litMatcher{
																						pos:        position{line: 1018, col: 51, offset: 41542},
																						val:        "irc://",
																						ignoreCase: false,
																					},
																					&litMatcher{
																						pos:        position{line: 1018, col: 62, offset: 41553},
																						val:        "mailto:",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																		&actionExpr{
																			pos: position{line: 1006, col: 8, offset: 41269},
																			run: (*parser).callonInlineElement495,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 1006, col: 8, offset: 41269},
																				expr: &seqExpr{
																					pos: position{line: 1006, col: 9, offset: 41270},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 1006, col: 9, offset: 41270},
																							expr: &choiceExpr{
																								pos: position{line: 1028, col: 12, offset: 41683},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1028, col: 12, offset: 41683},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 1028, col: 21, offset: 41692},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 1006, col: 18, offset: 41279},
																							expr: &choiceExpr{
																								pos: position{line: 1024, col: 7, offset: 41621},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1024, col: 7, offset: 41621},
																										val:        " ",
																										ignoreCase: false,
																									},
																									&actionExpr{
																										pos: position{line: 1024, col: 13, offset: 41627},
																										run: (*parser).callonInlineElement505,
																										expr: &litMatcher{
																											pos:        position{line: 1024, col: 13, offset: 41627},
																											val:        "\t",
																											ignoreCase: false,
																										},
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 1006, col: 22, offset: 41283},
																							expr: &litMatcher{
																								pos:        position{line: 1006, col: 23, offset: 41284},
																								val:        "[",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 1006, col: 27, offset: 41288},
																							expr: &litMatcher{
																								pos:        position{line: 1006, col: 28, offset: 41289},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																						&anyMatcher{
																							line: 1006, col: 32, offset: 41293,
																						},
																					},
																				},
																			},
																		},
																	},
																},
															},
														},
														&labeledExpr{
															pos:   position{line: 684, col: 47, offset: 28533},
															label: "attributes",
															expr: &choiceExpr{
																pos: position{line: 692, col: 19, offset: 28732},
																alternatives: []interface{}{
																	&actionExpr{
																		pos: position{line: 692, col: 19, offset: 28732},
																		run: (*parser).callonInlineElement514,
																		expr: &seqExpr{
																			pos: position{line: 692, col: 19, offset: 28732},
																			exprs: []interface{}{
																				&litMatcher{
																					pos:        position{line: 692, col: 19, offset: 28732},
																					val:        "[",
																					ignoreCase: false,
																				},
																				&labeledExpr{
																					pos:   position{line: 692, col: 23, offset: 28736},
																					label: "text",
																					expr: &actionExpr{
																						pos: position{line: 699, col: 22, offset: 29012},
																						run: (*parser).callonInlineElement518,
																						expr: &oneOrMoreExpr{
																							pos: position{line: 699, col: 22, offset: 29012},
																							expr: &seqExpr{
																								pos: position{line: 699, col: 23, offset: 29013},
																								exprs: []interface{}{
																									&notExpr{
																										pos: position{line: 699, col: 23, offset: 29013},
																										expr: &litMatcher{
																											pos:        position{line: 699, col: 24, offset: 29014},
																											val:        ",",
																											ignoreCase: false,
																										},
																									},
																									&notExpr{
																										pos: position{line: 699, col: 28, offset: 29018},
																										expr: &litMatcher{
																											pos:        position{line: 699, col: 29, offset: 29019},
																											val:        "]",
																											ignoreCase: false,
																										},
																									},
																									&anyMatcher{
																										line: 699, col: 33, offset: 29023,
																									},
																								},
																							},
																						},
																					},
																				},
																				&labeledExpr{
																					pos:   position{line: 693, col: 9, offset: 28769},
																					label: "otherAttrs",
																					expr: &zeroOrMoreExpr{
																						pos: position{line: 693, col: 20, offset: 28780},
																						expr: &choiceExpr{
																							pos: position{line: 185, col: 21, offset: 6867},
																							alternatives: []interface{}{
																								&actionExpr{
																									pos: position{line: 185, col: 21, offset: 6867},
																									run: (*parser).callonInlineElement529,
																									expr: &seqExpr{
																										pos: position{line: 185, col: 21, offset: 6867},
																										exprs: []interface{}{
																											&labeledExpr{
																												pos:   position{line: 185, col: 21, offset: 6867},
																												label: "key",
																												expr: &actionExpr{
																													pos: position{line: 191, col: 17, offset: 7127},
																													run: (*parser).callonInlineElement532,
																													expr: &seqExpr{
																														pos: position{line: 191, col: 17, offset: 7127},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 191, col: 17, offset: 7127},
																																expr: &actionExpr{
																																	pos: position{line: 231, col: 14, offset: 8674},
																																	run: (*parser).callonInlineElement535,
																																	expr: &litMatcher{
																																		pos:        position{line: 231, col: 14, offset: 8674},
																																		val:        "verse",
																																		ignoreCase: false,
																																	},
																																},
																															},
																															&notExpr{
																																pos: position{line: 191, col: 28, offset: 7138},
																																expr: &actionExpr{
																																	pos: position{line: 975, col: 16, offset: 40537},
																																	run: (*parser).callonInlineElement538,
																																	expr: &litMatcher{
																																		pos:        position{line: 975, col: 16, offset: 40537},
																																		val:        "literal",
																																		ignoreCase: false,
																																	},
																																},
																															},
																															&labeledExpr{
																																pos:   position{line: 191, col: 41, offset: 7151},
																																label: "key",
																																expr: &oneOrMoreExpr{
																																	pos: position{line: 191, col: 45, offset: 7155},
																																	expr: &seqExpr{
																																		pos: position{line: 191, col: 46, offset: 7156},
																																		exprs: []interface{}{
																																			&notExpr{
																																				pos: position{line: 191, col: 46, offset: 7156},
																																				expr: &litMatcher{
																																					pos:        position{line: 191, col: 47, offset: 7157},
																																					val:        "=",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 191, col: 51, offset: 7161},
																																				expr: &litMatcher{
																																					pos:        position{line: 191, col: 52, offset: 7162},
																																					val:        ",",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 191, col: 56, offset: 7166},
																																				expr: &litMatcher{
																																					pos:        position{line: 191, col: 57, offset: 7167},
																																					val:        "]",
																																					ignoreCase: false,
																																				},
																																			},
																																			&anyMatcher{
																																				line: 191, col: 61, offset: 7171,
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																											&litMatcher{
																												pos:        position{line: 185, col: 40, offset: 6886},
																												val:        "=",
																												ignoreCase: false,
																											},
																											&labeledExpr{
																												pos:   position{line: 185, col: 44, offset: 6890},
																												label: "value",
																												expr: &actionExpr{
																													pos: position{line: 195, col: 19, offset: 7230},
																													run: (*parser).callonInlineElement552,
																													expr: &labeledExpr{
																														pos:   position{line: 195, col: 19, offset: 7230},
																														label: "value",
																														expr: &zeroOrMoreExpr{
																															pos: position{line: 195, col: 25, offset: 7236},
																															expr: &seqExpr{
																																pos: position{line: 195, col: 26, offset: 7237},
																																exprs: []interface{}{
																																	&notExpr{
																																		pos: position{line: 195, col: 26, offset: 7237},
																																		expr: &litMatcher{
																																			pos:        position{line: 195, col: 27, offset: 7238},
																																			val:        "=",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 195, col: 31, offset: 7242},
																																		expr: &litMatcher{
																																			pos:        position{line: 195, col: 32, offset: 7243},
																																			val:        ",",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 195, col: 36, offset: 7247},
																																		expr: &litMatcher{
																																			pos:        position{line: 195, col: 37, offset: 7248},
																																			val:        "]",
																																			ignoreCase: false,
																																		},
																																	},
																																	&anyMatcher{
																																		line: 195, col: 41, offset: 7252,
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																											&zeroOrOneExpr{
																												pos: position{line: 185, col: 67, offset: 6913},
																												expr: &litMatcher{
																													pos:        position{line: 185, col: 67, offset: 6913},
																													val:        ",",
																													ignoreCase: false,
																												},
																											},
																											&zeroOrMoreExpr{
																												pos: position{line: 185, col: 72, offset: 6918},
																												expr: &choiceExpr{
																													pos: position{line: 1024, col: 7, offset: 41621},
																													alternatives: []interface{}{
																														&litMatcher{
																															pos:        position{line: 1024, col: 7, offset: 41621},
																															val:        " ",
																															ignoreCase: false,
																														},
																														&actionExpr{
																															pos: position{line: 1024, col: 13, offset: 41627},
																															run: (*parser).callonInlineElement568,
																															expr: &litMatcher{
																																pos:        position{line: 1024, col: 13, offset: 41627},
																																val:        "\t",
																																ignoreCase: false,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&actionExpr{
																									pos: position{line: 187, col: 5, offset: 7002},
																									run: (*parser).callonInlineElement570,
																									expr: &seqExpr{
																										pos: position{line: 187, col: 5, offset: 7002},
																										exprs: []interface{}{
																											&labeledExpr{
																												pos:   position{line: 187, col: 5, offset: 7002},
																												label: "key",
																												expr: &actionExpr{
																													pos: position{line: 191, col: 17, offset: 7127},
																													run: (*parser).callonInlineElement573,
																													expr: &seqExpr{
																														pos: position{line: 191, col: 17, offset: 7127},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 191, col: 17, offset: 7127},
																																expr: &actionExpr{
																																	pos: position{line: 231, col: 14, offset: 8674},
																																	run: (*parser).callonInlineElement576,
																																	expr: &litMatcher{
																																		pos:        position{line: 231, col: 14, offset: 8674},
																																		val:        "verse",
																																		ignoreCase: false,
																																	},
																																},
																															},
																															&notExpr{
																																pos: position{line: 191, col: 28, offset: 7138},
																																expr: &actionExpr{
																																	pos: position{line: 975, col: 16, offset: 40537},
																																	run: (*parser).callonInlineElement579,
																																	expr: &litMatcher{
																																		pos:        position{line: 975, col: 16, offset: 40537},
																																		val:        "literal",
																																		ignoreCase: false,
																																	},
																																},
																															},
																															&labeledExpr{
																																pos:   position{line: 191, col: 41, offset: 7151},
																																label: "key",
																																expr: &oneOrMoreExpr{
																																	pos: position{line: 191, col: 45, offset: 7155},
																																	expr: &seqExpr{
																																		pos: position{line: 191, col: 46, offset: 7156},
																																		exprs: []interface{}{
																																			&notExpr{
																																				pos: position{line: 191, col: 46, offset: 7156},
																																				expr: &litMatcher{
																																					pos:        position{line: 191, col: 47, offset: 7157},
																																					val:        "=",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 191, col: 51, offset: 7161},
																																				expr: &litMatcher{
																																					pos:        position{line: 191, col: 52, offset: 7162},
																																					val:        ",",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 191, col: 56, offset: 7166},
																																				expr: &litMatcher{
																																					pos:        position{line: 191, col: 57, offset: 7167},
																																					val:        "]",
																																					ignoreCase: false,
																																				},
																																			},
																																			&anyMatcher{
																																				line: 191, col: 61, offset: 7171,
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																											&zeroOrOneExpr{
																												pos: position{line: 187, col: 24, offset: 7021},
																												expr: &litMatcher{
																													pos:        position{line: 187, col: 24, offset: 7021},
																													val:        ",",
																													ignoreCase: false,
																												},
																											},
																											&zeroOrMoreExpr{
																												pos: position{line: 187, col: 29, offset: 7026},
																												expr: &choiceExpr{
																													pos: position{line: 1024, col: 7, offset: 41621},
																													alternatives: []interface{}{
																														&litMatcher{
																															pos:        position{line: 1024, col: 7, offset: 41621},
																															val:        " ",
																															ignoreCase: false,
																														},
																														&actionExpr{
																															pos: position{line: 1024, col: 13, offset: 41627},
																															run: (*parser).callonInlineElement596,
																															expr: &litMatcher{
																																pos:        position{line: 1024, col: 13, offset: 41627},
																																val:        "\t",
																																ignoreCase: false,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																				&litMatcher{
																					pos:        position{line: 693, col: 40, offset: 28800},
																					val:        "]",
																					ignoreCase: false,
																				},
																			},
																		},
																	},
																	&actionExpr{
																		pos: position{line: 695, col: 5, offset: 28879},
																		run: (*parser).callonInlineElement599,
																		expr: &seqExpr{
																			pos: position{line: 695, col: 5, offset: 28879},
																			exprs: []interface{}{
																				&litMatcher{
																					pos:        position{line: 695, col: 5, offset: 28879},
																					val:        "[",
																					ignoreCase: false,
																				},
																				&labeledExpr{
																					pos:   position{line: 695, col: 9, offset: 28883},
																					label: "otherAttrs",
																					expr: &zeroOrMoreExpr{
																						pos: position{line: 695, col: 20, offset: 28894},
																						expr: &choiceExpr{
																							pos: position{line: 185, col: 21, offset: 6867},
																							alternatives: []interface{}{
																								&actionExpr{
																									pos: position{line: 185, col: 21, offset: 6867},
																									run: (*parser).callonInlineElement605,
																									expr: &seqExpr{
																										pos: position{line: 185, col: 21, offset: 6867},
																										exprs: []interface{}{
																											&labeledExpr{
																												pos:   position{line: 185, col: 21, offset: 6867},
																												label: "key",
																												expr: &actionExpr{
																													pos: position{line: 191, col: 17, offset: 7127},
																													run: (*parser).callonInlineElement608,
																													expr: &seqExpr{
																														pos: position{line: 191, col: 17, offset: 7127},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 191, col: 17, offset: 7127},
																																expr: &actionExpr{
																																	pos: position{line: 231, col: 14, offset: 8674},
																																	run: (*parser).callonInlineElement611,
																																	expr: &litMatcher{
																																		pos:        position{line: 231, col: 14, offset: 8674},
																																		val:        "verse",
																																		ignoreCase: false,
																																	},
																																},
																															},
																															&notExpr{
																																pos: position{line: 191, col: 28, offset: 7138},
																																expr: &actionExpr{
																																	pos: position{line: 975, col: 16, offset: 40537},
																																	run: (*parser).callonInlineElement614,
																																	expr: &litMatcher{
																																		pos:        position{line: 975, col: 16, offset: 40537},
																																		val:        "literal",
																																		ignoreCase: false,
																																	},
																																},
																															},
																															&labeledExpr{
																																pos:   position{line: 191, col: 41, offset: 7151},
																																label: "key",
																																expr: &oneOrMoreExpr{
																																	pos: position{line: 191, col: 45, offset: 7155},
																																	expr: &seqExpr{
																																		pos: position{line: 191, col: 46, offset: 7156},
																																		exprs: []interface{}{
																																			&notExpr{
																																				pos: position{line: 191, col: 46, offset: 7156},
																																				expr: &litMatcher{
																																					pos:        position{line: 191, col: 47, offset: 7157},
																																					val:        "=",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 191, col: 51, offset: 7161},
																																				expr: &litMatcher{
																																					pos:        position{line: 191, col: 52, offset: 7162},
																																					val:        ",",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 191, col: 56, offset: 7166},
																																				expr: &litMatcher{
																																					pos:        position{line: 191, col: 57, offset: 7167},
																																					val:        "]",
																																					ignoreCase: false,
																																				},
																																			},
																																			&anyMatcher{
																																				line: 191, col: 61, offset: 7171,
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																											&litMatcher{
																												pos:        position{line: 185, col: 40, offset: 6886},
																												val:        "=",
																												ignoreCase: false,
																											},
																											&labeledExpr{
																												pos:   position{line: 185, col: 44, offset: 6890},
																												label: "value",
																												expr: &actionExpr{
																													pos: position{line: 195, col: 19, offset: 7230},
																													run: (*parser).callonInlineElement628,
																													expr: &labeledExpr{
																														pos:   position{line: 195, col: 19, offset: 7230},
																														label: "value",
																														expr: &zeroOrMoreExpr{
																															pos: position{line: 195, col: 25, offset: 7236},
																															expr: &seqExpr{
																																pos: position{line: 195, col: 26, offset: 7237},
																																exprs: []interface{}{
																																	&notExpr{
																																		pos: position{line: 195, col: 26, offset: 7237},
																																		expr: &litMatcher{
																																			pos:        position{line: 195, col: 27, offset: 7238},
																																			val:        "=",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 195, col: 31, offset: 7242},
																																		expr: &litMatcher{
																																			pos:        position{line: 195, col: 32, offset: 7243},
																																			val:        ",",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 195, col: 36, offset: 7247},
																																		expr: &litMatcher{
																																			pos:        position{line: 195, col: 37, offset: 7248},
																																			val:        "]",
																																			ignoreCase: false,
																																		},
																																	},
																																	&anyMatcher{
																																		line: 195, col: 41, offset: 7252,
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																											&zeroOrOneExpr{
																												pos: position{line: 185, col: 67, offset: 6913},
																												expr: &litMatcher{
																													pos:        position{line: 185, col: 67, offset: 6913},
																													val:        ",",
																													ignoreCase: false,
																												},
																											},
																											&zeroOrMoreExpr{
																												pos: position{line: 185, col: 72, offset: 6918},
																												expr: &choiceExpr{
																													pos: position{line: 1024, col: 7, offset: 41621},
																													alternatives: []interface{}{
																														&litMatcher{
																															pos:        position{line: 1024, col: 7, offset: 41621},
																															val:        " ",
																															ignoreCase: false,
																														},
																														&actionExpr{
																															pos: position{line: 1024, col: 13, offset: 41627},
																															run: (*parser).callonInlineElement644,
																															expr: &litMatcher{
																																pos:        position{line: 1024, col: 13, offset: 41627},
																																val:        "\t",
																																ignoreCase: false,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&actionExpr{
																									pos: position{line: 187, col: 5, offset: 7002},
																									run: (*parser).callonInlineElement646,
																									expr: &seqExpr{
																										pos: position{line: 187, col: 5, offset: 7002},
																										exprs: []interface{}{
																											&labeledExpr{
																												pos:   position{line: 187, col: 5, offset: 7002},
																												label: "key",
																												expr: &actionExpr{
																													pos: position{line: 191, col: 17, offset: 7127},
																													run: (*parser).callonInlineElement649,
																													expr: &seqExpr{
																														pos: position{line: 191, col: 17, offset: 7127},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 191, col: 17, offset: 7127},
																																expr: &actionExpr{
																																	pos: position{line: 231, col: 14, offset: 8674},
																																	run: (*parser).callonInlineElement652,
																																	expr: &litMatcher{
																																		pos:        position{line: 231, col: 14, offset: 8674},
																																		val:        "verse",
																																		ignoreCase: false,
																																	},
																																},
																															},
																															&notExpr{
																																pos: position{line: 191, col: 28, offset: 7138},
																																expr: &actionExpr{
																																	pos: position{line: 975, col: 16, offset: 40537},
																																	run: (*parser).callonInlineElement655,
																																	expr: &litMatcher{
																																		pos:        position{line: 975, col: 16, offset: 40537},
																																		val:        "literal",
																																		ignoreCase: false,
																																	},
																																},
																															},
																															&labeledExpr{
																																pos:   position{line: 191, col: 41, offset: 7151},
																																label: "key",
																																expr: &oneOrMoreExpr{
																																	pos: position{line: 191, col: 45, offset: 7155},
																																	expr: &seqExpr{
																																		pos: position{line: 191, col: 46, offset: 7156},
																																		exprs: []interface{}{
																																			&notExpr{
																																				pos: position{line: 191, col: 46, offset: 7156},
																																				expr: &litMatcher{
																																					pos:        position{line: 191, col: 47, offset: 7157},
																																					val:        "=",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 191, col: 51, offset: 7161},
																																				expr: &litMatcher{
																																					pos:        position{line: 191, col: 52, offset: 7162},
																																					val:        ",",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 191, col: 56, offset: 7166},
																																				expr: &litMatcher{
																																					pos:        position{line: 191, col: 57, offset: 7167},
																																					val:        "]",
																																					ignoreCase: false,
																																				},
																																			},
																																			&anyMatcher{
																																				line: 191, col: 61, offset: 7171,
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																											&zeroOrOneExpr{
																												pos: position{line: 187, col: 24, offset: 7021},
																												expr: &litMatcher{
																													pos:        position{line: 187, col: 24, offset: 7021},
																													val:        ",",
																													ignoreCase: false,
																												},
																											},
																											&zeroOrMoreExpr{
																												pos: position{line: 187, col: 29, offset: 7026},
																												expr: &choiceExpr{
																													pos: position{line: 1024, col: 7, offset: 41621},
																													alternatives: []interface{}{
																														&litMatcher{
																															pos:        position{line: 1024, col: 7, offset: 41621},
																															val:        " ",
																															ignoreCase: false,
																														},
																														&actionExpr{
																															pos: position{line: 1024, col: 13, offset: 41627},
																															run: (*parser).callonInlineElement672,
																															expr: &litMatcher{
																																pos:        position{line: 1024, col: 13, offset: 41627},
																																val:        "\t",
																																ignoreCase: false,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																				&litMatcher{
																					pos:        position{line: 695, col: 40, offset: 28914},
																					val:        "]",
																					ignoreCase: false,
																				},
																			},
																		},
																	},
																},
															},
														},
													},
												},
											},
											&actionExpr{
												pos: position{line: 673, col: 17, offset: 28146},
												run: (*parser).callonInlineElement675,
												expr: &seqExpr{
													pos: position{line: 673, col: 17, offset: 28146},
													exprs: []interface{}{
														&labeledExpr{
															pos:   position{line: 673, col: 17, offset: 28146},
															label: "url",
															expr: &actionExpr{
																pos: position{line: 679, col: 20, offset: 28369},
																run: (*parser).callonInlineElement678,
																expr: &seqExpr{
																	pos: position{line: 679, col: 20, offset: 28369},
																	exprs: []interface{}{
																		&choiceExpr{
																			pos: position{line: 1018, col: 15, offset: 41506},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1018, col: 15, offset: 41506},
																					val:        "http://",
																					ignoreCase: false,
																				},
																				&litMatcher{
																					pos:        position{line: 1018, col: 27, offset: 41518},
																					val:        "https://",
																					ignoreCase: false,
																				},
																				&litMatcher{
																					pos:        position{line: 1018, col: 40, offset: 41531},
																					val:        "ftp://",
																					ignoreCase: false,
																				},
																				&litMatcher{
																					pos:        position{line: 1018, col: 51, offset: 41542},
																					val:        "irc://",
																					ignoreCase: false,
																				},
																				&litMatcher{
																					pos:        position{line: 1018, col: 62, offset: 41553},
																					val:        "mailto:",
																					ignoreCase: false,
																				},
																			},
																		},
																		&actionExpr{
																			pos: position{line: 1006, col: 8, offset: 41269},
																			run: (*parser).callonInlineElement686,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 1006, col: 8, offset: 41269},
																				expr: &seqExpr{
																					pos: position{line: 1006, col: 9, offset: 41270},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 1006, col: 9, offset: 41270},
																							expr: &choiceExpr{
																								pos: position{line: 1028, col: 12, offset: 41683},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1028, col: 12, offset: 41683},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 1028, col: 21, offset: 41692},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 1006, col: 18, offset: 41279},
																							expr: &choiceExpr{
																								pos: position{line: 1024, col: 7, offset: 41621},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1024, col: 7, offset: 41621},
																										val:        " ",
																										ignoreCase: false,
																									},
																									&actionExpr{
																										pos: position{line: 1024, col: 13, offset: 41627},
																										run: (*parser).callonInlineElement696,
																										expr: &litMatcher{
																											pos:        position{line: 1024, col: 13, offset: 41627},
																											val:        "\t",
																											ignoreCase: false,
																										},
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 1006, col: 22, offset: 41283},
																							expr: &litMatcher{
																								pos:        position{line: 1006, col: 23, offset: 41284},
																								val:        "[",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 1006, col: 27, offset: 41288},
																							expr: &litMatcher{
																								pos:        position{line: 1006, col: 28, offset: 41289},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																						&anyMatcher{
																							line: 1006, col: 32, offset: 41293,
																						},
																					},
																				},
																			},
																		},
																	},
																},
															},
														},
														&labeledExpr{
															pos:   position{line: 673, col: 39, offset: 28168},
															label: "attributes",
															expr: &choiceExpr{
																pos: position{line: 692, col: 19, offset: 28732},
																alternatives: []interface{}{
																	&actionExpr{
																		pos: position{line: 692, col: 19, offset: 28732},
																		run: (*parser).callonInlineElement705,
																		expr: &seqExpr{
																			pos: position{line: 692, col: 19, offset: 28732},
																			exprs: []interface{}{
																				&litMatcher{
																					pos:        position{line: 692, col: 19, offset: 28732},
																					val:        "[",
																					ignoreCase: false,
																				},
																				&labeledExpr{
																					pos:   position{line: 692, col: 23, offset: 28736},
																					label: "text",
																					expr: &actionExpr{
																						pos: position{line: 699, col: 22, offset: 29012},
																						run: (*parser).callonInlineElement709,
																						expr: &oneOrMoreExpr{
																							pos: position{line: 699, col: 22, offset: 29012},
																							expr: &seqExpr{
																								pos: position{line: 699, col: 23, offset: 29013},
																								exprs: []interface{}{
																									&notExpr{
																										pos: position{line: 699, col: 23, offset: 29013},
																										expr: &litMatcher{
																											pos:        position{line: 699, col: 24, offset: 29014},
																											val:        ",",
																											ignoreCase: false,
																										},
																									},
																									&notExpr{
																										pos: position{line: 699, col: 28, offset: 29018},
																										expr: &litMatcher{
																											pos:        position{line: 699, col: 29, offset: 29019},
																											val:        "]",
																											ignoreCase: false,
																										},
																									},
																									&anyMatcher{
																										line: 699, col: 33, offset: 29023,
																									},
																								},
																							},
																						},
																					},
																				},
																				&labeledExpr{
																					pos:   position{line: 693, col: 9, offset: 28769},
																					label: "otherAttrs",
																					expr: &zeroOrMoreExpr{
																						pos: position{line: 693, col: 20, offset: 28780},
																						expr: &choiceExpr{
																							pos: position{line: 185, col: 21, offset: 6867},
																							alternatives: []interface{}{
																								&actionExpr{
																									pos: position{line: 185, col: 21, offset: 6867},
																									run: (*parser).callonInlineElement720,
																									expr: &seqExpr{
																										pos: position{line: 185, col: 21, offset: 6867},
																										exprs: []interface{}{
																											&labeledExpr{
																												pos:   position{line: 185, col: 21, offset: 6867},
																												label: "key",
																												expr: &actionExpr{
																													pos: position{line: 191, col: 17, offset: 7127},
																													run: (*parser).callonInlineElement723,
																													expr: &seqExpr{
																														pos: position{line: 191, col: 17, offset: 7127},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 191, col: 17, offset: 7127},
																																expr: &actionExpr{
																																	pos: position{line: 231, col: 14, offset: 8674},
																																	run: (*parser).callonInlineElement726,
																																	expr: &litMatcher{
																																		pos:        position{line: 231, col: 14, offset: 8674},
																																		val:        "verse",
																																		ignoreCase: false,
																																	},
																																},
																															},
																															&notExpr{
																																pos: position{line: 191, col: 28, offset: 7138},
																																expr: &actionExpr{
																																	pos: position{line: 975, col: 16, offset: 40537},
																																	run: (*parser).callonInlineElement729,
																																	expr: &litMatcher{
																																		pos:        position{line: 975, col: 16, offset: 40537},
																																		val:        "literal",
																																		ignoreCase: false,
																																	},
																																},
																															},
																															&labeledExpr{
																																pos:   position{line: 191, col: 41, offset: 7151},
																																label: "key",
																																expr: &oneOrMoreExpr{
																																	pos: position{line: 191, col: 45, offset: 7155},
																																	expr: &seqExpr{
																																		pos: position{line: 191, col: 46, offset: 7156},
																																		exprs: []interface{}{
																																			&notExpr{
																																				pos: position{line: 191, col: 46, offset: 7156},
																																				expr: &litMatcher{
																																					pos:        position{line: 191, col: 47, offset: 7157},
																																					val:        "=",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 191, col: 51, offset: 7161},
																																				expr: &litMatcher{
																																					pos:        position{line: 191, col: 52, offset: 7162},
																																					val:        ",",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 191, col: 56, offset: 7166},
																																				expr: &litMatcher{
																																					pos:        position{line: 191, col: 57, offset: 7167},
																																					val:        "]",
																																					ignoreCase: false,
																																				},
																																			},
																																			&anyMatcher{
																																				line: 191, col: 61, offset: 7171,
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																											&litMatcher{
																												pos:        position{line: 185, col: 40, offset: 6886},
																												val:        "=",
																												ignoreCase: false,
																											},
																											&labeledExpr{
																												pos:   position{line: 185, col: 44, offset: 6890},
																												label: "value",
																												expr: &actionExpr{
																													pos: position{line: 195, col: 19, offset: 7230},
																													run: (*parser).callonInlineElement743,
																													expr: &labeledExpr{
																														pos:   position{line: 195, col: 19, offset: 7230},
																														label: "value",
																														expr: &zeroOrMoreExpr{
																															pos: position{line: 195, col: 25, offset: 7236},
																															expr: &seqExpr{
																																pos: position{line: 195, col: 26, offset: 7237},
																																exprs: []interface{}{
																																	&notExpr{
																																		pos: position{line: 195, col: 26, offset: 7237},
																																		expr: &litMatcher{
																																			pos:        position{line: 195, col: 27, offset: 7238},
																																			val:        "=",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 195, col: 31, offset: 7242},
																																		expr: &litMatcher{
																																			pos:        position{line: 195, col: 32, offset: 7243},
																																			val:        ",",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 195, col: 36, offset: 7247},
																																		expr: &litMatcher{
																																			pos:        position{line: 195, col: 37, offset: 7248},
																																			val:        "]",
																																			ignoreCase: false,
																																		},
																																	},
																																	&anyMatcher{
																																		line: 195, col: 41, offset: 7252,
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																											&zeroOrOneExpr{
																												pos: position{line: 185, col: 67, offset: 6913},
																												expr: &litMatcher{
																													pos:        position{line: 185, col: 67, offset: 6913},
																													val:        ",",
																													ignoreCase: false,
																												},
																											},
																											&zeroOrMoreExpr{
																												pos: position{line: 185, col: 72, offset: 6918},
																												expr: &choiceExpr{
																													pos: position{line: 1024, col: 7, offset: 41621},
																													alternatives: []interface{}{
																														&litMatcher{
																															pos:        position{line: 1024, col: 7, offset: 41621},
																															val:        " ",
																															ignoreCase: false,
																														},
																														&actionExpr{
																															pos: position{line: 1024, col: 13, offset: 41627},
																															run: (*parser).callonInlineElement759,
																															expr: &litMatcher{
																																pos:        position{line: 1024, col: 13, offset: 41627},
																																val:        "\t",
																																ignoreCase: false,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&actionExpr{
																									pos: position{line: 187, col: 5, offset: 7002},
																									run: (*parser).callonInlineElement761,
																									expr: &seqExpr{
																										pos: position{line: 187, col: 5, offset: 7002},
																										exprs: []interface{}{
																											&labeledExpr{
																												pos:   position{line: 187, col: 5, offset: 7002},
																												label: "key",
																												expr: &actionExpr{
																													pos: position{line: 191, col: 17, offset: 7127},
																													run: (*parser).callonInlineElement764,
																													expr: &seqExpr{
																														pos: position{line: 191, col: 17, offset: 7127},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 191, col: 17, offset: 7127},
																																expr: &actionExpr{
																																	pos: position{line: 231, col: 14, offset: 8674},
																																	run: (*parser).callonInlineElement767,
																																	expr: &litMatcher{
																																		pos:        position{line: 231, col: 14, offset: 8674},
																																		val:        "verse",
																																		ignoreCase: false,
																																	},
																																},
																															},
																															&notExpr{
																																pos: position{line: 191, col: 28, offset: 7138},
																																expr: &actionExpr{
																																	pos: position{line: 975, col: 16, offset: 40537},
																																	run: (*parser).callonInlineElement770,
																																	expr: &litMatcher{
																																		pos:        position{line: 975, col: 16, offset: 40537},
																																		val:        "literal",
																																		ignoreCase: false,
																																	},
																																},
																															},
																															&labeledExpr{
																																pos:   position{line: 191, col: 41, offset: 7151},
																																label: "key",
																																expr: &oneOrMoreExpr{
																																	pos: position{line: 191, col: 45, offset: 7155},
																																	expr: &seqExpr{
																																		pos: position{line: 191, col: 46, offset: 7156},
																																		exprs: []interface{}{
																																			&notExpr{
																																				pos: position{line: 191, col: 46, offset: 7156},
																																				expr: &litMatcher{
																																					pos:        position{line: 191, col: 47, offset: 7157},
																																					val:        "=",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 191, col: 51, offset: 7161},
																																				expr: &litMatcher{
																																					pos:        position{line: 191, col: 52, offset: 7162},
																																					val:        ",",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 191, col: 56, offset: 7166},
																																				expr: &litMatcher{
																																					pos:        position{line: 191, col: 57, offset: 7167},
																																					val:        "]",
																																					ignoreCase: false,
																																				},
																																			},
																																			&anyMatcher{
																																				line: 191, col: 61, offset: 7171,
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																											&zeroOrOneExpr{
																												pos: position{line: 187, col: 24, offset: 7021},
																												expr: &litMatcher{
																													pos:        position{line: 187, col: 24, offset: 7021},
																													val:        ",",
																													ignoreCase: false,
																												},
																											},
																											&zeroOrMoreExpr{
																												pos: position{line: 187, col: 29, offset: 7026},
																												expr: &choiceExpr{
																													pos: position{line: 1024, col: 7, offset: 41621},
																													alternatives: []interface{}{
																														&litMatcher{
																															pos:        position{line: 1024, col: 7, offset: 41621},
																															val:        " ",
																															ignoreCase: false,
																														},
																														&actionExpr{
																															pos: position{line: 1024, col: 13, offset: 41627},
																															run: (*parser).callonInlineElement787,
																															expr: &litMatcher{
																																pos:        position{line: 1024, col: 13, offset: 41627},
																																val:        "\t",
																																ignoreCase: false,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																				&litMatcher{
																					pos:        position{line: 693, col: 40, offset: 28800},
																					val:        "]",
																					ignoreCase: false,
																				},
																			},
																		},
																	},
																	&actionExpr{
																		pos: position{line: 695, col: 5, offset: 28879},
																		run: (*parser).callonInlineElement790,
																		expr: &seqExpr{
																			pos: position{line: 695, col: 5, offset: 28879},
																			exprs: []interface{}{
																				&litMatcher{
																					pos:        position{line: 695, col: 5, offset: 28879},
																					val:        "[",
																					ignoreCase: false,
																				},
																				&labeledExpr{
																					pos:   position{line: 695, col: 9, offset: 28883},
																					label: "otherAttrs",
																					expr: &zeroOrMoreExpr{
																						pos: position{line: 695, col: 20, offset: 28894},
																						expr: &choiceExpr{
																							pos: position{line: 185, col: 21, offset: 6867},
																							alternatives: []interface{}{
																								&actionExpr{
																									pos: position{line: 185, col: 21, offset: 6867},
																									run: (*parser).callonInlineElement796,
																									expr: &seqExpr{
																										pos: position{line: 185, col: 21, offset: 6867},
																										exprs: []interface{}{
																											&labeledExpr{
																												pos:   position{line: 185, col: 21, offset: 6867},
																												label: "key",
																												expr: &actionExpr{
																													pos: position{line: 191, col: 17, offset: 7127},
																													run: (*parser).callonInlineElement799,
																													expr: &seqExpr{
																														pos: position{line: 191, col: 17, offset: 7127},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 191, col: 17, offset: 7127},
																																expr: &actionExpr{
																																	pos: position{line: 231, col: 14, offset: 8674},
																																	run: (*parser).callonInlineElement802,
																																	expr: &litMatcher{
																																		pos:        position{line: 231, col: 14, offset: 8674},
																																		val:        "verse",
																																		ignoreCase: false,
																																	},
																																},
																															},
																															&notExpr{
																																pos: position{line: 191, col: 28, offset: 7138},
																																expr: &actionExpr{
																																	pos: position{line: 975, col: 16, offset: 40537},
																																	run: (*parser).callonInlineElement805,
																																	expr: &litMatcher{
																																		pos:        position{line: 975, col: 16, offset: 40537},
																																		val:        "literal",
																																		ignoreCase: false,
																																	},
																																},
																															},
																															&labeledExpr{
																																pos:   position{line: 191, col: 41, offset: 7151},
																																label: "key",
																																expr: &oneOrMoreExpr{
																																	pos: position{line: 191, col: 45, offset: 7155},
																																	expr: &seqExpr{
																																		pos: position{line: 191, col: 46, offset: 7156},
																																		exprs: []interface{}{
																																			&notExpr{
																																				pos: position{line: 191, col: 46, offset: 7156},
																																				expr: &litMatcher{
																																					pos:        position{line: 191, col: 47, offset: 7157},
																																					val:        "=",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 191, col: 51, offset: 7161},
																																				expr: &litMatcher{
																																					pos:        position{line: 191, col: 52, offset: 7162},
																																					val:        ",",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 191, col: 56, offset: 7166},
																																				expr: &litMatcher{
																																					pos:        position{line: 191, col: 57, offset: 7167},
																																					val:        "]",
																																					ignoreCase: false,
																																				},
																																			},
																																			&anyMatcher{
																																				line: 191, col: 61, offset: 7171,
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																											&litMatcher{
																												pos:        position{line: 185, col: 40, offset: 6886},
																												val:        "=",
																												ignoreCase: false,
																											},
																											&labeledExpr{
																												pos:   position{line: 185, col: 44, offset: 6890},
																												label: "value",
																												expr: &actionExpr{
																													pos: position{line: 195, col: 19, offset: 7230},
																													run: (*parser).callonInlineElement819,
																													expr: &labeledExpr{
																														pos:   position{line: 195, col: 19, offset: 7230},
																														label: "value",
																														expr: &zeroOrMoreExpr{
																															pos: position{line: 195, col: 25, offset: 7236},
																															expr: &seqExpr{
																																pos: position{line: 195, col: 26, offset: 7237},
																																exprs: []interface{}{
																																	&notExpr{
																																		pos: position{line: 195, col: 26, offset: 7237},
																																		expr: &litMatcher{
																																			pos:        position{line: 195, col: 27, offset: 7238},
																																			val:        "=",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 195, col: 31, offset: 7242},
																																		expr: &litMatcher{
																																			pos:        position{line: 195, col: 32, offset: 7243},
																																			val:        ",",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 195, col: 36, offset: 7247},
																																		expr: &litMatcher{
																																			pos:        position{line: 195, col: 37, offset: 7248},
																																			val:        "]",
																																			ignoreCase: false,
																																		},
																																	},
																																	&anyMatcher{
																																		line: 195, col: 41, offset: 7252,
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																											&zeroOrOneExpr{
																												pos: position{line: 185, col: 67, offset: 6913},
																												expr: &litMatcher{
																													pos:        position{line: 185, col: 67, offset: 6913},
																													val:        ",",
																													ignoreCase: false,
																												},
																											},
																											&zeroOrMoreExpr{
																												pos: position{line: 185, col: 72, offset: 6918},
																												expr: &choiceExpr{
																													pos: position{line: 1024, col: 7, offset: 41621},
																													alternatives: []interface{}{
																														&litMatcher{
																															pos:        position{line: 1024, col: 7, offset: 41621},
																															val:        " ",
																															ignoreCase: false,
																														},
																														&actionExpr{
																															pos: position{line: 1024, col: 13, offset: 41627},
																															run: (*parser).callonInlineElement835,
																															expr: &litMatcher{
																																pos:        position{line: 1024, col: 13, offset: 41627},
																																val:        "\t",
																																ignoreCase: false,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&actionExpr{
																									pos: position{line: 187, col: 5, offset: 7002},
																									run: (*parser).callonInlineElement837,
																									expr: &seqExpr{
																										pos: position{line: 187, col: 5, offset: 7002},
																										exprs: []interface{}{
																											&labeledExpr{
																												pos:   position{line: 187, col: 5, offset: 7002},
																												label: "key",
																												expr: &actionExpr{
																													pos: position{line: 191, col: 17, offset: 7127},
																													run: (*parser).callonInlineElement840,
																													expr: &seqExpr{
																														pos: position{line: 191, col: 17, offset: 7127},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 191, col: 17, offset: 7127},
																																expr: &actionExpr{
																																	pos: position{line: 231, col: 14, offset: 8674},
																																	run: (*parser).callonInlineElement843,
																																	expr: &litMatcher{
																																		pos:        position{line: 231, col: 14, offset: 8674},
																																		val:        "verse",
																																		ignoreCase: false,
																																	},
																																},
																															},
																															&notExpr{
																																pos: position{line: 191, col: 28, offset: 7138},
																																expr: &actionExpr{
																																	pos: position{line: 975, col: 16, offset: 40537},
																																	run: (*parser).callonInlineElement846,
																																	expr: &litMatcher{
																																		pos:        position{line: 975, col: 16, offset: 40537},
																																		val:        "literal",
																																		ignoreCase: false,
																																	},
																																},
																															},
																															&labeledExpr{
																																pos:   position{line: 191, col: 41, offset: 7151},
																																label: "key",
																																expr: &oneOrMoreExpr{
																																	pos: position{line: 191, col: 45, offset: 7155},
																																	expr: &seqExpr{
																																		pos: position{line: 191, col: 46, offset: 7156},
																																		exprs: []interface{}{
																																			&notExpr{
																																				pos: position{line: 191, col: 46, offset: 7156},
																																				expr: &litMatcher{
																																					pos:        position{line: 191, col: 47, offset: 7157},
																																					val:        "=",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 191, col: 51, offset: 7161},
																																				expr: &litMatcher{
																																					pos:        position{line: 191, col: 52, offset: 7162},
																																					val:        ",",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 191, col: 56, offset: 7166},
																																				expr: &litMatcher{
																																					pos:        position{line: 191, col: 57, offset: 7167},
																																					val:        "]",
																																					ignoreCase: false,
																																				},
																																			},
																																			&anyMatcher{
																																				line: 191, col: 61, offset: 7171,
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																											&zeroOrOneExpr{
																												pos: position{line: 187, col: 24, offset: 7021},
																												expr: &litMatcher{
																													pos:        position{line: 187, col: 24, offset: 7021},
																													val:        ",",
																													ignoreCase: false,
																												},
																											},
																											&zeroOrMoreExpr{
																												pos: position{line: 187, col: 29, offset: 7026},
																												expr: &choiceExpr{
																													pos: position{line: 1024, col: 7, offset: 41621},
																													alternatives: []interface{}{
																														&litMatcher{
																															pos:        position{line: 1024, col: 7, offset: 41621},
																															val:        " ",
																															ignoreCase: false,
																														},
																														&actionExpr{
																															pos: position{line: 1024, col: 13, offset: 41627},
																															run: (*parser).callonInlineElement863,
																															expr: &litMatcher{
																																pos:        position{line: 1024, col: 13, offset: 41627},
																																val:        "\t",
																																ignoreCase: false,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																				&litMatcher{
																					pos:        position{line: 695, col: 40, offset: 28914},
																					val:        "]",
																					ignoreCase: false,
																				},
																			},
																		},
																	},
																},
															},
														},
													},
												},
											},
											&actionExpr{
												pos: position{line: 675, col: 5, offset: 28279},
												run: (*parser).callonInlineElement866,
												expr: &labeledExpr{
													pos:   position{line: 675, col: 5, offset: 28279},
													label: "url",
													expr: &actionExpr{
														pos: position{line: 679, col: 20, offset: 28369},
														run: (*parser).callonInlineElement868,
														expr: &seqExpr{
															pos: position{line: 679, col: 20, offset: 28369},
															exprs: []interface{}{
																&choiceExpr{
																	pos: position{line: 1018, col: 15, offset: 41506},
																	alternatives: []interface{}{
																		&litMatcher{
																			pos:        position{line: 1018, col: 15, offset: 41506},
																			val:        "http://",
																			ignoreCase: false,
																		},
																		&litMatcher{
																			pos:        position{line: 1018, col: 27, offset: 41518},
																			val:        "https://",
																			ignoreCase: false,
																		},
																		&litMatcher{
																			pos:        position{line: 1018, col: 40, offset: 41531},
																			val:        "ftp://",
																			ignoreCase: false,
																		},
																		&litMatcher{
																			pos:        position{line: 1018, col: 51, offset: 41542},
																			val:        "irc://",
																			ignoreCase: false,
																		},
																		&litMatcher{
																			pos:        position{line: 1018, col: 62, offset: 41553},
																			val:        "mailto:",
																			ignoreCase: false,
																		},
																	},
																},
																&actionExpr{
																	pos: position{line: 1006, col: 8, offset: 41269},
																	run: (*parser).callonInlineElement876,
																	expr: &oneOrMoreExpr{
																		pos: position{line: 1006, col: 8, offset: 41269},
																		expr: &seqExpr{
																			pos: position{line: 1006, col: 9, offset: 41270},
																			exprs: []interface{}{
																				&notExpr{
																					pos: position{line: 1006, col: 9, offset: 41270},
																					expr: &choiceExpr{
																						pos: position{line: 1028, col: 12, offset: 41683},
																						alternatives: []interface{}{
																							&litMatcher{
																								pos:        position{line: 1028, col: 12, offset: 41683},
																								val:        "\r\n",
																								ignoreCase: false,
																							},
																							&charClassMatcher{
																								pos:        position{line: 1028, col: 21, offset: 41692},
																								val:        "[\\r\\n]",
																								chars:      []rune{'\r', '\n'},
																								ignoreCase: false,
																								inverted:   false,
																							},
																						},
																					},
																				},
																				&notExpr{
																					pos: position{line: 1006, col: 18, offset: 41279},
																					expr: &choiceExpr{
																						pos: position{line: 1024, col: 7, offset: 41621},
																						alternatives: []interface{}{
																							&litMatcher{
																								pos:        position{line: 1024, col: 7, offset: 41621},
																								val:        " ",
																								ignoreCase: false,
																							},
																							&actionExpr{
																								pos: position{line: 1024, col: 13, offset: 41627},
																								run: (*parser).callonInlineElement886,
																								expr: &litMatcher{
																									pos:        position{line: 1024, col: 13, offset: 41627},
																									val:        "\t",
																									ignoreCase: false,
																								},
																							},
																						},
																					},
																				},
																				&notExpr{
																					pos: position{line: 1006, col: 22, offset: 41283},
																					expr: &litMatcher{
																						pos:        position{line: 1006, col: 23, offset: 41284},
																						val:        "[",
																						ignoreCase: false,
																					},
																				},
																				&notExpr{
																					pos: position{line: 1006, col: 27, offset: 41288},
																					expr: &litMatcher{
																						pos:        position{line: 1006, col: 28, offset: 41289},
																						val:        "]",
																						ignoreCase: false,
																					},
																				},
																				&anyMatcher{
																					line: 1006, col: 32, offset: 41293,
																				},
																			},
																		},
																	},
																},
															},
														},
													},
												},
											},
										},
									},
								},
							},
							&actionExpr{
								pos: position{line: 114, col: 34, offset: 4427},
								run: (*parser).callonInlineElement893,
								expr: &seqExpr{
									pos: position{line: 114, col: 34, offset: 4427},
									exprs: []interface{}{
										&litMatcher{
											pos:        position{line: 114, col: 34, offset: 4427},
											val:        "{",
											ignoreCase: false,
										},
										&labeledExpr{
											pos:   position{line: 114, col: 38, offset: 4431},
											label: "name",
											expr: &actionExpr{
												pos: position{line: 121, col: 26, offset: 4726},
												run: (*parser).callonInlineElement897,
												expr: &seqExpr{
													pos: position{line: 121, col: 26, offset: 4726},
													exprs: []interface{}{
														&charClassMatcher{
															pos:        position{line: 121, col: 27, offset: 4727},
															val:        "[_A-Za-z0-9]",
															chars:      []rune{'_'},
															ranges:     []rune{'A', 'Z', 'a', 'z', '0', '9'},
															ignoreCase: false,
															inverted:   false,
														},
														&zeroOrMoreExpr{
															pos: position{line: 121, col: 56, offset: 4756},
															expr: &charClassMatcher{
																pos:        position{line: 121, col: 57, offset: 4757},
																val:        "[-A-Za-z0-9]",
																chars:      []rune{'-'},
																ranges:     []rune{'A', 'Z', 'a', 'z', '0', '9'},
																ignoreCase: false,
																inverted:   false,
															},
														},
													},
												},
											},
										},
										&litMatcher{
											pos:        position{line: 114, col: 67, offset: 4460},
											val:        "}",
											ignoreCase: false,
										},
									},
								},
							},
							&ruleRefExpr{
								pos:  position{line: 530, col: 124, offset: 20774},
								name: "InlineFootnote",
							},
							&actionExpr{
								pos: position{line: 1002, col: 9, offset: 41195},
								run: (*parser).callonInlineElement904,
								expr: &oneOrMoreExpr{
									pos: position{line: 1002, col: 9, offset: 41195},
									expr: &seqExpr{
										pos: position{line: 1002, col: 10, offset: 41196},
										exprs: []interface{}{
											&notExpr{
												pos: position{line: 1002, col: 10, offset: 41196},
												expr: &choiceExpr{
													pos: position{line: 1028, col: 12, offset: 41683},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1028, col: 12, offset: 41683},
															val:        "\r\n",
															ignoreCase: false,
														},
														&charClassMatcher{
															pos:        position{line: 1028, col: 21, offset: 41692},
															val:        "[\\r\\n]",
															chars:      []rune{'\r', '\n'},
															ignoreCase: false,
															inverted:   false,
														},
													},
												},
											},
											&notExpr{
												pos: position{line: 1002, col: 19, offset: 41205},
												expr: &choiceExpr{
													pos: position{line: 1024, col: 7, offset: 41621},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1024, col: 7, offset: 41621},
															val:        " ",
															ignoreCase: false,
														},
														&actionExpr{
															pos: position{line: 1024, col: 13, offset: 41627},
															run: (*parser).callonInlineElement914,
															expr: &litMatcher{
																pos:        position{line: 1024, col: 13, offset: 41627},
																val:        "\t",
																ignoreCase: false,
															},
														},
													},
												},
											},
											&notExpr{
												pos: position{line: 1002, col: 23, offset: 41209},
												expr: &charClassMatcher{
													pos:        position{line: 1000, col: 16, offset: 41164},
													val:        "[()[]]",
													chars:      []rune{'(', ')', '[', ']'},
													ignoreCase: false,
													inverted:   false,
												},
											},
											&anyMatcher{
												line: 1002, col: 36, offset: 41222,
											},
										},
									},
								},
							},
							&charClassMatcher{
								pos:        position{line: 1000, col: 16, offset: 41164},
								val:        "[()[]]",
								chars:      []rune{'(', ')', '[', ']'},
								ignoreCase: false,
								inverted:   false,
							},
						},
					},
				},
			},
		},
		{
			name: "InlineElementsWithoutSubtitution",
			pos:  position{line: 537, col: 1, offset: 21021},
			expr: &actionExpr{
				pos: position{line: 537, col: 37, offset: 21057},
				run: (*parser).callonInlineElementsWithoutSubtitution1,
				expr: &seqExpr{
					pos: position{line: 537, col: 37, offset: 21057},
					exprs: []interface{}{
						&notExpr{
							pos: position{line: 537, col: 37, offset: 21057},
							expr: &notExpr{
								pos: position{line: 1030, col: 8, offset: 41712},
								expr: &anyMatcher{
									line: 1030, col: 9, offset: 41713,
								},
							},
						},
						&notExpr{
							pos: position{line: 537, col: 42, offset: 21062},
							expr: &choiceExpr{
								pos: position{line: 763, col: 19, offset: 31912},
								alternatives: []interface{}{
									&litMatcher{
										pos:        position{line: 968, col: 26, offset: 40226},
										val:        "....",
										ignoreCase: false,
									},
									&litMatcher{
										pos:        position{line: 771, col: 25, offset: 32329},
										val:        "```",
										ignoreCase: false,
									},
									&litMatcher{
										pos:        position{line: 782, col: 26, offset: 32881},
										val:        "----",
										ignoreCase: false,
									},
									&litMatcher{
										pos:        position{line: 804, col: 26, offset: 33857},
										val:        "====",
										ignoreCase: false,
									},
									&litMatcher{
										pos:        position{line: 925, col: 26, offset: 38379},
										val:        "////",
										ignoreCase: false,
									},
									&litMatcher{
										pos:        position{line: 827, col: 24, offset: 34755},
										val:        "____",
										ignoreCase: false,
									},
									&litMatcher{
										pos:        position{line: 881, col: 26, offset: 36707},
										val:        "****",
										ignoreCase: false,
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 537, col: 58, offset: 21078},
							label: "elements",
							expr: &oneOrMoreExpr{
								pos: position{line: 537, col: 67, offset: 21087},
								expr: &seqExpr{
									pos: position{line: 537, col: 68, offset: 21088},
									exprs: []interface{}{
										&notExpr{
											pos: position{line: 537, col: 68, offset: 21088},
											expr: &choiceExpr{
												pos: position{line: 1032, col: 8, offset: 41723},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1028, col: 12, offset: 41683},
														val:        "\r\n",
														ignoreCase: false,
													},
													&charClassMatcher{
														pos:        position{line: 1028, col: 21, offset: 41692},
														val:        "[\\r\\n]",
														chars:      []rune{'\r', '\n'},
														ignoreCase: false,
														inverted:   false,
													},
													&notExpr{
														pos: position{line: 1030, col: 8, offset: 41712},
														expr: &anyMatcher{
															line: 1030, col: 9, offset: 41713,
														},
													},
												},
											},
										},
										&zeroOrMoreExpr{
											pos: position{line: 537, col: 73, offset: 21093},
											expr: &choiceExpr{
												pos: position{line: 1024, col: 7, offset: 41621},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1024, col: 7, offset: 41621},
														val:        " ",
														ignoreCase: false,
													},
													&actionExpr{
														pos: position{line: 1024, col: 13, offset: 41627},
														run: (*parser).callonInlineElementsWithoutSubtitution27,
														expr: &litMatcher{
															pos:        position{line: 1024, col: 13, offset: 41627},
															val:        "\t",
															ignoreCase: false,
														},
													},
												},
											},
										},
										&notExpr{
											pos: position{line: 537, col: 77, offset: 21097},
											expr: &actionExpr{
												pos: position{line: 151, col: 20, offset: 5775},
												run: (*parser).callonInlineElementsWithoutSubtitution30,
												expr: &seqExpr{
													pos: position{line: 151, col: 20, offset: 5775},
													exprs: []interface{}{
														&litMatcher{
															pos:        position{line: 151, col: 20, offset: 5775},
															val:        "[[",
															ignoreCase: false,
														},
														&labeledExpr{
															pos:   position{line: 151, col: 25, offset: 5780},
															label: "id",
															expr: &actionExpr{
																pos: position{line: 1010, col: 7, offset: 41339},
																run: (*parser).callonInlineElementsWithoutSubtitution34,
																expr: &oneOrMoreExpr{
																	pos: position{line: 1010, col: 7, offset: 41339},
																	expr: &seqExpr{
																		pos: position{line: 1010, col: 8, offset: 41340},
																		exprs: []interface{}{
																			&notExpr{
																				pos: position{line: 1010, col: 8, offset: 41340},
																				expr: &choiceExpr{
																					pos: position{line: 1028, col: 12, offset: 41683},
																					alternatives: []interface{}{
																						&litMatcher{
																							pos:        position{line: 1028, col: 12, offset: 41683},
																							val:        "\r\n",
																							ignoreCase: false,
																						},
																						&charClassMatcher{
																							pos:        position{line: 1028, col: 21, offset: 41692},
																							val:        "[\\r\\n]",
																							chars:      []rune{'\r', '\n'},
																							ignoreCase: false,
																							inverted:   false,
																						},
																					},
																				},
																			},
																			&notExpr{
																				pos: position{line: 1010, col: 17, offset: 41349},
																				expr: &choiceExpr{
																					pos: position{line: 1024, col: 7, offset: 41621},
																					alternatives: []interface{}{
																						&litMatcher{
																							pos:        position{line: 1024, col: 7, offset: 41621},
																							val:        " ",
																							ignoreCase: false,
																						},
																						&actionExpr{
																							pos: position{line: 1024, col: 13, offset: 41627},
																							run: (*parser).callonInlineElementsWithoutSubtitution44,
																							expr: &litMatcher{
																								pos:        position{line: 1024, col: 13, offset: 41627},
																								val:        "\t",
																								ignoreCase: false,
																							},
																						},
																					},
																				},
																			},
																			&notExpr{
																				pos: position{line: 1010, col: 21, offset: 41353},
																				expr: &litMatcher{
																					pos:        position{line: 1010, col: 22, offset: 41354},
																					val:        "[",
																					ignoreCase: false,
																				},
																			},
																			&notExpr{
																				pos: position{line: 1010, col: 26, offset: 41358},
																				expr: &litMatcher{
																					pos:        position{line: 1010, col: 27, offset: 41359},
																					val:        "]",
																					ignoreCase: false,
																				},
																			},
																			&notExpr{
																				pos: position{line: 1010, col: 31, offset: 41363},
																				expr: &litMatcher{
																					pos:        position{line: 1010, col: 32, offset: 41364},
																					val:        "<<",
																					ignoreCase: false,
																				},
																			},
																			&notExpr{
																				pos: position{line: 1010, col: 37, offset: 41369},
																				expr: &litMatcher{
																					pos:        position{line: 1010, col: 38, offset: 41370},
																					val:        ">>",
																					ignoreCase: false,
																				},
																			},
																			&notExpr{
																				pos: position{line: 1010, col: 43, offset: 41375},
																				expr: &litMatcher{
																					pos:        position{line: 1010, col: 44, offset: 41376},
																					val:        ",",
																					ignoreCase: false,
																				},
																			},
																			&anyMatcher{
																				line: 1010, col: 48, offset: 41380,
																			},
																		},
																	},
																},
															},
														},
														&litMatcher{
															pos:        position{line: 151, col: 33, offset: 5788},
															val:        "]]",
															ignoreCase: false,
														},
													},
												},
											},
										},
										&ruleRefExpr{
											pos:  position{line: 537, col: 94, offset: 21114},
											name: "InlineElementWithoutSubtitution",
										},
										&zeroOrMoreExpr{
											pos: position{line: 537, col: 126, offset: 21146},
											expr: &choiceExpr{
												pos: position{line: 1024, col: 7, offset: 41621},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1024, col: 7, offset: 41621},
														val:        " ",
														ignoreCase: false,
													},
													&actionExpr{
														pos: position{line: 1024, col: 13, offset: 41627},
														run: (*parser).callonInlineElementsWithoutSubtitution62,
														expr: &litMatcher{
															pos:        position{line: 1024, col: 13, offset: 41627},
															val:        "\t",
															ignoreCase: false,
														},
													},
												},
											},
										},
									},
								},
							},
						},
						&choiceExpr{
							pos: position{line: 1032, col: 8, offset: 41723},
							alternatives: []interface{}{
								&litMatcher{
									pos:        position{line: 1028, col: 12, offset: 41683},
									val:        "\r\n",
									ignoreCase: false,
								},
								&charClassMatcher{
									pos:        position{line: 1028, col: 21, offset: 41692},
									val:        "[\\r\\n]",
									chars:      []rune{'\r', '\n'},
									ignoreCase: false,
									inverted:   false,
								},
								&notExpr{
									pos: position{line: 1030, col: 8, offset: 41712},
									expr: &anyMatcher{
										line: 1030, col: 9, offset: 41713,
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "InlineElementWithoutSubtitution",
			pos:  position{line: 541, col: 1, offset: 21262},
			expr: &actionExpr{
				pos: position{line: 541, col: 36, offset: 21297},
				run: (*parser).callonInlineElementWithoutSubtitution1,
				expr: &labeledExpr{
					pos:   position{line: 541, col: 36, offset: 21297},
					label: "element",
					expr: &choiceExpr{
						pos: position{line: 541, col: 45, offset: 21306},
						alternatives: []interface{}{
							&ruleRefExpr{
								pos:  position{line: 541, col: 45, offset: 21306},
								name: "QuotedText",
							},
							&actionExpr{
								pos: position{line: 656, col: 19, offset: 27690},
								run: (*parser).callonInlineElementWithoutSubtitution5,
								expr: &seqExpr{
									pos: position{line: 656, col: 19, offset: 27690},
									exprs: []interface{}{
										&litMatcher{
											pos:        position{line: 656, col: 19, offset: 27690},
											val:        "<<",
											ignoreCase: false,
										},
										&labeledExpr{
											pos:   position{line: 656, col: 24, offset: 27695},
											label: "id",
											expr: &actionExpr{
												pos: position{line: 1010, col: 7, offset: 41339},
												run: (*parser).callonInlineElementWithoutSubtitution9,
												expr: &oneOrMoreExpr{
													pos: position{line: 1010, col: 7, offset: 41339},
													expr: &seqExpr{
														pos: position{line: 1010, col: 8, offset: 41340},
														exprs: []interface{}{
															&notExpr{
																pos: position{line: 1010, col: 8, offset: 41340},
																expr: &choiceExpr{
																	pos: position{line: 1028, col: 12, offset: 41683},
																	alternatives: []interface{}{
																		&litMatcher{
																			pos:        position{line: 1028, col: 12, offset: 41683},
																			val:        "\r\n",
																			ignoreCase: false,
																		},
																		&charClassMatcher{
																			pos:        position{line: 1028, col: 21, offset: 41692},
																			val:        "[\\r\\n]",
																			chars:      []rune{'\r', '\n'},
																			ignoreCase: false,
																			inverted:   false,
																		},
																	},
																},
															},
															&notExpr{
																pos: position{line: 1010, col: 17, offset: 41349},
																expr: &choiceExpr{
																	pos: position{line: 1024, col: 7, offset: 41621},
																	alternatives: []interface{}{
																		&litMatcher{
																			pos:        position{line: 1024, col: 7, offset: 41621},
																			val:        " ",
																			ignoreCase: false,
																		},
																		&actionExpr{
																			pos: position{line: 1024, col: 13, offset: 41627},
																			run: (*parser).callonInlineElementWithoutSubtitution19,
																			expr: &litMatcher{
																				pos:        position{line: 1024, col: 13, offset: 41627},
																				val:        "\t",
																				ignoreCase: false,
																			},
																		},
																	},
																},
															},
															&notExpr{
																pos: position{line: 1010, col: 21, offset: 41353},
																expr: &litMatcher{
																	pos:        position{line: 1010, col: 22, offset: 41354},
																	val:        "[",
																	ignoreCase: false,
																},
															},
															&notExpr{
																pos: position{line: 1010, col: 26, offset: 41358},
																expr: &litMatcher{
																	pos:        position{line: 1010, col: 27, offset: 41359},
																	val:        "]",
																	ignoreCase: false,
																},
															},
															&notExpr{
																pos: position{line: 1010, col: 31, offset: 41363},
																expr: &litMatcher{
																	pos:        position{line: 1010, col: 32, offset: 41364},
																	val:        "<<",
																	ignoreCase: false,
																},
															},
															&notExpr{
																pos: position{line: 1010, col: 37, offset: 41369},
																expr: &litMatcher{
																	pos:        position{line: 1010, col: 38, offset: 41370},
																	val:        ">>",
																	ignoreCase: false,
																},
															},
															&notExpr{
																pos: position{line: 1010, col: 43, offset: 41375},
																expr: &litMatcher{
																	pos:        position{line: 1010, col: 44, offset: 41376},
																	val:        ",",
																	ignoreCase: false,
																},
															},
															&anyMatcher{
																line: 1010, col: 48, offset: 41380,
															},
														},
													},
												},
											},
										},
										&zeroOrMoreExpr{
											pos: position{line: 656, col: 32, offset: 27703},
											expr: &choiceExpr{
												pos: position{line: 1024, col: 7, offset: 41621},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1024, col: 7, offset: 41621},
														val:        " ",
														ignoreCase: false,
													},
													&actionExpr{
														pos: position{line: 1024, col: 13, offset: 41627},
														run: (*parser).callonInlineElementWithoutSubtitution35,
														expr: &litMatcher{
															pos:        position{line: 1024, col: 13, offset: 41627},
															val:        "\t",
															ignoreCase: false,
														},
													},
												},
											},
										},
										&litMatcher{
											pos:        position{line: 656, col: 36, offset: 27707},
											val:        ",",
											ignoreCase: false,
										},
										&labeledExpr{
											pos:   position{line: 656, col: 40, offset: 27711},
											label: "label",
											expr: &actionExpr{
												pos: position{line: 662, col: 24, offset: 27913},
												run: (*parser).callonInlineElementWithoutSubtitution39,
												expr: &oneOrMoreExpr{
													pos: position{line: 662, col: 24, offset: 27913},
													expr: &seqExpr{
														pos: position{line: 662, col: 25, offset: 27914},
														exprs: []interface{}{
															&notExpr{
																pos: position{line: 662, col: 25, offset: 27914},
																expr: &litMatcher{
																	pos:        position{line: 662, col: 26, offset: 27915},
																	val:        ">>",
																	ignoreCase: false,
																},
															},
															&anyMatcher{
																line: 662, col: 31, offset: 27920,
															},
														},
													},
												},
											},
										},
										&litMatcher{
											pos:        position{line: 656, col: 68, offset: 27739},
											val:        ">>",
											ignoreCase: false,
										},
									},
								},
							},
							&actionExpr{
								pos: position{line: 658, col: 5, offset: 27814},
								run: (*parser).callonInlineElementWithoutSubtitution46,
								expr: &seqExpr{
									pos: position{line: 658, col: 5, offset: 27814},
									exprs: []interface{}{
										&litMatcher{
											pos:        position{line: 658, col: 5, offset: 27814},
											val:        "<<",
											ignoreCase: false,
										},
										&labeledExpr{
											pos:   position{line: 658, col: 10, offset: 27819},
											label: "id",
											expr: &actionExpr{
												pos: position{line: 1010, col: 7, offset: 41339},
												run: (*parser).callonInlineElementWithoutSubtitution50,
												expr: &oneOrMoreExpr{
													pos: position{line: 1010, col: 7, offset: 41339},
													expr: &seqExpr{
														pos: position{line: 1010, col: 8, offset: 41340},
														exprs: []interface{}{
															&notExpr{
																pos: position{line: 1010, col: 8, offset: 41340},
																expr: &choiceExpr{
																	pos: position{line: 1028, col: 12, offset: 41683},
																	alternatives: []interface{}{
																		&litMatcher{
																			pos:        position{line: 1028, col: 12, offset: 41683},
																			val:        "\r\n",
																			ignoreCase: false,
																		},
																		&charClassMatcher{
																			pos:        position{line: 1028, col: 21, offset: 41692},
																			val:        "[\\r\\n]",
																			chars:      []rune{'\r', '\n'},
																			ignoreCase: false,
																			inverted:   false,
																		},
																	},
																},
															},
															&notExpr{
																pos: position{line: 1010, col: 17, offset: 41349},
																expr: &choiceExpr{
																	pos: position{line: 1024, col: 7, offset: 41621},
																	alternatives: []interface{}{
																		&litMatcher{
																			pos:        position{line: 1024, col: 7, offset: 41621},
																			val:        " ",
																			ignoreCase: false,
																		},
																		&actionExpr{
																			pos: position{line: 1024, col: 13, offset: 41627},
																			run: (*parser).callonInlineElementWithoutSubtitution60,
																			expr: &litMatcher{
																				pos:        position{line: 1024, col: 13, offset: 41627},
																				val:        "\t",
																				ignoreCase: false,
																			},
																		},
																	},
																},
															},
															&notExpr{
																pos: position{line: 1010, col: 21, offset: 41353},
																expr: &litMatcher{
																	pos:        position{line: 1010, col: 22, offset: 41354},
																	val:        "[",
																	ignoreCase: false,
																},
															},
															&notExpr{
																pos: position{line: 1010, col: 26, offset: 41358},
																expr: &litMatcher{
																	pos:        position{line: 1010, col: 27, offset: 41359},
																	val:        "]",
																	ignoreCase: false,
																},
															},
															&notExpr{
																pos: position{line: 1010, col: 31, offset: 41363},
																expr: &litMatcher{
																	pos:        position{line: 1010, col: 32, offset: 41364},
																	val:        "<<",
																	ignoreCase: false,
																},
															},
															&notExpr{
																pos: position{line: 1010, col: 37, offset: 41369},
																expr: &litMatcher{
																	pos:        position{line: 1010, col: 38, offset: 41370},
																	val:        ">>",
																	ignoreCase: false,
																},
															},
															&notExpr{
																pos: position{line: 1010, col: 43, offset: 41375},
																expr: &litMatcher{
																	pos:        position{line: 1010, col: 44, offset: 41376},
																	val:        ",",
																	ignoreCase: false,
																},
															},
															&anyMatcher{
																line: 1010, col: 48, offset: 41380,
															},
														},
													},
												},
											},
										},
										&litMatcher{
											pos:        position{line: 658, col: 18, offset: 27827},
											val:        ">>",
											ignoreCase: false,
										},
									},
								},
							},
							&ruleRefExpr{
								pos:  position{line: 541, col: 75, offset: 21336},
								name: "Passthrough",
							},
							&actionExpr{
								pos: position{line: 710, col: 16, offset: 29412},
								run: (*parser).callonInlineElementWithoutSubtitution75,
								expr: &seqExpr{
									pos: position{line: 710, col: 16, offset: 29412},
									exprs: []interface{}{
										&litMatcher{
											pos:        position{line: 710, col: 16, offset: 29412},
											val:        "image:",
											ignoreCase: false,
										},
										&notExpr{
											pos: position{line: 710, col: 25, offset: 29421},
											expr: &litMatcher{
												pos:        position{line: 710, col: 26, offset: 29422},
												val:        ":",
												ignoreCase: false,
											},
										},
										&labeledExpr{
											pos:   position{line: 710, col: 30, offset: 29426},
											label: "path",
											expr: &actionExpr{
												pos: position{line: 1006, col: 8, offset: 41269},
												run: (*parser).callonInlineElementWithoutSubtitution81,
												expr: &oneOrMoreExpr{
													pos: position{line: 1006, col: 8, offset: 41269},
													expr: &seqExpr{
														pos: position{line: 1006, col: 9, offset: 41270},
														exprs: []interface{}{
															&notExpr{
																pos: position{line: 1006, col: 9, offset: 41270},
																expr: &choiceExpr{
																	pos: position{line: 1028, col: 12, offset: 41683},
																	alternatives: []interface{}{
																		&litMatcher{
																			pos:        position{line: 1028, col: 12, offset: 41683},
																			val:        "\r\n",
																			ignoreCase: false,
																		},
																		&charClassMatcher{
																			pos:        position{line: 1028, col: 21, offset: 41692},
																			val:        "[\\r\\n]",
																			chars:      []rune{'\r', '\n'},
																			ignoreCase: false,
																			inverted:   false,
																		},
																	},
																},
															},
															&notExpr{
																pos: position{line: 1006, col: 18, offset: 41279},
																expr: &choiceExpr{
																	pos: position{line: 1024, col: 7, offset: 41621},
																	alternatives: []interface{}{
																		&litMatcher{
																			pos:        position{line: 1024, col: 7, offset: 41621},
																			val:        " ",
																			ignoreCase: false,
																		},
																		&actionExpr{
																			pos: position{line: 1024, col: 13, offset: 41627},
																			run: (*parser).callonInlineElementWithoutSubtitution91,
																			expr: &litMatcher{
																				pos:        position{line: 1024, col: 13, offset: 41627},
																				val:        "\t",
																				ignoreCase: false,
																			},
																		},
																	},
																},
															},
															&notExpr{
																pos: position{line: 1006, col: 22, offset: 41283},
																expr: &litMatcher{
																	pos:        position{line: 1006, col: 23, offset: 41284},
																	val:        "[",
																	ignoreCase: false,
																},
															},
															&notExpr{
																pos: position{line: 1006, col: 27, offset: 41288},
																expr: &litMatcher{
																	pos:        position{line: 1006, col: 28, offset: 41289},
																	val:        "]",
																	ignoreCase: false,
																},
															},
															&anyMatcher{
																line: 1006, col: 32, offset: 41293,
															},
														},
													},
												},
											},
										},
										&labeledExpr{
											pos:   position{line: 710, col: 41, offset: 29437},
											label: "attributes",
											expr: &choiceExpr{
												pos: position{line: 715, col: 20, offset: 29682},
												alternatives: []interface{}{
													&actionExpr{
														pos: position{line: 715, col: 20, offset: 29682},
														run: (*parser).callonInlineElementWithoutSubtitution100,
														expr: &seqExpr{
															pos: position{line: 715, col: 20, offset: 29682},
															exprs: []interface{}{
																&litMatcher{
																	pos:        position{line: 715, col: 20, offset: 29682},
																	val:        "[",
																	ignoreCase: false,
																},
																&labeledExpr{
																	pos:   position{line: 715, col: 24, offset: 29686},
																	label: "alt",
																	expr: &actionExpr{
																		pos: position{line: 732, col: 19, offset: 30461},
																		run: (*parser).callonInlineElementWithoutSubtitution104,
																		expr: &oneOrMoreExpr{
																			pos: position{line: 732, col: 19, offset: 30461},
																			expr: &seqExpr{
																				pos: position{line: 732, col: 20, offset: 30462},
																				exprs: []interface{}{
																					&notExpr{
																						pos: position{line: 732, col: 20, offset: 30462},
																						expr: &litMatcher{
																							pos:        position{line: 732, col: 21, offset: 30463},
																							val:        ",",
																							ignoreCase: false,
																						},
																					},
																					&notExpr{
																						pos: position{line: 732, col: 25, offset: 30467},
																						expr: &litMatcher{
																							pos:        position{line: 732, col: 26, offset: 30468},
																							val:        "=",
																							ignoreCase: false,
																						},
																					},
																					&notExpr{
																						pos: position{line: 732, col: 30, offset: 30472},
																						expr: &litMatcher{
																							pos:        position{line: 732, col: 31, offset: 30473},
																							val:        "]",
																							ignoreCase: false,
																						},
																					},
																					&anyMatcher{
																						line: 732, col: 35, offset: 30477,
																					},
																				},
																			},
																		},
																	},
																},
																&litMatcher{
																	pos:        position{line: 715, col: 45, offset: 29707},
																	val:        ",",
																	ignoreCase: false,
																},
																&labeledExpr{
																	pos:   position{line: 716, col: 9, offset: 29719},
																	label: "width",
																	expr: &actionExpr{
																		pos: position{line: 732, col: 19, offset: 30461},
																		run: (*parser).callonInlineElementWithoutSubtitution116,
																		expr: &oneOrMoreExpr{
																			pos: position{line: 732, col: 19, offset: 30461},
																			expr: &seqExpr{
																				pos: position{line: 732, col: 20, offset: 30462},
																				exprs: []interface{}{
																					&notExpr{
																						pos: position{line: 732, col: 20, offset: 30462},
																						expr: &litMatcher{
																							pos:        position{line: 732, col: 21, offset: 30463},
																							val:        ",",
																							ignoreCase: false,
																						},
																					},
																					&notExpr{
																						pos: position{line: 732, col: 25, offset: 30467},
																						expr: &litMatcher{
																							pos:        position{line: 732, col: 26, offset: 30468},
																							val:        "=",
																							ignoreCase: false,
																						},
																					},
																					&notExpr{
																						pos: position{line: 732, col: 30, offset: 30472},
																						expr: &litMatcher{
																							pos:        position{line: 732, col: 31, offset: 30473},
																							val:        "]",
																							ignoreCase: false,
																						},
																					},
																					&anyMatcher{
																						line: 732, col: 35, offset: 30477,
																					},
																				},
																			},
																		},
																	},
																},
																&litMatcher{
																	pos:        position{line: 716, col: 33, offset: 29743},
																	val:        ",",
																	ignoreCase: false,
																},
																&labeledExpr{
																	pos:   position{line: 717, col: 9, offset: 29755},
																	label: "height",
																	expr: &actionExpr{
																		pos: position{line: 732, col: 19, offset: 30461},
																		run: (*parser).callonInlineElementWithoutSubtitution128,
																		expr: &oneOrMoreExpr{
																			pos: position{line: 732, col: 19, offset: 30461},
																			expr: &seqExpr{
																				pos: position{line: 732, col: 20, offset: 30462},
																				exprs: []interface{}{
																					&notExpr{
																						pos: position{line: 732, col: 20, offset: 30462},
																						expr: &litMatcher{
																							pos:        position{line: 732, col: 21, offset: 30463},
																							val:        ",",
																							ignoreCase: false,
																						},
																					},
																					&notExpr{
																						pos: position{line: 732, col: 25, offset: 30467},
																						expr: &litMatcher{
																							pos:        position{line: 732, col: 26, offset: 30468},
																							val:        "=",
																							ignoreCase: false,
																						},
																					},
																					&notExpr{
																						pos: position{line: 732, col: 30, offset: 30472},
																						expr: &litMatcher{
																							pos:        position{line: 732, col: 31, offset: 30473},
																							val:        "]",
																							ignoreCase: false,
																						},
																					},
																					&anyMatcher{
																						line: 732, col: 35, offset: 30477,
																					},
																				},
																			},
																		},
																	},
																},
																&zeroOrOneExpr{
																	pos: position{line: 717, col: 33, offset: 29779},
																	expr: &litMatcher{
																		pos:        position{line: 717, col: 33, offset: 29779},
																		val:        ",",
																		ignoreCase: false,
																	},
																},
																&labeledExpr{
																	pos:   position{line: 718, col: 9, offset: 29792},
																	label: "otherAttrs",
																	expr: &zeroOrMoreExpr{
																		pos: position{line: 718, col: 20, offset: 29803},
																		expr: &choiceExpr{
																			pos: position{line: 185, col: 21, offset: 6867},
																			alternatives: []interface{}{
																				&actionExpr{
																					pos: position{line: 185, col: 21, offset: 6867},
																					run: (*parser).callonInlineElementWithoutSubtitution143,
																					expr: &seqExpr{
																						pos: position{line: 185, col: 21, offset: 6867},
																						exprs: []interface{}{
																							&labeledExpr{
																								pos:   position{line: 185, col: 21, offset: 6867},
																								label: "key",
																								expr: &actionExpr{
																									pos: position{line: 191, col: 17, offset: 7127},
																									run: (*parser).callonInlineElementWithoutSubtitution146,
																									expr: &seqExpr{
																										pos: position{line: 191, col: 17, offset: 7127},
																										exprs: []interface{}{
																											&notExpr{
																												pos: position{line: 191, col: 17, offset: 7127},
																												expr: &actionExpr{
																													pos: position{line: 231, col: 14, offset: 8674},
																													run: (*parser).callonInlineElementWithoutSubtitution149,
																													expr: &litMatcher{
																														pos:        position{line: 231, col: 14, offset: 8674},
																														val:        "verse",
																														ignoreCase: false,
																													},
																												},
																											},
																											&notExpr{
																												pos: position{line: 191, col: 28, offset: 7138},
																												expr: &actionExpr{
																													pos: position{line: 975, col: 16, offset: 40537},
																													run: (*parser).callonInlineElementWithoutSubtitution152,
																													expr: &litMatcher{
																														pos:        position{line: 975, col: 16, offset: 40537},
																														val:        "literal",
																														ignoreCase: false,
																													},
																												},
																											},
																											&labeledExpr{
																												pos:   position{line: 191, col: 41, offset: 7151},
																												label: "key",
																												expr: &oneOrMoreExpr{
																													pos: position{line: 191, col: 45, offset: 7155},
																													expr: &seqExpr{
																														pos: position{line: 191, col: 46, offset: 7156},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 191, col: 46, offset: 7156},
																																expr: &litMatcher{
																																	pos:        position{line: 191, col: 47, offset: 7157},
																																	val:        "=",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 191, col: 51, offset: 7161},
																																expr: &litMatcher{
																																	pos:        position{line: 191, col: 52, offset: 7162},
																																	val:        ",",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 191, col: 56, offset: 7166},
																																expr: &litMatcher{
																																	pos:        position{line: 191, col: 57, offset: 7167},
																																	val:        "]",
																																	ignoreCase: false,
																																},
																															},
																															&anyMatcher{
																																line: 191, col: 61, offset: 7171,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&litMatcher{
																								pos:        position{line: 185, col: 40, offset: 6886},
																								val:        "=",
																								ignoreCase: false,
																							},
																							&labeledExpr{
																								pos:   position{line: 185, col: 44, offset: 6890},
																								label: "value",
																								expr: &actionExpr{
																									pos: position{line: 195, col: 19, offset: 7230},
																									run: (*parser).callonInlineElementWithoutSubtitution166,
																									expr: &labeledExpr{
																										pos:   position{line: 195, col: 19, offset: 7230},
																										label: "value",
																										expr: &zeroOrMoreExpr{
																											pos: position{line: 195, col: 25, offset: 7236},
																											expr: &seqExpr{
																												pos: position{line: 195, col: 26, offset: 7237},
																												exprs: []interface{}{
																													&notExpr{
																														pos: position{line: 195, col: 26, offset: 7237},
																														expr: &litMatcher{
																															pos:        position{line: 195, col: 27, offset: 7238},
																															val:        "=",
																															ignoreCase: false,
																														},
																													},
																													&notExpr{
																														pos: position{line: 195, col: 31, offset: 7242},
																														expr: &litMatcher{
																															pos:        position{line: 195, col: 32, offset: 7243},
																															val:        ",",
																															ignoreCase: false,
																														},
																													},
																													&notExpr{
																														pos: position{line: 195, col: 36, offset: 7247},
																														expr: &litMatcher{
																															pos:        position{line: 195, col: 37, offset: 7248},
																															val:        "]",
																															ignoreCase: false,
																														},
																													},
																													&anyMatcher{
																														line: 195, col: 41, offset: 7252,
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&zeroOrOneExpr{
																								pos: position{line: 185, col: 67, offset: 6913},
																								expr: &litMatcher{
																									pos:        position{line: 185, col: 67, offset: 6913},
																									val:        ",",
																									ignoreCase: false,
																								},
																							},
																							&zeroOrMoreExpr{
																								pos: position{line: 185, col: 72, offset: 6918},
																								expr: &choiceExpr{
																									pos: position{line: 1024, col: 7, offset: 41621},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1024, col: 7, offset: 41621},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1024, col: 13, offset: 41627},
																											run: (*parser).callonInlineElementWithoutSubtitution182,
																											expr: &litMatcher{
																												pos:        position{line: 1024, col: 13, offset: 41627},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																				&actionExpr{
																					pos: position{line: 187, col: 5, offset: 7002},
																					run: (*parser).callonInlineElementWithoutSubtitution184,
																					expr: &seqExpr{
																						pos: position{line: 187, col: 5, offset: 7002},
																						exprs: []interface{}{
																							&labeledExpr{
																								pos:   position{line: 187, col: 5, offset: 7002},
																								label: "key",
																								expr: &actionExpr{
																									pos: position{line: 191, col: 17, offset: 7127},
																									run: (*parser).callonInlineElementWithoutSubtitution187,
																									expr: &seqExpr{
																										pos: position{line: 191, col: 17, offset: 7127},
																										exprs: []interface{}{
																											&notExpr{
																												pos: position{line: 191, col: 17, offset: 7127},
																												expr: &actionExpr{
																													pos: position{line: 231, col: 14, offset: 8674},
																													run: (*parser).callonInlineElementWithoutSubtitution190,
																													expr: &litMatcher{
																														pos:        position{line: 231, col: 14, offset: 8674},
																														val:        "verse",
																														ignoreCase: false,
																													},
																												},
																											},
																											&notExpr{
																												pos: position{line: 191, col: 28, offset: 7138},
																												expr: &actionExpr{
																													pos: position{line: 975, col: 16, offset: 40537},
																													run: (*parser).callonInlineElementWithoutSubtitution193,
																													expr: &litMatcher{
																														pos:        position{line: 975, col: 16, offset: 40537},
																														val:        "literal",
																														ignoreCase: false,
																													},
																												},
																											},
																											&labeledExpr{
																												pos:   position{line: 191, col: 41, offset: 7151},
																												label: "key",
																												expr: &oneOrMoreExpr{
																													pos: position{line: 191, col: 45, offset: 7155},
																													expr: &seqExpr{
																														pos: position{line: 191, col: 46, offset: 7156},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 191, col: 46, offset: 7156},
																																expr: &litMatcher{
																																	pos:        position{line: 191, col: 47, offset: 7157},
																																	val:        "=",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 191, col: 51, offset: 7161},
																																expr: &litMatcher{
																																	pos:        position{line: 191, col: 52, offset: 7162},
																																	val:        ",",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 191, col: 56, offset: 7166},
																																expr: &litMatcher{
																																	pos:        position{line: 191, col: 57, offset: 7167},
																																	val:        "]",
																																	ignoreCase: false,
																																},
																															},
																															&anyMatcher{
																																line: 191, col: 61, offset: 7171,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&zeroOrOneExpr{
																								pos: position{line: 187, col: 24, offset: 7021},
																								expr: &litMatcher{
																									pos:        position{line: 187, col: 24, offset: 7021},
																									val:        ",",
																									ignoreCase: false,
																								},
																							},
																							&zeroOrMoreExpr{
																								pos: position{line: 187, col: 29, offset: 7026},
																								expr: &choiceExpr{
																									pos: position{line: 1024, col: 7, offset: 41621},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1024, col: 7, offset: 41621},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1024, col: 13, offset: 41627},
																											run: (*parser).callonInlineElementWithoutSubtitution210,
																											expr: &litMatcher{
																												pos:        position{line: 1024, col: 13, offset: 41627},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																},
																&litMatcher{
																	pos:        position{line: 718, col: 40, offset: 29823},
																	val:        "]",
																	ignoreCase: false,
																},
															},
														},
													},
													&actionExpr{
														pos: position{line: 720, col: 9, offset: 29929},
														run: (*parser).callonInlineElementWithoutSubtitution213,
														expr: &seqExpr{
															pos: position{line: 720, col: 9, offset: 29929},
															exprs: []interface{}{
																&litMatcher{
																	pos:        position{line: 720, col: 9, offset: 29929},
																	val:        "[",
																	ignoreCase: false,
																},
																&labeledExpr{
																	pos:   position{line: 720, col: 13, offset: 29933},
																	label: "alt",
																	expr: &actionExpr{
																		pos: position{line: 732, col: 19, offset: 30461},
																		run: (*parser).callonInlineElementWithoutSubtitution217,
																		expr: &oneOrMoreExpr{
																			pos: position{line: 732, col: 19, offset: 30461},
																			expr: &seqExpr{
																				pos: position{line: 732, col: 20, offset: 30462},
																				exprs: []interface{}{
																					&notExpr{
																						pos: position{line: 732, col: 20, offset: 30462},
																						expr: &litMatcher{
																							pos:        position{line: 732, col: 21, offset: 30463},
																							val:        ",",
																							ignoreCase: false,
																						},
																					},
																					&notExpr{
																						pos: position{line: 732, col: 25, offset: 30467},
																						expr: &litMatcher{
																							pos:        position{line: 732, col: 26, offset: 30468},
																							val:        "=",
																							ignoreCase: false,
																						},
																					},
																					&notExpr{
																						pos: position{line: 732, col: 30, offset: 30472},
																						expr: &litMatcher{
																							pos:        position{line: 732, col: 31, offset: 30473},
																							val:        "]",
																							ignoreCase: false,
																						},
																					},
																					&anyMatcher{
																						line: 732, col: 35, offset: 30477,
																					},
																				},
																			},
																		},
																	},
																},
																&litMatcher{
																	pos:        position{line: 720, col: 34, offset: 29954},
																	val:        ",",
																	ignoreCase: false,
																},
																&labeledExpr{
																	pos:   position{line: 721, col: 9, offset: 29966},
																	label: "width",
																	expr: &actionExpr{
																		pos: position{line: 732, col: 19, offset: 30461},
																		run: (*parser).callonInlineElementWithoutSubtitution229,
																		expr: &oneOrMoreExpr{
																			pos: position{line: 732, col: 19, offset: 30461},
																			expr: &seqExpr{
																				pos: position{line: 732, col: 20, offset: 30462},
																				exprs: []interface{}{
																					&notExpr{
																						pos: position{line: 732, col: 20, offset: 30462},
																						expr: &litMatcher{
																							pos:        position{line: 732, col: 21, offset: 30463},
																							val:        ",",
																							ignoreCase: false,
																						},
																					},
																					&notExpr{
																						pos: position{line: 732, col: 25, offset: 30467},
																						expr: &litMatcher{
																							pos:        position{line: 732, col: 26, offset: 30468},
																							val:        "=",
																							ignoreCase: false,
																						},
																					},
																					&notExpr{
																						pos: position{line: 732, col: 30, offset: 30472},
																						expr: &litMatcher{
																							pos:        position{line: 732, col: 31, offset: 30473},
																							val:        "]",
																							ignoreCase: false,
																						},
																					},
																					&anyMatcher{
																						line: 732, col: 35, offset: 30477,
																					},
																				},
																			},
																		},
																	},
																},
																&zeroOrOneExpr{
																	pos: position{line: 721, col: 32, offset: 29989},
																	expr: &litMatcher{
																		pos:        position{line: 721, col: 32, offset: 29989},
																		val:        ",",
																		ignoreCase: false,
																	},
																},
																&labeledExpr{
																	pos:   position{line: 722, col: 9, offset: 30002},
																	label: "otherAttrs",
																	expr: &zeroOrMoreExpr{
																		pos: position{line: 722, col: 20, offset: 30013},
																		expr: &choiceExpr{
																			pos: position{line: 185, col: 21, offset: 6867},
																			alternatives: []interface{}{
																				&actionExpr{
																					pos: position{line: 185, col: 21, offset: 6867},
																					run: (*parser).callonInlineElementWithoutSubtitution244,
																					expr: &seqExpr{
																						pos: position{line: 185, col: 21, offset: 6867},
																						exprs: []interface{}{
																							&labeledExpr{
																								pos:   position{line: 185, col: 21, offset: 6867},
																								label: "key",
																								expr: &actionExpr{
																									pos: position{line: 191, col: 17, offset: 7127},
																									run: (*parser).callonInlineElementWithoutSubtitution247,
																									expr: &seqExpr{
																										pos: position{line: 191, col: 17, offset: 7127},
																										exprs: []interface{}{
																											&notExpr{
																												pos: position{line: 191, col: 17, offset: 7127},
																												expr: &actionExpr{
																													pos: position{line: 231, col: 14, offset: 8674},
																													run: (*parser).callonInlineElementWithoutSubtitution250,
																													expr: &litMatcher{
																														pos:        position{line: 231, col: 14, offset: 8674},
																														val:        "verse",
																														ignoreCase: false,
																													},
																												},
																											},
																											&notExpr{
																												pos: position{line: 191, col: 28, offset: 7138},
																												expr: &actionExpr{
																													pos: position{line: 975, col: 16, offset: 40537},
																													run: (*parser).callonInlineElementWithoutSubtitution253,
																													expr: &litMatcher{
																														pos:        position{line: 975, col: 16, offset: 40537},
																														val:        "literal",
																														ignoreCase: false,
																													},
																												},
																											},
																											&labeledExpr{
																												pos:   position{line: 191, col: 41, offset: 7151},
																												label: "key",
																												expr: &oneOrMoreExpr{
																													pos: position{line: 191, col: 45, offset: 7155},
																													expr: &seqExpr{
																														pos: position{line: 191, col: 46, offset: 7156},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 191, col: 46, offset: 7156},
																																expr: &litMatcher{
																																	pos:        position{line: 191, col: 47, offset: 7157},
																																	val:        "=",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 191, col: 51, offset: 7161},
																																expr: &litMatcher{
																																	pos:        position{line: 191, col: 52, offset: 7162},
																																	val:        ",",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 191, col: 56, offset: 7166},
																																expr: &litMatcher{
																																	pos:        position{line: 191, col: 57, offset: 7167},
																																	val:        "]",
																																	ignoreCase: false,
																																},
																															},
																															&anyMatcher{
																																line: 191, col: 61, offset: 7171,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&litMatcher{
																								pos:        position{line: 185, col: 40, offset: 6886},
																								val:        "=",
																								ignoreCase: false,
																							},
																							&labeledExpr{
																								pos:   position{line: 185, col: 44, offset: 6890},
																								label: "value",
																								expr: &actionExpr{
																									pos: position{line: 195, col: 19, offset: 7230},
																									run: (*parser).callonInlineElementWithoutSubtitution267,
																									expr: &labeledExpr{
																										pos:   position{line: 195, col: 19, offset: 7230},
																										label: "value",
																										expr: &zeroOrMoreExpr{
																											pos: position{line: 195, col: 25, offset: 7236},
																											expr: &seqExpr{
																												pos: position{line: 195, col: 26, offset: 7237},
																												exprs: []interface{}{
																													&notExpr{
																														pos: position{line: 195, col: 26, offset: 7237},
																														expr: &litMatcher{
																															pos:        position{line: 195, col: 27, offset: 7238},
																															val:        "=",
																															ignoreCase: false,
																														},
																													},
																													&notExpr{
																														pos: position{line: 195, col: 31, offset: 7242},
																														expr: &litMatcher{
																															pos:        position{line: 195, col: 32, offset: 7243},
																															val:        ",",
																															ignoreCase: false,
																														},
																													},
																													&notExpr{
																														pos: position{line: 195, col: 36, offset: 7247},
																														expr: &litMatcher{
																															pos:        position{line: 195, col: 37, offset: 7248},
																															val:        "]",
																															ignoreCase: false,
																														},
																													},
																													&anyMatcher{
																														line: 195, col: 41, offset: 7252,
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&zeroOrOneExpr{
																								pos: position{line: 185, col: 67, offset: 6913},
																								expr: &litMatcher{
																									pos:        position{line: 185, col: 67, offset: 6913},
																									val:        ",",
																									ignoreCase: false,
																								},
																							},
																							&zeroOrMoreExpr{
																								pos: position{line: 185, col: 72, offset: 6918},
																								expr: &choiceExpr{
																									pos: position{line: 1024, col: 7, offset: 41621},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1024, col: 7, offset: 41621},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1024, col: 13, offset: 41627},
																											run: (*parser).callonInlineElementWithoutSubtitution283,
																											expr: &litMatcher{
																												pos:        position{line: 1024, col: 13, offset: 41627},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																				&actionExpr{
																					pos: position{line: 187, col: 5, offset: 7002},
																					run: (*parser).callonInlineElementWithoutSubtitution285,
																					expr: &seqExpr{
																						pos: position{line: 187, col: 5, offset: 7002},
																						exprs: []interface{}{
																							&labeledExpr{
																								pos:   position{line: 187, col: 5, offset: 7002},
																								label: "key",
																								expr: &actionExpr{
																									pos: position{line: 191, col: 17, offset: 7127},
																									run: (*parser).callonInlineElementWithoutSubtitution288,
																									expr: &seqExpr{
																										pos: position{line: 191, col: 17, offset: 7127},
																										exprs: []interface{}{
																											&notExpr{
																												pos: position{line: 191, col: 17, offset: 7127},
																												expr: &actionExpr{
																													pos: position{line: 231, col: 14, offset: 8674},
																													run: (*parser).callonInlineElementWithoutSubtitution291,
																													expr: &litMatcher{
																														pos:        position{line: 231, col: 14, offset: 8674},
																														val:        "verse",
																														ignoreCase: false,
																													},
																												},
																											},
																											&notExpr{
																												pos: position{line: 191, col: 28, offset: 7138},
																												expr: &actionExpr{
																													pos: position{line: 975, col: 16, offset: 40537},
																													run: (*parser).callonInlineElementWithoutSubtitution294,
																													expr: &litMatcher{
																														pos:        position{line: 975, col: 16, offset: 40537},
																														val:        "literal",
																														ignoreCase: false,
																													},
																												},
																											},
																											&labeledExpr{
																												pos:   position{line: 191, col: 41, offset: 7151},
																												label: "key",
																												expr: &oneOrMoreExpr{
																													pos: position{line: 191, col: 45, offset: 7155},
																													expr: &seqExpr{
																														pos: position{line: 191, col: 46, offset: 7156},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 191, col: 46, offset: 7156},
																																expr: &litMatcher{
																																	pos:        position{line: 191, col: 47, offset: 7157},
																																	val:        "=",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 191, col: 51, offset: 7161},
																																expr: &litMatcher{
																																	pos:        position{line: 191, col: 52, offset: 7162},
																																	val:        ",",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 191, col: 56, offset: 7166},
																																expr: &litMatcher{
																																	pos:        position{line: 191, col: 57, offset: 7167},
																																	val:        "]",
																																	ignoreCase: false,
																																},
																															},
																															&anyMatcher{
																																line: 191, col: 61, offset: 7171,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&zeroOrOneExpr{
																								pos: position{line: 187, col: 24, offset: 7021},
																								expr: &litMatcher{
																									pos:        position{line: 187, col: 24, offset: 7021},
																									val:        ",",
																									ignoreCase: false,
																								},
																							},
																							&zeroOrMoreExpr{
																								pos: position{line: 187, col: 29, offset: 7026},
																								expr: &choiceExpr{
																									pos: position{line: 1024, col: 7, offset: 41621},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1024, col: 7, offset: 41621},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1024, col: 13, offset: 41627},
																											run: (*parser).callonInlineElementWithoutSubtitution311,
																											expr: &litMatcher{
																												pos:        position{line: 1024, col: 13, offset: 41627},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																},
																&litMatcher{
																	pos:        position{line: 722, col: 40, offset: 30033},
																	val:        "]",
																	ignoreCase: false,
																},
															},
														},
													},
													&actionExpr{
														pos: position{line: 724, col: 9, offset: 30136},
														run: (*parser).callonInlineElementWithoutSubtitution314,
														expr: &seqExpr{
															pos: position{line: 724, col: 9, offset: 30136},
															exprs: []interface{}{
																&litMatcher{
																	pos:        position{line: 724, col: 9, offset: 30136},
																	val:        "[",
																	ignoreCase: false,
																},
																&labeledExpr{
																	pos:   position{line: 724, col: 13, offset: 30140},
																	label: "alt",
																	expr: &actionExpr{
																		pos: position{line: 732, col: 19, offset: 30461},
																		run: (*parser).callonInlineElementWithoutSubtitution318,
																		expr: &oneOrMoreExpr{
																			pos: position{line: 732, col: 19, offset: 30461},
																			expr: &seqExpr{
																				pos: position{line: 732, col: 20, offset: 30462},
																				exprs: []interface{}{
																					&notExpr{
																						pos: position{line: 732, col: 20, offset: 30462},
																						expr: &litMatcher{
																							pos:        position{line: 732, col: 21, offset: 30463},
																							val:        ",",
																							ignoreCase: false,
																						},
																					},
																					&notExpr{
																						pos: position{line: 732, col: 25, offset: 30467},
																						expr: &litMatcher{
																							pos:        position{line: 732, col: 26, offset: 30468},
																							val:        "=",
																							ignoreCase: false,
																						},
																					},
																					&notExpr{
																						pos: position{line: 732, col: 30, offset: 30472},
																						expr: &litMatcher{
																							pos:        position{line: 732, col: 31, offset: 30473},
																							val:        "]",
																							ignoreCase: false,
																						},
																					},
																					&anyMatcher{
																						line: 732, col: 35, offset: 30477,
																					},
																				},
																			},
																		},
																	},
																},
																&zeroOrOneExpr{
																	pos: position{line: 724, col: 34, offset: 30161},
																	expr: &litMatcher{
																		pos:        position{line: 724, col: 34, offset: 30161},
																		val:        ",",
																		ignoreCase: false,
																	},
																},
																&labeledExpr{
																	pos:   position{line: 725, col: 9, offset: 30174},
																	label: "otherAttrs",
																	expr: &zeroOrMoreExpr{
																		pos: position{line: 725, col: 20, offset: 30185},
																		expr: &choiceExpr{
																			pos: position{line: 185, col: 21, offset: 6867},
																			alternatives: []interface{}{
																				&actionExpr{
																					pos: position{line: 185, col: 21, offset: 6867},
																					run: (*parser).callonInlineElementWithoutSubtitution333,
																					expr: &seqExpr{
																						pos: position{line: 185, col: 21, offset: 6867},
																						exprs: []interface{}{
																							&labeledExpr{
																								pos:   position{line: 185, col: 21, offset: 6867},
																								label: "key",
																								expr: &actionExpr{
																									pos: position{line: 191, col: 17, offset: 7127},
																									run: (*parser).callonInlineElementWithoutSubtitution336,
																									expr: &seqExpr{
																										pos: position{line: 191, col: 17, offset: 7127},
																										exprs: []interface{}{
																											&notExpr{
																												pos: position{line: 191, col: 17, offset: 7127},
																												expr: &actionExpr{
																													pos: position{line: 231, col: 14, offset: 8674},
																													run: (*parser).callonInlineElementWithoutSubtitution339,
																													expr: &litMatcher{
																														pos:        position{line: 231, col: 14, offset: 8674},
																														val:        "verse",
																														ignoreCase: false,
																													},
																												},
																											},
																											&notExpr{
																												pos: position{line: 191, col: 28, offset: 7138},
																												expr: &actionExpr{
																													pos: position{line: 975, col: 16, offset: 40537},
																													run: (*parser).callonInlineElementWithoutSubtitution342,
																													expr: &litMatcher{
																														pos:        position{line: 975, col: 16, offset: 40537},
																														val:        "literal",
																														ignoreCase: false,
																													},
																												},
																											},
																											&labeledExpr{
																												pos:   position{line: 191, col: 41, offset: 7151},
																												label: "key",
																												expr: &oneOrMoreExpr{
																													pos: position{line: 191, col: 45, offset: 7155},
																													expr: &seqExpr{
																														pos: position{line: 191, col: 46, offset: 7156},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 191, col: 46, offset: 7156},
																																expr: &litMatcher{
																																	pos:        position{line: 191, col: 47, offset: 7157},
																																	val:        "=",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 191, col: 51, offset: 7161},
																																expr: &litMatcher{
																																	pos:        position{line: 191, col: 52, offset: 7162},
																																	val:        ",",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 191, col: 56, offset: 7166},
																																expr: &litMatcher{
																																	pos:        position{line: 191, col: 57, offset: 7167},
																																	val:        "]",
																																	ignoreCase: false,
																																},
																															},
																															&anyMatcher{
																																line: 191, col: 61, offset: 7171,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&litMatcher{
																								pos:        position{line: 185, col: 40, offset: 6886},
																								val:        "=",
																								ignoreCase: false,
																							},
																							&labeledExpr{
																								pos:   position{line: 185, col: 44, offset: 6890},
																								label: "value",
																								expr: &actionExpr{
																									pos: position{line: 195, col: 19, offset: 7230},
																									run: (*parser).callonInlineElementWithoutSubtitution356,
																									expr: &labeledExpr{
																										pos:   position{line: 195, col: 19, offset: 7230},
																										label: "value",
																										expr: &zeroOrMoreExpr{
																											pos: position{line: 195, col: 25, offset: 7236},
																											expr: &seqExpr{
																												pos: position{line: 195, col: 26, offset: 7237},
																												exprs: []interface{}{
																													&notExpr{
																														pos: position{line: 195, col: 26, offset: 7237},
																														expr: &litMatcher{
																															pos:        position{line: 195, col: 27, offset: 7238},
																															val:        "=",
																															ignoreCase: false,
																														},
																													},
																													&notExpr{
																														pos: position{line: 195, col: 31, offset: 7242},
																														expr: &litMatcher{
																															pos:        position{line: 195, col: 32, offset: 7243},
																															val:        ",",
																															ignoreCase: false,
																														},
																													},
																													&notExpr{
																														pos: position{line: 195, col: 36, offset: 7247},
																														expr: &litMatcher{
																															pos:        position{line: 195, col: 37, offset: 7248},
																															val:        "]",
																															ignoreCase: false,
																														},
																													},
																													&anyMatcher{
																														line: 195, col: 41, offset: 7252,
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&zeroOrOneExpr{
																								pos: position{line: 185, col: 67, offset: 6913},
																								expr: &litMatcher{
																									pos:        position{line: 185, col: 67, offset: 6913},
																									val:        ",",
																									ignoreCase: false,
																								},
																							},
																							&zeroOrMoreExpr{
																								pos: position{line: 185, col: 72, offset: 6918},
																								expr: &choiceExpr{
																									pos: position{line: 1024, col: 7, offset: 41621},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1024, col: 7, offset: 41621},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1024, col: 13, offset: 41627},
																											run: (*parser).callonInlineElementWithoutSubtitution372,
																											expr: &litMatcher{
																												pos:        position{line: 1024, col: 13, offset: 41627},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																				&actionExpr{
																					pos: position{line: 187, col: 5, offset: 7002},
																					run: (*parser).callonInlineElementWithoutSubtitution374,
																					expr: &seqExpr{
																						pos: position{line: 187, col: 5, offset: 7002},
																						exprs: []interface{}{
																							&labeledExpr{
																								pos:   position{line: 187, col: 5, offset: 7002},
																								label: "key",
																								expr: &actionExpr{
																									pos: position{line: 191, col: 17, offset: 7127},
																									run: (*parser).callonInlineElementWithoutSubtitution377,
																									expr: &seqExpr{
																										pos: position{line: 191, col: 17, offset: 7127},
																										exprs: []interface{}{
																											&notExpr{
																												pos: position{line: 191, col: 17, offset: 7127},
																												expr: &actionExpr{
																													pos: position{line: 231, col: 14, offset: 8674},
																													run: (*parser).callonInlineElementWithoutSubtitution380,
																													expr: &litMatcher{
																														pos:        position{line: 231, col: 14, offset: 8674},
																														val:        "verse",
																														ignoreCase: false,
																													},
																												},
																											},
																											&notExpr{
																												pos: position{line: 191, col: 28, offset: 7138},
																												expr: &actionExpr{
																													pos: position{line: 975, col: 16, offset: 40537},
																													run: (*parser).callonInlineElementWithoutSubtitution383,
																													expr: &litMatcher{
																														pos:        position{line: 975, col: 16, offset: 40537},
																														val:        "literal",
																														ignoreCase: false,
																													},
																												},
																											},
																											&labeledExpr{
																												pos:   position{line: 191, col: 41, offset: 7151},
																												label: "key",
																												expr: &oneOrMoreExpr{
																													pos: position{line: 191, col: 45, offset: 7155},
																													expr: &seqExpr{
																														pos: position{line: 191, col: 46, offset: 7156},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 191, col: 46, offset: 7156},
																																expr: &litMatcher{
																																	pos:        position{line: 191, col: 47, offset: 7157},
																																	val:        "=",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 191, col: 51, offset: 7161},
																																expr: &litMatcher{
																																	pos:        position{line: 191, col: 52, offset: 7162},
																																	val:        ",",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 191, col: 56, offset: 7166},
																																expr: &litMatcher{
																																	pos:        position{line: 191, col: 57, offset: 7167},
																																	val:        "]",
																																	ignoreCase: false,
																																},
																															},
																															&anyMatcher{
																																line: 191, col: 61, offset: 7171,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&zeroOrOneExpr{
																								pos: position{line: 187, col: 24, offset: 7021},
																								expr: &litMatcher{
																									pos:        position{line: 187, col: 24, offset: 7021},
																									val:        ",",
																									ignoreCase: false,
																								},
																							},
																							&zeroOrMoreExpr{
																								pos: position{line: 187, col: 29, offset: 7026},
																								expr: &choiceExpr{
																									pos: position{line: 1024, col: 7, offset: 41621},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1024, col: 7, offset: 41621},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1024, col: 13, offset: 41627},
																											run: (*parser).callonInlineElementWithoutSubtitution400,
																											expr: &litMatcher{
																												pos:        position{line: 1024, col: 13, offset: 41627},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																},
																&litMatcher{
																	pos:        position{line: 725, col: 40, offset: 30205},
																	val:        "]",
																	ignoreCase: false,
																},
															},
														},
													},
													&actionExpr{
														pos: position{line: 727, col: 9, offset: 30306},
														run: (*parser).callonInlineElementWithoutSubtitution403,
														expr: &seqExpr{
															pos: position{line: 727, col: 9, offset: 30306},
															exprs: []interface{}{
																&litMatcher{
																	pos:        position{line: 727, col: 9, offset: 30306},
																	val:        "[",
																	ignoreCase: false,
																},
																&labeledExpr{
																	pos:   position{line: 727, col: 13, offset: 30310},
																	label: "otherAttrs",
																	expr: &zeroOrMoreExpr{
																		pos: position{line: 727, col: 24, offset: 30321},
																		expr: &choiceExpr{
																			pos: position{line: 185, col: 21, offset: 6867},
																			alternatives: []interface{}{
																				&actionExpr{
																					pos: position{line: 185, col: 21, offset: 6867},
																					run: (*parser).callonInlineElementWithoutSubtitution409,
																					expr: &seqExpr{
																						pos: position{line: 185, col: 21, offset: 6867},
																						exprs: []interface{}{
																							&labeledExpr{
																								pos:   position{line: 185, col: 21, offset: 6867},
																								label: "key",
																								expr: &actionExpr{
																									pos: position{line: 191, col: 17, offset: 7127},
																									run: (*parser).callonInlineElementWithoutSubtitution412,
																									expr: &seqExpr{
																										pos: position{line: 191, col: 17, offset: 7127},
																										exprs: []interface{}{
																											&notExpr{
																												pos: position{line: 191, col: 17, offset: 7127},
																												expr: &actionExpr{
																													pos: position{line: 231, col: 14, offset: 8674},
																													run: (*parser).callonInlineElementWithoutSubtitution415,
																													expr: &litMatcher{
																														pos:        position{line: 231, col: 14, offset: 8674},
																														val:        "verse",
																														ignoreCase: false,
																													},
																												},
																											},
																											&notExpr{
																												pos: position{line: 191, col: 28, offset: 7138},
																												expr: &actionExpr{
																													pos: position{line: 975, col: 16, offset: 40537},
																													run: (*parser).callonInlineElementWithoutSubtitution418,
																													expr: &litMatcher{
																														pos:        position{line: 975, col: 16, offset: 40537},
																														val:        "literal",
																														ignoreCase: false,
																													},
																												},
																											},
																											&labeledExpr{
																												pos:   position{line: 191, col: 41, offset: 7151},
																												label: "key",
																												expr: &oneOrMoreExpr{
																													pos: position{line: 191, col: 45, offset: 7155},
																													expr: &seqExpr{
																														pos: position{line: 191, col: 46, offset: 7156},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 191, col: 46, offset: 7156},
																																expr: &litMatcher{
																																	pos:        position{line: 191, col: 47, offset: 7157},
																																	val:        "=",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 191, col: 51, offset: 7161},
																																expr: &litMatcher{
																																	pos:        position{line: 191, col: 52, offset: 7162},
																																	val:        ",",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 191, col: 56, offset: 7166},
																																expr: &litMatcher{
																																	pos:        position{line: 191, col: 57, offset: 7167},
																																	val:        "]",
																																	ignoreCase: false,
																																},
																															},
																															&anyMatcher{
																																line: 191, col: 61, offset: 7171,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&litMatcher{
																								pos:        position{line: 185, col: 40, offset: 6886},
																								val:        "=",
																								ignoreCase: false,
																							},
																							&labeledExpr{
																								pos:   position{line: 185, col: 44, offset: 6890},
																								label: "value",
																								expr: &actionExpr{
																									pos: position{line: 195, col: 19, offset: 7230},
																									run: (*parser).callonInlineElementWithoutSubtitution432,
																									expr: &labeledExpr{
																										pos:   position{line: 195, col: 19, offset: 7230},
																										label: "value",
																										expr: &zeroOrMoreExpr{
																											pos: position{line: 195, col: 25, offset: 7236},
																											expr: &seqExpr{
																												pos: position{line: 195, col: 26, offset: 7237},
																												exprs: []interface{}{
																													&notExpr{
																														pos: position{line: 195, col: 26, offset: 7237},
																														expr: &litMatcher{
																															pos:        position{line: 195, col: 27, offset: 7238},
																															val:        "=",
																															ignoreCase: false,
																														},
																													},
																													&notExpr{
																														pos: position{line: 195, col: 31, offset: 7242},
																														expr: &litMatcher{
																															pos:        position{line: 195, col: 32, offset: 7243},
																															val:        ",",
																															ignoreCase: false,
																														},
																													},
																													&notExpr{
																														pos: position{line: 195, col: 36, offset: 7247},
																														expr: &litMatcher{
																															pos:        position{line: 195, col: 37, offset: 7248},
																															val:        "]",
																															ignoreCase: false,
																														},
																													},
																													&anyMatcher{
																														line: 195, col: 41, offset: 7252,
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&zeroOrOneExpr{
																								pos: position{line: 185, col: 67, offset: 6913},
																								expr: &litMatcher{
																									pos:        position{line: 185, col: 67, offset: 6913},
																									val:        ",",
																									ignoreCase: false,
																								},
																							},
																							&zeroOrMoreExpr{
																								pos: position{line: 185, col: 72, offset: 6918},
																								expr: &choiceExpr{
																									pos: position{line: 1024, col: 7, offset: 41621},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1024, col: 7, offset: 41621},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1024, col: 13, offset: 41627},
																											run: (*parser).callonInlineElementWithoutSubtitution448,
																											expr: &litMatcher{
																												pos:        position{line: 1024, col: 13, offset: 41627},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																				&actionExpr{
																					pos: position{line: 187, col: 5, offset: 7002},
																					run: (*parser).callonInlineElementWithoutSubtitution450,
																					expr: &seqExpr{
																						pos: position{line: 187, col: 5, offset: 7002},
																						exprs: []interface{}{
																							&labeledExpr{
																								pos:   position{line: 187, col: 5, offset: 7002},
																								label: "key",
																								expr: &actionExpr{
																									pos: position{line: 191, col: 17, offset: 7127},
																									run: (*parser).callonInlineElementWithoutSubtitution453,
																									expr: &seqExpr{
																										pos: position{line: 191, col: 17, offset: 7127},
																										exprs: []interface{}{
																											&notExpr{
																												pos: position{line: 191, col: 17, offset: 7127},
																												expr: &actionExpr{
																													pos: position{line: 231, col: 14, offset: 8674},
																													run: (*parser).callonInlineElementWithoutSubtitution456,
																													expr: &litMatcher{
																														pos:        position{line: 231, col: 14, offset: 8674},
																														val:        "verse",
																														ignoreCase: false,
																													},
																												},
																											},
																											&notExpr{
																												pos: position{line: 191, col: 28, offset: 7138},
																												expr: &actionExpr{
																													pos: position{line: 975, col: 16, offset: 40537},
																													run: (*parser).callonInlineElementWithoutSubtitution459,
																													expr: &litMatcher{
																														pos:        position{line: 975, col: 16, offset: 40537},
																														val:        "literal",
																														ignoreCase: false,
																													},
																												},
																											},
																											&labeledExpr{
																												pos:   position{line: 191, col: 41, offset: 7151},
																												label: "key",
																												expr: &oneOrMoreExpr{
																													pos: position{line: 191, col: 45, offset: 7155},
																													expr: &seqExpr{
																														pos: position{line: 191, col: 46, offset: 7156},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 191, col: 46, offset: 7156},
																																expr: &litMatcher{
																																	pos:        position{line: 191, col: 47, offset: 7157},
																																	val:        "=",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 191, col: 51, offset: 7161},
																																expr: &litMatcher{
																																	pos:        position{line: 191, col: 52, offset: 7162},
																																	val:        ",",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 191, col: 56, offset: 7166},
																																expr: &litMatcher{
																																	pos:        position{line: 191, col: 57, offset: 7167},
																																	val:        "]",
																																	ignoreCase: false,
																																},
																															},
																															&anyMatcher{
																																line: 191, col: 61, offset: 7171,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&zeroOrOneExpr{
																								pos: position{line: 187, col: 24, offset: 7021},
																								expr: &litMatcher{
																									pos:        position{line: 187, col: 24, offset: 7021},
																									val:        ",",
																									ignoreCase: false,
																								},
																							},
																							&zeroOrMoreExpr{
																								pos: position{line: 187, col: 29, offset: 7026},
																								expr: &choiceExpr{
																									pos: position{line: 1024, col: 7, offset: 41621},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1024, col: 7, offset: 41621},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1024, col: 13, offset: 41627},
																											run: (*parser).callonInlineElementWithoutSubtitution476,
																											expr: &litMatcher{
																												pos:        position{line: 1024, col: 13, offset: 41627},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																},
																&litMatcher{
																	pos:        position{line: 727, col: 44, offset: 30341},
																	val:        "]",
																	ignoreCase: false,
																},
															},
														},
													},
												},
											},
										},
									},
								},
							},
							&actionExpr{
								pos: position{line: 669, col: 9, offset: 28069},
								run: (*parser).callonInlineElementWithoutSubtitution479,
								expr: &labeledExpr{
									pos:   position{line: 669, col: 9, offset: 28069},
									label: "link",
									expr: &choiceExpr{
										pos: position{line: 669, col: 15, offset: 28075},
										alternatives: []interface{}{
											&actionExpr{
												pos: position{line: 684, col: 17, offset: 28503},
												run: (*parser).callonInlineElementWithoutSubtitution482,
												expr: &seqExpr{
													pos: position{line: 684, col: 17, offset: 28503},
													exprs: []interface{}{
														&litMatcher{
															pos:        position{line: 684, col: 17, offset: 28503},
															val:        "link:",
															ignoreCase: false,
														},
														&labeledExpr{
															pos:   position{line: 684, col: 25, offset: 28511},
															label: "url",
															expr: &actionExpr{
																pos: position{line: 688, col: 20, offset: 28662},
																run: (*parser).callonInlineElementWithoutSubtitution486,
																expr: &seqExpr{
																	pos: position{line: 688, col: 20, offset: 28662},
																	exprs: []interface{}{
																		&zeroOrOneExpr{
																			pos: position{line: 688, col: 20, offset: 28662},
																			expr: &choiceExpr{
																				pos: position{line: 1018, col: 15, offset: 41506},
																				alternatives: []interface{}{
																					&litMatcher{
																						pos:        position{line: 1018, col: 15, offset: 41506},
																						val:        "http://",
																						ignoreCase: false,
																					},
																					&litMatcher{
																						pos:        position{line: 1018, col: 27, offset: 41518},
																						val:        "https://",
																						ignoreCase: false,
																					},
																					&litMatcher{
																						pos:        position{line: 1018, col: 40, offset: 41531},
																						val:        "ftp://",
																						ignoreCase: false,
																					},
																					&litMatcher{
																						pos:        position{line: 1018, col: 51, offset: 41542},
																						val:        "irc://",
																						ignoreCase: false,
																					},
																					&litMatcher{
																						pos:        position{line: 1018, col: 62, offset: 41553},
																						val:        "mailto:",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																		&actionExpr{
																			pos: position{line: 1006, col: 8, offset: 41269},
																			run: (*parser).callonInlineElementWithoutSubtitution495,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 1006, col: 8, offset: 41269},
																				expr: &seqExpr{
																					pos: position{line: 1006, col: 9, offset: 41270},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 1006, col: 9, offset: 41270},
																							expr: &choiceExpr{
																								pos: position{line: 1028, col: 12, offset: 41683},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1028, col: 12, offset: 41683},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 1028, col: 21, offset: 41692},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 1006, col: 18, offset: 41279},
																							expr: &choiceExpr{
																								pos: position{line: 1024, col: 7, offset: 41621},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1024, col: 7, offset: 41621},
																										val:        " ",
																										ignoreCase: false,
																									},
																									&actionExpr{
																										pos: position{line: 1024, col: 13, offset: 41627},
																										run: (*parser).callonInlineElementWithoutSubtitution505,
																										expr: &litMatcher{
																											pos:        position{line: 1024, col: 13, offset: 41627},
																											val:        "\t",
																											ignoreCase: false,
																										},
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 1006, col: 22, offset: 41283},
																							expr: &litMatcher{
																								pos:        position{line: 1006, col: 23, offset: 41284},
																								val:        "[",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 1006, col: 27, offset: 41288},
																							expr: &litMatcher{
																								pos:        position{line: 1006, col: 28, offset: 41289},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																						&anyMatcher{
																							line: 1006, col: 32, offset: 41293,
																						},
																					},
																				},
																			},
																		},
																	},
																},
															},
														},
														&labeledExpr{
															pos:   position{line: 684, col: 47, offset: 28533},
															label: "attributes",
															expr: &choiceExpr{
																pos: position{line: 692, col: 19, offset: 28732},
																alternatives: []interface{}{
																	&actionExpr{
																		pos: position{line: 692, col: 19, offset: 28732},
																		run: (*parser).callonInlineElementWithoutSubtitution514,
																		expr: &seqExpr{
																			pos: position{line: 692, col: 19, offset: 28732},
																			exprs: []interface{}{
																				&litMatcher{
																					pos:        position{line: 692, col: 19, offset: 28732},
																					val:        "[",
																					ignoreCase: false,
																				},
																				&labeledExpr{
																					pos:   position{line: 692, col: 23, offset: 28736},
																					label: "text",
																					expr: &actionExpr{
																						pos: position{line: 699, col: 22, offset: 29012},
																						run: (*parser).callonInlineElementWithoutSubtitution518,
																						expr: &oneOrMoreExpr{
																							pos: position{line: 699, col: 22, offset: 29012},
																							expr: &seqExpr{
																								pos: position{line: 699, col: 23, offset: 29013},
																								exprs: []interface{}{
																									&notExpr{
																										pos: position{line: 699, col: 23, offset: 29013},
																										expr: &litMatcher{
																											pos:        position{line: 699, col: 24, offset: 29014},
																											val:        ",",
																											ignoreCase: false,
																										},
																									},
																									&notExpr{
																										pos: position{line: 699, col: 28, offset: 29018},
																										expr: &litMatcher{
																											pos:        position{line: 699, col: 29, offset: 29019},
																											val:        "]",
																											ignoreCase: false,
																										},
																									},
																									&anyMatcher{
																										line: 699, col: 33, offset: 29023,
																									},
																								},
																							},
																						},
																					},
																				},
																				&labeledExpr{
																					pos:   position{line: 693, col: 9, offset: 28769},
																					label: "otherAttrs",
																					expr: &zeroOrMoreExpr{
																						pos: position{line: 693, col: 20, offset: 28780},
																						expr: &choiceExpr{
																							pos: position{line: 185, col: 21, offset: 6867},
																							alternatives: []interface{}{
																								&actionExpr{
																									pos: position{line: 185, col: 21, offset: 6867},
																									run: (*parser).callonInlineElementWithoutSubtitution529,
																									expr: &seqExpr{
																										pos: position{line: 185, col: 21, offset: 6867},
																										exprs: []interface{}{
																											&labeledExpr{
																												pos:   position{line: 185, col: 21, offset: 6867},
																												label: "key",
																												expr: &actionExpr{
																													pos: position{line: 191, col: 17, offset: 7127},
																													run: (*parser).callonInlineElementWithoutSubtitution532,
																													expr: &seqExpr{
																														pos: position{line: 191, col: 17, offset: 7127},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 191, col: 17, offset: 7127},
																																expr: &actionExpr{
																																	pos: position{line: 231, col: 14, offset: 8674},
																																	run: (*parser).callonInlineElementWithoutSubtitution535,
																																	expr: &litMatcher{
																																		pos:        position{line: 231, col: 14, offset: 8674},
																																		val:        "verse",
																																		ignoreCase: false,
																																	},
																																},
																															},
																															&notExpr{
																																pos: position{line: 191, col: 28, offset: 7138},
																																expr: &actionExpr{
																																	pos: position{line: 975, col: 16, offset: 40537},
																																	run: (*parser).callonInlineElementWithoutSubtitution538,
																																	expr: &litMatcher{
																																		pos:        position{line: 975, col: 16, offset: 40537},
																																		val:        "literal",
																																		ignoreCase: false,
																																	},
																																},
																															},
																															&labeledExpr{
																																pos:   position{line: 191, col: 41, offset: 7151},
																																label: "key",
																																expr: &oneOrMoreExpr{
																																	pos: position{line: 191, col: 45, offset: 7155},
																																	expr: &seqExpr{
																																		pos: position{line: 191, col: 46, offset: 7156},
																																		exprs: []interface{}{
																																			&notExpr{
																																				pos: position{line: 191, col: 46, offset: 7156},
																																				expr: &litMatcher{
																																					pos:        position{line: 191, col: 47, offset: 7157},
																																					val:        "=",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 191, col: 51, offset: 7161},
																																				expr: &litMatcher{
																																					pos:        position{line: 191, col: 52, offset: 7162},
																																					val:        ",",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 191, col: 56, offset: 7166},
																																				expr: &litMatcher{
																																					pos:        position{line: 191, col: 57, offset: 7167},
																																					val:        "]",
																																					ignoreCase: false,
																																				},
																																			},
																																			&anyMatcher{
																																				line: 191, col: 61, offset: 7171,
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																											&litMatcher{
																												pos:        position{line: 185, col: 40, offset: 6886},
																												val:        "=",
																												ignoreCase: false,
																											},
																											&labeledExpr{
																												pos:   position{line: 185, col: 44, offset: 6890},
																												label: "value",
																												expr: &actionExpr{
																													pos: position{line: 195, col: 19, offset: 7230},
																													run: (*parser).callonInlineElementWithoutSubtitution552,
																													expr: &labeledExpr{
																														pos:   position{line: 195, col: 19, offset: 7230},
																														label: "value",
																														expr: &zeroOrMoreExpr{
																															pos: position{line: 195, col: 25, offset: 7236},
																															expr: &seqExpr{
																																pos: position{line: 195, col: 26, offset: 7237},
																																exprs: []interface{}{
																																	&notExpr{
																																		pos: position{line: 195, col: 26, offset: 7237},
																																		expr: &litMatcher{
																																			pos:        position{line: 195, col: 27, offset: 7238},
																																			val:        "=",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 195, col: 31, offset: 7242},
																																		expr: &litMatcher{
																																			pos:        position{line: 195, col: 32, offset: 7243},
																																			val:        ",",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 195, col: 36, offset: 7247},
																																		expr: &litMatcher{
																																			pos:        position{line: 195, col: 37, offset: 7248},
																																			val:        "]",
																																			ignoreCase: false,
																																		},
																																	},
																																	&anyMatcher{
																																		line: 195, col: 41, offset: 7252,
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																											&zeroOrOneExpr{
																												pos: position{line: 185, col: 67, offset: 6913},
																												expr: &litMatcher{
																													pos:        position{line: 185, col: 67, offset: 6913},
																													val:        ",",
																													ignoreCase: false,
																												},
																											},
																											&zeroOrMoreExpr{
																												pos: position{line: 185, col: 72, offset: 6918},
																												expr: &choiceExpr{
																													pos: position{line: 1024, col: 7, offset: 41621},
																													alternatives: []interface{}{
																														&litMatcher{
																															pos:        position{line: 1024, col: 7, offset: 41621},
																															val:        " ",
																															ignoreCase: false,
																														},
																														&actionExpr{
																															pos: position{line: 1024, col: 13, offset: 41627},
																															run: (*parser).callonInlineElementWithoutSubtitution568,
																															expr: &litMatcher{
																																pos:        position{line: 1024, col: 13, offset: 41627},
																																val:        "\t",
																																ignoreCase: false,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&actionExpr{
																									pos: position{line: 187, col: 5, offset: 7002},
																									run: (*parser).callonInlineElementWithoutSubtitution570,
																									expr: &seqExpr{
																										pos: position{line: 187, col: 5, offset: 7002},
																										exprs: []interface{}{
																											&labeledExpr{
																												pos:   position{line: 187, col: 5, offset: 7002},
																												label: "key",
																												expr: &actionExpr{
																													pos: position{line: 191, col: 17, offset: 7127},
																													run: (*parser).callonInlineElementWithoutSubtitution573,
																													expr: &seqExpr{
																														pos: position{line: 191, col: 17, offset: 7127},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 191, col: 17, offset: 7127},
																																expr: &actionExpr{
																																	pos: position{line: 231, col: 14, offset: 8674},
																																	run: (*parser).callonInlineElementWithoutSubtitution576,
																																	expr: &litMatcher{
																																		pos:        position{line: 231, col: 14, offset: 8674},
																																		val:        "verse",
																																		ignoreCase: false,
																																	},
																																},
																															},
																															&notExpr{
																																pos: position{line: 191, col: 28, offset: 7138},
																																expr: &actionExpr{
																																	pos: position{line: 975, col: 16, offset: 40537},
																																	run: (*parser).callonInlineElementWithoutSubtitution579,
																																	expr: &litMatcher{
																																		pos:        position{line: 975, col: 16, offset: 40537},
																																		val:        "literal",
																																		ignoreCase: false,
																																	},
																																},
																															},
																															&labeledExpr{
																																pos:   position{line: 191, col: 41, offset: 7151},
																																label: "key",
																																expr: &oneOrMoreExpr{
																																	pos: position{line: 191, col: 45, offset: 7155},
																																	expr: &seqExpr{
																																		pos: position{line: 191, col: 46, offset: 7156},
																																		exprs: []interface{}{
																																			&notExpr{
																																				pos: position{line: 191, col: 46, offset: 7156},
																																				expr: &litMatcher{
																																					pos:        position{line: 191, col: 47, offset: 7157},
																																					val:        "=",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 191, col: 51, offset: 7161},
																																				expr: &litMatcher{
																																					pos:        position{line: 191, col: 52, offset: 7162},
																																					val:        ",",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 191, col: 56, offset: 7166},
																																				expr: &litMatcher{
																																					pos:        position{line: 191, col: 57, offset: 7167},
																																					val:        "]",
																																					ignoreCase: false,
																																				},
																																			},
																																			&anyMatcher{
																																				line: 191, col: 61, offset: 7171,
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																											&zeroOrOneExpr{
																												pos: position{line: 187, col: 24, offset: 7021},
																												expr: &litMatcher{
																													pos:        position{line: 187, col: 24, offset: 7021},
																													val:        ",",
																													ignoreCase: false,
																												},
																											},
																											&zeroOrMoreExpr{
																												pos: position{line: 187, col: 29, offset: 7026},
																												expr: &choiceExpr{
																													pos: position{line: 1024, col: 7, offset: 41621},
																													alternatives: []interface{}{
																														&litMatcher{
																															pos:        position{line: 1024, col: 7, offset: 41621},
																															val:        " ",
																															ignoreCase: false,
																														},
																														&actionExpr{
																															pos: position{line: 1024, col: 13, offset: 41627},
																															run: (*parser).callonInlineElementWithoutSubtitution596,
																															expr: &litMatcher{
																																pos:        position{line: 1024, col: 13, offset: 41627},
																																val:        "\t",
																																ignoreCase: false,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																				&litMatcher{
																					pos:        position{line: 693, col: 40, offset: 28800},
																					val:        "]",
																					ignoreCase: false,
																				},
																			},
																		},
																	},
																	&actionExpr{
																		pos: position{line: 695, col: 5, offset: 28879},
																		run: (*parser).callonInlineElementWithoutSubtitution599,
																		expr: &seqExpr{
																			pos: position{line: 695, col: 5, offset: 28879},
																			exprs: []interface{}{
																				&litMatcher{
																					pos:        position{line: 695, col: 5, offset: 28879},
																					val:        "[",
																					ignoreCase: false,
																				},
																				&labeledExpr{
																					pos:   position{line: 695, col: 9, offset: 28883},
																					label: "otherAttrs",
																					expr: &zeroOrMoreExpr{
																						pos: position{line: 695, col: 20, offset: 28894},
																						expr: &choiceExpr{
																							pos: position{line: 185, col: 21, offset: 6867},
																							alternatives: []interface{}{
																								&actionExpr{
																									pos: position{line: 185, col: 21, offset: 6867},
																									run: (*parser).callonInlineElementWithoutSubtitution605,
																									expr: &seqExpr{
																										pos: position{line: 185, col: 21, offset: 6867},
																										exprs: []interface{}{
																											&labeledExpr{
																												pos:   position{line: 185, col: 21, offset: 6867},
																												label: "key",
																												expr: &actionExpr{
																													pos: position{line: 191, col: 17, offset: 7127},
																													run: (*parser).callonInlineElementWithoutSubtitution608,
																													expr: &seqExpr{
																														pos: position{line: 191, col: 17, offset: 7127},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 191, col: 17, offset: 7127},
																																expr: &actionExpr{
																																	pos: position{line: 231, col: 14, offset: 8674},
																																	run: (*parser).callonInlineElementWithoutSubtitution611,
																																	expr: &litMatcher{
																																		pos:        position{line: 231, col: 14, offset: 8674},
																																		val:        "verse",
																																		ignoreCase: false,
																																	},
																																},
																															},
																															&notExpr{
																																pos: position{line: 191, col: 28, offset: 7138},
																																expr: &actionExpr{
																																	pos: position{line: 975, col: 16, offset: 40537},
																																	run: (*parser).callonInlineElementWithoutSubtitution614,
																																	expr: &litMatcher{
																																		pos:        position{line: 975, col: 16, offset: 40537},
																																		val:        "literal",
																																		ignoreCase: false,
																																	},
																																},
																															},
																															&labeledExpr{
																																pos:   position{line: 191, col: 41, offset: 7151},
																																label: "key",
																																expr: &oneOrMoreExpr{
																																	pos: position{line: 191, col: 45, offset: 7155},
																																	expr: &seqExpr{
																																		pos: position{line: 191, col: 46, offset: 7156},
																																		exprs: []interface{}{
																																			&notExpr{
																																				pos: position{line: 191, col: 46, offset: 7156},
																																				expr: &litMatcher{
																																					pos:        position{line: 191, col: 47, offset: 7157},
																																					val:        "=",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 191, col: 51, offset: 7161},
																																				expr: &litMatcher{
																																					pos:        position{line: 191, col: 52, offset: 7162},
																																					val:        ",",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 191, col: 56, offset: 7166},
																																				expr: &litMatcher{
																																					pos:        position{line: 191, col: 57, offset: 7167},
																																					val:        "]",
																																					ignoreCase: false,
																																				},
																																			},
																																			&anyMatcher{
																																				line: 191, col: 61, offset: 7171,
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																											&litMatcher{
																												pos:        position{line: 185, col: 40, offset: 6886},
																												val:        "=",
																												ignoreCase: false,
																											},
																											&labeledExpr{
																												pos:   position{line: 185, col: 44, offset: 6890},
																												label: "value",
																												expr: &actionExpr{
																													pos: position{line: 195, col: 19, offset: 7230},
																													run: (*parser).callonInlineElementWithoutSubtitution628,
																													expr: &labeledExpr{
																														pos:   position{line: 195, col: 19, offset: 7230},
																														label: "value",
																														expr: &zeroOrMoreExpr{
																															pos: position{line: 195, col: 25, offset: 7236},
																															expr: &seqExpr{
																																pos: position{line: 195, col: 26, offset: 7237},
																																exprs: []interface{}{
																																	&notExpr{
																																		pos: position{line: 195, col: 26, offset: 7237},
																																		expr: &litMatcher{
																																			pos:        position{line: 195, col: 27, offset: 7238},
																																			val:        "=",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 195, col: 31, offset: 7242},
																																		expr: &litMatcher{
																																			pos:        position{line: 195, col: 32, offset: 7243},
																																			val:        ",",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 195, col: 36, offset: 7247},
																																		expr: &litMatcher{
																																			pos:        position{line: 195, col: 37, offset: 7248},
																																			val:        "]",
																																			ignoreCase: false,
																																		},
																																	},
																																	&anyMatcher{
																																		line: 195, col: 41, offset: 7252,
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																											&zeroOrOneExpr{
																												pos: position{line: 185, col: 67, offset: 6913},
																												expr: &litMatcher{
																													pos:        position{line: 185, col: 67, offset: 6913},
																													val:        ",",
																													ignoreCase: false,
																												},
																											},
																											&zeroOrMoreExpr{
																												pos: position{line: 185, col: 72, offset: 6918},
																												expr: &choiceExpr{
																													pos: position{line: 1024, col: 7, offset: 41621},
																													alternatives: []interface{}{
																														&litMatcher{
																															pos:        position{line: 1024, col: 7, offset: 41621},
																															val:        " ",
																															ignoreCase: false,
																														},
																														&actionExpr{
																															pos: position{line: 1024, col: 13, offset: 41627},
																															run: (*parser).callonInlineElementWithoutSubtitution644,
																															expr: &litMatcher{
																																pos:        position{line: 1024, col: 13, offset: 41627},
																																val:        "\t",
																																ignoreCase: false,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&actionExpr{
																									pos: position{line: 187, col: 5, offset: 7002},
																									run: (*parser).callonInlineElementWithoutSubtitution646,
																									expr: &seqExpr{
																										pos: position{line: 187, col: 5, offset: 7002},
																										exprs: []interface{}{
																											&labeledExpr{
																												pos:   position{line: 187, col: 5, offset: 7002},
																												label: "key",
																												expr: &actionExpr{
																													pos: position{line: 191, col: 17, offset: 7127},
																													run: (*parser).callonInlineElementWithoutSubtitution649,
																													expr: &seqExpr{
																														pos: position{line: 191, col: 17, offset: 7127},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 191, col: 17, offset: 7127},
																																expr: &actionExpr{
																																	pos: position{line: 231, col: 14, offset: 8674},
																																	run: (*parser).callonInlineElementWithoutSubtitution652,
																																	expr: &litMatcher{
																																		pos:        position{line: 231, col: 14, offset: 8674},
																																		val:        "verse",
																																		ignoreCase: false,
																																	},
																																},
																															},
																															&notExpr{
																																pos: position{line: 191, col: 28, offset: 7138},
																																expr: &actionExpr{
																																	pos: position{line: 975, col: 16, offset: 40537},
																																	run: (*parser).callonInlineElementWithoutSubtitution655,
																																	expr: &litMatcher{
																																		pos:        position{line: 975, col: 16, offset: 40537},
																																		val:        "literal",
																																		ignoreCase: false,
																																	},
																																},
																															},
																															&labeledExpr{
																																pos:   position{line: 191, col: 41, offset: 7151},
																																label: "key",
																																expr: &oneOrMoreExpr{
																																	pos: position{line: 191, col: 45, offset: 7155},
																																	expr: &seqExpr{
																																		pos: position{line: 191, col: 46, offset: 7156},
																																		exprs: []interface{}{
																																			&notExpr{
																																				pos: position{line: 191, col: 46, offset: 7156},
																																				expr: &litMatcher{
																																					pos:        position{line: 191, col: 47, offset: 7157},
																																					val:        "=",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 191, col: 51, offset: 7161},
																																				expr: &litMatcher{
																																					pos:        position{line: 191, col: 52, offset: 7162},
																																					val:        ",",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 191, col: 56, offset: 7166},
																																				expr: &litMatcher{
																																					pos:        position{line: 191, col: 57, offset: 7167},
																																					val:        "]",
																																					ignoreCase: false,
																																				},
																																			},
																																			&anyMatcher{
																																				line: 191, col: 61, offset: 7171,
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																											&zeroOrOneExpr{
																												pos: position{line: 187, col: 24, offset: 7021},
																												expr: &litMatcher{
																													pos:        position{line: 187, col: 24, offset: 7021},
																													val:        ",",
																													ignoreCase: false,
																												},
																											},
																											&zeroOrMoreExpr{
																												pos: position{line: 187, col: 29, offset: 7026},
																												expr: &choiceExpr{
																													pos: position{line: 1024, col: 7, offset: 41621},
																													alternatives: []interface{}{
																														&litMatcher{
																															pos:        position{line: 1024, col: 7, offset: 41621},
																															val:        " ",
																															ignoreCase: false,
																														},
																														&actionExpr{
																															pos: position{line: 1024, col: 13, offset: 41627},
																															run: (*parser).callonInlineElementWithoutSubtitution672,
																															expr: &litMatcher{
																																pos:        position{line: 1024, col: 13, offset: 41627},
																																val:        "\t",
																																ignoreCase: false,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																				&litMatcher{
																					pos:        position{line: 695, col: 40, offset: 28914},
																					val:        "]",
																					ignoreCase: false,
																				},
																			},
																		},
																	},
																},
															},
														},
													},
												},
											},
											&actionExpr{
												pos: position{line: 673, col: 17, offset: 28146},
												run: (*parser).callonInlineElementWithoutSubtitution675,
												expr: &seqExpr{
													pos: position{line: 673, col: 17, offset: 28146},
													exprs: []interface{}{
														&labeledExpr{
															pos:   position{line: 673, col: 17, offset: 28146},
															label: "url",
															expr: &actionExpr{
																pos: position{line: 679, col: 20, offset: 28369},
																run: (*parser).callonInlineElementWithoutSubtitution678,
																expr: &seqExpr{
																	pos: position{line: 679, col: 20, offset: 28369},
																	exprs: []interface{}{
																		&choiceExpr{
																			pos: position{line: 1018, col: 15, offset: 41506},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1018, col: 15, offset: 41506},
																					val:        "http://",
																					ignoreCase: false,
																				},
																				&litMatcher{
																					pos:        position{line: 1018, col: 27, offset: 41518},
																					val:        "https://",
																					ignoreCase: false,
																				},
																				&litMatcher{
																					pos:        position{line: 1018, col: 40, offset: 41531},
																					val:        "ftp://",
																					ignoreCase: false,
																				},
																				&litMatcher{
																					pos:        position{line: 1018, col: 51, offset: 41542},
																					val:        "irc://",
																					ignoreCase: false,
																				},
																				&litMatcher{
																					pos:        position{line: 1018, col: 62, offset: 41553},
																					val:        "mailto:",
																					ignoreCase: false,
																				},
																			},
																		},
																		&actionExpr{
																			pos: position{line: 1006, col: 8, offset: 41269},
																			run: (*parser).callonInlineElementWithoutSubtitution686,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 1006, col: 8, offset: 41269},
																				expr: &seqExpr{
																					pos: position{line: 1006, col: 9, offset: 41270},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 1006, col: 9, offset: 41270},
																							expr: &choiceExpr{
																								pos: position{line: 1028, col: 12, offset: 41683},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1028, col: 12, offset: 41683},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 1028, col: 21, offset: 41692},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 1006, col: 18, offset: 41279},
																							expr: &choiceExpr{
																								pos: position{line: 1024, col: 7, offset: 41621},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1024, col: 7, offset: 41621},
																										val:        " ",
																										ignoreCase: false,
																									},
																									&actionExpr{
																										pos: position{line: 1024, col: 13, offset: 41627},
																										run: (*parser).callonInlineElementWithoutSubtitution696,
																										expr: &litMatcher{
																											pos:        position{line: 1024, col: 13, offset: 41627},
																											val:        "\t",
																											ignoreCase: false,
																										},
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 1006, col: 22, offset: 41283},
																							expr: &litMatcher{
																								pos:        position{line: 1006, col: 23, offset: 41284},
																								val:        "[",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 1006, col: 27, offset: 41288},
																							expr: &litMatcher{
																								pos:        position{line: 1006, col: 28, offset: 41289},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																						&anyMatcher{
																							line: 1006, col: 32, offset: 41293,
																						},
																					},
																				},
																			},
																		},
																	},
																},
															},
														},
														&labeledExpr{
															pos:   position{line: 673, col: 39, offset: 28168},
															label: "attributes",
															expr: &choiceExpr{
																pos: position{line: 692, col: 19, offset: 28732},
																alternatives: []interface{}{
																	&actionExpr{
																		pos: position{line: 692, col: 19, offset: 28732},
																		run: (*parser).callonInlineElementWithoutSubtitution705,
																		expr: &seqExpr{
																			pos: position{line: 692, col: 19, offset: 28732},
																			exprs: []interface{}{
																				&litMatcher{
																					pos:        position{line: 692, col: 19, offset: 28732},
																					val:        "[",
																					ignoreCase: false,
																				},
																				&labeledExpr{
																					pos:   position{line: 692, col: 23, offset: 28736},
																					label: "text",
																					expr: &actionExpr{
																						pos: position{line: 699, col: 22, offset: 29012},
																						run: (*parser).callonInlineElementWithoutSubtitution709,
																						expr: &oneOrMoreExpr{
																							pos: position{line: 699, col: 22, offset: 29012},
																							expr: &seqExpr{
																								pos: position{line: 699, col: 23, offset: 29013},
																								exprs: []interface{}{
																									&notExpr{
																										pos: position{line: 699, col: 23, offset: 29013},
																										expr: &litMatcher{
																											pos:        position{line: 699, col: 24, offset: 29014},
																											val:        ",",
																											ignoreCase: false,
																										},
																									},
																									&notExpr{
																										pos: position{line: 699, col: 28, offset: 29018},
																										expr: &litMatcher{
																											pos:        position{line: 699, col: 29, offset: 29019},
																											val:        "]",
																											ignoreCase: false,
																										},
																									},
																									&anyMatcher{
																										line: 699, col: 33, offset: 29023,
																									},
																								},
																							},
																						},
																					},
																				},
																				&labeledExpr{
																					pos:   position{line: 693, col: 9, offset: 28769},
																					label: "otherAttrs",
																					expr: &zeroOrMoreExpr{
																						pos: position{line: 693, col: 20, offset: 28780},
																						expr: &choiceExpr{
																							pos: position{line: 185, col: 21, offset: 6867},
																							alternatives: []interface{}{
																								&actionExpr{
																									pos: position{line: 185, col: 21, offset: 6867},
																									run: (*parser).callonInlineElementWithoutSubtitution720,
																									expr: &seqExpr{
																										pos: position{line: 185, col: 21, offset: 6867},
																										exprs: []interface{}{
																											&labeledExpr{
																												pos:   position{line: 185, col: 21, offset: 6867},
																												label: "key",
																												expr: &actionExpr{
																													pos: position{line: 191, col: 17, offset: 7127},
																													run: (*parser).callonInlineElementWithoutSubtitution723,
																													expr: &seqExpr{
																														pos: position{line: 191, col: 17, offset: 7127},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 191, col: 17, offset: 7127},
																																expr: &actionExpr{
																																	pos: position{line: 231, col: 14, offset: 8674},
																																	run: (*parser).callonInlineElementWithoutSubtitution726,
																																	expr: &litMatcher{
																																		pos:        position{line: 231, col: 14, offset: 8674},
																																		val:        "verse",
																																		ignoreCase: false,
																																	},
																																},
																															},
																															&notExpr{
																																pos: position{line: 191, col: 28, offset: 7138},
																																expr: &actionExpr{
																																	pos: position{line: 975, col: 16, offset: 40537},
																																	run: (*parser).callonInlineElementWithoutSubtitution729,
																																	expr: &litMatcher{
																																		pos:        position{line: 975, col: 16, offset: 40537},
																																		val:        "literal",
																																		ignoreCase: false,
																																	},
																																},
																															},
																															&labeledExpr{
																																pos:   position{line: 191, col: 41, offset: 7151},
																																label: "key",
																																expr: &oneOrMoreExpr{
																																	pos: position{line: 191, col: 45, offset: 7155},
																																	expr: &seqExpr{
																																		pos: position{line: 191, col: 46, offset: 7156},
																																		exprs: []interface{}{
																																			&notExpr{
																																				pos: position{line: 191, col: 46, offset: 7156},
																																				expr: &litMatcher{
																																					pos:        position{line: 191, col: 47, offset: 7157},
																																					val:        "=",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 191, col: 51, offset: 7161},
																																				expr: &litMatcher{
																																					pos:        position{line: 191, col: 52, offset: 7162},
																																					val:        ",",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 191, col: 56, offset: 7166},
																																				expr: &litMatcher{
																																					pos:        position{line: 191, col: 57, offset: 7167},
																																					val:        "]",
																																					ignoreCase: false,
																																				},
																																			},
																																			&anyMatcher{
																																				line: 191, col: 61, offset: 7171,
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																											&litMatcher{
																												pos:        position{line: 185, col: 40, offset: 6886},
																												val:        "=",
																												ignoreCase: false,
																											},
																											&labeledExpr{
																												pos:   position{line: 185, col: 44, offset: 6890},
																												label: "value",
																												expr: &actionExpr{
																													pos: position{line: 195, col: 19, offset: 7230},
																													run: (*parser).callonInlineElementWithoutSubtitution743,
																													expr: &labeledExpr{
																														pos:   position{line: 195, col: 19, offset: 7230},
																														label: "value",
																														expr: &zeroOrMoreExpr{
																															pos: position{line: 195, col: 25, offset: 7236},
																															expr: &seqExpr{
																																pos: position{line: 195, col: 26, offset: 7237},
																																exprs: []interface{}{
																																	&notExpr{
																																		pos: position{line: 195, col: 26, offset: 7237},
																																		expr: &litMatcher{
																																			pos:        position{line: 195, col: 27, offset: 7238},
																																			val:        "=",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 195, col: 31, offset: 7242},
																																		expr: &litMatcher{
																																			pos:        position{line: 195, col: 32, offset: 7243},
																																			val:        ",",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 195, col: 36, offset: 7247},
																																		expr: &litMatcher{
																																			pos:        position{line: 195, col: 37, offset: 7248},
																																			val:        "]",
																																			ignoreCase: false,
																																		},
																																	},
																																	&anyMatcher{
																																		line: 195, col: 41, offset: 7252,
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																											&zeroOrOneExpr{
																												pos: position{line: 185, col: 67, offset: 6913},
																												expr: &litMatcher{
																													pos:        position{line: 185, col: 67, offset: 6913},
																													val:        ",",
																													ignoreCase: false,
																												},
																											},
																											&zeroOrMoreExpr{
																												pos: position{line: 185, col: 72, offset: 6918},
																												expr: &choiceExpr{
																													pos: position{line: 1024, col: 7, offset: 41621},
																													alternatives: []interface{}{
																														&litMatcher{
																															pos:        position{line: 1024, col: 7, offset: 41621},
																															val:        " ",
																															ignoreCase: false,
																														},
																														&actionExpr{
																															pos: position{line: 1024, col: 13, offset: 41627},
																															run: (*parser).callonInlineElementWithoutSubtitution759,
																															expr: &litMatcher{
																																pos:        position{line: 1024, col: 13, offset: 41627},
																																val:        "\t",
																																ignoreCase: false,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&actionExpr{
																									pos: position{line: 187, col: 5, offset: 7002},
																									run: (*parser).callonInlineElementWithoutSubtitution761,
																									expr: &seqExpr{
																										pos: position{line: 187, col: 5, offset: 7002},
																										exprs: []interface{}{
																											&labeledExpr{
																												pos:   position{line: 187, col: 5, offset: 7002},
																												label: "key",
																												expr: &actionExpr{
																													pos: position{line: 191, col: 17, offset: 7127},
																													run: (*parser).callonInlineElementWithoutSubtitution764,
																													expr: &seqExpr{
																														pos: position{line: 191, col: 17, offset: 7127},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 191, col: 17, offset: 7127},
																																expr: &actionExpr{
																																	pos: position{line: 231, col: 14, offset: 8674},
																																	run: (*parser).callonInlineElementWithoutSubtitution767,
																																	expr: &litMatcher{
																																		pos:        position{line: 231, col: 14, offset: 8674},
																																		val:        "verse",
																																		ignoreCase: false,
																																	},
																																},
																															},
																															&notExpr{
																																pos: position{line: 191, col: 28, offset: 7138},
																																expr: &actionExpr{
																																	pos: position{line: 975, col: 16, offset: 40537},
																																	run: (*parser).callonInlineElementWithoutSubtitution770,
																																	expr: &litMatcher{
																																		pos:        position{line: 975, col: 16, offset: 40537},
																																		val:        "literal",
																																		ignoreCase: false,
																																	},
																																},
																															},
																															&labeledExpr{
																																pos:   position{line: 191, col: 41, offset: 7151},
																																label: "key",
																																expr: &oneOrMoreExpr{
																																	pos: position{line: 191, col: 45, offset: 7155},
																																	expr: &seqExpr{
																																		pos: position{line: 191, col: 46, offset: 7156},
																																		exprs: []interface{}{
																																			&notExpr{
																																				pos: position{line: 191, col: 46, offset: 7156},
																																				expr: &litMatcher{
																																					pos:        position{line: 191, col: 47, offset: 7157},
																																					val:        "=",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 191, col: 51, offset: 7161},
																																				expr: &litMatcher{
																																					pos:        position{line: 191, col: 52, offset: 7162},
																																					val:        ",",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 191, col: 56, offset: 7166},
																																				expr: &litMatcher{
																																					pos:        position{line: 191, col: 57, offset: 7167},
																																					val:        "]",
																																					ignoreCase: false,
																																				},
																																			},
																																			&anyMatcher{
																																				line: 191, col: 61, offset: 7171,
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																											&zeroOrOneExpr{
																												pos: position{line: 187, col: 24, offset: 7021},
																												expr: &litMatcher{
																													pos:        position{line: 187, col: 24, offset: 7021},
																													val:        ",",
																													ignoreCase: false,
																												},
																											},
																											&zeroOrMoreExpr{
																												pos: position{line: 187, col: 29, offset: 7026},
																												expr: &choiceExpr{
																													pos: position{line: 1024, col: 7, offset: 41621},
																													alternatives: []interface{}{
																														&litMatcher{
																															pos:        position{line: 1024, col: 7, offset: 41621},
																															val:        " ",
																															ignoreCase: false,
																														},
																														&actionExpr{
																															pos: position{line: 1024, col: 13, offset: 41627},
																															run: (*parser).callonInlineElementWithoutSubtitution787,
																															expr: &litMatcher{
																																pos:        position{line: 1024, col: 13, offset: 41627},
																																val:        "\t",
																																ignoreCase: false,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																				&litMatcher{
																					pos:        position{line: 693, col: 40, offset: 28800},
																					val:        "]",
																					ignoreCase: false,
																				},
																			},
																		},
																	},
																	&actionExpr{
																		pos: position{line: 695, col: 5, offset: 28879},
																		run: (*parser).callonInlineElementWithoutSubtitution790,
																		expr: &seqExpr{
																			pos: position{line: 695, col: 5, offset: 28879},
																			exprs: []interface{}{
																				&litMatcher{
																					pos:        position{line: 695, col: 5, offset: 28879},
																					val:        "[",
																					ignoreCase: false,
																				},
																				&labeledExpr{
																					pos:   position{line: 695, col: 9, offset: 28883},
																					label: "otherAttrs",
																					expr: &zeroOrMoreExpr{
																						pos: position{line: 695, col: 20, offset: 28894},
																						expr: &choiceExpr{
																							pos: position{line: 185, col: 21, offset: 6867},
																							alternatives: []interface{}{
																								&actionExpr{
																									pos: position{line: 185, col: 21, offset: 6867},
																									run: (*parser).callonInlineElementWithoutSubtitution796,
																									expr: &seqExpr{
																										pos: position{line: 185, col: 21, offset: 6867},
																										exprs: []interface{}{
																											&labeledExpr{
																												pos:   position{line: 185, col: 21, offset: 6867},
																												label: "key",
																												expr: &actionExpr{
																													pos: position{line: 191, col: 17, offset: 7127},
																													run: (*parser).callonInlineElementWithoutSubtitution799,
																													expr: &seqExpr{
																														pos: position{line: 191, col: 17, offset: 7127},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 191, col: 17, offset: 7127},
																																expr: &actionExpr{
																																	pos: position{line: 231, col: 14, offset: 8674},
																																	run: (*parser).callonInlineElementWithoutSubtitution802,
																																	expr: &litMatcher{
																																		pos:        position{line: 231, col: 14, offset: 8674},
																																		val:        "verse",
																																		ignoreCase: false,
																																	},
																																},
																															},
																															&notExpr{
																																pos: position{line: 191, col: 28, offset: 7138},
																																expr: &actionExpr{
																																	pos: position{line: 975, col: 16, offset: 40537},
																																	run: (*parser).callonInlineElementWithoutSubtitution805,
																																	expr: &litMatcher{
																																		pos:        position{line: 975, col: 16, offset: 40537},
																																		val:        "literal",
																																		ignoreCase: false,
																																	},
																																},
																															},
																															&labeledExpr{
																																pos:   position{line: 191, col: 41, offset: 7151},
																																label: "key",
																																expr: &oneOrMoreExpr{
																																	pos: position{line: 191, col: 45, offset: 7155},
																																	expr: &seqExpr{
																																		pos: position{line: 191, col: 46, offset: 7156},
																																		exprs: []interface{}{
																																			&notExpr{
																																				pos: position{line: 191, col: 46, offset: 7156},
																																				expr: &litMatcher{
																																					pos:        position{line: 191, col: 47, offset: 7157},
																																					val:        "=",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 191, col: 51, offset: 7161},
																																				expr: &litMatcher{
																																					pos:        position{line: 191, col: 52, offset: 7162},
																																					val:        ",",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 191, col: 56, offset: 7166},
																																				expr: &litMatcher{
																																					pos:        position{line: 191, col: 57, offset: 7167},
																																					val:        "]",
																																					ignoreCase: false,
																																				},
																																			},
																																			&anyMatcher{
																																				line: 191, col: 61, offset: 7171,
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																											&litMatcher{
																												pos:        position{line: 185, col: 40, offset: 6886},
																												val:        "=",
																												ignoreCase: false,
																											},
																											&labeledExpr{
																												pos:   position{line: 185, col: 44, offset: 6890},
																												label: "value",
																												expr: &actionExpr{
																													pos: position{line: 195, col: 19, offset: 7230},
																													run: (*parser).callonInlineElementWithoutSubtitution819,
																													expr: &labeledExpr{
																														pos:   position{line: 195, col: 19, offset: 7230},
																														label: "value",
																														expr: &zeroOrMoreExpr{
																															pos: position{line: 195, col: 25, offset: 7236},
																															expr: &seqExpr{
																																pos: position{line: 195, col: 26, offset: 7237},
																																exprs: []interface{}{
																																	&notExpr{
																																		pos: position{line: 195, col: 26, offset: 7237},
																																		expr: &litMatcher{
																																			pos:        position{line: 195, col: 27, offset: 7238},
																																			val:        "=",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 195, col: 31, offset: 7242},
																																		expr: &litMatcher{
																																			pos:        position{line: 195, col: 32, offset: 7243},
																																			val:        ",",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 195, col: 36, offset: 7247},
																																		expr: &litMatcher{
																																			pos:        position{line: 195, col: 37, offset: 7248},
																																			val:        "]",
																																			ignoreCase: false,
																																		},
																																	},
																																	&anyMatcher{
																																		line: 195, col: 41, offset: 7252,
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																											&zeroOrOneExpr{
																												pos: position{line: 185, col: 67, offset: 6913},
																												expr: &litMatcher{
																													pos:        position{line: 185, col: 67, offset: 6913},
																													val:        ",",
																													ignoreCase: false,
																												},
																											},
																											&zeroOrMoreExpr{
																												pos: position{line: 185, col: 72, offset: 6918},
																												expr: &choiceExpr{
																													pos: position{line: 1024, col: 7, offset: 41621},
																													alternatives: []interface{}{
																														&litMatcher{
																															pos:        position{line: 1024, col: 7, offset: 41621},
																															val:        " ",
																															ignoreCase: false,
																														},
																														&actionExpr{
																															pos: position{line: 1024, col: 13, offset: 41627},
																															run: (*parser).callonInlineElementWithoutSubtitution835,
																															expr: &litMatcher{
																																pos:        position{line: 1024, col: 13, offset: 41627},
																																val:        "\t",
																																ignoreCase: false,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&actionExpr{
																									pos: position{line: 187, col: 5, offset: 7002},
																									run: (*parser).callonInlineElementWithoutSubtitution837,
																									expr: &seqExpr{
																										pos: position{line: 187, col: 5, offset: 7002},
																										exprs: []interface{}{
																											&labeledExpr{
																												pos:   position{line: 187, col: 5, offset: 7002},
																												label: "key",
																												expr: &actionExpr{
																													pos: position{line: 191, col: 17, offset: 7127},
																													run: (*parser).callonInlineElementWithoutSubtitution840,
																													expr: &seqExpr{
																														pos: position{line: 191, col: 17, offset: 7127},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 191, col: 17, offset: 7127},
																																expr: &actionExpr{
																																	pos: position{line: 231, col: 14, offset: 8674},
																																	run: (*parser).callonInlineElementWithoutSubtitution843,
																																	expr: &litMatcher{
																																		pos:        position{line: 231, col: 14, offset: 8674},
																																		val:        "verse",
																																		ignoreCase: false,
																																	},
																																},
																															},
																															&notExpr{
																																pos: position{line: 191, col: 28, offset: 7138},
																																expr: &actionExpr{
																																	pos: position{line: 975, col: 16, offset: 40537},
																																	run: (*parser).callonInlineElementWithoutSubtitution846,
																																	expr: &litMatcher{
																																		pos:        position{line: 975, col: 16, offset: 40537},
																																		val:        "literal",
																																		ignoreCase: false,
																																	},
																																},
																															},
																															&labeledExpr{
																																pos:   position{line: 191, col: 41, offset: 7151},
																																label: "key",
																																expr: &oneOrMoreExpr{
																																	pos: position{line: 191, col: 45, offset: 7155},
																																	expr: &seqExpr{
																																		pos: position{line: 191, col: 46, offset: 7156},
																																		exprs: []interface{}{
																																			&notExpr{
																																				pos: position{line: 191, col: 46, offset: 7156},
																																				expr: &litMatcher{
																																					pos:        position{line: 191, col: 47, offset: 7157},
																																					val:        "=",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 191, col: 51, offset: 7161},
																																				expr: &litMatcher{
																																					pos:        position{line: 191, col: 52, offset: 7162},
																																					val:        ",",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 191, col: 56, offset: 7166},
																																				expr: &litMatcher{
																																					pos:        position{line: 191, col: 57, offset: 7167},
																																					val:        "]",
																																					ignoreCase: false,
																																				},
																																			},
																																			&anyMatcher{
																																				line: 191, col: 61, offset: 7171,
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																											&zeroOrOneExpr{
																												pos: position{line: 187, col: 24, offset: 7021},
																												expr: &litMatcher{
																													pos:        position{line: 187, col: 24, offset: 7021},
																													val:        ",",
																													ignoreCase: false,
																												},
																											},
																											&zeroOrMoreExpr{
																												pos: position{line: 187, col: 29, offset: 7026},
																												expr: &choiceExpr{
																													pos: position{line: 1024, col: 7, offset: 41621},
																													alternatives: []interface{}{
																														&litMatcher{
																															pos:        position{line: 1024, col: 7, offset: 41621},
																															val:        " ",
																															ignoreCase: false,
																														},
																														&actionExpr{
																															pos: position{line: 1024, col: 13, offset: 41627},
																															run: (*parser).callonInlineElementWithoutSubtitution863,
																															expr: &litMatcher{
																																pos:        position{line: 1024, col: 13, offset: 41627},
																																val:        "\t",
																																ignoreCase: false,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																				&litMatcher{
																					pos:        position{line: 695, col: 40, offset: 28914},
																					val:        "]",
																					ignoreCase: false,
																				},
																			},
																		},
																	},
																},
															},
														},
													},
												},
											},
											&actionExpr{
												pos: position{line: 675, col: 5, offset: 28279},
												run: (*parser).callonInlineElementWithoutSubtitution866,
												expr: &labeledExpr{
													pos:   position{line: 675, col: 5, offset: 28279},
													label: "url",
													expr: &actionExpr{
														pos: position{line: 679, col: 20, offset: 28369},
														run: (*parser).callonInlineElementWithoutSubtitution868,
														expr: &seqExpr{
															pos: position{line: 679, col: 20, offset: 28369},
															exprs: []interface{}{
																&choiceExpr{
																	pos: position{line: 1018, col: 15, offset: 41506},
																	alternatives: []interface{}{
																		&litMatcher{
																			pos:        position{line: 1018, col: 15, offset: 41506},
																			val:        "http://",
																			ignoreCase: false,
																		},
																		&litMatcher{
																			pos:        position{line: 1018, col: 27, offset: 41518},
																			val:        "https://",
																			ignoreCase: false,
																		},
																		&litMatcher{
																			pos:        position{line: 1018, col: 40, offset: 41531},
																			val:        "ftp://",
																			ignoreCase: false,
																		},
																		&litMatcher{
																			pos:        position{line: 1018, col: 51, offset: 41542},
																			val:        "irc://",
																			ignoreCase: false,
																		},
																		&litMatcher{
																			pos:        position{line: 1018, col: 62, offset: 41553},
																			val:        "mailto:",
																			ignoreCase: false,
																		},
																	},
																},
																&actionExpr{
																	pos: position{line: 1006, col: 8, offset: 41269},
																	run: (*parser).callonInlineElementWithoutSubtitution876,
																	expr: &oneOrMoreExpr{
																		pos: position{line: 1006, col: 8, offset: 41269},
																		expr: &seqExpr{
																			pos: position{line: 1006, col: 9, offset: 41270},
																			exprs: []interface{}{
																				&notExpr{
																					pos: position{line: 1006, col: 9, offset: 41270},
																					expr: &choiceExpr{
																						pos: position{line: 1028, col: 12, offset: 41683},
																						alternatives: []interface{}{
																							&litMatcher{
																								pos:        position{line: 1028, col: 12, offset: 41683},
																								val:        "\r\n",
																								ignoreCase: false,
																							},
																							&charClassMatcher{
																								pos:        position{line: 1028, col: 21, offset: 41692},
																								val:        "[\\r\\n]",
																								chars:      []rune{'\r', '\n'},
																								ignoreCase: false,
																								inverted:   false,
																							},
																						},
																					},
																				},
																				&notExpr{
																					pos: position{line: 1006, col: 18, offset: 41279},
																					expr: &choiceExpr{
																						pos: position{line: 1024, col: 7, offset: 41621},
																						alternatives: []interface{}{
																							&litMatcher{
																								pos:        position{line: 1024, col: 7, offset: 41621},
																								val:        " ",
																								ignoreCase: false,
																							},
																							&actionExpr{
																								pos: position{line: 1024, col: 13, offset: 41627},
																								run: (*parser).callonInlineElementWithoutSubtitution886,
																								expr: &litMatcher{
																									pos:        position{line: 1024, col: 13, offset: 41627},
																									val:        "\t",
																									ignoreCase: false,
																								},
																							},
																						},
																					},
																				},
																				&notExpr{
																					pos: position{line: 1006, col: 22, offset: 41283},
																					expr: &litMatcher{
																						pos:        position{line: 1006, col: 23, offset: 41284},
																						val:        "[",
																						ignoreCase: false,
																					},
																				},
																				&notExpr{
																					pos: position{line: 1006, col: 27, offset: 41288},
																					expr: &litMatcher{
																						pos:        position{line: 1006, col: 28, offset: 41289},
																						val:        "]",
																						ignoreCase: false,
																					},
																				},
																				&anyMatcher{
																					line: 1006, col: 32, offset: 41293,
																				},
																			},
																		},
																	},
																},
															},
														},
													},
												},
											},
										},
									},
								},
							},
							&actionExpr{
								pos: position{line: 1002, col: 9, offset: 41195},
								run: (*parser).callonInlineElementWithoutSubtitution893,
								expr: &oneOrMoreExpr{
									pos: position{line: 1002, col: 9, offset: 41195},
									expr: &seqExpr{
										pos: position{line: 1002, col: 10, offset: 41196},
										exprs: []interface{}{
											&notExpr{
												pos: position{line: 1002, col: 10, offset: 41196},
												expr: &choiceExpr{
													pos: position{line: 1028, col: 12, offset: 41683},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1028, col: 12, offset: 41683},
															val:        "\r\n",
															ignoreCase: false,
														},
														&charClassMatcher{
															pos:        position{line: 1028, col: 21, offset: 41692},
															val:        "[\\r\\n]",
															chars:      []rune{'\r', '\n'},
															ignoreCase: false,
															inverted:   false,
														},
													},
												},
											},
											&notExpr{
												pos: position{line: 1002, col: 19, offset: 41205},
												expr: &choiceExpr{
													pos: position{line: 1024, col: 7, offset: 41621},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1024, col: 7, offset: 41621},
															val:        " ",
															ignoreCase: false,
														},
														&actionExpr{
															pos: position{line: 1024, col: 13, offset: 41627},
															run: (*parser).callonInlineElementWithoutSubtitution903,
															expr: &litMatcher{
																pos:        position{line: 1024, col: 13, offset: 41627},
																val:        "\t",
																ignoreCase: false,
															},
														},
													},
												},
											},
											&notExpr{
												pos: position{line: 1002, col: 23, offset: 41209},
												expr: &charClassMatcher{
													pos:        position{line: 1000, col: 16, offset: 41164},
													val:        "[()[]]",
													chars:      []rune{'(', ')', '[', ']'},
													ignoreCase: false,
													inverted:   false,
												},
											},
											&anyMatcher{
												line: 1002, col: 36, offset: 41222,
											},
										},
									},
								},
							},
							&charClassMatcher{
								pos:        position{line: 1000, col: 16, offset: 41164},
								val:        "[()[]]",
								chars:      []rune{'(', ')', '[', ']'},
								ignoreCase: false,
								inverted:   false,
							},
						},
					},
				},
			},
		},
		{
			name: "QuotedText",
			pos:  position{line: 548, col: 1, offset: 21659},
			expr: &choiceExpr{
				pos: position{line: 548, col: 15, offset: 21673},
				alternatives: []interface{}{
					&ruleRefExpr{
						pos:  position{line: 548, col: 15, offset: 21673},
						name: "BoldText",
					},
					&ruleRefExpr{
						pos:  position{line: 548, col: 26, offset: 21684},
						name: "ItalicText",
					},
					&ruleRefExpr{
						pos:  position{line: 548, col: 39, offset: 21697},
						name: "MonospaceText",
					},
					&ruleRefExpr{
						pos:  position{line: 549, col: 13, offset: 21725},
						name: "EscapedBoldText",
					},
					&ruleRefExpr{
						pos:  position{line: 549, col: 31, offset: 21743},
						name: "EscapedItalicText",
					},
					&ruleRefExpr{
						pos:  position{line: 549, col: 51, offset: 21763},
						name: "EscapedMonospaceText",
					},
				},
			},
		},
		{
			name: "BoldText",
			pos:  position{line: 551, col: 1, offset: 21785},
			expr: &choiceExpr{
				pos: position{line: 552, col: 5, offset: 21802},
				alternatives: []interface{}{
					&actionExpr{
						pos: position{line: 552, col: 5, offset: 21802},
						run: (*parser).callonBoldText2,
						expr: &seqExpr{
							pos: position{line: 552, col: 5, offset: 21802},
							exprs: []interface{}{
								&notExpr{
									pos: position{line: 552, col: 5, offset: 21802},
									expr: &litMatcher{
										pos:        position{line: 552, col: 6, offset: 21803},
										val:        "\\\\",
										ignoreCase: false,
									},
								},
								&litMatcher{
									pos:        position{line: 552, col: 11, offset: 21808},
									val:        "**",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 552, col: 16, offset: 21813},
									label: "content",
									expr: &ruleRefExpr{
										pos:  position{line: 552, col: 25, offset: 21822},
										name: "QuotedTextContent",
									},
								},
								&litMatcher{
									pos:        position{line: 552, col: 44, offset: 21841},
									val:        "**",
									ignoreCase: false,
								},
							},
						},
					},
					&actionExpr{
						pos: position{line: 554, col: 9, offset: 21974},
						run: (*parser).callonBoldText10,
						expr: &seqExpr{
							pos: position{line: 554, col: 9, offset: 21974},
							exprs: []interface{}{
								&notExpr{
									pos: position{line: 554, col: 9, offset: 21974},
									expr: &litMatcher{
										pos:        position{line: 554, col: 10, offset: 21975},
										val:        "\\\\",
										ignoreCase: false,
									},
								},
								&litMatcher{
									pos:        position{line: 554, col: 15, offset: 21980},
									val:        "**",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 554, col: 20, offset: 21985},
									label: "content",
									expr: &ruleRefExpr{
										pos:  position{line: 554, col: 29, offset: 21994},
										name: "QuotedTextContent",
									},
								},
								&litMatcher{
									pos:        position{line: 554, col: 48, offset: 22013},
									val:        "*",
									ignoreCase: false,
								},
							},
						},
					},
					&actionExpr{
						pos: position{line: 557, col: 9, offset: 22190},
						run: (*parser).callonBoldText18,
						expr: &seqExpr{
							pos: position{line: 557, col: 9, offset: 22190},
							exprs: []interface{}{
								&notExpr{
									pos: position{line: 557, col: 9, offset: 22190},
									expr: &litMatcher{
										pos:        position{line: 557, col: 10, offset: 22191},
										val:        "\\",
										ignoreCase: false,
									},
								},
								&litMatcher{
									pos:        position{line: 557, col: 14, offset: 22195},
									val:        "*",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 557, col: 18, offset: 22199},
									label: "content",
									expr: &ruleRefExpr{
										pos:  position{line: 557, col: 27, offset: 22208},
										name: "QuotedTextContent",
									},
								},
								&litMatcher{
									pos:        position{line: 557, col: 46, offset: 22227},
									val:        "*",
									ignoreCase: false,
								},
								&notExpr{
									pos: position{line: 557, col: 50, offset: 22231},
									expr: &charClassMatcher{
										pos:        position{line: 998, col: 13, offset: 41136},
										val:        "[a-zA-Z0-9]",
										ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
										ignoreCase: false,
										inverted:   false,
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "EscapedBoldText",
			pos:  position{line: 561, col: 1, offset: 22425},
			expr: &choiceExpr{
				pos: position{line: 562, col: 5, offset: 22449},
				alternatives: []interface{}{
					&actionExpr{
						pos: position{line: 562, col: 5, offset: 22449},
						run: (*parser).callonEscapedBoldText2,
						expr: &seqExpr{
							pos: position{line: 562, col: 5, offset: 22449},
							exprs: []interface{}{
								&labeledExpr{
									pos:   position{line: 562, col: 5, offset: 22449},
									label: "backslashes",
									expr: &actionExpr{
										pos: position{line: 575, col: 25, offset: 23253},
										run: (*parser).callonEscapedBoldText5,
										expr: &seqExpr{
											pos: position{line: 575, col: 25, offset: 23253},
											exprs: []interface{}{
												&litMatcher{
													pos:        position{line: 575, col: 25, offset: 23253},
													val:        "\\\\",
													ignoreCase: false,
												},
												&zeroOrMoreExpr{
													pos: position{line: 575, col: 30, offset: 23258},
													expr: &litMatcher{
														pos:        position{line: 575, col: 30, offset: 23258},
														val:        "\\",
														ignoreCase: false,
													},
												},
											},
										},
									},
								},
								&litMatcher{
									pos:        position{line: 562, col: 40, offset: 22484},
									val:        "**",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 562, col: 45, offset: 22489},
									label: "content",
									expr: &ruleRefExpr{
										pos:  position{line: 562, col: 54, offset: 22498},
										name: "QuotedTextContent",
									},
								},
								&litMatcher{
									pos:        position{line: 562, col: 73, offset: 22517},
									val:        "**",
									ignoreCase: false,
								},
							},
						},
					},
					&actionExpr{
						pos: position{line: 564, col: 9, offset: 22673},
						run: (*parser).callonEscapedBoldText14,
						expr: &seqExpr{
							pos: position{line: 564, col: 9, offset: 22673},
							exprs: []interface{}{
								&labeledExpr{
									pos:   position{line: 564, col: 9, offset: 22673},
									label: "backslashes",
									expr: &actionExpr{
										pos: position{line: 571, col: 25, offset: 23184},
										run: (*parser).callonEscapedBoldText17,
										expr: &seqExpr{
											pos: position{line: 571, col: 25, offset: 23184},
											exprs: []interface{}{
												&litMatcher{
													pos:        position{line: 571, col: 25, offset: 23184},
													val:        "\\",
													ignoreCase: false,
												},
												&zeroOrMoreExpr{
													pos: position{line: 571, col: 29, offset: 23188},
													expr: &litMatcher{
														pos:        position{line: 571, col: 29, offset: 23188},
														val:        "\\",
														ignoreCase: false,
													},
												},
											},
										},
									},
								},
								&litMatcher{
									pos:        position{line: 564, col: 44, offset: 22708},
									val:        "**",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 564, col: 49, offset: 22713},
									label: "content",
									expr: &ruleRefExpr{
										pos:  position{line: 564, col: 58, offset: 22722},
										name: "QuotedTextContent",
									},
								},
								&litMatcher{
									pos:        position{line: 564, col: 77, offset: 22741},
									val:        "*",
									ignoreCase: false,
								},
							},
						},
					},
					&actionExpr{
						pos: position{line: 567, col: 9, offset: 22940},
						run: (*parser).callonEscapedBoldText26,
						expr: &seqExpr{
							pos: position{line: 567, col: 9, offset: 22940},
							exprs: []interface{}{
								&labeledExpr{
									pos:   position{line: 567, col: 9, offset: 22940},
									label: "backslashes",
									expr: &actionExpr{
										pos: position{line: 571, col: 25, offset: 23184},
										run: (*parser).callonEscapedBoldText29,
										expr: &seqExpr{
											pos: position{line: 571, col: 25, offset: 23184},
											exprs: []interface{}{
												&litMatcher{
													pos:        position{line: 571, col: 25, offset: 23184},
													val:        "\\",
													ignoreCase: false,
												},
												&zeroOrMoreExpr{
													pos: position{line: 571, col: 29, offset: 23188},
													expr: &litMatcher{
														pos:        position{line: 571, col: 29, offset: 23188},
														val:        "\\",
														ignoreCase: false,
													},
												},
											},
										},
									},
								},
								&litMatcher{
									pos:        position{line: 567, col: 44, offset: 22975},
									val:        "*",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 567, col: 48, offset: 22979},
									label: "content",
									expr: &ruleRefExpr{
										pos:  position{line: 567, col: 57, offset: 22988},
										name: "QuotedTextContent",
									},
								},
								&litMatcher{
									pos:        position{line: 567, col: 76, offset: 23007},
									val:        "*",
									ignoreCase: false,
								},
							},
						},
					},
				},
			},
		},
		{
			name: "ItalicText",
			pos:  position{line: 579, col: 1, offset: 23299},
			expr: &choiceExpr{
				pos: position{line: 580, col: 5, offset: 23318},
				alternatives: []interface{}{
					&actionExpr{
						pos: position{line: 580, col: 5, offset: 23318},
						run: (*parser).callonItalicText2,
						expr: &seqExpr{
							pos: position{line: 580, col: 5, offset: 23318},
							exprs: []interface{}{
								&notExpr{
									pos: position{line: 580, col: 5, offset: 23318},
									expr: &litMatcher{
										pos:        position{line: 580, col: 6, offset: 23319},
										val:        "\\\\",
										ignoreCase: false,
									},
								},
								&litMatcher{
									pos:        position{line: 580, col: 11, offset: 23324},
									val:        "__",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 580, col: 16, offset: 23329},
									label: "content",
									expr: &ruleRefExpr{
										pos:  position{line: 580, col: 25, offset: 23338},
										name: "QuotedTextContent",
									},
								},
								&litMatcher{
									pos:        position{line: 580, col: 44, offset: 23357},
									val:        "__",
									ignoreCase: false,
								},
							},
						},
					},
					&actionExpr{
						pos: position{line: 582, col: 9, offset: 23446},
						run: (*parser).callonItalicText10,
						expr: &seqExpr{
							pos: position{line: 582, col: 9, offset: 23446},
							exprs: []interface{}{
								&notExpr{
									pos: position{line: 582, col: 9, offset: 23446},
									expr: &litMatcher{
										pos:        position{line: 582, col: 10, offset: 23447},
										val:        "\\\\",
										ignoreCase: false,
									},
								},
								&litMatcher{
									pos:        position{line: 582, col: 15, offset: 23452},
									val:        "__",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 582, col: 20, offset: 23457},
									label: "content",
									expr: &ruleRefExpr{
										pos:  position{line: 582, col: 29, offset: 23466},
										name: "QuotedTextContent",
									},
								},
								&litMatcher{
									pos:        position{line: 582, col: 48, offset: 23485},
									val:        "_",
									ignoreCase: false,
								},
							},
						},
					},
					&actionExpr{
						pos: position{line: 585, col: 9, offset: 23664},
						run: (*parser).callonItalicText18,
						expr: &seqExpr{
							pos: position{line: 585, col: 9, offset: 23664},
							exprs: []interface{}{
								&notExpr{
									pos: position{line: 585, col: 9, offset: 23664},
									expr: &litMatcher{
										pos:        position{line: 585, col: 10, offset: 23665},
										val:        "\\",
										ignoreCase: false,
									},
								},
								&litMatcher{
									pos:        position{line: 585, col: 14, offset: 23669},
									val:        "_",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 585, col: 18, offset: 23673},
									label: "content",
									expr: &ruleRefExpr{
										pos:  position{line: 585, col: 27, offset: 23682},
										name: "QuotedTextContent",
									},
								},
								&litMatcher{
									pos:        position{line: 585, col: 46, offset: 23701},
									val:        "_",
									ignoreCase: false,
								},
								&notExpr{
									pos: position{line: 585, col: 50, offset: 23705},
									expr: &charClassMatcher{
										pos:        position{line: 998, col: 13, offset: 41136},
										val:        "[a-zA-Z0-9]",
										ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
										ignoreCase: false,
										inverted:   false,
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "EscapedItalicText",
			pos:  position{line: 589, col: 1, offset: 23900},
			expr: &choiceExpr{
				pos: position{line: 590, col: 5, offset: 23926},
				alternatives: []interface{}{
					&actionExpr{
						pos: position{line: 590, col: 5, offset: 23926},
						run: (*parser).callonEscapedItalicText2,
						expr: &seqExpr{
							pos: position{line: 590, col: 5, offset: 23926},
							exprs: []interface{}{
								&labeledExpr{
									pos:   position{line: 590, col: 5, offset: 23926},
									label: "backslashes",
									expr: &actionExpr{
										pos: position{line: 575, col: 25, offset: 23253},
										run: (*parser).callonEscapedItalicText5,
										expr: &seqExpr{
											pos: position{line: 575, col: 25, offset: 23253},
											exprs: []interface{}{
												&litMatcher{
													pos:        position{line: 575, col: 25, offset: 23253},
													val:        "\\\\",
													ignoreCase: false,
												},
												&zeroOrMoreExpr{
													pos: position{line: 575, col: 30, offset: 23258},
													expr: &litMatcher{
														pos:        position{line: 575, col: 30, offset: 23258},
														val:        "\\",
														ignoreCase: false,
													},
												},
											},
										},
									},
								},
								&litMatcher{
									pos:        position{line: 590, col: 40, offset: 23961},
									val:        "__",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 590, col: 45, offset: 23966},
									label: "content",
									expr: &ruleRefExpr{
										pos:  position{line: 590, col: 54, offset: 23975},
										name: "QuotedTextContent",
									},
								},
								&litMatcher{
									pos:        position{line: 590, col: 73, offset: 23994},
									val:        "__",
									ignoreCase: false,
								},
							},
						},
					},
					&actionExpr{
						pos: position{line: 592, col: 9, offset: 24150},
						run: (*parser).callonEscapedItalicText14,
						expr: &seqExpr{
							pos: position{line: 592, col: 9, offset: 24150},
							exprs: []interface{}{
								&labeledExpr{
									pos:   position{line: 592, col: 9, offset: 24150},
									label: "backslashes",
									expr: &actionExpr{
										pos: position{line: 571, col: 25, offset: 23184},
										run: (*parser).callonEscapedItalicText17,
										expr: &seqExpr{
											pos: position{line: 571, col: 25, offset: 23184},
											exprs: []interface{}{
												&litMatcher{
													pos:        position{line: 571, col: 25, offset: 23184},
													val:        "\\",
													ignoreCase: false,
												},
												&zeroOrMoreExpr{
													pos: position{line: 571, col: 29, offset: 23188},
													expr: &litMatcher{
														pos:        position{line: 571, col: 29, offset: 23188},
														val:        "\\",
														ignoreCase: false,
													},
												},
											},
										},
									},
								},
								&litMatcher{
									pos:        position{line: 592, col: 44, offset: 24185},
									val:        "__",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 592, col: 49, offset: 24190},
									label: "content",
									expr: &ruleRefExpr{
										pos:  position{line: 592, col: 58, offset: 24199},
										name: "QuotedTextContent",
									},
								},
								&litMatcher{
									pos:        position{line: 592, col: 77, offset: 24218},
									val:        "_",
									ignoreCase: false,
								},
							},
						},
					},
					&actionExpr{
						pos: position{line: 595, col: 9, offset: 24417},
						run: (*parser).callonEscapedItalicText26,
						expr: &seqExpr{
							pos: position{line: 595, col: 9, offset: 24417},
							exprs: []interface{}{
								&labeledExpr{
									pos:   position{line: 595, col: 9, offset: 24417},
									label: "backslashes",
									expr: &actionExpr{
										pos: position{line: 571, col: 25, offset: 23184},
										run: (*parser).callonEscapedItalicText29,
										expr: &seqExpr{
											pos: position{line: 571, col: 25, offset: 23184},
											exprs: []interface{}{
												&litMatcher{
													pos:        position{line: 571, col: 25, offset: 23184},
													val:        "\\",
													ignoreCase: false,
												},
												&zeroOrMoreExpr{
													pos: position{line: 571, col: 29, offset: 23188},
													expr: &litMatcher{
														pos:        position{line: 571, col: 29, offset: 23188},
														val:        "\\",
														ignoreCase: false,
													},
												},
											},
										},
									},
								},
								&litMatcher{
									pos:        position{line: 595, col: 44, offset: 24452},
									val:        "_",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 595, col: 48, offset: 24456},
									label: "content",
									expr: &ruleRefExpr{
										pos:  position{line: 595, col: 57, offset: 24465},
										name: "QuotedTextContent",
									},
								},
								&litMatcher{
									pos:        position{line: 595, col: 76, offset: 24484},
									val:        "_",
									ignoreCase: false,
								},
							},
						},
					},
				},
			},
		},
		{
			name: "MonospaceText",
			pos:  position{line: 599, col: 1, offset: 24637},
			expr: &choiceExpr{
				pos: position{line: 600, col: 5, offset: 24659},
				alternatives: []interface{}{
					&actionExpr{
						pos: position{line: 600, col: 5, offset: 24659},
						run: (*parser).callonMonospaceText2,
						expr: &seqExpr{
							pos: position{line: 600, col: 5, offset: 24659},
							exprs: []interface{}{
								&notExpr{
									pos: position{line: 600, col: 5, offset: 24659},
									expr: &litMatcher{
										pos:        position{line: 600, col: 6, offset: 24660},
										val:        "\\\\",
										ignoreCase: false,
									},
								},
								&litMatcher{
									pos:        position{line: 600, col: 11, offset: 24665},
									val:        "``",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 600, col: 16, offset: 24670},
									label: "content",
									expr: &ruleRefExpr{
										pos:  position{line: 600, col: 25, offset: 24679},
										name: "QuotedTextContent",
									},
								},
								&litMatcher{
									pos:        position{line: 600, col: 44, offset: 24698},
									val:        "``",
									ignoreCase: false,
								},
							},
						},
					},
					&actionExpr{
						pos: position{line: 602, col: 9, offset: 24836},
						run: (*parser).callonMonospaceText10,
						expr: &seqExpr{
							pos: position{line: 602, col: 9, offset: 24836},
							exprs: []interface{}{
								&notExpr{
									pos: position{line: 602, col: 9, offset: 24836},
									expr: &litMatcher{
										pos:        position{line: 602, col: 10, offset: 24837},
										val:        "\\\\",
										ignoreCase: false,
									},
								},
								&litMatcher{
									pos:        position{line: 602, col: 15, offset: 24842},
									val:        "``",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 602, col: 20, offset: 24847},
									label: "content",
									expr: &ruleRefExpr{
										pos:  position{line: 602, col: 29, offset: 24856},
										name: "QuotedTextContent",
									},
								},
								&litMatcher{
									pos:        position{line: 602, col: 48, offset: 24875},
									val:        "`",
									ignoreCase: false,
								},
							},
						},
					},
					&actionExpr{
						pos: position{line: 605, col: 9, offset: 25057},
						run: (*parser).callonMonospaceText18,
						expr: &seqExpr{
							pos: position{line: 605, col: 9, offset: 25057},
							exprs: []interface{}{
								&notExpr{
									pos: position{line: 605, col: 9, offset: 25057},
									expr: &litMatcher{
										pos:        position{line: 605, col: 10, offset: 25058},
										val:        "\\",
										ignoreCase: false,
									},
								},
								&litMatcher{
									pos:        position{line: 605, col: 14, offset: 25062},
									val:        "`",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 605, col: 18, offset: 25066},
									label: "content",
									expr: &ruleRefExpr{
										pos:  position{line: 605, col: 27, offset: 25075},
										name: "QuotedTextContent",
									},
								},
								&litMatcher{
									pos:        position{line: 605, col: 46, offset: 25094},
									val:        "`",
									ignoreCase: false,
								},
								&notExpr{
									pos: position{line: 605, col: 50, offset: 25098},
									expr: &charClassMatcher{
										pos:        position{line: 998, col: 13, offset: 41136},
										val:        "[a-zA-Z0-9]",
										ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
										ignoreCase: false,
										inverted:   false,
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "EscapedMonospaceText",
			pos:  position{line: 609, col: 1, offset: 25296},
			expr: &choiceExpr{
				pos: position{line: 610, col: 5, offset: 25325},
				alternatives: []interface{}{
					&actionExpr{
						pos: position{line: 610, col: 5, offset: 25325},
						run: (*parser).callonEscapedMonospaceText2,
						expr: &seqExpr{
							pos: position{line: 610, col: 5, offset: 25325},
							exprs: []interface{}{
								&labeledExpr{
									pos:   position{line: 610, col: 5, offset: 25325},
									label: "backslashes",
									expr: &actionExpr{
										pos: position{line: 575, col: 25, offset: 23253},
										run: (*parser).callonEscapedMonospaceText5,
										expr: &seqExpr{
											pos: position{line: 575, col: 25, offset: 23253},
											exprs: []interface{}{
												&litMatcher{
													pos:        position{line: 575, col: 25, offset: 23253},
													val:        "\\\\",
													ignoreCase: false,
												},
												&zeroOrMoreExpr{
													pos: position{line: 575, col: 30, offset: 23258},
													expr: &litMatcher{
														pos:        position{line: 575, col: 30, offset: 23258},
														val:        "\\",
														ignoreCase: false,
													},
												},
											},
										},
									},
								},
								&litMatcher{
									pos:        position{line: 610, col: 40, offset: 25360},
									val:        "``",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 610, col: 45, offset: 25365},
									label: "content",
									expr: &ruleRefExpr{
										pos:  position{line: 610, col: 54, offset: 25374},
										name: "QuotedTextContent",
									},
								},
								&litMatcher{
									pos:        position{line: 610, col: 73, offset: 25393},
									val:        "``",
									ignoreCase: false,
								},
							},
						},
					},
					&actionExpr{
						pos: position{line: 612, col: 9, offset: 25549},
						run: (*parser).callonEscapedMonospaceText14,
						expr: &seqExpr{
							pos: position{line: 612, col: 9, offset: 25549},
							exprs: []interface{}{
								&labeledExpr{
									pos:   position{line: 612, col: 9, offset: 25549},
									label: "backslashes",
									expr: &actionExpr{
										pos: position{line: 571, col: 25, offset: 23184},
										run: (*parser).callonEscapedMonospaceText17,
										expr: &seqExpr{
											pos: position{line: 571, col: 25, offset: 23184},
											exprs: []interface{}{
												&litMatcher{
													pos:        position{line: 571, col: 25, offset: 23184},
													val:        "\\",
													ignoreCase: false,
												},
												&zeroOrMoreExpr{
													pos: position{line: 571, col: 29, offset: 23188},
													expr: &litMatcher{
														pos:        position{line: 571, col: 29, offset: 23188},
														val:        "\\",
														ignoreCase: false,
													},
												},
											},
										},
									},
								},
								&litMatcher{
									pos:        position{line: 612, col: 44, offset: 25584},
									val:        "``",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 612, col: 49, offset: 25589},
									label: "content",
									expr: &ruleRefExpr{
										pos:  position{line: 612, col: 58, offset: 25598},
										name: "QuotedTextContent",
									},
								},
								&litMatcher{
									pos:        position{line: 612, col: 77, offset: 25617},
									val:        "`",
									ignoreCase: false,
								},
							},
						},
					},
					&actionExpr{
						pos: position{line: 615, col: 9, offset: 25816},
						run: (*parser).callonEscapedMonospaceText26,
						expr: &seqExpr{
							pos: position{line: 615, col: 9, offset: 25816},
							exprs: []interface{}{
								&labeledExpr{
									pos:   position{line: 615, col: 9, offset: 25816},
									label: "backslashes",
									expr: &actionExpr{
										pos: position{line: 571, col: 25, offset: 23184},
										run: (*parser).callonEscapedMonospaceText29,
										expr: &seqExpr{
											pos: position{line: 571, col: 25, offset: 23184},
											exprs: []interface{}{
												&litMatcher{
													pos:        position{line: 571, col: 25, offset: 23184},
													val:        "\\",
													ignoreCase: false,
												},
												&zeroOrMoreExpr{
													pos: position{line: 571, col: 29, offset: 23188},
													expr: &litMatcher{
														pos:        position{line: 571, col: 29, offset: 23188},
														val:        "\\",
														ignoreCase: false,
													},
												},
											},
										},
									},
								},
								&litMatcher{
									pos:        position{line: 615, col: 44, offset: 25851},
									val:        "`",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 615, col: 48, offset: 25855},
									label: "content",
									expr: &ruleRefExpr{
										pos:  position{line: 615, col: 57, offset: 25864},
										name: "QuotedTextContent",
									},
								},
								&litMatcher{
									pos:        position{line: 615, col: 76, offset: 25883},
									val:        "`",
									ignoreCase: false,
								},
							},
						},
					},
				},
			},
		},
		{
			name: "QuotedTextContent",
			pos:  position{line: 619, col: 1, offset: 26036},
			expr: &seqExpr{
				pos: position{line: 619, col: 22, offset: 26057},
				exprs: []interface{}{
					&ruleRefExpr{
						pos:  position{line: 619, col: 22, offset: 26057},
						name: "QuotedTextContentElement",
					},
					&zeroOrMoreExpr{
						pos: position{line: 619, col: 47, offset: 26082},
						expr: &seqExpr{
							pos: position{line: 619, col: 48, offset: 26083},
							exprs: []interface{}{
								&oneOrMoreExpr{
									pos: position{line: 619, col: 48, offset: 26083},
									expr: &choiceExpr{
										pos: position{line: 1024, col: 7, offset: 41621},
										alternatives: []interface{}{
											&litMatcher{
												pos:        position{line: 1024, col: 7, offset: 41621},
												val:        " ",
												ignoreCase: false,
											},
											&actionExpr{
												pos: position{line: 1024, col: 13, offset: 41627},
												run: (*parser).callonQuotedTextContent8,
												expr: &litMatcher{
													pos:        position{line: 1024, col: 13, offset: 41627},
													val:        "\t",
													ignoreCase: false,
												},
											},
										},
									},
								},
								&ruleRefExpr{
									pos:  position{line: 619, col: 52, offset: 26087},
									name: "QuotedTextContentElement",
								},
							},
						},
					},
				},
			},
		},
		{
			name: "QuotedTextContentElement",
			pos:  position{line: 621, col: 1, offset: 26115},
			expr: &choiceExpr{
				pos: position{line: 621, col: 29, offset: 26143},
				alternatives: []interface{}{
					&ruleRefExpr{
						pos:  position{line: 621, col: 29, offset: 26143},
						name: "QuotedText",
					},
					&oneOrMoreExpr{
						pos: position{line: 623, col: 19, offset: 26320},
						expr: &seqExpr{
							pos: position{line: 623, col: 20, offset: 26321},
							exprs: []interface{}{
								&notExpr{
									pos: position{line: 623, col: 20, offset: 26321},
									expr: &choiceExpr{
										pos: position{line: 1028, col: 12, offset: 41683},
										alternatives: []interface{}{
											&litMatcher{
												pos:        position{line: 1028, col: 12, offset: 41683},
												val:        "\r\n",
												ignoreCase: false,
											},
											&charClassMatcher{
												pos:        position{line: 1028, col: 21, offset: 41692},
												val:        "[\\r\\n]",
												chars:      []rune{'\r', '\n'},
												ignoreCase: false,
												inverted:   false,
											},
										},
									},
								},
								&notExpr{
									pos: position{line: 623, col: 29, offset: 26330},
									expr: &choiceExpr{
										pos: position{line: 1024, col: 7, offset: 41621},
										alternatives: []interface{}{
											&litMatcher{
												pos:        position{line: 1024, col: 7, offset: 41621},
												val:        " ",
												ignoreCase: false,
											},
											&actionExpr{
												pos: position{line: 1024, col: 13, offset: 41627},
												run: (*parser).callonQuotedTextContentElement12,
												expr: &litMatcher{
													pos:        position{line: 1024, col: 13, offset: 41627},
													val:        "\t",
													ignoreCase: false,
												},
											},
										},
									},
								},
								&notExpr{
									pos: position{line: 623, col: 33, offset: 26334},
									expr: &litMatcher{
										pos:        position{line: 623, col: 34, offset: 26335},
										val:        "*",
										ignoreCase: false,
									},
								},
								&notExpr{
									pos: position{line: 623, col: 38, offset: 26339},
									expr: &litMatcher{
										pos:        position{line: 623, col: 39, offset: 26340},
										val:        "_",
										ignoreCase: false,
									},
								},
								&notExpr{
									pos: position{line: 623, col: 43, offset: 26344},
									expr: &litMatcher{
										pos:        position{line: 623, col: 44, offset: 26345},
										val:        "`",
										ignoreCase: false,
									},
								},
								&anyMatcher{
									line: 623, col: 48, offset: 26349,
								},
							},
						},
					},
					&actionExpr{
						pos: position{line: 625, col: 29, offset: 26420},
						run: (*parser).callonQuotedTextContentElement21,
						expr: &oneOrMoreExpr{
							pos: position{line: 625, col: 29, offset: 26420},
							expr: &seqExpr{
								pos: position{line: 625, col: 30, offset: 26421},
								exprs: []interface{}{
									&notExpr{
										pos: position{line: 625, col: 30, offset: 26421},
										expr: &choiceExpr{
											pos: position{line: 1028, col: 12, offset: 41683},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 1028, col: 12, offset: 41683},
													val:        "\r\n",
													ignoreCase: false,
												},
												&charClassMatcher{
													pos:        position{line: 1028, col: 21, offset: 41692},
													val:        "[\\r\\n]",
													chars:      []rune{'\r', '\n'},
													ignoreCase: false,
													inverted:   false,
												},
											},
										},
									},
									&notExpr{
										pos: position{line: 625, col: 39, offset: 26430},
										expr: &choiceExpr{
											pos: position{line: 1024, col: 7, offset: 41621},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 1024, col: 7, offset: 41621},
													val:        " ",
													ignoreCase: false,
												},
												&actionExpr{
													pos: position{line: 1024, col: 13, offset: 41627},
													run: (*parser).callonQuotedTextContentElement31,
													expr: &litMatcher{
														pos:        position{line: 1024, col: 13, offset: 41627},
														val:        "\t",
														ignoreCase: false,
													},
												},
											},
										},
									},
									&anyMatcher{
										line: 625, col: 44, offset: 26435,
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "Passthrough",
			pos:  position{line: 635, col: 1, offset: 26834},
			expr: &choiceExpr{
				pos: position{line: 635, col: 16, offset: 26849},
				alternatives: []interface{}{
					&actionExpr{
						pos: position{line: 641, col: 26, offset: 27091},
						run: (*parser).callonPassthrough2,
						expr: &seqExpr{
							pos: position{line: 641, col: 26, offset: 27091},
							exprs: []interface{}{
								&litMatcher{
									pos:        position{line: 641, col: 26, offset: 27091},
									val:        "+++",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 641, col: 32, offset: 27097},
									label: "content",
									expr: &zeroOrMoreExpr{
										pos: position{line: 641, col: 40, offset: 27105},
										expr: &seqExpr{
											pos: position{line: 641, col: 41, offset: 27106},
											exprs: []interface{}{
												&notExpr{
													pos: position{line: 641, col: 41, offset: 27106},
													expr: &litMatcher{
														pos:        position{line: 641, col: 42, offset: 27107},
														val:        "+++",
														ignoreCase: false,
													},
												},
												&anyMatcher{
													line: 641, col: 48, offset: 27113,
												},
											},
										},
									},
								},
								&litMatcher{
									pos:        position{line: 641, col: 52, offset: 27117},
									val:        "+++",
									ignoreCase: false,
								},
							},
						},
					},
					&actionExpr{
						pos: position{line: 637, col: 26, offset: 26940},
						run: (*parser).callonPassthrough12,
						expr: &seqExpr{
							pos: position{line: 637, col: 26, offset: 26940},
							exprs: []interface{}{
								&litMatcher{
									pos:        position{line: 637, col: 26, offset: 26940},
									val:        "+",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 637, col: 30, offset: 26944},
									label: "content",
									expr: &zeroOrMoreExpr{
										pos: position{line: 637, col: 38, offset: 26952},
										expr: &seqExpr{
											pos: position{line: 637, col: 39, offset: 26953},
											exprs: []interface{}{
												&notExpr{
													pos: position{line: 637, col: 39, offset: 26953},
													expr: &choiceExpr{
														pos: position{line: 1028, col: 12, offset: 41683},
														alternatives: []interface{}{
															&litMatcher{
																pos:        position{line: 1028, col: 12, offset: 41683},
																val:        "\r\n",
																ignoreCase: false,
															},
															&charClassMatcher{
																pos:        position{line: 1028, col: 21, offset: 41692},
																val:        "[\\r\\n]",
																chars:      []rune{'\r', '\n'},
																ignoreCase: false,
																inverted:   false,
															},
														},
													},
												},
												&notExpr{
													pos: position{line: 637, col: 48, offset: 26962},
													expr: &litMatcher{
														pos:        position{line: 637, col: 49, offset: 26963},
														val:        "+",
														ignoreCase: false,
													},
												},
												&anyMatcher{
													line: 637, col: 53, offset: 26967,
												},
											},
										},
									},
								},
								&litMatcher{
									pos:        position{line: 637, col: 57, offset: 26971},
									val:        "+",
									ignoreCase: false,
								},
							},
						},
					},
					&ruleRefExpr{
						pos:  position{line: 635, col: 64, offset: 26897},
						name: "PassthroughMacro",
					},
				},
			},
		},
		{
			name: "PassthroughMacro",
			pos:  position{line: 645, col: 1, offset: 27214},
			expr: &choiceExpr{
				pos: position{line: 645, col: 21, offset: 27234},
				alternatives: []interface{}{
					&actionExpr{
						pos: position{line: 645, col: 21, offset: 27234},
						run: (*parser).callonPassthroughMacro2,
						expr: &seqExpr{
							pos: position{line: 645, col: 21, offset: 27234},
							exprs: []interface{}{
								&litMatcher{
									pos:        position{line: 645, col: 21, offset: 27234},
									val:        "pass:[",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 645, col: 30, offset: 27243},
									label: "content",
									expr: &zeroOrMoreExpr{
										pos: position{line: 645, col: 38, offset: 27251},
										expr: &seqExpr{
											pos: position{line: 651, col: 31, offset: 27551},
											exprs: []interface{}{
												&notExpr{
													pos: position{line: 651, col: 31, offset: 27551},
													expr: &litMatcher{
														pos:        position{line: 651, col: 32, offset: 27552},
														val:        "]",
														ignoreCase: false,
													},
												},
												&anyMatcher{
													line: 651, col: 36, offset: 27556,
												},
											},
										},
									},
								},
								&litMatcher{
									pos:        position{line: 645, col: 67, offset: 27280},
									val:        "]",
									ignoreCase: false,
								},
							},
						},
					},
					&actionExpr{
						pos: position{line: 647, col: 5, offset: 27371},
						run: (*parser).callonPassthroughMacro12,
						expr: &seqExpr{
							pos: position{line: 647, col: 5, offset: 27371},
							exprs: []interface{}{
								&litMatcher{
									pos:        position{line: 647, col: 5, offset: 27371},
									val:        "pass:q[",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 647, col: 15, offset: 27381},
									label: "content",
									expr: &zeroOrMoreExpr{
										pos: position{line: 647, col: 23, offset: 27389},
										expr: &choiceExpr{
											pos: position{line: 647, col: 24, offset: 27390},
											alternatives: []interface{}{
												&ruleRefExpr{
													pos:  position{line: 647, col: 24, offset: 27390},
													name: "QuotedText",
												},
												&seqExpr{
													pos: position{line: 651, col: 31, offset: 27551},
													exprs: []interface{}{
														&notExpr{
															pos: position{line: 651, col: 31, offset: 27551},
															expr: &litMatcher{
																pos:        position{line: 651, col: 32, offset: 27552},
																val:        "]",
																ignoreCase: false,
															},
														},
														&anyMatcher{
															line: 651, col: 36, offset: 27556,
														},
													},
												},
											},
										},
									},
								},
								&litMatcher{
									pos:        position{line: 647, col: 65, offset: 27431},
									val:        "]",
									ignoreCase: false,
								},
							},
						},
					},
				},
			},
		},
		{
			name: "InlineFootnote",
			pos:  position{line: 739, col: 1, offset: 30785},
			expr: &choiceExpr{
				pos: position{line: 739, col: 19, offset: 30803},
				alternatives: []interface{}{
					&actionExpr{
						pos: position{line: 739, col: 19, offset: 30803},
						run: (*parser).callonInlineFootnote2,
						expr: &seqExpr{
							pos: position{line: 739, col: 19, offset: 30803},
							exprs: []interface{}{
								&litMatcher{
									pos:        position{line: 739, col: 19, offset: 30803},
									val:        "footnote:[",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 739, col: 32, offset: 30816},
									label: "content",
									expr: &ruleRefExpr{
										pos:  position{line: 739, col: 41, offset: 30825},
										name: "FootnoteContent",
									},
								},
								&litMatcher{
									pos:        position{line: 739, col: 58, offset: 30842},
									val:        "]",
									ignoreCase: false,
								},
							},
						},
					},
					&actionExpr{
						pos: position{line: 741, col: 9, offset: 30925},
						run: (*parser).callonInlineFootnote8,
						expr: &seqExpr{
							pos: position{line: 741, col: 9, offset: 30925},
							exprs: []interface{}{
								&litMatcher{
									pos:        position{line: 741, col: 9, offset: 30925},
									val:        "footnoteref:[",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 741, col: 25, offset: 30941},
									label: "ref",
									expr: &actionExpr{
										pos: position{line: 747, col: 16, offset: 31254},
										run: (*parser).callonInlineFootnote12,
										expr: &zeroOrMoreExpr{
											pos: position{line: 747, col: 16, offset: 31254},
											expr: &seqExpr{
												pos: position{line: 747, col: 17, offset: 31255},
												exprs: []interface{}{
													&notExpr{
														pos: position{line: 747, col: 17, offset: 31255},
														expr: &litMatcher{
															pos:        position{line: 747, col: 18, offset: 31256},
															val:        ",",
															ignoreCase: false,
														},
													},
													&notExpr{
														pos: position{line: 747, col: 22, offset: 31260},
														expr: &litMatcher{
															pos:        position{line: 747, col: 23, offset: 31261},
															val:        "]",
															ignoreCase: false,
														},
													},
													&notExpr{
														pos: position{line: 747, col: 27, offset: 31265},
														expr: &choiceExpr{
															pos: position{line: 1032, col: 8, offset: 41723},
															alternatives: []interface{}{
																&litMatcher{
																	pos:        position{line: 1028, col: 12, offset: 41683},
																	val:        "\r\n",
																	ignoreCase: false,
																},
																&charClassMatcher{
																	pos:        position{line: 1028, col: 21, offset: 41692},
																	val:        "[\\r\\n]",
																	chars:      []rune{'\r', '\n'},
																	ignoreCase: false,
																	inverted:   false,
																},
																&notExpr{
																	pos: position{line: 1030, col: 8, offset: 41712},
																	expr: &anyMatcher{
																		line: 1030, col: 9, offset: 41713,
																	},
																},
															},
														},
													},
													&anyMatcher{
														line: 747, col: 32, offset: 31270,
													},
												},
											},
										},
									},
								},
								&litMatcher{
									pos:        position{line: 741, col: 43, offset: 30959},
									val:        ",",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 741, col: 47, offset: 30963},
									label: "content",
									expr: &ruleRefExpr{
										pos:  position{line: 741, col: 56, offset: 30972},
										name: "FootnoteContent",
									},
								},
								&litMatcher{
									pos:        position{line: 741, col: 73, offset: 30989},
									val:        "]",
									ignoreCase: false,
								},
							},
						},
					},
					&actionExpr{
						pos: position{line: 743, col: 9, offset: 31082},
						run: (*parser).callonInlineFootnote30,
						expr: &seqExpr{
							pos: position{line: 743, col: 9, offset: 31082},
							exprs: []interface{}{
								&litMatcher{
									pos:        position{line: 743, col: 9, offset: 31082},
									val:        "footnoteref:[",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 743, col: 25, offset: 31098},
									label: "ref",
									expr: &actionExpr{
										pos: position{line: 747, col: 16, offset: 31254},
										run: (*parser).callonInlineFootnote34,
										expr: &zeroOrMoreExpr{
											pos: position{line: 747, col: 16, offset: 31254},
											expr: &seqExpr{
												pos: position{line: 747, col: 17, offset: 31255},
												exprs: []interface{}{
													&notExpr{
														pos: position{line: 747, col: 17, offset: 31255},
														expr: &litMatcher{
															pos:        position{line: 747, col: 18, offset: 31256},
															val:        ",",
															ignoreCase: false,
														},
													},
													&notExpr{
														pos: position{line: 747, col: 22, offset: 31260},
														expr: &litMatcher{
															pos:        position{line: 747, col: 23, offset: 31261},
															val:        "]",
															ignoreCase: false,
														},
													},
													&notExpr{
														pos: position{line: 747, col: 27, offset: 31265},
														expr: &choiceExpr{
															pos: position{line: 1032, col: 8, offset: 41723},
															alternatives: []interface{}{
																&litMatcher{
																	pos:        position{line: 1028, col: 12, offset: 41683},
																	val:        "\r\n",
																	ignoreCase: false,
																},
																&charClassMatcher{
																	pos:        position{line: 1028, col: 21, offset: 41692},
																	val:        "[\\r\\n]",
																	chars:      []rune{'\r', '\n'},
																	ignoreCase: false,
																	inverted:   false,
																},
																&notExpr{
																	pos: position{line: 1030, col: 8, offset: 41712},
																	expr: &anyMatcher{
																		line: 1030, col: 9, offset: 41713,
																	},
																},
															},
														},
													},
													&anyMatcher{
														line: 747, col: 32, offset: 31270,
													},
												},
											},
										},
									},
								},
								&litMatcher{
									pos:        position{line: 743, col: 43, offset: 31116},
									val:        "]",
									ignoreCase: false,
								},
							},
						},
					},
				},
			},
		},
		{
			name: "FootnoteContent",
			pos:  position{line: 751, col: 1, offset: 31354},
			expr: &actionExpr{
				pos: position{line: 751, col: 20, offset: 31373},
				run: (*parser).callonFootnoteContent1,
				expr: &labeledExpr{
					pos:   position{line: 751, col: 20, offset: 31373},
					label: "elements",
					expr: &oneOrMoreExpr{
						pos: position{line: 751, col: 29, offset: 31382},
						expr: &seqExpr{
							pos: position{line: 751, col: 30, offset: 31383},
							exprs: []interface{}{
								&notExpr{
									pos: position{line: 751, col: 30, offset: 31383},
									expr: &litMatcher{
										pos:        position{line: 751, col: 31, offset: 31384},
										val:        "]",
										ignoreCase: false,
									},
								},
								&notExpr{
									pos: position{line: 751, col: 35, offset: 31388},
									expr: &choiceExpr{
										pos: position{line: 1032, col: 8, offset: 41723},
										alternatives: []interface{}{
											&litMatcher{
												pos:        position{line: 1028, col: 12, offset: 41683},
												val:        "\r\n",
												ignoreCase: false,
											},
											&charClassMatcher{
												pos:        position{line: 1028, col: 21, offset: 41692},
												val:        "[\\r\\n]",
												chars:      []rune{'\r', '\n'},
												ignoreCase: false,
												inverted:   false,
											},
											&notExpr{
												pos: position{line: 1030, col: 8, offset: 41712},
												expr: &anyMatcher{
													line: 1030, col: 9, offset: 41713,
												},
											},
										},
									},
								},
								&zeroOrMoreExpr{
									pos: position{line: 751, col: 40, offset: 31393},
									expr: &choiceExpr{
										pos: position{line: 1024, col: 7, offset: 41621},
										alternatives: []interface{}{
											&litMatcher{
												pos:        position{line: 1024, col: 7, offset: 41621},
												val:        " ",
												ignoreCase: false,
											},
											&actionExpr{
												pos: position{line: 1024, col: 13, offset: 41627},
												run: (*parser).callonFootnoteContent16,
												expr: &litMatcher{
													pos:        position{line: 1024, col: 13, offset: 41627},
													val:        "\t",
													ignoreCase: false,
												},
											},
										},
									},
								},
								&notExpr{
									pos: position{line: 751, col: 44, offset: 31397},
									expr: &actionExpr{
										pos: position{line: 151, col: 20, offset: 5775},
										run: (*parser).callonFootnoteContent19,
										expr: &seqExpr{
											pos: position{line: 151, col: 20, offset: 5775},
											exprs: []interface{}{
												&litMatcher{
													pos:        position{line: 151, col: 20, offset: 5775},
													val:        "[[",
													ignoreCase: false,
												},
												&labeledExpr{
													pos:   position{line: 151, col: 25, offset: 5780},
													label: "id",
													expr: &actionExpr{
														pos: position{line: 1010, col: 7, offset: 41339},
														run: (*parser).callonFootnoteContent23,
														expr: &oneOrMoreExpr{
															pos: position{line: 1010, col: 7, offset: 41339},
															expr: &seqExpr{
																pos: position{line: 1010, col: 8, offset: 41340},
																exprs: []interface{}{
																	&notExpr{
																		pos: position{line: 1010, col: 8, offset: 41340},
																		expr: &choiceExpr{
																			pos: position{line: 1028, col: 12, offset: 41683},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1028, col: 12, offset: 41683},
																					val:        "\r\n",
																					ignoreCase: false,
																				},
																				&charClassMatcher{
																					pos:        position{line: 1028, col: 21, offset: 41692},
																					val:        "[\\r\\n]",
																					chars:      []rune{'\r', '\n'},
																					ignoreCase: false,
																					inverted:   false,
																				},
																			},
																		},
																	},
																	&notExpr{
																		pos: position{line: 1010, col: 17, offset: 41349},
																		expr: &choiceExpr{
																			pos: position{line: 1024, col: 7, offset: 41621},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1024, col: 7, offset: 41621},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1024, col: 13, offset: 41627},
																					run: (*parser).callonFootnoteContent33,
																					expr: &litMatcher{
																						pos:        position{line: 1024, col: 13, offset: 41627},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&notExpr{
																		pos: position{line: 1010, col: 21, offset: 41353},
																		expr: &litMatcher{
																			pos:        position{line: 1010, col: 22, offset: 41354},
																			val:        "[",
																			ignoreCase: false,
																		},
																	},
																	&notExpr{
																		pos: position{line: 1010, col: 26, offset: 41358},
																		expr: &litMatcher{
																			pos:        position{line: 1010, col: 27, offset: 41359},
																			val:        "]",
																			ignoreCase: false,
																		},
																	},
																	&notExpr{
																		pos: position{line: 1010, col: 31, offset: 41363},
																		expr: &litMatcher{
																			pos:        position{line: 1010, col: 32, offset: 41364},
																			val:        "<<",
																			ignoreCase: false,
																		},
																	},
																	&notExpr{
																		pos: position{line: 1010, col: 37, offset: 41369},
																		expr: &litMatcher{
																			pos:        position{line: 1010, col: 38, offset: 41370},
																			val:        ">>",
																			ignoreCase: false,
																		},
																	},
																	&notExpr{
																		pos: position{line: 1010, col: 43, offset: 41375},
																		expr: &litMatcher{
																			pos:        position{line: 1010, col: 44, offset: 41376},
																			val:        ",",
																			ignoreCase: false,
																		},
																	},
																	&anyMatcher{
																		line: 1010, col: 48, offset: 41380,
																	},
																},
															},
														},
													},
												},
												&litMatcher{
													pos:        position{line: 151, col: 33, offset: 5788},
													val:        "]]",
													ignoreCase: false,
												},
											},
										},
									},
								},
								&ruleRefExpr{
									pos:  position{line: 751, col: 61, offset: 31414},
									name: "InlineElement",
								},
								&zeroOrMoreExpr{
									pos: position{line: 751, col: 75, offset: 31428},
									expr: &choiceExpr{
										pos: position{line: 1024, col: 7, offset: 41621},
										alternatives: []interface{}{
											&litMatcher{
												pos:        position{line: 1024, col: 7, offset: 41621},
												val:        " ",
												ignoreCase: false,
											},
											&actionExpr{
												pos: position{line: 1024, col: 13, offset: 41627},
												run: (*parser).callonFootnoteContent51,
												expr: &litMatcher{
													pos:        position{line: 1024, col: 13, offset: 41627},
													val:        "\t",
													ignoreCase: false,
												},
											},
										},
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "DelimitedBlock",
			pos:  position{line: 759, col: 1, offset: 31743},
			expr: &choiceExpr{
				pos: position{line: 759, col: 19, offset: 31761},
				alternatives: []interface{}{
					&ruleRefExpr{
						pos:  position{line: 759, col: 19, offset: 31761},
						name: "FencedBlock",
					},
					&actionExpr{
						pos: position{line: 785, col: 17, offset: 32940},
						run: (*parser).callonDelimitedBlock3,
						expr: &seqExpr{
							pos: position{line: 785, col: 17, offset: 32940},
							exprs: []interface{}{
								&labeledExpr{
									pos:   position{line: 785, col: 17, offset: 32940},
									label: "attributes",
									expr: &zeroOrMoreExpr{
										pos: position{line: 785, col: 28, offset: 32951},
										expr: &actionExpr{
											pos: position{line: 136, col: 21, offset: 5188},
											run: (*parser).callonDelimitedBlock7,
											expr: &seqExpr{
												pos: position{line: 136, col: 21, offset: 5188},
												exprs: []interface{}{
													&labeledExpr{
														pos:   position{line: 136, col: 21, offset: 5188},
														label: "attr",
														expr: &choiceExpr{
															pos: position{line: 136, col: 27, offset: 5194},
															alternatives: []interface{}{
																&actionExpr{
																	pos: position{line: 145, col: 14, offset: 5645},
																	run: (*parser).callonDelimitedBlock11,
																	expr: &labeledExpr{
																		pos:   position{line: 145, col: 14, offset: 5645},
																		label: "id",
																		expr: &actionExpr{
																			pos: position{line: 151, col: 20, offset: 5775},
																			run: (*parser).callonDelimitedBlock13,
																			expr: &seqExpr{
																				pos: position{line: 151, col: 20, offset: 5775},
																				exprs: []interface{}{
																					&litMatcher{
																						pos:        position{line: 151, col: 20, offset: 5775},
																						val:        "[[",
																						ignoreCase: false,
																					},
																					&labeledExpr{
																						pos:   position{line: 151, col: 25, offset: 5780},
																						label: "id",
																						expr: &actionExpr{
																							pos: position{line: 1010, col: 7, offset: 41339},
																							run: (*parser).callonDelimitedBlock17,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 1010, col: 7, offset: 41339},
																								expr: &seqExpr{
																									pos: position{line: 1010, col: 8, offset: 41340},
																									exprs: []interface{}{
																										&notExpr{
																											pos: position{line: 1010, col: 8, offset: 41340},
																											expr: &choiceExpr{
																												pos: position{line: 1028, col: 12, offset: 41683},
																												alternatives: []interface{}{
																													&litMatcher{
																														pos:        position{line: 1028, col: 12, offset: 41683},
																														val:        "\r\n",
																														ignoreCase: false,
																													},
																													&charClassMatcher{
																														pos:        position{line: 1028, col: 21, offset: 41692},
																														val:        "[\\r\\n]",
																														chars:      []rune{'\r', '\n'},
																														ignoreCase: false,
																														inverted:   false,
																													},
																												},
																											},
																										},
																										&notExpr{
																											pos: position{line: 1010, col: 17, offset: 41349},
																											expr: &choiceExpr{
																												pos: position{line: 1024, col: 7, offset: 41621},
																												alternatives: []interface{}{
																													&litMatcher{
																														pos:        position{line: 1024, col: 7, offset: 41621},
																														val:        " ",
																														ignoreCase: false,
																													},
																													&actionExpr{
																														pos: position{line: 1024, col: 13, offset: 41627},
																														run: (*parser).callonDelimitedBlock27,
																														expr: &litMatcher{
																															pos:        position{line: 1024, col: 13, offset: 41627},
																															val:        "\t",
																															ignoreCase: false,
																														},
																													},
																												},
																											},
																										},
																										&notExpr{
																											pos: position{line: 1010, col: 21, offset: 41353},
																											expr: &litMatcher{
																												pos:        position{line: 1010, col: 22, offset: 41354},
																												val:        "[",
																												ignoreCase: false,
																											},
																										},
																										&notExpr{
																											pos: position{line: 1010, col: 26, offset: 41358},
																											expr: &litMatcher{
																												pos:        position{line: 1010, col: 27, offset: 41359},
																												val:        "]",
																												ignoreCase: false,
																											},
																										},
																										&notExpr{
																											pos: position{line: 1010, col: 31, offset: 41363},
																											expr: &litMatcher{
																												pos:        position{line: 1010, col: 32, offset: 41364},
																												val:        "<<",
																												ignoreCase: false,
																											},
																										},
																										&notExpr{
																											pos: position{line: 1010, col: 37, offset: 41369},
																											expr: &litMatcher{
																												pos:        position{line: 1010, col: 38, offset: 41370},
																												val:        ">>",
																												ignoreCase: false,
																											},
																										},
																										&notExpr{
																											pos: position{line: 1010, col: 43, offset: 41375},
																											expr: &litMatcher{
																												pos:        position{line: 1010, col: 44, offset: 41376},
																												val:        ",",
																												ignoreCase: false,
																											},
																										},
																										&anyMatcher{
																											line: 1010, col: 48, offset: 41380,
																										},
																									},
																								},
																							},
																						},
																					},
																					&litMatcher{
																						pos:        position{line: 151, col: 33, offset: 5788},
																						val:        "]]",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																},
																&actionExpr{
																	pos: position{line: 147, col: 5, offset: 5691},
																	run: (*parser).callonDelimitedBlock41,
																	expr: &seqExpr{
																		pos: position{line: 147, col: 5, offset: 5691},
																		exprs: []interface{}{
																			&litMatcher{
																				pos:        position{line: 147, col: 5, offset: 5691},
																				val:        "[#",
																				ignoreCase: false,
																			},
																			&labeledExpr{
																				pos:   position{line: 147, col: 10, offset: 5696},
																				label: "id",
																				expr: &actionExpr{
																					pos: position{line: 1010, col: 7, offset: 41339},
																					run: (*parser).callonDelimitedBlock45,
																					expr: &oneOrMoreExpr{
																						pos: position{line: 1010, col: 7, offset: 41339},
																						expr: &seqExpr{
																							pos: position{line: 1010, col: 8, offset: 41340},
																							exprs: []interface{}{
																								&notExpr{
																									pos: position{line: 1010, col: 8, offset: 41340},
																									expr: &choiceExpr{
																										pos: position{line: 1028, col: 12, offset: 41683},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1028, col: 12, offset: 41683},
																												val:        "\r\n",
																												ignoreCase: false,
																											},
																											&charClassMatcher{
																												pos:        position{line: 1028, col: 21, offset: 41692},
																												val:        "[\\r\\n]",
																												chars:      []rune{'\r', '\n'},
																												ignoreCase: false,
																												inverted:   false,
																											},
																										},
																									},
																								},
																								&notExpr{
																									pos: position{line: 1010, col: 17, offset: 41349},
																									expr: &choiceExpr{
																										pos: position{line: 1024, col: 7, offset: 41621},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1024, col: 7, offset: 41621},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 1024, col: 13, offset: 41627},
																												run: (*parser).callonDelimitedBlock55,
																												expr: &litMatcher{
																													pos:        position{line: 1024, col: 13, offset: 41627},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																								&notExpr{
																									pos: position{line: 1010, col: 21, offset: 41353},
																									expr: &litMatcher{
																										pos:        position{line: 1010, col: 22, offset: 41354},
																										val:        "[",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 1010, col: 26, offset: 41358},
																									expr: &litMatcher{
																										pos:        position{line: 1010, col: 27, offset: 41359},
																										val:        "]",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 1010, col: 31, offset: 41363},
																									expr: &litMatcher{
																										pos:        position{line: 1010, col: 32, offset: 41364},
																										val:        "<<",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 1010, col: 37, offset: 41369},
																									expr: &litMatcher{
																										pos:        position{line: 1010, col: 38, offset: 41370},
																										val:        ">>",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 1010, col: 43, offset: 41375},
																									expr: &litMatcher{
																										pos:        position{line: 1010, col: 44, offset: 41376},
																										val:        ",",
																										ignoreCase: false,
																									},
																								},
																								&anyMatcher{
																									line: 1010, col: 48, offset: 41380,
																								},
																							},
																						},
																					},
																				},
																			},
																			&litMatcher{
																				pos:        position{line: 147, col: 18, offset: 5704},
																				val:        "]",
																				ignoreCase: false,
																			},
																		},
																	},
																},
																&actionExpr{
																	pos: position{line: 157, col: 17, offset: 5997},
																	run: (*parser).callonDelimitedBlock69,
																	expr: &seqExpr{
																		pos: position{line: 157, col: 17, offset: 5997},
																		exprs: []interface{}{
																			&litMatcher{
																				pos:        position{line: 157, col: 17, offset: 5997},
																				val:        ".",
																				ignoreCase: false,
																			},
																			&notExpr{
																				pos: position{line: 157, col: 21, offset: 6001},
																				expr: &litMatcher{
																					pos:        position{line: 157, col: 22, offset: 6002},
																					val:        ".",
																					ignoreCase: false,
																				},
																			},
																			&notExpr{
																				pos: position{line: 157, col: 26, offset: 6006},
																				expr: &choiceExpr{
																					pos: position{line: 1024, col: 7, offset: 41621},
																					alternatives: []interface{}{
																						&litMatcher{
																							pos:        position{line: 1024, col: 7, offset: 41621},
																							val:        " ",
																							ignoreCase: false,
																						},
																						&actionExpr{
																							pos: position{line: 1024, col: 13, offset: 41627},
																							run: (*parser).callonDelimitedBlock77,
																							expr: &litMatcher{
																								pos:        position{line: 1024, col: 13, offset: 41627},
																								val:        "\t",
																								ignoreCase: false,
																							},
																						},
																					},
																				},
																			},
																			&labeledExpr{
																				pos:   position{line: 157, col: 30, offset: 6010},
																				label: "title",
																				expr: &actionExpr{
																					pos: position{line: 161, col: 24, offset: 6115},
																					run: (*parser).callonDelimitedBlock80,
																					expr: &oneOrMoreExpr{
																						pos: position{line: 161, col: 24, offset: 6115},
																						expr: &seqExpr{
																							pos: position{line: 161, col: 25, offset: 6116},
																							exprs: []interface{}{
																								&notExpr{
																									pos: position{line: 161, col: 25, offset: 6116},
																									expr: &choiceExpr{
																										pos: position{line: 1028, col: 12, offset: 41683},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1028, col: 12, offset: 41683},
																												val:        "\r\n",
																												ignoreCase: false,
																											},
																											&charClassMatcher{
																												pos:        position{line: 1028, col: 21, offset: 41692},
																												val:        "[\\r\\n]",
																												chars:      []rune{'\r', '\n'},
																												ignoreCase: false,
																												inverted:   false,
																											},
																										},
																									},
																								},
																								&anyMatcher{
																									line: 161, col: 34, offset: 6125,
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																},
																&actionExpr{
																	pos: position{line: 167, col: 16, offset: 6274},
																	run: (*parser).callonDelimitedBlock88,
																	expr: &seqExpr{
																		pos: position{line: 167, col: 16, offset: 6274},
																		exprs: []interface{}{
																			&litMatcher{
																				pos:        position{line: 167, col: 16, offset: 6274},
																				val:        "[.",
																				ignoreCase: false,
																			},
																			&notExpr{
																				pos: position{line: 167, col: 21, offset: 6279},
																				expr: &choiceExpr{
																					pos: position{line: 1024, col: 7, offset: 41621},
																					alternatives: []interface{}{
																						&litMatcher{
																							pos:        position{line: 1024, col: 7, offset: 41621},
																							val:        " ",
																							ignoreCase: false,
																						},
																						&actionExpr{
																							pos: position{line: 1024, col: 13, offset: 41627},
																							run: (*parser).callonDelimitedBlock94,
																							expr: &litMatcher{
																								pos:        position{line: 1024, col: 13, offset: 41627},
																								val:        "\t",
																								ignoreCase: false,
																							},
																						},
																					},
																				},
																			},
																			&labeledExpr{
																				pos:   position{line: 167, col: 25, offset: 6283},
																				label: "role",
																				expr: &actionExpr{
																					pos: position{line: 171, col: 23, offset: 6387},
																					run: (*parser).callonDelimitedBlock97,
																					expr: &oneOrMoreExpr{
																						pos: position{line: 171, col: 23, offset: 6387},
																						expr: &seqExpr{
																							pos: position{line: 171, col: 24, offset: 6388},
																							exprs: []interface{}{
																								&notExpr{
																									pos: position{line: 171, col: 24, offset: 6388},
																									expr: &choiceExpr{
																										pos: position{line: 1028, col: 12, offset: 41683},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1028, col: 12, offset: 41683},
																												val:        "\r\n",
																												ignoreCase: false,
																											},
																											&charClassMatcher{
																												pos:        position{line: 1028, col: 21, offset: 41692},
																												val:        "[\\r\\n]",
																												chars:      []rune{'\r', '\n'},
																												ignoreCase: false,
																												inverted:   false,
																											},
																										},
																									},
																								},
																								&notExpr{
																									pos: position{line: 171, col: 33, offset: 6397},
																									expr: &litMatcher{
																										pos:        position{line: 171, col: 34, offset: 6398},
																										val:        "]",
																										ignoreCase: false,
																									},
																								},
																								&anyMatcher{
																									line: 171, col: 38, offset: 6402,
																								},
																							},
																						},
																					},
																				},
																			},
																			&litMatcher{
																				pos:        position{line: 167, col: 51, offset: 6309},
																				val:        "]",
																				ignoreCase: false,
																			},
																		},
																	},
																},
																&actionExpr{
																	pos: position{line: 176, col: 30, offset: 6551},
																	run: (*parser).callonDelimitedBlock108,
																	expr: &seqExpr{
																		pos: position{line: 176, col: 30, offset: 6551},
																		exprs: []interface{}{
																			&litMatcher{
																				pos:        position{line: 176, col: 30, offset: 6551},
																				val:        "[",
																				ignoreCase: false,
																			},
																			&labeledExpr{
																				pos:   position{line: 176, col: 34, offset: 6555},
																				label: "k",
																				expr: &choiceExpr{
																					pos: position{line: 494, col: 19, offset: 19245},
																					alternatives: []interface{}{
																						&actionExpr{
																							pos: position{line: 494, col: 19, offset: 19245},
																							run: (*parser).callonDelimitedBlock113,
																							expr: &litMatcher{
																								pos:        position{line: 494, col: 19, offset: 19245},
																								val:        "TIP",
																								ignoreCase: false,
																							},
																						},
																						&actionExpr{
																							pos: position{line: 496, col: 5, offset: 19283},
																							run: (*parser).callonDelimitedBlock115,
																							expr: &litMatcher{
																								pos:        position{line: 496, col: 5, offset: 19283},
																								val:        "NOTE",
																								ignoreCase: false,
																							},
																						},
																						&actionExpr{
																							pos: position{line: 498, col: 5, offset: 19323},
																							run: (*parser).callonDelimitedBlock117,
																							expr: &litMatcher{
																								pos:        position{line: 498, col: 5, offset: 19323},
																								val:        "IMPORTANT",
																								ignoreCase: false,
																							},
																						},
																						&actionExpr{
																							pos: position{line: 500, col: 5, offset: 19373},
																							run: (*parser).callonDelimitedBlock119,
																							expr: &litMatcher{
																								pos:        position{line: 500, col: 5, offset: 19373},
																								val:        "WARNING",
																								ignoreCase: false,
																							},
																						},
																						&actionExpr{
																							pos: position{line: 502, col: 5, offset: 19419},
																							run: (*parser).callonDelimitedBlock121,
																							expr: &litMatcher{
																								pos:        position{line: 502, col: 5, offset: 19419},
																								val:        "CAUTION",
																								ignoreCase: false,
																							},
																						},
																					},
																				},
																			},
																			&litMatcher{
																				pos:        position{line: 176, col: 53, offset: 6574},
																				val:        "]",
																				ignoreCase: false,
																			},
																		},
																	},
																},
																&actionExpr{
																	pos: position{line: 199, col: 21, offset: 7312},
																	run: (*parser).callonDelimitedBlock124,
																	expr: &litMatcher{
																		pos:        position{line: 199, col: 21, offset: 7312},
																		val:        "[horizontal]",
																		ignoreCase: false,
																	},
																},
																&actionExpr{
																	pos: position{line: 181, col: 19, offset: 6735},
																	run: (*parser).callonDelimitedBlock126,
																	expr: &seqExpr{
																		pos: position{line: 181, col: 19, offset: 6735},
																		exprs: []interface{}{
																			&litMatcher{
																				pos:        position{line: 181, col: 19, offset: 6735},
																				val:        "[",
																				ignoreCase: false,
																			},
																			&notExpr{
																				pos: position{line: 181, col: 23, offset: 6739},
																				expr: &choiceExpr{
																					pos: position{line: 1024, col: 7, offset: 41621},
																					alternatives: []interface{}{
																						&litMatcher{
																							pos:        position{line: 1024, col: 7, offset: 41621},
																							val:        " ",
																							ignoreCase: false,
																						},
																						&actionExpr{
																							pos: position{line: 1024, col: 13, offset: 41627},
																							run: (*parser).callonDelimitedBlock132,
																							expr: &litMatcher{
																								pos:        position{line: 1024, col: 13, offset: 41627},
																								val:        "\t",
																								ignoreCase: false,
																							},
																						},
																					},
																				},
																			},
																			&labeledExpr{
																				pos:   position{line: 181, col: 27, offset: 6743},
																				label: "attributes",
																				expr: &zeroOrMoreExpr{
																					pos: position{line: 181, col: 38, offset: 6754},
																					expr: &choiceExpr{
																						pos: position{line: 185, col: 21, offset: 6867},
																						alternatives: []interface{}{
																							&actionExpr{
																								pos: position{line: 185, col: 21, offset: 6867},
																								run: (*parser).callonDelimitedBlock137,
																								expr: &seqExpr{
																									pos: position{line: 185, col: 21, offset: 6867},
																									exprs: []interface{}{
																										&labeledExpr{
																											pos:   position{line: 185, col: 21, offset: 6867},
																											label: "key",
																											expr: &actionExpr{
																												pos: position{line: 191, col: 17, offset: 7127},
																												run: (*parser).callonDelimitedBlock140,
																												expr: &seqExpr{
																													pos: position{line: 191, col: 17, offset: 7127},
																													exprs: []interface{}{
																														&notExpr{
																															pos: position{line: 191, col: 17, offset: 7127},
																															expr: &actionExpr{
																																pos: position{line: 231, col: 14, offset: 8674},
																																run: (*parser).callonDelimitedBlock143,
																																expr: &litMatcher{
																																	pos:        position{line: 231, col: 14, offset: 8674},
																																	val:        "verse",
																																	ignoreCase: false,
																																},
																															},
																														},
																														&notExpr{
																															pos: position{line: 191, col: 28, offset: 7138},
																															expr: &actionExpr{
																																pos: position{line: 975, col: 16, offset: 40537},
																																run: (*parser).callonDelimitedBlock146,
																																expr: &litMatcher{
																																	pos:        position{line: 975, col: 16, offset: 40537},
																																	val:        "literal",
																																	ignoreCase: false,
																																},
																															},
																														},
																														&labeledExpr{
																															pos:   position{line: 191, col: 41, offset: 7151},
																															label: "key",
																															expr: &oneOrMoreExpr{
																																pos: position{line: 191, col: 45, offset: 7155},
																																expr: &seqExpr{
																																	pos: position{line: 191, col: 46, offset: 7156},
																																	exprs: []interface{}{
																																		&notExpr{
																																			pos: position{line: 191, col: 46, offset: 7156},
																																			expr: &litMatcher{
																																				pos:        position{line: 191, col: 47, offset: 7157},
																																				val:        "=",
																																				ignoreCase: false,
																																			},
																																		},
																																		&notExpr{
																																			pos: position{line: 191, col: 51, offset: 7161},
																																			expr: &litMatcher{
																																				pos:        position{line: 191, col: 52, offset: 7162},
																																				val:        ",",
																																				ignoreCase: false,
																																			},
																																		},
																																		&notExpr{
																																			pos: position{line: 191, col: 56, offset: 7166},
																																			expr: &litMatcher{
																																				pos:        position{line: 191, col: 57, offset: 7167},
																																				val:        "]",
																																				ignoreCase: false,
																																			},
																																		},
																																		&anyMatcher{
																																			line: 191, col: 61, offset: 7171,
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																										&litMatcher{
																											pos:        position{line: 185, col: 40, offset: 6886},
																											val:        "=",
																											ignoreCase: false,
																										},
																										&labeledExpr{
																											pos:   position{line: 185, col: 44, offset: 6890},
																											label: "value",
																											expr: &actionExpr{
																												pos: position{line: 195, col: 19, offset: 7230},
																												run: (*parser).callonDelimitedBlock160,
																												expr: &labeledExpr{
																													pos:   position{line: 195, col: 19, offset: 7230},
																													label: "value",
																													expr: &zeroOrMoreExpr{
																														pos: position{line: 195, col: 25, offset: 7236},
																														expr: &seqExpr{
																															pos: position{line: 195, col: 26, offset: 7237},
																															exprs: []interface{}{
																																&notExpr{
																																	pos: position{line: 195, col: 26, offset: 7237},
																																	expr: &litMatcher{
																																		pos:        position{line: 195, col: 27, offset: 7238},
																																		val:        "=",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 195, col: 31, offset: 7242},
																																	expr: &litMatcher{
																																		pos:        position{line: 195, col: 32, offset: 7243},
																																		val:        ",",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 195, col: 36, offset: 7247},
																																	expr: &litMatcher{
																																		pos:        position{line: 195, col: 37, offset: 7248},
																																		val:        "]",
																																		ignoreCase: false,
																																	},
																																},
																																&anyMatcher{
																																	line: 195, col: 41, offset: 7252,
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																										&zeroOrOneExpr{
																											pos: position{line: 185, col: 67, offset: 6913},
																											expr: &litMatcher{
																												pos:        position{line: 185, col: 67, offset: 6913},
																												val:        ",",
																												ignoreCase: false,
																											},
																										},
																										&zeroOrMoreExpr{
																											pos: position{line: 185, col: 72, offset: 6918},
																											expr: &choiceExpr{
																												pos: position{line: 1024, col: 7, offset: 41621},
																												alternatives: []interface{}{
																													&litMatcher{
																														pos:        position{line: 1024, col: 7, offset: 41621},
																														val:        " ",
																														ignoreCase: false,
																													},
																													&actionExpr{
																														pos: position{line: 1024, col: 13, offset: 41627},
																														run: (*parser).callonDelimitedBlock176,
																														expr: &litMatcher{
																															pos:        position{line: 1024, col: 13, offset: 41627},
																															val:        "\t",
																															ignoreCase: false,
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&actionExpr{
																								pos: position{line: 187, col: 5, offset: 7002},
																								run: (*parser).callonDelimitedBlock178,
																								expr: &seqExpr{
																									pos: position{line: 187, col: 5, offset: 7002},
																									exprs: []interface{}{
																										&labeledExpr{
																											pos:   position{line: 187, col: 5, offset: 7002},
																											label: "key",
																											expr: &actionExpr{
																												pos: position{line: 191, col: 17, offset: 7127},
																												run: (*parser).callonDelimitedBlock181,
																												expr: &seqExpr{
																													pos: position{line: 191, col: 17, offset: 7127},
																													exprs: []interface{}{
																														&notExpr{
																															pos: position{line: 191, col: 17, offset: 7127},
																															expr: &actionExpr{
																																pos: position{line: 231, col: 14, offset: 8674},
																																run: (*parser).callonDelimitedBlock184,
																																expr: &litMatcher{
																																	pos:        position{line: 231, col: 14, offset: 8674},
																																	val:        "verse",
																																	ignoreCase: false,
																																},
																															},
																														},
																														&notExpr{
																															pos: position{line: 191, col: 28, offset: 7138},
																															expr: &actionExpr{
																																pos: position{line: 975, col: 16, offset: 40537},
																																run: (*parser).callonDelimitedBlock187,
																																expr: &litMatcher{
																																	pos:        position{line: 975, col: 16, offset: 40537},
																																	val:        "literal",
																																	ignoreCase: false,
																																},
																															},
																														},
																														&labeledExpr{
																															pos:   position{line: 191, col: 41, offset: 7151},
																															label: "key",
																															expr: &oneOrMoreExpr{
																																pos: position{line: 191, col: 45, offset: 7155},
																																expr: &seqExpr{
																																	pos: position{line: 191, col: 46, offset: 7156},
																																	exprs: []interface{}{
																																		&notExpr{
																																			pos: position{line: 191, col: 46, offset: 7156},
																																			expr: &litMatcher{
																																				pos:        position{line: 191, col: 47, offset: 7157},
																																				val:        "=",
																																				ignoreCase: false,
																																			},
																																		},
																																		&notExpr{
																																			pos: position{line: 191, col: 51, offset: 7161},
																																			expr: &litMatcher{
																																				pos:        position{line: 191, col: 52, offset: 7162},
																																				val:        ",",
																																				ignoreCase: false,
																																			},
																																		},
																																		&notExpr{
																																			pos: position{line: 191, col: 56, offset: 7166},
																																			expr: &litMatcher{
																																				pos:        position{line: 191, col: 57, offset: 7167},
																																				val:        "]",
																																				ignoreCase: false,
																																			},
																																		},
																																		&anyMatcher{
																																			line: 191, col: 61, offset: 7171,
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																										&zeroOrOneExpr{
																											pos: position{line: 187, col: 24, offset: 7021},
																											expr: &litMatcher{
																												pos:        position{line: 187, col: 24, offset: 7021},
																												val:        ",",
																												ignoreCase: false,
																											},
																										},
																										&zeroOrMoreExpr{
																											pos: position{line: 187, col: 29, offset: 7026},
																											expr: &choiceExpr{
																												pos: position{line: 1024, col: 7, offset: 41621},
																												alternatives: []interface{}{
																													&litMatcher{
																														pos:        position{line: 1024, col: 7, offset: 41621},
																														val:        " ",
																														ignoreCase: false,
																													},
																													&actionExpr{
																														pos: position{line: 1024, col: 13, offset: 41627},
																														run: (*parser).callonDelimitedBlock204,
																														expr: &litMatcher{
																															pos:        position{line: 1024, col: 13, offset: 41627},
																															val:        "\t",
																															ignoreCase: false,
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																			&litMatcher{
																				pos:        position{line: 181, col: 59, offset: 6775},
																				val:        "]",
																				ignoreCase: false,
																			},
																		},
																	},
																},
															},
														},
													},
													&zeroOrMoreExpr{
														pos: position{line: 136, col: 131, offset: 5298},
														expr: &choiceExpr{
															pos: position{line: 1024, col: 7, offset: 41621},
															alternatives: []interface{}{
																&litMatcher{
																	pos:        position{line: 1024, col: 7, offset: 41621},
																	val:        " ",
																	ignoreCase: false,
																},
																&actionExpr{
																	pos: position{line: 1024, col: 13, offset: 41627},
																	run: (*parser).callonDelimitedBlock210,
																	expr: &litMatcher{
																		pos:        position{line: 1024, col: 13, offset: 41627},
																		val:        "\t",
																		ignoreCase: false,
																	},
																},
															},
														},
													},
													&choiceExpr{
														pos: position{line: 1032, col: 8, offset: 41723},
														alternatives: []interface{}{
															&litMatcher{
																pos:        position{line: 1028, col: 12, offset: 41683},
																val:        "\r\n",
																ignoreCase: false,
															},
															&charClassMatcher{
																pos:        position{line: 1028, col: 21, offset: 41692},
																val:        "[\\r\\n]",
																chars:      []rune{'\r', '\n'},
																ignoreCase: false,
																inverted:   false,
															},
															&notExpr{
																pos: position{line: 1030, col: 8, offset: 41712},
																expr: &anyMatcher{
																	line: 1030, col: 9, offset: 41713,
																},
															},
														},
													},
												},
											},
										},
									},
								},
								&litMatcher{
									pos:        position{line: 782, col: 26, offset: 32881},
									val:        "----",
									ignoreCase: false,
								},
								&zeroOrMoreExpr{
									pos: position{line: 785, col: 70, offset: 32993},
									expr: &choiceExpr{
										pos: position{line: 1024, col: 7, offset: 41621},
										alternatives: []interface{}{
											&litMatcher{
												pos:        position{line: 1024, col: 7, offset: 41621},
												val:        " ",
												ignoreCase: false,
											},
											&actionExpr{
												pos: position{line: 1024, col: 13, offset: 41627},
												run: (*parser).callonDelimitedBlock221,
												expr: &litMatcher{
													pos:        position{line: 1024, col: 13, offset: 41627},
													val:        "\t",
													ignoreCase: false,
												},
											},
										},
									},
								},
								&choiceExpr{
									pos: position{line: 1028, col: 12, offset: 41683},
									alternatives: []interface{}{
										&litMatcher{
											pos:        position{line: 1028, col: 12, offset: 41683},
											val:        "\r\n",
											ignoreCase: false,
										},
										&charClassMatcher{
											pos:        position{line: 1028, col: 21, offset: 41692},
											val:        "[\\r\\n]",
											chars:      []rune{'\r', '\n'},
											ignoreCase: false,
											inverted:   false,
										},
									},
								},
								&labeledExpr{
									pos:   position{line: 785, col: 82, offset: 33005},
									label: "content",
									expr: &zeroOrMoreExpr{
										pos: position{line: 785, col: 90, offset: 33013},
										expr: &actionExpr{
											pos: position{line: 789, col: 24, offset: 33219},
											run: (*parser).callonDelimitedBlock228,
											expr: &labeledExpr{
												pos:   position{line: 789, col: 24, offset: 33219},
												label: "lines",
												expr: &oneOrMoreExpr{
													pos: position{line: 789, col: 30, offset: 33225},
													expr: &actionExpr{
														pos: position{line: 793, col: 21, offset: 33328},
														run: (*parser).callonDelimitedBlock231,
														expr: &seqExpr{
															pos: position{line: 793, col: 21, offset: 33328},
															exprs: []interface{}{
																&notExpr{
																	pos: position{line: 793, col: 21, offset: 33328},
																	expr: &litMatcher{
																		pos:        position{line: 782, col: 26, offset: 32881},
																		val:        "----",
																		ignoreCase: false,
																	},
																},
																&notExpr{
																	pos: position{line: 793, col: 44, offset: 33351},
																	expr: &notExpr{
																		pos: position{line: 1030, col: 8, offset: 41712},
																		expr: &anyMatcher{
																			line: 1030, col: 9, offset: 41713,
																		},
																	},
																},
																&labeledExpr{
																	pos:   position{line: 793, col: 49, offset: 33356},
																	label: "line",
																	expr: &actionExpr{
																		pos: position{line: 797, col: 28, offset: 33467},
																		run: (*parser).callonDelimitedBlock239,
																		expr: &zeroOrMoreExpr{
																			pos: position{line: 797, col: 28, offset: 33467},
																			expr: &seqExpr{
																				pos: position{line: 797, col: 29, offset: 33468},
																				exprs: []interface{}{
																					&notExpr{
																						pos: position{line: 797, col: 29, offset: 33468},
																						expr: &litMatcher{
																							pos:        position{line: 782, col: 26, offset: 32881},
																							val:        "----",
																							ignoreCase: false,
																						},
																					},
																					&notExpr{
																						pos: position{line: 797, col: 52, offset: 33491},
																						expr: &choiceExpr{
																							pos: position{line: 1032, col: 8, offset: 41723},
																							alternatives: []interface{}{
																								&litMatcher{
																									pos:        position{line: 1028, col: 12, offset: 41683},
																									val:        "\r\n",
																									ignoreCase: false,
																								},
																								&charClassMatcher{
																									pos:        position{line: 1028, col: 21, offset: 41692},
																									val:        "[\\r\\n]",
																									chars:      []rune{'\r', '\n'},
																									ignoreCase: false,
																									inverted:   false,
																								},
																								&notExpr{
																									pos: position{line: 1030, col: 8, offset: 41712},
																									expr: &anyMatcher{
																										line: 1030, col: 9, offset: 41713,
																									},
																								},
																							},
																						},
																					},
																					&anyMatcher{
																						line: 797, col: 57, offset: 33496,
																					},
																				},
																			},
																		},
																	},
																},
																&choiceExpr{
																	pos: position{line: 1032, col: 8, offset: 41723},
																	alternatives: []interface{}{
																		&litMatcher{
																			pos:        position{line: 1028, col: 12, offset: 41683},
																			val:        "\r\n",
																			ignoreCase: false,
																		},
																		&charClassMatcher{
																			pos:        position{line: 1028, col: 21, offset: 41692},
																			val:        "[\\r\\n]",
																			chars:      []rune{'\r', '\n'},
																			ignoreCase: false,
																			inverted:   false,
																		},
																		&notExpr{
																			pos: position{line: 1030, col: 8, offset: 41712},
																			expr: &anyMatcher{
																				line: 1030, col: 9, offset: 41713,
																			},
																		},
																	},
																},
															},
														},
													},
												},
											},
										},
									},
								},
								&choiceExpr{
									pos: position{line: 785, col: 114, offset: 33037},
									alternatives: []interface{}{
										&seqExpr{
											pos: position{line: 785, col: 115, offset: 33038},
											exprs: []interface{}{
												&litMatcher{
													pos:        position{line: 782, col: 26, offset: 32881},
													val:        "----",
													ignoreCase: false,
												},
												&zeroOrMoreExpr{
													pos: position{line: 785, col: 137, offset: 33060},
													expr: &choiceExpr{
														pos: position{line: 1024, col: 7, offset: 41621},
														alternatives: []interface{}{
															&litMatcher{
																pos:        position{line: 1024, col: 7, offset: 41621},
																val:        " ",
																ignoreCase: false,
															},
															&actionExpr{
																pos: position{line: 1024, col: 13, offset: 41627},
																run: (*parser).callonDelimitedBlock262,
																expr: &litMatcher{
																	pos:        position{line: 1024, col: 13, offset: 41627},
																	val:        "\t",
																	ignoreCase: false,
																},
															},
														},
													},
												},
												&choiceExpr{
													pos: position{line: 1032, col: 8, offset: 41723},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1028, col: 12, offset: 41683},
															val:        "\r\n",
															ignoreCase: false,
														},
														&charClassMatcher{
															pos:        position{line: 1028, col: 21, offset: 41692},
															val:        "[\\r\\n]",
															chars:      []rune{'\r', '\n'},
															ignoreCase: false,
															inverted:   false,
														},
														&notExpr{
															pos: position{line: 1030, col: 8, offset: 41712},
															expr: &anyMatcher{
																line: 1030, col: 9, offset: 41713,
															},
														},
													},
												},
											},
										},
										&notExpr{
											pos: position{line: 1030, col: 8, offset: 41712},
											expr: &anyMatcher{
												line: 1030, col: 9, offset: 41713,
											},
										},
									},
								},
							},
						},
					},
					&ruleRefExpr{
						pos:  position{line: 759, col: 48, offset: 31790},
						name: "ExampleBlock",
					},
					&actionExpr{
						pos: position{line: 927, col: 17, offset: 38403},
						run: (*parser).callonDelimitedBlock272,
						expr: &seqExpr{
							pos: position{line: 927, col: 17, offset: 38403},
							exprs: []interface{}{
								&labeledExpr{
									pos:   position{line: 927, col: 17, offset: 38403},
									label: "attributes",
									expr: &zeroOrMoreExpr{
										pos: position{line: 927, col: 28, offset: 38414},
										expr: &actionExpr{
											pos: position{line: 136, col: 21, offset: 5188},
											run: (*parser).callonDelimitedBlock276,
											expr: &seqExpr{
												pos: position{line: 136, col: 21, offset: 5188},
												exprs: []interface{}{
													&labeledExpr{
														pos:   position{line: 136, col: 21, offset: 5188},
														label: "attr",
														expr: &choiceExpr{
															pos: position{line: 136, col: 27, offset: 5194},
															alternatives: []interface{}{
																&actionExpr{
																	pos: position{line: 145, col: 14, offset: 5645},
																	run: (*parser).callonDelimitedBlock280,
																	expr: &labeledExpr{
																		pos:   position{line: 145, col: 14, offset: 5645},
																		label: "id",
																		expr: &actionExpr{
																			pos: position{line: 151, col: 20, offset: 5775},
																			run: (*parser).callonDelimitedBlock282,
																			expr: &seqExpr{
																				pos: position{line: 151, col: 20, offset: 5775},
																				exprs: []interface{}{
																					&litMatcher{
																						pos:        position{line: 151, col: 20, offset: 5775},
																						val:        "[[",
																						ignoreCase: false,
																					},
																					&labeledExpr{
																						pos:   position{line: 151, col: 25, offset: 5780},
																						label: "id",
																						expr: &actionExpr{
																							pos: position{line: 1010, col: 7, offset: 41339},
																							run: (*parser).callonDelimitedBlock286,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 1010, col: 7, offset: 41339},
																								expr: &seqExpr{
																									pos: position{line: 1010, col: 8, offset: 41340},
																									exprs: []interface{}{
																										&notExpr{
																											pos: position{line: 1010, col: 8, offset: 41340},
																											expr: &choiceExpr{
																												pos: position{line: 1028, col: 12, offset: 41683},
																												alternatives: []interface{}{
																													&litMatcher{
																														pos:        position{line: 1028, col: 12, offset: 41683},
																														val:        "\r\n",
																														ignoreCase: false,
																													},
																													&charClassMatcher{
																														pos:        position{line: 1028, col: 21, offset: 41692},
																														val:        "[\\r\\n]",
																														chars:      []rune{'\r', '\n'},
																														ignoreCase: false,
																														inverted:   false,
																													},
																												},
																											},
																										},
																										&notExpr{
																											pos: position{line: 1010, col: 17, offset: 41349},
																											expr: &choiceExpr{
																												pos: position{line: 1024, col: 7, offset: 41621},
																												alternatives: []interface{}{
																													&litMatcher{
																														pos:        position{line: 1024, col: 7, offset: 41621},
																														val:        " ",
																														ignoreCase: false,
																													},
																													&actionExpr{
																														pos: position{line: 1024, col: 13, offset: 41627},
																														run: (*parser).callonDelimitedBlock296,
																														expr: &litMatcher{
																															pos:        position{line: 1024, col: 13, offset: 41627},
																															val:        "\t",
																															ignoreCase: false,
																														},
																													},
																												},
																											},
																										},
																										&notExpr{
																											pos: position{line: 1010, col: 21, offset: 41353},
																											expr: &litMatcher{
																												pos:        position{line: 1010, col: 22, offset: 41354},
																												val:        "[",
																												ignoreCase: false,
																											},
																										},
																										&notExpr{
																											pos: position{line: 1010, col: 26, offset: 41358},
																											expr: &litMatcher{
																												pos:        position{line: 1010, col: 27, offset: 41359},
																												val:        "]",
																												ignoreCase: false,
																											},
																										},
																										&notExpr{
																											pos: position{line: 1010, col: 31, offset: 41363},
																											expr: &litMatcher{
																												pos:        position{line: 1010, col: 32, offset: 41364},
																												val:        "<<",
																												ignoreCase: false,
																											},
																										},
																										&notExpr{
																											pos: position{line: 1010, col: 37, offset: 41369},
																											expr: &litMatcher{
																												pos:        position{line: 1010, col: 38, offset: 41370},
																												val:        ">>",
																												ignoreCase: false,
																											},
																										},
																										&notExpr{
																											pos: position{line: 1010, col: 43, offset: 41375},
																											expr: &litMatcher{
																												pos:        position{line: 1010, col: 44, offset: 41376},
																												val:        ",",
																												ignoreCase: false,
																											},
																										},
																										&anyMatcher{
																											line: 1010, col: 48, offset: 41380,
																										},
																									},
																								},
																							},
																						},
																					},
																					&litMatcher{
																						pos:        position{line: 151, col: 33, offset: 5788},
																						val:        "]]",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																},
																&actionExpr{
																	pos: position{line: 147, col: 5, offset: 5691},
																	run: (*parser).callonDelimitedBlock310,
																	expr: &seqExpr{
																		pos: position{line: 147, col: 5, offset: 5691},
																		exprs: []interface{}{
																			&litMatcher{
																				pos:        position{line: 147, col: 5, offset: 5691},
																				val:        "[#",
																				ignoreCase: false,
																			},
																			&labeledExpr{
																				pos:   position{line: 147, col: 10, offset: 5696},
																				label: "id",
																				expr: &actionExpr{
																					pos: position{line: 1010, col: 7, offset: 41339},
																					run: (*parser).callonDelimitedBlock314,
																					expr: &oneOrMoreExpr{
																						pos: position{line: 1010, col: 7, offset: 41339},
																						expr: &seqExpr{
																							pos: position{line: 1010, col: 8, offset: 41340},
																							exprs: []interface{}{
																								&notExpr{
																									pos: position{line: 1010, col: 8, offset: 41340},
																									expr: &choiceExpr{
																										pos: position{line: 1028, col: 12, offset: 41683},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1028, col: 12, offset: 41683},
																												val:        "\r\n",
																												ignoreCase: false,
																											},
																											&charClassMatcher{
																												pos:        position{line: 1028, col: 21, offset: 41692},
																												val:        "[\\r\\n]",
																												chars:      []rune{'\r', '\n'},
																												ignoreCase: false,
																												inverted:   false,
																											},
																										},
																									},
																								},
																								&notExpr{
																									pos: position{line: 1010, col: 17, offset: 41349},
																									expr: &choiceExpr{
																										pos: position{line: 1024, col: 7, offset: 41621},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1024, col: 7, offset: 41621},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 1024, col: 13, offset: 41627},
																												run: (*parser).callonDelimitedBlock324,
																												expr: &litMatcher{
																													pos:        position{line: 1024, col: 13, offset: 41627},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																								&notExpr{
																									pos: position{line: 1010, col: 21, offset: 41353},
																									expr: &litMatcher{
																										pos:        position{line: 1010, col: 22, offset: 41354},
																										val:        "[",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 1010, col: 26, offset: 41358},
																									expr: &litMatcher{
																										pos:        position{line: 1010, col: 27, offset: 41359},
																										val:        "]",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 1010, col: 31, offset: 41363},
																									expr: &litMatcher{
																										pos:        position{line: 1010, col: 32, offset: 41364},
																										val:        "<<",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 1010, col: 37, offset: 41369},
																									expr: &litMatcher{
																										pos:        position{line: 1010, col: 38, offset: 41370},
																										val:        ">>",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 1010, col: 43, offset: 41375},
																									expr: &litMatcher{
																										pos:        position{line: 1010, col: 44, offset: 41376},
																										val:        ",",
																										ignoreCase: false,
																									},
																								},
																								&anyMatcher{
																									line: 1010, col: 48, offset: 41380,
																								},
																							},
																						},
																					},
																				},
																			},
																			&litMatcher{
																				pos:        position{line: 147, col: 18, offset: 5704},
																				val:        "]",
																				ignoreCase: false,
																			},
																		},
																	},
																},
																&actionExpr{
																	pos: position{line: 157, col: 17, offset: 5997},
																	run: (*parser).callonDelimitedBlock338,
																	expr: &seqExpr{
																		pos: position{line: 157, col: 17, offset: 5997},
																		exprs: []interface{}{
																			&litMatcher{
																				pos:        position{line: 157, col: 17, offset: 5997},
																				val:        ".",
																				ignoreCase: false,
																			},
																			&notExpr{
																				pos: position{line: 157, col: 21, offset: 6001},
																				expr: &litMatcher{
																					pos:        position{line: 157, col: 22, offset: 6002},
																					val:        ".",
																					ignoreCase: false,
																				},
																			},
																			&notExpr{
																				pos: position{line: 157, col: 26, offset: 6006},
																				expr: &choiceExpr{
																					pos: position{line: 1024, col: 7, offset: 41621},
																					alternatives: []interface{}{
																						&litMatcher{
																							pos:        position{line: 1024, col: 7, offset: 41621},
																							val:        " ",
																							ignoreCase: false,
																						},
																						&actionExpr{
																							pos: position{line: 1024, col: 13, offset: 41627},
																							run: (*parser).callonDelimitedBlock346,
																							expr: &litMatcher{
																								pos:        position{line: 1024, col: 13, offset: 41627},
																								val:        "\t",
																								ignoreCase: false,
																							},
																						},
																					},
																				},
																			},
																			&labeledExpr{
																				pos:   position{line: 157, col: 30, offset: 6010},
																				label: "title",
																				expr: &actionExpr{
																					pos: position{line: 161, col: 24, offset: 6115},
																					run: (*parser).callonDelimitedBlock349,
																					expr: &oneOrMoreExpr{
																						pos: position{line: 161, col: 24, offset: 6115},
																						expr: &seqExpr{
																							pos: position{line: 161, col: 25, offset: 6116},
																							exprs: []interface{}{
																								&notExpr{
																									pos: position{line: 161, col: 25, offset: 6116},
																									expr: &choiceExpr{
																										pos: position{line: 1028, col: 12, offset: 41683},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1028, col: 12, offset: 41683},
																												val:        "\r\n",
																												ignoreCase: false,
																											},
																											&charClassMatcher{
																												pos:        position{line: 1028, col: 21, offset: 41692},
																												val:        "[\\r\\n]",
																												chars:      []rune{'\r', '\n'},
																												ignoreCase: false,
																												inverted:   false,
																											},
																										},
																									},
																								},
																								&anyMatcher{
																									line: 161, col: 34, offset: 6125,
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																},
																&actionExpr{
																	pos: position{line: 167, col: 16, offset: 6274},
																	run: (*parser).callonDelimitedBlock357,
																	expr: &seqExpr{
																		pos: position{line: 167, col: 16, offset: 6274},
																		exprs: []interface{}{
																			&litMatcher{
																				pos:        position{line: 167, col: 16, offset: 6274},
																				val:        "[.",
																				ignoreCase: false,
																			},
																			&notExpr{
																				pos: position{line: 167, col: 21, offset: 6279},
																				expr: &choiceExpr{
																					pos: position{line: 1024, col: 7, offset: 41621},
																					alternatives: []interface{}{
																						&litMatcher{
																							pos:        position{line: 1024, col: 7, offset: 41621},
																							val:        " ",
																							ignoreCase: false,
																						},
																						&actionExpr{
																							pos: position{line: 1024, col: 13, offset: 41627},
																							run: (*parser).callonDelimitedBlock363,
																							expr: &litMatcher{
																								pos:        position{line: 1024, col: 13, offset: 41627},
																								val:        "\t",
																								ignoreCase: false,
																							},
																						},
																					},
																				},
																			},
																			&labeledExpr{
																				pos:   position{line: 167, col: 25, offset: 6283},
																				label: "role",
																				expr: &actionExpr{
																					pos: position{line: 171, col: 23, offset: 6387},
																					run: (*parser).callonDelimitedBlock366,
																					expr: &oneOrMoreExpr{
																						pos: position{line: 171, col: 23, offset: 6387},
																						expr: &seqExpr{
																							pos: position{line: 171, col: 24, offset: 6388},
																							exprs: []interface{}{
																								&notExpr{
																									pos: position{line: 171, col: 24, offset: 6388},
																									expr: &choiceExpr{
																										pos: position{line: 1028, col: 12, offset: 41683},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1028, col: 12, offset: 41683},
																												val:        "\r\n",
																												ignoreCase: false,
																											},
																											&charClassMatcher{
																												pos:        position{line: 1028, col: 21, offset: 41692},
																												val:        "[\\r\\n]",
																												chars:      []rune{'\r', '\n'},
																												ignoreCase: false,
																												inverted:   false,
																											},
																										},
																									},
																								},
																								&notExpr{
																									pos: position{line: 171, col: 33, offset: 6397},
																									expr: &litMatcher{
																										pos:        position{line: 171, col: 34, offset: 6398},
																										val:        "]",
																										ignoreCase: false,
																									},
																								},
																								&anyMatcher{
																									line: 171, col: 38, offset: 6402,
																								},
																							},
																						},
																					},
																				},
																			},
																			&litMatcher{
																				pos:        position{line: 167, col: 51, offset: 6309},
																				val:        "]",
																				ignoreCase: false,
																			},
																		},
																	},
																},
																&actionExpr{
																	pos: position{line: 176, col: 30, offset: 6551},
																	run: (*parser).callonDelimitedBlock377,
																	expr: &seqExpr{
																		pos: position{line: 176, col: 30, offset: 6551},
																		exprs: []interface{}{
																			&litMatcher{
																				pos:        position{line: 176, col: 30, offset: 6551},
																				val:        "[",
																				ignoreCase: false,
																			},
																			&labeledExpr{
																				pos:   position{line: 176, col: 34, offset: 6555},
																				label: "k",
																				expr: &choiceExpr{
																					pos: position{line: 494, col: 19, offset: 19245},
																					alternatives: []interface{}{
																						&actionExpr{
																							pos: position{line: 494, col: 19, offset: 19245},
																							run: (*parser).callonDelimitedBlock382,
																							expr: &litMatcher{
																								pos:        position{line: 494, col: 19, offset: 19245},
																								val:        "TIP",
																								ignoreCase: false,
																							},
																						},
																						&actionExpr{
																							pos: position{line: 496, col: 5, offset: 19283},
																							run: (*parser).callonDelimitedBlock384,
																							expr: &litMatcher{
																								pos:        position{line: 496, col: 5, offset: 19283},
																								val:        "NOTE",
																								ignoreCase: false,
																							},
																						},
																						&actionExpr{
																							pos: position{line: 498, col: 5, offset: 19323},
																							run: (*parser).callonDelimitedBlock386,
																							expr: &litMatcher{
																								pos:        position{line: 498, col: 5, offset: 19323},
																								val:        "IMPORTANT",
																								ignoreCase: false,
																							},
																						},
																						&actionExpr{
																							pos: position{line: 500, col: 5, offset: 19373},
																							run: (*parser).callonDelimitedBlock388,
																							expr: &litMatcher{
																								pos:        position{line: 500, col: 5, offset: 19373},
																								val:        "WARNING",
																								ignoreCase: false,
																							},
																						},
																						&actionExpr{
																							pos: position{line: 502, col: 5, offset: 19419},
																							run: (*parser).callonDelimitedBlock390,
																							expr: &litMatcher{
																								pos:        position{line: 502, col: 5, offset: 19419},
																								val:        "CAUTION",
																								ignoreCase: false,
																							},
																						},
																					},
																				},
																			},
																			&litMatcher{
																				pos:        position{line: 176, col: 53, offset: 6574},
																				val:        "]",
																				ignoreCase: false,
																			},
																		},
																	},
																},
																&actionExpr{
																	pos: position{line: 199, col: 21, offset: 7312},
																	run: (*parser).callonDelimitedBlock393,
																	expr: &litMatcher{
																		pos:        position{line: 199, col: 21, offset: 7312},
																		val:        "[horizontal]",
																		ignoreCase: false,
																	},
																},
																&actionExpr{
																	pos: position{line: 181, col: 19, offset: 6735},
																	run: (*parser).callonDelimitedBlock395,
																	expr: &seqExpr{
																		pos: position{line: 181, col: 19, offset: 6735},
																		exprs: []interface{}{
																			&litMatcher{
																				pos:        position{line: 181, col: 19, offset: 6735},
																				val:        "[",
																				ignoreCase: false,
																			},
																			&notExpr{
																				pos: position{line: 181, col: 23, offset: 6739},
																				expr: &choiceExpr{
																					pos: position{line: 1024, col: 7, offset: 41621},
																					alternatives: []interface{}{
																						&litMatcher{
																							pos:        position{line: 1024, col: 7, offset: 41621},
																							val:        " ",
																							ignoreCase: false,
																						},
																						&actionExpr{
																							pos: position{line: 1024, col: 13, offset: 41627},
																							run: (*parser).callonDelimitedBlock401,
																							expr: &litMatcher{
																								pos:        position{line: 1024, col: 13, offset: 41627},
																								val:        "\t",
																								ignoreCase: false,
																							},
																						},
																					},
																				},
																			},
																			&labeledExpr{
																				pos:   position{line: 181, col: 27, offset: 6743},
																				label: "attributes",
																				expr: &zeroOrMoreExpr{
																					pos: position{line: 181, col: 38, offset: 6754},
																					expr: &choiceExpr{
																						pos: position{line: 185, col: 21, offset: 6867},
																						alternatives: []interface{}{
																							&actionExpr{
																								pos: position{line: 185, col: 21, offset: 6867},
																								run: (*parser).callonDelimitedBlock406,
																								expr: &seqExpr{
																									pos: position{line: 185, col: 21, offset: 6867},
																									exprs: []interface{}{
																										&labeledExpr{
																											pos:   position{line: 185, col: 21, offset: 6867},
																											label: "key",
																											expr: &actionExpr{
																												pos: position{line: 191, col: 17, offset: 7127},
																												run: (*parser).callonDelimitedBlock409,
																												expr: &seqExpr{
																													pos: position{line: 191, col: 17, offset: 7127},
																													exprs: []interface{}{
																														&notExpr{
																															pos: position{line: 191, col: 17, offset: 7127},
																															expr: &actionExpr{
																																pos: position{line: 231, col: 14, offset: 8674},
																																run: (*parser).callonDelimitedBlock412,
																																expr: &litMatcher{
																																	pos:        position{line: 231, col: 14, offset: 8674},
																																	val:        "verse",
																																	ignoreCase: false,
																																},
																															},
																														},
																														&notExpr{
																															pos: position{line: 191, col: 28, offset: 7138},
																															expr: &actionExpr{
																																pos: position{line: 975, col: 16, offset: 40537},
																																run: (*parser).callonDelimitedBlock415,
																																expr: &litMatcher{
																																	pos:        position{line: 975, col: 16, offset: 40537},
																																	val:        "literal",
																																	ignoreCase: false,
																																},
																															},
																														},
																														&labeledExpr{
																															pos:   position{line: 191, col: 41, offset: 7151},
																															label: "key",
																															expr: &oneOrMoreExpr{
																																pos: position{line: 191, col: 45, offset: 7155},
																																expr: &seqExpr{
																																	pos: position{line: 191, col: 46, offset: 7156},
																																	exprs: []interface{}{
																																		&notExpr{
																																			pos: position{line: 191, col: 46, offset: 7156},
																																			expr: &litMatcher{
																																				pos:        position{line: 191, col: 47, offset: 7157},
																																				val:        "=",
																																				ignoreCase: false,
																																			},
																																		},
																																		&notExpr{
																																			pos: position{line: 191, col: 51, offset: 7161},
																																			expr: &litMatcher{
																																				pos:        position{line: 191, col: 52, offset: 7162},
																																				val:        ",",
																																				ignoreCase: false,
																																			},
																																		},
																																		&notExpr{
																																			pos: position{line: 191, col: 56, offset: 7166},
																																			expr: &litMatcher{
																																				pos:        position{line: 191, col: 57, offset: 7167},
																																				val:        "]",
																																				ignoreCase: false,
																																			},
																																		},
																																		&anyMatcher{
																																			line: 191, col: 61, offset: 7171,
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																										&litMatcher{
																											pos:        position{line: 185, col: 40, offset: 6886},
																											val:        "=",
																											ignoreCase: false,
																										},
																										&labeledExpr{
																											pos:   position{line: 185, col: 44, offset: 6890},
																											label: "value",
																											expr: &actionExpr{
																												pos: position{line: 195, col: 19, offset: 7230},
																												run: (*parser).callonDelimitedBlock429,
																												expr: &labeledExpr{
																													pos:   position{line: 195, col: 19, offset: 7230},
																													label: "value",
																													expr: &zeroOrMoreExpr{
																														pos: position{line: 195, col: 25, offset: 7236},
																														expr: &seqExpr{
																															pos: position{line: 195, col: 26, offset: 7237},
																															exprs: []interface{}{
																																&notExpr{
																																	pos: position{line: 195, col: 26, offset: 7237},
																																	expr: &litMatcher{
																																		pos:        position{line: 195, col: 27, offset: 7238},
																																		val:        "=",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 195, col: 31, offset: 7242},
																																	expr: &litMatcher{
																																		pos:        position{line: 195, col: 32, offset: 7243},
																																		val:        ",",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 195, col: 36, offset: 7247},
																																	expr: &litMatcher{
																																		pos:        position{line: 195, col: 37, offset: 7248},
																																		val:        "]",
																																		ignoreCase: false,
																																	},
																																},
																																&anyMatcher{
																																	line: 195, col: 41, offset: 7252,
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																										&zeroOrOneExpr{
																											pos: position{line: 185, col: 67, offset: 6913},
																											expr: &litMatcher{
																												pos:        position{line: 185, col: 67, offset: 6913},
																												val:        ",",
																												ignoreCase: false,
																											},
																										},
																										&zeroOrMoreExpr{
																											pos: position{line: 185, col: 72, offset: 6918},
																											expr: &choiceExpr{
																												pos: position{line: 1024, col: 7, offset: 41621},
																												alternatives: []interface{}{
																													&litMatcher{
																														pos:        position{line: 1024, col: 7, offset: 41621},
																														val:        " ",
																														ignoreCase: false,
																													},
																													&actionExpr{
																														pos: position{line: 1024, col: 13, offset: 41627},
																														run: (*parser).callonDelimitedBlock445,
																														expr: &litMatcher{
																															pos:        position{line: 1024, col: 13, offset: 41627},
																															val:        "\t",
																															ignoreCase: false,
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&actionExpr{
																								pos: position{line: 187, col: 5, offset: 7002},
																								run: (*parser).callonDelimitedBlock447,
																								expr: &seqExpr{
																									pos: position{line: 187, col: 5, offset: 7002},
																									exprs: []interface{}{
																										&labeledExpr{
																											pos:   position{line: 187, col: 5, offset: 7002},
																											label: "key",
																											expr: &actionExpr{
																												pos: position{line: 191, col: 17, offset: 7127},
																												run: (*parser).callonDelimitedBlock450,
																												expr: &seqExpr{
																													pos: position{line: 191, col: 17, offset: 7127},
																													exprs: []interface{}{
																														&notExpr{
																															pos: position{line: 191, col: 17, offset: 7127},
																															expr: &actionExpr{
																																pos: position{line: 231, col: 14, offset: 8674},
																																run: (*parser).callonDelimitedBlock453,
																																expr: &litMatcher{
																																	pos:        position{line: 231, col: 14, offset: 8674},
																																	val:        "verse",
																																	ignoreCase: false,
																																},
																															},
																														},
																														&notExpr{
																															pos: position{line: 191, col: 28, offset: 7138},
																															expr: &actionExpr{
																																pos: position{line: 975, col: 16, offset: 40537},
																																run: (*parser).callonDelimitedBlock456,
																																expr: &litMatcher{
																																	pos:        position{line: 975, col: 16, offset: 40537},
																																	val:        "literal",
																																	ignoreCase: false,
																																},
																															},
																														},
																														&labeledExpr{
																															pos:   position{line: 191, col: 41, offset: 7151},
																															label: "key",
																															expr: &oneOrMoreExpr{
																																pos: position{line: 191, col: 45, offset: 7155},
																																expr: &seqExpr{
																																	pos: position{line: 191, col: 46, offset: 7156},
																																	exprs: []interface{}{
																																		&notExpr{
																																			pos: position{line: 191, col: 46, offset: 7156},
																																			expr: &litMatcher{
																																				pos:        position{line: 191, col: 47, offset: 7157},
																																				val:        "=",
																																				ignoreCase: false,
																																			},
																																		},
																																		&notExpr{
																																			pos: position{line: 191, col: 51, offset: 7161},
																																			expr: &litMatcher{
																																				pos:        position{line: 191, col: 52, offset: 7162},
																																				val:        ",",
																																				ignoreCase: false,
																																			},
																																		},
																																		&notExpr{
																																			pos: position{line: 191, col: 56, offset: 7166},
																																			expr: &litMatcher{
																																				pos:        position{line: 191, col: 57, offset: 7167},
																																				val:        "]",
																																				ignoreCase: false,
																																			},
																																		},
																																		&anyMatcher{
																																			line: 191, col: 61, offset: 7171,
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																										&zeroOrOneExpr{
																											pos: position{line: 187, col: 24, offset: 7021},
																											expr: &litMatcher{
																												pos:        position{line: 187, col: 24, offset: 7021},
																												val:        ",",
																												ignoreCase: false,
																											},
																										},
																										&zeroOrMoreExpr{
																											pos: position{line: 187, col: 29, offset: 7026},
																											expr: &choiceExpr{
																												pos: position{line: 1024, col: 7, offset: 41621},
																												alternatives: []interface{}{
																													&litMatcher{
																														pos:        position{line: 1024, col: 7, offset: 41621},
																														val:        " ",
																														ignoreCase: false,
																													},
																													&actionExpr{
																														pos: position{line: 1024, col: 13, offset: 41627},
																														run: (*parser).callonDelimitedBlock473,
																														expr: &litMatcher{
																															pos:        position{line: 1024, col: 13, offset: 41627},
																															val:        "\t",
																															ignoreCase: false,
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																			&litMatcher{
																				pos:        position{line: 181, col: 59, offset: 6775},
																				val:        "]",
																				ignoreCase: false,
																			},
																		},
																	},
																},
															},
														},
													},
													&zeroOrMoreExpr{
														pos: position{line: 136, col: 131, offset: 5298},
														expr: &choiceExpr{
															pos: position{line: 1024, col: 7, offset: 41621},
															alternatives: []interface{}{
																&litMatcher{
																	pos:        position{line: 1024, col: 7, offset: 41621},
																	val:        " ",
																	ignoreCase: false,
																},
																&actionExpr{
																	pos: position{line: 1024, col: 13, offset: 41627},
																	run: (*parser).callonDelimitedBlock479,
																	expr: &litMatcher{
																		pos:        position{line: 1024, col: 13, offset: 41627},
																		val:        "\t",
																		ignoreCase: false,
																	},
																},
															},
														},
													},
													&choiceExpr{
														pos: position{line: 1032, col: 8, offset: 41723},
														alternatives: []interface{}{
															&litMatcher{
																pos:        position{line: 1028, col: 12, offset: 41683},
																val:        "\r\n",
																ignoreCase: false,
															},
															&charClassMatcher{
																pos:        position{line: 1028, col: 21, offset: 41692},
																val:        "[\\r\\n]",
																chars:      []rune{'\r', '\n'},
																ignoreCase: false,
																inverted:   false,
															},
															&notExpr{
																pos: position{line: 1030, col: 8, offset: 41712},
																expr: &anyMatcher{
																	line: 1030, col: 9, offset: 41713,
																},
															},
														},
													},
												},
											},
										},
									},
								},
								&litMatcher{
									pos:        position{line: 925, col: 26, offset: 38379},
									val:        "////",
									ignoreCase: false,
								},
								&zeroOrMoreExpr{
									pos: position{line: 927, col: 70, offset: 38456},
									expr: &choiceExpr{
										pos: position{line: 1024, col: 7, offset: 41621},
										alternatives: []interface{}{
											&litMatcher{
												pos:        position{line: 1024, col: 7, offset: 41621},
												val:        " ",
												ignoreCase: false,
											},
											&actionExpr{
												pos: position{line: 1024, col: 13, offset: 41627},
												run: (*parser).callonDelimitedBlock490,
												expr: &litMatcher{
													pos:        position{line: 1024, col: 13, offset: 41627},
													val:        "\t",
													ignoreCase: false,
												},
											},
										},
									},
								},
								&choiceExpr{
									pos: position{line: 1028, col: 12, offset: 41683},
									alternatives: []interface{}{
										&litMatcher{
											pos:        position{line: 1028, col: 12, offset: 41683},
											val:        "\r\n",
											ignoreCase: false,
										},
										&charClassMatcher{
											pos:        position{line: 1028, col: 21, offset: 41692},
											val:        "[\\r\\n]",
											chars:      []rune{'\r', '\n'},
											ignoreCase: false,
											inverted:   false,
										},
									},
								},
								&labeledExpr{
									pos:   position{line: 927, col: 82, offset: 38468},
									label: "content",
									expr: &zeroOrMoreExpr{
										pos: position{line: 927, col: 90, offset: 38476},
										expr: &actionExpr{
											pos: position{line: 931, col: 21, offset: 38681},
											run: (*parser).callonDelimitedBlock497,
											expr: &seqExpr{
												pos: position{line: 931, col: 21, offset: 38681},
												exprs: []interface{}{
													&zeroOrMoreExpr{
														pos: position{line: 931, col: 21, offset: 38681},
														expr: &seqExpr{
															pos: position{line: 931, col: 22, offset: 38682},
															exprs: []interface{}{
																&notExpr{
																	pos: position{line: 931, col: 22, offset: 38682},
																	expr: &litMatcher{
																		pos:        position{line: 925, col: 26, offset: 38379},
																		val:        "////",
																		ignoreCase: false,
																	},
																},
																&notExpr{
																	pos: position{line: 931, col: 45, offset: 38705},
																	expr: &choiceExpr{
																		pos: position{line: 1032, col: 8, offset: 41723},
																		alternatives: []interface{}{
																			&litMatcher{
																				pos:        position{line: 1028, col: 12, offset: 41683},
																				val:        "\r\n",
																				ignoreCase: false,
																			},
																			&charClassMatcher{
																				pos:        position{line: 1028, col: 21, offset: 41692},
																				val:        "[\\r\\n]",
																				chars:      []rune{'\r', '\n'},
																				ignoreCase: false,
																				inverted:   false,
																			},
																			&notExpr{
																				pos: position{line: 1030, col: 8, offset: 41712},
																				expr: &anyMatcher{
																					line: 1030, col: 9, offset: 41713,
																				},
																			},
																		},
																	},
																},
																&anyMatcher{
																	line: 931, col: 50, offset: 38710,
																},
															},
														},
													},
													&choiceExpr{
														pos: position{line: 1032, col: 8, offset: 41723},
														alternatives: []interface{}{
															&litMatcher{
																pos:        position{line: 1028, col: 12, offset: 41683},
																val:        "\r\n",
																ignoreCase: false,
															},
															&charClassMatcher{
																pos:        position{line: 1028, col: 21, offset: 41692},
																val:        "[\\r\\n]",
																chars:      []rune{'\r', '\n'},
																ignoreCase: false,
																inverted:   false,
															},
															&notExpr{
																pos: position{line: 1030, col: 8, offset: 41712},
																expr: &anyMatcher{
																	line: 1030, col: 9, offset: 41713,
																},
															},
														},
													},
												},
											},
										},
									},
								},
								&choiceExpr{
									pos: position{line: 927, col: 112, offset: 38498},
									alternatives: []interface{}{
										&seqExpr{
											pos: position{line: 927, col: 113, offset: 38499},
											exprs: []interface{}{
												&litMatcher{
													pos:        position{line: 925, col: 26, offset: 38379},
													val:        "////",
													ignoreCase: false,
												},
												&zeroOrMoreExpr{
													pos: position{line: 927, col: 135, offset: 38521},
													expr: &choiceExpr{
														pos: position{line: 1024, col: 7, offset: 41621},
														alternatives: []interface{}{
															&litMatcher{
																pos:        position{line: 1024, col: 7, offset: 41621},
																val:        " ",
																ignoreCase: false,
															},
															&actionExpr{
																pos: position{line: 1024, col: 13, offset: 41627},
																run: (*parser).callonDelimitedBlock521,
																expr: &litMatcher{
																	pos:        position{line: 1024, col: 13, offset: 41627},
																	val:        "\t",
																	ignoreCase: false,
																},
															},
														},
													},
												},
												&choiceExpr{
													pos: position{line: 1032, col: 8, offset: 41723},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1028, col: 12, offset: 41683},
															val:        "\r\n",
															ignoreCase: false,
														},
														&charClassMatcher{
															pos:        position{line: 1028, col: 21, offset: 41692},
															val:        "[\\r\\n]",
															chars:      []rune{'\r', '\n'},
															ignoreCase: false,
															inverted:   false,
														},
														&notExpr{
															pos: position{line: 1030, col: 8, offset: 41712},
															expr: &anyMatcher{
																line: 1030, col: 9, offset: 41713,
															},
														},
													},
												},
											},
										},
										&notExpr{
											pos: position{line: 1030, col: 8, offset: 41712},
											expr: &anyMatcher{
												line: 1030, col: 9, offset: 41713,
											},
										},
									},
								},
							},
						},
					},
					&ruleRefExpr{
						pos:  position{line: 760, col: 34, offset: 31837},
						name: "VerseBlock",
					},
					&ruleRefExpr{
						pos:  position{line: 760, col: 47, offset: 31850},
						name: "QuoteBlock",
					},
					&ruleRefExpr{
						pos:  position{line: 761, col: 19, offset: 31880},
						name: "SidebarBlock",
					},
				},
			},
		},
		{
			name: "FencedBlock",
			pos:  position{line: 773, col: 1, offset: 32336},
			expr: &actionExpr{
				pos: position{line: 773, col: 16, offset: 32351},
				run: (*parser).callonFencedBlock1,
				expr: &seqExpr{
					pos: position{line: 773, col: 16, offset: 32351},
					exprs: []interface{}{
						&labeledExpr{
							pos:   position{line: 773, col: 16, offset: 32351},
							label: "attributes",
							expr: &zeroOrMoreExpr{
								pos: position{line: 773, col: 27, offset: 32362},
								expr: &actionExpr{
									pos: position{line: 136, col: 21, offset: 5188},
									run: (*parser).callonFencedBlock5,
									expr: &seqExpr{
										pos: position{line: 136, col: 21, offset: 5188},
										exprs: []interface{}{
											&labeledExpr{
												pos:   position{line: 136, col: 21, offset: 5188},
												label: "attr",
												expr: &choiceExpr{
													pos: position{line: 136, col: 27, offset: 5194},
													alternatives: []interface{}{
														&actionExpr{
															pos: position{line: 145, col: 14, offset: 5645},
															run: (*parser).callonFencedBlock9,
															expr: &labeledExpr{
																pos:   position{line: 145, col: 14, offset: 5645},
																label: "id",
																expr: &actionExpr{
																	pos: position{line: 151, col: 20, offset: 5775},
																	run: (*parser).callonFencedBlock11,
																	expr: &seqExpr{
																		pos: position{line: 151, col: 20, offset: 5775},
																		exprs: []interface{}{
																			&litMatcher{
																				pos:        position{line: 151, col: 20, offset: 5775},
																				val:        "[[",
																				ignoreCase: false,
																			},
																			&labeledExpr{
																				pos:   position{line: 151, col: 25, offset: 5780},
																				label: "id",
																				expr: &actionExpr{
																					pos: position{line: 1010, col: 7, offset: 41339},
																					run: (*parser).callonFencedBlock15,
																					expr: &oneOrMoreExpr{
																						pos: position{line: 1010, col: 7, offset: 41339},
																						expr: &seqExpr{
																							pos: position{line: 1010, col: 8, offset: 41340},
																							exprs: []interface{}{
																								&notExpr{
																									pos: position{line: 1010, col: 8, offset: 41340},
																									expr: &choiceExpr{
																										pos: position{line: 1028, col: 12, offset: 41683},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1028, col: 12, offset: 41683},
																												val:        "\r\n",
																												ignoreCase: false,
																											},
																											&charClassMatcher{
																												pos:        position{line: 1028, col: 21, offset: 41692},
																												val:        "[\\r\\n]",
																												chars:      []rune{'\r', '\n'},
																												ignoreCase: false,
																												inverted:   false,
																											},
																										},
																									},
																								},
																								&notExpr{
																									pos: position{line: 1010, col: 17, offset: 41349},
																									expr: &choiceExpr{
																										pos: position{line: 1024, col: 7, offset: 41621},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1024, col: 7, offset: 41621},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 1024, col: 13, offset: 41627},
																												run: (*parser).callonFencedBlock25,
																												expr: &litMatcher{
																													pos:        position{line: 1024, col: 13, offset: 41627},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																								&notExpr{
																									pos: position{line: 1010, col: 21, offset: 41353},
																									expr: &litMatcher{
																										pos:        position{line: 1010, col: 22, offset: 41354},
																										val:        "[",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 1010, col: 26, offset: 41358},
																									expr: &litMatcher{
																										pos:        position{line: 1010, col: 27, offset: 41359},
																										val:        "]",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 1010, col: 31, offset: 41363},
																									expr: &litMatcher{
																										pos:        position{line: 1010, col: 32, offset: 41364},
																										val:        "<<",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 1010, col: 37, offset: 41369},
																									expr: &litMatcher{
																										pos:        position{line: 1010, col: 38, offset: 41370},
																										val:        ">>",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 1010, col: 43, offset: 41375},
																									expr: &litMatcher{
																										pos:        position{line: 1010, col: 44, offset: 41376},
																										val:        ",",
																										ignoreCase: false,
																									},
																								},
																								&anyMatcher{
																									line: 1010, col: 48, offset: 41380,
																								},
																							},
																						},
																					},
																				},
																			},
																			&litMatcher{
																				pos:        position{line: 151, col: 33, offset: 5788},
																				val:        "]]",
																				ignoreCase: false,
																			},
																		},
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 147, col: 5, offset: 5691},
															run: (*parser).callonFencedBlock39,
															expr: &seqExpr{
																pos: position{line: 147, col: 5, offset: 5691},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 147, col: 5, offset: 5691},
																		val:        "[#",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 147, col: 10, offset: 5696},
																		label: "id",
																		expr: &actionExpr{
																			pos: position{line: 1010, col: 7, offset: 41339},
																			run: (*parser).callonFencedBlock43,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 1010, col: 7, offset: 41339},
																				expr: &seqExpr{
																					pos: position{line: 1010, col: 8, offset: 41340},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 1010, col: 8, offset: 41340},
																							expr: &choiceExpr{
																								pos: position{line: 1028, col: 12, offset: 41683},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1028, col: 12, offset: 41683},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 1028, col: 21, offset: 41692},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 1010, col: 17, offset: 41349},
																							expr: &choiceExpr{
																								pos: position{line: 1024, col: 7, offset: 41621},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1024, col: 7, offset: 41621},
																										val:        " ",
																										ignoreCase: false,
																									},
																									&actionExpr{
																										pos: position{line: 1024, col: 13, offset: 41627},
																										run: (*parser).callonFencedBlock53,
																										expr: &litMatcher{
																											pos:        position{line: 1024, col: 13, offset: 41627},
																											val:        "\t",
																											ignoreCase: false,
																										},
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 1010, col: 21, offset: 41353},
																							expr: &litMatcher{
																								pos:        position{line: 1010, col: 22, offset: 41354},
																								val:        "[",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 1010, col: 26, offset: 41358},
																							expr: &litMatcher{
																								pos:        position{line: 1010, col: 27, offset: 41359},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 1010, col: 31, offset: 41363},
																							expr: &litMatcher{
																								pos:        position{line: 1010, col: 32, offset: 41364},
																								val:        "<<",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 1010, col: 37, offset: 41369},
																							expr: &litMatcher{
																								pos:        position{line: 1010, col: 38, offset: 41370},
																								val:        ">>",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 1010, col: 43, offset: 41375},
																							expr: &litMatcher{
																								pos:        position{line: 1010, col: 44, offset: 41376},
																								val:        ",",
																								ignoreCase: false,
																							},
																						},
																						&anyMatcher{
																							line: 1010, col: 48, offset: 41380,
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 147, col: 18, offset: 5704},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 157, col: 17, offset: 5997},
															run: (*parser).callonFencedBlock67,
															expr: &seqExpr{
																pos: position{line: 157, col: 17, offset: 5997},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 157, col: 17, offset: 5997},
																		val:        ".",
																		ignoreCase: false,
																	},
																	&notExpr{
																		pos: position{line: 157, col: 21, offset: 6001},
																		expr: &litMatcher{
																			pos:        position{line: 157, col: 22, offset: 6002},
																			val:        ".",
																			ignoreCase: false,
																		},
																	},
																	&notExpr{
																		pos: position{line: 157, col: 26, offset: 6006},
																		expr: &choiceExpr{
																			pos: position{line: 1024, col: 7, offset: 41621},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1024, col: 7, offset: 41621},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1024, col: 13, offset: 41627},
																					run: (*parser).callonFencedBlock75,
																					expr: &litMatcher{
																						pos:        position{line: 1024, col: 13, offset: 41627},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 157, col: 30, offset: 6010},
																		label: "title",
																		expr: &actionExpr{
																			pos: position{line: 161, col: 24, offset: 6115},
																			run: (*parser).callonFencedBlock78,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 161, col: 24, offset: 6115},
																				expr: &seqExpr{
																					pos: position{line: 161, col: 25, offset: 6116},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 161, col: 25, offset: 6116},
																							expr: &choiceExpr{
																								pos: position{line: 1028, col: 12, offset: 41683},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1028, col: 12, offset: 41683},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 1028, col: 21, offset: 41692},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																						},
																						&anyMatcher{
																							line: 161, col: 34, offset: 6125,
																						},
																					},
																				},
																			},
																		},
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 167, col: 16, offset: 6274},
															run: (*parser).callonFencedBlock86,
															expr: &seqExpr{
																pos: position{line: 167, col: 16, offset: 6274},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 167, col: 16, offset: 6274},
																		val:        "[.",
																		ignoreCase: false,
																	},
																	&notExpr{
																		pos: position{line: 167, col: 21, offset: 6279},
																		expr: &choiceExpr{
																			pos: position{line: 1024, col: 7, offset: 41621},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1024, col: 7, offset: 41621},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1024, col: 13, offset: 41627},
																					run: (*parser).callonFencedBlock92,
																					expr: &litMatcher{
																						pos:        position{line: 1024, col: 13, offset: 41627},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 167, col: 25, offset: 6283},
																		label: "role",
																		expr: &actionExpr{
																			pos: position{line: 171, col: 23, offset: 6387},
																			run: (*parser).callonFencedBlock95,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 171, col: 23, offset: 6387},
																				expr: &seqExpr{
																					pos: position{line: 171, col: 24, offset: 6388},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 171, col: 24, offset: 6388},
																							expr: &choiceExpr{
																								pos: position{line: 1028, col: 12, offset: 41683},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1028, col: 12, offset: 41683},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 1028, col: 21, offset: 41692},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 171, col: 33, offset: 6397},
																							expr: &litMatcher{
																								pos:        position{line: 171, col: 34, offset: 6398},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																						&anyMatcher{
																							line: 171, col: 38, offset: 6402,
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 167, col: 51, offset: 6309},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 176, col: 30, offset: 6551},
															run: (*parser).callonFencedBlock106,
															expr: &seqExpr{
																pos: position{line: 176, col: 30, offset: 6551},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 176, col: 30, offset: 6551},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 176, col: 34, offset: 6555},
																		label: "k",
																		expr: &choiceExpr{
																			pos: position{line: 494, col: 19, offset: 19245},
																			alternatives: []interface{}{
																				&actionExpr{
																					pos: position{line: 494, col: 19, offset: 19245},
																					run: (*parser).callonFencedBlock111,
																					expr: &litMatcher{
																						pos:        position{line: 494, col: 19, offset: 19245},
																						val:        "TIP",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 496, col: 5, offset: 19283},
																					run: (*parser).callonFencedBlock113,
																					expr: &litMatcher{
																						pos:        position{line: 496, col: 5, offset: 19283},
																						val:        "NOTE",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 498, col: 5, offset: 19323},
																					run: (*parser).callonFencedBlock115,
																					expr: &litMatcher{
																						pos:        position{line: 498, col: 5, offset: 19323},
																						val:        "IMPORTANT",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 500, col: 5, offset: 19373},
																					run: (*parser).callonFencedBlock117,
																					expr: &litMatcher{
																						pos:        position{line: 500, col: 5, offset: 19373},
																						val:        "WARNING",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 502, col: 5, offset: 19419},
																					run: (*parser).callonFencedBlock119,
																					expr: &litMatcher{
																						pos:        position{line: 502, col: 5, offset: 19419},
																						val:        "CAUTION",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 176, col: 53, offset: 6574},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 199, col: 21, offset: 7312},
															run: (*parser).callonFencedBlock122,
															expr: &litMatcher{
																pos:        position{line: 199, col: 21, offset: 7312},
																val:        "[horizontal]",
																ignoreCase: false,
															},
														},
														&actionExpr{
															pos: position{line: 181, col: 19, offset: 6735},
															run: (*parser).callonFencedBlock124,
															expr: &seqExpr{
																pos: position{line: 181, col: 19, offset: 6735},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 181, col: 19, offset: 6735},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&notExpr{
																		pos: position{line: 181, col: 23, offset: 6739},
																		expr: &choiceExpr{
																			pos: position{line: 1024, col: 7, offset: 41621},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1024, col: 7, offset: 41621},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1024, col: 13, offset: 41627},
																					run: (*parser).callonFencedBlock130,
																					expr: &litMatcher{
																						pos:        position{line: 1024, col: 13, offset: 41627},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 181, col: 27, offset: 6743},
																		label: "attributes",
																		expr: &zeroOrMoreExpr{
																			pos: position{line: 181, col: 38, offset: 6754},
																			expr: &choiceExpr{
																				pos: position{line: 185, col: 21, offset: 6867},
																				alternatives: []interface{}{
																					&actionExpr{
																						pos: position{line: 185, col: 21, offset: 6867},
																						run: (*parser).callonFencedBlock135,
																						expr: &seqExpr{
																							pos: position{line: 185, col: 21, offset: 6867},
																							exprs: []interface{}{
																								&labeledExpr{
																									pos:   position{line: 185, col: 21, offset: 6867},
																									label: "key",
																									expr: &actionExpr{
																										pos: position{line: 191, col: 17, offset: 7127},
																										run: (*parser).callonFencedBlock138,
																										expr: &seqExpr{
																											pos: position{line: 191, col: 17, offset: 7127},
																											exprs: []interface{}{
																												&notExpr{
																													pos: position{line: 191, col: 17, offset: 7127},
																													expr: &actionExpr{
																														pos: position{line: 231, col: 14, offset: 8674},
																														run: (*parser).callonFencedBlock141,
																														expr: &litMatcher{
																															pos:        position{line: 231, col: 14, offset: 8674},
																															val:        "verse",
																															ignoreCase: false,
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 191, col: 28, offset: 7138},
																													expr: &actionExpr{
																														pos: position{line: 975, col: 16, offset: 40537},
																														run: (*parser).callonFencedBlock144,
																														expr: &litMatcher{
																															pos:        position{line: 975, col: 16, offset: 40537},
																															val:        "literal",
																															ignoreCase: false,
																														},
																													},
																												},
																												&labeledExpr{
																													pos:   position{line: 191, col: 41, offset: 7151},
																													label: "key",
																													expr: &oneOrMoreExpr{
																														pos: position{line: 191, col: 45, offset: 7155},
																														expr: &seqExpr{
																															pos: position{line: 191, col: 46, offset: 7156},
																															exprs: []interface{}{
																																&notExpr{
																																	pos: position{line: 191, col: 46, offset: 7156},
																																	expr: &litMatcher{
																																		pos:        position{line: 191, col: 47, offset: 7157},
																																		val:        "=",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 191, col: 51, offset: 7161},
																																	expr: &litMatcher{
																																		pos:        position{line: 191, col: 52, offset: 7162},
																																		val:        ",",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 191, col: 56, offset: 7166},
																																	expr: &litMatcher{
																																		pos:        position{line: 191, col: 57, offset: 7167},
																																		val:        "]",
																																		ignoreCase: false,
																																	},
																																},
																																&anyMatcher{
																																	line: 191, col: 61, offset: 7171,
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&litMatcher{
																									pos:        position{line: 185, col: 40, offset: 6886},
																									val:        "=",
																									ignoreCase: false,
																								},
																								&labeledExpr{
																									pos:   position{line: 185, col: 44, offset: 6890},
																									label: "value",
																									expr: &actionExpr{
																										pos: position{line: 195, col: 19, offset: 7230},
																										run: (*parser).callonFencedBlock158,
																										expr: &labeledExpr{
																											pos:   position{line: 195, col: 19, offset: 7230},
																											label: "value",
																											expr: &zeroOrMoreExpr{
																												pos: position{line: 195, col: 25, offset: 7236},
																												expr: &seqExpr{
																													pos: position{line: 195, col: 26, offset: 7237},
																													exprs: []interface{}{
																														&notExpr{
																															pos: position{line: 195, col: 26, offset: 7237},
																															expr: &litMatcher{
																																pos:        position{line: 195, col: 27, offset: 7238},
																																val:        "=",
																																ignoreCase: false,
																															},
																														},
																														&notExpr{
																															pos: position{line: 195, col: 31, offset: 7242},
																															expr: &litMatcher{
																																pos:        position{line: 195, col: 32, offset: 7243},
																																val:        ",",
																																ignoreCase: false,
																															},
																														},
																														&notExpr{
																															pos: position{line: 195, col: 36, offset: 7247},
																															expr: &litMatcher{
																																pos:        position{line: 195, col: 37, offset: 7248},
																																val:        "]",
																																ignoreCase: false,
																															},
																														},
																														&anyMatcher{
																															line: 195, col: 41, offset: 7252,
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&zeroOrOneExpr{
																									pos: position{line: 185, col: 67, offset: 6913},
																									expr: &litMatcher{
																										pos:        position{line: 185, col: 67, offset: 6913},
																										val:        ",",
																										ignoreCase: false,
																									},
																								},
																								&zeroOrMoreExpr{
																									pos: position{line: 185, col: 72, offset: 6918},
																									expr: &choiceExpr{
																										pos: position{line: 1024, col: 7, offset: 41621},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1024, col: 7, offset: 41621},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 1024, col: 13, offset: 41627},
																												run: (*parser).callonFencedBlock174,
																												expr: &litMatcher{
																													pos:        position{line: 1024, col: 13, offset: 41627},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																					&actionExpr{
																						pos: position{line: 187, col: 5, offset: 7002},
																						run: (*parser).callonFencedBlock176,
																						expr: &seqExpr{
																							pos: position{line: 187, col: 5, offset: 7002},
																							exprs: []interface{}{
																								&labeledExpr{
																									pos:   position{line: 187, col: 5, offset: 7002},
																									label: "key",
																									expr: &actionExpr{
																										pos: position{line: 191, col: 17, offset: 7127},
																										run: (*parser).callonFencedBlock179,
																										expr: &seqExpr{
																											pos: position{line: 191, col: 17, offset: 7127},
																											exprs: []interface{}{
																												&notExpr{
																													pos: position{line: 191, col: 17, offset: 7127},
																													expr: &actionExpr{
																														pos: position{line: 231, col: 14, offset: 8674},
																														run: (*parser).callonFencedBlock182,
																														expr: &litMatcher{
																															pos:        position{line: 231, col: 14, offset: 8674},
																															val:        "verse",
																															ignoreCase: false,
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 191, col: 28, offset: 7138},
																													expr: &actionExpr{
																														pos: position{line: 975, col: 16, offset: 40537},
																														run: (*parser).callonFencedBlock185,
																														expr: &litMatcher{
																															pos:        position{line: 975, col: 16, offset: 40537},
																															val:        "literal",
																															ignoreCase: false,
																														},
																													},
																												},
																												&labeledExpr{
																													pos:   position{line: 191, col: 41, offset: 7151},
																													label: "key",
																													expr: &oneOrMoreExpr{
																														pos: position{line: 191, col: 45, offset: 7155},
																														expr: &seqExpr{
																															pos: position{line: 191, col: 46, offset: 7156},
																															exprs: []interface{}{
																																&notExpr{
																																	pos: position{line: 191, col: 46, offset: 7156},
																																	expr: &litMatcher{
																																		pos:        position{line: 191, col: 47, offset: 7157},
																																		val:        "=",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 191, col: 51, offset: 7161},
																																	expr: &litMatcher{
																																		pos:        position{line: 191, col: 52, offset: 7162},
																																		val:        ",",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 191, col: 56, offset: 7166},
																																	expr: &litMatcher{
																																		pos:        position{line: 191, col: 57, offset: 7167},
																																		val:        "]",
																																		ignoreCase: false,
																																	},
																																},
																																&anyMatcher{
																																	line: 191, col: 61, offset: 7171,
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&zeroOrOneExpr{
																									pos: position{line: 187, col: 24, offset: 7021},
																									expr: &litMatcher{
																										pos:        position{line: 187, col: 24, offset: 7021},
																										val:        ",",
																										ignoreCase: false,
																									},
																								},
																								&zeroOrMoreExpr{
																									pos: position{line: 187, col: 29, offset: 7026},
																									expr: &choiceExpr{
																										pos: position{line: 1024, col: 7, offset: 41621},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1024, col: 7, offset: 41621},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 1024, col: 13, offset: 41627},
																												run: (*parser).callonFencedBlock202,
																												expr: &litMatcher{
																													pos:        position{line: 1024, col: 13, offset: 41627},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 181, col: 59, offset: 6775},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
													},
												},
											},
											&zeroOrMoreExpr{
												pos: position{line: 136, col: 131, offset: 5298},
												expr: &choiceExpr{
													pos: position{line: 1024, col: 7, offset: 41621},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1024, col: 7, offset: 41621},
															val:        " ",
															ignoreCase: false,
														},
														&actionExpr{
															pos: position{line: 1024, col: 13, offset: 41627},
															run: (*parser).callonFencedBlock208,
															expr: &litMatcher{
																pos:        position{line: 1024, col: 13, offset: 41627},
																val:        "\t",
																ignoreCase: false,
															},
														},
													},
												},
											},
											&choiceExpr{
												pos: position{line: 1032, col: 8, offset: 41723},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1028, col: 12, offset: 41683},
														val:        "\r\n",
														ignoreCase: false,
													},
													&charClassMatcher{
														pos:        position{line: 1028, col: 21, offset: 41692},
														val:        "[\\r\\n]",
														chars:      []rune{'\r', '\n'},
														ignoreCase: false,
														inverted:   false,
													},
													&notExpr{
														pos: position{line: 1030, col: 8, offset: 41712},
														expr: &anyMatcher{
															line: 1030, col: 9, offset: 41713,
														},
													},
												},
											},
										},
									},
								},
							},
						},
						&litMatcher{
							pos:        position{line: 771, col: 25, offset: 32329},
							val:        "```",
							ignoreCase: false,
						},
						&zeroOrMoreExpr{
							pos: position{line: 773, col: 68, offset: 32403},
							expr: &choiceExpr{
								pos: position{line: 1024, col: 7, offset: 41621},
								alternatives: []interface{}{
									&litMatcher{
										pos:        position{line: 1024, col: 7, offset: 41621},
										val:        " ",
										ignoreCase: false,
									},
									&actionExpr{
										pos: position{line: 1024, col: 13, offset: 41627},
										run: (*parser).callonFencedBlock219,
										expr: &litMatcher{
											pos:        position{line: 1024, col: 13, offset: 41627},
											val:        "\t",
											ignoreCase: false,
										},
									},
								},
							},
						},
						&choiceExpr{
							pos: position{line: 1028, col: 12, offset: 41683},
							alternatives: []interface{}{
								&litMatcher{
									pos:        position{line: 1028, col: 12, offset: 41683},
									val:        "\r\n",
									ignoreCase: false,
								},
								&charClassMatcher{
									pos:        position{line: 1028, col: 21, offset: 41692},
									val:        "[\\r\\n]",
									chars:      []rune{'\r', '\n'},
									ignoreCase: false,
									inverted:   false,
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 773, col: 80, offset: 32415},
							label: "content",
							expr: &zeroOrMoreExpr{
								pos: position{line: 773, col: 88, offset: 32423},
								expr: &ruleRefExpr{
									pos:  position{line: 773, col: 89, offset: 32424},
									name: "FencedBlockContent",
								},
							},
						},
						&choiceExpr{
							pos: position{line: 773, col: 111, offset: 32446},
							alternatives: []interface{}{
								&seqExpr{
									pos: position{line: 773, col: 112, offset: 32447},
									exprs: []interface{}{
										&litMatcher{
											pos:        position{line: 771, col: 25, offset: 32329},
											val:        "```",
											ignoreCase: false,
										},
										&zeroOrMoreExpr{
											pos: position{line: 773, col: 133, offset: 32468},
											expr: &choiceExpr{
												pos: position{line: 1024, col: 7, offset: 41621},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1024, col: 7, offset: 41621},
														val:        " ",
														ignoreCase: false,
													},
													&actionExpr{
														pos: position{line: 1024, col: 13, offset: 41627},
														run: (*parser).callonFencedBlock233,
														expr: &litMatcher{
															pos:        position{line: 1024, col: 13, offset: 41627},
															val:        "\t",
															ignoreCase: false,
														},
													},
												},
											},
										},
										&choiceExpr{
											pos: position{line: 1032, col: 8, offset: 41723},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 1028, col: 12, offset: 41683},
													val:        "\r\n",
													ignoreCase: false,
												},
												&charClassMatcher{
													pos:        position{line: 1028, col: 21, offset: 41692},
													val:        "[\\r\\n]",
													chars:      []rune{'\r', '\n'},
													ignoreCase: false,
													inverted:   false,
												},
												&notExpr{
													pos: position{line: 1030, col: 8, offset: 41712},
													expr: &anyMatcher{
														line: 1030, col: 9, offset: 41713,
													},
												},
											},
										},
									},
								},
								&notExpr{
									pos: position{line: 1030, col: 8, offset: 41712},
									expr: &anyMatcher{
										line: 1030, col: 9, offset: 41713,
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "FencedBlockContent",
			pos:  position{line: 777, col: 1, offset: 32603},
			expr: &choiceExpr{
				pos: position{line: 777, col: 23, offset: 32625},
				alternatives: []interface{}{
					&ruleRefExpr{
						pos:  position{line: 777, col: 23, offset: 32625},
						name: "List",
					},
					&ruleRefExpr{
						pos:  position{line: 777, col: 30, offset: 32632},
						name: "BlockParagraph",
					},
					&actionExpr{
						pos: position{line: 991, col: 14, offset: 40968},
						run: (*parser).callonFencedBlockContent4,
						expr: &seqExpr{
							pos: position{line: 991, col: 14, offset: 40968},
							exprs: []interface{}{
								&notExpr{
									pos: position{line: 991, col: 14, offset: 40968},
									expr: &notExpr{
										pos: position{line: 1030, col: 8, offset: 41712},
										expr: &anyMatcher{
											line: 1030, col: 9, offset: 41713,
										},
									},
								},
								&zeroOrMoreExpr{
									pos: position{line: 991, col: 19, offset: 40973},
									expr: &choiceExpr{
										pos: position{line: 1024, col: 7, offset: 41621},
										alternatives: []interface{}{
											&litMatcher{
												pos:        position{line: 1024, col: 7, offset: 41621},
												val:        " ",
												ignoreCase: false,
											},
											&actionExpr{
												pos: position{line: 1024, col: 13, offset: 41627},
												run: (*parser).callonFencedBlockContent12,
												expr: &litMatcher{
													pos:        position{line: 1024, col: 13, offset: 41627},
													val:        "\t",
													ignoreCase: false,
												},
											},
										},
									},
								},
								&choiceExpr{
									pos: position{line: 1032, col: 8, offset: 41723},
									alternatives: []interface{}{
										&litMatcher{
											pos:        position{line: 1028, col: 12, offset: 41683},
											val:        "\r\n",
											ignoreCase: false,
										},
										&charClassMatcher{
											pos:        position{line: 1028, col: 21, offset: 41692},
											val:        "[\\r\\n]",
											chars:      []rune{'\r', '\n'},
											ignoreCase: false,
											inverted:   false,
										},
										&notExpr{
											pos: position{line: 1030, col: 8, offset: 41712},
											expr: &anyMatcher{
												line: 1030, col: 9, offset: 41713,
											},
										},
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "ExampleBlock",
			pos:  position{line: 806, col: 1, offset: 33865},
			expr: &actionExpr{
				pos: position{line: 806, col: 17, offset: 33881},
				run: (*parser).callonExampleBlock1,
				expr: &seqExpr{
					pos: position{line: 806, col: 17, offset: 33881},
					exprs: []interface{}{
						&labeledExpr{
							pos:   position{line: 806, col: 17, offset: 33881},
							label: "attributes",
							expr: &zeroOrMoreExpr{
								pos: position{line: 806, col: 28, offset: 33892},
								expr: &actionExpr{
									pos: position{line: 136, col: 21, offset: 5188},
									run: (*parser).callonExampleBlock5,
									expr: &seqExpr{
										pos: position{line: 136, col: 21, offset: 5188},
										exprs: []interface{}{
											&labeledExpr{
												pos:   position{line: 136, col: 21, offset: 5188},
												label: "attr",
												expr: &choiceExpr{
													pos: position{line: 136, col: 27, offset: 5194},
													alternatives: []interface{}{
														&actionExpr{
															pos: position{line: 145, col: 14, offset: 5645},
															run: (*parser).callonExampleBlock9,
															expr: &labeledExpr{
																pos:   position{line: 145, col: 14, offset: 5645},
																label: "id",
																expr: &actionExpr{
																	pos: position{line: 151, col: 20, offset: 5775},
																	run: (*parser).callonExampleBlock11,
																	expr: &seqExpr{
																		pos: position{line: 151, col: 20, offset: 5775},
																		exprs: []interface{}{
																			&litMatcher{
																				pos:        position{line: 151, col: 20, offset: 5775},
																				val:        "[[",
																				ignoreCase: false,
																			},
																			&labeledExpr{
																				pos:   position{line: 151, col: 25, offset: 5780},
																				label: "id",
																				expr: &actionExpr{
																					pos: position{line: 1010, col: 7, offset: 41339},
																					run: (*parser).callonExampleBlock15,
																					expr: &oneOrMoreExpr{
																						pos: position{line: 1010, col: 7, offset: 41339},
																						expr: &seqExpr{
																							pos: position{line: 1010, col: 8, offset: 41340},
																							exprs: []interface{}{
																								&notExpr{
																									pos: position{line: 1010, col: 8, offset: 41340},
																									expr: &choiceExpr{
																										pos: position{line: 1028, col: 12, offset: 41683},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1028, col: 12, offset: 41683},
																												val:        "\r\n",
																												ignoreCase: false,
																											},
																											&charClassMatcher{
																												pos:        position{line: 1028, col: 21, offset: 41692},
																												val:        "[\\r\\n]",
																												chars:      []rune{'\r', '\n'},
																												ignoreCase: false,
																												inverted:   false,
																											},
																										},
																									},
																								},
																								&notExpr{
																									pos: position{line: 1010, col: 17, offset: 41349},
																									expr: &choiceExpr{
																										pos: position{line: 1024, col: 7, offset: 41621},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1024, col: 7, offset: 41621},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 1024, col: 13, offset: 41627},
																												run: (*parser).callonExampleBlock25,
																												expr: &litMatcher{
																													pos:        position{line: 1024, col: 13, offset: 41627},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																								&notExpr{
																									pos: position{line: 1010, col: 21, offset: 41353},
																									expr: &litMatcher{
																										pos:        position{line: 1010, col: 22, offset: 41354},
																										val:        "[",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 1010, col: 26, offset: 41358},
																									expr: &litMatcher{
																										pos:        position{line: 1010, col: 27, offset: 41359},
																										val:        "]",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 1010, col: 31, offset: 41363},
																									expr: &litMatcher{
																										pos:        position{line: 1010, col: 32, offset: 41364},
																										val:        "<<",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 1010, col: 37, offset: 41369},
																									expr: &litMatcher{
																										pos:        position{line: 1010, col: 38, offset: 41370},
																										val:        ">>",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 1010, col: 43, offset: 41375},
																									expr: &litMatcher{
																										pos:        position{line: 1010, col: 44, offset: 41376},
																										val:        ",",
																										ignoreCase: false,
																									},
																								},
																								&anyMatcher{
																									line: 1010, col: 48, offset: 41380,
																								},
																							},
																						},
																					},
																				},
																			},
																			&litMatcher{
																				pos:        position{line: 151, col: 33, offset: 5788},
																				val:        "]]",
																				ignoreCase: false,
																			},
																		},
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 147, col: 5, offset: 5691},
															run: (*parser).callonExampleBlock39,
															expr: &seqExpr{
																pos: position{line: 147, col: 5, offset: 5691},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 147, col: 5, offset: 5691},
																		val:        "[#",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 147, col: 10, offset: 5696},
																		label: "id",
																		expr: &actionExpr{
																			pos: position{line: 1010, col: 7, offset: 41339},
																			run: (*parser).callonExampleBlock43,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 1010, col: 7, offset: 41339},
																				expr: &seqExpr{
																					pos: position{line: 1010, col: 8, offset: 41340},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 1010, col: 8, offset: 41340},
																							expr: &choiceExpr{
																								pos: position{line: 1028, col: 12, offset: 41683},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1028, col: 12, offset: 41683},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 1028, col: 21, offset: 41692},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 1010, col: 17, offset: 41349},
																							expr: &choiceExpr{
																								pos: position{line: 1024, col: 7, offset: 41621},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1024, col: 7, offset: 41621},
																										val:        " ",
																										ignoreCase: false,
																									},
																									&actionExpr{
																										pos: position{line: 1024, col: 13, offset: 41627},
																										run: (*parser).callonExampleBlock53,
																										expr: &litMatcher{
																											pos:        position{line: 1024, col: 13, offset: 41627},
																											val:        "\t",
																											ignoreCase: false,
																										},
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 1010, col: 21, offset: 41353},
																							expr: &litMatcher{
																								pos:        position{line: 1010, col: 22, offset: 41354},
																								val:        "[",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 1010, col: 26, offset: 41358},
																							expr: &litMatcher{
																								pos:        position{line: 1010, col: 27, offset: 41359},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 1010, col: 31, offset: 41363},
																							expr: &litMatcher{
																								pos:        position{line: 1010, col: 32, offset: 41364},
																								val:        "<<",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 1010, col: 37, offset: 41369},
																							expr: &litMatcher{
																								pos:        position{line: 1010, col: 38, offset: 41370},
																								val:        ">>",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 1010, col: 43, offset: 41375},
																							expr: &litMatcher{
																								pos:        position{line: 1010, col: 44, offset: 41376},
																								val:        ",",
																								ignoreCase: false,
																							},
																						},
																						&anyMatcher{
																							line: 1010, col: 48, offset: 41380,
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 147, col: 18, offset: 5704},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 157, col: 17, offset: 5997},
															run: (*parser).callonExampleBlock67,
															expr: &seqExpr{
																pos: position{line: 157, col: 17, offset: 5997},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 157, col: 17, offset: 5997},
																		val:        ".",
																		ignoreCase: false,
																	},
																	&notExpr{
																		pos: position{line: 157, col: 21, offset: 6001},
																		expr: &litMatcher{
																			pos:        position{line: 157, col: 22, offset: 6002},
																			val:        ".",
																			ignoreCase: false,
																		},
																	},
																	&notExpr{
																		pos: position{line: 157, col: 26, offset: 6006},
																		expr: &choiceExpr{
																			pos: position{line: 1024, col: 7, offset: 41621},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1024, col: 7, offset: 41621},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1024, col: 13, offset: 41627},
																					run: (*parser).callonExampleBlock75,
																					expr: &litMatcher{
																						pos:        position{line: 1024, col: 13, offset: 41627},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 157, col: 30, offset: 6010},
																		label: "title",
																		expr: &actionExpr{
																			pos: position{line: 161, col: 24, offset: 6115},
																			run: (*parser).callonExampleBlock78,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 161, col: 24, offset: 6115},
																				expr: &seqExpr{
																					pos: position{line: 161, col: 25, offset: 6116},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 161, col: 25, offset: 6116},
																							expr: &choiceExpr{
																								pos: position{line: 1028, col: 12, offset: 41683},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1028, col: 12, offset: 41683},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 1028, col: 21, offset: 41692},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																						},
																						&anyMatcher{
																							line: 161, col: 34, offset: 6125,
																						},
																					},
																				},
																			},
																		},
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 167, col: 16, offset: 6274},
															run: (*parser).callonExampleBlock86,
															expr: &seqExpr{
																pos: position{line: 167, col: 16, offset: 6274},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 167, col: 16, offset: 6274},
																		val:        "[.",
																		ignoreCase: false,
																	},
																	&notExpr{
																		pos: position{line: 167, col: 21, offset: 6279},
																		expr: &choiceExpr{
																			pos: position{line: 1024, col: 7, offset: 41621},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1024, col: 7, offset: 41621},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1024, col: 13, offset: 41627},
																					run: (*parser).callonExampleBlock92,
																					expr: &litMatcher{
																						pos:        position{line: 1024, col: 13, offset: 41627},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 167, col: 25, offset: 6283},
																		label: "role",
																		expr: &actionExpr{
																			pos: position{line: 171, col: 23, offset: 6387},
																			run: (*parser).callonExampleBlock95,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 171, col: 23, offset: 6387},
																				expr: &seqExpr{
																					pos: position{line: 171, col: 24, offset: 6388},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 171, col: 24, offset: 6388},
																							expr: &choiceExpr{
																								pos: position{line: 1028, col: 12, offset: 41683},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1028, col: 12, offset: 41683},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 1028, col: 21, offset: 41692},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 171, col: 33, offset: 6397},
																							expr: &litMatcher{
																								pos:        position{line: 171, col: 34, offset: 6398},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																						&anyMatcher{
																							line: 171, col: 38, offset: 6402,
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 167, col: 51, offset: 6309},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 176, col: 30, offset: 6551},
															run: (*parser).callonExampleBlock106,
															expr: &seqExpr{
																pos: position{line: 176, col: 30, offset: 6551},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 176, col: 30, offset: 6551},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 176, col: 34, offset: 6555},
																		label: "k",
																		expr: &choiceExpr{
																			pos: position{line: 494, col: 19, offset: 19245},
																			alternatives: []interface{}{
																				&actionExpr{
																					pos: position{line: 494, col: 19, offset: 19245},
																					run: (*parser).callonExampleBlock111,
																					expr: &litMatcher{
																						pos:        position{line: 494, col: 19, offset: 19245},
																						val:        "TIP",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 496, col: 5, offset: 19283},
																					run: (*parser).callonExampleBlock113,
																					expr: &litMatcher{
																						pos:        position{line: 496, col: 5, offset: 19283},
																						val:        "NOTE",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 498, col: 5, offset: 19323},
																					run: (*parser).callonExampleBlock115,
																					expr: &litMatcher{
																						pos:        position{line: 498, col: 5, offset: 19323},
																						val:        "IMPORTANT",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 500, col: 5, offset: 19373},
																					run: (*parser).callonExampleBlock117,
																					expr: &litMatcher{
																						pos:        position{line: 500, col: 5, offset: 19373},
																						val:        "WARNING",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 502, col: 5, offset: 19419},
																					run: (*parser).callonExampleBlock119,
																					expr: &litMatcher{
																						pos:        position{line: 502, col: 5, offset: 19419},
																						val:        "CAUTION",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 176, col: 53, offset: 6574},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 199, col: 21, offset: 7312},
															run: (*parser).callonExampleBlock122,
															expr: &litMatcher{
																pos:        position{line: 199, col: 21, offset: 7312},
																val:        "[horizontal]",
																ignoreCase: false,
															},
														},
														&actionExpr{
															pos: position{line: 181, col: 19, offset: 6735},
															run: (*parser).callonExampleBlock124,
															expr: &seqExpr{
																pos: position{line: 181, col: 19, offset: 6735},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 181, col: 19, offset: 6735},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&notExpr{
																		pos: position{line: 181, col: 23, offset: 6739},
																		expr: &choiceExpr{
																			pos: position{line: 1024, col: 7, offset: 41621},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1024, col: 7, offset: 41621},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1024, col: 13, offset: 41627},
																					run: (*parser).callonExampleBlock130,
																					expr: &litMatcher{
																						pos:        position{line: 1024, col: 13, offset: 41627},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 181, col: 27, offset: 6743},
																		label: "attributes",
																		expr: &zeroOrMoreExpr{
																			pos: position{line: 181, col: 38, offset: 6754},
																			expr: &choiceExpr{
																				pos: position{line: 185, col: 21, offset: 6867},
																				alternatives: []interface{}{
																					&actionExpr{
																						pos: position{line: 185, col: 21, offset: 6867},
																						run: (*parser).callonExampleBlock135,
																						expr: &seqExpr{
																							pos: position{line: 185, col: 21, offset: 6867},
																							exprs: []interface{}{
																								&labeledExpr{
																									pos:   position{line: 185, col: 21, offset: 6867},
																									label: "key",
																									expr: &actionExpr{
																										pos: position{line: 191, col: 17, offset: 7127},
																										run: (*parser).callonExampleBlock138,
																										expr: &seqExpr{
																											pos: position{line: 191, col: 17, offset: 7127},
																											exprs: []interface{}{
																												&notExpr{
																													pos: position{line: 191, col: 17, offset: 7127},
																													expr: &actionExpr{
																														pos: position{line: 231, col: 14, offset: 8674},
																														run: (*parser).callonExampleBlock141,
																														expr: &litMatcher{
																															pos:        position{line: 231, col: 14, offset: 8674},
																															val:        "verse",
																															ignoreCase: false,
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 191, col: 28, offset: 7138},
																													expr: &actionExpr{
																														pos: position{line: 975, col: 16, offset: 40537},
																														run: (*parser).callonExampleBlock144,
																														expr: &litMatcher{
																															pos:        position{line: 975, col: 16, offset: 40537},
																															val:        "literal",
																															ignoreCase: false,
																														},
																													},
																												},
																												&labeledExpr{
																													pos:   position{line: 191, col: 41, offset: 7151},
																													label: "key",
																													expr: &oneOrMoreExpr{
																														pos: position{line: 191, col: 45, offset: 7155},
																														expr: &seqExpr{
																															pos: position{line: 191, col: 46, offset: 7156},
																															exprs: []interface{}{
																																&notExpr{
																																	pos: position{line: 191, col: 46, offset: 7156},
																																	expr: &litMatcher{
																																		pos:        position{line: 191, col: 47, offset: 7157},
																																		val:        "=",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 191, col: 51, offset: 7161},
																																	expr: &litMatcher{
																																		pos:        position{line: 191, col: 52, offset: 7162},
																																		val:        ",",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 191, col: 56, offset: 7166},
																																	expr: &litMatcher{
																																		pos:        position{line: 191, col: 57, offset: 7167},
																																		val:        "]",
																																		ignoreCase: false,
																																	},
																																},
																																&anyMatcher{
																																	line: 191, col: 61, offset: 7171,
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&litMatcher{
																									pos:        position{line: 185, col: 40, offset: 6886},
																									val:        "=",
																									ignoreCase: false,
																								},
																								&labeledExpr{
																									pos:   position{line: 185, col: 44, offset: 6890},
																									label: "value",
																									expr: &actionExpr{
																										pos: position{line: 195, col: 19, offset: 7230},
																										run: (*parser).callonExampleBlock158,
																										expr: &labeledExpr{
																											pos:   position{line: 195, col: 19, offset: 7230},
																											label: "value",
																											expr: &zeroOrMoreExpr{
																												pos: position{line: 195, col: 25, offset: 7236},
																												expr: &seqExpr{
																													pos: position{line: 195, col: 26, offset: 7237},
																													exprs: []interface{}{
																														&notExpr{
																															pos: position{line: 195, col: 26, offset: 7237},
																															expr: &litMatcher{
																																pos:        position{line: 195, col: 27, offset: 7238},
																																val:        "=",
																																ignoreCase: false,
																															},
																														},
																														&notExpr{
																															pos: position{line: 195, col: 31, offset: 7242},
																															expr: &litMatcher{
																																pos:        position{line: 195, col: 32, offset: 7243},
																																val:        ",",
																																ignoreCase: false,
																															},
																														},
																														&notExpr{
																															pos: position{line: 195, col: 36, offset: 7247},
																															expr: &litMatcher{
																																pos:        position{line: 195, col: 37, offset: 7248},
																																val:        "]",
																																ignoreCase: false,
																															},
																														},
																														&anyMatcher{
																															line: 195, col: 41, offset: 7252,
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&zeroOrOneExpr{
																									pos: position{line: 185, col: 67, offset: 6913},
																									expr: &litMatcher{
																										pos:        position{line: 185, col: 67, offset: 6913},
																										val:        ",",
																										ignoreCase: false,
																									},
																								},
																								&zeroOrMoreExpr{
																									pos: position{line: 185, col: 72, offset: 6918},
																									expr: &choiceExpr{
																										pos: position{line: 1024, col: 7, offset: 41621},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1024, col: 7, offset: 41621},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 1024, col: 13, offset: 41627},
																												run: (*parser).callonExampleBlock174,
																												expr: &litMatcher{
																													pos:        position{line: 1024, col: 13, offset: 41627},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																					&actionExpr{
																						pos: position{line: 187, col: 5, offset: 7002},
																						run: (*parser).callonExampleBlock176,
																						expr: &seqExpr{
																							pos: position{line: 187, col: 5, offset: 7002},
																							exprs: []interface{}{
																								&labeledExpr{
																									pos:   position{line: 187, col: 5, offset: 7002},
																									label: "key",
																									expr: &actionExpr{
																										pos: position{line: 191, col: 17, offset: 7127},
																										run: (*parser).callonExampleBlock179,
																										expr: &seqExpr{
																											pos: position{line: 191, col: 17, offset: 7127},
																											exprs: []interface{}{
																												&notExpr{
																													pos: position{line: 191, col: 17, offset: 7127},
																													expr: &actionExpr{
																														pos: position{line: 231, col: 14, offset: 8674},
																														run: (*parser).callonExampleBlock182,
																														expr: &litMatcher{
																															pos:        position{line: 231, col: 14, offset: 8674},
																															val:        "verse",
																															ignoreCase: false,
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 191, col: 28, offset: 7138},
																													expr: &actionExpr{
																														pos: position{line: 975, col: 16, offset: 40537},
																														run: (*parser).callonExampleBlock185,
																														expr: &litMatcher{
																															pos:        position{line: 975, col: 16, offset: 40537},
																															val:        "literal",
																															ignoreCase: false,
																														},
																													},
																												},
																												&labeledExpr{
																													pos:   position{line: 191, col: 41, offset: 7151},
																													label: "key",
																													expr: &oneOrMoreExpr{
																														pos: position{line: 191, col: 45, offset: 7155},
																														expr: &seqExpr{
																															pos: position{line: 191, col: 46, offset: 7156},
																															exprs: []interface{}{
																																&notExpr{
																																	pos: position{line: 191, col: 46, offset: 7156},
																																	expr: &litMatcher{
																																		pos:        position{line: 191, col: 47, offset: 7157},
																																		val:        "=",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 191, col: 51, offset: 7161},
																																	expr: &litMatcher{
																																		pos:        position{line: 191, col: 52, offset: 7162},
																																		val:        ",",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 191, col: 56, offset: 7166},
																																	expr: &litMatcher{
																																		pos:        position{line: 191, col: 57, offset: 7167},
																																		val:        "]",
																																		ignoreCase: false,
																																	},
																																},
																																&anyMatcher{
																																	line: 191, col: 61, offset: 7171,
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&zeroOrOneExpr{
																									pos: position{line: 187, col: 24, offset: 7021},
																									expr: &litMatcher{
																										pos:        position{line: 187, col: 24, offset: 7021},
																										val:        ",",
																										ignoreCase: false,
																									},
																								},
																								&zeroOrMoreExpr{
																									pos: position{line: 187, col: 29, offset: 7026},
																									expr: &choiceExpr{
																										pos: position{line: 1024, col: 7, offset: 41621},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1024, col: 7, offset: 41621},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 1024, col: 13, offset: 41627},
																												run: (*parser).callonExampleBlock202,
																												expr: &litMatcher{
																													pos:        position{line: 1024, col: 13, offset: 41627},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 181, col: 59, offset: 6775},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
													},
												},
											},
											&zeroOrMoreExpr{
												pos: position{line: 136, col: 131, offset: 5298},
												expr: &choiceExpr{
													pos: position{line: 1024, col: 7, offset: 41621},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1024, col: 7, offset: 41621},
															val:        " ",
															ignoreCase: false,
														},
														&actionExpr{
															pos: position{line: 1024, col: 13, offset: 41627},
															run: (*parser).callonExampleBlock208,
															expr: &litMatcher{
																pos:        position{line: 1024, col: 13, offset: 41627},
																val:        "\t",
																ignoreCase: false,
															},
														},
													},
												},
											},
											&choiceExpr{
												pos: position{line: 1032, col: 8, offset: 41723},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1028, col: 12, offset: 41683},
														val:        "\r\n",
														ignoreCase: false,
													},
													&charClassMatcher{
														pos:        position{line: 1028, col: 21, offset: 41692},
														val:        "[\\r\\n]",
														chars:      []rune{'\r', '\n'},
														ignoreCase: false,
														inverted:   false,
													},
													&notExpr{
														pos: position{line: 1030, col: 8, offset: 41712},
														expr: &anyMatcher{
															line: 1030, col: 9, offset: 41713,
														},
													},
												},
											},
										},
									},
								},
							},
						},
						&litMatcher{
							pos:        position{line: 804, col: 26, offset: 33857},
							val:        "====",
							ignoreCase: false,
						},
						&zeroOrMoreExpr{
							pos: position{line: 806, col: 70, offset: 33934},
							expr: &choiceExpr{
								pos: position{line: 1024, col: 7, offset: 41621},
								alternatives: []interface{}{
									&litMatcher{
										pos:        position{line: 1024, col: 7, offset: 41621},
										val:        " ",
										ignoreCase: false,
									},
									&actionExpr{
										pos: position{line: 1024, col: 13, offset: 41627},
										run: (*parser).callonExampleBlock219,
										expr: &litMatcher{
											pos:        position{line: 1024, col: 13, offset: 41627},
											val:        "\t",
											ignoreCase: false,
										},
									},
								},
							},
						},
						&choiceExpr{
							pos: position{line: 1028, col: 12, offset: 41683},
							alternatives: []interface{}{
								&litMatcher{
									pos:        position{line: 1028, col: 12, offset: 41683},
									val:        "\r\n",
									ignoreCase: false,
								},
								&charClassMatcher{
									pos:        position{line: 1028, col: 21, offset: 41692},
									val:        "[\\r\\n]",
									chars:      []rune{'\r', '\n'},
									ignoreCase: false,
									inverted:   false,
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 806, col: 82, offset: 33946},
							label: "content",
							expr: &zeroOrMoreExpr{
								pos: position{line: 806, col: 90, offset: 33954},
								expr: &choiceExpr{
									pos: position{line: 806, col: 91, offset: 33955},
									alternatives: []interface{}{
										&ruleRefExpr{
											pos:  position{line: 806, col: 91, offset: 33955},
											name: "List",
										},
										&ruleRefExpr{
											pos:  position{line: 806, col: 98, offset: 33962},
											name: "BlockParagraph",
										},
										&actionExpr{
											pos: position{line: 991, col: 14, offset: 40968},
											run: (*parser).callonExampleBlock229,
											expr: &seqExpr{
												pos: position{line: 991, col: 14, offset: 40968},
												exprs: []interface{}{
													&notExpr{
														pos: position{line: 991, col: 14, offset: 40968},
														expr: &notExpr{
															pos: position{line: 1030, col: 8, offset: 41712},
															expr: &anyMatcher{
																line: 1030, col: 9, offset: 41713,
															},
														},
													},
													&zeroOrMoreExpr{
														pos: position{line: 991, col: 19, offset: 40973},
														expr: &choiceExpr{
															pos: position{line: 1024, col: 7, offset: 41621},
															alternatives: []interface{}{
																&litMatcher{
																	pos:        position{line: 1024, col: 7, offset: 41621},
																	val:        " ",
																	ignoreCase: false,
																},
																&actionExpr{
																	pos: position{line: 1024, col: 13, offset: 41627},
																	run: (*parser).callonExampleBlock237,
																	expr: &litMatcher{
																		pos:        position{line: 1024, col: 13, offset: 41627},
																		val:        "\t",
																		ignoreCase: false,
																	},
																},
															},
														},
													},
													&choiceExpr{
														pos: position{line: 1032, col: 8, offset: 41723},
														alternatives: []interface{}{
															&litMatcher{
																pos:        position{line: 1028, col: 12, offset: 41683},
																val:        "\r\n",
																ignoreCase: false,
															},
															&charClassMatcher{
																pos:        position{line: 1028, col: 21, offset: 41692},
																val:        "[\\r\\n]",
																chars:      []rune{'\r', '\n'},
																ignoreCase: false,
																inverted:   false,
															},
															&notExpr{
																pos: position{line: 1030, col: 8, offset: 41712},
																expr: &anyMatcher{
																	line: 1030, col: 9, offset: 41713,
																},
															},
														},
													},
												},
											},
										},
									},
								},
							},
						},
						&choiceExpr{
							pos: position{line: 806, col: 129, offset: 33993},
							alternatives: []interface{}{
								&seqExpr{
									pos: position{line: 806, col: 130, offset: 33994},
									exprs: []interface{}{
										&litMatcher{
											pos:        position{line: 804, col: 26, offset: 33857},
											val:        "====",
											ignoreCase: false,
										},
										&zeroOrMoreExpr{
											pos: position{line: 806, col: 152, offset: 34016},
											expr: &choiceExpr{
												pos: position{line: 1024, col: 7, offset: 41621},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1024, col: 7, offset: 41621},
														val:        " ",
														ignoreCase: false,
													},
													&actionExpr{
														pos: position{line: 1024, col: 13, offset: 41627},
														run: (*parser).callonExampleBlock250,
														expr: &litMatcher{
															pos:        position{line: 1024, col: 13, offset: 41627},
															val:        "\t",
															ignoreCase: false,
														},
													},
												},
											},
										},
										&choiceExpr{
											pos: position{line: 1032, col: 8, offset: 41723},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 1028, col: 12, offset: 41683},
													val:        "\r\n",
													ignoreCase: false,
												},
												&charClassMatcher{
													pos:        position{line: 1028, col: 21, offset: 41692},
													val:        "[\\r\\n]",
													chars:      []rune{'\r', '\n'},
													ignoreCase: false,
													inverted:   false,
												},
												&notExpr{
													pos: position{line: 1030, col: 8, offset: 41712},
													expr: &anyMatcher{
														line: 1030, col: 9, offset: 41713,
													},
												},
											},
										},
									},
								},
								&notExpr{
									pos: position{line: 1030, col: 8, offset: 41712},
									expr: &anyMatcher{
										line: 1030, col: 9, offset: 41713,
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "BlockParagraph",
			pos:  position{line: 811, col: 1, offset: 34170},
			expr: &actionExpr{
				pos: position{line: 811, col: 20, offset: 34189},
				run: (*parser).callonBlockParagraph1,
				expr: &labeledExpr{
					pos:   position{line: 811, col: 20, offset: 34189},
					label: "lines",
					expr: &oneOrMoreExpr{
						pos: position{line: 811, col: 26, offset: 34195},
						expr: &ruleRefExpr{
							pos:  position{line: 811, col: 27, offset: 34196},
							name: "BlockParagraphLine",
						},
					},
				},
			},
		},
		{
			name: "BlockParagraphLine",
			pos:  position{line: 815, col: 1, offset: 34281},
			expr: &actionExpr{
				pos: position{line: 815, col: 23, offset: 34303},
				run: (*parser).callonBlockParagraphLine1,
				expr: &seqExpr{
					pos: position{line: 815, col: 23, offset: 34303},
					exprs: []interface{}{
						&notExpr{
							pos: position{line: 815, col: 23, offset: 34303},
							expr: &actionExpr{
								pos: position{line: 405, col: 26, offset: 14999},
								run: (*parser).callonBlockParagraphLine4,
								expr: &seqExpr{
									pos: position{line: 405, col: 26, offset: 14999},
									exprs: []interface{}{
										&zeroOrMoreExpr{
											pos: position{line: 405, col: 26, offset: 14999},
											expr: &choiceExpr{
												pos: position{line: 1024, col: 7, offset: 41621},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1024, col: 7, offset: 41621},
														val:        " ",
														ignoreCase: false,
													},
													&actionExpr{
														pos: position{line: 1024, col: 13, offset: 41627},
														run: (*parser).callonBlockParagraphLine9,
														expr: &litMatcher{
															pos:        position{line: 1024, col: 13, offset: 41627},
															val:        "\t",
															ignoreCase: false,
														},
													},
												},
											},
										},
										&labeledExpr{
											pos:   position{line: 405, col: 30, offset: 15003},
											label: "prefix",
											expr: &choiceExpr{
												pos: position{line: 407, col: 5, offset: 15058},
												alternatives: []interface{}{
													&actionExpr{
														pos: position{line: 407, col: 5, offset: 15058},
														run: (*parser).callonBlockParagraphLine13,
														expr: &litMatcher{
															pos:        position{line: 407, col: 5, offset: 15058},
															val:        ".....",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 409, col: 9, offset: 15171},
														run: (*parser).callonBlockParagraphLine15,
														expr: &litMatcher{
															pos:        position{line: 409, col: 9, offset: 15171},
															val:        "....",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 411, col: 9, offset: 15282},
														run: (*parser).callonBlockParagraphLine17,
														expr: &litMatcher{
															pos:        position{line: 411, col: 9, offset: 15282},
															val:        "...",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 413, col: 9, offset: 15391},
														run: (*parser).callonBlockParagraphLine19,
														expr: &litMatcher{
															pos:        position{line: 413, col: 9, offset: 15391},
															val:        "..",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 415, col: 9, offset: 15498},
														run: (*parser).callonBlockParagraphLine21,
														expr: &litMatcher{
															pos:        position{line: 415, col: 9, offset: 15498},
															val:        ".",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 418, col: 9, offset: 15625},
														run: (*parser).callonBlockParagraphLine23,
														expr: &seqExpr{
															pos: position{line: 418, col: 9, offset: 15625},
															exprs: []interface{}{
																&oneOrMoreExpr{
																	pos: position{line: 418, col: 9, offset: 15625},
																	expr: &charClassMatcher{
																		pos:        position{line: 418, col: 10, offset: 15626},
																		val:        "[0-9]",
																		ranges:     []rune{'0', '9'},
																		ignoreCase: false,
																		inverted:   false,
																	},
																},
																&litMatcher{
																	pos:        position{line: 418, col: 18, offset: 15634},
																	val:        ".",
																	ignoreCase: false,
																},
															},
														},
													},
													&actionExpr{
														pos: position{line: 420, col: 9, offset: 15737},
														run: (*parser).callonBlockParagraphLine28,
														expr: &seqExpr{
															pos: position{line: 420, col: 9, offset: 15737},
															exprs: []interface{}{
																&oneOrMoreExpr{
																	pos: position{line: 420, col: 9, offset: 15737},
																	expr: &charClassMatcher{
																		pos:        position{line: 420, col: 10, offset: 15738},
																		val:        "[a-z]",
																		ranges:     []rune{'a', 'z'},
																		ignoreCase: false,
																		inverted:   false,
																	},
																},
																&litMatcher{
																	pos:        position{line: 420, col: 18, offset: 15746},
																	val:        ".",
																	ignoreCase: false,
																},
															},
														},
													},
													&actionExpr{
														pos: position{line: 422, col: 9, offset: 15852},
														run: (*parser).callonBlockParagraphLine33,
														expr: &seqExpr{
															pos: position{line: 422, col: 9, offset: 15852},
															exprs: []interface{}{
																&oneOrMoreExpr{
																	pos: position{line: 422, col: 9, offset: 15852},
																	expr: &charClassMatcher{
																		pos:        position{line: 422, col: 10, offset: 15853},
																		val:        "[A-Z]",
																		ranges:     []rune{'A', 'Z'},
																		ignoreCase: false,
																		inverted:   false,
																	},
																},
																&litMatcher{
																	pos:        position{line: 422, col: 18, offset: 15861},
																	val:        ".",
																	ignoreCase: false,
																},
															},
														},
													},
													&actionExpr{
														pos: position{line: 424, col: 9, offset: 15967},
														run: (*parser).callonBlockParagraphLine38,
														expr: &seqExpr{
															pos: position{line: 424, col: 9, offset: 15967},
															exprs: []interface{}{
																&oneOrMoreExpr{
																	pos: position{line: 424, col: 9, offset: 15967},
																	expr: &charClassMatcher{
																		pos:        position{line: 424, col: 10, offset: 15968},
																		val:        "[a-z]",
																		ranges:     []rune{'a', 'z'},
																		ignoreCase: false,
																		inverted:   false,
																	},
																},
																&litMatcher{
																	pos:        position{line: 424, col: 18, offset: 15976},
																	val:        ")",
																	ignoreCase: false,
																},
															},
														},
													},
													&actionExpr{
														pos: position{line: 426, col: 9, offset: 16082},
														run: (*parser).callonBlockParagraphLine43,
														expr: &seqExpr{
															pos: position{line: 426, col: 9, offset: 16082},
															exprs: []interface{}{
																&oneOrMoreExpr{
																	pos: position{line: 426, col: 9, offset: 16082},
																	expr: &charClassMatcher{
																		pos:        position{line: 426, col: 10, offset: 16083},
																		val:        "[A-Z]",
																		ranges:     []rune{'A', 'Z'},
																		ignoreCase: false,
																		inverted:   false,
																	},
																},
																&litMatcher{
																	pos:        position{line: 426, col: 18, offset: 16091},
																	val:        ")",
																	ignoreCase: false,
																},
															},
														},
													},
												},
											},
										},
										&oneOrMoreExpr{
											pos: position{line: 428, col: 8, offset: 16196},
											expr: &choiceExpr{
												pos: position{line: 1024, col: 7, offset: 41621},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1024, col: 7, offset: 41621},
														val:        " ",
														ignoreCase: false,
													},
													&actionExpr{
														pos: position{line: 1024, col: 13, offset: 41627},
														run: (*parser).callonBlockParagraphLine51,
														expr: &litMatcher{
															pos:        position{line: 1024, col: 13, offset: 41627},
															val:        "\t",
															ignoreCase: false,
														},
													},
												},
											},
										},
									},
								},
							},
						},
						&notExpr{
							pos: position{line: 816, col: 9, offset: 34337},
							expr: &actionExpr{
								pos: position{line: 444, col: 5, offset: 16854},
								run: (*parser).callonBlockParagraphLine54,
								expr: &seqExpr{
									pos: position{line: 444, col: 5, offset: 16854},
									exprs: []interface{}{
										&zeroOrMoreExpr{
											pos: position{line: 444, col: 5, offset: 16854},
											expr: &choiceExpr{
												pos: position{line: 1024, col: 7, offset: 41621},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1024, col: 7, offset: 41621},
														val:        " ",
														ignoreCase: false,
													},
													&actionExpr{
														pos: position{line: 1024, col: 13, offset: 41627},
														run: (*parser).callonBlockParagraphLine59,
														expr: &litMatcher{
															pos:        position{line: 1024, col: 13, offset: 41627},
															val:        "\t",
															ignoreCase: false,
														},
													},
												},
											},
										},
										&labeledExpr{
											pos:   position{line: 444, col: 9, offset: 16858},
											label: "prefix",
											expr: &choiceExpr{
												pos: position{line: 445, col: 9, offset: 16875},
												alternatives: []interface{}{
													&actionExpr{
														pos: position{line: 445, col: 9, offset: 16875},
														run: (*parser).callonBlockParagraphLine63,
														expr: &litMatcher{
															pos:        position{line: 445, col: 9, offset: 16875},
															val:        "*****",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 448, col: 11, offset: 17044},
														run: (*parser).callonBlockParagraphLine65,
														expr: &litMatcher{
															pos:        position{line: 448, col: 11, offset: 17044},
															val:        "****",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 451, col: 11, offset: 17213},
														run: (*parser).callonBlockParagraphLine67,
														expr: &litMatcher{
															pos:        position{line: 451, col: 11, offset: 17213},
															val:        "***",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 454, col: 11, offset: 17382},
														run: (*parser).callonBlockParagraphLine69,
														expr: &litMatcher{
															pos:        position{line: 454, col: 11, offset: 17382},
															val:        "**",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 457, col: 11, offset: 17548},
														run: (*parser).callonBlockParagraphLine71,
														expr: &litMatcher{
															pos:        position{line: 457, col: 11, offset: 17548},
															val:        "*",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 460, col: 11, offset: 17712},
														run: (*parser).callonBlockParagraphLine73,
														expr: &litMatcher{
															pos:        position{line: 460, col: 11, offset: 17712},
															val:        "-",
															ignoreCase: false,
														},
													},
												},
											},
										},
										&oneOrMoreExpr{
											pos: position{line: 462, col: 12, offset: 17859},
											expr: &choiceExpr{
												pos: position{line: 1024, col: 7, offset: 41621},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1024, col: 7, offset: 41621},
														val:        " ",
														ignoreCase: false,
													},
													&actionExpr{
														pos: position{line: 1024, col: 13, offset: 41627},
														run: (*parser).callonBlockParagraphLine78,
														expr: &litMatcher{
															pos:        position{line: 1024, col: 13, offset: 41627},
															val:        "\t",
															ignoreCase: false,
														},
													},
												},
											},
										},
									},
								},
							},
						},
						&notExpr{
							pos: position{line: 817, col: 9, offset: 34373},
							expr: &seqExpr{
								pos: position{line: 817, col: 11, offset: 34375},
								exprs: []interface{}{
									&actionExpr{
										pos: position{line: 480, col: 24, offset: 18695},
										run: (*parser).callonBlockParagraphLine82,
										expr: &zeroOrMoreExpr{
											pos: position{line: 480, col: 24, offset: 18695},
											expr: &seqExpr{
												pos: position{line: 480, col: 25, offset: 18696},
												exprs: []interface{}{
													&notExpr{
														pos: position{line: 480, col: 25, offset: 18696},
														expr: &choiceExpr{
															pos: position{line: 1028, col: 12, offset: 41683},
															alternatives: []interface{}{
																&litMatcher{
																	pos:        position{line: 1028, col: 12, offset: 41683},
																	val:        "\r\n",
																	ignoreCase: false,
																},
																&charClassMatcher{
																	pos:        position{line: 1028, col: 21, offset: 41692},
																	val:        "[\\r\\n]",
																	chars:      []rune{'\r', '\n'},
																	ignoreCase: false,
																	inverted:   false,
																},
															},
														},
													},
													&notExpr{
														pos: position{line: 480, col: 34, offset: 18705},
														expr: &litMatcher{
															pos:        position{line: 480, col: 35, offset: 18706},
															val:        "::",
															ignoreCase: false,
														},
													},
													&anyMatcher{
														line: 480, col: 40, offset: 18711,
													},
												},
											},
										},
									},
									&litMatcher{
										pos:        position{line: 485, col: 30, offset: 18841},
										val:        "::",
										ignoreCase: false,
									},
									&oneOrMoreExpr{
										pos: position{line: 485, col: 35, offset: 18846},
										expr: &choiceExpr{
											pos: position{line: 485, col: 36, offset: 18847},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 1024, col: 7, offset: 41621},
													val:        " ",
													ignoreCase: false,
												},
												&actionExpr{
													pos: position{line: 1024, col: 13, offset: 41627},
													run: (*parser).callonBlockParagraphLine96,
													expr: &litMatcher{
														pos:        position{line: 1024, col: 13, offset: 41627},
														val:        "\t",
														ignoreCase: false,
													},
												},
												&litMatcher{
													pos:        position{line: 1028, col: 12, offset: 41683},
													val:        "\r\n",
													ignoreCase: false,
												},
												&charClassMatcher{
													pos:        position{line: 1028, col: 21, offset: 41692},
													val:        "[\\r\\n]",
													chars:      []rune{'\r', '\n'},
													ignoreCase: false,
													inverted:   false,
												},
											},
										},
									},
								},
							},
						},
						&notExpr{
							pos: position{line: 818, col: 9, offset: 34430},
							expr: &actionExpr{
								pos: position{line: 390, col: 25, offset: 14445},
								run: (*parser).callonBlockParagraphLine101,
								expr: &seqExpr{
									pos: position{line: 390, col: 25, offset: 14445},
									exprs: []interface{}{
										&litMatcher{
											pos:        position{line: 390, col: 25, offset: 14445},
											val:        "+",
											ignoreCase: false,
										},
										&zeroOrMoreExpr{
											pos: position{line: 390, col: 29, offset: 14449},
											expr: &choiceExpr{
												pos: position{line: 1024, col: 7, offset: 41621},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1024, col: 7, offset: 41621},
														val:        " ",
														ignoreCase: false,
													},
													&actionExpr{
														pos: position{line: 1024, col: 13, offset: 41627},
														run: (*parser).callonBlockParagraphLine107,
														expr: &litMatcher{
															pos:        position{line: 1024, col: 13, offset: 41627},
															val:        "\t",
															ignoreCase: false,
														},
													},
												},
											},
										},
										&choiceExpr{
											pos: position{line: 1032, col: 8, offset: 41723},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 1028, col: 12, offset: 41683},
													val:        "\r\n",
													ignoreCase: false,
												},
												&charClassMatcher{
													pos:        position{line: 1028, col: 21, offset: 41692},
													val:        "[\\r\\n]",
													chars:      []rune{'\r', '\n'},
													ignoreCase: false,
													inverted:   false,
												},
												&notExpr{
													pos: position{line: 1030, col: 8, offset: 41712},
													expr: &anyMatcher{
														line: 1030, col: 9, offset: 41713,
													},
												},
											},
										},
									},
								},
							},
						},
						&notExpr{
							pos: position{line: 819, col: 9, offset: 34463},
							expr: &choiceExpr{
								pos: position{line: 763, col: 19, offset: 31912},
								alternatives: []interface{}{
									&litMatcher{
										pos:        position{line: 968, col: 26, offset: 40226},
										val:        "....",
										ignoreCase: false,
									},
									&litMatcher{
										pos:        position{line: 771, col: 25, offset: 32329},
										val:        "```",
										ignoreCase: false,
									},
									&litMatcher{
										pos:        position{line: 782, col: 26, offset: 32881},
										val:        "----",
										ignoreCase: false,
									},
									&litMatcher{
										pos:        position{line: 804, col: 26, offset: 33857},
										val:        "====",
										ignoreCase: false,
									},
									&litMatcher{
										pos:        position{line: 925, col: 26, offset: 38379},
										val:        "////",
										ignoreCase: false,
									},
									&litMatcher{
										pos:        position{line: 827, col: 24, offset: 34755},
										val:        "____",
										ignoreCase: false,
									},
									&litMatcher{
										pos:        position{line: 881, col: 26, offset: 36707},
										val:        "****",
										ignoreCase: false,
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 820, col: 9, offset: 34490},
							label: "line",
							expr: &ruleRefExpr{
								pos:  position{line: 820, col: 15, offset: 34496},
								name: "InlineElements",
							},
						},
					},
				},
			},
		},
		{
			name: "QuoteBlock",
			pos:  position{line: 829, col: 1, offset: 34788},
			expr: &actionExpr{
				pos: position{line: 829, col: 15, offset: 34802},
				run: (*parser).callonQuoteBlock1,
				expr: &seqExpr{
					pos: position{line: 829, col: 15, offset: 34802},
					exprs: []interface{}{
						&labeledExpr{
							pos:   position{line: 829, col: 15, offset: 34802},
							label: "attributes",
							expr: &oneOrMoreExpr{
								pos: position{line: 829, col: 26, offset: 34813},
								expr: &actionExpr{
									pos: position{line: 837, col: 5, offset: 35111},
									run: (*parser).callonQuoteBlock5,
									expr: &seqExpr{
										pos: position{line: 837, col: 5, offset: 35111},
										exprs: []interface{}{
											&labeledExpr{
												pos:   position{line: 837, col: 5, offset: 35111},
												label: "attribute",
												expr: &choiceExpr{
													pos: position{line: 203, col: 20, offset: 7415},
													alternatives: []interface{}{
														&actionExpr{
															pos: position{line: 203, col: 20, offset: 7415},
															run: (*parser).callonQuoteBlock9,
															expr: &seqExpr{
																pos: position{line: 203, col: 20, offset: 7415},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 203, col: 20, offset: 7415},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 203, col: 24, offset: 7419},
																		label: "kind",
																		expr: &actionExpr{
																			pos: position{line: 215, col: 14, offset: 7925},
																			run: (*parser).callonQuoteBlock13,
																			expr: &seqExpr{
																				pos: position{line: 215, col: 14, offset: 7925},
																				exprs: []interface{}{
																					&notExpr{
																						pos: position{line: 215, col: 14, offset: 7925},
																						expr: &actionExpr{
																							pos: position{line: 975, col: 16, offset: 40537},
																							run: (*parser).callonQuoteBlock16,
																							expr: &litMatcher{
																								pos:        position{line: 975, col: 16, offset: 40537},
																								val:        "literal",
																								ignoreCase: false,
																							},
																						},
																					},
																					&notExpr{
																						pos: position{line: 215, col: 27, offset: 7938},
																						expr: &actionExpr{
																							pos: position{line: 231, col: 14, offset: 8674},
																							run: (*parser).callonQuoteBlock19,
																							expr: &litMatcher{
																								pos:        position{line: 231, col: 14, offset: 8674},
																								val:        "verse",
																								ignoreCase: false,
																							},
																						},
																					},
																					&zeroOrMoreExpr{
																						pos: position{line: 215, col: 38, offset: 7949},
																						expr: &seqExpr{
																							pos: position{line: 215, col: 39, offset: 7950},
																							exprs: []interface{}{
																								&notExpr{
																									pos: position{line: 215, col: 39, offset: 7950},
																									expr: &choiceExpr{
																										pos: position{line: 1032, col: 8, offset: 41723},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1028, col: 12, offset: 41683},
																												val:        "\r\n",
																												ignoreCase: false,
																											},
																											&charClassMatcher{
																												pos:        position{line: 1028, col: 21, offset: 41692},
																												val:        "[\\r\\n]",
																												chars:      []rune{'\r', '\n'},
																												ignoreCase: false,
																												inverted:   false,
																											},
																											&notExpr{
																												pos: position{line: 1030, col: 8, offset: 41712},
																												expr: &anyMatcher{
																													line: 1030, col: 9, offset: 41713,
																												},
																											},
																										},
																									},
																								},
																								&notExpr{
																									pos: position{line: 215, col: 44, offset: 7955},
																									expr: &choiceExpr{
																										pos: position{line: 1024, col: 7, offset: 41621},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1024, col: 7, offset: 41621},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 1024, col: 13, offset: 41627},
																												run: (*parser).callonQuoteBlock32,
																												expr: &litMatcher{
																													pos:        position{line: 1024, col: 13, offset: 41627},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																								&notExpr{
																									pos: position{line: 215, col: 48, offset: 7959},
																									expr: &litMatcher{
																										pos:        position{line: 215, col: 49, offset: 7960},
																										val:        ",",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 215, col: 53, offset: 7964},
																									expr: &litMatcher{
																										pos:        position{line: 215, col: 54, offset: 7965},
																										val:        "]",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 215, col: 58, offset: 7969},
																									expr: &litMatcher{
																										pos:        position{line: 215, col: 59, offset: 7970},
																										val:        "#",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 215, col: 63, offset: 7974},
																									expr: &litMatcher{
																										pos:        position{line: 215, col: 64, offset: 7975},
																										val:        "=",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 215, col: 68, offset: 7979},
																									expr: &choiceExpr{
																										pos: position{line: 494, col: 19, offset: 19245},
																										alternatives: []interface{}{
																											&actionExpr{
																												pos: position{line: 494, col: 19, offset: 19245},
																												run: (*parser).callonQuoteBlock44,
																												expr: &litMatcher{
																													pos:        position{line: 494, col: 19, offset: 19245},
																													val:        "TIP",
																													ignoreCase: false,
																												},
																											},
																											&actionExpr{
																												pos: position{line: 496, col: 5, offset: 19283},
																												run: (*parser).callonQuoteBlock46,
																												expr: &litMatcher{
																													pos:        position{line: 496, col: 5, offset: 19283},
																													val:        "NOTE",
																													ignoreCase: false,
																												},
																											},
																											&actionExpr{
																												pos: position{line: 498, col: 5, offset: 19323},
																												run: (*parser).callonQuoteBlock48,
																												expr: &litMatcher{
																													pos:        position{line: 498, col: 5, offset: 19323},
																													val:        "IMPORTANT",
																													ignoreCase: false,
																												},
																											},
																											&actionExpr{
																												pos: position{line: 500, col: 5, offset: 19373},
																												run: (*parser).callonQuoteBlock50,
																												expr: &litMatcher{
																													pos:        position{line: 500, col: 5, offset: 19373},
																													val:        "WARNING",
																													ignoreCase: false,
																												},
																											},
																											&actionExpr{
																												pos: position{line: 502, col: 5, offset: 19419},
																												run: (*parser).callonQuoteBlock52,
																												expr: &litMatcher{
																													pos:        position{line: 502, col: 5, offset: 19419},
																													val:        "CAUTION",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																								&anyMatcher{
																									line: 215, col: 84, offset: 7995,
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&zeroOrMoreExpr{
																		pos: position{line: 203, col: 41, offset: 7436},
																		expr: &choiceExpr{
																			pos: position{line: 1024, col: 7, offset: 41621},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1024, col: 7, offset: 41621},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1024, col: 13, offset: 41627},
																					run: (*parser).callonQuoteBlock58,
																					expr: &litMatcher{
																						pos:        position{line: 1024, col: 13, offset: 41627},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 203, col: 45, offset: 7440},
																		val:        ",",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 203, col: 49, offset: 7444},
																		label: "author",
																		expr: &actionExpr{
																			pos: position{line: 235, col: 16, offset: 8733},
																			run: (*parser).callonQuoteBlock62,
																			expr: &zeroOrMoreExpr{
																				pos: position{line: 235, col: 16, offset: 8733},
																				expr: &seqExpr{
																					pos: position{line: 235, col: 17, offset: 8734},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 235, col: 17, offset: 8734},
																							expr: &choiceExpr{
																								pos: position{line: 1032, col: 8, offset: 41723},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1028, col: 12, offset: 41683},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 1028, col: 21, offset: 41692},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																									&notExpr{
																										pos: position{line: 1030, col: 8, offset: 41712},
																										expr: &anyMatcher{
																											line: 1030, col: 9, offset: 41713,
																										},
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 235, col: 22, offset: 8739},
																							expr: &litMatcher{
																								pos:        position{line: 235, col: 23, offset: 8740},
																								val:        ",",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 235, col: 27, offset: 8744},
																							expr: &litMatcher{
																								pos:        position{line: 235, col: 28, offset: 8745},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																						&anyMatcher{
																							line: 235, col: 32, offset: 8749,
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 203, col: 70, offset: 7465},
																		val:        ",",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 203, col: 74, offset: 7469},
																		label: "title",
																		expr: &actionExpr{
																			pos: position{line: 239, col: 15, offset: 8803},
																			run: (*parser).callonQuoteBlock78,
																			expr: &zeroOrMoreExpr{
																				pos: position{line: 239, col: 15, offset: 8803},
																				expr: &seqExpr{
																					pos: position{line: 239, col: 16, offset: 8804},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 239, col: 16, offset: 8804},
																							expr: &choiceExpr{
																								pos: position{line: 1032, col: 8, offset: 41723},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1028, col: 12, offset: 41683},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 1028, col: 21, offset: 41692},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																									&notExpr{
																										pos: position{line: 1030, col: 8, offset: 41712},
																										expr: &anyMatcher{
																											line: 1030, col: 9, offset: 41713,
																										},
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 239, col: 21, offset: 8809},
																							expr: &litMatcher{
																								pos:        position{line: 239, col: 22, offset: 8810},
																								val:        ",",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 239, col: 26, offset: 8814},
																							expr: &litMatcher{
																								pos:        position{line: 239, col: 27, offset: 8815},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																						&anyMatcher{
																							line: 239, col: 31, offset: 8819,
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 203, col: 93, offset: 7488},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 207, col: 5, offset: 7631},
															run: (*parser).callonQuoteBlock93,
															expr: &seqExpr{
																pos: position{line: 207, col: 5, offset: 7631},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 207, col: 5, offset: 7631},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 207, col: 9, offset: 7635},
																		label: "kind",
																		expr: &actionExpr{
																			pos: position{line: 215, col: 14, offset: 7925},
																			run: (*parser).callonQuoteBlock97,
																			expr: &seqExpr{
																				pos: position{line: 215, col: 14, offset: 7925},
																				exprs: []interface{}{
																					&notExpr{
																						pos: position{line: 215, col: 14, offset: 7925},
																						expr: &actionExpr{
																							pos: position{line: 975, col: 16, offset: 40537},
																							run: (*parser).callonQuoteBlock100,
																							expr: &litMatcher{
																								pos:        position{line: 975, col: 16, offset: 40537},
																								val:        "literal",
																								ignoreCase: false,
																							},
																						},
																					},
																					&notExpr{
																						pos: position{line: 215, col: 27, offset: 7938},
																						expr: &actionExpr{
																							pos: position{line: 231, col: 14, offset: 8674},
																							run: (*parser).callonQuoteBlock103,
																							expr: &litMatcher{
																								pos:        position{line: 231, col: 14, offset: 8674},
																								val:        "verse",
																								ignoreCase: false,
																							},
																						},
																					},
																					&zeroOrMoreExpr{
																						pos: position{line: 215, col: 38, offset: 7949},
																						expr: &seqExpr{
																							pos: position{line: 215, col: 39, offset: 7950},
																							exprs: []interface{}{
																								&notExpr{
																									pos: position{line: 215, col: 39, offset: 7950},
																									expr: &choiceExpr{
																										pos: position{line: 1032, col: 8, offset: 41723},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1028, col: 12, offset: 41683},
																												val:        "\r\n",
																												ignoreCase: false,
																											},
																											&charClassMatcher{
																												pos:        position{line: 1028, col: 21, offset: 41692},
																												val:        "[\\r\\n]",
																												chars:      []rune{'\r', '\n'},
																												ignoreCase: false,
																												inverted:   false,
																											},
																											&notExpr{
																												pos: position{line: 1030, col: 8, offset: 41712},
																												expr: &anyMatcher{
																													line: 1030, col: 9, offset: 41713,
																												},
																											},
																										},
																									},
																								},
																								&notExpr{
																									pos: position{line: 215, col: 44, offset: 7955},
																									expr: &choiceExpr{
																										pos: position{line: 1024, col: 7, offset: 41621},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1024, col: 7, offset: 41621},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 1024, col: 13, offset: 41627},
																												run: (*parser).callonQuoteBlock116,
																												expr: &litMatcher{
																													pos:        position{line: 1024, col: 13, offset: 41627},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																								&notExpr{
																									pos: position{line: 215, col: 48, offset: 7959},
																									expr: &litMatcher{
																										pos:        position{line: 215, col: 49, offset: 7960},
																										val:        ",",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 215, col: 53, offset: 7964},
																									expr: &litMatcher{
																										pos:        position{line: 215, col: 54, offset: 7965},
																										val:        "]",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 215, col: 58, offset: 7969},
																									expr: &litMatcher{
																										pos:        position{line: 215, col: 59, offset: 7970},
																										val:        "#",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 215, col: 63, offset: 7974},
																									expr: &litMatcher{
																										pos:        position{line: 215, col: 64, offset: 7975},
																										val:        "=",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 215, col: 68, offset: 7979},
																									expr: &choiceExpr{
																										pos: position{line: 494, col: 19, offset: 19245},
																										alternatives: []interface{}{
																											&actionExpr{
																												pos: position{line: 494, col: 19, offset: 19245},
																												run: (*parser).callonQuoteBlock128,
																												expr: &litMatcher{
																													pos:        position{line: 494, col: 19, offset: 19245},
																													val:        "TIP",
																													ignoreCase: false,
																												},
																											},
																											&actionExpr{
																												pos: position{line: 496, col: 5, offset: 19283},
																												run: (*parser).callonQuoteBlock130,
																												expr: &litMatcher{
																													pos:        position{line: 496, col: 5, offset: 19283},
																													val:        "NOTE",
																													ignoreCase: false,
																												},
																											},
																											&actionExpr{
																												pos: position{line: 498, col: 5, offset: 19323},
																												run: (*parser).callonQuoteBlock132,
																												expr: &litMatcher{
																													pos:        position{line: 498, col: 5, offset: 19323},
																													val:        "IMPORTANT",
																													ignoreCase: false,
																												},
																											},
																											&actionExpr{
																												pos: position{line: 500, col: 5, offset: 19373},
																												run: (*parser).callonQuoteBlock134,
																												expr: &litMatcher{
																													pos:        position{line: 500, col: 5, offset: 19373},
																													val:        "WARNING",
																													ignoreCase: false,
																												},
																											},
																											&actionExpr{
																												pos: position{line: 502, col: 5, offset: 19419},
																												run: (*parser).callonQuoteBlock136,
																												expr: &litMatcher{
																													pos:        position{line: 502, col: 5, offset: 19419},
																													val:        "CAUTION",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																								&anyMatcher{
																									line: 215, col: 84, offset: 7995,
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&zeroOrMoreExpr{
																		pos: position{line: 207, col: 26, offset: 7652},
																		expr: &choiceExpr{
																			pos: position{line: 1024, col: 7, offset: 41621},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1024, col: 7, offset: 41621},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1024, col: 13, offset: 41627},
																					run: (*parser).callonQuoteBlock142,
																					expr: &litMatcher{
																						pos:        position{line: 1024, col: 13, offset: 41627},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 207, col: 30, offset: 7656},
																		val:        ",",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 207, col: 34, offset: 7660},
																		label: "author",
																		expr: &actionExpr{
																			pos: position{line: 235, col: 16, offset: 8733},
																			run: (*parser).callonQuoteBlock146,
																			expr: &zeroOrMoreExpr{
																				pos: position{line: 235, col: 16, offset: 8733},
																				expr: &seqExpr{
																					pos: position{line: 235, col: 17, offset: 8734},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 235, col: 17, offset: 8734},
																							expr: &choiceExpr{
																								pos: position{line: 1032, col: 8, offset: 41723},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1028, col: 12, offset: 41683},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 1028, col: 21, offset: 41692},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																									&notExpr{
																										pos: position{line: 1030, col: 8, offset: 41712},
																										expr: &anyMatcher{
																											line: 1030, col: 9, offset: 41713,
																										},
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 235, col: 22, offset: 8739},
																							expr: &litMatcher{
																								pos:        position{line: 235, col: 23, offset: 8740},
																								val:        ",",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 235, col: 27, offset: 8744},
																							expr: &litMatcher{
																								pos:        position{line: 235, col: 28, offset: 8745},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																						&anyMatcher{
																							line: 235, col: 32, offset: 8749,
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 207, col: 55, offset: 7681},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 211, col: 5, offset: 7812},
															run: (*parser).callonQuoteBlock161,
															expr: &seqExpr{
																pos: position{line: 211, col: 5, offset: 7812},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 211, col: 5, offset: 7812},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 211, col: 9, offset: 7816},
																		label: "kind",
																		expr: &actionExpr{
																			pos: position{line: 215, col: 14, offset: 7925},
																			run: (*parser).callonQuoteBlock165,
																			expr: &seqExpr{
																				pos: position{line: 215, col: 14, offset: 7925},
																				exprs: []interface{}{
																					&notExpr{
																						pos: position{line: 215, col: 14, offset: 7925},
																						expr: &actionExpr{
																							pos: position{line: 975, col: 16, offset: 40537},
																							run: (*parser).callonQuoteBlock168,
																							expr: &litMatcher{
																								pos:        position{line: 975, col: 16, offset: 40537},
																								val:        "literal",
																								ignoreCase: false,
																							},
																						},
																					},
																					&notExpr{
																						pos: position{line: 215, col: 27, offset: 7938},
																						expr: &actionExpr{
																							pos: position{line: 231, col: 14, offset: 8674},
																							run: (*parser).callonQuoteBlock171,
																							expr: &litMatcher{
																								pos:        position{line: 231, col: 14, offset: 8674},
																								val:        "verse",
																								ignoreCase: false,
																							},
																						},
																					},
																					&zeroOrMoreExpr{
																						pos: position{line: 215, col: 38, offset: 7949},
																						expr: &seqExpr{
																							pos: position{line: 215, col: 39, offset: 7950},
																							exprs: []interface{}{
																								&notExpr{
																									pos: position{line: 215, col: 39, offset: 7950},
																									expr: &choiceExpr{
																										pos: position{line: 1032, col: 8, offset: 41723},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1028, col: 12, offset: 41683},
																												val:        "\r\n",
																												ignoreCase: false,
																											},
																											&charClassMatcher{
																												pos:        position{line: 1028, col: 21, offset: 41692},
																												val:        "[\\r\\n]",
																												chars:      []rune{'\r', '\n'},
																												ignoreCase: false,
																												inverted:   false,
																											},
																											&notExpr{
																												pos: position{line: 1030, col: 8, offset: 41712},
																												expr: &anyMatcher{
																													line: 1030, col: 9, offset: 41713,
																												},
																											},
																										},
																									},
																								},
																								&notExpr{
																									pos: position{line: 215, col: 44, offset: 7955},
																									expr: &choiceExpr{
																										pos: position{line: 1024, col: 7, offset: 41621},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1024, col: 7, offset: 41621},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 1024, col: 13, offset: 41627},
																												run: (*parser).callonQuoteBlock184,
																												expr: &litMatcher{
																													pos:        position{line: 1024, col: 13, offset: 41627},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																								&notExpr{
																									pos: position{line: 215, col: 48, offset: 7959},
																									expr: &litMatcher{
																										pos:        position{line: 215, col: 49, offset: 7960},
																										val:        ",",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 215, col: 53, offset: 7964},
																									expr: &litMatcher{
																										pos:        position{line: 215, col: 54, offset: 7965},
																										val:        "]",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 215, col: 58, offset: 7969},
																									expr: &litMatcher{
																										pos:        position{line: 215, col: 59, offset: 7970},
																										val:        "#",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 215, col: 63, offset: 7974},
																									expr: &litMatcher{
																										pos:        position{line: 215, col: 64, offset: 7975},
																										val:        "=",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 215, col: 68, offset: 7979},
																									expr: &choiceExpr{
																										pos: position{line: 494, col: 19, offset: 19245},
																										alternatives: []interface{}{
																											&actionExpr{
																												pos: position{line: 494, col: 19, offset: 19245},
																												run: (*parser).callonQuoteBlock196,
																												expr: &litMatcher{
																													pos:        position{line: 494, col: 19, offset: 19245},
																													val:        "TIP",
																													ignoreCase: false,
																												},
																											},
																											&actionExpr{
																												pos: position{line: 496, col: 5, offset: 19283},
																												run: (*parser).callonQuoteBlock198,
																												expr: &litMatcher{
																													pos:        position{line: 496, col: 5, offset: 19283},
																													val:        "NOTE",
																													ignoreCase: false,
																												},
																											},
																											&actionExpr{
																												pos: position{line: 498, col: 5, offset: 19323},
																												run: (*parser).callonQuoteBlock200,
																												expr: &litMatcher{
																													pos:        position{line: 498, col: 5, offset: 19323},
																													val:        "IMPORTANT",
																													ignoreCase: false,
																												},
																											},
																											&actionExpr{
																												pos: position{line: 500, col: 5, offset: 19373},
																												run: (*parser).callonQuoteBlock202,
																												expr: &litMatcher{
																													pos:        position{line: 500, col: 5, offset: 19373},
																													val:        "WARNING",
																													ignoreCase: false,
																												},
																											},
																											&actionExpr{
																												pos: position{line: 502, col: 5, offset: 19419},
																												run: (*parser).callonQuoteBlock204,
																												expr: &litMatcher{
																													pos:        position{line: 502, col: 5, offset: 19419},
																													val:        "CAUTION",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																								&anyMatcher{
																									line: 215, col: 84, offset: 7995,
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&zeroOrMoreExpr{
																		pos: position{line: 211, col: 26, offset: 7833},
																		expr: &choiceExpr{
																			pos: position{line: 1024, col: 7, offset: 41621},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1024, col: 7, offset: 41621},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1024, col: 13, offset: 41627},
																					run: (*parser).callonQuoteBlock210,
																					expr: &litMatcher{
																						pos:        position{line: 1024, col: 13, offset: 41627},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 211, col: 30, offset: 7837},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
													},
												},
											},
											&zeroOrMoreExpr{
												pos: position{line: 837, col: 33, offset: 35139},
												expr: &choiceExpr{
													pos: position{line: 1024, col: 7, offset: 41621},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1024, col: 7, offset: 41621},
															val:        " ",
															ignoreCase: false,
														},
														&actionExpr{
															pos: position{line: 1024, col: 13, offset: 41627},
															run: (*parser).callonQuoteBlock216,
															expr: &litMatcher{
																pos:        position{line: 1024, col: 13, offset: 41627},
																val:        "\t",
																ignoreCase: false,
															},
														},
													},
												},
											},
											&choiceExpr{
												pos: position{line: 1032, col: 8, offset: 41723},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1028, col: 12, offset: 41683},
														val:        "\r\n",
														ignoreCase: false,
													},
													&charClassMatcher{
														pos:        position{line: 1028, col: 21, offset: 41692},
														val:        "[\\r\\n]",
														chars:      []rune{'\r', '\n'},
														ignoreCase: false,
														inverted:   false,
													},
													&notExpr{
														pos: position{line: 1030, col: 8, offset: 41712},
														expr: &anyMatcher{
															line: 1030, col: 9, offset: 41713,
														},
													},
												},
											},
										},
									},
								},
							},
						},
						&litMatcher{
							pos:        position{line: 827, col: 24, offset: 34755},
							val:        "____",
							ignoreCase: false,
						},
						&zeroOrMoreExpr{
							pos: position{line: 829, col: 70, offset: 34857},
							expr: &choiceExpr{
								pos: position{line: 1024, col: 7, offset: 41621},
								alternatives: []interface{}{
									&litMatcher{
										pos:        position{line: 1024, col: 7, offset: 41621},
										val:        " ",
										ignoreCase: false,
									},
									&actionExpr{
										pos: position{line: 1024, col: 13, offset: 41627},
										run: (*parser).callonQuoteBlock227,
										expr: &litMatcher{
											pos:        position{line: 1024, col: 13, offset: 41627},
											val:        "\t",
											ignoreCase: false,
										},
									},
								},
							},
						},
						&choiceExpr{
							pos: position{line: 1028, col: 12, offset: 41683},
							alternatives: []interface{}{
								&litMatcher{
									pos:        position{line: 1028, col: 12, offset: 41683},
									val:        "\r\n",
									ignoreCase: false,
								},
								&charClassMatcher{
									pos:        position{line: 1028, col: 21, offset: 41692},
									val:        "[\\r\\n]",
									chars:      []rune{'\r', '\n'},
									ignoreCase: false,
									inverted:   false,
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 829, col: 82, offset: 34869},
							label: "content",
							expr: &zeroOrMoreExpr{
								pos: position{line: 829, col: 90, offset: 34877},
								expr: &ruleRefExpr{
									pos:  position{line: 829, col: 91, offset: 34878},
									name: "QuoteBlockContent",
								},
							},
						},
						&choiceExpr{
							pos: position{line: 829, col: 113, offset: 34900},
							alternatives: []interface{}{
								&seqExpr{
									pos: position{line: 829, col: 114, offset: 34901},
									exprs: []interface{}{
										&litMatcher{
											pos:        position{line: 827, col: 24, offset: 34755},
											val:        "____",
											ignoreCase: false,
										},
										&zeroOrMoreExpr{
											pos: position{line: 829, col: 134, offset: 34921},
											expr: &choiceExpr{
												pos: position{line: 1024, col: 7, offset: 41621},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1024, col: 7, offset: 41621},
														val:        " ",
														ignoreCase: false,
													},
													&actionExpr{
														pos: position{line: 1024, col: 13, offset: 41627},
														run: (*parser).callonQuoteBlock241,
														expr: &litMatcher{
															pos:        position{line: 1024, col: 13, offset: 41627},
															val:        "\t",
															ignoreCase: false,
														},
													},
												},
											},
										},
										&choiceExpr{
											pos: position{line: 1032, col: 8, offset: 41723},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 1028, col: 12, offset: 41683},
													val:        "\r\n",
													ignoreCase: false,
												},
												&charClassMatcher{
													pos:        position{line: 1028, col: 21, offset: 41692},
													val:        "[\\r\\n]",
													chars:      []rune{'\r', '\n'},
													ignoreCase: false,
													inverted:   false,
												},
												&notExpr{
													pos: position{line: 1030, col: 8, offset: 41712},
													expr: &anyMatcher{
														line: 1030, col: 9, offset: 41713,
													},
												},
											},
										},
									},
								},
								&notExpr{
									pos: position{line: 1030, col: 8, offset: 41712},
									expr: &anyMatcher{
										line: 1030, col: 9, offset: 41713,
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "QuoteBlockContent",
			pos:  position{line: 844, col: 1, offset: 35271},
			expr: &actionExpr{
				pos: position{line: 845, col: 5, offset: 35297},
				run: (*parser).callonQuoteBlockContent1,
				expr: &seqExpr{
					pos: position{line: 845, col: 5, offset: 35297},
					exprs: []interface{}{
						&notExpr{
							pos: position{line: 845, col: 5, offset: 35297},
							expr: &litMatcher{
								pos:        position{line: 827, col: 24, offset: 34755},
								val:        "____",
								ignoreCase: false,
							},
						},
						&notExpr{
							pos: position{line: 845, col: 26, offset: 35318},
							expr: &notExpr{
								pos: position{line: 1030, col: 8, offset: 41712},
								expr: &anyMatcher{
									line: 1030, col: 9, offset: 41713,
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 845, col: 31, offset: 35323},
							label: "element",
							expr: &ruleRefExpr{
								pos:  position{line: 845, col: 40, offset: 35332},
								name: "DocumentBlock",
							},
						},
					},
				},
			},
		},
		{
			name: "VerseBlock",
			pos:  position{line: 854, col: 1, offset: 35628},
			expr: &actionExpr{
				pos: position{line: 854, col: 15, offset: 35642},
				run: (*parser).callonVerseBlock1,
				expr: &seqExpr{
					pos: position{line: 854, col: 15, offset: 35642},
					exprs: []interface{}{
						&labeledExpr{
							pos:   position{line: 854, col: 15, offset: 35642},
							label: "attributes",
							expr: &oneOrMoreExpr{
								pos: position{line: 854, col: 26, offset: 35653},
								expr: &actionExpr{
									pos: position{line: 862, col: 5, offset: 35950},
									run: (*parser).callonVerseBlock5,
									expr: &seqExpr{
										pos: position{line: 862, col: 5, offset: 35950},
										exprs: []interface{}{
											&labeledExpr{
												pos:   position{line: 862, col: 5, offset: 35950},
												label: "attribute",
												expr: &choiceExpr{
													pos: position{line: 219, col: 20, offset: 8164},
													alternatives: []interface{}{
														&actionExpr{
															pos: position{line: 219, col: 20, offset: 8164},
															run: (*parser).callonVerseBlock9,
															expr: &seqExpr{
																pos: position{line: 219, col: 20, offset: 8164},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 219, col: 20, offset: 8164},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 219, col: 24, offset: 8168},
																		label: "kind",
																		expr: &actionExpr{
																			pos: position{line: 231, col: 14, offset: 8674},
																			run: (*parser).callonVerseBlock13,
																			expr: &litMatcher{
																				pos:        position{line: 231, col: 14, offset: 8674},
																				val:        "verse",
																				ignoreCase: false,
																			},
																		},
																	},
																	&zeroOrMoreExpr{
																		pos: position{line: 219, col: 41, offset: 8185},
																		expr: &choiceExpr{
																			pos: position{line: 1024, col: 7, offset: 41621},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1024, col: 7, offset: 41621},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1024, col: 13, offset: 41627},
																					run: (*parser).callonVerseBlock18,
																					expr: &litMatcher{
																						pos:        position{line: 1024, col: 13, offset: 41627},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 219, col: 45, offset: 8189},
																		val:        ",",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 219, col: 49, offset: 8193},
																		label: "author",
																		expr: &actionExpr{
																			pos: position{line: 235, col: 16, offset: 8733},
																			run: (*parser).callonVerseBlock22,
																			expr: &zeroOrMoreExpr{
																				pos: position{line: 235, col: 16, offset: 8733},
																				expr: &seqExpr{
																					pos: position{line: 235, col: 17, offset: 8734},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 235, col: 17, offset: 8734},
																							expr: &choiceExpr{
																								pos: position{line: 1032, col: 8, offset: 41723},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1028, col: 12, offset: 41683},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 1028, col: 21, offset: 41692},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																									&notExpr{
																										pos: position{line: 1030, col: 8, offset: 41712},
																										expr: &anyMatcher{
																											line: 1030, col: 9, offset: 41713,
																										},
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 235, col: 22, offset: 8739},
																							expr: &litMatcher{
																								pos:        position{line: 235, col: 23, offset: 8740},
																								val:        ",",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 235, col: 27, offset: 8744},
																							expr: &litMatcher{
																								pos:        position{line: 235, col: 28, offset: 8745},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																						&anyMatcher{
																							line: 235, col: 32, offset: 8749,
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 219, col: 70, offset: 8214},
																		val:        ",",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 219, col: 74, offset: 8218},
																		label: "title",
																		expr: &actionExpr{
																			pos: position{line: 239, col: 15, offset: 8803},
																			run: (*parser).callonVerseBlock38,
																			expr: &zeroOrMoreExpr{
																				pos: position{line: 239, col: 15, offset: 8803},
																				expr: &seqExpr{
																					pos: position{line: 239, col: 16, offset: 8804},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 239, col: 16, offset: 8804},
																							expr: &choiceExpr{
																								pos: position{line: 1032, col: 8, offset: 41723},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1028, col: 12, offset: 41683},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 1028, col: 21, offset: 41692},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																									&notExpr{
																										pos: position{line: 1030, col: 8, offset: 41712},
																										expr: &anyMatcher{
																											line: 1030, col: 9, offset: 41713,
																										},
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 239, col: 21, offset: 8809},
																							expr: &litMatcher{
																								pos:        position{line: 239, col: 22, offset: 8810},
																								val:        ",",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 239, col: 26, offset: 8814},
																							expr: &litMatcher{
																								pos:        position{line: 239, col: 27, offset: 8815},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																						&anyMatcher{
																							line: 239, col: 31, offset: 8819,
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 219, col: 93, offset: 8237},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 223, col: 5, offset: 8380},
															run: (*parser).callonVerseBlock53,
															expr: &seqExpr{
																pos: position{line: 223, col: 5, offset: 8380},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 223, col: 5, offset: 8380},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 223, col: 9, offset: 8384},
																		label: "kind",
																		expr: &actionExpr{
																			pos: position{line: 231, col: 14, offset: 8674},
																			run: (*parser).callonVerseBlock57,
																			expr: &litMatcher{
																				pos:        position{line: 231, col: 14, offset: 8674},
																				val:        "verse",
																				ignoreCase: false,
																			},
																		},
																	},
																	&zeroOrMoreExpr{
																		pos: position{line: 223, col: 26, offset: 8401},
																		expr: &choiceExpr{
																			pos: position{line: 1024, col: 7, offset: 41621},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1024, col: 7, offset: 41621},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1024, col: 13, offset: 41627},
																					run: (*parser).callonVerseBlock62,
																					expr: &litMatcher{
																						pos:        position{line: 1024, col: 13, offset: 41627},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 223, col: 30, offset: 8405},
																		val:        ",",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 223, col: 34, offset: 8409},
																		label: "author",
																		expr: &actionExpr{
																			pos: position{line: 235, col: 16, offset: 8733},
																			run: (*parser).callonVerseBlock66,
																			expr: &zeroOrMoreExpr{
																				pos: position{line: 235, col: 16, offset: 8733},
																				expr: &seqExpr{
																					pos: position{line: 235, col: 17, offset: 8734},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 235, col: 17, offset: 8734},
																							expr: &choiceExpr{
																								pos: position{line: 1032, col: 8, offset: 41723},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1028, col: 12, offset: 41683},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 1028, col: 21, offset: 41692},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																									&notExpr{
																										pos: position{line: 1030, col: 8, offset: 41712},
																										expr: &anyMatcher{
																											line: 1030, col: 9, offset: 41713,
																										},
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 235, col: 22, offset: 8739},
																							expr: &litMatcher{
																								pos:        position{line: 235, col: 23, offset: 8740},
																								val:        ",",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 235, col: 27, offset: 8744},
																							expr: &litMatcher{
																								pos:        position{line: 235, col: 28, offset: 8745},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																						&anyMatcher{
																							line: 235, col: 32, offset: 8749,
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 223, col: 55, offset: 8430},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 227, col: 5, offset: 8561},
															run: (*parser).callonVerseBlock81,
															expr: &seqExpr{
																pos: position{line: 227, col: 5, offset: 8561},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 227, col: 5, offset: 8561},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 227, col: 9, offset: 8565},
																		label: "kind",
																		expr: &actionExpr{
																			pos: position{line: 231, col: 14, offset: 8674},
																			run: (*parser).callonVerseBlock85,
																			expr: &litMatcher{
																				pos:        position{line: 231, col: 14, offset: 8674},
																				val:        "verse",
																				ignoreCase: false,
																			},
																		},
																	},
																	&zeroOrMoreExpr{
																		pos: position{line: 227, col: 26, offset: 8582},
																		expr: &choiceExpr{
																			pos: position{line: 1024, col: 7, offset: 41621},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1024, col: 7, offset: 41621},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1024, col: 13, offset: 41627},
																					run: (*parser).callonVerseBlock90,
																					expr: &litMatcher{
																						pos:        position{line: 1024, col: 13, offset: 41627},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 227, col: 30, offset: 8586},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
													},
												},
											},
											&zeroOrMoreExpr{
												pos: position{line: 862, col: 33, offset: 35978},
												expr: &choiceExpr{
													pos: position{line: 1024, col: 7, offset: 41621},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1024, col: 7, offset: 41621},
															val:        " ",
															ignoreCase: false,
														},
														&actionExpr{
															pos: position{line: 1024, col: 13, offset: 41627},
															run: (*parser).callonVerseBlock96,
															expr: &litMatcher{
																pos:        position{line: 1024, col: 13, offset: 41627},
																val:        "\t",
																ignoreCase: false,
															},
														},
													},
												},
											},
											&choiceExpr{
												pos: position{line: 1032, col: 8, offset: 41723},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1028, col: 12, offset: 41683},
														val:        "\r\n",
														ignoreCase: false,
													},
													&charClassMatcher{
														pos:        position{line: 1028, col: 21, offset: 41692},
														val:        "[\\r\\n]",
														chars:      []rune{'\r', '\n'},
														ignoreCase: false,
														inverted:   false,
													},
													&notExpr{
														pos: position{line: 1030, col: 8, offset: 41712},
														expr: &anyMatcher{
															line: 1030, col: 9, offset: 41713,
														},
													},
												},
											},
										},
									},
								},
							},
						},
						&litMatcher{
							pos:        position{line: 827, col: 24, offset: 34755},
							val:        "____",
							ignoreCase: false,
						},
						&zeroOrMoreExpr{
							pos: position{line: 854, col: 70, offset: 35697},
							expr: &choiceExpr{
								pos: position{line: 1024, col: 7, offset: 41621},
								alternatives: []interface{}{
									&litMatcher{
										pos:        position{line: 1024, col: 7, offset: 41621},
										val:        " ",
										ignoreCase: false,
									},
									&actionExpr{
										pos: position{line: 1024, col: 13, offset: 41627},
										run: (*parser).callonVerseBlock107,
										expr: &litMatcher{
											pos:        position{line: 1024, col: 13, offset: 41627},
											val:        "\t",
											ignoreCase: false,
										},
									},
								},
							},
						},
						&choiceExpr{
							pos: position{line: 1028, col: 12, offset: 41683},
							alternatives: []interface{}{
								&litMatcher{
									pos:        position{line: 1028, col: 12, offset: 41683},
									val:        "\r\n",
									ignoreCase: false,
								},
								&charClassMatcher{
									pos:        position{line: 1028, col: 21, offset: 41692},
									val:        "[\\r\\n]",
									chars:      []rune{'\r', '\n'},
									ignoreCase: false,
									inverted:   false,
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 854, col: 82, offset: 35709},
							label: "content",
							expr: &zeroOrMoreExpr{
								pos: position{line: 854, col: 90, offset: 35717},
								expr: &ruleRefExpr{
									pos:  position{line: 854, col: 91, offset: 35718},
									name: "VerseBlockContent",
								},
							},
						},
						&choiceExpr{
							pos: position{line: 854, col: 112, offset: 35739},
							alternatives: []interface{}{
								&seqExpr{
									pos: position{line: 854, col: 113, offset: 35740},
									exprs: []interface{}{
										&litMatcher{
											pos:        position{line: 827, col: 24, offset: 34755},
											val:        "____",
											ignoreCase: false,
										},
										&zeroOrMoreExpr{
											pos: position{line: 854, col: 133, offset: 35760},
											expr: &choiceExpr{
												pos: position{line: 1024, col: 7, offset: 41621},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1024, col: 7, offset: 41621},
														val:        " ",
														ignoreCase: false,
													},
													&actionExpr{
														pos: position{line: 1024, col: 13, offset: 41627},
														run: (*parser).callonVerseBlock121,
														expr: &litMatcher{
															pos:        position{line: 1024, col: 13, offset: 41627},
															val:        "\t",
															ignoreCase: false,
														},
													},
												},
											},
										},
										&choiceExpr{
											pos: position{line: 1032, col: 8, offset: 41723},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 1028, col: 12, offset: 41683},
													val:        "\r\n",
													ignoreCase: false,
												},
												&charClassMatcher{
													pos:        position{line: 1028, col: 21, offset: 41692},
													val:        "[\\r\\n]",
													chars:      []rune{'\r', '\n'},
													ignoreCase: false,
													inverted:   false,
												},
												&notExpr{
													pos: position{line: 1030, col: 8, offset: 41712},
													expr: &anyMatcher{
														line: 1030, col: 9, offset: 41713,
													},
												},
											},
										},
									},
								},
								&notExpr{
									pos: position{line: 1030, col: 8, offset: 41712},
									expr: &anyMatcher{
										line: 1030, col: 9, offset: 41713,
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "VerseBlockContent",
			pos:  position{line: 866, col: 1, offset: 36027},
			expr: &actionExpr{
				pos: position{line: 866, col: 22, offset: 36048},
				run: (*parser).callonVerseBlockContent1,
				expr: &labeledExpr{
					pos:   position{line: 866, col: 22, offset: 36048},
					label: "lines",
					expr: &oneOrMoreExpr{
						pos: position{line: 866, col: 28, offset: 36054},
						expr: &ruleRefExpr{
							pos:  position{line: 866, col: 29, offset: 36055},
							name: "VerseBlockLine",
						},
					},
				},
			},
		},
		{
			name: "VerseBlockLine",
			pos:  position{line: 870, col: 1, offset: 36135},
			expr: &actionExpr{
				pos: position{line: 870, col: 19, offset: 36153},
				run: (*parser).callonVerseBlockLine1,
				expr: &seqExpr{
					pos: position{line: 870, col: 19, offset: 36153},
					exprs: []interface{}{
						&notExpr{
							pos: position{line: 870, col: 19, offset: 36153},
							expr: &litMatcher{
								pos:        position{line: 827, col: 24, offset: 34755},
								val:        "____",
								ignoreCase: false,
							},
						},
						&notExpr{
							pos: position{line: 870, col: 40, offset: 36174},
							expr: &notExpr{
								pos: position{line: 1030, col: 8, offset: 41712},
								expr: &anyMatcher{
									line: 1030, col: 9, offset: 41713,
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 870, col: 45, offset: 36179},
							label: "line",
							expr: &ruleRefExpr{
								pos:  position{line: 870, col: 51, offset: 36185},
								name: "VerseBlockLineContent",
							},
						},
						&choiceExpr{
							pos: position{line: 1032, col: 8, offset: 41723},
							alternatives: []interface{}{
								&litMatcher{
									pos:        position{line: 1028, col: 12, offset: 41683},
									val:        "\r\n",
									ignoreCase: false,
								},
								&charClassMatcher{
									pos:        position{line: 1028, col: 21, offset: 41692},
									val:        "[\\r\\n]",
									chars:      []rune{'\r', '\n'},
									ignoreCase: false,
									inverted:   false,
								},
								&notExpr{
									pos: position{line: 1030, col: 8, offset: 41712},
									expr: &anyMatcher{
										line: 1030, col: 9, offset: 41713,
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "VerseBlockLineContent",
			pos:  position{line: 874, col: 1, offset: 36261},
			expr: &actionExpr{
				pos: position{line: 874, col: 26, offset: 36286},
				run: (*parser).callonVerseBlockLineContent1,
				expr: &labeledExpr{
					pos:   position{line: 874, col: 26, offset: 36286},
					label: "elements",
					expr: &zeroOrMoreExpr{
						pos: position{line: 874, col: 35, offset: 36295},
						expr: &seqExpr{
							pos: position{line: 874, col: 36, offset: 36296},
							exprs: []interface{}{
								&notExpr{
									pos: position{line: 874, col: 36, offset: 36296},
									expr: &litMatcher{
										pos:        position{line: 827, col: 24, offset: 34755},
										val:        "____",
										ignoreCase: false,
									},
								},
								&notExpr{
									pos: position{line: 874, col: 57, offset: 36317},
									expr: &choiceExpr{
										pos: position{line: 1032, col: 8, offset: 41723},
										alternatives: []interface{}{
											&litMatcher{
												pos:        position{line: 1028, col: 12, offset: 41683},
												val:        "\r\n",
												ignoreCase: false,
											},
											&charClassMatcher{
												pos:        position{line: 1028, col: 21, offset: 41692},
												val:        "[\\r\\n]",
												chars:      []rune{'\r', '\n'},
												ignoreCase: false,
												inverted:   false,
											},
											&notExpr{
												pos: position{line: 1030, col: 8, offset: 41712},
												expr: &anyMatcher{
													line: 1030, col: 9, offset: 41713,
												},
											},
										},
									},
								},
								&zeroOrMoreExpr{
									pos: position{line: 874, col: 62, offset: 36322},
									expr: &choiceExpr{
										pos: position{line: 1024, col: 7, offset: 41621},
										alternatives: []interface{}{
											&litMatcher{
												pos:        position{line: 1024, col: 7, offset: 41621},
												val:        " ",
												ignoreCase: false,
											},
											&actionExpr{
												pos: position{line: 1024, col: 13, offset: 41627},
												run: (*parser).callonVerseBlockLineContent16,
												expr: &litMatcher{
													pos:        position{line: 1024, col: 13, offset: 41627},
													val:        "\t",
													ignoreCase: false,
												},
											},
										},
									},
								},
								&ruleRefExpr{
									pos:  position{line: 874, col: 66, offset: 36326},
									name: "InlineElement",
								},
								&zeroOrMoreExpr{
									pos: position{line: 874, col: 80, offset: 36340},
									expr: &choiceExpr{
										pos: position{line: 1024, col: 7, offset: 41621},
										alternatives: []interface{}{
											&litMatcher{
												pos:        position{line: 1024, col: 7, offset: 41621},
												val:        " ",
												ignoreCase: false,
											},
											&actionExpr{
												pos: position{line: 1024, col: 13, offset: 41627},
												run: (*parser).callonVerseBlockLineContent22,
												expr: &litMatcher{
													pos:        position{line: 1024, col: 13, offset: 41627},
													val:        "\t",
													ignoreCase: false,
												},
											},
										},
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "SidebarBlock",
			pos:  position{line: 883, col: 1, offset: 36715},
			expr: &actionExpr{
				pos: position{line: 883, col: 17, offset: 36731},
				run: (*parser).callonSidebarBlock1,
				expr: &seqExpr{
					pos: position{line: 883, col: 17, offset: 36731},
					exprs: []interface{}{
						&labeledExpr{
							pos:   position{line: 883, col: 17, offset: 36731},
							label: "attributes",
							expr: &zeroOrMoreExpr{
								pos: position{line: 883, col: 28, offset: 36742},
								expr: &actionExpr{
									pos: position{line: 136, col: 21, offset: 5188},
									run: (*parser).callonSidebarBlock5,
									expr: &seqExpr{
										pos: position{line: 136, col: 21, offset: 5188},
										exprs: []interface{}{
											&labeledExpr{
												pos:   position{line: 136, col: 21, offset: 5188},
												label: "attr",
												expr: &choiceExpr{
													pos: position{line: 136, col: 27, offset: 5194},
													alternatives: []interface{}{
														&actionExpr{
															pos: position{line: 145, col: 14, offset: 5645},
															run: (*parser).callonSidebarBlock9,
															expr: &labeledExpr{
																pos:   position{line: 145, col: 14, offset: 5645},
																label: "id",
																expr: &actionExpr{
																	pos: position{line: 151, col: 20, offset: 5775},
																	run: (*parser).callonSidebarBlock11,
																	expr: &seqExpr{
																		pos: position{line: 151, col: 20, offset: 5775},
																		exprs: []interface{}{
																			&litMatcher{
																				pos:        position{line: 151, col: 20, offset: 5775},
																				val:        "[[",
																				ignoreCase: false,
																			},
																			&labeledExpr{
																				pos:   position{line: 151, col: 25, offset: 5780},
																				label: "id",
																				expr: &actionExpr{
																					pos: position{line: 1010, col: 7, offset: 41339},
																					run: (*parser).callonSidebarBlock15,
																					expr: &oneOrMoreExpr{
																						pos: position{line: 1010, col: 7, offset: 41339},
																						expr: &seqExpr{
																							pos: position{line: 1010, col: 8, offset: 41340},
																							exprs: []interface{}{
																								&notExpr{
																									pos: position{line: 1010, col: 8, offset: 41340},
																									expr: &choiceExpr{
																										pos: position{line: 1028, col: 12, offset: 41683},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1028, col: 12, offset: 41683},
																												val:        "\r\n",
																												ignoreCase: false,
																											},
																											&charClassMatcher{
																												pos:        position{line: 1028, col: 21, offset: 41692},
																												val:        "[\\r\\n]",
																												chars:      []rune{'\r', '\n'},
																												ignoreCase: false,
																												inverted:   false,
																											},
																										},
																									},
																								},
																								&notExpr{
																									pos: position{line: 1010, col: 17, offset: 41349},
																									expr: &choiceExpr{
																										pos: position{line: 1024, col: 7, offset: 41621},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1024, col: 7, offset: 41621},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 1024, col: 13, offset: 41627},
																												run: (*parser).callonSidebarBlock25,
																												expr: &litMatcher{
																													pos:        position{line: 1024, col: 13, offset: 41627},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																								&notExpr{
																									pos: position{line: 1010, col: 21, offset: 41353},
																									expr: &litMatcher{
																										pos:        position{line: 1010, col: 22, offset: 41354},
																										val:        "[",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 1010, col: 26, offset: 41358},
																									expr: &litMatcher{
																										pos:        position{line: 1010, col: 27, offset: 41359},
																										val:        "]",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 1010, col: 31, offset: 41363},
																									expr: &litMatcher{
																										pos:        position{line: 1010, col: 32, offset: 41364},
																										val:        "<<",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 1010, col: 37, offset: 41369},
																									expr: &litMatcher{
																										pos:        position{line: 1010, col: 38, offset: 41370},
																										val:        ">>",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 1010, col: 43, offset: 41375},
																									expr: &litMatcher{
																										pos:        position{line: 1010, col: 44, offset: 41376},
																										val:        ",",
																										ignoreCase: false,
																									},
																								},
																								&anyMatcher{
																									line: 1010, col: 48, offset: 41380,
																								},
																							},
																						},
																					},
																				},
																			},
																			&litMatcher{
																				pos:        position{line: 151, col: 33, offset: 5788},
																				val:        "]]",
																				ignoreCase: false,
																			},
																		},
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 147, col: 5, offset: 5691},
															run: (*parser).callonSidebarBlock39,
															expr: &seqExpr{
																pos: position{line: 147, col: 5, offset: 5691},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 147, col: 5, offset: 5691},
																		val:        "[#",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 147, col: 10, offset: 5696},
																		label: "id",
																		expr: &actionExpr{
																			pos: position{line: 1010, col: 7, offset: 41339},
																			run: (*parser).callonSidebarBlock43,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 1010, col: 7, offset: 41339},
																				expr: &seqExpr{
																					pos: position{line: 1010, col: 8, offset: 41340},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 1010, col: 8, offset: 41340},
																							expr: &choiceExpr{
																								pos: position{line: 1028, col: 12, offset: 41683},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1028, col: 12, offset: 41683},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 1028, col: 21, offset: 41692},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 1010, col: 17, offset: 41349},
																							expr: &choiceExpr{
																								pos: position{line: 1024, col: 7, offset: 41621},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1024, col: 7, offset: 41621},
																										val:        " ",
																										ignoreCase: false,
																									},
																									&actionExpr{
																										pos: position{line: 1024, col: 13, offset: 41627},
																										run: (*parser).callonSidebarBlock53,
																										expr: &litMatcher{
																											pos:        position{line: 1024, col: 13, offset: 41627},
																											val:        "\t",
																											ignoreCase: false,
																										},
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 1010, col: 21, offset: 41353},
																							expr: &litMatcher{
																								pos:        position{line: 1010, col: 22, offset: 41354},
																								val:        "[",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 1010, col: 26, offset: 41358},
																							expr: &litMatcher{
																								pos:        position{line: 1010, col: 27, offset: 41359},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 1010, col: 31, offset: 41363},
																							expr: &litMatcher{
																								pos:        position{line: 1010, col: 32, offset: 41364},
																								val:        "<<",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 1010, col: 37, offset: 41369},
																							expr: &litMatcher{
																								pos:        position{line: 1010, col: 38, offset: 41370},
																								val:        ">>",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 1010, col: 43, offset: 41375},
																							expr: &litMatcher{
																								pos:        position{line: 1010, col: 44, offset: 41376},
																								val:        ",",
																								ignoreCase: false,
																							},
																						},
																						&anyMatcher{
																							line: 1010, col: 48, offset: 41380,
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 147, col: 18, offset: 5704},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 157, col: 17, offset: 5997},
															run: (*parser).callonSidebarBlock67,
															expr: &seqExpr{
																pos: position{line: 157, col: 17, offset: 5997},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 157, col: 17, offset: 5997},
																		val:        ".",
																		ignoreCase: false,
																	},
																	&notExpr{
																		pos: position{line: 157, col: 21, offset: 6001},
																		expr: &litMatcher{
																			pos:        position{line: 157, col: 22, offset: 6002},
																			val:        ".",
																			ignoreCase: false,
																		},
																	},
																	&notExpr{
																		pos: position{line: 157, col: 26, offset: 6006},
																		expr: &choiceExpr{
																			pos: position{line: 1024, col: 7, offset: 41621},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1024, col: 7, offset: 41621},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1024, col: 13, offset: 41627},
																					run: (*parser).callonSidebarBlock75,
																					expr: &litMatcher{
																						pos:        position{line: 1024, col: 13, offset: 41627},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 157, col: 30, offset: 6010},
																		label: "title",
																		expr: &actionExpr{
																			pos: position{line: 161, col: 24, offset: 6115},
																			run: (*parser).callonSidebarBlock78,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 161, col: 24, offset: 6115},
																				expr: &seqExpr{
																					pos: position{line: 161, col: 25, offset: 6116},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 161, col: 25, offset: 6116},
																							expr: &choiceExpr{
																								pos: position{line: 1028, col: 12, offset: 41683},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1028, col: 12, offset: 41683},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 1028, col: 21, offset: 41692},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																						},
																						&anyMatcher{
																							line: 161, col: 34, offset: 6125,
																						},
																					},
																				},
																			},
																		},
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 167, col: 16, offset: 6274},
															run: (*parser).callonSidebarBlock86,
															expr: &seqExpr{
																pos: position{line: 167, col: 16, offset: 6274},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 167, col: 16, offset: 6274},
																		val:        "[.",
																		ignoreCase: false,
																	},
																	&notExpr{
																		pos: position{line: 167, col: 21, offset: 6279},
																		expr: &choiceExpr{
																			pos: position{line: 1024, col: 7, offset: 41621},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1024, col: 7, offset: 41621},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1024, col: 13, offset: 41627},
																					run: (*parser).callonSidebarBlock92,
																					expr: &litMatcher{
																						pos:        position{line: 1024, col: 13, offset: 41627},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 167, col: 25, offset: 6283},
																		label: "role",
																		expr: &actionExpr{
																			pos: position{line: 171, col: 23, offset: 6387},
																			run: (*parser).callonSidebarBlock95,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 171, col: 23, offset: 6387},
																				expr: &seqExpr{
																					pos: position{line: 171, col: 24, offset: 6388},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 171, col: 24, offset: 6388},
																							expr: &choiceExpr{
																								pos: position{line: 1028, col: 12, offset: 41683},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1028, col: 12, offset: 41683},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 1028, col: 21, offset: 41692},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 171, col: 33, offset: 6397},
																							expr: &litMatcher{
																								pos:        position{line: 171, col: 34, offset: 6398},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																						&anyMatcher{
																							line: 171, col: 38, offset: 6402,
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 167, col: 51, offset: 6309},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 176, col: 30, offset: 6551},
															run: (*parser).callonSidebarBlock106,
															expr: &seqExpr{
																pos: position{line: 176, col: 30, offset: 6551},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 176, col: 30, offset: 6551},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 176, col: 34, offset: 6555},
																		label: "k",
																		expr: &choiceExpr{
																			pos: position{line: 494, col: 19, offset: 19245},
																			alternatives: []interface{}{
																				&actionExpr{
																					pos: position{line: 494, col: 19, offset: 19245},
																					run: (*parser).callonSidebarBlock111,
																					expr: &litMatcher{
																						pos:        position{line: 494, col: 19, offset: 19245},
																						val:        "TIP",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 496, col: 5, offset: 19283},
																					run: (*parser).callonSidebarBlock113,
																					expr: &litMatcher{
																						pos:        position{line: 496, col: 5, offset: 19283},
																						val:        "NOTE",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 498, col: 5, offset: 19323},
																					run: (*parser).callonSidebarBlock115,
																					expr: &litMatcher{
																						pos:        position{line: 498, col: 5, offset: 19323},
																						val:        "IMPORTANT",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 500, col: 5, offset: 19373},
																					run: (*parser).callonSidebarBlock117,
																					expr: &litMatcher{
																						pos:        position{line: 500, col: 5, offset: 19373},
																						val:        "WARNING",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 502, col: 5, offset: 19419},
																					run: (*parser).callonSidebarBlock119,
																					expr: &litMatcher{
																						pos:        position{line: 502, col: 5, offset: 19419},
																						val:        "CAUTION",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 176, col: 53, offset: 6574},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 199, col: 21, offset: 7312},
															run: (*parser).callonSidebarBlock122,
															expr: &litMatcher{
																pos:        position{line: 199, col: 21, offset: 7312},
																val:        "[horizontal]",
																ignoreCase: false,
															},
														},
														&actionExpr{
															pos: position{line: 181, col: 19, offset: 6735},
															run: (*parser).callonSidebarBlock124,
															expr: &seqExpr{
																pos: position{line: 181, col: 19, offset: 6735},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 181, col: 19, offset: 6735},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&notExpr{
																		pos: position{line: 181, col: 23, offset: 6739},
																		expr: &choiceExpr{
																			pos: position{line: 1024, col: 7, offset: 41621},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1024, col: 7, offset: 41621},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1024, col: 13, offset: 41627},
																					run: (*parser).callonSidebarBlock130,
																					expr: &litMatcher{
																						pos:        position{line: 1024, col: 13, offset: 41627},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 181, col: 27, offset: 6743},
																		label: "attributes",
																		expr: &zeroOrMoreExpr{
																			pos: position{line: 181, col: 38, offset: 6754},
																			expr: &choiceExpr{
																				pos: position{line: 185, col: 21, offset: 6867},
																				alternatives: []interface{}{
																					&actionExpr{
																						pos: position{line: 185, col: 21, offset: 6867},
																						run: (*parser).callonSidebarBlock135,
																						expr: &seqExpr{
																							pos: position{line: 185, col: 21, offset: 6867},
																							exprs: []interface{}{
																								&labeledExpr{
																									pos:   position{line: 185, col: 21, offset: 6867},
																									label: "key",
																									expr: &actionExpr{
																										pos: position{line: 191, col: 17, offset: 7127},
																										run: (*parser).callonSidebarBlock138,
																										expr: &seqExpr{
																											pos: position{line: 191, col: 17, offset: 7127},
																											exprs: []interface{}{
																												&notExpr{
																													pos: position{line: 191, col: 17, offset: 7127},
																													expr: &actionExpr{
																														pos: position{line: 231, col: 14, offset: 8674},
																														run: (*parser).callonSidebarBlock141,
																														expr: &litMatcher{
																															pos:        position{line: 231, col: 14, offset: 8674},
																															val:        "verse",
																															ignoreCase: false,
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 191, col: 28, offset: 7138},
																													expr: &actionExpr{
																														pos: position{line: 975, col: 16, offset: 40537},
																														run: (*parser).callonSidebarBlock144,
																														expr: &litMatcher{
																															pos:        position{line: 975, col: 16, offset: 40537},
																															val:        "literal",
																															ignoreCase: false,
																														},
																													},
																												},
																												&labeledExpr{
																													pos:   position{line: 191, col: 41, offset: 7151},
																													label: "key",
																													expr: &oneOrMoreExpr{
																														pos: position{line: 191, col: 45, offset: 7155},
																														expr: &seqExpr{
																															pos: position{line: 191, col: 46, offset: 7156},
																															exprs: []interface{}{
																																&notExpr{
																																	pos: position{line: 191, col: 46, offset: 7156},
																																	expr: &litMatcher{
																																		pos:        position{line: 191, col: 47, offset: 7157},
																																		val:        "=",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 191, col: 51, offset: 7161},
																																	expr: &litMatcher{
																																		pos:        position{line: 191, col: 52, offset: 7162},
																																		val:        ",",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 191, col: 56, offset: 7166},
																																	expr: &litMatcher{
																																		pos:        position{line: 191, col: 57, offset: 7167},
																																		val:        "]",
																																		ignoreCase: false,
																																	},
																																},
																																&anyMatcher{
																																	line: 191, col: 61, offset: 7171,
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&litMatcher{
																									pos:        position{line: 185, col: 40, offset: 6886},
																									val:        "=",
																									ignoreCase: false,
																								},
																								&labeledExpr{
																									pos:   position{line: 185, col: 44, offset: 6890},
																									label: "value",
																									expr: &actionExpr{
																										pos: position{line: 195, col: 19, offset: 7230},
																										run: (*parser).callonSidebarBlock158,
																										expr: &labeledExpr{
																											pos:   position{line: 195, col: 19, offset: 7230},
																											label: "value",
																											expr: &zeroOrMoreExpr{
																												pos: position{line: 195, col: 25, offset: 7236},
																												expr: &seqExpr{
																													pos: position{line: 195, col: 26, offset: 7237},
																													exprs: []interface{}{
																														&notExpr{
																															pos: position{line: 195, col: 26, offset: 7237},
																															expr: &litMatcher{
																																pos:        position{line: 195, col: 27, offset: 7238},
																																val:        "=",
																																ignoreCase: false,
																															},
																														},
																														&notExpr{
																															pos: position{line: 195, col: 31, offset: 7242},
																															expr: &litMatcher{
																																pos:        position{line: 195, col: 32, offset: 7243},
																																val:        ",",
																																ignoreCase: false,
																															},
																														},
																														&notExpr{
																															pos: position{line: 195, col: 36, offset: 7247},
																															expr: &litMatcher{
																																pos:        position{line: 195, col: 37, offset: 7248},
																																val:        "]",
																																ignoreCase: false,
																															},
																														},
																														&anyMatcher{
																															line: 195, col: 41, offset: 7252,
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&zeroOrOneExpr{
																									pos: position{line: 185, col: 67, offset: 6913},
																									expr: &litMatcher{
																										pos:        position{line: 185, col: 67, offset: 6913},
																										val:        ",",
																										ignoreCase: false,
																									},
																								},
																								&zeroOrMoreExpr{
																									pos: position{line: 185, col: 72, offset: 6918},
																									expr: &choiceExpr{
																										pos: position{line: 1024, col: 7, offset: 41621},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1024, col: 7, offset: 41621},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 1024, col: 13, offset: 41627},
																												run: (*parser).callonSidebarBlock174,
																												expr: &litMatcher{
																													pos:        position{line: 1024, col: 13, offset: 41627},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																					&actionExpr{
																						pos: position{line: 187, col: 5, offset: 7002},
																						run: (*parser).callonSidebarBlock176,
																						expr: &seqExpr{
																							pos: position{line: 187, col: 5, offset: 7002},
																							exprs: []interface{}{
																								&labeledExpr{
																									pos:   position{line: 187, col: 5, offset: 7002},
																									label: "key",
																									expr: &actionExpr{
																										pos: position{line: 191, col: 17, offset: 7127},
																										run: (*parser).callonSidebarBlock179,
																										expr: &seqExpr{
																											pos: position{line: 191, col: 17, offset: 7127},
																											exprs: []interface{}{
																												&notExpr{
																													pos: position{line: 191, col: 17, offset: 7127},
																													expr: &actionExpr{
																														pos: position{line: 231, col: 14, offset: 8674},
																														run: (*parser).callonSidebarBlock182,
																														expr: &litMatcher{
																															pos:        position{line: 231, col: 14, offset: 8674},
																															val:        "verse",
																															ignoreCase: false,
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 191, col: 28, offset: 7138},
																													expr: &actionExpr{
																														pos: position{line: 975, col: 16, offset: 40537},
																														run: (*parser).callonSidebarBlock185,
																														expr: &litMatcher{
																															pos:        position{line: 975, col: 16, offset: 40537},
																															val:        "literal",
																															ignoreCase: false,
																														},
																													},
																												},
																												&labeledExpr{
																													pos:   position{line: 191, col: 41, offset: 7151},
																													label: "key",
																													expr: &oneOrMoreExpr{
																														pos: position{line: 191, col: 45, offset: 7155},
																														expr: &seqExpr{
																															pos: position{line: 191, col: 46, offset: 7156},
																															exprs: []interface{}{
																																&notExpr{
																																	pos: position{line: 191, col: 46, offset: 7156},
																																	expr: &litMatcher{
																																		pos:        position{line: 191, col: 47, offset: 7157},
																																		val:        "=",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 191, col: 51, offset: 7161},
																																	expr: &litMatcher{
																																		pos:        position{line: 191, col: 52, offset: 7162},
																																		val:        ",",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 191, col: 56, offset: 7166},
																																	expr: &litMatcher{
																																		pos:        position{line: 191, col: 57, offset: 7167},
																																		val:        "]",
																																		ignoreCase: false,
																																	},
																																},
																																&anyMatcher{
																																	line: 191, col: 61, offset: 7171,
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&zeroOrOneExpr{
																									pos: position{line: 187, col: 24, offset: 7021},
																									expr: &litMatcher{
																										pos:        position{line: 187, col: 24, offset: 7021},
																										val:        ",",
																										ignoreCase: false,
																									},
																								},
																								&zeroOrMoreExpr{
																									pos: position{line: 187, col: 29, offset: 7026},
																									expr: &choiceExpr{
																										pos: position{line: 1024, col: 7, offset: 41621},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1024, col: 7, offset: 41621},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 1024, col: 13, offset: 41627},
																												run: (*parser).callonSidebarBlock202,
																												expr: &litMatcher{
																													pos:        position{line: 1024, col: 13, offset: 41627},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 181, col: 59, offset: 6775},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
													},
												},
											},
											&zeroOrMoreExpr{
												pos: position{line: 136, col: 131, offset: 5298},
												expr: &choiceExpr{
													pos: position{line: 1024, col: 7, offset: 41621},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1024, col: 7, offset: 41621},
															val:        " ",
															ignoreCase: false,
														},
														&actionExpr{
															pos: position{line: 1024, col: 13, offset: 41627},
															run: (*parser).callonSidebarBlock208,
															expr: &litMatcher{
																pos:        position{line: 1024, col: 13, offset: 41627},
																val:        "\t",
																ignoreCase: false,
															},
														},
													},
												},
											},
											&choiceExpr{
												pos: position{line: 1032, col: 8, offset: 41723},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1028, col: 12, offset: 41683},
														val:        "\r\n",
														ignoreCase: false,
													},
													&charClassMatcher{
														pos:        position{line: 1028, col: 21, offset: 41692},
														val:        "[\\r\\n]",
														chars:      []rune{'\r', '\n'},
														ignoreCase: false,
														inverted:   false,
													},
													&notExpr{
														pos: position{line: 1030, col: 8, offset: 41712},
														expr: &anyMatcher{
															line: 1030, col: 9, offset: 41713,
														},
													},
												},
											},
										},
									},
								},
							},
						},
						&litMatcher{
							pos:        position{line: 881, col: 26, offset: 36707},
							val:        "****",
							ignoreCase: false,
						},
						&zeroOrMoreExpr{
							pos: position{line: 883, col: 70, offset: 36784},
							expr: &choiceExpr{
								pos: position{line: 1024, col: 7, offset: 41621},
								alternatives: []interface{}{
									&litMatcher{
										pos:        position{line: 1024, col: 7, offset: 41621},
										val:        " ",
										ignoreCase: false,
									},
									&actionExpr{
										pos: position{line: 1024, col: 13, offset: 41627},
										run: (*parser).callonSidebarBlock219,
										expr: &litMatcher{
											pos:        position{line: 1024, col: 13, offset: 41627},
											val:        "\t",
											ignoreCase: false,
										},
									},
								},
							},
						},
						&choiceExpr{
							pos: position{line: 1028, col: 12, offset: 41683},
							alternatives: []interface{}{
								&litMatcher{
									pos:        position{line: 1028, col: 12, offset: 41683},
									val:        "\r\n",
									ignoreCase: false,
								},
								&charClassMatcher{
									pos:        position{line: 1028, col: 21, offset: 41692},
									val:        "[\\r\\n]",
									chars:      []rune{'\r', '\n'},
									ignoreCase: false,
									inverted:   false,
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 883, col: 82, offset: 36796},
							label: "content",
							expr: &zeroOrMoreExpr{
								pos: position{line: 883, col: 90, offset: 36804},
								expr: &ruleRefExpr{
									pos:  position{line: 883, col: 91, offset: 36805},
									name: "SidebarBlockContent",
								},
							},
						},
						&choiceExpr{
							pos: position{line: 883, col: 115, offset: 36829},
							alternatives: []interface{}{
								&seqExpr{
									pos: position{line: 883, col: 116, offset: 36830},
									exprs: []interface{}{
										&litMatcher{
											pos:        position{line: 881, col: 26, offset: 36707},
											val:        "****",
											ignoreCase: false,
										},
										&zeroOrMoreExpr{
											pos: position{line: 883, col: 138, offset: 36852},
											expr: &choiceExpr{
												pos: position{line: 1024, col: 7, offset: 41621},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1024, col: 7, offset: 41621},
														val:        " ",
														ignoreCase: false,
													},
													&actionExpr{
														pos: position{line: 1024, col: 13, offset: 41627},
														run: (*parser).callonSidebarBlock233,
														expr: &litMatcher{
															pos:        position{line: 1024, col: 13, offset: 41627},
															val:        "\t",
															ignoreCase: false,
														},
													},
												},
											},
										},
										&choiceExpr{
											pos: position{line: 1032, col: 8, offset: 41723},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 1028, col: 12, offset: 41683},
													val:        "\r\n",
													ignoreCase: false,
												},
												&charClassMatcher{
													pos:        position{line: 1028, col: 21, offset: 41692},
													val:        "[\\r\\n]",
													chars:      []rune{'\r', '\n'},
													ignoreCase: false,
													inverted:   false,
												},
												&notExpr{
													pos: position{line: 1030, col: 8, offset: 41712},
													expr: &anyMatcher{
														line: 1030, col: 9, offset: 41713,
													},
												},
											},
										},
									},
								},
								&notExpr{
									pos: position{line: 1030, col: 8, offset: 41712},
									expr: &anyMatcher{
										line: 1030, col: 9, offset: 41713,
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "SidebarBlockContent",
			pos:  position{line: 887, col: 1, offset: 36988},
			expr: &choiceExpr{
				pos: position{line: 887, col: 24, offset: 37011},
				alternatives: []interface{}{
					&ruleRefExpr{
						pos:  position{line: 887, col: 24, offset: 37011},
						name: "List",
					},
					&ruleRefExpr{
						pos:  position{line: 887, col: 31, offset: 37018},
						name: "BlockParagraph",
					},
					&actionExpr{
						pos: position{line: 991, col: 14, offset: 40968},
						run: (*parser).callonSidebarBlockContent4,
						expr: &seqExpr{
							pos: position{line: 991, col: 14, offset: 40968},
							exprs: []interface{}{
								&notExpr{
									pos: position{line: 991, col: 14, offset: 40968},
									expr: &notExpr{
										pos: position{line: 1030, col: 8, offset: 41712},
										expr: &anyMatcher{
											line: 1030, col: 9, offset: 41713,
										},
									},
								},
								&zeroOrMoreExpr{
									pos: position{line: 991, col: 19, offset: 40973},
									expr: &choiceExpr{
										pos: position{line: 1024, col: 7, offset: 41621},
										alternatives: []interface{}{
											&litMatcher{
												pos:        position{line: 1024, col: 7, offset: 41621},
												val:        " ",
												ignoreCase: false,
											},
											&actionExpr{
												pos: position{line: 1024, col: 13, offset: 41627},
												run: (*parser).callonSidebarBlockContent12,
												expr: &litMatcher{
													pos:        position{line: 1024, col: 13, offset: 41627},
													val:        "\t",
													ignoreCase: false,
												},
											},
										},
									},
								},
								&choiceExpr{
									pos: position{line: 1032, col: 8, offset: 41723},
									alternatives: []interface{}{
										&litMatcher{
											pos:        position{line: 1028, col: 12, offset: 41683},
											val:        "\r\n",
											ignoreCase: false,
										},
										&charClassMatcher{
											pos:        position{line: 1028, col: 21, offset: 41692},
											val:        "[\\r\\n]",
											chars:      []rune{'\r', '\n'},
											ignoreCase: false,
											inverted:   false,
										},
										&notExpr{
											pos: position{line: 1030, col: 8, offset: 41712},
											expr: &anyMatcher{
												line: 1030, col: 9, offset: 41713,
											},
										},
									},
								},
							},
						},
					},
					&ruleRefExpr{
						pos:  position{line: 887, col: 60, offset: 37047},
						name: "NonSidebarBlock",
					},
				},
			},
		},
		{
			name: "NonSidebarBlock",
			pos:  position{line: 889, col: 1, offset: 37064},
			expr: &actionExpr{
				pos: position{line: 889, col: 20, offset: 37083},
				run: (*parser).callonNonSidebarBlock1,
				expr: &seqExpr{
					pos: position{line: 889, col: 20, offset: 37083},
					exprs: []interface{}{
						&notExpr{
							pos: position{line: 889, col: 20, offset: 37083},
							expr: &ruleRefExpr{
								pos:  position{line: 889, col: 21, offset: 37084},
								name: "SidebarBlock",
							},
						},
						&labeledExpr{
							pos:   position{line: 889, col: 34, offset: 37097},
							label: "content",
							expr: &ruleRefExpr{
								pos:  position{line: 889, col: 43, offset: 37106},
								name: "DelimitedBlock",
							},
						},
					},
				},
			},
		},
		{
			name: "Table",
			pos:  position{line: 896, col: 1, offset: 37339},
			expr: &actionExpr{
				pos: position{line: 896, col: 10, offset: 37348},
				run: (*parser).callonTable1,
				expr: &seqExpr{
					pos: position{line: 896, col: 10, offset: 37348},
					exprs: []interface{}{
						&labeledExpr{
							pos:   position{line: 896, col: 10, offset: 37348},
							label: "attributes",
							expr: &zeroOrMoreExpr{
								pos: position{line: 896, col: 21, offset: 37359},
								expr: &actionExpr{
									pos: position{line: 136, col: 21, offset: 5188},
									run: (*parser).callonTable5,
									expr: &seqExpr{
										pos: position{line: 136, col: 21, offset: 5188},
										exprs: []interface{}{
											&labeledExpr{
												pos:   position{line: 136, col: 21, offset: 5188},
												label: "attr",
												expr: &choiceExpr{
													pos: position{line: 136, col: 27, offset: 5194},
													alternatives: []interface{}{
														&actionExpr{
															pos: position{line: 145, col: 14, offset: 5645},
															run: (*parser).callonTable9,
															expr: &labeledExpr{
																pos:   position{line: 145, col: 14, offset: 5645},
																label: "id",
																expr: &actionExpr{
																	pos: position{line: 151, col: 20, offset: 5775},
																	run: (*parser).callonTable11,
																	expr: &seqExpr{
																		pos: position{line: 151, col: 20, offset: 5775},
																		exprs: []interface{}{
																			&litMatcher{
																				pos:        position{line: 151, col: 20, offset: 5775},
																				val:        "[[",
																				ignoreCase: false,
																			},
																			&labeledExpr{
																				pos:   position{line: 151, col: 25, offset: 5780},
																				label: "id",
																				expr: &actionExpr{
																					pos: position{line: 1010, col: 7, offset: 41339},
																					run: (*parser).callonTable15,
																					expr: &oneOrMoreExpr{
																						pos: position{line: 1010, col: 7, offset: 41339},
																						expr: &seqExpr{
																							pos: position{line: 1010, col: 8, offset: 41340},
																							exprs: []interface{}{
																								&notExpr{
																									pos: position{line: 1010, col: 8, offset: 41340},
																									expr: &choiceExpr{
																										pos: position{line: 1028, col: 12, offset: 41683},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1028, col: 12, offset: 41683},
																												val:        "\r\n",
																												ignoreCase: false,
																											},
																											&charClassMatcher{
																												pos:        position{line: 1028, col: 21, offset: 41692},
																												val:        "[\\r\\n]",
																												chars:      []rune{'\r', '\n'},
																												ignoreCase: false,
																												inverted:   false,
																											},
																										},
																									},
																								},
																								&notExpr{
																									pos: position{line: 1010, col: 17, offset: 41349},
																									expr: &choiceExpr{
																										pos: position{line: 1024, col: 7, offset: 41621},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1024, col: 7, offset: 41621},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 1024, col: 13, offset: 41627},
																												run: (*parser).callonTable25,
																												expr: &litMatcher{
																													pos:        position{line: 1024, col: 13, offset: 41627},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																								&notExpr{
																									pos: position{line: 1010, col: 21, offset: 41353},
																									expr: &litMatcher{
																										pos:        position{line: 1010, col: 22, offset: 41354},
																										val:        "[",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 1010, col: 26, offset: 41358},
																									expr: &litMatcher{
																										pos:        position{line: 1010, col: 27, offset: 41359},
																										val:        "]",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 1010, col: 31, offset: 41363},
																									expr: &litMatcher{
																										pos:        position{line: 1010, col: 32, offset: 41364},
																										val:        "<<",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 1010, col: 37, offset: 41369},
																									expr: &litMatcher{
																										pos:        position{line: 1010, col: 38, offset: 41370},
																										val:        ">>",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 1010, col: 43, offset: 41375},
																									expr: &litMatcher{
																										pos:        position{line: 1010, col: 44, offset: 41376},
																										val:        ",",
																										ignoreCase: false,
																									},
																								},
																								&anyMatcher{
																									line: 1010, col: 48, offset: 41380,
																								},
																							},
																						},
																					},
																				},
																			},
																			&litMatcher{
																				pos:        position{line: 151, col: 33, offset: 5788},
																				val:        "]]",
																				ignoreCase: false,
																			},
																		},
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 147, col: 5, offset: 5691},
															run: (*parser).callonTable39,
															expr: &seqExpr{
																pos: position{line: 147, col: 5, offset: 5691},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 147, col: 5, offset: 5691},
																		val:        "[#",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 147, col: 10, offset: 5696},
																		label: "id",
																		expr: &actionExpr{
																			pos: position{line: 1010, col: 7, offset: 41339},
																			run: (*parser).callonTable43,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 1010, col: 7, offset: 41339},
																				expr: &seqExpr{
																					pos: position{line: 1010, col: 8, offset: 41340},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 1010, col: 8, offset: 41340},
																							expr: &choiceExpr{
																								pos: position{line: 1028, col: 12, offset: 41683},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1028, col: 12, offset: 41683},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 1028, col: 21, offset: 41692},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 1010, col: 17, offset: 41349},
																							expr: &choiceExpr{
																								pos: position{line: 1024, col: 7, offset: 41621},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1024, col: 7, offset: 41621},
																										val:        " ",
																										ignoreCase: false,
																									},
																									&actionExpr{
																										pos: position{line: 1024, col: 13, offset: 41627},
																										run: (*parser).callonTable53,
																										expr: &litMatcher{
																											pos:        position{line: 1024, col: 13, offset: 41627},
																											val:        "\t",
																											ignoreCase: false,
																										},
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 1010, col: 21, offset: 41353},
																							expr: &litMatcher{
																								pos:        position{line: 1010, col: 22, offset: 41354},
																								val:        "[",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 1010, col: 26, offset: 41358},
																							expr: &litMatcher{
																								pos:        position{line: 1010, col: 27, offset: 41359},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 1010, col: 31, offset: 41363},
																							expr: &litMatcher{
																								pos:        position{line: 1010, col: 32, offset: 41364},
																								val:        "<<",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 1010, col: 37, offset: 41369},
																							expr: &litMatcher{
																								pos:        position{line: 1010, col: 38, offset: 41370},
																								val:        ">>",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 1010, col: 43, offset: 41375},
																							expr: &litMatcher{
																								pos:        position{line: 1010, col: 44, offset: 41376},
																								val:        ",",
																								ignoreCase: false,
																							},
																						},
																						&anyMatcher{
																							line: 1010, col: 48, offset: 41380,
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 147, col: 18, offset: 5704},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 157, col: 17, offset: 5997},
															run: (*parser).callonTable67,
															expr: &seqExpr{
																pos: position{line: 157, col: 17, offset: 5997},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 157, col: 17, offset: 5997},
																		val:        ".",
																		ignoreCase: false,
																	},
																	&notExpr{
																		pos: position{line: 157, col: 21, offset: 6001},
																		expr: &litMatcher{
																			pos:        position{line: 157, col: 22, offset: 6002},
																			val:        ".",
																			ignoreCase: false,
																		},
																	},
																	&notExpr{
																		pos: position{line: 157, col: 26, offset: 6006},
																		expr: &choiceExpr{
																			pos: position{line: 1024, col: 7, offset: 41621},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1024, col: 7, offset: 41621},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1024, col: 13, offset: 41627},
																					run: (*parser).callonTable75,
																					expr: &litMatcher{
																						pos:        position{line: 1024, col: 13, offset: 41627},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 157, col: 30, offset: 6010},
																		label: "title",
																		expr: &actionExpr{
																			pos: position{line: 161, col: 24, offset: 6115},
																			run: (*parser).callonTable78,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 161, col: 24, offset: 6115},
																				expr: &seqExpr{
																					pos: position{line: 161, col: 25, offset: 6116},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 161, col: 25, offset: 6116},
																							expr: &choiceExpr{
																								pos: position{line: 1028, col: 12, offset: 41683},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1028, col: 12, offset: 41683},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 1028, col: 21, offset: 41692},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																						},
																						&anyMatcher{
																							line: 161, col: 34, offset: 6125,
																						},
																					},
																				},
																			},
																		},
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 167, col: 16, offset: 6274},
															run: (*parser).callonTable86,
															expr: &seqExpr{
																pos: position{line: 167, col: 16, offset: 6274},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 167, col: 16, offset: 6274},
																		val:        "[.",
																		ignoreCase: false,
																	},
																	&notExpr{
																		pos: position{line: 167, col: 21, offset: 6279},
																		expr: &choiceExpr{
																			pos: position{line: 1024, col: 7, offset: 41621},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1024, col: 7, offset: 41621},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1024, col: 13, offset: 41627},
																					run: (*parser).callonTable92,
																					expr: &litMatcher{
																						pos:        position{line: 1024, col: 13, offset: 41627},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 167, col: 25, offset: 6283},
																		label: "role",
																		expr: &actionExpr{
																			pos: position{line: 171, col: 23, offset: 6387},
																			run: (*parser).callonTable95,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 171, col: 23, offset: 6387},
																				expr: &seqExpr{
																					pos: position{line: 171, col: 24, offset: 6388},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 171, col: 24, offset: 6388},
																							expr: &choiceExpr{
																								pos: position{line: 1028, col: 12, offset: 41683},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1028, col: 12, offset: 41683},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 1028, col: 21, offset: 41692},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 171, col: 33, offset: 6397},
																							expr: &litMatcher{
																								pos:        position{line: 171, col: 34, offset: 6398},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																						&anyMatcher{
																							line: 171, col: 38, offset: 6402,
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 167, col: 51, offset: 6309},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 176, col: 30, offset: 6551},
															run: (*parser).callonTable106,
															expr: &seqExpr{
																pos: position{line: 176, col: 30, offset: 6551},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 176, col: 30, offset: 6551},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 176, col: 34, offset: 6555},
																		label: "k",
																		expr: &choiceExpr{
																			pos: position{line: 494, col: 19, offset: 19245},
																			alternatives: []interface{}{
																				&actionExpr{
																					pos: position{line: 494, col: 19, offset: 19245},
																					run: (*parser).callonTable111,
																					expr: &litMatcher{
																						pos:        position{line: 494, col: 19, offset: 19245},
																						val:        "TIP",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 496, col: 5, offset: 19283},
																					run: (*parser).callonTable113,
																					expr: &litMatcher{
																						pos:        position{line: 496, col: 5, offset: 19283},
																						val:        "NOTE",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 498, col: 5, offset: 19323},
																					run: (*parser).callonTable115,
																					expr: &litMatcher{
																						pos:        position{line: 498, col: 5, offset: 19323},
																						val:        "IMPORTANT",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 500, col: 5, offset: 19373},
																					run: (*parser).callonTable117,
																					expr: &litMatcher{
																						pos:        position{line: 500, col: 5, offset: 19373},
																						val:        "WARNING",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 502, col: 5, offset: 19419},
																					run: (*parser).callonTable119,
																					expr: &litMatcher{
																						pos:        position{line: 502, col: 5, offset: 19419},
																						val:        "CAUTION",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 176, col: 53, offset: 6574},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 199, col: 21, offset: 7312},
															run: (*parser).callonTable122,
															expr: &litMatcher{
																pos:        position{line: 199, col: 21, offset: 7312},
																val:        "[horizontal]",
																ignoreCase: false,
															},
														},
														&actionExpr{
															pos: position{line: 181, col: 19, offset: 6735},
															run: (*parser).callonTable124,
															expr: &seqExpr{
																pos: position{line: 181, col: 19, offset: 6735},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 181, col: 19, offset: 6735},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&notExpr{
																		pos: position{line: 181, col: 23, offset: 6739},
																		expr: &choiceExpr{
																			pos: position{line: 1024, col: 7, offset: 41621},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1024, col: 7, offset: 41621},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1024, col: 13, offset: 41627},
																					run: (*parser).callonTable130,
																					expr: &litMatcher{
																						pos:        position{line: 1024, col: 13, offset: 41627},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 181, col: 27, offset: 6743},
																		label: "attributes",
																		expr: &zeroOrMoreExpr{
																			pos: position{line: 181, col: 38, offset: 6754},
																			expr: &choiceExpr{
																				pos: position{line: 185, col: 21, offset: 6867},
																				alternatives: []interface{}{
																					&actionExpr{
																						pos: position{line: 185, col: 21, offset: 6867},
																						run: (*parser).callonTable135,
																						expr: &seqExpr{
																							pos: position{line: 185, col: 21, offset: 6867},
																							exprs: []interface{}{
																								&labeledExpr{
																									pos:   position{line: 185, col: 21, offset: 6867},
																									label: "key",
																									expr: &actionExpr{
																										pos: position{line: 191, col: 17, offset: 7127},
																										run: (*parser).callonTable138,
																										expr: &seqExpr{
																											pos: position{line: 191, col: 17, offset: 7127},
																											exprs: []interface{}{
																												&notExpr{
																													pos: position{line: 191, col: 17, offset: 7127},
																													expr: &actionExpr{
																														pos: position{line: 231, col: 14, offset: 8674},
																														run: (*parser).callonTable141,
																														expr: &litMatcher{
																															pos:        position{line: 231, col: 14, offset: 8674},
																															val:        "verse",
																															ignoreCase: false,
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 191, col: 28, offset: 7138},
																													expr: &actionExpr{
																														pos: position{line: 975, col: 16, offset: 40537},
																														run: (*parser).callonTable144,
																														expr: &litMatcher{
																															pos:        position{line: 975, col: 16, offset: 40537},
																															val:        "literal",
																															ignoreCase: false,
																														},
																													},
																												},
																												&labeledExpr{
																													pos:   position{line: 191, col: 41, offset: 7151},
																													label: "key",
																													expr: &oneOrMoreExpr{
																														pos: position{line: 191, col: 45, offset: 7155},
																														expr: &seqExpr{
																															pos: position{line: 191, col: 46, offset: 7156},
																															exprs: []interface{}{
																																&notExpr{
																																	pos: position{line: 191, col: 46, offset: 7156},
																																	expr: &litMatcher{
																																		pos:        position{line: 191, col: 47, offset: 7157},
																																		val:        "=",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 191, col: 51, offset: 7161},
																																	expr: &litMatcher{
																																		pos:        position{line: 191, col: 52, offset: 7162},
																																		val:        ",",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 191, col: 56, offset: 7166},
																																	expr: &litMatcher{
																																		pos:        position{line: 191, col: 57, offset: 7167},
																																		val:        "]",
																																		ignoreCase: false,
																																	},
																																},
																																&anyMatcher{
																																	line: 191, col: 61, offset: 7171,
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&litMatcher{
																									pos:        position{line: 185, col: 40, offset: 6886},
																									val:        "=",
																									ignoreCase: false,
																								},
																								&labeledExpr{
																									pos:   position{line: 185, col: 44, offset: 6890},
																									label: "value",
																									expr: &actionExpr{
																										pos: position{line: 195, col: 19, offset: 7230},
																										run: (*parser).callonTable158,
																										expr: &labeledExpr{
																											pos:   position{line: 195, col: 19, offset: 7230},
																											label: "value",
																											expr: &zeroOrMoreExpr{
																												pos: position{line: 195, col: 25, offset: 7236},
																												expr: &seqExpr{
																													pos: position{line: 195, col: 26, offset: 7237},
																													exprs: []interface{}{
																														&notExpr{
																															pos: position{line: 195, col: 26, offset: 7237},
																															expr: &litMatcher{
																																pos:        position{line: 195, col: 27, offset: 7238},
																																val:        "=",
																																ignoreCase: false,
																															},
																														},
																														&notExpr{
																															pos: position{line: 195, col: 31, offset: 7242},
																															expr: &litMatcher{
																																pos:        position{line: 195, col: 32, offset: 7243},
																																val:        ",",
																																ignoreCase: false,
																															},
																														},
																														&notExpr{
																															pos: position{line: 195, col: 36, offset: 7247},
																															expr: &litMatcher{
																																pos:        position{line: 195, col: 37, offset: 7248},
																																val:        "]",
																																ignoreCase: false,
																															},
																														},
																														&anyMatcher{
																															line: 195, col: 41, offset: 7252,
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&zeroOrOneExpr{
																									pos: position{line: 185, col: 67, offset: 6913},
																									expr: &litMatcher{
																										pos:        position{line: 185, col: 67, offset: 6913},
																										val:        ",",
																										ignoreCase: false,
																									},
																								},
																								&zeroOrMoreExpr{
																									pos: position{line: 185, col: 72, offset: 6918},
																									expr: &choiceExpr{
																										pos: position{line: 1024, col: 7, offset: 41621},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1024, col: 7, offset: 41621},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 1024, col: 13, offset: 41627},
																												run: (*parser).callonTable174,
																												expr: &litMatcher{
																													pos:        position{line: 1024, col: 13, offset: 41627},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																					&actionExpr{
																						pos: position{line: 187, col: 5, offset: 7002},
																						run: (*parser).callonTable176,
																						expr: &seqExpr{
																							pos: position{line: 187, col: 5, offset: 7002},
																							exprs: []interface{}{
																								&labeledExpr{
																									pos:   position{line: 187, col: 5, offset: 7002},
																									label: "key",
																									expr: &actionExpr{
																										pos: position{line: 191, col: 17, offset: 7127},
																										run: (*parser).callonTable179,
																										expr: &seqExpr{
																											pos: position{line: 191, col: 17, offset: 7127},
																											exprs: []interface{}{
																												&notExpr{
																													pos: position{line: 191, col: 17, offset: 7127},
																													expr: &actionExpr{
																														pos: position{line: 231, col: 14, offset: 8674},
																														run: (*parser).callonTable182,
																														expr: &litMatcher{
																															pos:        position{line: 231, col: 14, offset: 8674},
																															val:        "verse",
																															ignoreCase: false,
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 191, col: 28, offset: 7138},
																													expr: &actionExpr{
																														pos: position{line: 975, col: 16, offset: 40537},
																														run: (*parser).callonTable185,
																														expr: &litMatcher{
																															pos:        position{line: 975, col: 16, offset: 40537},
																															val:        "literal",
																															ignoreCase: false,
																														},
																													},
																												},
																												&labeledExpr{
																													pos:   position{line: 191, col: 41, offset: 7151},
																													label: "key",
																													expr: &oneOrMoreExpr{
																														pos: position{line: 191, col: 45, offset: 7155},
																														expr: &seqExpr{
																															pos: position{line: 191, col: 46, offset: 7156},
																															exprs: []interface{}{
																																&notExpr{
																																	pos: position{line: 191, col: 46, offset: 7156},
																																	expr: &litMatcher{
																																		pos:        position{line: 191, col: 47, offset: 7157},
																																		val:        "=",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 191, col: 51, offset: 7161},
																																	expr: &litMatcher{
																																		pos:        position{line: 191, col: 52, offset: 7162},
																																		val:        ",",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 191, col: 56, offset: 7166},
																																	expr: &litMatcher{
																																		pos:        position{line: 191, col: 57, offset: 7167},
																																		val:        "]",
																																		ignoreCase: false,
																																	},
																																},
																																&anyMatcher{
																																	line: 191, col: 61, offset: 7171,
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&zeroOrOneExpr{
																									pos: position{line: 187, col: 24, offset: 7021},
																									expr: &litMatcher{
																										pos:        position{line: 187, col: 24, offset: 7021},
																										val:        ",",
																										ignoreCase: false,
																									},
																								},
																								&zeroOrMoreExpr{
																									pos: position{line: 187, col: 29, offset: 7026},
																									expr: &choiceExpr{
																										pos: position{line: 1024, col: 7, offset: 41621},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1024, col: 7, offset: 41621},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 1024, col: 13, offset: 41627},
																												run: (*parser).callonTable202,
																												expr: &litMatcher{
																													pos:        position{line: 1024, col: 13, offset: 41627},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 181, col: 59, offset: 6775},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
													},
												},
											},
											&zeroOrMoreExpr{
												pos: position{line: 136, col: 131, offset: 5298},
												expr: &choiceExpr{
													pos: position{line: 1024, col: 7, offset: 41621},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1024, col: 7, offset: 41621},
															val:        " ",
															ignoreCase: false,
														},
														&actionExpr{
															pos: position{line: 1024, col: 13, offset: 41627},
															run: (*parser).callonTable208,
															expr: &litMatcher{
																pos:        position{line: 1024, col: 13, offset: 41627},
																val:        "\t",
																ignoreCase: false,
															},
														},
													},
												},
											},
											&choiceExpr{
												pos: position{line: 1032, col: 8, offset: 41723},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1028, col: 12, offset: 41683},
														val:        "\r\n",
														ignoreCase: false,
													},
													&charClassMatcher{
														pos:        position{line: 1028, col: 21, offset: 41692},
														val:        "[\\r\\n]",
														chars:      []rune{'\r', '\n'},
														ignoreCase: false,
														inverted:   false,
													},
													&notExpr{
														pos: position{line: 1030, col: 8, offset: 41712},
														expr: &anyMatcher{
															line: 1030, col: 9, offset: 41713,
														},
													},
												},
											},
										},
									},
								},
							},
						},
						&litMatcher{
							pos:        position{line: 906, col: 19, offset: 37704},
							val:        "|===",
							ignoreCase: false,
						},
						&zeroOrMoreExpr{
							pos: position{line: 897, col: 24, offset: 37403},
							expr: &choiceExpr{
								pos: position{line: 1024, col: 7, offset: 41621},
								alternatives: []interface{}{
									&litMatcher{
										pos:        position{line: 1024, col: 7, offset: 41621},
										val:        " ",
										ignoreCase: false,
									},
									&actionExpr{
										pos: position{line: 1024, col: 13, offset: 41627},
										run: (*parser).callonTable219,
										expr: &litMatcher{
											pos:        position{line: 1024, col: 13, offset: 41627},
											val:        "\t",
											ignoreCase: false,
										},
									},
								},
							},
						},
						&choiceExpr{
							pos: position{line: 1028, col: 12, offset: 41683},
							alternatives: []interface{}{
								&litMatcher{
									pos:        position{line: 1028, col: 12, offset: 41683},
									val:        "\r\n",
									ignoreCase: false,
								},
								&charClassMatcher{
									pos:        position{line: 1028, col: 21, offset: 41692},
									val:        "[\\r\\n]",
									chars:      []rune{'\r', '\n'},
									ignoreCase: false,
									inverted:   false,
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 898, col: 9, offset: 37423},
							label: "header",
							expr: &zeroOrOneExpr{
								pos: position{line: 898, col: 16, offset: 37430},
								expr: &ruleRefExpr{
									pos:  position{line: 898, col: 17, offset: 37431},
									name: "TableLineHeader",
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 899, col: 9, offset: 37457},
							label: "lines",
							expr: &zeroOrMoreExpr{
								pos: position{line: 899, col: 15, offset: 37463},
								expr: &ruleRefExpr{
									pos:  position{line: 899, col: 16, offset: 37464},
									name: "TableLine",
								},
							},
						},
						&choiceExpr{
							pos: position{line: 900, col: 10, offset: 37485},
							alternatives: []interface{}{
								&seqExpr{
									pos: position{line: 900, col: 11, offset: 37486},
									exprs: []interface{}{
										&litMatcher{
											pos:        position{line: 906, col: 19, offset: 37704},
											val:        "|===",
											ignoreCase: false,
										},
										&zeroOrMoreExpr{
											pos: position{line: 900, col: 26, offset: 37501},
											expr: &choiceExpr{
												pos: position{line: 1024, col: 7, offset: 41621},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1024, col: 7, offset: 41621},
														val:        " ",
														ignoreCase: false,
													},
													&actionExpr{
														pos: position{line: 1024, col: 13, offset: 41627},
														run: (*parser).callonTable236,
														expr: &litMatcher{
															pos:        position{line: 1024, col: 13, offset: 41627},
															val:        "\t",
															ignoreCase: false,
														},
													},
												},
											},
										},
										&choiceExpr{
											pos: position{line: 1032, col: 8, offset: 41723},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 1028, col: 12, offset: 41683},
													val:        "\r\n",
													ignoreCase: false,
												},
												&charClassMatcher{
													pos:        position{line: 1028, col: 21, offset: 41692},
													val:        "[\\r\\n]",
													chars:      []rune{'\r', '\n'},
													ignoreCase: false,
													inverted:   false,
												},
												&notExpr{
													pos: position{line: 1030, col: 8, offset: 41712},
													expr: &anyMatcher{
														line: 1030, col: 9, offset: 41713,
													},
												},
											},
										},
									},
								},
								&notExpr{
									pos: position{line: 1030, col: 8, offset: 41712},
									expr: &anyMatcher{
										line: 1030, col: 9, offset: 41713,
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "TableLineHeader",
			pos:  position{line: 909, col: 1, offset: 37775},
			expr: &actionExpr{
				pos: position{line: 909, col: 20, offset: 37794},
				run: (*parser).callonTableLineHeader1,
				expr: &seqExpr{
					pos: position{line: 909, col: 20, offset: 37794},
					exprs: []interface{}{
						&notExpr{
							pos: position{line: 909, col: 20, offset: 37794},
							expr: &litMatcher{
								pos:        position{line: 906, col: 19, offset: 37704},
								val:        "|===",
								ignoreCase: false,
							},
						},
						&labeledExpr{
							pos:   position{line: 909, col: 36, offset: 37810},
							label: "cells",
							expr: &oneOrMoreExpr{
								pos: position{line: 909, col: 42, offset: 37816},
								expr: &ruleRefExpr{
									pos:  position{line: 909, col: 43, offset: 37817},
									name: "TableCell",
								},
							},
						},
						&choiceExpr{
							pos: position{line: 1032, col: 8, offset: 41723},
							alternatives: []interface{}{
								&litMatcher{
									pos:        position{line: 1028, col: 12, offset: 41683},
									val:        "\r\n",
									ignoreCase: false,
								},
								&charClassMatcher{
									pos:        position{line: 1028, col: 21, offset: 41692},
									val:        "[\\r\\n]",
									chars:      []rune{'\r', '\n'},
									ignoreCase: false,
									inverted:   false,
								},
								&notExpr{
									pos: position{line: 1030, col: 8, offset: 41712},
									expr: &anyMatcher{
										line: 1030, col: 9, offset: 41713,
									},
								},
							},
						},
						&actionExpr{
							pos: position{line: 991, col: 14, offset: 40968},
							run: (*parser).callonTableLineHeader13,
							expr: &seqExpr{
								pos: position{line: 991, col: 14, offset: 40968},
								exprs: []interface{}{
									&notExpr{
										pos: position{line: 991, col: 14, offset: 40968},
										expr: &notExpr{
											pos: position{line: 1030, col: 8, offset: 41712},
											expr: &anyMatcher{
												line: 1030, col: 9, offset: 41713,
											},
										},
									},
									&zeroOrMoreExpr{
										pos: position{line: 991, col: 19, offset: 40973},
										expr: &choiceExpr{
											pos: position{line: 1024, col: 7, offset: 41621},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 1024, col: 7, offset: 41621},
													val:        " ",
													ignoreCase: false,
												},
												&actionExpr{
													pos: position{line: 1024, col: 13, offset: 41627},
													run: (*parser).callonTableLineHeader21,
													expr: &litMatcher{
														pos:        position{line: 1024, col: 13, offset: 41627},
														val:        "\t",
														ignoreCase: false,
													},
												},
											},
										},
									},
									&choiceExpr{
										pos: position{line: 1032, col: 8, offset: 41723},
										alternatives: []interface{}{
											&litMatcher{
												pos:        position{line: 1028, col: 12, offset: 41683},
												val:        "\r\n",
												ignoreCase: false,
											},
											&charClassMatcher{
												pos:        position{line: 1028, col: 21, offset: 41692},
												val:        "[\\r\\n]",
												chars:      []rune{'\r', '\n'},
												ignoreCase: false,
												inverted:   false,
											},
											&notExpr{
												pos: position{line: 1030, col: 8, offset: 41712},
												expr: &anyMatcher{
													line: 1030, col: 9, offset: 41713,
												},
											},
										},
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "TableLine",
			pos:  position{line: 913, col: 1, offset: 37901},
			expr: &actionExpr{
				pos: position{line: 913, col: 14, offset: 37914},
				run: (*parser).callonTableLine1,
				expr: &seqExpr{
					pos: position{line: 913, col: 14, offset: 37914},
					exprs: []interface{}{
						&notExpr{
							pos: position{line: 913, col: 14, offset: 37914},
							expr: &litMatcher{
								pos:        position{line: 906, col: 19, offset: 37704},
								val:        "|===",
								ignoreCase: false,
							},
						},
						&labeledExpr{
							pos:   position{line: 913, col: 30, offset: 37930},
							label: "cells",
							expr: &oneOrMoreExpr{
								pos: position{line: 913, col: 36, offset: 37936},
								expr: &ruleRefExpr{
									pos:  position{line: 913, col: 37, offset: 37937},
									name: "TableCell",
								},
							},
						},
						&choiceExpr{
							pos: position{line: 1032, col: 8, offset: 41723},
							alternatives: []interface{}{
								&litMatcher{
									pos:        position{line: 1028, col: 12, offset: 41683},
									val:        "\r\n",
									ignoreCase: false,
								},
								&charClassMatcher{
									pos:        position{line: 1028, col: 21, offset: 41692},
									val:        "[\\r\\n]",
									chars:      []rune{'\r', '\n'},
									ignoreCase: false,
									inverted:   false,
								},
								&notExpr{
									pos: position{line: 1030, col: 8, offset: 41712},
									expr: &anyMatcher{
										line: 1030, col: 9, offset: 41713,
									},
								},
							},
						},
						&zeroOrMoreExpr{
							pos: position{line: 913, col: 53, offset: 37953},
							expr: &actionExpr{
								pos: position{line: 991, col: 14, offset: 40968},
								run: (*parser).callonTableLine14,
								expr: &seqExpr{
									pos: position{line: 991, col: 14, offset: 40968},
									exprs: []interface{}{
										&notExpr{
											pos: position{line: 991, col: 14, offset: 40968},
											expr: &notExpr{
												pos: position{line: 1030, col: 8, offset: 41712},
												expr: &anyMatcher{
													line: 1030, col: 9, offset: 41713,
												},
											},
										},
										&zeroOrMoreExpr{
											pos: position{line: 991, col: 19, offset: 40973},
											expr: &choiceExpr{
												pos: position{line: 1024, col: 7, offset: 41621},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1024, col: 7, offset: 41621},
														val:        " ",
														ignoreCase: false,
													},
													&actionExpr{
														pos: position{line: 1024, col: 13, offset: 41627},
														run: (*parser).callonTableLine22,
														expr: &litMatcher{
															pos:        position{line: 1024, col: 13, offset: 41627},
															val:        "\t",
															ignoreCase: false,
														},
													},
												},
											},
										},
										&choiceExpr{
											pos: position{line: 1032, col: 8, offset: 41723},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 1028, col: 12, offset: 41683},
													val:        "\r\n",
													ignoreCase: false,
												},
												&charClassMatcher{
													pos:        position{line: 1028, col: 21, offset: 41692},
													val:        "[\\r\\n]",
													chars:      []rune{'\r', '\n'},
													ignoreCase: false,
													inverted:   false,
												},
												&notExpr{
													pos: position{line: 1030, col: 8, offset: 41712},
													expr: &anyMatcher{
														line: 1030, col: 9, offset: 41713,
													},
												},
											},
										},
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "TableCell",
			pos:  position{line: 917, col: 1, offset: 38022},
			expr: &actionExpr{
				pos: position{line: 917, col: 14, offset: 38035},
				run: (*parser).callonTableCell1,
				expr: &seqExpr{
					pos: position{line: 917, col: 14, offset: 38035},
					exprs: []interface{}{
						&litMatcher{
							pos:        position{line: 904, col: 23, offset: 37677},
							val:        "|",
							ignoreCase: false,
						},
						&zeroOrMoreExpr{
							pos: position{line: 904, col: 27, offset: 37681},
							expr: &choiceExpr{
								pos: position{line: 1024, col: 7, offset: 41621},
								alternatives: []interface{}{
									&litMatcher{
										pos:        position{line: 1024, col: 7, offset: 41621},
										val:        " ",
										ignoreCase: false,
									},
									&actionExpr{
										pos: position{line: 1024, col: 13, offset: 41627},
										run: (*parser).callonTableCell7,
										expr: &litMatcher{
											pos:        position{line: 1024, col: 13, offset: 41627},
											val:        "\t",
											ignoreCase: false,
										},
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 917, col: 33, offset: 38054},
							label: "elements",
							expr: &oneOrMoreExpr{
								pos: position{line: 917, col: 42, offset: 38063},
								expr: &seqExpr{
									pos: position{line: 917, col: 43, offset: 38064},
									exprs: []interface{}{
										&notExpr{
											pos: position{line: 917, col: 43, offset: 38064},
											expr: &seqExpr{
												pos: position{line: 904, col: 23, offset: 37677},
												exprs: []interface{}{
													&litMatcher{
														pos:        position{line: 904, col: 23, offset: 37677},
														val:        "|",
														ignoreCase: false,
													},
													&zeroOrMoreExpr{
														pos: position{line: 904, col: 27, offset: 37681},
														expr: &choiceExpr{
															pos: position{line: 1024, col: 7, offset: 41621},
															alternatives: []interface{}{
																&litMatcher{
																	pos:        position{line: 1024, col: 7, offset: 41621},
																	val:        " ",
																	ignoreCase: false,
																},
																&actionExpr{
																	pos: position{line: 1024, col: 13, offset: 41627},
																	run: (*parser).callonTableCell18,
																	expr: &litMatcher{
																		pos:        position{line: 1024, col: 13, offset: 41627},
																		val:        "\t",
																		ignoreCase: false,
																	},
																},
															},
														},
													},
												},
											},
										},
										&notExpr{
											pos: position{line: 917, col: 63, offset: 38084},
											expr: &choiceExpr{
												pos: position{line: 1032, col: 8, offset: 41723},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1028, col: 12, offset: 41683},
														val:        "\r\n",
														ignoreCase: false,
													},
													&charClassMatcher{
														pos:        position{line: 1028, col: 21, offset: 41692},
														val:        "[\\r\\n]",
														chars:      []rune{'\r', '\n'},
														ignoreCase: false,
														inverted:   false,
													},
													&notExpr{
														pos: position{line: 1030, col: 8, offset: 41712},
														expr: &anyMatcher{
															line: 1030, col: 9, offset: 41713,
														},
													},
												},
											},
										},
										&zeroOrMoreExpr{
											pos: position{line: 917, col: 68, offset: 38089},
											expr: &choiceExpr{
												pos: position{line: 1024, col: 7, offset: 41621},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1024, col: 7, offset: 41621},
														val:        " ",
														ignoreCase: false,
													},
													&actionExpr{
														pos: position{line: 1024, col: 13, offset: 41627},
														run: (*parser).callonTableCell29,
														expr: &litMatcher{
															pos:        position{line: 1024, col: 13, offset: 41627},
															val:        "\t",
															ignoreCase: false,
														},
													},
												},
											},
										},
										&ruleRefExpr{
											pos:  position{line: 917, col: 72, offset: 38093},
											name: "InlineElement",
										},
										&zeroOrMoreExpr{
											pos: position{line: 917, col: 86, offset: 38107},
											expr: &choiceExpr{
												pos: position{line: 1024, col: 7, offset: 41621},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1024, col: 7, offset: 41621},
														val:        " ",
														ignoreCase: false,
													},
													&actionExpr{
														pos: position{line: 1024, col: 13, offset: 41627},
														run: (*parser).callonTableCell35,
														expr: &litMatcher{
															pos:        position{line: 1024, col: 13, offset: 41627},
															val:        "\t",
															ignoreCase: false,
														},
													},
												},
											},
										},
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "WS",
			pos:  position{line: 1024, col: 1, offset: 41615},
			expr: &choiceExpr{
				pos: position{line: 1024, col: 7, offset: 41621},
				alternatives: []interface{}{
					&litMatcher{
						pos:        position{line: 1024, col: 7, offset: 41621},
						val:        " ",
						ignoreCase: false,
					},
					&actionExpr{
						pos: position{line: 1024, col: 13, offset: 41627},
						run: (*parser).callonWS3,
						expr: &litMatcher{
							pos:        position{line: 1024, col: 13, offset: 41627},
							val:        "\t",
							ignoreCase: false,
						},
					},
				},
			},
		},
		{
			name: "NEWLINE",
			pos:  position{line: 1028, col: 1, offset: 41672},
			expr: &choiceExpr{
				pos: position{line: 1028, col: 12, offset: 41683},
				alternatives: []interface{}{
					&litMatcher{
						pos:        position{line: 1028, col: 12, offset: 41683},
						val:        "\r\n",
						ignoreCase: false,
					},
					&charClassMatcher{
						pos:        position{line: 1028, col: 21, offset: 41692},
						val:        "[\\r\\n]",
						chars:      []rune{'\r', '\n'},
						ignoreCase: false,
						inverted:   false,
					},
				},
			},
		},
	},
}

func (c *current) onDocument1(frontMatter, documentHeader, blocks interface{}) (interface{}, error) {
	return types.NewDocument(frontMatter, documentHeader, blocks.([]interface{}))
}

func (p *parser) callonDocument1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocument1(stack["frontMatter"], stack["documentHeader"], stack["blocks"])
}

func (c *current) onDocumentBlock16() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock16() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock16()
}

func (c *current) onDocumentBlock8() (interface{}, error) {
	return types.NewBlankLine()
}

func (p *parser) callonDocumentBlock8() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock8()
}

func (c *current) onDocumentBlock27() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock27() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock27()
}

func (c *current) onDocumentBlock36() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock36() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock36()
}

func (c *current) onDocumentBlock23(name interface{}) (interface{}, error) {
	return types.NewDocumentAttributeDeclaration(name.(string), nil)
}

func (p *parser) callonDocumentBlock23() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock23(stack["name"])
}

func (c *current) onDocumentBlock47() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock47() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock47()
}

func (c *current) onDocumentBlock56() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock56() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock56()
}

func (c *current) onDocumentBlock59() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock59() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock59()
}

func (c *current) onDocumentBlock43(name, value interface{}) (interface{}, error) {
	return types.NewDocumentAttributeDeclaration(name.(string), value)
}

func (p *parser) callonDocumentBlock43() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock43(stack["name"], stack["value"])
}

func (c *current) onDocumentBlock76() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock76() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock76()
}

func (c *current) onDocumentBlock85() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock85() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock85()
}

func (c *current) onDocumentBlock72(name interface{}) (interface{}, error) {
	return types.NewDocumentAttributeReset(name.(string))
}

func (p *parser) callonDocumentBlock72() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock72(stack["name"])
}

func (c *current) onDocumentBlock96() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock96() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock96()
}

func (c *current) onDocumentBlock105() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock105() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock105()
}

func (c *current) onDocumentBlock92(name interface{}) (interface{}, error) {
	return types.NewDocumentAttributeReset(name.(string))
}

func (p *parser) callonDocumentBlock92() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock92(stack["name"])
}

func (c *current) onDocumentBlock142() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock142() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock142()
}

func (c *current) onDocumentBlock132() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock132() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock132()
}

func (c *current) onDocumentBlock128(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonDocumentBlock128() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock128(stack["id"])
}

func (c *current) onDocumentBlock126(id interface{}) (interface{}, error) {
	return id, nil
}

func (p *parser) callonDocumentBlock126() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock126(stack["id"])
}

func (c *current) onDocumentBlock170() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock170() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock170()
}

func (c *current) onDocumentBlock160() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock160() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock160()
}

func (c *current) onDocumentBlock156(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonDocumentBlock156() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock156(stack["id"])
}

func (c *current) onDocumentBlock192() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock192() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock192()
}

func (c *current) onDocumentBlock195() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock195() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock195()
}

func (c *current) onDocumentBlock184(title interface{}) (interface{}, error) {
	return types.NewElementTitle(title.(string))
}

func (p *parser) callonDocumentBlock184() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock184(stack["title"])
}

func (c *current) onDocumentBlock209() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock209() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock209()
}

func (c *current) onDocumentBlock212() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock212() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock212()
}

func (c *current) onDocumentBlock203(role interface{}) (interface{}, error) {
	return types.NewElementRole(role.(string))
}

func (p *parser) callonDocumentBlock203() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock203(stack["role"])
}

func (c *current) onDocumentBlock228() (interface{}, error) {
	return types.Tip, nil
}

func (p *parser) callonDocumentBlock228() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock228()
}

func (c *current) onDocumentBlock230() (interface{}, error) {
	return types.Note, nil
}

func (p *parser) callonDocumentBlock230() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock230()
}

func (c *current) onDocumentBlock232() (interface{}, error) {
	return types.Important, nil
}

func (p *parser) callonDocumentBlock232() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock232()
}

func (c *current) onDocumentBlock234() (interface{}, error) {
	return types.Warning, nil
}

func (p *parser) callonDocumentBlock234() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock234()
}

func (c *current) onDocumentBlock236() (interface{}, error) {
	return types.Caution, nil
}

func (p *parser) callonDocumentBlock236() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock236()
}

func (c *current) onDocumentBlock223(k interface{}) (interface{}, error) {
	return types.NewAdmonitionAttribute(k.(types.AdmonitionKind))
}

func (p *parser) callonDocumentBlock223() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock223(stack["k"])
}

func (c *current) onDocumentBlock239() (interface{}, error) {
	return types.ElementAttributes{"layout": "horizontal"}, nil
}

func (p *parser) callonDocumentBlock239() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock239()
}

func (c *current) onDocumentBlock247() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock247() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock247()
}

func (c *current) onDocumentBlock258() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock258() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock258()
}

func (c *current) onDocumentBlock261() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock261() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock261()
}

func (c *current) onDocumentBlock255(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock255() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock255(stack["key"])
}

func (c *current) onDocumentBlock275(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock275() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock275(stack["value"])
}

func (c *current) onDocumentBlock291() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock291() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock291()
}

func (c *current) onDocumentBlock252(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonDocumentBlock252() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock252(stack["key"], stack["value"])
}

func (c *current) onDocumentBlock299() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock299() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock299()
}

func (c *current) onDocumentBlock302() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock302() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock302()
}

func (c *current) onDocumentBlock296(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock296() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock296(stack["key"])
}

func (c *current) onDocumentBlock319() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock319() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock319()
}

func (c *current) onDocumentBlock293(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonDocumentBlock293() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock293(stack["key"])
}

func (c *current) onDocumentBlock241(attributes interface{}) (interface{}, error) {
	return types.NewAttributeGroup(attributes.([]interface{}))
}

func (p *parser) callonDocumentBlock241() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock241(stack["attributes"])
}

func (c *current) onDocumentBlock325() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock325() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock325()
}

func (c *current) onDocumentBlock122(attr interface{}) (interface{}, error) {
	return attr, nil // avoid returning something like `[]interface{}{attr, EOL}`
}

func (p *parser) callonDocumentBlock122() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock122(stack["attr"])
}

func (c *current) onDocumentBlock344() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock344() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock344()
}

func (c *current) onDocumentBlock334() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock334() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock334()
}

func (c *current) onDocumentBlock357() (interface{}, error) {
	// attribute is followed by "," or "]" (but do not consume the latter)
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock357() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock357()
}

func (c *current) onDocumentBlock369() (interface{}, error) {
	// attribute is followed by "," or "]" (but do not consume the latter)
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock369() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock369()
}

func (c *current) onDocumentBlock381() (interface{}, error) {
	// attribute is followed by "," or "]" (but do not consume the latter)
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock381() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock381()
}

func (c *current) onDocumentBlock402() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock402() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock402()
}

func (c *current) onDocumentBlock405() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock405() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock405()
}

func (c *current) onDocumentBlock399(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock399() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock399(stack["key"])
}

func (c *current) onDocumentBlock419(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock419() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock419(stack["value"])
}

func (c *current) onDocumentBlock435() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock435() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock435()
}

func (c *current) onDocumentBlock396(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonDocumentBlock396() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock396(stack["key"], stack["value"])
}

func (c *current) onDocumentBlock443() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock443() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock443()
}

func (c *current) onDocumentBlock446() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock446() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock446()
}

func (c *current) onDocumentBlock440(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock440() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock440(stack["key"])
}

func (c *current) onDocumentBlock463() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock463() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock463()
}

func (c *current) onDocumentBlock437(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonDocumentBlock437() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock437(stack["key"])
}

func (c *current) onDocumentBlock353(alt, width, height, otherAttrs interface{}) (interface{}, error) {
	return types.NewImageAttributes(alt, width, height, otherAttrs.([]interface{}))

}

func (p *parser) callonDocumentBlock353() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock353(stack["alt"], stack["width"], stack["height"], stack["otherAttrs"])
}

func (c *current) onDocumentBlock470() (interface{}, error) {
	// attribute is followed by "," or "]" (but do not consume the latter)
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock470() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock470()
}

func (c *current) onDocumentBlock482() (interface{}, error) {
	// attribute is followed by "," or "]" (but do not consume the latter)
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock482() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock482()
}

func (c *current) onDocumentBlock503() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock503() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock503()
}

func (c *current) onDocumentBlock506() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock506() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock506()
}

func (c *current) onDocumentBlock500(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock500() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock500(stack["key"])
}

func (c *current) onDocumentBlock520(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock520() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock520(stack["value"])
}

func (c *current) onDocumentBlock536() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock536() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock536()
}

func (c *current) onDocumentBlock497(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonDocumentBlock497() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock497(stack["key"], stack["value"])
}

func (c *current) onDocumentBlock544() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock544() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock544()
}

func (c *current) onDocumentBlock547() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock547() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock547()
}

func (c *current) onDocumentBlock541(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock541() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock541(stack["key"])
}

func (c *current) onDocumentBlock564() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock564() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock564()
}

func (c *current) onDocumentBlock538(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonDocumentBlock538() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock538(stack["key"])
}

func (c *current) onDocumentBlock466(alt, width, otherAttrs interface{}) (interface{}, error) {
	return types.NewImageAttributes(alt, width, nil, otherAttrs.([]interface{}))

}

func (p *parser) callonDocumentBlock466() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock466(stack["alt"], stack["width"], stack["otherAttrs"])
}

func (c *current) onDocumentBlock571() (interface{}, error) {
	// attribute is followed by "," or "]" (but do not consume the latter)
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock571() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock571()
}

func (c *current) onDocumentBlock592() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock592() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock592()
}

func (c *current) onDocumentBlock595() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock595() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock595()
}

func (c *current) onDocumentBlock589(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock589() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock589(stack["key"])
}

func (c *current) onDocumentBlock609(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock609() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock609(stack["value"])
}

func (c *current) onDocumentBlock625() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock625() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock625()
}

func (c *current) onDocumentBlock586(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonDocumentBlock586() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock586(stack["key"], stack["value"])
}

func (c *current) onDocumentBlock633() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock633() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock633()
}

func (c *current) onDocumentBlock636() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock636() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock636()
}

func (c *current) onDocumentBlock630(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock630() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock630(stack["key"])
}

func (c *current) onDocumentBlock653() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock653() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock653()
}

func (c *current) onDocumentBlock627(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonDocumentBlock627() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock627(stack["key"])
}

func (c *current) onDocumentBlock567(alt, otherAttrs interface{}) (interface{}, error) {
	return types.NewImageAttributes(alt, nil, nil, otherAttrs.([]interface{}))

}

func (p *parser) callonDocumentBlock567() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock567(stack["alt"], stack["otherAttrs"])
}

func (c *current) onDocumentBlock668() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock668() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock668()
}

func (c *current) onDocumentBlock671() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock671() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock671()
}

func (c *current) onDocumentBlock665(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock665() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock665(stack["key"])
}

func (c *current) onDocumentBlock685(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock685() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock685(stack["value"])
}

func (c *current) onDocumentBlock701() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock701() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock701()
}

func (c *current) onDocumentBlock662(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonDocumentBlock662() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock662(stack["key"], stack["value"])
}

func (c *current) onDocumentBlock709() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock709() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock709()
}

func (c *current) onDocumentBlock712() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock712() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock712()
}

func (c *current) onDocumentBlock706(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock706() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock706(stack["key"])
}

func (c *current) onDocumentBlock729() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock729() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock729()
}

func (c *current) onDocumentBlock703(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonDocumentBlock703() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock703(stack["key"])
}

func (c *current) onDocumentBlock656(otherAttrs interface{}) (interface{}, error) {
	return types.NewImageAttributes(nil, nil, nil, otherAttrs.([]interface{}))

}

func (p *parser) callonDocumentBlock656() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock656(stack["otherAttrs"])
}

func (c *current) onDocumentBlock735() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock735() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock735()
}

func (c *current) onDocumentBlock118(attributes, path, inlineAttributes interface{}) (interface{}, error) {
	return types.NewBlockImage(path.(string), attributes.([]interface{}), inlineAttributes.(types.ElementAttributes))
}

func (p *parser) callonDocumentBlock118() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock118(stack["attributes"], stack["path"], stack["inlineAttributes"])
}

func (c *current) onDocumentBlock766() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock766() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock766()
}

func (c *current) onDocumentBlock756() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock756() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock756()
}

func (c *current) onDocumentBlock752(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonDocumentBlock752() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock752(stack["id"])
}

func (c *current) onDocumentBlock750(id interface{}) (interface{}, error) {
	return id, nil
}

func (p *parser) callonDocumentBlock750() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock750(stack["id"])
}

func (c *current) onDocumentBlock794() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock794() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock794()
}

func (c *current) onDocumentBlock784() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock784() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock784()
}

func (c *current) onDocumentBlock780(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonDocumentBlock780() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock780(stack["id"])
}

func (c *current) onDocumentBlock816() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock816() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock816()
}

func (c *current) onDocumentBlock819() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock819() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock819()
}

func (c *current) onDocumentBlock808(title interface{}) (interface{}, error) {
	return types.NewElementTitle(title.(string))
}

func (p *parser) callonDocumentBlock808() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock808(stack["title"])
}

func (c *current) onDocumentBlock833() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock833() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock833()
}

func (c *current) onDocumentBlock836() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock836() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock836()
}

func (c *current) onDocumentBlock827(role interface{}) (interface{}, error) {
	return types.NewElementRole(role.(string))
}

func (p *parser) callonDocumentBlock827() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock827(stack["role"])
}

func (c *current) onDocumentBlock852() (interface{}, error) {
	return types.Tip, nil
}

func (p *parser) callonDocumentBlock852() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock852()
}

func (c *current) onDocumentBlock854() (interface{}, error) {
	return types.Note, nil
}

func (p *parser) callonDocumentBlock854() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock854()
}

func (c *current) onDocumentBlock856() (interface{}, error) {
	return types.Important, nil
}

func (p *parser) callonDocumentBlock856() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock856()
}

func (c *current) onDocumentBlock858() (interface{}, error) {
	return types.Warning, nil
}

func (p *parser) callonDocumentBlock858() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock858()
}

func (c *current) onDocumentBlock860() (interface{}, error) {
	return types.Caution, nil
}

func (p *parser) callonDocumentBlock860() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock860()
}

func (c *current) onDocumentBlock847(k interface{}) (interface{}, error) {
	return types.NewAdmonitionAttribute(k.(types.AdmonitionKind))
}

func (p *parser) callonDocumentBlock847() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock847(stack["k"])
}

func (c *current) onDocumentBlock863() (interface{}, error) {
	return types.ElementAttributes{"layout": "horizontal"}, nil
}

func (p *parser) callonDocumentBlock863() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock863()
}

func (c *current) onDocumentBlock871() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock871() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock871()
}

func (c *current) onDocumentBlock882() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock882() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock882()
}

func (c *current) onDocumentBlock885() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock885() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock885()
}

func (c *current) onDocumentBlock879(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock879() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock879(stack["key"])
}

func (c *current) onDocumentBlock899(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock899() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock899(stack["value"])
}

func (c *current) onDocumentBlock915() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock915() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock915()
}

func (c *current) onDocumentBlock876(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonDocumentBlock876() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock876(stack["key"], stack["value"])
}

func (c *current) onDocumentBlock923() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock923() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock923()
}

func (c *current) onDocumentBlock926() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock926() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock926()
}

func (c *current) onDocumentBlock920(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock920() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock920(stack["key"])
}

func (c *current) onDocumentBlock943() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock943() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock943()
}

func (c *current) onDocumentBlock917(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonDocumentBlock917() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock917(stack["key"])
}

func (c *current) onDocumentBlock865(attributes interface{}) (interface{}, error) {
	return types.NewAttributeGroup(attributes.([]interface{}))
}

func (p *parser) callonDocumentBlock865() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock865(stack["attributes"])
}

func (c *current) onDocumentBlock949() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock949() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock949()
}

func (c *current) onDocumentBlock746(attr interface{}) (interface{}, error) {
	return attr, nil // avoid returning something like `[]interface{}{attr, EOL}`
}

func (p *parser) callonDocumentBlock746() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock746(stack["attr"])
}

func (c *current) onDocumentBlock962() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock962() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock962()
}

func (c *current) onDocumentBlock983() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock983() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock983()
}

func (c *current) onDocumentBlock975() (interface{}, error) {
	return types.NewBlankLine()
}

func (p *parser) callonDocumentBlock975() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock975()
}

func (c *current) onDocumentBlock957() (interface{}, error) {

	return string(c.text), nil
}

func (p *parser) callonDocumentBlock957() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock957()
}

func (c *current) onDocumentBlock742(attributes, content interface{}) (interface{}, error) {
	return types.NewLiteralBlock(content.(string), attributes.([]interface{}))
}

func (p *parser) callonDocumentBlock742() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock742(stack["attributes"], stack["content"])
}

func (c *current) onDocumentBlock1020() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock1020() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock1020()
}

func (c *current) onDocumentBlock1010() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock1010() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock1010()
}

func (c *current) onDocumentBlock1006(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonDocumentBlock1006() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock1006(stack["id"])
}

func (c *current) onDocumentBlock1004(id interface{}) (interface{}, error) {
	return id, nil
}

func (p *parser) callonDocumentBlock1004() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock1004(stack["id"])
}

func (c *current) onDocumentBlock1048() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock1048() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock1048()
}

func (c *current) onDocumentBlock1038() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock1038() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock1038()
}

func (c *current) onDocumentBlock1034(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonDocumentBlock1034() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock1034(stack["id"])
}

func (c *current) onDocumentBlock1070() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock1070() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock1070()
}

func (c *current) onDocumentBlock1073() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock1073() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock1073()
}

func (c *current) onDocumentBlock1062(title interface{}) (interface{}, error) {
	return types.NewElementTitle(title.(string))
}

func (p *parser) callonDocumentBlock1062() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock1062(stack["title"])
}

func (c *current) onDocumentBlock1087() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock1087() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock1087()
}

func (c *current) onDocumentBlock1090() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock1090() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock1090()
}

func (c *current) onDocumentBlock1081(role interface{}) (interface{}, error) {
	return types.NewElementRole(role.(string))
}

func (p *parser) callonDocumentBlock1081() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock1081(stack["role"])
}

func (c *current) onDocumentBlock1106() (interface{}, error) {
	return types.Tip, nil
}

func (p *parser) callonDocumentBlock1106() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock1106()
}

func (c *current) onDocumentBlock1108() (interface{}, error) {
	return types.Note, nil
}

func (p *parser) callonDocumentBlock1108() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock1108()
}

func (c *current) onDocumentBlock1110() (interface{}, error) {
	return types.Important, nil
}

func (p *parser) callonDocumentBlock1110() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock1110()
}

func (c *current) onDocumentBlock1112() (interface{}, error) {
	return types.Warning, nil
}

func (p *parser) callonDocumentBlock1112() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock1112()
}

func (c *current) onDocumentBlock1114() (interface{}, error) {
	return types.Caution, nil
}

func (p *parser) callonDocumentBlock1114() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock1114()
}

func (c *current) onDocumentBlock1101(k interface{}) (interface{}, error) {
	return types.NewAdmonitionAttribute(k.(types.AdmonitionKind))
}

func (p *parser) callonDocumentBlock1101() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock1101(stack["k"])
}

func (c *current) onDocumentBlock1117() (interface{}, error) {
	return types.ElementAttributes{"layout": "horizontal"}, nil
}

func (p *parser) callonDocumentBlock1117() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock1117()
}

func (c *current) onDocumentBlock1125() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock1125() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock1125()
}

func (c *current) onDocumentBlock1136() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock1136() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock1136()
}

func (c *current) onDocumentBlock1139() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock1139() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock1139()
}

func (c *current) onDocumentBlock1133(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock1133() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock1133(stack["key"])
}

func (c *current) onDocumentBlock1153(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock1153() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock1153(stack["value"])
}

func (c *current) onDocumentBlock1169() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock1169() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock1169()
}

func (c *current) onDocumentBlock1130(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonDocumentBlock1130() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock1130(stack["key"], stack["value"])
}

func (c *current) onDocumentBlock1177() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock1177() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock1177()
}

func (c *current) onDocumentBlock1180() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock1180() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock1180()
}

func (c *current) onDocumentBlock1174(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock1174() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock1174(stack["key"])
}

func (c *current) onDocumentBlock1197() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock1197() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock1197()
}

func (c *current) onDocumentBlock1171(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonDocumentBlock1171() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock1171(stack["key"])
}

func (c *current) onDocumentBlock1119(attributes interface{}) (interface{}, error) {
	return types.NewAttributeGroup(attributes.([]interface{}))
}

func (p *parser) callonDocumentBlock1119() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock1119(stack["attributes"])
}

func (c *current) onDocumentBlock1203() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock1203() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock1203()
}

func (c *current) onDocumentBlock1000(attr interface{}) (interface{}, error) {
	return attr, nil // avoid returning something like `[]interface{}{attr, EOL}`
}

func (p *parser) callonDocumentBlock1000() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock1000(stack["attr"])
}

func (c *current) onDocumentBlock1214() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock1214() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock1214()
}

func (c *current) onDocumentBlock1220() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock1220() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock1220()
}

func (c *current) onDocumentBlock1232() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock1232() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock1232()
}

func (c *current) onDocumentBlock996(attributes, content interface{}) (interface{}, error) {
	return types.NewLiteralBlock(content.(string), attributes.([]interface{}))
}

func (p *parser) callonDocumentBlock996() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock996(stack["attributes"], stack["content"])
}

func (c *current) onDocumentBlock1266() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock1266() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock1266()
}

func (c *current) onDocumentBlock1256() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock1256() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock1256()
}

func (c *current) onDocumentBlock1252(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonDocumentBlock1252() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock1252(stack["id"])
}

func (c *current) onDocumentBlock1250(id interface{}) (interface{}, error) {
	return id, nil
}

func (p *parser) callonDocumentBlock1250() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock1250(stack["id"])
}

func (c *current) onDocumentBlock1294() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock1294() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock1294()
}

func (c *current) onDocumentBlock1284() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock1284() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock1284()
}

func (c *current) onDocumentBlock1280(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonDocumentBlock1280() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock1280(stack["id"])
}

func (c *current) onDocumentBlock1316() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock1316() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock1316()
}

func (c *current) onDocumentBlock1319() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock1319() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock1319()
}

func (c *current) onDocumentBlock1308(title interface{}) (interface{}, error) {
	return types.NewElementTitle(title.(string))
}

func (p *parser) callonDocumentBlock1308() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock1308(stack["title"])
}

func (c *current) onDocumentBlock1333() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock1333() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock1333()
}

func (c *current) onDocumentBlock1336() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock1336() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock1336()
}

func (c *current) onDocumentBlock1327(role interface{}) (interface{}, error) {
	return types.NewElementRole(role.(string))
}

func (p *parser) callonDocumentBlock1327() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock1327(stack["role"])
}

func (c *current) onDocumentBlock1352() (interface{}, error) {
	return types.Tip, nil
}

func (p *parser) callonDocumentBlock1352() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock1352()
}

func (c *current) onDocumentBlock1354() (interface{}, error) {
	return types.Note, nil
}

func (p *parser) callonDocumentBlock1354() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock1354()
}

func (c *current) onDocumentBlock1356() (interface{}, error) {
	return types.Important, nil
}

func (p *parser) callonDocumentBlock1356() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock1356()
}

func (c *current) onDocumentBlock1358() (interface{}, error) {
	return types.Warning, nil
}

func (p *parser) callonDocumentBlock1358() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock1358()
}

func (c *current) onDocumentBlock1360() (interface{}, error) {
	return types.Caution, nil
}

func (p *parser) callonDocumentBlock1360() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock1360()
}

func (c *current) onDocumentBlock1347(k interface{}) (interface{}, error) {
	return types.NewAdmonitionAttribute(k.(types.AdmonitionKind))
}

func (p *parser) callonDocumentBlock1347() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock1347(stack["k"])
}

func (c *current) onDocumentBlock1363() (interface{}, error) {
	return types.ElementAttributes{"layout": "horizontal"}, nil
}

func (p *parser) callonDocumentBlock1363() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock1363()
}

func (c *current) onDocumentBlock1371() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock1371() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock1371()
}

func (c *current) onDocumentBlock1382() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock1382() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock1382()
}

func (c *current) onDocumentBlock1385() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock1385() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock1385()
}

func (c *current) onDocumentBlock1379(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock1379() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock1379(stack["key"])
}

func (c *current) onDocumentBlock1399(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock1399() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock1399(stack["value"])
}

func (c *current) onDocumentBlock1415() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock1415() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock1415()
}

func (c *current) onDocumentBlock1376(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonDocumentBlock1376() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock1376(stack["key"], stack["value"])
}

func (c *current) onDocumentBlock1423() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock1423() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock1423()
}

func (c *current) onDocumentBlock1426() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock1426() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock1426()
}

func (c *current) onDocumentBlock1420(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock1420() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock1420(stack["key"])
}

func (c *current) onDocumentBlock1443() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock1443() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock1443()
}

func (c *current) onDocumentBlock1417(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonDocumentBlock1417() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock1417(stack["key"])
}

func (c *current) onDocumentBlock1365(attributes interface{}) (interface{}, error) {
	return types.NewAttributeGroup(attributes.([]interface{}))
}

func (p *parser) callonDocumentBlock1365() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock1365(stack["attributes"])
}

func (c *current) onDocumentBlock1449() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock1449() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock1449()
}

func (c *current) onDocumentBlock1246(attr interface{}) (interface{}, error) {
	return attr, nil // avoid returning something like `[]interface{}{attr, EOL}`
}

func (p *parser) callonDocumentBlock1246() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock1246(stack["attr"])
}

func (c *current) onDocumentBlock1462() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock1462() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock1462()
}

func (c *current) onDocumentBlock1456() (interface{}, error) {
	return types.NewLiteralAttribute()
}

func (p *parser) callonDocumentBlock1456() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock1456()
}

func (c *current) onDocumentBlock1488() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock1488() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock1488()
}

func (c *current) onDocumentBlock1478() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock1478() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock1478()
}

func (c *current) onDocumentBlock1474(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonDocumentBlock1474() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock1474(stack["id"])
}

func (c *current) onDocumentBlock1472(id interface{}) (interface{}, error) {
	return id, nil
}

func (p *parser) callonDocumentBlock1472() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock1472(stack["id"])
}

func (c *current) onDocumentBlock1516() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock1516() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock1516()
}

func (c *current) onDocumentBlock1506() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock1506() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock1506()
}

func (c *current) onDocumentBlock1502(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonDocumentBlock1502() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock1502(stack["id"])
}

func (c *current) onDocumentBlock1538() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock1538() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock1538()
}

func (c *current) onDocumentBlock1541() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock1541() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock1541()
}

func (c *current) onDocumentBlock1530(title interface{}) (interface{}, error) {
	return types.NewElementTitle(title.(string))
}

func (p *parser) callonDocumentBlock1530() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock1530(stack["title"])
}

func (c *current) onDocumentBlock1555() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock1555() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock1555()
}

func (c *current) onDocumentBlock1558() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock1558() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock1558()
}

func (c *current) onDocumentBlock1549(role interface{}) (interface{}, error) {
	return types.NewElementRole(role.(string))
}

func (p *parser) callonDocumentBlock1549() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock1549(stack["role"])
}

func (c *current) onDocumentBlock1574() (interface{}, error) {
	return types.Tip, nil
}

func (p *parser) callonDocumentBlock1574() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock1574()
}

func (c *current) onDocumentBlock1576() (interface{}, error) {
	return types.Note, nil
}

func (p *parser) callonDocumentBlock1576() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock1576()
}

func (c *current) onDocumentBlock1578() (interface{}, error) {
	return types.Important, nil
}

func (p *parser) callonDocumentBlock1578() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock1578()
}

func (c *current) onDocumentBlock1580() (interface{}, error) {
	return types.Warning, nil
}

func (p *parser) callonDocumentBlock1580() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock1580()
}

func (c *current) onDocumentBlock1582() (interface{}, error) {
	return types.Caution, nil
}

func (p *parser) callonDocumentBlock1582() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock1582()
}

func (c *current) onDocumentBlock1569(k interface{}) (interface{}, error) {
	return types.NewAdmonitionAttribute(k.(types.AdmonitionKind))
}

func (p *parser) callonDocumentBlock1569() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock1569(stack["k"])
}

func (c *current) onDocumentBlock1585() (interface{}, error) {
	return types.ElementAttributes{"layout": "horizontal"}, nil
}

func (p *parser) callonDocumentBlock1585() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock1585()
}

func (c *current) onDocumentBlock1593() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock1593() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock1593()
}

func (c *current) onDocumentBlock1604() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock1604() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock1604()
}

func (c *current) onDocumentBlock1607() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock1607() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock1607()
}

func (c *current) onDocumentBlock1601(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock1601() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock1601(stack["key"])
}

func (c *current) onDocumentBlock1621(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock1621() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock1621(stack["value"])
}

func (c *current) onDocumentBlock1637() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock1637() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock1637()
}

func (c *current) onDocumentBlock1598(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonDocumentBlock1598() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock1598(stack["key"], stack["value"])
}

func (c *current) onDocumentBlock1645() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock1645() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock1645()
}

func (c *current) onDocumentBlock1648() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock1648() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock1648()
}

func (c *current) onDocumentBlock1642(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock1642() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock1642(stack["key"])
}

func (c *current) onDocumentBlock1665() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock1665() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock1665()
}

func (c *current) onDocumentBlock1639(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonDocumentBlock1639() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock1639(stack["key"])
}

func (c *current) onDocumentBlock1587(attributes interface{}) (interface{}, error) {
	return types.NewAttributeGroup(attributes.([]interface{}))
}

func (p *parser) callonDocumentBlock1587() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock1587(stack["attributes"])
}

func (c *current) onDocumentBlock1671() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock1671() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock1671()
}

func (c *current) onDocumentBlock1468(attr interface{}) (interface{}, error) {
	return attr, nil // avoid returning something like `[]interface{}{attr, EOL}`
}

func (p *parser) callonDocumentBlock1468() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock1468(stack["attr"])
}

func (c *current) onDocumentBlock1695() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock1695() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock1695()
}

func (c *current) onDocumentBlock1687() (interface{}, error) {
	return types.NewBlankLine()
}

func (p *parser) callonDocumentBlock1687() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock1687()
}

func (c *current) onDocumentBlock1679() (interface{}, error) {

	return string(c.text), nil
}

func (p *parser) callonDocumentBlock1679() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock1679()
}

func (c *current) onDocumentBlock1241(attributes, content interface{}) (interface{}, error) {
	return types.NewLiteralBlock(content.(string), attributes.([]interface{}))
}

func (p *parser) callonDocumentBlock1241() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock1241(stack["attributes"], stack["content"])
}

func (c *current) onDocumentBlock1(block interface{}) (interface{}, error) {
	// element attribute alone should be take recognized as such
	return block, nil
}

func (p *parser) callonDocumentBlock1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock1(stack["block"])
}

func (c *current) onFrontMatter10() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonFrontMatter10() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFrontMatter10()
}

func (c *current) onFrontMatter1(content interface{}) (interface{}, error) {
	return types.NewYamlFrontMatter(content.(string))
}

func (p *parser) callonFrontMatter1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFrontMatter1(stack["content"])
}

func (c *current) onDocumentHeader13() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader13() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader13()
}

func (c *current) onDocumentHeader24() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader24() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader24()
}

func (c *current) onDocumentHeader42() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader42() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader42()
}

func (c *current) onDocumentHeader48() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader48() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader48()
}

func (c *current) onDocumentHeader27() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader27() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader27()
}

func (c *current) onDocumentHeader67() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader67() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader67()
}

func (c *current) onDocumentHeader73() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader73() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader73()
}

func (c *current) onDocumentHeader52() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader52() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader52()
}

func (c *current) onDocumentHeader92() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader92() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader92()
}

func (c *current) onDocumentHeader98() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader98() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader98()
}

func (c *current) onDocumentHeader77() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader77() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader77()
}

func (c *current) onDocumentHeader102(email interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader102() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader102(stack["email"])
}

func (c *current) onDocumentHeader121() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader121() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader121()
}

func (c *current) onDocumentHeader128() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader128() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader128()
}

func (c *current) onDocumentHeader19(namePart1, namePart2, namePart3, email interface{}) (interface{}, error) {
	return types.NewDocumentAuthor(namePart1, namePart2, namePart3, email)
}

func (p *parser) callonDocumentHeader19() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader19(stack["namePart1"], stack["namePart2"], stack["namePart3"], stack["email"])
}

func (c *current) onDocumentHeader8(authors interface{}) (interface{}, error) {
	return types.NewDocumentAuthors(authors.([]interface{}))
}

func (p *parser) callonDocumentHeader8() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader8(stack["authors"])
}

func (c *current) onDocumentHeader140() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader140() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader140()
}

func (c *current) onDocumentHeader149() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader149() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader149()
}

func (c *current) onDocumentHeader167() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader167() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader167()
}

func (c *current) onDocumentHeader173() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader173() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader173()
}

func (c *current) onDocumentHeader152() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader152() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader152()
}

func (c *current) onDocumentHeader246() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader246() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader246()
}

func (c *current) onDocumentHeader253() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader253() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader253()
}

func (c *current) onDocumentHeader144(namePart1, namePart2, namePart3, email interface{}) (interface{}, error) {
	return types.NewDocumentAuthor(namePart1, namePart2, namePart3, email)
}

func (p *parser) callonDocumentHeader144() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader144(stack["namePart1"], stack["namePart2"], stack["namePart3"], stack["email"])
}

func (c *current) onDocumentHeader135(author interface{}) (interface{}, error) {
	return []types.DocumentAuthor{author.(types.DocumentAuthor)}, nil
}

func (p *parser) callonDocumentHeader135() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader135(stack["author"])
}

func (c *current) onDocumentHeader262() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader262() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader262()
}

func (c *current) onDocumentHeader272() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader272() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader272()
}

func (c *current) onDocumentHeader269() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader269() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader269()
}

func (c *current) onDocumentHeader291() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader291() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader291()
}

func (c *current) onDocumentHeader309() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader309() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader309()
}

func (c *current) onDocumentHeader287() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader287() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader287()
}

func (c *current) onDocumentHeader317() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader317() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader317()
}

func (c *current) onDocumentHeader333() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader333() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader333()
}

func (c *current) onDocumentHeader257(revnumber, revdate, revremark interface{}) (interface{}, error) {
	return types.NewDocumentRevision(revnumber, revdate, revremark)
}

func (p *parser) callonDocumentHeader257() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader257(stack["revnumber"], stack["revdate"], stack["revremark"])
}

func (c *current) onDocumentHeader355() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader355() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader355()
}

func (c *current) onDocumentHeader364() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader364() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader364()
}

func (c *current) onDocumentHeader351(name interface{}) (interface{}, error) {
	return types.NewDocumentAttributeDeclaration(name.(string), nil)
}

func (p *parser) callonDocumentHeader351() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader351(stack["name"])
}

func (c *current) onDocumentHeader375() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader375() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader375()
}

func (c *current) onDocumentHeader384() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader384() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader384()
}

func (c *current) onDocumentHeader387() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader387() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader387()
}

func (c *current) onDocumentHeader371(name, value interface{}) (interface{}, error) {
	return types.NewDocumentAttributeDeclaration(name.(string), value)
}

func (p *parser) callonDocumentHeader371() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader371(stack["name"], stack["value"])
}

func (c *current) onDocumentHeader1(header, authors, revision, otherAttributes interface{}) (interface{}, error) {

	return types.NewDocumentHeader(header, authors, revision, otherAttributes.([]interface{}))
}

func (p *parser) callonDocumentHeader1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader1(stack["header"], stack["authors"], stack["revision"], stack["otherAttributes"])
}

func (c *current) onSection1(section interface{}) (interface{}, error) {
	return section, nil

}

func (p *parser) callonSection1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1(stack["section"])
}

func (c *current) onSection07(header, elements interface{}) (interface{}, error) {
	return types.NewSection(0, header.(types.SectionTitle), elements.([]interface{}))

}

func (p *parser) callonSection07() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection07(stack["header"], stack["elements"])
}

func (c *current) onSection01(section interface{}) (interface{}, error) {
	return section, nil

}

func (p *parser) callonSection01() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection01(stack["section"])
}

func (c *current) onSection0Title25() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Title25() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Title25()
}

func (c *current) onSection0Title15() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Title15() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Title15()
}

func (c *current) onSection0Title11(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonSection0Title11() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Title11(stack["id"])
}

func (c *current) onSection0Title9(id interface{}) (interface{}, error) {
	return id, nil
}

func (p *parser) callonSection0Title9() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Title9(stack["id"])
}

func (c *current) onSection0Title53() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Title53() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Title53()
}

func (c *current) onSection0Title43() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Title43() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Title43()
}

func (c *current) onSection0Title39(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonSection0Title39() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Title39(stack["id"])
}

func (c *current) onSection0Title75() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Title75() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Title75()
}

func (c *current) onSection0Title78() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Title78() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Title78()
}

func (c *current) onSection0Title67(title interface{}) (interface{}, error) {
	return types.NewElementTitle(title.(string))
}

func (p *parser) callonSection0Title67() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Title67(stack["title"])
}

func (c *current) onSection0Title92() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Title92() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Title92()
}

func (c *current) onSection0Title95() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Title95() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Title95()
}

func (c *current) onSection0Title86(role interface{}) (interface{}, error) {
	return types.NewElementRole(role.(string))
}

func (p *parser) callonSection0Title86() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Title86(stack["role"])
}

func (c *current) onSection0Title111() (interface{}, error) {
	return types.Tip, nil
}

func (p *parser) callonSection0Title111() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Title111()
}

func (c *current) onSection0Title113() (interface{}, error) {
	return types.Note, nil
}

func (p *parser) callonSection0Title113() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Title113()
}

func (c *current) onSection0Title115() (interface{}, error) {
	return types.Important, nil
}

func (p *parser) callonSection0Title115() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Title115()
}

func (c *current) onSection0Title117() (interface{}, error) {
	return types.Warning, nil
}

func (p *parser) callonSection0Title117() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Title117()
}

func (c *current) onSection0Title119() (interface{}, error) {
	return types.Caution, nil
}

func (p *parser) callonSection0Title119() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Title119()
}

func (c *current) onSection0Title106(k interface{}) (interface{}, error) {
	return types.NewAdmonitionAttribute(k.(types.AdmonitionKind))
}

func (p *parser) callonSection0Title106() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Title106(stack["k"])
}

func (c *current) onSection0Title122() (interface{}, error) {
	return types.ElementAttributes{"layout": "horizontal"}, nil
}

func (p *parser) callonSection0Title122() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Title122()
}

func (c *current) onSection0Title130() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Title130() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Title130()
}

func (c *current) onSection0Title141() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Title141() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Title141()
}

func (c *current) onSection0Title144() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Title144() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Title144()
}

func (c *current) onSection0Title138(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Title138() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Title138(stack["key"])
}

func (c *current) onSection0Title158(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Title158() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Title158(stack["value"])
}

func (c *current) onSection0Title174() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Title174() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Title174()
}

func (c *current) onSection0Title135(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonSection0Title135() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Title135(stack["key"], stack["value"])
}

func (c *current) onSection0Title182() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Title182() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Title182()
}

func (c *current) onSection0Title185() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Title185() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Title185()
}

func (c *current) onSection0Title179(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Title179() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Title179(stack["key"])
}

func (c *current) onSection0Title202() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Title202() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Title202()
}

func (c *current) onSection0Title176(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonSection0Title176() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Title176(stack["key"])
}

func (c *current) onSection0Title124(attributes interface{}) (interface{}, error) {
	return types.NewAttributeGroup(attributes.([]interface{}))
}

func (p *parser) callonSection0Title124() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Title124(stack["attributes"])
}

func (c *current) onSection0Title208() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Title208() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Title208()
}

func (c *current) onSection0Title5(attr interface{}) (interface{}, error) {
	return attr, nil // avoid returning something like `[]interface{}{attr, EOL}`
}

func (p *parser) callonSection0Title5() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Title5(stack["attr"])
}

func (c *current) onSection0Title219() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Title219() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Title219()
}

func (c *current) onSection0Title226() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Title226() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Title226()
}

func (c *current) onSection0Title244() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Title244() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Title244()
}

func (c *current) onSection0Title234() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Title234() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Title234()
}

func (c *current) onSection0Title230(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonSection0Title230() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Title230(stack["id"])
}

func (c *current) onSection0Title261() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Title261() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Title261()
}

func (c *current) onSection0Title1(attributes, content, id interface{}) (interface{}, error) {

	return types.NewSectionTitle(content.(types.InlineElements), append(attributes.([]interface{}), id))
}

func (p *parser) callonSection0Title1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Title1(stack["attributes"], stack["content"], stack["id"])
}

func (c *current) onSection0Block1(content interface{}) (interface{}, error) {
	return content, nil
}

func (p *parser) callonSection0Block1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Block1(stack["content"])
}

func (c *current) onSection17(header, elements interface{}) (interface{}, error) {
	return types.NewSection(1, header.(types.SectionTitle), elements.([]interface{}))

}

func (p *parser) callonSection17() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection17(stack["header"], stack["elements"])
}

func (c *current) onSection11(section interface{}) (interface{}, error) {
	return section, nil
}

func (p *parser) callonSection11() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection11(stack["section"])
}

func (c *current) onSection1Title25() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Title25() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Title25()
}

func (c *current) onSection1Title15() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Title15() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Title15()
}

func (c *current) onSection1Title11(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonSection1Title11() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Title11(stack["id"])
}

func (c *current) onSection1Title9(id interface{}) (interface{}, error) {
	return id, nil
}

func (p *parser) callonSection1Title9() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Title9(stack["id"])
}

func (c *current) onSection1Title53() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Title53() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Title53()
}

func (c *current) onSection1Title43() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Title43() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Title43()
}

func (c *current) onSection1Title39(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonSection1Title39() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Title39(stack["id"])
}

func (c *current) onSection1Title75() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Title75() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Title75()
}

func (c *current) onSection1Title78() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Title78() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Title78()
}

func (c *current) onSection1Title67(title interface{}) (interface{}, error) {
	return types.NewElementTitle(title.(string))
}

func (p *parser) callonSection1Title67() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Title67(stack["title"])
}

func (c *current) onSection1Title92() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Title92() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Title92()
}

func (c *current) onSection1Title95() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Title95() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Title95()
}

func (c *current) onSection1Title86(role interface{}) (interface{}, error) {
	return types.NewElementRole(role.(string))
}

func (p *parser) callonSection1Title86() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Title86(stack["role"])
}

func (c *current) onSection1Title111() (interface{}, error) {
	return types.Tip, nil
}

func (p *parser) callonSection1Title111() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Title111()
}

func (c *current) onSection1Title113() (interface{}, error) {
	return types.Note, nil
}

func (p *parser) callonSection1Title113() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Title113()
}

func (c *current) onSection1Title115() (interface{}, error) {
	return types.Important, nil
}

func (p *parser) callonSection1Title115() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Title115()
}

func (c *current) onSection1Title117() (interface{}, error) {
	return types.Warning, nil
}

func (p *parser) callonSection1Title117() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Title117()
}

func (c *current) onSection1Title119() (interface{}, error) {
	return types.Caution, nil
}

func (p *parser) callonSection1Title119() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Title119()
}

func (c *current) onSection1Title106(k interface{}) (interface{}, error) {
	return types.NewAdmonitionAttribute(k.(types.AdmonitionKind))
}

func (p *parser) callonSection1Title106() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Title106(stack["k"])
}

func (c *current) onSection1Title122() (interface{}, error) {
	return types.ElementAttributes{"layout": "horizontal"}, nil
}

func (p *parser) callonSection1Title122() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Title122()
}

func (c *current) onSection1Title130() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Title130() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Title130()
}

func (c *current) onSection1Title141() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Title141() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Title141()
}

func (c *current) onSection1Title144() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Title144() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Title144()
}

func (c *current) onSection1Title138(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Title138() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Title138(stack["key"])
}

func (c *current) onSection1Title158(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Title158() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Title158(stack["value"])
}

func (c *current) onSection1Title174() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Title174() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Title174()
}

func (c *current) onSection1Title135(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonSection1Title135() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Title135(stack["key"], stack["value"])
}

func (c *current) onSection1Title182() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Title182() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Title182()
}

func (c *current) onSection1Title185() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Title185() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Title185()
}

func (c *current) onSection1Title179(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Title179() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Title179(stack["key"])
}

func (c *current) onSection1Title202() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Title202() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Title202()
}

func (c *current) onSection1Title176(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonSection1Title176() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Title176(stack["key"])
}

func (c *current) onSection1Title124(attributes interface{}) (interface{}, error) {
	return types.NewAttributeGroup(attributes.([]interface{}))
}

func (p *parser) callonSection1Title124() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Title124(stack["attributes"])
}

func (c *current) onSection1Title208() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Title208() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Title208()
}

func (c *current) onSection1Title5(attr interface{}) (interface{}, error) {
	return attr, nil // avoid returning something like `[]interface{}{attr, EOL}`
}

func (p *parser) callonSection1Title5() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Title5(stack["attr"])
}

func (c *current) onSection1Title219() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Title219() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Title219()
}

func (c *current) onSection1Title226() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Title226() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Title226()
}

func (c *current) onSection1Title244() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Title244() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Title244()
}

func (c *current) onSection1Title234() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Title234() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Title234()
}

func (c *current) onSection1Title230(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonSection1Title230() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Title230(stack["id"])
}

func (c *current) onSection1Title261() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Title261() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Title261()
}

func (c *current) onSection1Title1(attributes, content, id interface{}) (interface{}, error) {

	return types.NewSectionTitle(content.(types.InlineElements), append(attributes.([]interface{}), id))
}

func (p *parser) callonSection1Title1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Title1(stack["attributes"], stack["content"], stack["id"])
}

func (c *current) onSection1Block1(content interface{}) (interface{}, error) {
	return content, nil
}

func (p *parser) callonSection1Block1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Block1(stack["content"])
}

func (c *current) onSection27(header, elements interface{}) (interface{}, error) {
	return types.NewSection(2, header.(types.SectionTitle), elements.([]interface{}))

}

func (p *parser) callonSection27() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection27(stack["header"], stack["elements"])
}

func (c *current) onSection21(section interface{}) (interface{}, error) {
	return section, nil

}

func (p *parser) callonSection21() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection21(stack["section"])
}

func (c *current) onSection2Title25() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Title25() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Title25()
}

func (c *current) onSection2Title15() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Title15() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Title15()
}

func (c *current) onSection2Title11(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonSection2Title11() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Title11(stack["id"])
}

func (c *current) onSection2Title9(id interface{}) (interface{}, error) {
	return id, nil
}

func (p *parser) callonSection2Title9() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Title9(stack["id"])
}

func (c *current) onSection2Title53() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Title53() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Title53()
}

func (c *current) onSection2Title43() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Title43() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Title43()
}

func (c *current) onSection2Title39(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonSection2Title39() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Title39(stack["id"])
}

func (c *current) onSection2Title75() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Title75() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Title75()
}

func (c *current) onSection2Title78() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Title78() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Title78()
}

func (c *current) onSection2Title67(title interface{}) (interface{}, error) {
	return types.NewElementTitle(title.(string))
}

func (p *parser) callonSection2Title67() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Title67(stack["title"])
}

func (c *current) onSection2Title92() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Title92() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Title92()
}

func (c *current) onSection2Title95() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Title95() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Title95()
}

func (c *current) onSection2Title86(role interface{}) (interface{}, error) {
	return types.NewElementRole(role.(string))
}

func (p *parser) callonSection2Title86() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Title86(stack["role"])
}

func (c *current) onSection2Title111() (interface{}, error) {
	return types.Tip, nil
}

func (p *parser) callonSection2Title111() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Title111()
}

func (c *current) onSection2Title113() (interface{}, error) {
	return types.Note, nil
}

func (p *parser) callonSection2Title113() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Title113()
}

func (c *current) onSection2Title115() (interface{}, error) {
	return types.Important, nil
}

func (p *parser) callonSection2Title115() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Title115()
}

func (c *current) onSection2Title117() (interface{}, error) {
	return types.Warning, nil
}

func (p *parser) callonSection2Title117() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Title117()
}

func (c *current) onSection2Title119() (interface{}, error) {
	return types.Caution, nil
}

func (p *parser) callonSection2Title119() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Title119()
}

func (c *current) onSection2Title106(k interface{}) (interface{}, error) {
	return types.NewAdmonitionAttribute(k.(types.AdmonitionKind))
}

func (p *parser) callonSection2Title106() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Title106(stack["k"])
}

func (c *current) onSection2Title122() (interface{}, error) {
	return types.ElementAttributes{"layout": "horizontal"}, nil
}

func (p *parser) callonSection2Title122() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Title122()
}

func (c *current) onSection2Title130() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Title130() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Title130()
}

func (c *current) onSection2Title141() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Title141() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Title141()
}

func (c *current) onSection2Title144() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Title144() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Title144()
}

func (c *current) onSection2Title138(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Title138() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Title138(stack["key"])
}

func (c *current) onSection2Title158(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Title158() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Title158(stack["value"])
}

func (c *current) onSection2Title174() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Title174() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Title174()
}

func (c *current) onSection2Title135(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonSection2Title135() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Title135(stack["key"], stack["value"])
}

func (c *current) onSection2Title182() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Title182() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Title182()
}

func (c *current) onSection2Title185() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Title185() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Title185()
}

func (c *current) onSection2Title179(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Title179() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Title179(stack["key"])
}

func (c *current) onSection2Title202() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Title202() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Title202()
}

func (c *current) onSection2Title176(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonSection2Title176() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Title176(stack["key"])
}

func (c *current) onSection2Title124(attributes interface{}) (interface{}, error) {
	return types.NewAttributeGroup(attributes.([]interface{}))
}

func (p *parser) callonSection2Title124() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Title124(stack["attributes"])
}

func (c *current) onSection2Title208() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Title208() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Title208()
}

func (c *current) onSection2Title5(attr interface{}) (interface{}, error) {
	return attr, nil // avoid returning something like `[]interface{}{attr, EOL}`
}

func (p *parser) callonSection2Title5() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Title5(stack["attr"])
}

func (c *current) onSection2Title219() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Title219() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Title219()
}

func (c *current) onSection2Title226() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Title226() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Title226()
}

func (c *current) onSection2Title244() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Title244() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Title244()
}

func (c *current) onSection2Title234() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Title234() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Title234()
}

func (c *current) onSection2Title230(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonSection2Title230() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Title230(stack["id"])
}

func (c *current) onSection2Title261() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Title261() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Title261()
}

func (c *current) onSection2Title1(attributes, content, id interface{}) (interface{}, error) {
	return types.NewSectionTitle(content.(types.InlineElements), append(attributes.([]interface{}), id))
}

func (p *parser) callonSection2Title1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Title1(stack["attributes"], stack["content"], stack["id"])
}

func (c *current) onSection2Block1(content interface{}) (interface{}, error) {
	return content, nil
}

func (p *parser) callonSection2Block1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Block1(stack["content"])
}

func (c *current) onSection37(header, elements interface{}) (interface{}, error) {
	return types.NewSection(3, header.(types.SectionTitle), elements.([]interface{}))

}

func (p *parser) callonSection37() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection37(stack["header"], stack["elements"])
}

func (c *current) onSection31(section interface{}) (interface{}, error) {
	return section, nil

}

func (p *parser) callonSection31() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection31(stack["section"])
}

func (c *current) onSection3Title25() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Title25() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Title25()
}

func (c *current) onSection3Title15() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Title15() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Title15()
}

func (c *current) onSection3Title11(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonSection3Title11() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Title11(stack["id"])
}

func (c *current) onSection3Title9(id interface{}) (interface{}, error) {
	return id, nil
}

func (p *parser) callonSection3Title9() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Title9(stack["id"])
}

func (c *current) onSection3Title53() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Title53() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Title53()
}

func (c *current) onSection3Title43() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Title43() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Title43()
}

func (c *current) onSection3Title39(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonSection3Title39() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Title39(stack["id"])
}

func (c *current) onSection3Title75() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Title75() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Title75()
}

func (c *current) onSection3Title78() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Title78() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Title78()
}

func (c *current) onSection3Title67(title interface{}) (interface{}, error) {
	return types.NewElementTitle(title.(string))
}

func (p *parser) callonSection3Title67() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Title67(stack["title"])
}

func (c *current) onSection3Title92() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Title92() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Title92()
}

func (c *current) onSection3Title95() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Title95() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Title95()
}

func (c *current) onSection3Title86(role interface{}) (interface{}, error) {
	return types.NewElementRole(role.(string))
}

func (p *parser) callonSection3Title86() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Title86(stack["role"])
}

func (c *current) onSection3Title111() (interface{}, error) {
	return types.Tip, nil
}

func (p *parser) callonSection3Title111() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Title111()
}

func (c *current) onSection3Title113() (interface{}, error) {
	return types.Note, nil
}

func (p *parser) callonSection3Title113() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Title113()
}

func (c *current) onSection3Title115() (interface{}, error) {
	return types.Important, nil
}

func (p *parser) callonSection3Title115() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Title115()
}

func (c *current) onSection3Title117() (interface{}, error) {
	return types.Warning, nil
}

func (p *parser) callonSection3Title117() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Title117()
}

func (c *current) onSection3Title119() (interface{}, error) {
	return types.Caution, nil
}

func (p *parser) callonSection3Title119() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Title119()
}

func (c *current) onSection3Title106(k interface{}) (interface{}, error) {
	return types.NewAdmonitionAttribute(k.(types.AdmonitionKind))
}

func (p *parser) callonSection3Title106() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Title106(stack["k"])
}

func (c *current) onSection3Title122() (interface{}, error) {
	return types.ElementAttributes{"layout": "horizontal"}, nil
}

func (p *parser) callonSection3Title122() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Title122()
}

func (c *current) onSection3Title130() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Title130() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Title130()
}

func (c *current) onSection3Title141() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Title141() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Title141()
}

func (c *current) onSection3Title144() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Title144() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Title144()
}

func (c *current) onSection3Title138(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Title138() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Title138(stack["key"])
}

func (c *current) onSection3Title158(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Title158() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Title158(stack["value"])
}

func (c *current) onSection3Title174() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Title174() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Title174()
}

func (c *current) onSection3Title135(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonSection3Title135() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Title135(stack["key"], stack["value"])
}

func (c *current) onSection3Title182() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Title182() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Title182()
}

func (c *current) onSection3Title185() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Title185() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Title185()
}

func (c *current) onSection3Title179(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Title179() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Title179(stack["key"])
}

func (c *current) onSection3Title202() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Title202() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Title202()
}

func (c *current) onSection3Title176(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonSection3Title176() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Title176(stack["key"])
}

func (c *current) onSection3Title124(attributes interface{}) (interface{}, error) {
	return types.NewAttributeGroup(attributes.([]interface{}))
}

func (p *parser) callonSection3Title124() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Title124(stack["attributes"])
}

func (c *current) onSection3Title208() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Title208() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Title208()
}

func (c *current) onSection3Title5(attr interface{}) (interface{}, error) {
	return attr, nil // avoid returning something like `[]interface{}{attr, EOL}`
}

func (p *parser) callonSection3Title5() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Title5(stack["attr"])
}

func (c *current) onSection3Title219() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Title219() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Title219()
}

func (c *current) onSection3Title226() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Title226() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Title226()
}

func (c *current) onSection3Title244() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Title244() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Title244()
}

func (c *current) onSection3Title234() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Title234() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Title234()
}

func (c *current) onSection3Title230(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonSection3Title230() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Title230(stack["id"])
}

func (c *current) onSection3Title1(attributes, content, id interface{}) (interface{}, error) {
	return types.NewSectionTitle(content.(types.InlineElements), append(attributes.([]interface{}), id))
}

func (p *parser) callonSection3Title1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Title1(stack["attributes"], stack["content"], stack["id"])
}

func (c *current) onSection3Block1(content interface{}) (interface{}, error) {
	return content, nil
}

func (p *parser) callonSection3Block1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Block1(stack["content"])
}

func (c *current) onSection47(header, elements interface{}) (interface{}, error) {
	return types.NewSection(4, header.(types.SectionTitle), elements.([]interface{}))

}

func (p *parser) callonSection47() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection47(stack["header"], stack["elements"])
}

func (c *current) onSection41(section interface{}) (interface{}, error) {
	return section, nil

}

func (p *parser) callonSection41() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection41(stack["section"])
}

func (c *current) onSection4Title25() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Title25() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Title25()
}

func (c *current) onSection4Title15() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Title15() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Title15()
}

func (c *current) onSection4Title11(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonSection4Title11() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Title11(stack["id"])
}

func (c *current) onSection4Title9(id interface{}) (interface{}, error) {
	return id, nil
}

func (p *parser) callonSection4Title9() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Title9(stack["id"])
}

func (c *current) onSection4Title53() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Title53() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Title53()
}

func (c *current) onSection4Title43() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Title43() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Title43()
}

func (c *current) onSection4Title39(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonSection4Title39() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Title39(stack["id"])
}

func (c *current) onSection4Title75() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Title75() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Title75()
}

func (c *current) onSection4Title78() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Title78() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Title78()
}

func (c *current) onSection4Title67(title interface{}) (interface{}, error) {
	return types.NewElementTitle(title.(string))
}

func (p *parser) callonSection4Title67() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Title67(stack["title"])
}

func (c *current) onSection4Title92() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Title92() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Title92()
}

func (c *current) onSection4Title95() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Title95() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Title95()
}

func (c *current) onSection4Title86(role interface{}) (interface{}, error) {
	return types.NewElementRole(role.(string))
}

func (p *parser) callonSection4Title86() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Title86(stack["role"])
}

func (c *current) onSection4Title111() (interface{}, error) {
	return types.Tip, nil
}

func (p *parser) callonSection4Title111() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Title111()
}

func (c *current) onSection4Title113() (interface{}, error) {
	return types.Note, nil
}

func (p *parser) callonSection4Title113() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Title113()
}

func (c *current) onSection4Title115() (interface{}, error) {
	return types.Important, nil
}

func (p *parser) callonSection4Title115() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Title115()
}

func (c *current) onSection4Title117() (interface{}, error) {
	return types.Warning, nil
}

func (p *parser) callonSection4Title117() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Title117()
}

func (c *current) onSection4Title119() (interface{}, error) {
	return types.Caution, nil
}

func (p *parser) callonSection4Title119() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Title119()
}

func (c *current) onSection4Title106(k interface{}) (interface{}, error) {
	return types.NewAdmonitionAttribute(k.(types.AdmonitionKind))
}

func (p *parser) callonSection4Title106() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Title106(stack["k"])
}

func (c *current) onSection4Title122() (interface{}, error) {
	return types.ElementAttributes{"layout": "horizontal"}, nil
}

func (p *parser) callonSection4Title122() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Title122()
}

func (c *current) onSection4Title130() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Title130() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Title130()
}

func (c *current) onSection4Title141() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Title141() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Title141()
}

func (c *current) onSection4Title144() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Title144() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Title144()
}

func (c *current) onSection4Title138(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Title138() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Title138(stack["key"])
}

func (c *current) onSection4Title158(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Title158() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Title158(stack["value"])
}

func (c *current) onSection4Title174() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Title174() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Title174()
}

func (c *current) onSection4Title135(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonSection4Title135() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Title135(stack["key"], stack["value"])
}

func (c *current) onSection4Title182() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Title182() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Title182()
}

func (c *current) onSection4Title185() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Title185() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Title185()
}

func (c *current) onSection4Title179(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Title179() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Title179(stack["key"])
}

func (c *current) onSection4Title202() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Title202() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Title202()
}

func (c *current) onSection4Title176(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonSection4Title176() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Title176(stack["key"])
}

func (c *current) onSection4Title124(attributes interface{}) (interface{}, error) {
	return types.NewAttributeGroup(attributes.([]interface{}))
}

func (p *parser) callonSection4Title124() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Title124(stack["attributes"])
}

func (c *current) onSection4Title208() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Title208() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Title208()
}

func (c *current) onSection4Title5(attr interface{}) (interface{}, error) {
	return attr, nil // avoid returning something like `[]interface{}{attr, EOL}`
}

func (p *parser) callonSection4Title5() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Title5(stack["attr"])
}

func (c *current) onSection4Title219() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Title219() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Title219()
}

func (c *current) onSection4Title226() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Title226() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Title226()
}

func (c *current) onSection4Title244() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Title244() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Title244()
}

func (c *current) onSection4Title234() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Title234() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Title234()
}

func (c *current) onSection4Title230(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonSection4Title230() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Title230(stack["id"])
}

func (c *current) onSection4Title1(attributes, content, id interface{}) (interface{}, error) {
	return types.NewSectionTitle(content.(types.InlineElements), append(attributes.([]interface{}), id))
}

func (p *parser) callonSection4Title1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Title1(stack["attributes"], stack["content"], stack["id"])
}

func (c *current) onSection4Block1(content interface{}) (interface{}, error) {
	return content, nil
}

func (p *parser) callonSection4Block1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Block1(stack["content"])
}

func (c *current) onSection57(header, elements interface{}) (interface{}, error) {
	return types.NewSection(5, header.(types.SectionTitle), elements.([]interface{}))

}

func (p *parser) callonSection57() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection57(stack["header"], stack["elements"])
}

func (c *current) onSection51(section interface{}) (interface{}, error) {
	return section, nil

}

func (p *parser) callonSection51() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection51(stack["section"])
}

func (c *current) onSection5Title25() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Title25() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Title25()
}

func (c *current) onSection5Title15() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Title15() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Title15()
}

func (c *current) onSection5Title11(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonSection5Title11() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Title11(stack["id"])
}

func (c *current) onSection5Title9(id interface{}) (interface{}, error) {
	return id, nil
}

func (p *parser) callonSection5Title9() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Title9(stack["id"])
}

func (c *current) onSection5Title53() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Title53() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Title53()
}

func (c *current) onSection5Title43() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Title43() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Title43()
}

func (c *current) onSection5Title39(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonSection5Title39() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Title39(stack["id"])
}

func (c *current) onSection5Title75() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Title75() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Title75()
}

func (c *current) onSection5Title78() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Title78() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Title78()
}

func (c *current) onSection5Title67(title interface{}) (interface{}, error) {
	return types.NewElementTitle(title.(string))
}

func (p *parser) callonSection5Title67() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Title67(stack["title"])
}

func (c *current) onSection5Title92() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Title92() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Title92()
}

func (c *current) onSection5Title95() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Title95() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Title95()
}

func (c *current) onSection5Title86(role interface{}) (interface{}, error) {
	return types.NewElementRole(role.(string))
}

func (p *parser) callonSection5Title86() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Title86(stack["role"])
}

func (c *current) onSection5Title111() (interface{}, error) {
	return types.Tip, nil
}

func (p *parser) callonSection5Title111() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Title111()
}

func (c *current) onSection5Title113() (interface{}, error) {
	return types.Note, nil
}

func (p *parser) callonSection5Title113() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Title113()
}

func (c *current) onSection5Title115() (interface{}, error) {
	return types.Important, nil
}

func (p *parser) callonSection5Title115() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Title115()
}

func (c *current) onSection5Title117() (interface{}, error) {
	return types.Warning, nil
}

func (p *parser) callonSection5Title117() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Title117()
}

func (c *current) onSection5Title119() (interface{}, error) {
	return types.Caution, nil
}

func (p *parser) callonSection5Title119() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Title119()
}

func (c *current) onSection5Title106(k interface{}) (interface{}, error) {
	return types.NewAdmonitionAttribute(k.(types.AdmonitionKind))
}

func (p *parser) callonSection5Title106() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Title106(stack["k"])
}

func (c *current) onSection5Title122() (interface{}, error) {
	return types.ElementAttributes{"layout": "horizontal"}, nil
}

func (p *parser) callonSection5Title122() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Title122()
}

func (c *current) onSection5Title130() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Title130() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Title130()
}

func (c *current) onSection5Title141() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Title141() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Title141()
}

func (c *current) onSection5Title144() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Title144() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Title144()
}

func (c *current) onSection5Title138(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Title138() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Title138(stack["key"])
}

func (c *current) onSection5Title158(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Title158() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Title158(stack["value"])
}

func (c *current) onSection5Title174() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Title174() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Title174()
}

func (c *current) onSection5Title135(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonSection5Title135() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Title135(stack["key"], stack["value"])
}

func (c *current) onSection5Title182() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Title182() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Title182()
}

func (c *current) onSection5Title185() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Title185() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Title185()
}

func (c *current) onSection5Title179(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Title179() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Title179(stack["key"])
}

func (c *current) onSection5Title202() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Title202() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Title202()
}

func (c *current) onSection5Title176(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonSection5Title176() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Title176(stack["key"])
}

func (c *current) onSection5Title124(attributes interface{}) (interface{}, error) {
	return types.NewAttributeGroup(attributes.([]interface{}))
}

func (p *parser) callonSection5Title124() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Title124(stack["attributes"])
}

func (c *current) onSection5Title208() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Title208() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Title208()
}

func (c *current) onSection5Title5(attr interface{}) (interface{}, error) {
	return attr, nil // avoid returning something like `[]interface{}{attr, EOL}`
}

func (p *parser) callonSection5Title5() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Title5(stack["attr"])
}

func (c *current) onSection5Title219() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Title219() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Title219()
}

func (c *current) onSection5Title226() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Title226() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Title226()
}

func (c *current) onSection5Title244() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Title244() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Title244()
}

func (c *current) onSection5Title234() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Title234() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Title234()
}

func (c *current) onSection5Title230(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonSection5Title230() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Title230(stack["id"])
}

func (c *current) onSection5Title1(attributes, content, id interface{}) (interface{}, error) {
	return types.NewSectionTitle(content.(types.InlineElements), append(attributes.([]interface{}), id))
}

func (p *parser) callonSection5Title1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Title1(stack["attributes"], stack["content"], stack["id"])
}

func (c *current) onSection5Block1(content interface{}) (interface{}, error) {
	return content, nil
}

func (p *parser) callonSection5Block1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Block1(stack["content"])
}

func (c *current) onTitleElements12() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElements12() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElements12()
}

func (c *current) onTitleElements29() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElements29() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElements29()
}

func (c *current) onTitleElements19() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElements19() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElements19()
}

func (c *current) onTitleElements15(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonTitleElements15() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElements15(stack["id"])
}

func (c *current) onTitleElements47() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElements47() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElements47()
}

func (c *current) onTitleElements1(elements interface{}) (interface{}, error) {
	// absorbs heading and trailing spaces
	return types.NewInlineElements(elements.([]interface{}))
}

func (p *parser) callonTitleElements1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElements1(stack["elements"])
}

func (c *current) onTitleElement18() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement18() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement18()
}

func (c *current) onTitleElement8() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement8() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement8()
}

func (c *current) onTitleElement34() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement34() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement34()
}

func (c *current) onTitleElement38() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement38() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement38()
}

func (c *current) onTitleElement4(id, label interface{}) (interface{}, error) {
	return types.NewCrossReference(id.(string), label.(string))
}

func (p *parser) callonTitleElement4() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement4(stack["id"], stack["label"])
}

func (c *current) onTitleElement59() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement59() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement59()
}

func (c *current) onTitleElement49() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement49() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement49()
}

func (c *current) onTitleElement45(id interface{}) (interface{}, error) {
	return types.NewCrossReference(id.(string), nil)
}

func (p *parser) callonTitleElement45() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement45(stack["id"])
}

func (c *current) onTitleElement90() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement90() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement90()
}

func (c *current) onTitleElement80() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement80() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement80()
}

func (c *current) onTitleElement103() (interface{}, error) {
	// attribute is followed by "," or "]" (but do not consume the latter)
	return string(c.text), nil
}

func (p *parser) callonTitleElement103() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement103()
}

func (c *current) onTitleElement115() (interface{}, error) {
	// attribute is followed by "," or "]" (but do not consume the latter)
	return string(c.text), nil
}

func (p *parser) callonTitleElement115() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement115()
}

func (c *current) onTitleElement127() (interface{}, error) {
	// attribute is followed by "," or "]" (but do not consume the latter)
	return string(c.text), nil
}

func (p *parser) callonTitleElement127() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement127()
}

func (c *current) onTitleElement148() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement148() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement148()
}

func (c *current) onTitleElement151() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement151() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement151()
}

func (c *current) onTitleElement145(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement145() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement145(stack["key"])
}

func (c *current) onTitleElement165(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement165() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement165(stack["value"])
}

func (c *current) onTitleElement181() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement181() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement181()
}

func (c *current) onTitleElement142(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonTitleElement142() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement142(stack["key"], stack["value"])
}

func (c *current) onTitleElement189() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement189() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement189()
}

func (c *current) onTitleElement192() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement192() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement192()
}

func (c *current) onTitleElement186(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement186() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement186(stack["key"])
}

func (c *current) onTitleElement209() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement209() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement209()
}

func (c *current) onTitleElement183(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonTitleElement183() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement183(stack["key"])
}

func (c *current) onTitleElement99(alt, width, height, otherAttrs interface{}) (interface{}, error) {
	return types.NewImageAttributes(alt, width, height, otherAttrs.([]interface{}))

}

func (p *parser) callonTitleElement99() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement99(stack["alt"], stack["width"], stack["height"], stack["otherAttrs"])
}

func (c *current) onTitleElement216() (interface{}, error) {
	// attribute is followed by "," or "]" (but do not consume the latter)
	return string(c.text), nil
}

func (p *parser) callonTitleElement216() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement216()
}

func (c *current) onTitleElement228() (interface{}, error) {
	// attribute is followed by "," or "]" (but do not consume the latter)
	return string(c.text), nil
}

func (p *parser) callonTitleElement228() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement228()
}

func (c *current) onTitleElement249() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement249() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement249()
}

func (c *current) onTitleElement252() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement252() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement252()
}

func (c *current) onTitleElement246(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement246() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement246(stack["key"])
}

func (c *current) onTitleElement266(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement266() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement266(stack["value"])
}

func (c *current) onTitleElement282() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement282() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement282()
}

func (c *current) onTitleElement243(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonTitleElement243() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement243(stack["key"], stack["value"])
}

func (c *current) onTitleElement290() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement290() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement290()
}

func (c *current) onTitleElement293() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement293() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement293()
}

func (c *current) onTitleElement287(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement287() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement287(stack["key"])
}

func (c *current) onTitleElement310() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement310() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement310()
}

func (c *current) onTitleElement284(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonTitleElement284() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement284(stack["key"])
}

func (c *current) onTitleElement212(alt, width, otherAttrs interface{}) (interface{}, error) {
	return types.NewImageAttributes(alt, width, nil, otherAttrs.([]interface{}))

}

func (p *parser) callonTitleElement212() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement212(stack["alt"], stack["width"], stack["otherAttrs"])
}

func (c *current) onTitleElement317() (interface{}, error) {
	// attribute is followed by "," or "]" (but do not consume the latter)
	return string(c.text), nil
}

func (p *parser) callonTitleElement317() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement317()
}

func (c *current) onTitleElement338() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement338() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement338()
}

func (c *current) onTitleElement341() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement341() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement341()
}

func (c *current) onTitleElement335(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement335() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement335(stack["key"])
}

func (c *current) onTitleElement355(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement355() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement355(stack["value"])
}

func (c *current) onTitleElement371() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement371() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement371()
}

func (c *current) onTitleElement332(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonTitleElement332() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement332(stack["key"], stack["value"])
}

func (c *current) onTitleElement379() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement379() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement379()
}

func (c *current) onTitleElement382() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement382() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement382()
}

func (c *current) onTitleElement376(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement376() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement376(stack["key"])
}

func (c *current) onTitleElement399() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement399() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement399()
}

func (c *current) onTitleElement373(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonTitleElement373() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement373(stack["key"])
}

func (c *current) onTitleElement313(alt, otherAttrs interface{}) (interface{}, error) {
	return types.NewImageAttributes(alt, nil, nil, otherAttrs.([]interface{}))

}

func (p *parser) callonTitleElement313() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement313(stack["alt"], stack["otherAttrs"])
}

func (c *current) onTitleElement414() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement414() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement414()
}

func (c *current) onTitleElement417() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement417() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement417()
}

func (c *current) onTitleElement411(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement411() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement411(stack["key"])
}

func (c *current) onTitleElement431(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement431() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement431(stack["value"])
}

func (c *current) onTitleElement447() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement447() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement447()
}

func (c *current) onTitleElement408(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonTitleElement408() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement408(stack["key"], stack["value"])
}

func (c *current) onTitleElement455() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement455() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement455()
}

func (c *current) onTitleElement458() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement458() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement458()
}

func (c *current) onTitleElement452(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement452() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement452(stack["key"])
}

func (c *current) onTitleElement475() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement475() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement475()
}

func (c *current) onTitleElement449(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonTitleElement449() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement449(stack["key"])
}

func (c *current) onTitleElement402(otherAttrs interface{}) (interface{}, error) {
	return types.NewImageAttributes(nil, nil, nil, otherAttrs.([]interface{}))

}

func (p *parser) callonTitleElement402() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement402(stack["otherAttrs"])
}

func (c *current) onTitleElement74(path, attributes interface{}) (interface{}, error) {
	return types.NewInlineImage(path.(string), attributes.(types.ElementAttributes))
}

func (p *parser) callonTitleElement74() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement74(stack["path"], stack["attributes"])
}

func (c *current) onTitleElement505() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement505() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement505()
}

func (c *current) onTitleElement495() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement495() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement495()
}

func (c *current) onTitleElement486() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement486() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement486()
}

func (c *current) onTitleElement518() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement518() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement518()
}

func (c *current) onTitleElement535() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement535() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement535()
}

func (c *current) onTitleElement538() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement538() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement538()
}

func (c *current) onTitleElement532(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement532() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement532(stack["key"])
}

func (c *current) onTitleElement552(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement552() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement552(stack["value"])
}

func (c *current) onTitleElement568() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement568() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement568()
}

func (c *current) onTitleElement529(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonTitleElement529() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement529(stack["key"], stack["value"])
}

func (c *current) onTitleElement576() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement576() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement576()
}

func (c *current) onTitleElement579() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement579() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement579()
}

func (c *current) onTitleElement573(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement573() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement573(stack["key"])
}

func (c *current) onTitleElement596() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement596() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement596()
}

func (c *current) onTitleElement570(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonTitleElement570() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement570(stack["key"])
}

func (c *current) onTitleElement514(text, otherAttrs interface{}) (interface{}, error) {
	return types.NewLinkAttributes(text, otherAttrs.([]interface{}))
}

func (p *parser) callonTitleElement514() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement514(stack["text"], stack["otherAttrs"])
}

func (c *current) onTitleElement611() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement611() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement611()
}

func (c *current) onTitleElement614() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement614() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement614()
}

func (c *current) onTitleElement608(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement608() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement608(stack["key"])
}

func (c *current) onTitleElement628(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement628() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement628(stack["value"])
}

func (c *current) onTitleElement644() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement644() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement644()
}

func (c *current) onTitleElement605(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonTitleElement605() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement605(stack["key"], stack["value"])
}

func (c *current) onTitleElement652() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement652() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement652()
}

func (c *current) onTitleElement655() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement655() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement655()
}

func (c *current) onTitleElement649(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement649() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement649(stack["key"])
}

func (c *current) onTitleElement672() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement672() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement672()
}

func (c *current) onTitleElement646(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonTitleElement646() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement646(stack["key"])
}

func (c *current) onTitleElement599(otherAttrs interface{}) (interface{}, error) {
	return types.NewLinkAttributes(nil, otherAttrs.([]interface{}))
}

func (p *parser) callonTitleElement599() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement599(stack["otherAttrs"])
}

func (c *current) onTitleElement482(url, attributes interface{}) (interface{}, error) {
	return types.NewLink(url.(string), attributes.(types.ElementAttributes))
}

func (p *parser) callonTitleElement482() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement482(stack["url"], stack["attributes"])
}

func (c *current) onTitleElement696() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement696() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement696()
}

func (c *current) onTitleElement686() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement686() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement686()
}

func (c *current) onTitleElement678() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement678() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement678()
}

func (c *current) onTitleElement709() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement709() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement709()
}

func (c *current) onTitleElement726() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement726() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement726()
}

func (c *current) onTitleElement729() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement729() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement729()
}

func (c *current) onTitleElement723(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement723() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement723(stack["key"])
}

func (c *current) onTitleElement743(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement743() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement743(stack["value"])
}

func (c *current) onTitleElement759() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement759() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement759()
}

func (c *current) onTitleElement720(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonTitleElement720() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement720(stack["key"], stack["value"])
}

func (c *current) onTitleElement767() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement767() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement767()
}

func (c *current) onTitleElement770() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement770() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement770()
}

func (c *current) onTitleElement764(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement764() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement764(stack["key"])
}

func (c *current) onTitleElement787() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement787() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement787()
}

func (c *current) onTitleElement761(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonTitleElement761() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement761(stack["key"])
}

func (c *current) onTitleElement705(text, otherAttrs interface{}) (interface{}, error) {
	return types.NewLinkAttributes(text, otherAttrs.([]interface{}))
}

func (p *parser) callonTitleElement705() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement705(stack["text"], stack["otherAttrs"])
}

func (c *current) onTitleElement802() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement802() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement802()
}

func (c *current) onTitleElement805() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement805() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement805()
}

func (c *current) onTitleElement799(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement799() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement799(stack["key"])
}

func (c *current) onTitleElement819(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement819() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement819(stack["value"])
}

func (c *current) onTitleElement835() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement835() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement835()
}

func (c *current) onTitleElement796(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonTitleElement796() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement796(stack["key"], stack["value"])
}

func (c *current) onTitleElement843() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement843() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement843()
}

func (c *current) onTitleElement846() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement846() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement846()
}

func (c *current) onTitleElement840(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement840() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement840(stack["key"])
}

func (c *current) onTitleElement863() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement863() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement863()
}

func (c *current) onTitleElement837(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonTitleElement837() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement837(stack["key"])
}

func (c *current) onTitleElement790(otherAttrs interface{}) (interface{}, error) {
	return types.NewLinkAttributes(nil, otherAttrs.([]interface{}))
}

func (p *parser) callonTitleElement790() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement790(stack["otherAttrs"])
}

func (c *current) onTitleElement675(url, attributes interface{}) (interface{}, error) {
	return types.NewLink(url.(string), attributes.(types.ElementAttributes))
}

func (p *parser) callonTitleElement675() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement675(stack["url"], stack["attributes"])
}

func (c *current) onTitleElement886() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement886() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement886()
}

func (c *current) onTitleElement876() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement876() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement876()
}

func (c *current) onTitleElement868() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement868() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement868()
}

func (c *current) onTitleElement866(url interface{}) (interface{}, error) {
	return types.NewLink(url.(string), nil)
}

func (p *parser) callonTitleElement866() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement866(stack["url"])
}

func (c *current) onTitleElement479(link interface{}) (interface{}, error) {
	return link, nil
}

func (p *parser) callonTitleElement479() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement479(stack["link"])
}

func (c *current) onTitleElement897() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement897() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement897()
}

func (c *current) onTitleElement893(name interface{}) (interface{}, error) {
	return types.NewDocumentAttributeSubstitution(name.(string))
}

func (p *parser) callonTitleElement893() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement893(stack["name"])
}

func (c *current) onTitleElement914() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement914() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement914()
}

func (c *current) onTitleElement904() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement904() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement904()
}

func (c *current) onTitleElement1(element interface{}) (interface{}, error) {
	return element, nil
}

func (p *parser) callonTitleElement1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement1(stack["element"])
}

func (c *current) onList25() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonList25() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onList25()
}

func (c *current) onList15() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonList15() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onList15()
}

func (c *current) onList11(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonList11() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onList11(stack["id"])
}

func (c *current) onList9(id interface{}) (interface{}, error) {
	return id, nil
}

func (p *parser) callonList9() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onList9(stack["id"])
}

func (c *current) onList53() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonList53() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onList53()
}

func (c *current) onList43() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonList43() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onList43()
}

func (c *current) onList39(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonList39() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onList39(stack["id"])
}

func (c *current) onList75() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonList75() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onList75()
}

func (c *current) onList78() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonList78() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onList78()
}

func (c *current) onList67(title interface{}) (interface{}, error) {
	return types.NewElementTitle(title.(string))
}

func (p *parser) callonList67() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onList67(stack["title"])
}

func (c *current) onList92() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonList92() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onList92()
}

func (c *current) onList95() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonList95() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onList95()
}

func (c *current) onList86(role interface{}) (interface{}, error) {
	return types.NewElementRole(role.(string))
}

func (p *parser) callonList86() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onList86(stack["role"])
}

func (c *current) onList111() (interface{}, error) {
	return types.Tip, nil
}

func (p *parser) callonList111() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onList111()
}

func (c *current) onList113() (interface{}, error) {
	return types.Note, nil
}

func (p *parser) callonList113() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onList113()
}

func (c *current) onList115() (interface{}, error) {
	return types.Important, nil
}

func (p *parser) callonList115() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onList115()
}

func (c *current) onList117() (interface{}, error) {
	return types.Warning, nil
}

func (p *parser) callonList117() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onList117()
}

func (c *current) onList119() (interface{}, error) {
	return types.Caution, nil
}

func (p *parser) callonList119() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onList119()
}

func (c *current) onList106(k interface{}) (interface{}, error) {
	return types.NewAdmonitionAttribute(k.(types.AdmonitionKind))
}

func (p *parser) callonList106() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onList106(stack["k"])
}

func (c *current) onList122() (interface{}, error) {
	return types.ElementAttributes{"layout": "horizontal"}, nil
}

func (p *parser) callonList122() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onList122()
}

func (c *current) onList130() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonList130() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onList130()
}

func (c *current) onList141() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonList141() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onList141()
}

func (c *current) onList144() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonList144() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onList144()
}

func (c *current) onList138(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonList138() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onList138(stack["key"])
}

func (c *current) onList158(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonList158() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onList158(stack["value"])
}

func (c *current) onList174() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonList174() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onList174()
}

func (c *current) onList135(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonList135() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onList135(stack["key"], stack["value"])
}

func (c *current) onList182() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonList182() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onList182()
}

func (c *current) onList185() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonList185() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onList185()
}

func (c *current) onList179(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonList179() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onList179(stack["key"])
}

func (c *current) onList202() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonList202() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onList202()
}

func (c *current) onList176(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonList176() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onList176(stack["key"])
}

func (c *current) onList124(attributes interface{}) (interface{}, error) {
	return types.NewAttributeGroup(attributes.([]interface{}))
}

func (p *parser) callonList124() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onList124(stack["attributes"])
}

func (c *current) onList208() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonList208() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onList208()
}

func (c *current) onList5(attr interface{}) (interface{}, error) {
	return attr, nil // avoid returning something like `[]interface{}{attr, EOL}`
}

func (p *parser) callonList5() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onList5(stack["attr"])
}

func (c *current) onList1(attributes, elements interface{}) (interface{}, error) {
	return types.NewList(elements.([]interface{}), attributes.([]interface{}))
}

func (p *parser) callonList1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onList1(stack["attributes"], stack["elements"])
}

func (c *current) onListParagraph1(lines interface{}) (interface{}, error) {
	return types.NewParagraph(lines.([]interface{}), nil)
}

func (p *parser) callonListParagraph1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraph1(stack["lines"])
}

func (c *current) onListParagraphLine9() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine9() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine9()
}

func (c *current) onListParagraphLine13() (interface{}, error) {
	// numbering style: "....."
	return types.NewOrderedListItemPrefix(types.UpperRoman, 5)

}

func (p *parser) callonListParagraphLine13() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine13()
}

func (c *current) onListParagraphLine15() (interface{}, error) {
	// numbering style: "...."
	return types.NewOrderedListItemPrefix(types.UpperAlpha, 4)

}

func (p *parser) callonListParagraphLine15() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine15()
}

func (c *current) onListParagraphLine17() (interface{}, error) {
	// numbering style: "..."
	return types.NewOrderedListItemPrefix(types.LowerRoman, 3)

}

func (p *parser) callonListParagraphLine17() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine17()
}

func (c *current) onListParagraphLine19() (interface{}, error) {
	// numbering style: ".."
	return types.NewOrderedListItemPrefix(types.LowerAlpha, 2)

}

func (p *parser) callonListParagraphLine19() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine19()
}

func (c *current) onListParagraphLine21() (interface{}, error) {
	// numbering style: "."
	return types.NewOrderedListItemPrefix(types.Arabic, 1)
	// explicit numbering

}

func (p *parser) callonListParagraphLine21() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine21()
}

func (c *current) onListParagraphLine23() (interface{}, error) {
	// numbering style: "1."
	return types.NewOrderedListItemPrefix(types.Arabic, 1)

}

func (p *parser) callonListParagraphLine23() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine23()
}

func (c *current) onListParagraphLine28() (interface{}, error) {
	// numbering style: "a."
	return types.NewOrderedListItemPrefix(types.LowerAlpha, 1)

}

func (p *parser) callonListParagraphLine28() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine28()
}

func (c *current) onListParagraphLine33() (interface{}, error) {
	// numbering style: "A."
	return types.NewOrderedListItemPrefix(types.UpperAlpha, 1)

}

func (p *parser) callonListParagraphLine33() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine33()
}

func (c *current) onListParagraphLine38() (interface{}, error) {
	// numbering style: "i)"
	return types.NewOrderedListItemPrefix(types.LowerRoman, 1)

}

func (p *parser) callonListParagraphLine38() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine38()
}

func (c *current) onListParagraphLine43() (interface{}, error) {
	// numbering style: "I)"
	return types.NewOrderedListItemPrefix(types.UpperRoman, 1)

}

func (p *parser) callonListParagraphLine43() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine43()
}

func (c *current) onListParagraphLine51() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine51() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine51()
}

func (c *current) onListParagraphLine4(prefix interface{}) (interface{}, error) {
	return prefix, nil

}

func (p *parser) callonListParagraphLine4() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine4(stack["prefix"])
}

func (c *current) onListParagraphLine59() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine59() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine59()
}

func (c *current) onListParagraphLine63() (interface{}, error) {
	// ignore whitespaces, only return the relevant "*"/"-" marker
	return types.NewUnorderedListItemPrefix(types.FiveAsterisks, 5)

}

func (p *parser) callonListParagraphLine63() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine63()
}

func (c *current) onListParagraphLine65() (interface{}, error) {
	// ignore whitespaces, only return the relevant "*"/"-" marker
	return types.NewUnorderedListItemPrefix(types.FourAsterisks, 4)

}

func (p *parser) callonListParagraphLine65() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine65()
}

func (c *current) onListParagraphLine67() (interface{}, error) {
	// ignore whitespaces, only return the relevant "*"/"-" marker
	return types.NewUnorderedListItemPrefix(types.ThreeAsterisks, 3)

}

func (p *parser) callonListParagraphLine67() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine67()
}

func (c *current) onListParagraphLine69() (interface{}, error) {
	// ignore whitespaces, only return the relevant "*"/"-" marker
	return types.NewUnorderedListItemPrefix(types.TwoAsterisks, 2)

}

func (p *parser) callonListParagraphLine69() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine69()
}

func (c *current) onListParagraphLine71() (interface{}, error) {
	// ignore whitespaces, only return the relevant "*"/"-" marker
	return types.NewUnorderedListItemPrefix(types.OneAsterisk, 1)

}

func (p *parser) callonListParagraphLine71() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine71()
}

func (c *current) onListParagraphLine73() (interface{}, error) {
	// ignore whitespaces, only return the relevant "*"/"-" marker
	return types.NewUnorderedListItemPrefix(types.Dash, 1)

}

func (p *parser) callonListParagraphLine73() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine73()
}

func (c *current) onListParagraphLine78() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine78() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine78()
}

func (c *current) onListParagraphLine54(prefix interface{}) (interface{}, error) {
	return prefix, nil

}

func (p *parser) callonListParagraphLine54() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine54(stack["prefix"])
}

func (c *current) onListParagraphLine82() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine82() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine82()
}

func (c *current) onListParagraphLine96() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine96() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine96()
}

func (c *current) onListParagraphLine107() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine107() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine107()
}

func (c *current) onListParagraphLine101() (interface{}, error) {
	return types.NewListItemContinuation()
}

func (p *parser) callonListParagraphLine101() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine101()
}

func (c *current) onListParagraphLine135() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine135() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine135()
}

func (c *current) onListParagraphLine125() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine125() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine125()
}

func (c *current) onListParagraphLine121(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonListParagraphLine121() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine121(stack["id"])
}

func (c *current) onListParagraphLine119(id interface{}) (interface{}, error) {
	return id, nil
}

func (p *parser) callonListParagraphLine119() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine119(stack["id"])
}

func (c *current) onListParagraphLine163() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine163() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine163()
}

func (c *current) onListParagraphLine153() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine153() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine153()
}

func (c *current) onListParagraphLine149(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonListParagraphLine149() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine149(stack["id"])
}

func (c *current) onListParagraphLine185() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine185() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine185()
}

func (c *current) onListParagraphLine188() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine188() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine188()
}

func (c *current) onListParagraphLine177(title interface{}) (interface{}, error) {
	return types.NewElementTitle(title.(string))
}

func (p *parser) callonListParagraphLine177() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine177(stack["title"])
}

func (c *current) onListParagraphLine202() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine202() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine202()
}

func (c *current) onListParagraphLine205() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine205() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine205()
}

func (c *current) onListParagraphLine196(role interface{}) (interface{}, error) {
	return types.NewElementRole(role.(string))
}

func (p *parser) callonListParagraphLine196() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine196(stack["role"])
}

func (c *current) onListParagraphLine221() (interface{}, error) {
	return types.Tip, nil
}

func (p *parser) callonListParagraphLine221() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine221()
}

func (c *current) onListParagraphLine223() (interface{}, error) {
	return types.Note, nil
}

func (p *parser) callonListParagraphLine223() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine223()
}

func (c *current) onListParagraphLine225() (interface{}, error) {
	return types.Important, nil
}

func (p *parser) callonListParagraphLine225() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine225()
}

func (c *current) onListParagraphLine227() (interface{}, error) {
	return types.Warning, nil
}

func (p *parser) callonListParagraphLine227() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine227()
}

func (c *current) onListParagraphLine229() (interface{}, error) {
	return types.Caution, nil
}

func (p *parser) callonListParagraphLine229() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine229()
}

func (c *current) onListParagraphLine216(k interface{}) (interface{}, error) {
	return types.NewAdmonitionAttribute(k.(types.AdmonitionKind))
}

func (p *parser) callonListParagraphLine216() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine216(stack["k"])
}

func (c *current) onListParagraphLine232() (interface{}, error) {
	return types.ElementAttributes{"layout": "horizontal"}, nil
}

func (p *parser) callonListParagraphLine232() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine232()
}

func (c *current) onListParagraphLine240() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine240() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine240()
}

func (c *current) onListParagraphLine251() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine251() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine251()
}

func (c *current) onListParagraphLine254() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine254() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine254()
}

func (c *current) onListParagraphLine248(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine248() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine248(stack["key"])
}

func (c *current) onListParagraphLine268(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine268() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine268(stack["value"])
}

func (c *current) onListParagraphLine284() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine284() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine284()
}

func (c *current) onListParagraphLine245(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonListParagraphLine245() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine245(stack["key"], stack["value"])
}

func (c *current) onListParagraphLine292() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine292() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine292()
}

func (c *current) onListParagraphLine295() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine295() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine295()
}

func (c *current) onListParagraphLine289(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine289() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine289(stack["key"])
}

func (c *current) onListParagraphLine312() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine312() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine312()
}

func (c *current) onListParagraphLine286(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonListParagraphLine286() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine286(stack["key"])
}

func (c *current) onListParagraphLine234(attributes interface{}) (interface{}, error) {
	return types.NewAttributeGroup(attributes.([]interface{}))
}

func (p *parser) callonListParagraphLine234() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine234(stack["attributes"])
}

func (c *current) onListParagraphLine318() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine318() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine318()
}

func (c *current) onListParagraphLine115(attr interface{}) (interface{}, error) {
	return attr, nil // avoid returning something like `[]interface{}{attr, EOL}`
}

func (p *parser) callonListParagraphLine115() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine115(stack["attr"])
}

func (c *current) onListParagraphLine1(line interface{}) (interface{}, error) {
	return line, nil
}

func (p *parser) callonListParagraphLine1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine1(stack["line"])
}

func (c *current) onContinuedDocumentBlock9() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonContinuedDocumentBlock9() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onContinuedDocumentBlock9()
}

func (c *current) onContinuedDocumentBlock3() (interface{}, error) {
	return types.NewListItemContinuation()
}

func (p *parser) callonContinuedDocumentBlock3() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onContinuedDocumentBlock3()
}

func (c *current) onContinuedDocumentBlock1(element interface{}) (interface{}, error) {
	return element, nil
}

func (p *parser) callonContinuedDocumentBlock1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onContinuedDocumentBlock1(stack["element"])
}

func (c *current) onOrderedListItem25() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem25() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem25()
}

func (c *current) onOrderedListItem15() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem15() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem15()
}

func (c *current) onOrderedListItem11(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonOrderedListItem11() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem11(stack["id"])
}

func (c *current) onOrderedListItem9(id interface{}) (interface{}, error) {
	return id, nil
}

func (p *parser) callonOrderedListItem9() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem9(stack["id"])
}

func (c *current) onOrderedListItem53() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem53() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem53()
}

func (c *current) onOrderedListItem43() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem43() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem43()
}

func (c *current) onOrderedListItem39(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonOrderedListItem39() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem39(stack["id"])
}

func (c *current) onOrderedListItem75() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem75() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem75()
}

func (c *current) onOrderedListItem78() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem78() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem78()
}

func (c *current) onOrderedListItem67(title interface{}) (interface{}, error) {
	return types.NewElementTitle(title.(string))
}

func (p *parser) callonOrderedListItem67() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem67(stack["title"])
}

func (c *current) onOrderedListItem92() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem92() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem92()
}

func (c *current) onOrderedListItem95() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem95() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem95()
}

func (c *current) onOrderedListItem86(role interface{}) (interface{}, error) {
	return types.NewElementRole(role.(string))
}

func (p *parser) callonOrderedListItem86() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem86(stack["role"])
}

func (c *current) onOrderedListItem111() (interface{}, error) {
	return types.Tip, nil
}

func (p *parser) callonOrderedListItem111() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem111()
}

func (c *current) onOrderedListItem113() (interface{}, error) {
	return types.Note, nil
}

func (p *parser) callonOrderedListItem113() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem113()
}

func (c *current) onOrderedListItem115() (interface{}, error) {
	return types.Important, nil
}

func (p *parser) callonOrderedListItem115() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem115()
}

func (c *current) onOrderedListItem117() (interface{}, error) {
	return types.Warning, nil
}

func (p *parser) callonOrderedListItem117() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem117()
}

func (c *current) onOrderedListItem119() (interface{}, error) {
	return types.Caution, nil
}

func (p *parser) callonOrderedListItem119() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem119()
}

func (c *current) onOrderedListItem106(k interface{}) (interface{}, error) {
	return types.NewAdmonitionAttribute(k.(types.AdmonitionKind))
}

func (p *parser) callonOrderedListItem106() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem106(stack["k"])
}

func (c *current) onOrderedListItem122() (interface{}, error) {
	return types.ElementAttributes{"layout": "horizontal"}, nil
}

func (p *parser) callonOrderedListItem122() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem122()
}

func (c *current) onOrderedListItem130() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem130() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem130()
}

func (c *current) onOrderedListItem141() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem141() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem141()
}

func (c *current) onOrderedListItem144() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem144() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem144()
}

func (c *current) onOrderedListItem138(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem138() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem138(stack["key"])
}

func (c *current) onOrderedListItem158(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem158() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem158(stack["value"])
}

func (c *current) onOrderedListItem174() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem174() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem174()
}

func (c *current) onOrderedListItem135(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonOrderedListItem135() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem135(stack["key"], stack["value"])
}

func (c *current) onOrderedListItem182() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem182() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem182()
}

func (c *current) onOrderedListItem185() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem185() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem185()
}

func (c *current) onOrderedListItem179(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem179() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem179(stack["key"])
}

func (c *current) onOrderedListItem202() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem202() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem202()
}

func (c *current) onOrderedListItem176(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonOrderedListItem176() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem176(stack["key"])
}

func (c *current) onOrderedListItem124(attributes interface{}) (interface{}, error) {
	return types.NewAttributeGroup(attributes.([]interface{}))
}

func (p *parser) callonOrderedListItem124() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem124(stack["attributes"])
}

func (c *current) onOrderedListItem208() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem208() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem208()
}

func (c *current) onOrderedListItem5(attr interface{}) (interface{}, error) {
	return attr, nil // avoid returning something like `[]interface{}{attr, EOL}`
}

func (p *parser) callonOrderedListItem5() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem5(stack["attr"])
}

func (c *current) onOrderedListItem221() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem221() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem221()
}

func (c *current) onOrderedListItem225() (interface{}, error) {
	// numbering style: "....."
	return types.NewOrderedListItemPrefix(types.UpperRoman, 5)

}

func (p *parser) callonOrderedListItem225() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem225()
}

func (c *current) onOrderedListItem227() (interface{}, error) {
	// numbering style: "...."
	return types.NewOrderedListItemPrefix(types.UpperAlpha, 4)

}

func (p *parser) callonOrderedListItem227() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem227()
}

func (c *current) onOrderedListItem229() (interface{}, error) {
	// numbering style: "..."
	return types.NewOrderedListItemPrefix(types.LowerRoman, 3)

}

func (p *parser) callonOrderedListItem229() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem229()
}

func (c *current) onOrderedListItem231() (interface{}, error) {
	// numbering style: ".."
	return types.NewOrderedListItemPrefix(types.LowerAlpha, 2)

}

func (p *parser) callonOrderedListItem231() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem231()
}

func (c *current) onOrderedListItem233() (interface{}, error) {
	// numbering style: "."
	return types.NewOrderedListItemPrefix(types.Arabic, 1)
	// explicit numbering

}

func (p *parser) callonOrderedListItem233() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem233()
}

func (c *current) onOrderedListItem235() (interface{}, error) {
	// numbering style: "1."
	return types.NewOrderedListItemPrefix(types.Arabic, 1)

}

func (p *parser) callonOrderedListItem235() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem235()
}

func (c *current) onOrderedListItem240() (interface{}, error) {
	// numbering style: "a."
	return types.NewOrderedListItemPrefix(types.LowerAlpha, 1)

}

func (p *parser) callonOrderedListItem240() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem240()
}

func (c *current) onOrderedListItem245() (interface{}, error) {
	// numbering style: "A."
	return types.NewOrderedListItemPrefix(types.UpperAlpha, 1)

}

func (p *parser) callonOrderedListItem245() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem245()
}

func (c *current) onOrderedListItem250() (interface{}, error) {
	// numbering style: "i)"
	return types.NewOrderedListItemPrefix(types.LowerRoman, 1)

}

func (p *parser) callonOrderedListItem250() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem250()
}

func (c *current) onOrderedListItem255() (interface{}, error) {
	// numbering style: "I)"
	return types.NewOrderedListItemPrefix(types.UpperRoman, 1)

}

func (p *parser) callonOrderedListItem255() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem255()
}

func (c *current) onOrderedListItem263() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem263() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem263()
}

func (c *current) onOrderedListItem216(prefix interface{}) (interface{}, error) {
	return prefix, nil

}

func (p *parser) callonOrderedListItem216() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem216(stack["prefix"])
}

func (c *current) onOrderedListItem276() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem276() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem276()
}

func (c *current) onOrderedListItem268() (interface{}, error) {
	return types.NewBlankLine()
}

func (p *parser) callonOrderedListItem268() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem268()
}

func (c *current) onOrderedListItem1(attributes, prefix, content interface{}) (interface{}, error) {
	return types.NewOrderedListItem(prefix.(types.OrderedListItemPrefix), content.([]interface{}), attributes.([]interface{}))
}

func (p *parser) callonOrderedListItem1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem1(stack["attributes"], stack["prefix"], stack["content"])
}

func (c *current) onOrderedListItemContent1(elements interface{}) (interface{}, error) {
	// Another list or a literal paragraph immediately following a list item will be implicitly included in the list item
	return types.NewListItemContent(elements.([]interface{}))
}

func (p *parser) callonOrderedListItemContent1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItemContent1(stack["elements"])
}

func (c *current) onUnorderedListItem9() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonUnorderedListItem9() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onUnorderedListItem9()
}

func (c *current) onUnorderedListItem13() (interface{}, error) {
	// ignore whitespaces, only return the relevant "*"/"-" marker
	return types.NewUnorderedListItemPrefix(types.FiveAsterisks, 5)

}

func (p *parser) callonUnorderedListItem13() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onUnorderedListItem13()
}

func (c *current) onUnorderedListItem15() (interface{}, error) {
	// ignore whitespaces, only return the relevant "*"/"-" marker
	return types.NewUnorderedListItemPrefix(types.FourAsterisks, 4)

}

func (p *parser) callonUnorderedListItem15() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onUnorderedListItem15()
}

func (c *current) onUnorderedListItem17() (interface{}, error) {
	// ignore whitespaces, only return the relevant "*"/"-" marker
	return types.NewUnorderedListItemPrefix(types.ThreeAsterisks, 3)

}

func (p *parser) callonUnorderedListItem17() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onUnorderedListItem17()
}

func (c *current) onUnorderedListItem19() (interface{}, error) {
	// ignore whitespaces, only return the relevant "*"/"-" marker
	return types.NewUnorderedListItemPrefix(types.TwoAsterisks, 2)

}

func (p *parser) callonUnorderedListItem19() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onUnorderedListItem19()
}

func (c *current) onUnorderedListItem21() (interface{}, error) {
	// ignore whitespaces, only return the relevant "*"/"-" marker
	return types.NewUnorderedListItemPrefix(types.OneAsterisk, 1)

}

func (p *parser) callonUnorderedListItem21() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onUnorderedListItem21()
}

func (c *current) onUnorderedListItem23() (interface{}, error) {
	// ignore whitespaces, only return the relevant "*"/"-" marker
	return types.NewUnorderedListItemPrefix(types.Dash, 1)

}

func (p *parser) callonUnorderedListItem23() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onUnorderedListItem23()
}

func (c *current) onUnorderedListItem28() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonUnorderedListItem28() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onUnorderedListItem28()
}

func (c *current) onUnorderedListItem4(prefix interface{}) (interface{}, error) {
	return prefix, nil

}

func (p *parser) callonUnorderedListItem4() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onUnorderedListItem4(stack["prefix"])
}

func (c *current) onUnorderedListItem41() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonUnorderedListItem41() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onUnorderedListItem41()
}

func (c *current) onUnorderedListItem33() (interface{}, error) {
	return types.NewBlankLine()
}

func (p *parser) callonUnorderedListItem33() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onUnorderedListItem33()
}

func (c *current) onUnorderedListItem1(prefix, content interface{}) (interface{}, error) {
	return types.NewUnorderedListItem(prefix.(types.UnorderedListItemPrefix), content.([]interface{}))
}

func (p *parser) callonUnorderedListItem1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onUnorderedListItem1(stack["prefix"], stack["content"])
}

func (c *current) onUnorderedListItemContent1(elements interface{}) (interface{}, error) {
	// Another list or a literal paragraph immediately following a list item will be implicitly included in the list item
	return types.NewListItemContent(elements.([]interface{}))
}

func (p *parser) callonUnorderedListItemContent1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onUnorderedListItemContent1(stack["elements"])
}

func (c *current) onLabeledListItem5() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonLabeledListItem5() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onLabeledListItem5()
}

func (c *current) onLabeledListItem19() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonLabeledListItem19() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onLabeledListItem19()
}

func (c *current) onLabeledListItem2(term, description interface{}) (interface{}, error) {
	return types.NewLabeledListItem(term.(string), description.([]interface{}))

}

func (p *parser) callonLabeledListItem2() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onLabeledListItem2(stack["term"], stack["description"])
}

func (c *current) onLabeledListItem28() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonLabeledListItem28() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onLabeledListItem28()
}

func (c *current) onLabeledListItem42() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonLabeledListItem42() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onLabeledListItem42()
}

func (c *current) onLabeledListItem25(term interface{}) (interface{}, error) {
	// here, WS is optional since there is no description afterwards
	return types.NewLabeledListItem(term.(string), nil)

}

func (p *parser) callonLabeledListItem25() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onLabeledListItem25(stack["term"])
}

func (c *current) onLabeledListItemDescription1(elements interface{}) (interface{}, error) {
	// TODO: replace with (ListParagraph+ ContinuedDocumentBlock*) and use a single rule for all item contents ?
	return types.NewListItemContent(elements.([]interface{}))
}

func (p *parser) callonLabeledListItemDescription1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onLabeledListItemDescription1(stack["elements"])
}

func (c *current) onParagraph18() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph18() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph18()
}

func (c *current) onParagraph21() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph21() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph21()
}

func (c *current) onParagraph34() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph34() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph34()
}

func (c *current) onParagraph46() (interface{}, error) {
	return types.Tip, nil
}

func (p *parser) callonParagraph46() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph46()
}

func (c *current) onParagraph48() (interface{}, error) {
	return types.Note, nil
}

func (p *parser) callonParagraph48() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph48()
}

func (c *current) onParagraph50() (interface{}, error) {
	return types.Important, nil
}

func (p *parser) callonParagraph50() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph50()
}

func (c *current) onParagraph52() (interface{}, error) {
	return types.Warning, nil
}

func (p *parser) callonParagraph52() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph52()
}

func (c *current) onParagraph54() (interface{}, error) {
	return types.Caution, nil
}

func (p *parser) callonParagraph54() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph54()
}

func (c *current) onParagraph15() (interface{}, error) {
	// make sure quote attribute does not collide with other generic or specific attributes (ID, Admonition, etc)
	return string(c.text), nil
}

func (p *parser) callonParagraph15() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph15()
}

func (c *current) onParagraph60() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph60() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph60()
}

func (c *current) onParagraph64() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph64() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph64()
}

func (c *current) onParagraph80() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph80() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph80()
}

func (c *current) onParagraph11(kind, author, title interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), author.(string), title.(string))

}

func (p *parser) callonParagraph11() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph11(stack["kind"], stack["author"], stack["title"])
}

func (c *current) onParagraph102() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph102() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph102()
}

func (c *current) onParagraph105() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph105() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph105()
}

func (c *current) onParagraph118() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph118() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph118()
}

func (c *current) onParagraph130() (interface{}, error) {
	return types.Tip, nil
}

func (p *parser) callonParagraph130() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph130()
}

func (c *current) onParagraph132() (interface{}, error) {
	return types.Note, nil
}

func (p *parser) callonParagraph132() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph132()
}

func (c *current) onParagraph134() (interface{}, error) {
	return types.Important, nil
}

func (p *parser) callonParagraph134() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph134()
}

func (c *current) onParagraph136() (interface{}, error) {
	return types.Warning, nil
}

func (p *parser) callonParagraph136() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph136()
}

func (c *current) onParagraph138() (interface{}, error) {
	return types.Caution, nil
}

func (p *parser) callonParagraph138() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph138()
}

func (c *current) onParagraph99() (interface{}, error) {
	// make sure quote attribute does not collide with other generic or specific attributes (ID, Admonition, etc)
	return string(c.text), nil
}

func (p *parser) callonParagraph99() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph99()
}

func (c *current) onParagraph144() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph144() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph144()
}

func (c *current) onParagraph148() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph148() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph148()
}

func (c *current) onParagraph95(kind, author interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), author.(string), "")

}

func (p *parser) callonParagraph95() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph95(stack["kind"], stack["author"])
}

func (c *current) onParagraph170() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph170() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph170()
}

func (c *current) onParagraph173() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph173() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph173()
}

func (c *current) onParagraph186() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph186() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph186()
}

func (c *current) onParagraph198() (interface{}, error) {
	return types.Tip, nil
}

func (p *parser) callonParagraph198() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph198()
}

func (c *current) onParagraph200() (interface{}, error) {
	return types.Note, nil
}

func (p *parser) callonParagraph200() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph200()
}

func (c *current) onParagraph202() (interface{}, error) {
	return types.Important, nil
}

func (p *parser) callonParagraph202() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph202()
}

func (c *current) onParagraph204() (interface{}, error) {
	return types.Warning, nil
}

func (p *parser) callonParagraph204() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph204()
}

func (c *current) onParagraph206() (interface{}, error) {
	return types.Caution, nil
}

func (p *parser) callonParagraph206() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph206()
}

func (c *current) onParagraph167() (interface{}, error) {
	// make sure quote attribute does not collide with other generic or specific attributes (ID, Admonition, etc)
	return string(c.text), nil
}

func (p *parser) callonParagraph167() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph167()
}

func (c *current) onParagraph212() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph212() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph212()
}

func (c *current) onParagraph163(kind interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), "", "")

}

func (p *parser) callonParagraph163() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph163(stack["kind"])
}

func (c *current) onParagraph219() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph219() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph219()
}

func (c *current) onParagraph224() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph224() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph224()
}

func (c *current) onParagraph228() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph228() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph228()
}

func (c *current) onParagraph244() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph244() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph244()
}

func (c *current) onParagraph215(kind, author, title interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), author.(string), title.(string))

}

func (p *parser) callonParagraph215() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph215(stack["kind"], stack["author"], stack["title"])
}

func (c *current) onParagraph263() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph263() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph263()
}

func (c *current) onParagraph268() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph268() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph268()
}

func (c *current) onParagraph272() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph272() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph272()
}

func (c *current) onParagraph259(kind, author interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), author.(string), "")

}

func (p *parser) callonParagraph259() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph259(stack["kind"], stack["author"])
}

func (c *current) onParagraph291() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph291() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph291()
}

func (c *current) onParagraph296() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph296() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph296()
}

func (c *current) onParagraph287(kind interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), "", "")

}

func (p *parser) callonParagraph287() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph287(stack["kind"])
}

func (c *current) onParagraph302() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph302() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph302()
}

func (c *current) onParagraph7(attr interface{}) (interface{}, error) {
	return attr, nil // avoid returning something like `[]interface{}{attr, EOL}`
}

func (p *parser) callonParagraph7() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph7(stack["attr"])
}

func (c *current) onParagraph329() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph329() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph329()
}

func (c *current) onParagraph319() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph319() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph319()
}

func (c *current) onParagraph315(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonParagraph315() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph315(stack["id"])
}

func (c *current) onParagraph313(id interface{}) (interface{}, error) {
	return id, nil
}

func (p *parser) callonParagraph313() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph313(stack["id"])
}

func (c *current) onParagraph357() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph357() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph357()
}

func (c *current) onParagraph347() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph347() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph347()
}

func (c *current) onParagraph343(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonParagraph343() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph343(stack["id"])
}

func (c *current) onParagraph379() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph379() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph379()
}

func (c *current) onParagraph382() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph382() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph382()
}

func (c *current) onParagraph371(title interface{}) (interface{}, error) {
	return types.NewElementTitle(title.(string))
}

func (p *parser) callonParagraph371() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph371(stack["title"])
}

func (c *current) onParagraph396() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph396() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph396()
}

func (c *current) onParagraph399() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph399() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph399()
}

func (c *current) onParagraph390(role interface{}) (interface{}, error) {
	return types.NewElementRole(role.(string))
}

func (p *parser) callonParagraph390() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph390(stack["role"])
}

func (c *current) onParagraph415() (interface{}, error) {
	return types.Tip, nil
}

func (p *parser) callonParagraph415() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph415()
}

func (c *current) onParagraph417() (interface{}, error) {
	return types.Note, nil
}

func (p *parser) callonParagraph417() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph417()
}

func (c *current) onParagraph419() (interface{}, error) {
	return types.Important, nil
}

func (p *parser) callonParagraph419() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph419()
}

func (c *current) onParagraph421() (interface{}, error) {
	return types.Warning, nil
}

func (p *parser) callonParagraph421() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph421()
}

func (c *current) onParagraph423() (interface{}, error) {
	return types.Caution, nil
}

func (p *parser) callonParagraph423() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph423()
}

func (c *current) onParagraph410(k interface{}) (interface{}, error) {
	return types.NewAdmonitionAttribute(k.(types.AdmonitionKind))
}

func (p *parser) callonParagraph410() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph410(stack["k"])
}

func (c *current) onParagraph426() (interface{}, error) {
	return types.ElementAttributes{"layout": "horizontal"}, nil
}

func (p *parser) callonParagraph426() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph426()
}

func (c *current) onParagraph434() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph434() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph434()
}

func (c *current) onParagraph445() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph445() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph445()
}

func (c *current) onParagraph448() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph448() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph448()
}

func (c *current) onParagraph442(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph442() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph442(stack["key"])
}

func (c *current) onParagraph462(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph462() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph462(stack["value"])
}

func (c *current) onParagraph478() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph478() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph478()
}

func (c *current) onParagraph439(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonParagraph439() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph439(stack["key"], stack["value"])
}

func (c *current) onParagraph486() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph486() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph486()
}

func (c *current) onParagraph489() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph489() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph489()
}

func (c *current) onParagraph483(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph483() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph483(stack["key"])
}

func (c *current) onParagraph506() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph506() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph506()
}

func (c *current) onParagraph480(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonParagraph480() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph480(stack["key"])
}

func (c *current) onParagraph428(attributes interface{}) (interface{}, error) {
	return types.NewAttributeGroup(attributes.([]interface{}))
}

func (p *parser) callonParagraph428() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph428(stack["attributes"])
}

func (c *current) onParagraph512() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph512() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph512()
}

func (c *current) onParagraph309(attr interface{}) (interface{}, error) {
	return attr, nil // avoid returning something like `[]interface{}{attr, EOL}`
}

func (p *parser) callonParagraph309() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph309(stack["attr"])
}

func (c *current) onParagraph526() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph526() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph526()
}

func (c *current) onParagraph534() (interface{}, error) {
	return types.Tip, nil
}

func (p *parser) callonParagraph534() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph534()
}

func (c *current) onParagraph536() (interface{}, error) {
	return types.Note, nil
}

func (p *parser) callonParagraph536() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph536()
}

func (c *current) onParagraph538() (interface{}, error) {
	return types.Important, nil
}

func (p *parser) callonParagraph538() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph538()
}

func (c *current) onParagraph540() (interface{}, error) {
	return types.Warning, nil
}

func (p *parser) callonParagraph540() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph540()
}

func (c *current) onParagraph542() (interface{}, error) {
	return types.Caution, nil
}

func (p *parser) callonParagraph542() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph542()
}

func (c *current) onParagraph2(attributes, t, lines interface{}) (interface{}, error) {

	return types.NewAdmonitionParagraph(lines.([]interface{}), t.(types.AdmonitionKind), attributes.([]interface{}))

}

func (p *parser) callonParagraph2() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph2(stack["attributes"], stack["t"], stack["lines"])
}

func (c *current) onParagraph564() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph564() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph564()
}

func (c *current) onParagraph567() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph567() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph567()
}

func (c *current) onParagraph580() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph580() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph580()
}

func (c *current) onParagraph592() (interface{}, error) {
	return types.Tip, nil
}

func (p *parser) callonParagraph592() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph592()
}

func (c *current) onParagraph594() (interface{}, error) {
	return types.Note, nil
}

func (p *parser) callonParagraph594() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph594()
}

func (c *current) onParagraph596() (interface{}, error) {
	return types.Important, nil
}

func (p *parser) callonParagraph596() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph596()
}

func (c *current) onParagraph598() (interface{}, error) {
	return types.Warning, nil
}

func (p *parser) callonParagraph598() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph598()
}

func (c *current) onParagraph600() (interface{}, error) {
	return types.Caution, nil
}

func (p *parser) callonParagraph600() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph600()
}

func (c *current) onParagraph561() (interface{}, error) {
	// make sure quote attribute does not collide with other generic or specific attributes (ID, Admonition, etc)
	return string(c.text), nil
}

func (p *parser) callonParagraph561() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph561()
}

func (c *current) onParagraph606() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph606() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph606()
}

func (c *current) onParagraph610() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph610() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph610()
}

func (c *current) onParagraph626() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph626() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph626()
}

func (c *current) onParagraph557(kind, author, title interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), author.(string), title.(string))

}

func (p *parser) callonParagraph557() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph557(stack["kind"], stack["author"], stack["title"])
}

func (c *current) onParagraph648() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph648() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph648()
}

func (c *current) onParagraph651() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph651() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph651()
}

func (c *current) onParagraph664() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph664() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph664()
}

func (c *current) onParagraph676() (interface{}, error) {
	return types.Tip, nil
}

func (p *parser) callonParagraph676() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph676()
}

func (c *current) onParagraph678() (interface{}, error) {
	return types.Note, nil
}

func (p *parser) callonParagraph678() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph678()
}

func (c *current) onParagraph680() (interface{}, error) {
	return types.Important, nil
}

func (p *parser) callonParagraph680() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph680()
}

func (c *current) onParagraph682() (interface{}, error) {
	return types.Warning, nil
}

func (p *parser) callonParagraph682() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph682()
}

func (c *current) onParagraph684() (interface{}, error) {
	return types.Caution, nil
}

func (p *parser) callonParagraph684() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph684()
}

func (c *current) onParagraph645() (interface{}, error) {
	// make sure quote attribute does not collide with other generic or specific attributes (ID, Admonition, etc)
	return string(c.text), nil
}

func (p *parser) callonParagraph645() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph645()
}

func (c *current) onParagraph690() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph690() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph690()
}

func (c *current) onParagraph694() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph694() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph694()
}

func (c *current) onParagraph641(kind, author interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), author.(string), "")

}

func (p *parser) callonParagraph641() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph641(stack["kind"], stack["author"])
}

func (c *current) onParagraph716() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph716() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph716()
}

func (c *current) onParagraph719() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph719() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph719()
}

func (c *current) onParagraph732() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph732() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph732()
}

func (c *current) onParagraph744() (interface{}, error) {
	return types.Tip, nil
}

func (p *parser) callonParagraph744() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph744()
}

func (c *current) onParagraph746() (interface{}, error) {
	return types.Note, nil
}

func (p *parser) callonParagraph746() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph746()
}

func (c *current) onParagraph748() (interface{}, error) {
	return types.Important, nil
}

func (p *parser) callonParagraph748() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph748()
}

func (c *current) onParagraph750() (interface{}, error) {
	return types.Warning, nil
}

func (p *parser) callonParagraph750() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph750()
}

func (c *current) onParagraph752() (interface{}, error) {
	return types.Caution, nil
}

func (p *parser) callonParagraph752() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph752()
}

func (c *current) onParagraph713() (interface{}, error) {
	// make sure quote attribute does not collide with other generic or specific attributes (ID, Admonition, etc)
	return string(c.text), nil
}

func (p *parser) callonParagraph713() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph713()
}

func (c *current) onParagraph758() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph758() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph758()
}

func (c *current) onParagraph709(kind interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), "", "")

}

func (p *parser) callonParagraph709() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph709(stack["kind"])
}

func (c *current) onParagraph765() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph765() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph765()
}

func (c *current) onParagraph770() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph770() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph770()
}

func (c *current) onParagraph774() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph774() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph774()
}

func (c *current) onParagraph790() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph790() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph790()
}

func (c *current) onParagraph761(kind, author, title interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), author.(string), title.(string))

}

func (p *parser) callonParagraph761() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph761(stack["kind"], stack["author"], stack["title"])
}

func (c *current) onParagraph809() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph809() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph809()
}

func (c *current) onParagraph814() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph814() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph814()
}

func (c *current) onParagraph818() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph818() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph818()
}

func (c *current) onParagraph805(kind, author interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), author.(string), "")

}

func (p *parser) callonParagraph805() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph805(stack["kind"], stack["author"])
}

func (c *current) onParagraph837() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph837() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph837()
}

func (c *current) onParagraph842() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph842() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph842()
}

func (c *current) onParagraph833(kind interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), "", "")

}

func (p *parser) callonParagraph833() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph833(stack["kind"])
}

func (c *current) onParagraph848() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph848() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph848()
}

func (c *current) onParagraph553(attr interface{}) (interface{}, error) {
	return attr, nil // avoid returning something like `[]interface{}{attr, EOL}`
}

func (p *parser) callonParagraph553() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph553(stack["attr"])
}

func (c *current) onParagraph875() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph875() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph875()
}

func (c *current) onParagraph865() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph865() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph865()
}

func (c *current) onParagraph861(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonParagraph861() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph861(stack["id"])
}

func (c *current) onParagraph859(id interface{}) (interface{}, error) {
	return id, nil
}

func (p *parser) callonParagraph859() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph859(stack["id"])
}

func (c *current) onParagraph903() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph903() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph903()
}

func (c *current) onParagraph893() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph893() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph893()
}

func (c *current) onParagraph889(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonParagraph889() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph889(stack["id"])
}

func (c *current) onParagraph925() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph925() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph925()
}

func (c *current) onParagraph928() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph928() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph928()
}

func (c *current) onParagraph917(title interface{}) (interface{}, error) {
	return types.NewElementTitle(title.(string))
}

func (p *parser) callonParagraph917() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph917(stack["title"])
}

func (c *current) onParagraph942() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph942() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph942()
}

func (c *current) onParagraph945() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph945() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph945()
}

func (c *current) onParagraph936(role interface{}) (interface{}, error) {
	return types.NewElementRole(role.(string))
}

func (p *parser) callonParagraph936() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph936(stack["role"])
}

func (c *current) onParagraph961() (interface{}, error) {
	return types.Tip, nil
}

func (p *parser) callonParagraph961() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph961()
}

func (c *current) onParagraph963() (interface{}, error) {
	return types.Note, nil
}

func (p *parser) callonParagraph963() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph963()
}

func (c *current) onParagraph965() (interface{}, error) {
	return types.Important, nil
}

func (p *parser) callonParagraph965() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph965()
}

func (c *current) onParagraph967() (interface{}, error) {
	return types.Warning, nil
}

func (p *parser) callonParagraph967() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph967()
}

func (c *current) onParagraph969() (interface{}, error) {
	return types.Caution, nil
}

func (p *parser) callonParagraph969() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph969()
}

func (c *current) onParagraph956(k interface{}) (interface{}, error) {
	return types.NewAdmonitionAttribute(k.(types.AdmonitionKind))
}

func (p *parser) callonParagraph956() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph956(stack["k"])
}

func (c *current) onParagraph972() (interface{}, error) {
	return types.ElementAttributes{"layout": "horizontal"}, nil
}

func (p *parser) callonParagraph972() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph972()
}

func (c *current) onParagraph980() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph980() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph980()
}

func (c *current) onParagraph991() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph991() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph991()
}

func (c *current) onParagraph994() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph994() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph994()
}

func (c *current) onParagraph988(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph988() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph988(stack["key"])
}

func (c *current) onParagraph1008(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph1008() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph1008(stack["value"])
}

func (c *current) onParagraph1024() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph1024() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph1024()
}

func (c *current) onParagraph985(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonParagraph985() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph985(stack["key"], stack["value"])
}

func (c *current) onParagraph1032() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph1032() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph1032()
}

func (c *current) onParagraph1035() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph1035() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph1035()
}

func (c *current) onParagraph1029(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph1029() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph1029(stack["key"])
}

func (c *current) onParagraph1052() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph1052() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph1052()
}

func (c *current) onParagraph1026(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonParagraph1026() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph1026(stack["key"])
}

func (c *current) onParagraph974(attributes interface{}) (interface{}, error) {
	return types.NewAttributeGroup(attributes.([]interface{}))
}

func (p *parser) callonParagraph974() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph974(stack["attributes"])
}

func (c *current) onParagraph1058() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph1058() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph1058()
}

func (c *current) onParagraph855(attr interface{}) (interface{}, error) {
	return attr, nil // avoid returning something like `[]interface{}{attr, EOL}`
}

func (p *parser) callonParagraph855() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph855(stack["attr"])
}

func (c *current) onParagraph1072() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph1072() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph1072()
}

func (c *current) onParagraph548(attributes, lines interface{}) (interface{}, error) {

	return types.NewParagraph(lines.([]interface{}), attributes.([]interface{}))

}

func (p *parser) callonParagraph548() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph548(stack["attributes"], stack["lines"])
}

func (c *current) onInlineElements10() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElements10() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElements10()
}

func (c *current) onInlineElements4(content interface{}) (interface{}, error) {
	return types.NewSingleLineComment(content.(string))
}

func (p *parser) callonInlineElements4() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElements4(stack["content"])
}

func (c *current) onInlineElements2(comment interface{}) (interface{}, error) {
	return types.NewInlineElements([]interface{}{comment})

}

func (p *parser) callonInlineElements2() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElements2(stack["comment"])
}

func (c *current) onInlineElements51() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElements51() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElements51()
}

func (c *current) onInlineElements68() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElements68() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElements68()
}

func (c *current) onInlineElements58() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElements58() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElements58()
}

func (c *current) onInlineElements54(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonInlineElements54() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElements54(stack["id"])
}

func (c *current) onInlineElements86() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElements86() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElements86()
}

func (c *current) onInlineElements25(elements interface{}) (interface{}, error) {
	// absorbs heading and trailing spaces
	return types.NewInlineElements(elements.([]interface{}))

}

func (p *parser) callonInlineElements25() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElements25(stack["elements"])
}

func (c *current) onInlineElement19() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement19() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement19()
}

func (c *current) onInlineElement9() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement9() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement9()
}

func (c *current) onInlineElement35() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement35() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement35()
}

func (c *current) onInlineElement39() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement39() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement39()
}

func (c *current) onInlineElement5(id, label interface{}) (interface{}, error) {
	return types.NewCrossReference(id.(string), label.(string))
}

func (p *parser) callonInlineElement5() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement5(stack["id"], stack["label"])
}

func (c *current) onInlineElement60() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement60() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement60()
}

func (c *current) onInlineElement50() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement50() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement50()
}

func (c *current) onInlineElement46(id interface{}) (interface{}, error) {
	return types.NewCrossReference(id.(string), nil)
}

func (p *parser) callonInlineElement46() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement46(stack["id"])
}

func (c *current) onInlineElement91() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement91() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement91()
}

func (c *current) onInlineElement81() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement81() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement81()
}

func (c *current) onInlineElement104() (interface{}, error) {
	// attribute is followed by "," or "]" (but do not consume the latter)
	return string(c.text), nil
}

func (p *parser) callonInlineElement104() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement104()
}

func (c *current) onInlineElement116() (interface{}, error) {
	// attribute is followed by "," or "]" (but do not consume the latter)
	return string(c.text), nil
}

func (p *parser) callonInlineElement116() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement116()
}

func (c *current) onInlineElement128() (interface{}, error) {
	// attribute is followed by "," or "]" (but do not consume the latter)
	return string(c.text), nil
}

func (p *parser) callonInlineElement128() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement128()
}

func (c *current) onInlineElement149() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement149() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement149()
}

func (c *current) onInlineElement152() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement152() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement152()
}

func (c *current) onInlineElement146(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement146() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement146(stack["key"])
}

func (c *current) onInlineElement166(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement166() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement166(stack["value"])
}

func (c *current) onInlineElement182() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement182() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement182()
}

func (c *current) onInlineElement143(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonInlineElement143() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement143(stack["key"], stack["value"])
}

func (c *current) onInlineElement190() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement190() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement190()
}

func (c *current) onInlineElement193() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement193() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement193()
}

func (c *current) onInlineElement187(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement187() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement187(stack["key"])
}

func (c *current) onInlineElement210() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement210() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement210()
}

func (c *current) onInlineElement184(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonInlineElement184() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement184(stack["key"])
}

func (c *current) onInlineElement100(alt, width, height, otherAttrs interface{}) (interface{}, error) {
	return types.NewImageAttributes(alt, width, height, otherAttrs.([]interface{}))

}

func (p *parser) callonInlineElement100() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement100(stack["alt"], stack["width"], stack["height"], stack["otherAttrs"])
}

func (c *current) onInlineElement217() (interface{}, error) {
	// attribute is followed by "," or "]" (but do not consume the latter)
	return string(c.text), nil
}

func (p *parser) callonInlineElement217() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement217()
}

func (c *current) onInlineElement229() (interface{}, error) {
	// attribute is followed by "," or "]" (but do not consume the latter)
	return string(c.text), nil
}

func (p *parser) callonInlineElement229() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement229()
}

func (c *current) onInlineElement250() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement250() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement250()
}

func (c *current) onInlineElement253() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement253() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement253()
}

func (c *current) onInlineElement247(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement247() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement247(stack["key"])
}

func (c *current) onInlineElement267(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement267() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement267(stack["value"])
}

func (c *current) onInlineElement283() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement283() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement283()
}

func (c *current) onInlineElement244(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonInlineElement244() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement244(stack["key"], stack["value"])
}

func (c *current) onInlineElement291() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement291() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement291()
}

func (c *current) onInlineElement294() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement294() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement294()
}

func (c *current) onInlineElement288(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement288() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement288(stack["key"])
}

func (c *current) onInlineElement311() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement311() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement311()
}

func (c *current) onInlineElement285(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonInlineElement285() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement285(stack["key"])
}

func (c *current) onInlineElement213(alt, width, otherAttrs interface{}) (interface{}, error) {
	return types.NewImageAttributes(alt, width, nil, otherAttrs.([]interface{}))

}

func (p *parser) callonInlineElement213() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement213(stack["alt"], stack["width"], stack["otherAttrs"])
}

func (c *current) onInlineElement318() (interface{}, error) {
	// attribute is followed by "," or "]" (but do not consume the latter)
	return string(c.text), nil
}

func (p *parser) callonInlineElement318() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement318()
}

func (c *current) onInlineElement339() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement339() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement339()
}

func (c *current) onInlineElement342() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement342() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement342()
}

func (c *current) onInlineElement336(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement336() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement336(stack["key"])
}

func (c *current) onInlineElement356(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement356() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement356(stack["value"])
}

func (c *current) onInlineElement372() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement372() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement372()
}

func (c *current) onInlineElement333(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonInlineElement333() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement333(stack["key"], stack["value"])
}

func (c *current) onInlineElement380() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement380() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement380()
}

func (c *current) onInlineElement383() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement383() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement383()
}

func (c *current) onInlineElement377(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement377() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement377(stack["key"])
}

func (c *current) onInlineElement400() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement400() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement400()
}

func (c *current) onInlineElement374(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonInlineElement374() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement374(stack["key"])
}

func (c *current) onInlineElement314(alt, otherAttrs interface{}) (interface{}, error) {
	return types.NewImageAttributes(alt, nil, nil, otherAttrs.([]interface{}))

}

func (p *parser) callonInlineElement314() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement314(stack["alt"], stack["otherAttrs"])
}

func (c *current) onInlineElement415() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement415() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement415()
}

func (c *current) onInlineElement418() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement418() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement418()
}

func (c *current) onInlineElement412(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement412() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement412(stack["key"])
}

func (c *current) onInlineElement432(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement432() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement432(stack["value"])
}

func (c *current) onInlineElement448() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement448() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement448()
}

func (c *current) onInlineElement409(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonInlineElement409() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement409(stack["key"], stack["value"])
}

func (c *current) onInlineElement456() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement456() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement456()
}

func (c *current) onInlineElement459() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement459() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement459()
}

func (c *current) onInlineElement453(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement453() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement453(stack["key"])
}

func (c *current) onInlineElement476() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement476() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement476()
}

func (c *current) onInlineElement450(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonInlineElement450() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement450(stack["key"])
}

func (c *current) onInlineElement403(otherAttrs interface{}) (interface{}, error) {
	return types.NewImageAttributes(nil, nil, nil, otherAttrs.([]interface{}))

}

func (p *parser) callonInlineElement403() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement403(stack["otherAttrs"])
}

func (c *current) onInlineElement75(path, attributes interface{}) (interface{}, error) {
	return types.NewInlineImage(path.(string), attributes.(types.ElementAttributes))
}

func (p *parser) callonInlineElement75() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement75(stack["path"], stack["attributes"])
}

func (c *current) onInlineElement505() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement505() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement505()
}

func (c *current) onInlineElement495() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement495() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement495()
}

func (c *current) onInlineElement486() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement486() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement486()
}

func (c *current) onInlineElement518() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement518() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement518()
}

func (c *current) onInlineElement535() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement535() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement535()
}

func (c *current) onInlineElement538() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement538() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement538()
}

func (c *current) onInlineElement532(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement532() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement532(stack["key"])
}

func (c *current) onInlineElement552(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement552() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement552(stack["value"])
}

func (c *current) onInlineElement568() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement568() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement568()
}

func (c *current) onInlineElement529(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonInlineElement529() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement529(stack["key"], stack["value"])
}

func (c *current) onInlineElement576() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement576() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement576()
}

func (c *current) onInlineElement579() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement579() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement579()
}

func (c *current) onInlineElement573(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement573() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement573(stack["key"])
}

func (c *current) onInlineElement596() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement596() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement596()
}

func (c *current) onInlineElement570(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonInlineElement570() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement570(stack["key"])
}

func (c *current) onInlineElement514(text, otherAttrs interface{}) (interface{}, error) {
	return types.NewLinkAttributes(text, otherAttrs.([]interface{}))
}

func (p *parser) callonInlineElement514() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement514(stack["text"], stack["otherAttrs"])
}

func (c *current) onInlineElement611() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement611() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement611()
}

func (c *current) onInlineElement614() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement614() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement614()
}

func (c *current) onInlineElement608(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement608() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement608(stack["key"])
}

func (c *current) onInlineElement628(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement628() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement628(stack["value"])
}

func (c *current) onInlineElement644() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement644() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement644()
}

func (c *current) onInlineElement605(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonInlineElement605() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement605(stack["key"], stack["value"])
}

func (c *current) onInlineElement652() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement652() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement652()
}

func (c *current) onInlineElement655() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement655() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement655()
}

func (c *current) onInlineElement649(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement649() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement649(stack["key"])
}

func (c *current) onInlineElement672() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement672() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement672()
}

func (c *current) onInlineElement646(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonInlineElement646() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement646(stack["key"])
}

func (c *current) onInlineElement599(otherAttrs interface{}) (interface{}, error) {
	return types.NewLinkAttributes(nil, otherAttrs.([]interface{}))
}

func (p *parser) callonInlineElement599() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement599(stack["otherAttrs"])
}

func (c *current) onInlineElement482(url, attributes interface{}) (interface{}, error) {
	return types.NewLink(url.(string), attributes.(types.ElementAttributes))
}

func (p *parser) callonInlineElement482() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement482(stack["url"], stack["attributes"])
}

func (c *current) onInlineElement696() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement696() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement696()
}

func (c *current) onInlineElement686() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement686() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement686()
}

func (c *current) onInlineElement678() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement678() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement678()
}

func (c *current) onInlineElement709() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement709() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement709()
}

func (c *current) onInlineElement726() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement726() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement726()
}

func (c *current) onInlineElement729() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement729() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement729()
}

func (c *current) onInlineElement723(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement723() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement723(stack["key"])
}

func (c *current) onInlineElement743(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement743() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement743(stack["value"])
}

func (c *current) onInlineElement759() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement759() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement759()
}

func (c *current) onInlineElement720(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonInlineElement720() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement720(stack["key"], stack["value"])
}

func (c *current) onInlineElement767() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement767() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement767()
}

func (c *current) onInlineElement770() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement770() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement770()
}

func (c *current) onInlineElement764(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement764() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement764(stack["key"])
}

func (c *current) onInlineElement787() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement787() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement787()
}

func (c *current) onInlineElement761(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonInlineElement761() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement761(stack["key"])
}

func (c *current) onInlineElement705(text, otherAttrs interface{}) (interface{}, error) {
	return types.NewLinkAttributes(text, otherAttrs.([]interface{}))
}

func (p *parser) callonInlineElement705() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement705(stack["text"], stack["otherAttrs"])
}

func (c *current) onInlineElement802() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement802() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement802()
}

func (c *current) onInlineElement805() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement805() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement805()
}

func (c *current) onInlineElement799(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement799() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement799(stack["key"])
}

func (c *current) onInlineElement819(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement819() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement819(stack["value"])
}

func (c *current) onInlineElement835() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement835() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement835()
}

func (c *current) onInlineElement796(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonInlineElement796() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement796(stack["key"], stack["value"])
}

func (c *current) onInlineElement843() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement843() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement843()
}

func (c *current) onInlineElement846() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement846() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement846()
}

func (c *current) onInlineElement840(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement840() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement840(stack["key"])
}

func (c *current) onInlineElement863() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement863() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement863()
}

func (c *current) onInlineElement837(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonInlineElement837() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement837(stack["key"])
}

func (c *current) onInlineElement790(otherAttrs interface{}) (interface{}, error) {
	return types.NewLinkAttributes(nil, otherAttrs.([]interface{}))
}

func (p *parser) callonInlineElement790() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement790(stack["otherAttrs"])
}

func (c *current) onInlineElement675(url, attributes interface{}) (interface{}, error) {
	return types.NewLink(url.(string), attributes.(types.ElementAttributes))
}

func (p *parser) callonInlineElement675() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement675(stack["url"], stack["attributes"])
}

func (c *current) onInlineElement886() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement886() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement886()
}

func (c *current) onInlineElement876() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement876() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement876()
}

func (c *current) onInlineElement868() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement868() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement868()
}

func (c *current) onInlineElement866(url interface{}) (interface{}, error) {
	return types.NewLink(url.(string), nil)
}

func (p *parser) callonInlineElement866() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement866(stack["url"])
}

func (c *current) onInlineElement479(link interface{}) (interface{}, error) {
	return link, nil
}

func (p *parser) callonInlineElement479() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement479(stack["link"])
}

func (c *current) onInlineElement897() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement897() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement897()
}

func (c *current) onInlineElement893(name interface{}) (interface{}, error) {
	return types.NewDocumentAttributeSubstitution(name.(string))
}

func (p *parser) callonInlineElement893() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement893(stack["name"])
}

func (c *current) onInlineElement914() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement914() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement914()
}

func (c *current) onInlineElement904() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement904() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement904()
}

func (c *current) onInlineElement1(element interface{}) (interface{}, error) {
	return element, nil
}

func (p *parser) callonInlineElement1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement1(stack["element"])
}

func (c *current) onInlineElementsWithoutSubtitution27() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementsWithoutSubtitution27() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementsWithoutSubtitution27()
}

func (c *current) onInlineElementsWithoutSubtitution44() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementsWithoutSubtitution44() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementsWithoutSubtitution44()
}

func (c *current) onInlineElementsWithoutSubtitution34() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementsWithoutSubtitution34() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementsWithoutSubtitution34()
}

func (c *current) onInlineElementsWithoutSubtitution30(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonInlineElementsWithoutSubtitution30() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementsWithoutSubtitution30(stack["id"])
}

func (c *current) onInlineElementsWithoutSubtitution62() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementsWithoutSubtitution62() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementsWithoutSubtitution62()
}

func (c *current) onInlineElementsWithoutSubtitution1(elements interface{}) (interface{}, error) {
	// absorbs heading and trailing spaces
	return types.NewInlineElements(elements.([]interface{}))
}

func (p *parser) callonInlineElementsWithoutSubtitution1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementsWithoutSubtitution1(stack["elements"])
}

func (c *current) onInlineElementWithoutSubtitution19() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution19() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution19()
}

func (c *current) onInlineElementWithoutSubtitution9() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution9() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution9()
}

func (c *current) onInlineElementWithoutSubtitution35() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution35() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution35()
}

func (c *current) onInlineElementWithoutSubtitution39() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution39() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution39()
}

func (c *current) onInlineElementWithoutSubtitution5(id, label interface{}) (interface{}, error) {
	return types.NewCrossReference(id.(string), label.(string))
}

func (p *parser) callonInlineElementWithoutSubtitution5() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution5(stack["id"], stack["label"])
}

func (c *current) onInlineElementWithoutSubtitution60() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution60() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution60()
}

func (c *current) onInlineElementWithoutSubtitution50() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution50() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution50()
}

func (c *current) onInlineElementWithoutSubtitution46(id interface{}) (interface{}, error) {
	return types.NewCrossReference(id.(string), nil)
}

func (p *parser) callonInlineElementWithoutSubtitution46() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution46(stack["id"])
}

func (c *current) onInlineElementWithoutSubtitution91() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution91() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution91()
}

func (c *current) onInlineElementWithoutSubtitution81() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution81() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution81()
}

func (c *current) onInlineElementWithoutSubtitution104() (interface{}, error) {
	// attribute is followed by "," or "]" (but do not consume the latter)
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution104() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution104()
}

func (c *current) onInlineElementWithoutSubtitution116() (interface{}, error) {
	// attribute is followed by "," or "]" (but do not consume the latter)
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution116() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution116()
}

func (c *current) onInlineElementWithoutSubtitution128() (interface{}, error) {
	// attribute is followed by "," or "]" (but do not consume the latter)
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution128() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution128()
}

func (c *current) onInlineElementWithoutSubtitution149() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution149() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution149()
}

func (c *current) onInlineElementWithoutSubtitution152() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution152() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution152()
}

func (c *current) onInlineElementWithoutSubtitution146(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution146() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution146(stack["key"])
}

func (c *current) onInlineElementWithoutSubtitution166(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution166() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution166(stack["value"])
}

func (c *current) onInlineElementWithoutSubtitution182() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution182() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution182()
}

func (c *current) onInlineElementWithoutSubtitution143(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonInlineElementWithoutSubtitution143() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution143(stack["key"], stack["value"])
}

func (c *current) onInlineElementWithoutSubtitution190() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution190() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution190()
}

func (c *current) onInlineElementWithoutSubtitution193() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution193() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution193()
}

func (c *current) onInlineElementWithoutSubtitution187(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution187() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution187(stack["key"])
}

func (c *current) onInlineElementWithoutSubtitution210() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution210() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution210()
}

func (c *current) onInlineElementWithoutSubtitution184(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonInlineElementWithoutSubtitution184() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution184(stack["key"])
}

func (c *current) onInlineElementWithoutSubtitution100(alt, width, height, otherAttrs interface{}) (interface{}, error) {
	return types.NewImageAttributes(alt, width, height, otherAttrs.([]interface{}))

}

func (p *parser) callonInlineElementWithoutSubtitution100() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution100(stack["alt"], stack["width"], stack["height"], stack["otherAttrs"])
}

func (c *current) onInlineElementWithoutSubtitution217() (interface{}, error) {
	// attribute is followed by "," or "]" (but do not consume the latter)
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution217() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution217()
}

func (c *current) onInlineElementWithoutSubtitution229() (interface{}, error) {
	// attribute is followed by "," or "]" (but do not consume the latter)
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution229() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution229()
}

func (c *current) onInlineElementWithoutSubtitution250() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution250() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution250()
}

func (c *current) onInlineElementWithoutSubtitution253() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution253() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution253()
}

func (c *current) onInlineElementWithoutSubtitution247(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution247() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution247(stack["key"])
}

func (c *current) onInlineElementWithoutSubtitution267(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution267() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution267(stack["value"])
}

func (c *current) onInlineElementWithoutSubtitution283() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution283() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution283()
}

func (c *current) onInlineElementWithoutSubtitution244(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonInlineElementWithoutSubtitution244() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution244(stack["key"], stack["value"])
}

func (c *current) onInlineElementWithoutSubtitution291() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution291() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution291()
}

func (c *current) onInlineElementWithoutSubtitution294() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution294() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution294()
}

func (c *current) onInlineElementWithoutSubtitution288(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution288() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution288(stack["key"])
}

func (c *current) onInlineElementWithoutSubtitution311() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution311() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution311()
}

func (c *current) onInlineElementWithoutSubtitution285(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonInlineElementWithoutSubtitution285() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution285(stack["key"])
}

func (c *current) onInlineElementWithoutSubtitution213(alt, width, otherAttrs interface{}) (interface{}, error) {
	return types.NewImageAttributes(alt, width, nil, otherAttrs.([]interface{}))

}

func (p *parser) callonInlineElementWithoutSubtitution213() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution213(stack["alt"], stack["width"], stack["otherAttrs"])
}

func (c *current) onInlineElementWithoutSubtitution318() (interface{}, error) {
	// attribute is followed by "," or "]" (but do not consume the latter)
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution318() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution318()
}

func (c *current) onInlineElementWithoutSubtitution339() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution339() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution339()
}

func (c *current) onInlineElementWithoutSubtitution342() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution342() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution342()
}

func (c *current) onInlineElementWithoutSubtitution336(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution336() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution336(stack["key"])
}

func (c *current) onInlineElementWithoutSubtitution356(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution356() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution356(stack["value"])
}

func (c *current) onInlineElementWithoutSubtitution372() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution372() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution372()
}

func (c *current) onInlineElementWithoutSubtitution333(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonInlineElementWithoutSubtitution333() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution333(stack["key"], stack["value"])
}

func (c *current) onInlineElementWithoutSubtitution380() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution380() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution380()
}

func (c *current) onInlineElementWithoutSubtitution383() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution383() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution383()
}

func (c *current) onInlineElementWithoutSubtitution377(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution377() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution377(stack["key"])
}

func (c *current) onInlineElementWithoutSubtitution400() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution400() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution400()
}

func (c *current) onInlineElementWithoutSubtitution374(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonInlineElementWithoutSubtitution374() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution374(stack["key"])
}

func (c *current) onInlineElementWithoutSubtitution314(alt, otherAttrs interface{}) (interface{}, error) {
	return types.NewImageAttributes(alt, nil, nil, otherAttrs.([]interface{}))

}

func (p *parser) callonInlineElementWithoutSubtitution314() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution314(stack["alt"], stack["otherAttrs"])
}

func (c *current) onInlineElementWithoutSubtitution415() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution415() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution415()
}

func (c *current) onInlineElementWithoutSubtitution418() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution418() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution418()
}

func (c *current) onInlineElementWithoutSubtitution412(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution412() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution412(stack["key"])
}

func (c *current) onInlineElementWithoutSubtitution432(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution432() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution432(stack["value"])
}

func (c *current) onInlineElementWithoutSubtitution448() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution448() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution448()
}

func (c *current) onInlineElementWithoutSubtitution409(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonInlineElementWithoutSubtitution409() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution409(stack["key"], stack["value"])
}

func (c *current) onInlineElementWithoutSubtitution456() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution456() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution456()
}

func (c *current) onInlineElementWithoutSubtitution459() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution459() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution459()
}

func (c *current) onInlineElementWithoutSubtitution453(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution453() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution453(stack["key"])
}

func (c *current) onInlineElementWithoutSubtitution476() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution476() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution476()
}

func (c *current) onInlineElementWithoutSubtitution450(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonInlineElementWithoutSubtitution450() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution450(stack["key"])
}

func (c *current) onInlineElementWithoutSubtitution403(otherAttrs interface{}) (interface{}, error) {
	return types.NewImageAttributes(nil, nil, nil, otherAttrs.([]interface{}))

}

func (p *parser) callonInlineElementWithoutSubtitution403() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution403(stack["otherAttrs"])
}

func (c *current) onInlineElementWithoutSubtitution75(path, attributes interface{}) (interface{}, error) {
	return types.NewInlineImage(path.(string), attributes.(types.ElementAttributes))
}

func (p *parser) callonInlineElementWithoutSubtitution75() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution75(stack["path"], stack["attributes"])
}

func (c *current) onInlineElementWithoutSubtitution505() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution505() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution505()
}

func (c *current) onInlineElementWithoutSubtitution495() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution495() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution495()
}

func (c *current) onInlineElementWithoutSubtitution486() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution486() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution486()
}

func (c *current) onInlineElementWithoutSubtitution518() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution518() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution518()
}

func (c *current) onInlineElementWithoutSubtitution535() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution535() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution535()
}

func (c *current) onInlineElementWithoutSubtitution538() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution538() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution538()
}

func (c *current) onInlineElementWithoutSubtitution532(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution532() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution532(stack["key"])
}

func (c *current) onInlineElementWithoutSubtitution552(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution552() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution552(stack["value"])
}

func (c *current) onInlineElementWithoutSubtitution568() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution568() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution568()
}

func (c *current) onInlineElementWithoutSubtitution529(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonInlineElementWithoutSubtitution529() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution529(stack["key"], stack["value"])
}

func (c *current) onInlineElementWithoutSubtitution576() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution576() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution576()
}

func (c *current) onInlineElementWithoutSubtitution579() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution579() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution579()
}

func (c *current) onInlineElementWithoutSubtitution573(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution573() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution573(stack["key"])
}

func (c *current) onInlineElementWithoutSubtitution596() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution596() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution596()
}

func (c *current) onInlineElementWithoutSubtitution570(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonInlineElementWithoutSubtitution570() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution570(stack["key"])
}

func (c *current) onInlineElementWithoutSubtitution514(text, otherAttrs interface{}) (interface{}, error) {
	return types.NewLinkAttributes(text, otherAttrs.([]interface{}))
}

func (p *parser) callonInlineElementWithoutSubtitution514() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution514(stack["text"], stack["otherAttrs"])
}

func (c *current) onInlineElementWithoutSubtitution611() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution611() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution611()
}

func (c *current) onInlineElementWithoutSubtitution614() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution614() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution614()
}

func (c *current) onInlineElementWithoutSubtitution608(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution608() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution608(stack["key"])
}

func (c *current) onInlineElementWithoutSubtitution628(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution628() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution628(stack["value"])
}

func (c *current) onInlineElementWithoutSubtitution644() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution644() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution644()
}

func (c *current) onInlineElementWithoutSubtitution605(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonInlineElementWithoutSubtitution605() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution605(stack["key"], stack["value"])
}

func (c *current) onInlineElementWithoutSubtitution652() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution652() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution652()
}

func (c *current) onInlineElementWithoutSubtitution655() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution655() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution655()
}

func (c *current) onInlineElementWithoutSubtitution649(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution649() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution649(stack["key"])
}

func (c *current) onInlineElementWithoutSubtitution672() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution672() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution672()
}

func (c *current) onInlineElementWithoutSubtitution646(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonInlineElementWithoutSubtitution646() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution646(stack["key"])
}

func (c *current) onInlineElementWithoutSubtitution599(otherAttrs interface{}) (interface{}, error) {
	return types.NewLinkAttributes(nil, otherAttrs.([]interface{}))
}

func (p *parser) callonInlineElementWithoutSubtitution599() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution599(stack["otherAttrs"])
}

func (c *current) onInlineElementWithoutSubtitution482(url, attributes interface{}) (interface{}, error) {
	return types.NewLink(url.(string), attributes.(types.ElementAttributes))
}

func (p *parser) callonInlineElementWithoutSubtitution482() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution482(stack["url"], stack["attributes"])
}

func (c *current) onInlineElementWithoutSubtitution696() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution696() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution696()
}

func (c *current) onInlineElementWithoutSubtitution686() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution686() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution686()
}

func (c *current) onInlineElementWithoutSubtitution678() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution678() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution678()
}

func (c *current) onInlineElementWithoutSubtitution709() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution709() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution709()
}

func (c *current) onInlineElementWithoutSubtitution726() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution726() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution726()
}

func (c *current) onInlineElementWithoutSubtitution729() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution729() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution729()
}

func (c *current) onInlineElementWithoutSubtitution723(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution723() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution723(stack["key"])
}

func (c *current) onInlineElementWithoutSubtitution743(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution743() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution743(stack["value"])
}

func (c *current) onInlineElementWithoutSubtitution759() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution759() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution759()
}

func (c *current) onInlineElementWithoutSubtitution720(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonInlineElementWithoutSubtitution720() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution720(stack["key"], stack["value"])
}

func (c *current) onInlineElementWithoutSubtitution767() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution767() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution767()
}

func (c *current) onInlineElementWithoutSubtitution770() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution770() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution770()
}

func (c *current) onInlineElementWithoutSubtitution764(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution764() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution764(stack["key"])
}

func (c *current) onInlineElementWithoutSubtitution787() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution787() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution787()
}

func (c *current) onInlineElementWithoutSubtitution761(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonInlineElementWithoutSubtitution761() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution761(stack["key"])
}

func (c *current) onInlineElementWithoutSubtitution705(text, otherAttrs interface{}) (interface{}, error) {
	return types.NewLinkAttributes(text, otherAttrs.([]interface{}))
}

func (p *parser) callonInlineElementWithoutSubtitution705() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution705(stack["text"], stack["otherAttrs"])
}

func (c *current) onInlineElementWithoutSubtitution802() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution802() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution802()
}

func (c *current) onInlineElementWithoutSubtitution805() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution805() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution805()
}

func (c *current) onInlineElementWithoutSubtitution799(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution799() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution799(stack["key"])
}

func (c *current) onInlineElementWithoutSubtitution819(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution819() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution819(stack["value"])
}

func (c *current) onInlineElementWithoutSubtitution835() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution835() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution835()
}

func (c *current) onInlineElementWithoutSubtitution796(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonInlineElementWithoutSubtitution796() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution796(stack["key"], stack["value"])
}

func (c *current) onInlineElementWithoutSubtitution843() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution843() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution843()
}

func (c *current) onInlineElementWithoutSubtitution846() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution846() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution846()
}

func (c *current) onInlineElementWithoutSubtitution840(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution840() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution840(stack["key"])
}

func (c *current) onInlineElementWithoutSubtitution863() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution863() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution863()
}

func (c *current) onInlineElementWithoutSubtitution837(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonInlineElementWithoutSubtitution837() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution837(stack["key"])
}

func (c *current) onInlineElementWithoutSubtitution790(otherAttrs interface{}) (interface{}, error) {
	return types.NewLinkAttributes(nil, otherAttrs.([]interface{}))
}

func (p *parser) callonInlineElementWithoutSubtitution790() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution790(stack["otherAttrs"])
}

func (c *current) onInlineElementWithoutSubtitution675(url, attributes interface{}) (interface{}, error) {
	return types.NewLink(url.(string), attributes.(types.ElementAttributes))
}

func (p *parser) callonInlineElementWithoutSubtitution675() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution675(stack["url"], stack["attributes"])
}

func (c *current) onInlineElementWithoutSubtitution886() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution886() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution886()
}

func (c *current) onInlineElementWithoutSubtitution876() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution876() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution876()
}

func (c *current) onInlineElementWithoutSubtitution868() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution868() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution868()
}

func (c *current) onInlineElementWithoutSubtitution866(url interface{}) (interface{}, error) {
	return types.NewLink(url.(string), nil)
}

func (p *parser) callonInlineElementWithoutSubtitution866() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution866(stack["url"])
}

func (c *current) onInlineElementWithoutSubtitution479(link interface{}) (interface{}, error) {
	return link, nil
}

func (p *parser) callonInlineElementWithoutSubtitution479() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution479(stack["link"])
}

func (c *current) onInlineElementWithoutSubtitution903() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution903() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution903()
}

func (c *current) onInlineElementWithoutSubtitution893() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution893() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution893()
}

func (c *current) onInlineElementWithoutSubtitution1(element interface{}) (interface{}, error) {
	return element, nil
}

func (p *parser) callonInlineElementWithoutSubtitution1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution1(stack["element"])
}

func (c *current) onBoldText2(content interface{}) (interface{}, error) {
	// double punctuation must be evaluated first
	return types.NewQuotedText(types.Bold, content.([]interface{}))

}

func (p *parser) callonBoldText2() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBoldText2(stack["content"])
}

func (c *current) onBoldText10(content interface{}) (interface{}, error) {
	// unbalanced `**` vs `*` punctuation
	result := append([]interface{}{"*"}, content.([]interface{}))
	return types.NewQuotedText(types.Bold, result)

}

func (p *parser) callonBoldText10() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBoldText10(stack["content"])
}

func (c *current) onBoldText18(content interface{}) (interface{}, error) {
	// single punctuation cannot be followed by a character (needs '**' to emphazise a portion of a word)
	return types.NewQuotedText(types.Bold, content.([]interface{}))

}

func (p *parser) callonBoldText18() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBoldText18(stack["content"])
}

func (c *current) onEscapedBoldText5() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonEscapedBoldText5() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onEscapedBoldText5()
}

func (c *current) onEscapedBoldText2(backslashes, content interface{}) (interface{}, error) {
	// double punctuation must be evaluated first
	return types.NewEscapedQuotedText(backslashes.(string), "**", content.([]interface{}))

}

func (p *parser) callonEscapedBoldText2() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onEscapedBoldText2(stack["backslashes"], stack["content"])
}

func (c *current) onEscapedBoldText17() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonEscapedBoldText17() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onEscapedBoldText17()
}

func (c *current) onEscapedBoldText14(backslashes, content interface{}) (interface{}, error) {
	// unbalanced `**` vs `*` punctuation
	result := append([]interface{}{"*"}, content.([]interface{}))
	return types.NewEscapedQuotedText(backslashes.(string), "*", result)

}

func (p *parser) callonEscapedBoldText14() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onEscapedBoldText14(stack["backslashes"], stack["content"])
}

func (c *current) onEscapedBoldText29() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonEscapedBoldText29() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onEscapedBoldText29()
}

func (c *current) onEscapedBoldText26(backslashes, content interface{}) (interface{}, error) {
	// simple punctuation must be evaluated last
	return types.NewEscapedQuotedText(backslashes.(string), "*", content.([]interface{}))

}

func (p *parser) callonEscapedBoldText26() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onEscapedBoldText26(stack["backslashes"], stack["content"])
}

func (c *current) onItalicText2(content interface{}) (interface{}, error) {
	return types.NewQuotedText(types.Italic, content.([]interface{}))

}

func (p *parser) callonItalicText2() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onItalicText2(stack["content"])
}

func (c *current) onItalicText10(content interface{}) (interface{}, error) {
	// unbalanced `__` vs `_` punctuation
	result := append([]interface{}{"_"}, content.([]interface{}))
	return types.NewQuotedText(types.Italic, result)

}

func (p *parser) callonItalicText10() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onItalicText10(stack["content"])
}

func (c *current) onItalicText18(content interface{}) (interface{}, error) {
	// single punctuation cannot be followed by a character (needs '**' to emphazise a portion of a word)
	return types.NewQuotedText(types.Italic, content.([]interface{}))

}

func (p *parser) callonItalicText18() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onItalicText18(stack["content"])
}

func (c *current) onEscapedItalicText5() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonEscapedItalicText5() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onEscapedItalicText5()
}

func (c *current) onEscapedItalicText2(backslashes, content interface{}) (interface{}, error) {
	// double punctuation must be evaluated first
	return types.NewEscapedQuotedText(backslashes.(string), "__", content.([]interface{}))

}

func (p *parser) callonEscapedItalicText2() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onEscapedItalicText2(stack["backslashes"], stack["content"])
}

func (c *current) onEscapedItalicText17() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonEscapedItalicText17() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onEscapedItalicText17()
}

func (c *current) onEscapedItalicText14(backslashes, content interface{}) (interface{}, error) {
	// unbalanced `__` vs `_` punctuation
	result := append([]interface{}{"_"}, content.([]interface{}))
	return types.NewEscapedQuotedText(backslashes.(string), "_", result)

}

func (p *parser) callonEscapedItalicText14() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onEscapedItalicText14(stack["backslashes"], stack["content"])
}

func (c *current) onEscapedItalicText29() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonEscapedItalicText29() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onEscapedItalicText29()
}

func (c *current) onEscapedItalicText26(backslashes, content interface{}) (interface{}, error) {
	// simple punctuation must be evaluated last
	return types.NewEscapedQuotedText(backslashes.(string), "_", content.([]interface{}))

}

func (p *parser) callonEscapedItalicText26() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onEscapedItalicText26(stack["backslashes"], stack["content"])
}

func (c *current) onMonospaceText2(content interface{}) (interface{}, error) {
	// double punctuation must be evaluated first
	return types.NewQuotedText(types.Monospace, content.([]interface{}))

}

func (p *parser) callonMonospaceText2() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMonospaceText2(stack["content"])
}

func (c *current) onMonospaceText10(content interface{}) (interface{}, error) {
	// unbalanced "``" vs "`" punctuation
	result := append([]interface{}{"`"}, content.([]interface{}))
	return types.NewQuotedText(types.Monospace, result)

}

func (p *parser) callonMonospaceText10() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMonospaceText10(stack["content"])
}

func (c *current) onMonospaceText18(content interface{}) (interface{}, error) {
	// single punctuation cannot be followed by a character (needs '**' to emphazise a portion of a word)
	return types.NewQuotedText(types.Monospace, content.([]interface{}))

}

func (p *parser) callonMonospaceText18() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMonospaceText18(stack["content"])
}

func (c *current) onEscapedMonospaceText5() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonEscapedMonospaceText5() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onEscapedMonospaceText5()
}

func (c *current) onEscapedMonospaceText2(backslashes, content interface{}) (interface{}, error) {
	// double punctuation must be evaluated first
	return types.NewEscapedQuotedText(backslashes.(string), "``", content.([]interface{}))

}

func (p *parser) callonEscapedMonospaceText2() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onEscapedMonospaceText2(stack["backslashes"], stack["content"])
}

func (c *current) onEscapedMonospaceText17() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonEscapedMonospaceText17() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onEscapedMonospaceText17()
}

func (c *current) onEscapedMonospaceText14(backslashes, content interface{}) (interface{}, error) {
	// unbalanced "``" vs "`" punctuation
	result := append([]interface{}{"`"}, content.([]interface{}))
	return types.NewEscapedQuotedText(backslashes.(string), "`", result)

}

func (p *parser) callonEscapedMonospaceText14() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onEscapedMonospaceText14(stack["backslashes"], stack["content"])
}

func (c *current) onEscapedMonospaceText29() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonEscapedMonospaceText29() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onEscapedMonospaceText29()
}

func (c *current) onEscapedMonospaceText26(backslashes, content interface{}) (interface{}, error) {
	// simple punctuation must be evaluated last
	return types.NewEscapedQuotedText(backslashes.(string), "`", content.([]interface{}))

}

func (p *parser) callonEscapedMonospaceText26() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onEscapedMonospaceText26(stack["backslashes"], stack["content"])
}

func (c *current) onQuotedTextContent8() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonQuotedTextContent8() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuotedTextContent8()
}

func (c *current) onQuotedTextContentElement12() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonQuotedTextContentElement12() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuotedTextContentElement12()
}

func (c *current) onQuotedTextContentElement31() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonQuotedTextContentElement31() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuotedTextContentElement31()
}

func (c *current) onQuotedTextContentElement21() (interface{}, error) {
	// can have "*", "_" or "`" within, maybe because the user inserted another quote, or made an error (extra or missing space, for example)
	return c.text, nil
}

func (p *parser) callonQuotedTextContentElement21() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuotedTextContentElement21()
}

func (c *current) onPassthrough2(content interface{}) (interface{}, error) {
	return types.NewPassthrough(types.TriplePlusPassthrough, content.([]interface{}))
}

func (p *parser) callonPassthrough2() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onPassthrough2(stack["content"])
}

func (c *current) onPassthrough12(content interface{}) (interface{}, error) {
	return types.NewPassthrough(types.SinglePlusPassthrough, content.([]interface{}))
}

func (p *parser) callonPassthrough12() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onPassthrough12(stack["content"])
}

func (c *current) onPassthroughMacro2(content interface{}) (interface{}, error) {
	return types.NewPassthrough(types.PassthroughMacro, content.([]interface{}))
}

func (p *parser) callonPassthroughMacro2() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onPassthroughMacro2(stack["content"])
}

func (c *current) onPassthroughMacro12(content interface{}) (interface{}, error) {
	return types.NewPassthrough(types.PassthroughMacro, content.([]interface{}))
}

func (p *parser) callonPassthroughMacro12() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onPassthroughMacro12(stack["content"])
}

func (c *current) onInlineFootnote2(content interface{}) (interface{}, error) {
	return types.NewFootnote("", content.(types.InlineElements))

}

func (p *parser) callonInlineFootnote2() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineFootnote2(stack["content"])
}

func (c *current) onInlineFootnote12() (interface{}, error) {
	// footnote ID not may span multiple lines
	return string(c.text), nil
}

func (p *parser) callonInlineFootnote12() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineFootnote12()
}

func (c *current) onInlineFootnote8(ref, content interface{}) (interface{}, error) {
	return types.NewFootnote(ref.(string), content.(types.InlineElements))

}

func (p *parser) callonInlineFootnote8() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineFootnote8(stack["ref"], stack["content"])
}

func (c *current) onInlineFootnote34() (interface{}, error) {
	// footnote ID not may span multiple lines
	return string(c.text), nil
}

func (p *parser) callonInlineFootnote34() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineFootnote34()
}

func (c *current) onInlineFootnote30(ref interface{}) (interface{}, error) {
	return types.NewFootnote(ref.(string), types.InlineElements{}) // foot note referring to another note

}

func (p *parser) callonInlineFootnote30() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineFootnote30(stack["ref"])
}

func (c *current) onFootnoteContent16() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonFootnoteContent16() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFootnoteContent16()
}

func (c *current) onFootnoteContent33() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonFootnoteContent33() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFootnoteContent33()
}

func (c *current) onFootnoteContent23() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonFootnoteContent23() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFootnoteContent23()
}

func (c *current) onFootnoteContent19(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonFootnoteContent19() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFootnoteContent19(stack["id"])
}

func (c *current) onFootnoteContent51() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonFootnoteContent51() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFootnoteContent51()
}

func (c *current) onFootnoteContent1(elements interface{}) (interface{}, error) {
	// footnote content may span multiple lines
	return types.NewInlineElements(elements.([]interface{}))
}

func (p *parser) callonFootnoteContent1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFootnoteContent1(stack["elements"])
}

func (c *current) onDelimitedBlock27() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDelimitedBlock27() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock27()
}

func (c *current) onDelimitedBlock17() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDelimitedBlock17() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock17()
}

func (c *current) onDelimitedBlock13(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonDelimitedBlock13() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock13(stack["id"])
}

func (c *current) onDelimitedBlock11(id interface{}) (interface{}, error) {
	return id, nil
}

func (p *parser) callonDelimitedBlock11() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock11(stack["id"])
}

func (c *current) onDelimitedBlock55() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDelimitedBlock55() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock55()
}

func (c *current) onDelimitedBlock45() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDelimitedBlock45() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock45()
}

func (c *current) onDelimitedBlock41(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonDelimitedBlock41() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock41(stack["id"])
}

func (c *current) onDelimitedBlock77() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDelimitedBlock77() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock77()
}

func (c *current) onDelimitedBlock80() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDelimitedBlock80() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock80()
}

func (c *current) onDelimitedBlock69(title interface{}) (interface{}, error) {
	return types.NewElementTitle(title.(string))
}

func (p *parser) callonDelimitedBlock69() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock69(stack["title"])
}

func (c *current) onDelimitedBlock94() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDelimitedBlock94() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock94()
}

func (c *current) onDelimitedBlock97() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDelimitedBlock97() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock97()
}

func (c *current) onDelimitedBlock88(role interface{}) (interface{}, error) {
	return types.NewElementRole(role.(string))
}

func (p *parser) callonDelimitedBlock88() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock88(stack["role"])
}

func (c *current) onDelimitedBlock113() (interface{}, error) {
	return types.Tip, nil
}

func (p *parser) callonDelimitedBlock113() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock113()
}

func (c *current) onDelimitedBlock115() (interface{}, error) {
	return types.Note, nil
}

func (p *parser) callonDelimitedBlock115() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock115()
}

func (c *current) onDelimitedBlock117() (interface{}, error) {
	return types.Important, nil
}

func (p *parser) callonDelimitedBlock117() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock117()
}

func (c *current) onDelimitedBlock119() (interface{}, error) {
	return types.Warning, nil
}

func (p *parser) callonDelimitedBlock119() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock119()
}

func (c *current) onDelimitedBlock121() (interface{}, error) {
	return types.Caution, nil
}

func (p *parser) callonDelimitedBlock121() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock121()
}

func (c *current) onDelimitedBlock108(k interface{}) (interface{}, error) {
	return types.NewAdmonitionAttribute(k.(types.AdmonitionKind))
}

func (p *parser) callonDelimitedBlock108() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock108(stack["k"])
}

func (c *current) onDelimitedBlock124() (interface{}, error) {
	return types.ElementAttributes{"layout": "horizontal"}, nil
}

func (p *parser) callonDelimitedBlock124() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock124()
}

func (c *current) onDelimitedBlock132() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDelimitedBlock132() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock132()
}

func (c *current) onDelimitedBlock143() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDelimitedBlock143() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock143()
}

func (c *current) onDelimitedBlock146() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDelimitedBlock146() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock146()
}

func (c *current) onDelimitedBlock140(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDelimitedBlock140() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock140(stack["key"])
}

func (c *current) onDelimitedBlock160(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDelimitedBlock160() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock160(stack["value"])
}

func (c *current) onDelimitedBlock176() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDelimitedBlock176() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock176()
}

func (c *current) onDelimitedBlock137(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonDelimitedBlock137() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock137(stack["key"], stack["value"])
}

func (c *current) onDelimitedBlock184() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDelimitedBlock184() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock184()
}

func (c *current) onDelimitedBlock187() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDelimitedBlock187() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock187()
}

func (c *current) onDelimitedBlock181(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDelimitedBlock181() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock181(stack["key"])
}

func (c *current) onDelimitedBlock204() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDelimitedBlock204() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock204()
}

func (c *current) onDelimitedBlock178(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonDelimitedBlock178() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock178(stack["key"])
}

func (c *current) onDelimitedBlock126(attributes interface{}) (interface{}, error) {
	return types.NewAttributeGroup(attributes.([]interface{}))
}

func (p *parser) callonDelimitedBlock126() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock126(stack["attributes"])
}

func (c *current) onDelimitedBlock210() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDelimitedBlock210() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock210()
}

func (c *current) onDelimitedBlock7(attr interface{}) (interface{}, error) {
	return attr, nil // avoid returning something like `[]interface{}{attr, EOL}`
}

func (p *parser) callonDelimitedBlock7() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock7(stack["attr"])
}

func (c *current) onDelimitedBlock221() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDelimitedBlock221() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock221()
}

func (c *current) onDelimitedBlock239() (interface{}, error) {
	// skip EOL in line content, and stop when quote block delimiter is encountered
	return types.NewInlineElements(string(c.text))
}

func (p *parser) callonDelimitedBlock239() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock239()
}

func (c *current) onDelimitedBlock231(line interface{}) (interface{}, error) {
	return line.(types.InlineElements), nil
}

func (p *parser) callonDelimitedBlock231() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock231(stack["line"])
}

func (c *current) onDelimitedBlock228(lines interface{}) (interface{}, error) {
	return types.NewParagraph(lines.([]interface{}), nil)
}

func (p *parser) callonDelimitedBlock228() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock228(stack["lines"])
}

func (c *current) onDelimitedBlock262() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDelimitedBlock262() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock262()
}

func (c *current) onDelimitedBlock3(attributes, content interface{}) (interface{}, error) {
	return types.NewDelimitedBlock(types.Listing, content.([]interface{}), attributes.([]interface{}), types.None)
}

func (p *parser) callonDelimitedBlock3() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock3(stack["attributes"], stack["content"])
}

func (c *current) onDelimitedBlock296() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDelimitedBlock296() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock296()
}

func (c *current) onDelimitedBlock286() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDelimitedBlock286() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock286()
}

func (c *current) onDelimitedBlock282(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonDelimitedBlock282() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock282(stack["id"])
}

func (c *current) onDelimitedBlock280(id interface{}) (interface{}, error) {
	return id, nil
}

func (p *parser) callonDelimitedBlock280() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock280(stack["id"])
}

func (c *current) onDelimitedBlock324() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDelimitedBlock324() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock324()
}

func (c *current) onDelimitedBlock314() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDelimitedBlock314() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock314()
}

func (c *current) onDelimitedBlock310(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonDelimitedBlock310() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock310(stack["id"])
}

func (c *current) onDelimitedBlock346() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDelimitedBlock346() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock346()
}

func (c *current) onDelimitedBlock349() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDelimitedBlock349() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock349()
}

func (c *current) onDelimitedBlock338(title interface{}) (interface{}, error) {
	return types.NewElementTitle(title.(string))
}

func (p *parser) callonDelimitedBlock338() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock338(stack["title"])
}

func (c *current) onDelimitedBlock363() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDelimitedBlock363() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock363()
}

func (c *current) onDelimitedBlock366() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDelimitedBlock366() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock366()
}

func (c *current) onDelimitedBlock357(role interface{}) (interface{}, error) {
	return types.NewElementRole(role.(string))
}

func (p *parser) callonDelimitedBlock357() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock357(stack["role"])
}

func (c *current) onDelimitedBlock382() (interface{}, error) {
	return types.Tip, nil
}

func (p *parser) callonDelimitedBlock382() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock382()
}

func (c *current) onDelimitedBlock384() (interface{}, error) {
	return types.Note, nil
}

func (p *parser) callonDelimitedBlock384() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock384()
}

func (c *current) onDelimitedBlock386() (interface{}, error) {
	return types.Important, nil
}

func (p *parser) callonDelimitedBlock386() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock386()
}

func (c *current) onDelimitedBlock388() (interface{}, error) {
	return types.Warning, nil
}

func (p *parser) callonDelimitedBlock388() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock388()
}

func (c *current) onDelimitedBlock390() (interface{}, error) {
	return types.Caution, nil
}

func (p *parser) callonDelimitedBlock390() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock390()
}

func (c *current) onDelimitedBlock377(k interface{}) (interface{}, error) {
	return types.NewAdmonitionAttribute(k.(types.AdmonitionKind))
}

func (p *parser) callonDelimitedBlock377() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock377(stack["k"])
}

func (c *current) onDelimitedBlock393() (interface{}, error) {
	return types.ElementAttributes{"layout": "horizontal"}, nil
}

func (p *parser) callonDelimitedBlock393() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock393()
}

func (c *current) onDelimitedBlock401() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDelimitedBlock401() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock401()
}

func (c *current) onDelimitedBlock412() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDelimitedBlock412() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock412()
}

func (c *current) onDelimitedBlock415() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDelimitedBlock415() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock415()
}

func (c *current) onDelimitedBlock409(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDelimitedBlock409() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock409(stack["key"])
}

func (c *current) onDelimitedBlock429(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDelimitedBlock429() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock429(stack["value"])
}

func (c *current) onDelimitedBlock445() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDelimitedBlock445() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock445()
}

func (c *current) onDelimitedBlock406(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonDelimitedBlock406() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock406(stack["key"], stack["value"])
}

func (c *current) onDelimitedBlock453() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDelimitedBlock453() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock453()
}

func (c *current) onDelimitedBlock456() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDelimitedBlock456() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock456()
}

func (c *current) onDelimitedBlock450(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDelimitedBlock450() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock450(stack["key"])
}

func (c *current) onDelimitedBlock473() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDelimitedBlock473() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock473()
}

func (c *current) onDelimitedBlock447(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonDelimitedBlock447() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock447(stack["key"])
}

func (c *current) onDelimitedBlock395(attributes interface{}) (interface{}, error) {
	return types.NewAttributeGroup(attributes.([]interface{}))
}

func (p *parser) callonDelimitedBlock395() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock395(stack["attributes"])
}

func (c *current) onDelimitedBlock479() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDelimitedBlock479() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock479()
}

func (c *current) onDelimitedBlock276(attr interface{}) (interface{}, error) {
	return attr, nil // avoid returning something like `[]interface{}{attr, EOL}`
}

func (p *parser) callonDelimitedBlock276() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock276(stack["attr"])
}

func (c *current) onDelimitedBlock490() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDelimitedBlock490() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock490()
}

func (c *current) onDelimitedBlock497() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDelimitedBlock497() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock497()
}

func (c *current) onDelimitedBlock521() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDelimitedBlock521() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock521()
}

func (c *current) onDelimitedBlock272(attributes, content interface{}) (interface{}, error) {
	return types.NewDelimitedBlock(types.Comment, content.([]interface{}), attributes.([]interface{}), types.Verbatim)
}

func (p *parser) callonDelimitedBlock272() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock272(stack["attributes"], stack["content"])
}

func (c *current) onFencedBlock25() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonFencedBlock25() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFencedBlock25()
}

func (c *current) onFencedBlock15() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonFencedBlock15() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFencedBlock15()
}

func (c *current) onFencedBlock11(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonFencedBlock11() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFencedBlock11(stack["id"])
}

func (c *current) onFencedBlock9(id interface{}) (interface{}, error) {
	return id, nil
}

func (p *parser) callonFencedBlock9() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFencedBlock9(stack["id"])
}

func (c *current) onFencedBlock53() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonFencedBlock53() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFencedBlock53()
}

func (c *current) onFencedBlock43() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonFencedBlock43() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFencedBlock43()
}

func (c *current) onFencedBlock39(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonFencedBlock39() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFencedBlock39(stack["id"])
}

func (c *current) onFencedBlock75() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonFencedBlock75() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFencedBlock75()
}

func (c *current) onFencedBlock78() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonFencedBlock78() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFencedBlock78()
}

func (c *current) onFencedBlock67(title interface{}) (interface{}, error) {
	return types.NewElementTitle(title.(string))
}

func (p *parser) callonFencedBlock67() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFencedBlock67(stack["title"])
}

func (c *current) onFencedBlock92() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonFencedBlock92() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFencedBlock92()
}

func (c *current) onFencedBlock95() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonFencedBlock95() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFencedBlock95()
}

func (c *current) onFencedBlock86(role interface{}) (interface{}, error) {
	return types.NewElementRole(role.(string))
}

func (p *parser) callonFencedBlock86() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFencedBlock86(stack["role"])
}

func (c *current) onFencedBlock111() (interface{}, error) {
	return types.Tip, nil
}

func (p *parser) callonFencedBlock111() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFencedBlock111()
}

func (c *current) onFencedBlock113() (interface{}, error) {
	return types.Note, nil
}

func (p *parser) callonFencedBlock113() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFencedBlock113()
}

func (c *current) onFencedBlock115() (interface{}, error) {
	return types.Important, nil
}

func (p *parser) callonFencedBlock115() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFencedBlock115()
}

func (c *current) onFencedBlock117() (interface{}, error) {
	return types.Warning, nil
}

func (p *parser) callonFencedBlock117() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFencedBlock117()
}

func (c *current) onFencedBlock119() (interface{}, error) {
	return types.Caution, nil
}

func (p *parser) callonFencedBlock119() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFencedBlock119()
}

func (c *current) onFencedBlock106(k interface{}) (interface{}, error) {
	return types.NewAdmonitionAttribute(k.(types.AdmonitionKind))
}

func (p *parser) callonFencedBlock106() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFencedBlock106(stack["k"])
}

func (c *current) onFencedBlock122() (interface{}, error) {
	return types.ElementAttributes{"layout": "horizontal"}, nil
}

func (p *parser) callonFencedBlock122() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFencedBlock122()
}

func (c *current) onFencedBlock130() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonFencedBlock130() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFencedBlock130()
}

func (c *current) onFencedBlock141() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonFencedBlock141() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFencedBlock141()
}

func (c *current) onFencedBlock144() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonFencedBlock144() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFencedBlock144()
}

func (c *current) onFencedBlock138(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonFencedBlock138() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFencedBlock138(stack["key"])
}

func (c *current) onFencedBlock158(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonFencedBlock158() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFencedBlock158(stack["value"])
}

func (c *current) onFencedBlock174() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonFencedBlock174() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFencedBlock174()
}

func (c *current) onFencedBlock135(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonFencedBlock135() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFencedBlock135(stack["key"], stack["value"])
}

func (c *current) onFencedBlock182() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonFencedBlock182() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFencedBlock182()
}

func (c *current) onFencedBlock185() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonFencedBlock185() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFencedBlock185()
}

func (c *current) onFencedBlock179(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonFencedBlock179() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFencedBlock179(stack["key"])
}

func (c *current) onFencedBlock202() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonFencedBlock202() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFencedBlock202()
}

func (c *current) onFencedBlock176(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonFencedBlock176() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFencedBlock176(stack["key"])
}

func (c *current) onFencedBlock124(attributes interface{}) (interface{}, error) {
	return types.NewAttributeGroup(attributes.([]interface{}))
}

func (p *parser) callonFencedBlock124() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFencedBlock124(stack["attributes"])
}

func (c *current) onFencedBlock208() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonFencedBlock208() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFencedBlock208()
}

func (c *current) onFencedBlock5(attr interface{}) (interface{}, error) {
	return attr, nil // avoid returning something like `[]interface{}{attr, EOL}`
}

func (p *parser) callonFencedBlock5() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFencedBlock5(stack["attr"])
}

func (c *current) onFencedBlock219() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonFencedBlock219() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFencedBlock219()
}

func (c *current) onFencedBlock233() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonFencedBlock233() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFencedBlock233()
}

func (c *current) onFencedBlock1(attributes, content interface{}) (interface{}, error) {
	return types.NewDelimitedBlock(types.Fenced, content.([]interface{}), attributes.([]interface{}), types.None)
}

func (p *parser) callonFencedBlock1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFencedBlock1(stack["attributes"], stack["content"])
}

func (c *current) onFencedBlockContent12() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonFencedBlockContent12() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFencedBlockContent12()
}

func (c *current) onFencedBlockContent4() (interface{}, error) {
	return types.NewBlankLine()
}

func (p *parser) callonFencedBlockContent4() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFencedBlockContent4()
}

func (c *current) onExampleBlock25() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonExampleBlock25() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onExampleBlock25()
}

func (c *current) onExampleBlock15() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonExampleBlock15() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onExampleBlock15()
}

func (c *current) onExampleBlock11(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonExampleBlock11() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onExampleBlock11(stack["id"])
}

func (c *current) onExampleBlock9(id interface{}) (interface{}, error) {
	return id, nil
}

func (p *parser) callonExampleBlock9() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onExampleBlock9(stack["id"])
}

func (c *current) onExampleBlock53() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonExampleBlock53() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onExampleBlock53()
}

func (c *current) onExampleBlock43() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonExampleBlock43() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onExampleBlock43()
}

func (c *current) onExampleBlock39(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonExampleBlock39() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onExampleBlock39(stack["id"])
}

func (c *current) onExampleBlock75() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonExampleBlock75() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onExampleBlock75()
}

func (c *current) onExampleBlock78() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonExampleBlock78() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onExampleBlock78()
}

func (c *current) onExampleBlock67(title interface{}) (interface{}, error) {
	return types.NewElementTitle(title.(string))
}

func (p *parser) callonExampleBlock67() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onExampleBlock67(stack["title"])
}

func (c *current) onExampleBlock92() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonExampleBlock92() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onExampleBlock92()
}

func (c *current) onExampleBlock95() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonExampleBlock95() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onExampleBlock95()
}

func (c *current) onExampleBlock86(role interface{}) (interface{}, error) {
	return types.NewElementRole(role.(string))
}

func (p *parser) callonExampleBlock86() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onExampleBlock86(stack["role"])
}

func (c *current) onExampleBlock111() (interface{}, error) {
	return types.Tip, nil
}

func (p *parser) callonExampleBlock111() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onExampleBlock111()
}

func (c *current) onExampleBlock113() (interface{}, error) {
	return types.Note, nil
}

func (p *parser) callonExampleBlock113() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onExampleBlock113()
}

func (c *current) onExampleBlock115() (interface{}, error) {
	return types.Important, nil
}

func (p *parser) callonExampleBlock115() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onExampleBlock115()
}

func (c *current) onExampleBlock117() (interface{}, error) {
	return types.Warning, nil
}

func (p *parser) callonExampleBlock117() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onExampleBlock117()
}

func (c *current) onExampleBlock119() (interface{}, error) {
	return types.Caution, nil
}

func (p *parser) callonExampleBlock119() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onExampleBlock119()
}

func (c *current) onExampleBlock106(k interface{}) (interface{}, error) {
	return types.NewAdmonitionAttribute(k.(types.AdmonitionKind))
}

func (p *parser) callonExampleBlock106() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onExampleBlock106(stack["k"])
}

func (c *current) onExampleBlock122() (interface{}, error) {
	return types.ElementAttributes{"layout": "horizontal"}, nil
}

func (p *parser) callonExampleBlock122() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onExampleBlock122()
}

func (c *current) onExampleBlock130() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonExampleBlock130() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onExampleBlock130()
}

func (c *current) onExampleBlock141() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonExampleBlock141() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onExampleBlock141()
}

func (c *current) onExampleBlock144() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonExampleBlock144() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onExampleBlock144()
}

func (c *current) onExampleBlock138(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonExampleBlock138() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onExampleBlock138(stack["key"])
}

func (c *current) onExampleBlock158(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonExampleBlock158() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onExampleBlock158(stack["value"])
}

func (c *current) onExampleBlock174() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonExampleBlock174() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onExampleBlock174()
}

func (c *current) onExampleBlock135(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonExampleBlock135() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onExampleBlock135(stack["key"], stack["value"])
}

func (c *current) onExampleBlock182() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonExampleBlock182() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onExampleBlock182()
}

func (c *current) onExampleBlock185() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonExampleBlock185() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onExampleBlock185()
}

func (c *current) onExampleBlock179(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonExampleBlock179() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onExampleBlock179(stack["key"])
}

func (c *current) onExampleBlock202() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonExampleBlock202() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onExampleBlock202()
}

func (c *current) onExampleBlock176(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonExampleBlock176() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onExampleBlock176(stack["key"])
}

func (c *current) onExampleBlock124(attributes interface{}) (interface{}, error) {
	return types.NewAttributeGroup(attributes.([]interface{}))
}

func (p *parser) callonExampleBlock124() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onExampleBlock124(stack["attributes"])
}

func (c *current) onExampleBlock208() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonExampleBlock208() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onExampleBlock208()
}

func (c *current) onExampleBlock5(attr interface{}) (interface{}, error) {
	return attr, nil // avoid returning something like `[]interface{}{attr, EOL}`
}

func (p *parser) callonExampleBlock5() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onExampleBlock5(stack["attr"])
}

func (c *current) onExampleBlock219() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonExampleBlock219() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onExampleBlock219()
}

func (c *current) onExampleBlock237() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonExampleBlock237() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onExampleBlock237()
}

func (c *current) onExampleBlock229() (interface{}, error) {
	return types.NewBlankLine()
}

func (p *parser) callonExampleBlock229() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onExampleBlock229()
}

func (c *current) onExampleBlock250() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonExampleBlock250() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onExampleBlock250()
}

func (c *current) onExampleBlock1(attributes, content interface{}) (interface{}, error) {
	return types.NewDelimitedBlock(types.Example, content.([]interface{}), attributes.([]interface{}), types.None)
}

func (p *parser) callonExampleBlock1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onExampleBlock1(stack["attributes"], stack["content"])
}

func (c *current) onBlockParagraph1(lines interface{}) (interface{}, error) {
	return types.NewParagraph(lines.([]interface{}), nil)
}

func (p *parser) callonBlockParagraph1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraph1(stack["lines"])
}

func (c *current) onBlockParagraphLine9() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonBlockParagraphLine9() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraphLine9()
}

func (c *current) onBlockParagraphLine13() (interface{}, error) {
	// numbering style: "....."
	return types.NewOrderedListItemPrefix(types.UpperRoman, 5)

}

func (p *parser) callonBlockParagraphLine13() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraphLine13()
}

func (c *current) onBlockParagraphLine15() (interface{}, error) {
	// numbering style: "...."
	return types.NewOrderedListItemPrefix(types.UpperAlpha, 4)

}

func (p *parser) callonBlockParagraphLine15() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraphLine15()
}

func (c *current) onBlockParagraphLine17() (interface{}, error) {
	// numbering style: "..."
	return types.NewOrderedListItemPrefix(types.LowerRoman, 3)

}

func (p *parser) callonBlockParagraphLine17() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraphLine17()
}

func (c *current) onBlockParagraphLine19() (interface{}, error) {
	// numbering style: ".."
	return types.NewOrderedListItemPrefix(types.LowerAlpha, 2)

}

func (p *parser) callonBlockParagraphLine19() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraphLine19()
}

func (c *current) onBlockParagraphLine21() (interface{}, error) {
	// numbering style: "."
	return types.NewOrderedListItemPrefix(types.Arabic, 1)
	// explicit numbering

}

func (p *parser) callonBlockParagraphLine21() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraphLine21()
}

func (c *current) onBlockParagraphLine23() (interface{}, error) {
	// numbering style: "1."
	return types.NewOrderedListItemPrefix(types.Arabic, 1)

}

func (p *parser) callonBlockParagraphLine23() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraphLine23()
}

func (c *current) onBlockParagraphLine28() (interface{}, error) {
	// numbering style: "a."
	return types.NewOrderedListItemPrefix(types.LowerAlpha, 1)

}

func (p *parser) callonBlockParagraphLine28() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraphLine28()
}

func (c *current) onBlockParagraphLine33() (interface{}, error) {
	// numbering style: "A."
	return types.NewOrderedListItemPrefix(types.UpperAlpha, 1)

}

func (p *parser) callonBlockParagraphLine33() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraphLine33()
}

func (c *current) onBlockParagraphLine38() (interface{}, error) {
	// numbering style: "i)"
	return types.NewOrderedListItemPrefix(types.LowerRoman, 1)

}

func (p *parser) callonBlockParagraphLine38() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraphLine38()
}

func (c *current) onBlockParagraphLine43() (interface{}, error) {
	// numbering style: "I)"
	return types.NewOrderedListItemPrefix(types.UpperRoman, 1)

}

func (p *parser) callonBlockParagraphLine43() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraphLine43()
}

func (c *current) onBlockParagraphLine51() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonBlockParagraphLine51() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraphLine51()
}

func (c *current) onBlockParagraphLine4(prefix interface{}) (interface{}, error) {
	return prefix, nil

}

func (p *parser) callonBlockParagraphLine4() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraphLine4(stack["prefix"])
}

func (c *current) onBlockParagraphLine59() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonBlockParagraphLine59() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraphLine59()
}

func (c *current) onBlockParagraphLine63() (interface{}, error) {
	// ignore whitespaces, only return the relevant "*"/"-" marker
	return types.NewUnorderedListItemPrefix(types.FiveAsterisks, 5)

}

func (p *parser) callonBlockParagraphLine63() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraphLine63()
}

func (c *current) onBlockParagraphLine65() (interface{}, error) {
	// ignore whitespaces, only return the relevant "*"/"-" marker
	return types.NewUnorderedListItemPrefix(types.FourAsterisks, 4)

}

func (p *parser) callonBlockParagraphLine65() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraphLine65()
}

func (c *current) onBlockParagraphLine67() (interface{}, error) {
	// ignore whitespaces, only return the relevant "*"/"-" marker
	return types.NewUnorderedListItemPrefix(types.ThreeAsterisks, 3)

}

func (p *parser) callonBlockParagraphLine67() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraphLine67()
}

func (c *current) onBlockParagraphLine69() (interface{}, error) {
	// ignore whitespaces, only return the relevant "*"/"-" marker
	return types.NewUnorderedListItemPrefix(types.TwoAsterisks, 2)

}

func (p *parser) callonBlockParagraphLine69() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraphLine69()
}

func (c *current) onBlockParagraphLine71() (interface{}, error) {
	// ignore whitespaces, only return the relevant "*"/"-" marker
	return types.NewUnorderedListItemPrefix(types.OneAsterisk, 1)

}

func (p *parser) callonBlockParagraphLine71() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraphLine71()
}

func (c *current) onBlockParagraphLine73() (interface{}, error) {
	// ignore whitespaces, only return the relevant "*"/"-" marker
	return types.NewUnorderedListItemPrefix(types.Dash, 1)

}

func (p *parser) callonBlockParagraphLine73() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraphLine73()
}

func (c *current) onBlockParagraphLine78() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonBlockParagraphLine78() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraphLine78()
}

func (c *current) onBlockParagraphLine54(prefix interface{}) (interface{}, error) {
	return prefix, nil

}

func (p *parser) callonBlockParagraphLine54() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraphLine54(stack["prefix"])
}

func (c *current) onBlockParagraphLine82() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonBlockParagraphLine82() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraphLine82()
}

func (c *current) onBlockParagraphLine96() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonBlockParagraphLine96() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraphLine96()
}

func (c *current) onBlockParagraphLine107() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonBlockParagraphLine107() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraphLine107()
}

func (c *current) onBlockParagraphLine101() (interface{}, error) {
	return types.NewListItemContinuation()
}

func (p *parser) callonBlockParagraphLine101() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraphLine101()
}

func (c *current) onBlockParagraphLine1(line interface{}) (interface{}, error) {
	return line, nil
}

func (p *parser) callonBlockParagraphLine1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraphLine1(stack["line"])
}

func (c *current) onQuoteBlock16() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonQuoteBlock16() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteBlock16()
}

func (c *current) onQuoteBlock19() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonQuoteBlock19() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteBlock19()
}

func (c *current) onQuoteBlock32() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonQuoteBlock32() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteBlock32()
}

func (c *current) onQuoteBlock44() (interface{}, error) {
	return types.Tip, nil
}

func (p *parser) callonQuoteBlock44() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteBlock44()
}

func (c *current) onQuoteBlock46() (interface{}, error) {
	return types.Note, nil
}

func (p *parser) callonQuoteBlock46() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteBlock46()
}

func (c *current) onQuoteBlock48() (interface{}, error) {
	return types.Important, nil
}

func (p *parser) callonQuoteBlock48() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteBlock48()
}

func (c *current) onQuoteBlock50() (interface{}, error) {
	return types.Warning, nil
}

func (p *parser) callonQuoteBlock50() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteBlock50()
}

func (c *current) onQuoteBlock52() (interface{}, error) {
	return types.Caution, nil
}

func (p *parser) callonQuoteBlock52() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteBlock52()
}

func (c *current) onQuoteBlock13() (interface{}, error) {
	// make sure quote attribute does not collide with other generic or specific attributes (ID, Admonition, etc)
	return string(c.text), nil
}

func (p *parser) callonQuoteBlock13() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteBlock13()
}

func (c *current) onQuoteBlock58() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonQuoteBlock58() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteBlock58()
}

func (c *current) onQuoteBlock62() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonQuoteBlock62() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteBlock62()
}

func (c *current) onQuoteBlock78() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonQuoteBlock78() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteBlock78()
}

func (c *current) onQuoteBlock9(kind, author, title interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), author.(string), title.(string))

}

func (p *parser) callonQuoteBlock9() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteBlock9(stack["kind"], stack["author"], stack["title"])
}

func (c *current) onQuoteBlock100() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonQuoteBlock100() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteBlock100()
}

func (c *current) onQuoteBlock103() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonQuoteBlock103() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteBlock103()
}

func (c *current) onQuoteBlock116() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonQuoteBlock116() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteBlock116()
}

func (c *current) onQuoteBlock128() (interface{}, error) {
	return types.Tip, nil
}

func (p *parser) callonQuoteBlock128() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteBlock128()
}

func (c *current) onQuoteBlock130() (interface{}, error) {
	return types.Note, nil
}

func (p *parser) callonQuoteBlock130() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteBlock130()
}

func (c *current) onQuoteBlock132() (interface{}, error) {
	return types.Important, nil
}

func (p *parser) callonQuoteBlock132() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteBlock132()
}

func (c *current) onQuoteBlock134() (interface{}, error) {
	return types.Warning, nil
}

func (p *parser) callonQuoteBlock134() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteBlock134()
}

func (c *current) onQuoteBlock136() (interface{}, error) {
	return types.Caution, nil
}

func (p *parser) callonQuoteBlock136() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteBlock136()
}

func (c *current) onQuoteBlock97() (interface{}, error) {
	// make sure quote attribute does not collide with other generic or specific attributes (ID, Admonition, etc)
	return string(c.text), nil
}

func (p *parser) callonQuoteBlock97() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteBlock97()
}

func (c *current) onQuoteBlock142() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonQuoteBlock142() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteBlock142()
}

func (c *current) onQuoteBlock146() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonQuoteBlock146() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteBlock146()
}

func (c *current) onQuoteBlock93(kind, author interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), author.(string), "")

}

func (p *parser) callonQuoteBlock93() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteBlock93(stack["kind"], stack["author"])
}

func (c *current) onQuoteBlock168() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonQuoteBlock168() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteBlock168()
}

func (c *current) onQuoteBlock171() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonQuoteBlock171() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteBlock171()
}

func (c *current) onQuoteBlock184() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonQuoteBlock184() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteBlock184()
}

func (c *current) onQuoteBlock196() (interface{}, error) {
	return types.Tip, nil
}

func (p *parser) callonQuoteBlock196() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteBlock196()
}

func (c *current) onQuoteBlock198() (interface{}, error) {
	return types.Note, nil
}

func (p *parser) callonQuoteBlock198() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteBlock198()
}

func (c *current) onQuoteBlock200() (interface{}, error) {
	return types.Important, nil
}

func (p *parser) callonQuoteBlock200() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteBlock200()
}

func (c *current) onQuoteBlock202() (interface{}, error) {
	return types.Warning, nil
}

func (p *parser) callonQuoteBlock202() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteBlock202()
}

func (c *current) onQuoteBlock204() (interface{}, error) {
	return types.Caution, nil
}

func (p *parser) callonQuoteBlock204() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteBlock204()
}

func (c *current) onQuoteBlock165() (interface{}, error) {
	// make sure quote attribute does not collide with other generic or specific attributes (ID, Admonition, etc)
	return string(c.text), nil
}

func (p *parser) callonQuoteBlock165() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteBlock165()
}

func (c *current) onQuoteBlock210() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonQuoteBlock210() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteBlock210()
}

func (c *current) onQuoteBlock161(kind interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), "", "")

}

func (p *parser) callonQuoteBlock161() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteBlock161(stack["kind"])
}

func (c *current) onQuoteBlock216() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonQuoteBlock216() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteBlock216()
}

func (c *current) onQuoteBlock5(attribute interface{}) (interface{}, error) {
	return attribute, nil

}

func (p *parser) callonQuoteBlock5() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteBlock5(stack["attribute"])
}

func (c *current) onQuoteBlock227() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonQuoteBlock227() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteBlock227()
}

func (c *current) onQuoteBlock241() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonQuoteBlock241() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteBlock241()
}

func (c *current) onQuoteBlock1(attributes, content interface{}) (interface{}, error) {
	return types.NewDelimitedBlock(types.Quote,
		content.([]interface{}),
		attributes.([]interface{}),
		types.None)
}

func (p *parser) callonQuoteBlock1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteBlock1(stack["attributes"], stack["content"])
}

func (c *current) onQuoteBlockContent1(element interface{}) (interface{}, error) {
	return element, nil

}

func (p *parser) callonQuoteBlockContent1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteBlockContent1(stack["element"])
}

func (c *current) onVerseBlock13() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonVerseBlock13() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseBlock13()
}

func (c *current) onVerseBlock18() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonVerseBlock18() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseBlock18()
}

func (c *current) onVerseBlock22() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonVerseBlock22() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseBlock22()
}

func (c *current) onVerseBlock38() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonVerseBlock38() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseBlock38()
}

func (c *current) onVerseBlock9(kind, author, title interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), author.(string), title.(string))

}

func (p *parser) callonVerseBlock9() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseBlock9(stack["kind"], stack["author"], stack["title"])
}

func (c *current) onVerseBlock57() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonVerseBlock57() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseBlock57()
}

func (c *current) onVerseBlock62() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonVerseBlock62() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseBlock62()
}

func (c *current) onVerseBlock66() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonVerseBlock66() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseBlock66()
}

func (c *current) onVerseBlock53(kind, author interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), author.(string), "")

}

func (p *parser) callonVerseBlock53() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseBlock53(stack["kind"], stack["author"])
}

func (c *current) onVerseBlock85() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonVerseBlock85() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseBlock85()
}

func (c *current) onVerseBlock90() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonVerseBlock90() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseBlock90()
}

func (c *current) onVerseBlock81(kind interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), "", "")

}

func (p *parser) callonVerseBlock81() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseBlock81(stack["kind"])
}

func (c *current) onVerseBlock96() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonVerseBlock96() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseBlock96()
}

func (c *current) onVerseBlock5(attribute interface{}) (interface{}, error) {
	return attribute, nil

}

func (p *parser) callonVerseBlock5() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseBlock5(stack["attribute"])
}

func (c *current) onVerseBlock107() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonVerseBlock107() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseBlock107()
}

func (c *current) onVerseBlock121() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonVerseBlock121() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseBlock121()
}

func (c *current) onVerseBlock1(attributes, content interface{}) (interface{}, error) {
	return types.NewDelimitedBlock(types.Verse,
		content.([]interface{}),
		attributes.([]interface{}),
		types.None)
}

func (p *parser) callonVerseBlock1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseBlock1(stack["attributes"], stack["content"])
}

func (c *current) onVerseBlockContent1(lines interface{}) (interface{}, error) {
	return types.NewParagraph(lines.([]interface{}), nil)
}

func (p *parser) callonVerseBlockContent1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseBlockContent1(stack["lines"])
}

func (c *current) onVerseBlockLine1(line interface{}) (interface{}, error) {
	return line.(types.InlineElements), nil
}

func (p *parser) callonVerseBlockLine1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseBlockLine1(stack["line"])
}

func (c *current) onVerseBlockLineContent16() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonVerseBlockLineContent16() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseBlockLineContent16()
}

func (c *current) onVerseBlockLineContent22() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonVerseBlockLineContent22() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseBlockLineContent22()
}

func (c *current) onVerseBlockLineContent1(elements interface{}) (interface{}, error) {
	// skip EOL in line content, and stop when quote block delimiter is encountered
	return types.NewInlineElements(elements.([]interface{}))
}

func (p *parser) callonVerseBlockLineContent1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseBlockLineContent1(stack["elements"])
}

func (c *current) onSidebarBlock25() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSidebarBlock25() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSidebarBlock25()
}

func (c *current) onSidebarBlock15() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSidebarBlock15() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSidebarBlock15()
}

func (c *current) onSidebarBlock11(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonSidebarBlock11() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSidebarBlock11(stack["id"])
}

func (c *current) onSidebarBlock9(id interface{}) (interface{}, error) {
	return id, nil
}

func (p *parser) callonSidebarBlock9() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSidebarBlock9(stack["id"])
}

func (c *current) onSidebarBlock53() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSidebarBlock53() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSidebarBlock53()
}

func (c *current) onSidebarBlock43() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSidebarBlock43() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSidebarBlock43()
}

func (c *current) onSidebarBlock39(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonSidebarBlock39() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSidebarBlock39(stack["id"])
}

func (c *current) onSidebarBlock75() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSidebarBlock75() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSidebarBlock75()
}

func (c *current) onSidebarBlock78() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSidebarBlock78() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSidebarBlock78()
}

func (c *current) onSidebarBlock67(title interface{}) (interface{}, error) {
	return types.NewElementTitle(title.(string))
}

func (p *parser) callonSidebarBlock67() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSidebarBlock67(stack["title"])
}

func (c *current) onSidebarBlock92() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSidebarBlock92() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSidebarBlock92()
}

func (c *current) onSidebarBlock95() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSidebarBlock95() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSidebarBlock95()
}

func (c *current) onSidebarBlock86(role interface{}) (interface{}, error) {
	return types.NewElementRole(role.(string))
}

func (p *parser) callonSidebarBlock86() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSidebarBlock86(stack["role"])
}

func (c *current) onSidebarBlock111() (interface{}, error) {
	return types.Tip, nil
}

func (p *parser) callonSidebarBlock111() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSidebarBlock111()
}

func (c *current) onSidebarBlock113() (interface{}, error) {
	return types.Note, nil
}

func (p *parser) callonSidebarBlock113() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSidebarBlock113()
}

func (c *current) onSidebarBlock115() (interface{}, error) {
	return types.Important, nil
}

func (p *parser) callonSidebarBlock115() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSidebarBlock115()
}

func (c *current) onSidebarBlock117() (interface{}, error) {
	return types.Warning, nil
}

func (p *parser) callonSidebarBlock117() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSidebarBlock117()
}

func (c *current) onSidebarBlock119() (interface{}, error) {
	return types.Caution, nil
}

func (p *parser) callonSidebarBlock119() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSidebarBlock119()
}

func (c *current) onSidebarBlock106(k interface{}) (interface{}, error) {
	return types.NewAdmonitionAttribute(k.(types.AdmonitionKind))
}

func (p *parser) callonSidebarBlock106() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSidebarBlock106(stack["k"])
}

func (c *current) onSidebarBlock122() (interface{}, error) {
	return types.ElementAttributes{"layout": "horizontal"}, nil
}

func (p *parser) callonSidebarBlock122() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSidebarBlock122()
}

func (c *current) onSidebarBlock130() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSidebarBlock130() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSidebarBlock130()
}

func (c *current) onSidebarBlock141() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSidebarBlock141() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSidebarBlock141()
}

func (c *current) onSidebarBlock144() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSidebarBlock144() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSidebarBlock144()
}

func (c *current) onSidebarBlock138(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSidebarBlock138() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSidebarBlock138(stack["key"])
}

func (c *current) onSidebarBlock158(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSidebarBlock158() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSidebarBlock158(stack["value"])
}

func (c *current) onSidebarBlock174() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSidebarBlock174() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSidebarBlock174()
}

func (c *current) onSidebarBlock135(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonSidebarBlock135() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSidebarBlock135(stack["key"], stack["value"])
}

func (c *current) onSidebarBlock182() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSidebarBlock182() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSidebarBlock182()
}

func (c *current) onSidebarBlock185() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSidebarBlock185() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSidebarBlock185()
}

func (c *current) onSidebarBlock179(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSidebarBlock179() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSidebarBlock179(stack["key"])
}

func (c *current) onSidebarBlock202() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSidebarBlock202() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSidebarBlock202()
}

func (c *current) onSidebarBlock176(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonSidebarBlock176() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSidebarBlock176(stack["key"])
}

func (c *current) onSidebarBlock124(attributes interface{}) (interface{}, error) {
	return types.NewAttributeGroup(attributes.([]interface{}))
}

func (p *parser) callonSidebarBlock124() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSidebarBlock124(stack["attributes"])
}

func (c *current) onSidebarBlock208() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSidebarBlock208() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSidebarBlock208()
}

func (c *current) onSidebarBlock5(attr interface{}) (interface{}, error) {
	return attr, nil // avoid returning something like `[]interface{}{attr, EOL}`
}

func (p *parser) callonSidebarBlock5() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSidebarBlock5(stack["attr"])
}

func (c *current) onSidebarBlock219() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSidebarBlock219() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSidebarBlock219()
}

func (c *current) onSidebarBlock233() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSidebarBlock233() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSidebarBlock233()
}

func (c *current) onSidebarBlock1(attributes, content interface{}) (interface{}, error) {
	return types.NewDelimitedBlock(types.Sidebar, content.([]interface{}), attributes.([]interface{}), types.None)
}

func (p *parser) callonSidebarBlock1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSidebarBlock1(stack["attributes"], stack["content"])
}

func (c *current) onSidebarBlockContent12() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSidebarBlockContent12() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSidebarBlockContent12()
}

func (c *current) onSidebarBlockContent4() (interface{}, error) {
	return types.NewBlankLine()
}

func (p *parser) callonSidebarBlockContent4() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSidebarBlockContent4()
}

func (c *current) onNonSidebarBlock1(content interface{}) (interface{}, error) {
	return content, nil
}

func (p *parser) callonNonSidebarBlock1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onNonSidebarBlock1(stack["content"])
}

func (c *current) onTable25() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTable25() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTable25()
}

func (c *current) onTable15() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTable15() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTable15()
}

func (c *current) onTable11(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonTable11() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTable11(stack["id"])
}

func (c *current) onTable9(id interface{}) (interface{}, error) {
	return id, nil
}

func (p *parser) callonTable9() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTable9(stack["id"])
}

func (c *current) onTable53() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTable53() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTable53()
}

func (c *current) onTable43() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTable43() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTable43()
}

func (c *current) onTable39(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonTable39() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTable39(stack["id"])
}

func (c *current) onTable75() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTable75() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTable75()
}

func (c *current) onTable78() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTable78() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTable78()
}

func (c *current) onTable67(title interface{}) (interface{}, error) {
	return types.NewElementTitle(title.(string))
}

func (p *parser) callonTable67() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTable67(stack["title"])
}

func (c *current) onTable92() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTable92() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTable92()
}

func (c *current) onTable95() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTable95() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTable95()
}

func (c *current) onTable86(role interface{}) (interface{}, error) {
	return types.NewElementRole(role.(string))
}

func (p *parser) callonTable86() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTable86(stack["role"])
}

func (c *current) onTable111() (interface{}, error) {
	return types.Tip, nil
}

func (p *parser) callonTable111() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTable111()
}

func (c *current) onTable113() (interface{}, error) {
	return types.Note, nil
}

func (p *parser) callonTable113() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTable113()
}

func (c *current) onTable115() (interface{}, error) {
	return types.Important, nil
}

func (p *parser) callonTable115() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTable115()
}

func (c *current) onTable117() (interface{}, error) {
	return types.Warning, nil
}

func (p *parser) callonTable117() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTable117()
}

func (c *current) onTable119() (interface{}, error) {
	return types.Caution, nil
}

func (p *parser) callonTable119() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTable119()
}

func (c *current) onTable106(k interface{}) (interface{}, error) {
	return types.NewAdmonitionAttribute(k.(types.AdmonitionKind))
}

func (p *parser) callonTable106() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTable106(stack["k"])
}

func (c *current) onTable122() (interface{}, error) {
	return types.ElementAttributes{"layout": "horizontal"}, nil
}

func (p *parser) callonTable122() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTable122()
}

func (c *current) onTable130() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTable130() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTable130()
}

func (c *current) onTable141() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTable141() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTable141()
}

func (c *current) onTable144() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTable144() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTable144()
}

func (c *current) onTable138(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTable138() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTable138(stack["key"])
}

func (c *current) onTable158(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTable158() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTable158(stack["value"])
}

func (c *current) onTable174() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTable174() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTable174()
}

func (c *current) onTable135(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonTable135() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTable135(stack["key"], stack["value"])
}

func (c *current) onTable182() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTable182() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTable182()
}

func (c *current) onTable185() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTable185() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTable185()
}

func (c *current) onTable179(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTable179() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTable179(stack["key"])
}

func (c *current) onTable202() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTable202() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTable202()
}

func (c *current) onTable176(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonTable176() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTable176(stack["key"])
}

func (c *current) onTable124(attributes interface{}) (interface{}, error) {
	return types.NewAttributeGroup(attributes.([]interface{}))
}

func (p *parser) callonTable124() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTable124(stack["attributes"])
}

func (c *current) onTable208() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTable208() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTable208()
}

func (c *current) onTable5(attr interface{}) (interface{}, error) {
	return attr, nil // avoid returning something like `[]interface{}{attr, EOL}`
}

func (p *parser) callonTable5() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTable5(stack["attr"])
}

func (c *current) onTable219() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTable219() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTable219()
}

func (c *current) onTable236() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTable236() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTable236()
}

func (c *current) onTable1(attributes, header, lines interface{}) (interface{}, error) {
	// end delimiter or end of file
	return types.NewTable(header, lines.([]interface{}), attributes.([]interface{}))

}

func (p *parser) callonTable1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTable1(stack["attributes"], stack["header"], stack["lines"])
}

func (c *current) onTableLineHeader21() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTableLineHeader21() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTableLineHeader21()
}

func (c *current) onTableLineHeader13(cells interface{}) (interface{}, error) {
	return types.NewBlankLine()
}

func (p *parser) callonTableLineHeader13() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTableLineHeader13(stack["cells"])
}

func (c *current) onTableLineHeader1(cells interface{}) (interface{}, error) {
	return types.NewTableLine(cells.([]interface{}))
}

func (p *parser) callonTableLineHeader1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTableLineHeader1(stack["cells"])
}

func (c *current) onTableLine22() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTableLine22() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTableLine22()
}

func (c *current) onTableLine14() (interface{}, error) {
	return types.NewBlankLine()
}

func (p *parser) callonTableLine14() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTableLine14()
}

func (c *current) onTableLine1(cells interface{}) (interface{}, error) {
	return types.NewTableLine(cells.([]interface{}))
}

func (p *parser) callonTableLine1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTableLine1(stack["cells"])
}

func (c *current) onTableCell7() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTableCell7() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTableCell7()
}

func (c *current) onTableCell18() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTableCell18() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTableCell18()
}

func (c *current) onTableCell29() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTableCell29() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTableCell29()
}

func (c *current) onTableCell35() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTableCell35() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTableCell35()
}

func (c *current) onTableCell1(elements interface{}) (interface{}, error) {
	return types.NewInlineElements(elements)
}

func (p *parser) callonTableCell1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTableCell1(stack["elements"])
}

func (c *current) onWS3() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonWS3() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onWS3()
}

var (
	// errNoRule is returned when the grammar to parse has no rule.
	errNoRule = errors.New("grammar has no rule")

	// errInvalidEntrypoint is returned when the specified entrypoint rule
	// does not exit.
	errInvalidEntrypoint = errors.New("invalid entrypoint")

	// errInvalidEncoding is returned when the source is not properly
	// utf8-encoded.
	errInvalidEncoding = errors.New("invalid encoding")

	// errMaxExprCnt is used to signal that the maximum number of
	// expressions have been parsed.
	errMaxExprCnt = errors.New("max number of expresssions parsed")
)

// Option is a function that can set an option on the parser. It returns
// the previous setting as an Option.
type Option func(*parser) Option

// MaxExpressions creates an Option to stop parsing after the provided
// number of expressions have been parsed, if the value is 0 then the parser will
// parse for as many steps as needed (possibly an infinite number).
//
// The default for maxExprCnt is 0.
func MaxExpressions(maxExprCnt uint64) Option {
	return func(p *parser) Option {
		oldMaxExprCnt := p.maxExprCnt
		p.maxExprCnt = maxExprCnt
		return MaxExpressions(oldMaxExprCnt)
	}
}

// Entrypoint creates an Option to set the rule name to use as entrypoint.
// The rule name must have been specified in the -alternate-entrypoints
// if generating the parser with the -optimize-grammar flag, otherwise
// it may have been optimized out. Passing an empty string sets the
// entrypoint to the first rule in the grammar.
//
// The default is to start parsing at the first rule in the grammar.
func Entrypoint(ruleName string) Option {
	return func(p *parser) Option {
		oldEntrypoint := p.entrypoint
		p.entrypoint = ruleName
		if ruleName == "" {
			p.entrypoint = g.rules[0].name
		}
		return Entrypoint(oldEntrypoint)
	}
}

// Statistics adds a user provided Stats struct to the parser to allow
// the user to process the results after the parsing has finished.
// Also the key for the "no match" counter is set.
//
// Example usage:
//
//     input := "input"
//     stats := Stats{}
//     _, err := Parse("input-file", []byte(input), Statistics(&stats, "no match"))
//     if err != nil {
//         log.Panicln(err)
//     }
//     b, err := json.MarshalIndent(stats.ChoiceAltCnt, "", "  ")
//     if err != nil {
//         log.Panicln(err)
//     }
//     fmt.Println(string(b))
//
func Statistics(stats *Stats, choiceNoMatch string) Option {
	return func(p *parser) Option {
		oldStats := p.Stats
		p.Stats = stats
		oldChoiceNoMatch := p.choiceNoMatch
		p.choiceNoMatch = choiceNoMatch
		if p.Stats.ChoiceAltCnt == nil {
			p.Stats.ChoiceAltCnt = make(map[string]map[string]int)
		}
		return Statistics(oldStats, oldChoiceNoMatch)
	}
}

// Debug creates an Option to set the debug flag to b. When set to true,
// debugging information is printed to stdout while parsing.
//
// The default is false.
func Debug(b bool) Option {
	return func(p *parser) Option {
		old := p.debug
		p.debug = b
		return Debug(old)
	}
}

// Memoize creates an Option to set the memoize flag to b. When set to true,
// the parser will cache all results so each expression is evaluated only
// once. This guarantees linear parsing time even for pathological cases,
// at the expense of more memory and slower times for typical cases.
//
// The default is false.
func Memoize(b bool) Option {
	return func(p *parser) Option {
		old := p.memoize
		p.memoize = b
		return Memoize(old)
	}
}

// AllowInvalidUTF8 creates an Option to allow invalid UTF-8 bytes.
// Every invalid UTF-8 byte is treated as a utf8.RuneError (U+FFFD)
// by character class matchers and is matched by the any matcher.
// The returned matched value, c.text and c.offset are NOT affected.
//
// The default is false.
func AllowInvalidUTF8(b bool) Option {
	return func(p *parser) Option {
		old := p.allowInvalidUTF8
		p.allowInvalidUTF8 = b
		return AllowInvalidUTF8(old)
	}
}

// Recover creates an Option to set the recover flag to b. When set to
// true, this causes the parser to recover from panics and convert it
// to an error. Setting it to false can be useful while debugging to
// access the full stack trace.
//
// The default is true.
func Recover(b bool) Option {
	return func(p *parser) Option {
		old := p.recover
		p.recover = b
		return Recover(old)
	}
}

// GlobalStore creates an Option to set a key to a certain value in
// the globalStore.
func GlobalStore(key string, value interface{}) Option {
	return func(p *parser) Option {
		old := p.cur.globalStore[key]
		p.cur.globalStore[key] = value
		return GlobalStore(key, old)
	}
}

// InitState creates an Option to set a key to a certain value in
// the global "state" store.
func InitState(key string, value interface{}) Option {
	return func(p *parser) Option {
		old := p.cur.state[key]
		p.cur.state[key] = value
		return InitState(key, old)
	}
}

// ParseFile parses the file identified by filename.
func ParseFile(filename string, opts ...Option) (i interface{}, err error) {
	f, err := os.Open(filename)
	if err != nil {
		return nil, err
	}
	defer func() {
		if closeErr := f.Close(); closeErr != nil {
			err = closeErr
		}
	}()
	return ParseReader(filename, f, opts...)
}

// ParseReader parses the data from r using filename as information in the
// error messages.
func ParseReader(filename string, r io.Reader, opts ...Option) (interface{}, error) {
	b, err := ioutil.ReadAll(r)
	if err != nil {
		return nil, err
	}

	return Parse(filename, b, opts...)
}

// Parse parses the data from b using filename as information in the
// error messages.
func Parse(filename string, b []byte, opts ...Option) (interface{}, error) {
	return newParser(filename, b, opts...).parse(g)
}

// position records a position in the text.
type position struct {
	line, col, offset int
}

func (p position) String() string {
	return fmt.Sprintf("%d:%d [%d]", p.line, p.col, p.offset)
}

// savepoint stores all state required to go back to this point in the
// parser.
type savepoint struct {
	position
	rn rune
	w  int
}

type current struct {
	pos  position // start position of the match
	text []byte   // raw text of the match

	// state is a store for arbitrary key,value pairs that the user wants to be
	// tied to the backtracking of the parser.
	// This is always rolled back if a parsing rule fails.
	state storeDict

	// globalStore is a general store for the user to store arbitrary key-value
	// pairs that they need to manage and that they do not want tied to the
	// backtracking of the parser. This is only modified by the user and never
	// rolled back by the parser. It is always up to the user to keep this in a
	// consistent state.
	globalStore storeDict
}

type storeDict map[string]interface{}

// the AST types...

type grammar struct {
	pos   position
	rules []*rule
}

type rule struct {
	pos         position
	name        string
	displayName string
	expr        interface{}
}

type choiceExpr struct {
	pos          position
	alternatives []interface{}
}

type actionExpr struct {
	pos  position
	expr interface{}
	run  func(*parser) (interface{}, error)
}

type recoveryExpr struct {
	pos          position
	expr         interface{}
	recoverExpr  interface{}
	failureLabel []string
}

type seqExpr struct {
	pos   position
	exprs []interface{}
}

type throwExpr struct {
	pos   position
	label string
}

type labeledExpr struct {
	pos   position
	label string
	expr  interface{}
}

type expr struct {
	pos  position
	expr interface{}
}

type andExpr expr
type notExpr expr
type zeroOrOneExpr expr
type zeroOrMoreExpr expr
type oneOrMoreExpr expr

type ruleRefExpr struct {
	pos  position
	name string
}

type stateCodeExpr struct {
	pos position
	run func(*parser) error
}

type andCodeExpr struct {
	pos position
	run func(*parser) (bool, error)
}

type notCodeExpr struct {
	pos position
	run func(*parser) (bool, error)
}

type litMatcher struct {
	pos        position
	val        string
	ignoreCase bool
}

type charClassMatcher struct {
	pos             position
	val             string
	basicLatinChars [128]bool
	chars           []rune
	ranges          []rune
	classes         []*unicode.RangeTable
	ignoreCase      bool
	inverted        bool
}

type anyMatcher position

// errList cumulates the errors found by the parser.
type errList []error

func (e *errList) add(err error) {
	*e = append(*e, err)
}

func (e errList) err() error {
	if len(e) == 0 {
		return nil
	}
	e.dedupe()
	return e
}

func (e *errList) dedupe() {
	var cleaned []error
	set := make(map[string]bool)
	for _, err := range *e {
		if msg := err.Error(); !set[msg] {
			set[msg] = true
			cleaned = append(cleaned, err)
		}
	}
	*e = cleaned
}

func (e errList) Error() string {
	switch len(e) {
	case 0:
		return ""
	case 1:
		return e[0].Error()
	default:
		var buf bytes.Buffer

		for i, err := range e {
			if i > 0 {
				buf.WriteRune('\n')
			}
			buf.WriteString(err.Error())
		}
		return buf.String()
	}
}

// parserError wraps an error with a prefix indicating the rule in which
// the error occurred. The original error is stored in the Inner field.
type parserError struct {
	Inner    error
	pos      position
	prefix   string
	expected []string
}

// Error returns the error message.
func (p *parserError) Error() string {
	return p.prefix + ": " + p.Inner.Error()
}

// newParser creates a parser with the specified input source and options.
func newParser(filename string, b []byte, opts ...Option) *parser {
	stats := Stats{
		ChoiceAltCnt: make(map[string]map[string]int),
	}

	p := &parser{
		filename: filename,
		errs:     new(errList),
		data:     b,
		pt:       savepoint{position: position{line: 1}},
		recover:  true,
		cur: current{
			state:       make(storeDict),
			globalStore: make(storeDict),
		},
		maxFailPos:      position{col: 1, line: 1},
		maxFailExpected: make([]string, 0, 20),
		Stats:           &stats,
		// start rule is rule [0] unless an alternate entrypoint is specified
		entrypoint: g.rules[0].name,
	}
	p.setOptions(opts)

	if p.maxExprCnt == 0 {
		p.maxExprCnt = math.MaxUint64
	}

	return p
}

// setOptions applies the options to the parser.
func (p *parser) setOptions(opts []Option) {
	for _, opt := range opts {
		opt(p)
	}
}

type resultTuple struct {
	v   interface{}
	b   bool
	end savepoint
}

const choiceNoMatch = -1

// Stats stores some statistics, gathered during parsing
type Stats struct {
	// ExprCnt counts the number of expressions processed during parsing
	// This value is compared to the maximum number of expressions allowed
	// (set by the MaxExpressions option).
	ExprCnt uint64

	// ChoiceAltCnt is used to count for each ordered choice expression,
	// which alternative is used how may times.
	// These numbers allow to optimize the order of the ordered choice expression
	// to increase the performance of the parser
	//
	// The outer key of ChoiceAltCnt is composed of the name of the rule as well
	// as the line and the column of the ordered choice.
	// The inner key of ChoiceAltCnt is the number (one-based) of the matching alternative.
	// For each alternative the number of matches are counted. If an ordered choice does not
	// match, a special counter is incremented. The name of this counter is set with
	// the parser option Statistics.
	// For an alternative to be included in ChoiceAltCnt, it has to match at least once.
	ChoiceAltCnt map[string]map[string]int
}

type parser struct {
	filename string
	pt       savepoint
	cur      current

	data []byte
	errs *errList

	depth   int
	recover bool
	debug   bool

	memoize bool
	// memoization table for the packrat algorithm:
	// map[offset in source] map[expression or rule] {value, match}
	memo map[int]map[interface{}]resultTuple

	// rules table, maps the rule identifier to the rule node
	rules map[string]*rule
	// variables stack, map of label to value
	vstack []map[string]interface{}
	// rule stack, allows identification of the current rule in errors
	rstack []*rule

	// parse fail
	maxFailPos            position
	maxFailExpected       []string
	maxFailInvertExpected bool

	// max number of expressions to be parsed
	maxExprCnt uint64
	// entrypoint for the parser
	entrypoint string

	allowInvalidUTF8 bool

	*Stats

	choiceNoMatch string
	// recovery expression stack, keeps track of the currently available recovery expression, these are traversed in reverse
	recoveryStack []map[string]interface{}
}

// push a variable set on the vstack.
func (p *parser) pushV() {
	if cap(p.vstack) == len(p.vstack) {
		// create new empty slot in the stack
		p.vstack = append(p.vstack, nil)
	} else {
		// slice to 1 more
		p.vstack = p.vstack[:len(p.vstack)+1]
	}

	// get the last args set
	m := p.vstack[len(p.vstack)-1]
	if m != nil && len(m) == 0 {
		// empty map, all good
		return
	}

	m = make(map[string]interface{})
	p.vstack[len(p.vstack)-1] = m
}

// pop a variable set from the vstack.
func (p *parser) popV() {
	// if the map is not empty, clear it
	m := p.vstack[len(p.vstack)-1]
	if len(m) > 0 {
		// GC that map
		p.vstack[len(p.vstack)-1] = nil
	}
	p.vstack = p.vstack[:len(p.vstack)-1]
}

// push a recovery expression with its labels to the recoveryStack
func (p *parser) pushRecovery(labels []string, expr interface{}) {
	if cap(p.recoveryStack) == len(p.recoveryStack) {
		// create new empty slot in the stack
		p.recoveryStack = append(p.recoveryStack, nil)
	} else {
		// slice to 1 more
		p.recoveryStack = p.recoveryStack[:len(p.recoveryStack)+1]
	}

	m := make(map[string]interface{}, len(labels))
	for _, fl := range labels {
		m[fl] = expr
	}
	p.recoveryStack[len(p.recoveryStack)-1] = m
}

// pop a recovery expression from the recoveryStack
func (p *parser) popRecovery() {
	// GC that map
	p.recoveryStack[len(p.recoveryStack)-1] = nil

	p.recoveryStack = p.recoveryStack[:len(p.recoveryStack)-1]
}

func (p *parser) print(prefix, s string) string {
	if !p.debug {
		return s
	}

	fmt.Printf("%s %d:%d:%d: %s [%#U]\n",
		prefix, p.pt.line, p.pt.col, p.pt.offset, s, p.pt.rn)
	return s
}

func (p *parser) in(s string) string {
	p.depth++
	return p.print(strings.Repeat(" ", p.depth)+">", s)
}

func (p *parser) out(s string) string {
	p.depth--
	return p.print(strings.Repeat(" ", p.depth)+"<", s)
}

func (p *parser) addErr(err error) {
	p.addErrAt(err, p.pt.position, []string{})
}

func (p *parser) addErrAt(err error, pos position, expected []string) {
	var buf bytes.Buffer
	if p.filename != "" {
		buf.WriteString(p.filename)
	}
	if buf.Len() > 0 {
		buf.WriteString(":")
	}
	buf.WriteString(fmt.Sprintf("%d:%d (%d)", pos.line, pos.col, pos.offset))
	if len(p.rstack) > 0 {
		if buf.Len() > 0 {
			buf.WriteString(": ")
		}
		rule := p.rstack[len(p.rstack)-1]
		if rule.displayName != "" {
			buf.WriteString("rule " + rule.displayName)
		} else {
			buf.WriteString("rule " + rule.name)
		}
	}
	pe := &parserError{Inner: err, pos: pos, prefix: buf.String(), expected: expected}
	p.errs.add(pe)
}

func (p *parser) failAt(fail bool, pos position, want string) {
	// process fail if parsing fails and not inverted or parsing succeeds and invert is set
	if fail == p.maxFailInvertExpected {
		if pos.offset < p.maxFailPos.offset {
			return
		}

		if pos.offset > p.maxFailPos.offset {
			p.maxFailPos = pos
			p.maxFailExpected = p.maxFailExpected[:0]
		}

		if p.maxFailInvertExpected {
			want = "!" + want
		}
		p.maxFailExpected = append(p.maxFailExpected, want)
	}
}

// read advances the parser to the next rune.
func (p *parser) read() {
	p.pt.offset += p.pt.w
	rn, n := utf8.DecodeRune(p.data[p.pt.offset:])
	p.pt.rn = rn
	p.pt.w = n
	p.pt.col++
	if rn == '\n' {
		p.pt.line++
		p.pt.col = 0
	}

	if rn == utf8.RuneError && n == 1 { // see utf8.DecodeRune
		if !p.allowInvalidUTF8 {
			p.addErr(errInvalidEncoding)
		}
	}
}

// restore parser position to the savepoint pt.
func (p *parser) restore(pt savepoint) {
	if p.debug {
		defer p.out(p.in("restore"))
	}
	if pt.offset == p.pt.offset {
		return
	}
	p.pt = pt
}

// Cloner is implemented by any value that has a Clone method, which returns a
// copy of the value. This is mainly used for types which are not passed by
// value (e.g map, slice, chan) or structs that contain such types.
//
// This is used in conjunction with the global state feature to create proper
// copies of the state to allow the parser to properly restore the state in
// the case of backtracking.
type Cloner interface {
	Clone() interface{}
}

// clone and return parser current state.
func (p *parser) cloneState() storeDict {
	if p.debug {
		defer p.out(p.in("cloneState"))
	}

	state := make(storeDict, len(p.cur.state))
	for k, v := range p.cur.state {
		if c, ok := v.(Cloner); ok {
			state[k] = c.Clone()
		} else {
			state[k] = v
		}
	}
	return state
}

// restore parser current state to the state storeDict.
// every restoreState should applied only one time for every cloned state
func (p *parser) restoreState(state storeDict) {
	if p.debug {
		defer p.out(p.in("restoreState"))
	}
	p.cur.state = state
}

// get the slice of bytes from the savepoint start to the current position.
func (p *parser) sliceFrom(start savepoint) []byte {
	return p.data[start.position.offset:p.pt.position.offset]
}

func (p *parser) getMemoized(node interface{}) (resultTuple, bool) {
	if len(p.memo) == 0 {
		return resultTuple{}, false
	}
	m := p.memo[p.pt.offset]
	if len(m) == 0 {
		return resultTuple{}, false
	}
	res, ok := m[node]
	return res, ok
}

func (p *parser) setMemoized(pt savepoint, node interface{}, tuple resultTuple) {
	if p.memo == nil {
		p.memo = make(map[int]map[interface{}]resultTuple)
	}
	m := p.memo[pt.offset]
	if m == nil {
		m = make(map[interface{}]resultTuple)
		p.memo[pt.offset] = m
	}
	m[node] = tuple
}

func (p *parser) buildRulesTable(g *grammar) {
	p.rules = make(map[string]*rule, len(g.rules))
	for _, r := range g.rules {
		p.rules[r.name] = r
	}
}

func (p *parser) parse(g *grammar) (val interface{}, err error) {
	if len(g.rules) == 0 {
		p.addErr(errNoRule)
		return nil, p.errs.err()
	}

	// TODO : not super critical but this could be generated
	p.buildRulesTable(g)

	if p.recover {
		// panic can be used in action code to stop parsing immediately
		// and return the panic as an error.
		defer func() {
			if e := recover(); e != nil {
				if p.debug {
					defer p.out(p.in("panic handler"))
				}
				val = nil
				switch e := e.(type) {
				case error:
					p.addErr(e)
				default:
					p.addErr(fmt.Errorf("%v", e))
				}
				err = p.errs.err()
			}
		}()
	}

	startRule, ok := p.rules[p.entrypoint]
	if !ok {
		p.addErr(errInvalidEntrypoint)
		return nil, p.errs.err()
	}

	p.read() // advance to first rune
	val, ok = p.parseRule(startRule)
	if !ok {
		if len(*p.errs) == 0 {
			// If parsing fails, but no errors have been recorded, the expected values
			// for the farthest parser position are returned as error.
			maxFailExpectedMap := make(map[string]struct{}, len(p.maxFailExpected))
			for _, v := range p.maxFailExpected {
				maxFailExpectedMap[v] = struct{}{}
			}
			expected := make([]string, 0, len(maxFailExpectedMap))
			eof := false
			if _, ok := maxFailExpectedMap["!."]; ok {
				delete(maxFailExpectedMap, "!.")
				eof = true
			}
			for k := range maxFailExpectedMap {
				expected = append(expected, k)
			}
			sort.Strings(expected)
			if eof {
				expected = append(expected, "EOF")
			}
			p.addErrAt(errors.New("no match found, expected: "+listJoin(expected, ", ", "or")), p.maxFailPos, expected)
		}

		return nil, p.errs.err()
	}
	return val, p.errs.err()
}

func listJoin(list []string, sep string, lastSep string) string {
	switch len(list) {
	case 0:
		return ""
	case 1:
		return list[0]
	default:
		return fmt.Sprintf("%s %s %s", strings.Join(list[:len(list)-1], sep), lastSep, list[len(list)-1])
	}
}

func (p *parser) parseRule(rule *rule) (interface{}, bool) {
	if p.debug {
		defer p.out(p.in("parseRule " + rule.name))
	}

	if p.memoize {
		res, ok := p.getMemoized(rule)
		if ok {
			p.restore(res.end)
			return res.v, res.b
		}
	}

	start := p.pt
	p.rstack = append(p.rstack, rule)
	p.pushV()
	val, ok := p.parseExpr(rule.expr)
	p.popV()
	p.rstack = p.rstack[:len(p.rstack)-1]
	if ok && p.debug {
		p.print(strings.Repeat(" ", p.depth)+"MATCH", string(p.sliceFrom(start)))
	}

	if p.memoize {
		p.setMemoized(start, rule, resultTuple{val, ok, p.pt})
	}
	return val, ok
}

func (p *parser) parseExpr(expr interface{}) (interface{}, bool) {
	var pt savepoint

	if p.memoize {
		res, ok := p.getMemoized(expr)
		if ok {
			p.restore(res.end)
			return res.v, res.b
		}
		pt = p.pt
	}

	p.ExprCnt++
	if p.ExprCnt > p.maxExprCnt {
		panic(errMaxExprCnt)
	}

	var val interface{}
	var ok bool
	switch expr := expr.(type) {
	case *actionExpr:
		val, ok = p.parseActionExpr(expr)
	case *andCodeExpr:
		val, ok = p.parseAndCodeExpr(expr)
	case *andExpr:
		val, ok = p.parseAndExpr(expr)
	case *anyMatcher:
		val, ok = p.parseAnyMatcher(expr)
	case *charClassMatcher:
		val, ok = p.parseCharClassMatcher(expr)
	case *choiceExpr:
		val, ok = p.parseChoiceExpr(expr)
	case *labeledExpr:
		val, ok = p.parseLabeledExpr(expr)
	case *litMatcher:
		val, ok = p.parseLitMatcher(expr)
	case *notCodeExpr:
		val, ok = p.parseNotCodeExpr(expr)
	case *notExpr:
		val, ok = p.parseNotExpr(expr)
	case *oneOrMoreExpr:
		val, ok = p.parseOneOrMoreExpr(expr)
	case *recoveryExpr:
		val, ok = p.parseRecoveryExpr(expr)
	case *ruleRefExpr:
		val, ok = p.parseRuleRefExpr(expr)
	case *seqExpr:
		val, ok = p.parseSeqExpr(expr)
	case *stateCodeExpr:
		val, ok = p.parseStateCodeExpr(expr)
	case *throwExpr:
		val, ok = p.parseThrowExpr(expr)
	case *zeroOrMoreExpr:
		val, ok = p.parseZeroOrMoreExpr(expr)
	case *zeroOrOneExpr:
		val, ok = p.parseZeroOrOneExpr(expr)
	default:
		panic(fmt.Sprintf("unknown expression type %T", expr))
	}
	if p.memoize {
		p.setMemoized(pt, expr, resultTuple{val, ok, p.pt})
	}
	return val, ok
}

func (p *parser) parseActionExpr(act *actionExpr) (interface{}, bool) {
	if p.debug {
		defer p.out(p.in("parseActionExpr"))
	}

	start := p.pt
	val, ok := p.parseExpr(act.expr)
	if ok {
		p.cur.pos = start.position
		p.cur.text = p.sliceFrom(start)
		state := p.cloneState()
		actVal, err := act.run(p)
		if err != nil {
			p.addErrAt(err, start.position, []string{})
		}
		p.restoreState(state)

		val = actVal
	}
	if ok && p.debug {
		p.print(strings.Repeat(" ", p.depth)+"MATCH", string(p.sliceFrom(start)))
	}
	return val, ok
}

func (p *parser) parseAndCodeExpr(and *andCodeExpr) (interface{}, bool) {
	if p.debug {
		defer p.out(p.in("parseAndCodeExpr"))
	}

	state := p.cloneState()

	ok, err := and.run(p)
	if err != nil {
		p.addErr(err)
	}
	p.restoreState(state)

	return nil, ok
}

func (p *parser) parseAndExpr(and *andExpr) (interface{}, bool) {
	if p.debug {
		defer p.out(p.in("parseAndExpr"))
	}

	pt := p.pt
	state := p.cloneState()
	p.pushV()
	_, ok := p.parseExpr(and.expr)
	p.popV()
	p.restoreState(state)
	p.restore(pt)

	return nil, ok
}

func (p *parser) parseAnyMatcher(any *anyMatcher) (interface{}, bool) {
	if p.debug {
		defer p.out(p.in("parseAnyMatcher"))
	}

	if p.pt.rn == utf8.RuneError && p.pt.w == 0 {
		// EOF - see utf8.DecodeRune
		p.failAt(false, p.pt.position, ".")
		return nil, false
	}
	start := p.pt
	p.read()
	p.failAt(true, start.position, ".")
	return p.sliceFrom(start), true
}

func (p *parser) parseCharClassMatcher(chr *charClassMatcher) (interface{}, bool) {
	if p.debug {
		defer p.out(p.in("parseCharClassMatcher"))
	}

	cur := p.pt.rn
	start := p.pt

	// can't match EOF
	if cur == utf8.RuneError && p.pt.w == 0 { // see utf8.DecodeRune
		p.failAt(false, start.position, chr.val)
		return nil, false
	}

	if chr.ignoreCase {
		cur = unicode.ToLower(cur)
	}

	// try to match in the list of available chars
	for _, rn := range chr.chars {
		if rn == cur {
			if chr.inverted {
				p.failAt(false, start.position, chr.val)
				return nil, false
			}
			p.read()
			p.failAt(true, start.position, chr.val)
			return p.sliceFrom(start), true
		}
	}

	// try to match in the list of ranges
	for i := 0; i < len(chr.ranges); i += 2 {
		if cur >= chr.ranges[i] && cur <= chr.ranges[i+1] {
			if chr.inverted {
				p.failAt(false, start.position, chr.val)
				return nil, false
			}
			p.read()
			p.failAt(true, start.position, chr.val)
			return p.sliceFrom(start), true
		}
	}

	// try to match in the list of Unicode classes
	for _, cl := range chr.classes {
		if unicode.Is(cl, cur) {
			if chr.inverted {
				p.failAt(false, start.position, chr.val)
				return nil, false
			}
			p.read()
			p.failAt(true, start.position, chr.val)
			return p.sliceFrom(start), true
		}
	}

	if chr.inverted {
		p.read()
		p.failAt(true, start.position, chr.val)
		return p.sliceFrom(start), true
	}
	p.failAt(false, start.position, chr.val)
	return nil, false
}

func (p *parser) incChoiceAltCnt(ch *choiceExpr, altI int) {
	choiceIdent := fmt.Sprintf("%s %d:%d", p.rstack[len(p.rstack)-1].name, ch.pos.line, ch.pos.col)
	m := p.ChoiceAltCnt[choiceIdent]
	if m == nil {
		m = make(map[string]int)
		p.ChoiceAltCnt[choiceIdent] = m
	}
	// We increment altI by 1, so the keys do not start at 0
	alt := strconv.Itoa(altI + 1)
	if altI == choiceNoMatch {
		alt = p.choiceNoMatch
	}
	m[alt]++
}

func (p *parser) parseChoiceExpr(ch *choiceExpr) (interface{}, bool) {
	if p.debug {
		defer p.out(p.in("parseChoiceExpr"))
	}

	for altI, alt := range ch.alternatives {
		// dummy assignment to prevent compile error if optimized
		_ = altI

		state := p.cloneState()

		p.pushV()
		val, ok := p.parseExpr(alt)
		p.popV()
		if ok {
			p.incChoiceAltCnt(ch, altI)
			return val, ok
		}
		p.restoreState(state)
	}
	p.incChoiceAltCnt(ch, choiceNoMatch)
	return nil, false
}

func (p *parser) parseLabeledExpr(lab *labeledExpr) (interface{}, bool) {
	if p.debug {
		defer p.out(p.in("parseLabeledExpr"))
	}

	p.pushV()
	val, ok := p.parseExpr(lab.expr)
	p.popV()
	if ok && lab.label != "" {
		m := p.vstack[len(p.vstack)-1]
		m[lab.label] = val
	}
	return val, ok
}

func (p *parser) parseLitMatcher(lit *litMatcher) (interface{}, bool) {
	if p.debug {
		defer p.out(p.in("parseLitMatcher"))
	}

	ignoreCase := ""
	if lit.ignoreCase {
		ignoreCase = "i"
	}
	val := fmt.Sprintf("%q%s", lit.val, ignoreCase)
	start := p.pt
	for _, want := range lit.val {
		cur := p.pt.rn
		if lit.ignoreCase {
			cur = unicode.ToLower(cur)
		}
		if cur != want {
			p.failAt(false, start.position, val)
			p.restore(start)
			return nil, false
		}
		p.read()
	}
	p.failAt(true, start.position, val)
	return p.sliceFrom(start), true
}

func (p *parser) parseNotCodeExpr(not *notCodeExpr) (interface{}, bool) {
	if p.debug {
		defer p.out(p.in("parseNotCodeExpr"))
	}

	state := p.cloneState()

	ok, err := not.run(p)
	if err != nil {
		p.addErr(err)
	}
	p.restoreState(state)

	return nil, !ok
}

func (p *parser) parseNotExpr(not *notExpr) (interface{}, bool) {
	if p.debug {
		defer p.out(p.in("parseNotExpr"))
	}

	pt := p.pt
	state := p.cloneState()
	p.pushV()
	p.maxFailInvertExpected = !p.maxFailInvertExpected
	_, ok := p.parseExpr(not.expr)
	p.maxFailInvertExpected = !p.maxFailInvertExpected
	p.popV()
	p.restoreState(state)
	p.restore(pt)

	return nil, !ok
}

func (p *parser) parseOneOrMoreExpr(expr *oneOrMoreExpr) (interface{}, bool) {
	if p.debug {
		defer p.out(p.in("parseOneOrMoreExpr"))
	}

	var vals []interface{}

	for {
		p.pushV()
		val, ok := p.parseExpr(expr.expr)
		p.popV()
		if !ok {
			if len(vals) == 0 {
				// did not match once, no match
				return nil, false
			}
			return vals, true
		}
		vals = append(vals, val)
	}
}

func (p *parser) parseRecoveryExpr(recover *recoveryExpr) (interface{}, bool) {
	if p.debug {
		defer p.out(p.in("parseRecoveryExpr (" + strings.Join(recover.failureLabel, ",") + ")"))
	}

	p.pushRecovery(recover.failureLabel, recover.recoverExpr)
	val, ok := p.parseExpr(recover.expr)
	p.popRecovery()

	return val, ok
}

func (p *parser) parseRuleRefExpr(ref *ruleRefExpr) (interface{}, bool) {
	if p.debug {
		defer p.out(p.in("parseRuleRefExpr " + ref.name))
	}

	if ref.name == "" {
		panic(fmt.Sprintf("%s: invalid rule: missing name", ref.pos))
	}

	rule := p.rules[ref.name]
	if rule == nil {
		p.addErr(fmt.Errorf("undefined rule: %s", ref.name))
		return nil, false
	}
	return p.parseRule(rule)
}

func (p *parser) parseSeqExpr(seq *seqExpr) (interface{}, bool) {
	if p.debug {
		defer p.out(p.in("parseSeqExpr"))
	}

	vals := make([]interface{}, 0, len(seq.exprs))

	pt := p.pt
	state := p.cloneState()
	for _, expr := range seq.exprs {
		val, ok := p.parseExpr(expr)
		if !ok {
			p.restoreState(state)
			p.restore(pt)
			return nil, false
		}
		vals = append(vals, val)
	}
	return vals, true
}

func (p *parser) parseStateCodeExpr(state *stateCodeExpr) (interface{}, bool) {
	if p.debug {
		defer p.out(p.in("parseStateCodeExpr"))
	}

	err := state.run(p)
	if err != nil {
		p.addErr(err)
	}
	return nil, true
}

func (p *parser) parseThrowExpr(expr *throwExpr) (interface{}, bool) {
	if p.debug {
		defer p.out(p.in("parseThrowExpr"))
	}

	for i := len(p.recoveryStack) - 1; i >= 0; i-- {
		if recoverExpr, ok := p.recoveryStack[i][expr.label]; ok {
			if val, ok := p.parseExpr(recoverExpr); ok {
				return val, ok
			}
		}
	}

	return nil, false
}

func (p *parser) parseZeroOrMoreExpr(expr *zeroOrMoreExpr) (interface{}, bool) {
	if p.debug {
		defer p.out(p.in("parseZeroOrMoreExpr"))
	}

	var vals []interface{}

	for {
		p.pushV()
		val, ok := p.parseExpr(expr.expr)
		p.popV()
		if !ok {
			return vals, true
		}
		vals = append(vals, val)
	}
}

func (p *parser) parseZeroOrOneExpr(expr *zeroOrOneExpr) (interface{}, bool) {
	if p.debug {
		defer p.out(p.in("parseZeroOrOneExpr"))
	}

	p.pushV()
	val, _ := p.parseExpr(expr.expr)
	p.popV()
	// whether it matched or not, consider it a match
	return val, true
}
