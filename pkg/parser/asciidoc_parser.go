// Code generated by pigeon; DO NOT EDIT.

package parser

import (
	"bytes"
	"errors"
	"fmt"
	"io"
	"io/ioutil"
	"math"
	"os"
	"sort"
	"strconv"
	"strings"
	"unicode"
	"unicode/utf8"

	"github.com/bytesparadise/libasciidoc/pkg/types"
)

// *****************************************************************************************
// This file is generated after its sibling `asciidoc-grammar.peg` file. DO NOT MODIFY !
// *****************************************************************************************

var g = &grammar{
	rules: []*rule{
		{
			name: "Document",
			pos:  position{line: 18, col: 1, offset: 504},
			expr: &actionExpr{
				pos: position{line: 18, col: 13, offset: 516},
				run: (*parser).callonDocument1,
				expr: &seqExpr{
					pos: position{line: 18, col: 13, offset: 516},
					exprs: []interface{}{
						&labeledExpr{
							pos:   position{line: 18, col: 13, offset: 516},
							label: "frontMatter",
							expr: &zeroOrOneExpr{
								pos: position{line: 18, col: 26, offset: 529},
								expr: &ruleRefExpr{
									pos:  position{line: 18, col: 26, offset: 529},
									name: "FrontMatter",
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 18, col: 40, offset: 543},
							label: "documentHeader",
							expr: &zeroOrOneExpr{
								pos: position{line: 18, col: 56, offset: 559},
								expr: &ruleRefExpr{
									pos:  position{line: 18, col: 56, offset: 559},
									name: "DocumentHeader",
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 18, col: 73, offset: 576},
							label: "blocks",
							expr: &zeroOrMoreExpr{
								pos: position{line: 18, col: 80, offset: 583},
								expr: &choiceExpr{
									pos: position{line: 18, col: 81, offset: 584},
									alternatives: []interface{}{
										&ruleRefExpr{
											pos:  position{line: 18, col: 81, offset: 584},
											name: "Section",
										},
										&ruleRefExpr{
											pos:  position{line: 18, col: 91, offset: 594},
											name: "DocumentBlock",
										},
									},
								},
							},
						},
						&notExpr{
							pos: position{line: 719, col: 8, offset: 30217},
							expr: &anyMatcher{
								line: 719, col: 9, offset: 30218,
							},
						},
					},
				},
			},
		},
		{
			name: "DocumentBlock",
			pos:  position{line: 22, col: 1, offset: 698},
			expr: &actionExpr{
				pos: position{line: 22, col: 18, offset: 715},
				run: (*parser).callonDocumentBlock1,
				expr: &seqExpr{
					pos: position{line: 22, col: 18, offset: 715},
					exprs: []interface{}{
						&notExpr{
							pos: position{line: 22, col: 18, offset: 715},
							expr: &notExpr{
								pos: position{line: 719, col: 8, offset: 30217},
								expr: &anyMatcher{
									line: 719, col: 9, offset: 30218,
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 23, col: 5, offset: 793},
							label: "block",
							expr: &choiceExpr{
								pos: position{line: 23, col: 12, offset: 800},
								alternatives: []interface{}{
									&actionExpr{
										pos: position{line: 686, col: 14, offset: 29590},
										run: (*parser).callonDocumentBlock8,
										expr: &seqExpr{
											pos: position{line: 686, col: 14, offset: 29590},
											exprs: []interface{}{
												&notExpr{
													pos: position{line: 686, col: 14, offset: 29590},
													expr: &notExpr{
														pos: position{line: 719, col: 8, offset: 30217},
														expr: &anyMatcher{
															line: 719, col: 9, offset: 30218,
														},
													},
												},
												&zeroOrMoreExpr{
													pos: position{line: 686, col: 19, offset: 29595},
													expr: &choiceExpr{
														pos: position{line: 713, col: 7, offset: 30126},
														alternatives: []interface{}{
															&litMatcher{
																pos:        position{line: 713, col: 7, offset: 30126},
																val:        " ",
																ignoreCase: false,
															},
															&actionExpr{
																pos: position{line: 713, col: 13, offset: 30132},
																run: (*parser).callonDocumentBlock16,
																expr: &litMatcher{
																	pos:        position{line: 713, col: 13, offset: 30132},
																	val:        "\t",
																	ignoreCase: false,
																},
															},
														},
													},
												},
												&choiceExpr{
													pos: position{line: 721, col: 8, offset: 30228},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 717, col: 12, offset: 30188},
															val:        "\r\n",
															ignoreCase: false,
														},
														&charClassMatcher{
															pos:        position{line: 717, col: 21, offset: 30197},
															val:        "[\\r\\n]",
															chars:      []rune{'\r', '\n'},
															ignoreCase: false,
															inverted:   false,
														},
														&notExpr{
															pos: position{line: 719, col: 8, offset: 30217},
															expr: &anyMatcher{
																line: 719, col: 9, offset: 30218,
															},
														},
													},
												},
											},
										},
									},
									&actionExpr{
										pos: position{line: 85, col: 45, offset: 3582},
										run: (*parser).callonDocumentBlock23,
										expr: &seqExpr{
											pos: position{line: 85, col: 45, offset: 3582},
											exprs: []interface{}{
												&litMatcher{
													pos:        position{line: 85, col: 45, offset: 3582},
													val:        ":",
													ignoreCase: false,
												},
												&labeledExpr{
													pos:   position{line: 85, col: 49, offset: 3586},
													label: "name",
													expr: &seqExpr{
														pos: position{line: 110, col: 18, offset: 4666},
														exprs: []interface{}{
															&charClassMatcher{
																pos:        position{line: 110, col: 19, offset: 4667},
																val:        "[_A-Za-z0-9]",
																chars:      []rune{'_'},
																ranges:     []rune{'A', 'Z', 'a', 'z', '0', '9'},
																ignoreCase: false,
																inverted:   false,
															},
															&zeroOrMoreExpr{
																pos: position{line: 110, col: 48, offset: 4696},
																expr: &charClassMatcher{
																	pos:        position{line: 110, col: 49, offset: 4697},
																	val:        "[-A-Za-z0-9]",
																	chars:      []rune{'-'},
																	ranges:     []rune{'A', 'Z', 'a', 'z', '0', '9'},
																	ignoreCase: false,
																	inverted:   false,
																},
															},
														},
													},
												},
												&litMatcher{
													pos:        position{line: 85, col: 70, offset: 3607},
													val:        ":",
													ignoreCase: false,
												},
												&zeroOrMoreExpr{
													pos: position{line: 85, col: 74, offset: 3611},
													expr: &choiceExpr{
														pos: position{line: 713, col: 7, offset: 30126},
														alternatives: []interface{}{
															&litMatcher{
																pos:        position{line: 713, col: 7, offset: 30126},
																val:        " ",
																ignoreCase: false,
															},
															&actionExpr{
																pos: position{line: 713, col: 13, offset: 30132},
																run: (*parser).callonDocumentBlock35,
																expr: &litMatcher{
																	pos:        position{line: 713, col: 13, offset: 30132},
																	val:        "\t",
																	ignoreCase: false,
																},
															},
														},
													},
												},
												&choiceExpr{
													pos: position{line: 721, col: 8, offset: 30228},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 717, col: 12, offset: 30188},
															val:        "\r\n",
															ignoreCase: false,
														},
														&charClassMatcher{
															pos:        position{line: 717, col: 21, offset: 30197},
															val:        "[\\r\\n]",
															chars:      []rune{'\r', '\n'},
															ignoreCase: false,
															inverted:   false,
														},
														&notExpr{
															pos: position{line: 719, col: 8, offset: 30217},
															expr: &anyMatcher{
																line: 719, col: 9, offset: 30218,
															},
														},
													},
												},
											},
										},
									},
									&actionExpr{
										pos: position{line: 89, col: 49, offset: 3748},
										run: (*parser).callonDocumentBlock42,
										expr: &seqExpr{
											pos: position{line: 89, col: 49, offset: 3748},
											exprs: []interface{}{
												&litMatcher{
													pos:        position{line: 89, col: 49, offset: 3748},
													val:        ":",
													ignoreCase: false,
												},
												&labeledExpr{
													pos:   position{line: 89, col: 53, offset: 3752},
													label: "name",
													expr: &seqExpr{
														pos: position{line: 110, col: 18, offset: 4666},
														exprs: []interface{}{
															&charClassMatcher{
																pos:        position{line: 110, col: 19, offset: 4667},
																val:        "[_A-Za-z0-9]",
																chars:      []rune{'_'},
																ranges:     []rune{'A', 'Z', 'a', 'z', '0', '9'},
																ignoreCase: false,
																inverted:   false,
															},
															&zeroOrMoreExpr{
																pos: position{line: 110, col: 48, offset: 4696},
																expr: &charClassMatcher{
																	pos:        position{line: 110, col: 49, offset: 4697},
																	val:        "[-A-Za-z0-9]",
																	chars:      []rune{'-'},
																	ranges:     []rune{'A', 'Z', 'a', 'z', '0', '9'},
																	ignoreCase: false,
																	inverted:   false,
																},
															},
														},
													},
												},
												&litMatcher{
													pos:        position{line: 89, col: 74, offset: 3773},
													val:        ":",
													ignoreCase: false,
												},
												&oneOrMoreExpr{
													pos: position{line: 89, col: 78, offset: 3777},
													expr: &choiceExpr{
														pos: position{line: 713, col: 7, offset: 30126},
														alternatives: []interface{}{
															&litMatcher{
																pos:        position{line: 713, col: 7, offset: 30126},
																val:        " ",
																ignoreCase: false,
															},
															&actionExpr{
																pos: position{line: 713, col: 13, offset: 30132},
																run: (*parser).callonDocumentBlock54,
																expr: &litMatcher{
																	pos:        position{line: 713, col: 13, offset: 30132},
																	val:        "\t",
																	ignoreCase: false,
																},
															},
														},
													},
												},
												&labeledExpr{
													pos:   position{line: 89, col: 82, offset: 3781},
													label: "value",
													expr: &zeroOrMoreExpr{
														pos: position{line: 89, col: 88, offset: 3787},
														expr: &seqExpr{
															pos: position{line: 89, col: 89, offset: 3788},
															exprs: []interface{}{
																&notExpr{
																	pos: position{line: 89, col: 89, offset: 3788},
																	expr: &choiceExpr{
																		pos: position{line: 717, col: 12, offset: 30188},
																		alternatives: []interface{}{
																			&litMatcher{
																				pos:        position{line: 717, col: 12, offset: 30188},
																				val:        "\r\n",
																				ignoreCase: false,
																			},
																			&charClassMatcher{
																				pos:        position{line: 717, col: 21, offset: 30197},
																				val:        "[\\r\\n]",
																				chars:      []rune{'\r', '\n'},
																				ignoreCase: false,
																				inverted:   false,
																			},
																		},
																	},
																},
																&anyMatcher{
																	line: 89, col: 98, offset: 3797,
																},
															},
														},
													},
												},
												&choiceExpr{
													pos: position{line: 721, col: 8, offset: 30228},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 717, col: 12, offset: 30188},
															val:        "\r\n",
															ignoreCase: false,
														},
														&charClassMatcher{
															pos:        position{line: 717, col: 21, offset: 30197},
															val:        "[\\r\\n]",
															chars:      []rune{'\r', '\n'},
															ignoreCase: false,
															inverted:   false,
														},
														&notExpr{
															pos: position{line: 719, col: 8, offset: 30217},
															expr: &anyMatcher{
																line: 719, col: 9, offset: 30218,
															},
														},
													},
												},
											},
										},
									},
									&actionExpr{
										pos: position{line: 95, col: 53, offset: 4079},
										run: (*parser).callonDocumentBlock69,
										expr: &seqExpr{
											pos: position{line: 95, col: 53, offset: 4079},
											exprs: []interface{}{
												&litMatcher{
													pos:        position{line: 95, col: 53, offset: 4079},
													val:        ":!",
													ignoreCase: false,
												},
												&labeledExpr{
													pos:   position{line: 95, col: 58, offset: 4084},
													label: "name",
													expr: &seqExpr{
														pos: position{line: 110, col: 18, offset: 4666},
														exprs: []interface{}{
															&charClassMatcher{
																pos:        position{line: 110, col: 19, offset: 4667},
																val:        "[_A-Za-z0-9]",
																chars:      []rune{'_'},
																ranges:     []rune{'A', 'Z', 'a', 'z', '0', '9'},
																ignoreCase: false,
																inverted:   false,
															},
															&zeroOrMoreExpr{
																pos: position{line: 110, col: 48, offset: 4696},
																expr: &charClassMatcher{
																	pos:        position{line: 110, col: 49, offset: 4697},
																	val:        "[-A-Za-z0-9]",
																	chars:      []rune{'-'},
																	ranges:     []rune{'A', 'Z', 'a', 'z', '0', '9'},
																	ignoreCase: false,
																	inverted:   false,
																},
															},
														},
													},
												},
												&litMatcher{
													pos:        position{line: 95, col: 79, offset: 4105},
													val:        ":",
													ignoreCase: false,
												},
												&zeroOrMoreExpr{
													pos: position{line: 95, col: 83, offset: 4109},
													expr: &choiceExpr{
														pos: position{line: 713, col: 7, offset: 30126},
														alternatives: []interface{}{
															&litMatcher{
																pos:        position{line: 713, col: 7, offset: 30126},
																val:        " ",
																ignoreCase: false,
															},
															&actionExpr{
																pos: position{line: 713, col: 13, offset: 30132},
																run: (*parser).callonDocumentBlock81,
																expr: &litMatcher{
																	pos:        position{line: 713, col: 13, offset: 30132},
																	val:        "\t",
																	ignoreCase: false,
																},
															},
														},
													},
												},
												&choiceExpr{
													pos: position{line: 721, col: 8, offset: 30228},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 717, col: 12, offset: 30188},
															val:        "\r\n",
															ignoreCase: false,
														},
														&charClassMatcher{
															pos:        position{line: 717, col: 21, offset: 30197},
															val:        "[\\r\\n]",
															chars:      []rune{'\r', '\n'},
															ignoreCase: false,
															inverted:   false,
														},
														&notExpr{
															pos: position{line: 719, col: 8, offset: 30217},
															expr: &anyMatcher{
																line: 719, col: 9, offset: 30218,
															},
														},
													},
												},
											},
										},
									},
									&actionExpr{
										pos: position{line: 99, col: 49, offset: 4235},
										run: (*parser).callonDocumentBlock88,
										expr: &seqExpr{
											pos: position{line: 99, col: 49, offset: 4235},
											exprs: []interface{}{
												&litMatcher{
													pos:        position{line: 99, col: 49, offset: 4235},
													val:        ":",
													ignoreCase: false,
												},
												&labeledExpr{
													pos:   position{line: 99, col: 53, offset: 4239},
													label: "name",
													expr: &seqExpr{
														pos: position{line: 110, col: 18, offset: 4666},
														exprs: []interface{}{
															&charClassMatcher{
																pos:        position{line: 110, col: 19, offset: 4667},
																val:        "[_A-Za-z0-9]",
																chars:      []rune{'_'},
																ranges:     []rune{'A', 'Z', 'a', 'z', '0', '9'},
																ignoreCase: false,
																inverted:   false,
															},
															&zeroOrMoreExpr{
																pos: position{line: 110, col: 48, offset: 4696},
																expr: &charClassMatcher{
																	pos:        position{line: 110, col: 49, offset: 4697},
																	val:        "[-A-Za-z0-9]",
																	chars:      []rune{'-'},
																	ranges:     []rune{'A', 'Z', 'a', 'z', '0', '9'},
																	ignoreCase: false,
																	inverted:   false,
																},
															},
														},
													},
												},
												&litMatcher{
													pos:        position{line: 99, col: 74, offset: 4260},
													val:        "!:",
													ignoreCase: false,
												},
												&zeroOrMoreExpr{
													pos: position{line: 99, col: 79, offset: 4265},
													expr: &choiceExpr{
														pos: position{line: 713, col: 7, offset: 30126},
														alternatives: []interface{}{
															&litMatcher{
																pos:        position{line: 713, col: 7, offset: 30126},
																val:        " ",
																ignoreCase: false,
															},
															&actionExpr{
																pos: position{line: 713, col: 13, offset: 30132},
																run: (*parser).callonDocumentBlock100,
																expr: &litMatcher{
																	pos:        position{line: 713, col: 13, offset: 30132},
																	val:        "\t",
																	ignoreCase: false,
																},
															},
														},
													},
												},
												&choiceExpr{
													pos: position{line: 721, col: 8, offset: 30228},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 717, col: 12, offset: 30188},
															val:        "\r\n",
															ignoreCase: false,
														},
														&charClassMatcher{
															pos:        position{line: 717, col: 21, offset: 30197},
															val:        "[\\r\\n]",
															chars:      []rune{'\r', '\n'},
															ignoreCase: false,
															inverted:   false,
														},
														&notExpr{
															pos: position{line: 719, col: 8, offset: 30217},
															expr: &anyMatcher{
																line: 719, col: 9, offset: 30218,
															},
														},
													},
												},
											},
										},
									},
									&seqExpr{
										pos: position{line: 115, col: 25, offset: 4865},
										exprs: []interface{}{
											&litMatcher{
												pos:        position{line: 115, col: 25, offset: 4865},
												val:        "toc::[]",
												ignoreCase: false,
											},
											&choiceExpr{
												pos: position{line: 717, col: 12, offset: 30188},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 717, col: 12, offset: 30188},
														val:        "\r\n",
														ignoreCase: false,
													},
													&charClassMatcher{
														pos:        position{line: 717, col: 21, offset: 30197},
														val:        "[\\r\\n]",
														chars:      []rune{'\r', '\n'},
														ignoreCase: false,
														inverted:   false,
													},
												},
											},
										},
									},
									&ruleRefExpr{
										pos:  position{line: 23, col: 103, offset: 891},
										name: "List",
									},
									&actionExpr{
										pos: position{line: 599, col: 15, offset: 25669},
										run: (*parser).callonDocumentBlock113,
										expr: &seqExpr{
											pos: position{line: 599, col: 15, offset: 25669},
											exprs: []interface{}{
												&labeledExpr{
													pos:   position{line: 599, col: 15, offset: 25669},
													label: "attributes",
													expr: &zeroOrMoreExpr{
														pos: position{line: 599, col: 26, offset: 25680},
														expr: &actionExpr{
															pos: position{line: 120, col: 21, offset: 5018},
															run: (*parser).callonDocumentBlock117,
															expr: &seqExpr{
																pos: position{line: 120, col: 21, offset: 5018},
																exprs: []interface{}{
																	&labeledExpr{
																		pos:   position{line: 120, col: 21, offset: 5018},
																		label: "attr",
																		expr: &choiceExpr{
																			pos: position{line: 120, col: 27, offset: 5024},
																			alternatives: []interface{}{
																				&actionExpr{
																					pos: position{line: 124, col: 14, offset: 5203},
																					run: (*parser).callonDocumentBlock121,
																					expr: &labeledExpr{
																						pos:   position{line: 124, col: 14, offset: 5203},
																						label: "id",
																						expr: &actionExpr{
																							pos: position{line: 130, col: 20, offset: 5333},
																							run: (*parser).callonDocumentBlock123,
																							expr: &seqExpr{
																								pos: position{line: 130, col: 20, offset: 5333},
																								exprs: []interface{}{
																									&litMatcher{
																										pos:        position{line: 130, col: 20, offset: 5333},
																										val:        "[[",
																										ignoreCase: false,
																									},
																									&labeledExpr{
																										pos:   position{line: 130, col: 25, offset: 5338},
																										label: "id",
																										expr: &actionExpr{
																											pos: position{line: 701, col: 7, offset: 29885},
																											run: (*parser).callonDocumentBlock127,
																											expr: &oneOrMoreExpr{
																												pos: position{line: 701, col: 7, offset: 29885},
																												expr: &seqExpr{
																													pos: position{line: 701, col: 8, offset: 29886},
																													exprs: []interface{}{
																														&notExpr{
																															pos: position{line: 701, col: 8, offset: 29886},
																															expr: &choiceExpr{
																																pos: position{line: 717, col: 12, offset: 30188},
																																alternatives: []interface{}{
																																	&litMatcher{
																																		pos:        position{line: 717, col: 12, offset: 30188},
																																		val:        "\r\n",
																																		ignoreCase: false,
																																	},
																																	&charClassMatcher{
																																		pos:        position{line: 717, col: 21, offset: 30197},
																																		val:        "[\\r\\n]",
																																		chars:      []rune{'\r', '\n'},
																																		ignoreCase: false,
																																		inverted:   false,
																																	},
																																},
																															},
																														},
																														&notExpr{
																															pos: position{line: 701, col: 17, offset: 29895},
																															expr: &choiceExpr{
																																pos: position{line: 713, col: 7, offset: 30126},
																																alternatives: []interface{}{
																																	&litMatcher{
																																		pos:        position{line: 713, col: 7, offset: 30126},
																																		val:        " ",
																																		ignoreCase: false,
																																	},
																																	&actionExpr{
																																		pos: position{line: 713, col: 13, offset: 30132},
																																		run: (*parser).callonDocumentBlock137,
																																		expr: &litMatcher{
																																			pos:        position{line: 713, col: 13, offset: 30132},
																																			val:        "\t",
																																			ignoreCase: false,
																																		},
																																	},
																																},
																															},
																														},
																														&notExpr{
																															pos: position{line: 701, col: 21, offset: 29899},
																															expr: &litMatcher{
																																pos:        position{line: 701, col: 22, offset: 29900},
																																val:        "[",
																																ignoreCase: false,
																															},
																														},
																														&notExpr{
																															pos: position{line: 701, col: 26, offset: 29904},
																															expr: &litMatcher{
																																pos:        position{line: 701, col: 27, offset: 29905},
																																val:        "]",
																																ignoreCase: false,
																															},
																														},
																														&notExpr{
																															pos: position{line: 701, col: 31, offset: 29909},
																															expr: &litMatcher{
																																pos:        position{line: 701, col: 32, offset: 29910},
																																val:        "<<",
																																ignoreCase: false,
																															},
																														},
																														&notExpr{
																															pos: position{line: 701, col: 37, offset: 29915},
																															expr: &litMatcher{
																																pos:        position{line: 701, col: 38, offset: 29916},
																																val:        ">>",
																																ignoreCase: false,
																															},
																														},
																														&anyMatcher{
																															line: 701, col: 42, offset: 29920,
																														},
																													},
																												},
																											},
																										},
																									},
																									&litMatcher{
																										pos:        position{line: 130, col: 33, offset: 5346},
																										val:        "]]",
																										ignoreCase: false,
																									},
																								},
																							},
																						},
																					},
																				},
																				&actionExpr{
																					pos: position{line: 126, col: 5, offset: 5249},
																					run: (*parser).callonDocumentBlock149,
																					expr: &seqExpr{
																						pos: position{line: 126, col: 5, offset: 5249},
																						exprs: []interface{}{
																							&litMatcher{
																								pos:        position{line: 126, col: 5, offset: 5249},
																								val:        "[#",
																								ignoreCase: false,
																							},
																							&labeledExpr{
																								pos:   position{line: 126, col: 10, offset: 5254},
																								label: "id",
																								expr: &actionExpr{
																									pos: position{line: 701, col: 7, offset: 29885},
																									run: (*parser).callonDocumentBlock153,
																									expr: &oneOrMoreExpr{
																										pos: position{line: 701, col: 7, offset: 29885},
																										expr: &seqExpr{
																											pos: position{line: 701, col: 8, offset: 29886},
																											exprs: []interface{}{
																												&notExpr{
																													pos: position{line: 701, col: 8, offset: 29886},
																													expr: &choiceExpr{
																														pos: position{line: 717, col: 12, offset: 30188},
																														alternatives: []interface{}{
																															&litMatcher{
																																pos:        position{line: 717, col: 12, offset: 30188},
																																val:        "\r\n",
																																ignoreCase: false,
																															},
																															&charClassMatcher{
																																pos:        position{line: 717, col: 21, offset: 30197},
																																val:        "[\\r\\n]",
																																chars:      []rune{'\r', '\n'},
																																ignoreCase: false,
																																inverted:   false,
																															},
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 701, col: 17, offset: 29895},
																													expr: &choiceExpr{
																														pos: position{line: 713, col: 7, offset: 30126},
																														alternatives: []interface{}{
																															&litMatcher{
																																pos:        position{line: 713, col: 7, offset: 30126},
																																val:        " ",
																																ignoreCase: false,
																															},
																															&actionExpr{
																																pos: position{line: 713, col: 13, offset: 30132},
																																run: (*parser).callonDocumentBlock163,
																																expr: &litMatcher{
																																	pos:        position{line: 713, col: 13, offset: 30132},
																																	val:        "\t",
																																	ignoreCase: false,
																																},
																															},
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 701, col: 21, offset: 29899},
																													expr: &litMatcher{
																														pos:        position{line: 701, col: 22, offset: 29900},
																														val:        "[",
																														ignoreCase: false,
																													},
																												},
																												&notExpr{
																													pos: position{line: 701, col: 26, offset: 29904},
																													expr: &litMatcher{
																														pos:        position{line: 701, col: 27, offset: 29905},
																														val:        "]",
																														ignoreCase: false,
																													},
																												},
																												&notExpr{
																													pos: position{line: 701, col: 31, offset: 29909},
																													expr: &litMatcher{
																														pos:        position{line: 701, col: 32, offset: 29910},
																														val:        "<<",
																														ignoreCase: false,
																													},
																												},
																												&notExpr{
																													pos: position{line: 701, col: 37, offset: 29915},
																													expr: &litMatcher{
																														pos:        position{line: 701, col: 38, offset: 29916},
																														val:        ">>",
																														ignoreCase: false,
																													},
																												},
																												&anyMatcher{
																													line: 701, col: 42, offset: 29920,
																												},
																											},
																										},
																									},
																								},
																							},
																							&litMatcher{
																								pos:        position{line: 126, col: 18, offset: 5262},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																					},
																				},
																				&actionExpr{
																					pos: position{line: 136, col: 17, offset: 5557},
																					run: (*parser).callonDocumentBlock175,
																					expr: &seqExpr{
																						pos: position{line: 136, col: 17, offset: 5557},
																						exprs: []interface{}{
																							&litMatcher{
																								pos:        position{line: 136, col: 17, offset: 5557},
																								val:        ".",
																								ignoreCase: false,
																							},
																							&notExpr{
																								pos: position{line: 136, col: 21, offset: 5561},
																								expr: &litMatcher{
																									pos:        position{line: 136, col: 22, offset: 5562},
																									val:        ".",
																									ignoreCase: false,
																								},
																							},
																							&notExpr{
																								pos: position{line: 136, col: 26, offset: 5566},
																								expr: &choiceExpr{
																									pos: position{line: 713, col: 7, offset: 30126},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 713, col: 7, offset: 30126},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 713, col: 13, offset: 30132},
																											run: (*parser).callonDocumentBlock183,
																											expr: &litMatcher{
																												pos:        position{line: 713, col: 13, offset: 30132},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																							&labeledExpr{
																								pos:   position{line: 136, col: 30, offset: 5570},
																								label: "title",
																								expr: &oneOrMoreExpr{
																									pos: position{line: 136, col: 36, offset: 5576},
																									expr: &seqExpr{
																										pos: position{line: 136, col: 37, offset: 5577},
																										exprs: []interface{}{
																											&notExpr{
																												pos: position{line: 136, col: 37, offset: 5577},
																												expr: &choiceExpr{
																													pos: position{line: 717, col: 12, offset: 30188},
																													alternatives: []interface{}{
																														&litMatcher{
																															pos:        position{line: 717, col: 12, offset: 30188},
																															val:        "\r\n",
																															ignoreCase: false,
																														},
																														&charClassMatcher{
																															pos:        position{line: 717, col: 21, offset: 30197},
																															val:        "[\\r\\n]",
																															chars:      []rune{'\r', '\n'},
																															ignoreCase: false,
																															inverted:   false,
																														},
																													},
																												},
																											},
																											&anyMatcher{
																												line: 136, col: 46, offset: 5586,
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																				&actionExpr{
																					pos: position{line: 141, col: 30, offset: 5760},
																					run: (*parser).callonDocumentBlock193,
																					expr: &seqExpr{
																						pos: position{line: 141, col: 30, offset: 5760},
																						exprs: []interface{}{
																							&litMatcher{
																								pos:        position{line: 141, col: 30, offset: 5760},
																								val:        "[",
																								ignoreCase: false,
																							},
																							&labeledExpr{
																								pos:   position{line: 141, col: 34, offset: 5764},
																								label: "k",
																								expr: &choiceExpr{
																									pos: position{line: 442, col: 19, offset: 17830},
																									alternatives: []interface{}{
																										&actionExpr{
																											pos: position{line: 442, col: 19, offset: 17830},
																											run: (*parser).callonDocumentBlock198,
																											expr: &litMatcher{
																												pos:        position{line: 442, col: 19, offset: 17830},
																												val:        "TIP",
																												ignoreCase: false,
																											},
																										},
																										&actionExpr{
																											pos: position{line: 444, col: 5, offset: 17868},
																											run: (*parser).callonDocumentBlock200,
																											expr: &litMatcher{
																												pos:        position{line: 444, col: 5, offset: 17868},
																												val:        "NOTE",
																												ignoreCase: false,
																											},
																										},
																										&actionExpr{
																											pos: position{line: 446, col: 5, offset: 17908},
																											run: (*parser).callonDocumentBlock202,
																											expr: &litMatcher{
																												pos:        position{line: 446, col: 5, offset: 17908},
																												val:        "IMPORTANT",
																												ignoreCase: false,
																											},
																										},
																										&actionExpr{
																											pos: position{line: 448, col: 5, offset: 17958},
																											run: (*parser).callonDocumentBlock204,
																											expr: &litMatcher{
																												pos:        position{line: 448, col: 5, offset: 17958},
																												val:        "WARNING",
																												ignoreCase: false,
																											},
																										},
																										&actionExpr{
																											pos: position{line: 450, col: 5, offset: 18004},
																											run: (*parser).callonDocumentBlock206,
																											expr: &litMatcher{
																												pos:        position{line: 450, col: 5, offset: 18004},
																												val:        "CAUTION",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																							&litMatcher{
																								pos:        position{line: 141, col: 53, offset: 5783},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																					},
																				},
																				&actionExpr{
																					pos: position{line: 146, col: 19, offset: 5896},
																					run: (*parser).callonDocumentBlock209,
																					expr: &seqExpr{
																						pos: position{line: 146, col: 19, offset: 5896},
																						exprs: []interface{}{
																							&litMatcher{
																								pos:        position{line: 146, col: 19, offset: 5896},
																								val:        "[",
																								ignoreCase: false,
																							},
																							&labeledExpr{
																								pos:   position{line: 146, col: 23, offset: 5900},
																								label: "attribute",
																								expr: &choiceExpr{
																									pos: position{line: 150, col: 21, offset: 6095},
																									alternatives: []interface{}{
																										&actionExpr{
																											pos: position{line: 150, col: 21, offset: 6095},
																											run: (*parser).callonDocumentBlock214,
																											expr: &seqExpr{
																												pos: position{line: 150, col: 21, offset: 6095},
																												exprs: []interface{}{
																													&labeledExpr{
																														pos:   position{line: 150, col: 21, offset: 6095},
																														label: "key",
																														expr: &actionExpr{
																															pos: position{line: 162, col: 17, offset: 6664},
																															run: (*parser).callonDocumentBlock217,
																															expr: &seqExpr{
																																pos: position{line: 162, col: 17, offset: 6664},
																																exprs: []interface{}{
																																	&labeledExpr{
																																		pos:   position{line: 162, col: 17, offset: 6664},
																																		label: "key",
																																		expr: &oneOrMoreExpr{
																																			pos: position{line: 162, col: 22, offset: 6669},
																																			expr: &seqExpr{
																																				pos: position{line: 162, col: 23, offset: 6670},
																																				exprs: []interface{}{
																																					&notExpr{
																																						pos: position{line: 162, col: 23, offset: 6670},
																																						expr: &choiceExpr{
																																							pos: position{line: 713, col: 7, offset: 30126},
																																							alternatives: []interface{}{
																																								&litMatcher{
																																									pos:        position{line: 713, col: 7, offset: 30126},
																																									val:        " ",
																																									ignoreCase: false,
																																								},
																																								&actionExpr{
																																									pos: position{line: 713, col: 13, offset: 30132},
																																									run: (*parser).callonDocumentBlock225,
																																									expr: &litMatcher{
																																										pos:        position{line: 713, col: 13, offset: 30132},
																																										val:        "\t",
																																										ignoreCase: false,
																																									},
																																								},
																																							},
																																						},
																																					},
																																					&notExpr{
																																						pos: position{line: 162, col: 27, offset: 6674},
																																						expr: &litMatcher{
																																							pos:        position{line: 162, col: 28, offset: 6675},
																																							val:        "=",
																																							ignoreCase: false,
																																						},
																																					},
																																					&notExpr{
																																						pos: position{line: 162, col: 32, offset: 6679},
																																						expr: &litMatcher{
																																							pos:        position{line: 162, col: 33, offset: 6680},
																																							val:        ",",
																																							ignoreCase: false,
																																						},
																																					},
																																					&notExpr{
																																						pos: position{line: 162, col: 37, offset: 6684},
																																						expr: &litMatcher{
																																							pos:        position{line: 162, col: 38, offset: 6685},
																																							val:        "]",
																																							ignoreCase: false,
																																						},
																																					},
																																					&anyMatcher{
																																						line: 162, col: 42, offset: 6689,
																																					},
																																				},
																																			},
																																		},
																																	},
																																	&zeroOrMoreExpr{
																																		pos: position{line: 162, col: 46, offset: 6693},
																																		expr: &choiceExpr{
																																			pos: position{line: 713, col: 7, offset: 30126},
																																			alternatives: []interface{}{
																																				&litMatcher{
																																					pos:        position{line: 713, col: 7, offset: 30126},
																																					val:        " ",
																																					ignoreCase: false,
																																				},
																																				&actionExpr{
																																					pos: position{line: 713, col: 13, offset: 30132},
																																					run: (*parser).callonDocumentBlock237,
																																					expr: &litMatcher{
																																						pos:        position{line: 713, col: 13, offset: 30132},
																																						val:        "\t",
																																						ignoreCase: false,
																																					},
																																				},
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																													&litMatcher{
																														pos:        position{line: 150, col: 40, offset: 6114},
																														val:        "=",
																														ignoreCase: false,
																													},
																													&labeledExpr{
																														pos:   position{line: 150, col: 44, offset: 6118},
																														label: "value",
																														expr: &actionExpr{
																															pos: position{line: 167, col: 19, offset: 6793},
																															run: (*parser).callonDocumentBlock241,
																															expr: &seqExpr{
																																pos: position{line: 167, col: 19, offset: 6793},
																																exprs: []interface{}{
																																	&zeroOrMoreExpr{
																																		pos: position{line: 167, col: 19, offset: 6793},
																																		expr: &choiceExpr{
																																			pos: position{line: 713, col: 7, offset: 30126},
																																			alternatives: []interface{}{
																																				&litMatcher{
																																					pos:        position{line: 713, col: 7, offset: 30126},
																																					val:        " ",
																																					ignoreCase: false,
																																				},
																																				&actionExpr{
																																					pos: position{line: 713, col: 13, offset: 30132},
																																					run: (*parser).callonDocumentBlock246,
																																					expr: &litMatcher{
																																						pos:        position{line: 713, col: 13, offset: 30132},
																																						val:        "\t",
																																						ignoreCase: false,
																																					},
																																				},
																																			},
																																		},
																																	},
																																	&labeledExpr{
																																		pos:   position{line: 167, col: 23, offset: 6797},
																																		label: "value",
																																		expr: &zeroOrMoreExpr{
																																			pos: position{line: 167, col: 29, offset: 6803},
																																			expr: &seqExpr{
																																				pos: position{line: 167, col: 30, offset: 6804},
																																				exprs: []interface{}{
																																					&notExpr{
																																						pos: position{line: 167, col: 30, offset: 6804},
																																						expr: &choiceExpr{
																																							pos: position{line: 713, col: 7, offset: 30126},
																																							alternatives: []interface{}{
																																								&litMatcher{
																																									pos:        position{line: 713, col: 7, offset: 30126},
																																									val:        " ",
																																									ignoreCase: false,
																																								},
																																								&actionExpr{
																																									pos: position{line: 713, col: 13, offset: 30132},
																																									run: (*parser).callonDocumentBlock254,
																																									expr: &litMatcher{
																																										pos:        position{line: 713, col: 13, offset: 30132},
																																										val:        "\t",
																																										ignoreCase: false,
																																									},
																																								},
																																							},
																																						},
																																					},
																																					&notExpr{
																																						pos: position{line: 167, col: 34, offset: 6808},
																																						expr: &litMatcher{
																																							pos:        position{line: 167, col: 35, offset: 6809},
																																							val:        "=",
																																							ignoreCase: false,
																																						},
																																					},
																																					&notExpr{
																																						pos: position{line: 167, col: 39, offset: 6813},
																																						expr: &litMatcher{
																																							pos:        position{line: 167, col: 40, offset: 6814},
																																							val:        "]",
																																							ignoreCase: false,
																																						},
																																					},
																																					&anyMatcher{
																																						line: 167, col: 44, offset: 6818,
																																					},
																																				},
																																			},
																																		},
																																	},
																																	&zeroOrMoreExpr{
																																		pos: position{line: 167, col: 48, offset: 6822},
																																		expr: &choiceExpr{
																																			pos: position{line: 713, col: 7, offset: 30126},
																																			alternatives: []interface{}{
																																				&litMatcher{
																																					pos:        position{line: 713, col: 7, offset: 30126},
																																					val:        " ",
																																					ignoreCase: false,
																																				},
																																				&actionExpr{
																																					pos: position{line: 713, col: 13, offset: 30132},
																																					run: (*parser).callonDocumentBlock264,
																																					expr: &litMatcher{
																																						pos:        position{line: 713, col: 13, offset: 30132},
																																						val:        "\t",
																																						ignoreCase: false,
																																					},
																																				},
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																										&actionExpr{
																											pos: position{line: 152, col: 5, offset: 6244},
																											run: (*parser).callonDocumentBlock266,
																											expr: &labeledExpr{
																												pos:   position{line: 152, col: 5, offset: 6244},
																												label: "key",
																												expr: &actionExpr{
																													pos: position{line: 162, col: 17, offset: 6664},
																													run: (*parser).callonDocumentBlock268,
																													expr: &seqExpr{
																														pos: position{line: 162, col: 17, offset: 6664},
																														exprs: []interface{}{
																															&labeledExpr{
																																pos:   position{line: 162, col: 17, offset: 6664},
																																label: "key",
																																expr: &oneOrMoreExpr{
																																	pos: position{line: 162, col: 22, offset: 6669},
																																	expr: &seqExpr{
																																		pos: position{line: 162, col: 23, offset: 6670},
																																		exprs: []interface{}{
																																			&notExpr{
																																				pos: position{line: 162, col: 23, offset: 6670},
																																				expr: &choiceExpr{
																																					pos: position{line: 713, col: 7, offset: 30126},
																																					alternatives: []interface{}{
																																						&litMatcher{
																																							pos:        position{line: 713, col: 7, offset: 30126},
																																							val:        " ",
																																							ignoreCase: false,
																																						},
																																						&actionExpr{
																																							pos: position{line: 713, col: 13, offset: 30132},
																																							run: (*parser).callonDocumentBlock276,
																																							expr: &litMatcher{
																																								pos:        position{line: 713, col: 13, offset: 30132},
																																								val:        "\t",
																																								ignoreCase: false,
																																							},
																																						},
																																					},
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 162, col: 27, offset: 6674},
																																				expr: &litMatcher{
																																					pos:        position{line: 162, col: 28, offset: 6675},
																																					val:        "=",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 162, col: 32, offset: 6679},
																																				expr: &litMatcher{
																																					pos:        position{line: 162, col: 33, offset: 6680},
																																					val:        ",",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 162, col: 37, offset: 6684},
																																				expr: &litMatcher{
																																					pos:        position{line: 162, col: 38, offset: 6685},
																																					val:        "]",
																																					ignoreCase: false,
																																				},
																																			},
																																			&anyMatcher{
																																				line: 162, col: 42, offset: 6689,
																																			},
																																		},
																																	},
																																},
																															},
																															&zeroOrMoreExpr{
																																pos: position{line: 162, col: 46, offset: 6693},
																																expr: &choiceExpr{
																																	pos: position{line: 713, col: 7, offset: 30126},
																																	alternatives: []interface{}{
																																		&litMatcher{
																																			pos:        position{line: 713, col: 7, offset: 30126},
																																			val:        " ",
																																			ignoreCase: false,
																																		},
																																		&actionExpr{
																																			pos: position{line: 713, col: 13, offset: 30132},
																																			run: (*parser).callonDocumentBlock288,
																																			expr: &litMatcher{
																																				pos:        position{line: 713, col: 13, offset: 30132},
																																				val:        "\t",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&labeledExpr{
																								pos:   position{line: 146, col: 52, offset: 5929},
																								label: "attributes",
																								expr: &zeroOrMoreExpr{
																									pos: position{line: 146, col: 63, offset: 5940},
																									expr: &choiceExpr{
																										pos: position{line: 156, col: 26, offset: 6376},
																										alternatives: []interface{}{
																											&actionExpr{
																												pos: position{line: 156, col: 26, offset: 6376},
																												run: (*parser).callonDocumentBlock293,
																												expr: &seqExpr{
																													pos: position{line: 156, col: 26, offset: 6376},
																													exprs: []interface{}{
																														&litMatcher{
																															pos:        position{line: 156, col: 26, offset: 6376},
																															val:        ",",
																															ignoreCase: false,
																														},
																														&zeroOrMoreExpr{
																															pos: position{line: 156, col: 30, offset: 6380},
																															expr: &choiceExpr{
																																pos: position{line: 713, col: 7, offset: 30126},
																																alternatives: []interface{}{
																																	&litMatcher{
																																		pos:        position{line: 713, col: 7, offset: 30126},
																																		val:        " ",
																																		ignoreCase: false,
																																	},
																																	&actionExpr{
																																		pos: position{line: 713, col: 13, offset: 30132},
																																		run: (*parser).callonDocumentBlock299,
																																		expr: &litMatcher{
																																			pos:        position{line: 713, col: 13, offset: 30132},
																																			val:        "\t",
																																			ignoreCase: false,
																																		},
																																	},
																																},
																															},
																														},
																														&labeledExpr{
																															pos:   position{line: 156, col: 34, offset: 6384},
																															label: "key",
																															expr: &actionExpr{
																																pos: position{line: 162, col: 17, offset: 6664},
																																run: (*parser).callonDocumentBlock302,
																																expr: &seqExpr{
																																	pos: position{line: 162, col: 17, offset: 6664},
																																	exprs: []interface{}{
																																		&labeledExpr{
																																			pos:   position{line: 162, col: 17, offset: 6664},
																																			label: "key",
																																			expr: &oneOrMoreExpr{
																																				pos: position{line: 162, col: 22, offset: 6669},
																																				expr: &seqExpr{
																																					pos: position{line: 162, col: 23, offset: 6670},
																																					exprs: []interface{}{
																																						&notExpr{
																																							pos: position{line: 162, col: 23, offset: 6670},
																																							expr: &choiceExpr{
																																								pos: position{line: 713, col: 7, offset: 30126},
																																								alternatives: []interface{}{
																																									&litMatcher{
																																										pos:        position{line: 713, col: 7, offset: 30126},
																																										val:        " ",
																																										ignoreCase: false,
																																									},
																																									&actionExpr{
																																										pos: position{line: 713, col: 13, offset: 30132},
																																										run: (*parser).callonDocumentBlock310,
																																										expr: &litMatcher{
																																											pos:        position{line: 713, col: 13, offset: 30132},
																																											val:        "\t",
																																											ignoreCase: false,
																																										},
																																									},
																																								},
																																							},
																																						},
																																						&notExpr{
																																							pos: position{line: 162, col: 27, offset: 6674},
																																							expr: &litMatcher{
																																								pos:        position{line: 162, col: 28, offset: 6675},
																																								val:        "=",
																																								ignoreCase: false,
																																							},
																																						},
																																						&notExpr{
																																							pos: position{line: 162, col: 32, offset: 6679},
																																							expr: &litMatcher{
																																								pos:        position{line: 162, col: 33, offset: 6680},
																																								val:        ",",
																																								ignoreCase: false,
																																							},
																																						},
																																						&notExpr{
																																							pos: position{line: 162, col: 37, offset: 6684},
																																							expr: &litMatcher{
																																								pos:        position{line: 162, col: 38, offset: 6685},
																																								val:        "]",
																																								ignoreCase: false,
																																							},
																																						},
																																						&anyMatcher{
																																							line: 162, col: 42, offset: 6689,
																																						},
																																					},
																																				},
																																			},
																																		},
																																		&zeroOrMoreExpr{
																																			pos: position{line: 162, col: 46, offset: 6693},
																																			expr: &choiceExpr{
																																				pos: position{line: 713, col: 7, offset: 30126},
																																				alternatives: []interface{}{
																																					&litMatcher{
																																						pos:        position{line: 713, col: 7, offset: 30126},
																																						val:        " ",
																																						ignoreCase: false,
																																					},
																																					&actionExpr{
																																						pos: position{line: 713, col: 13, offset: 30132},
																																						run: (*parser).callonDocumentBlock322,
																																						expr: &litMatcher{
																																							pos:        position{line: 713, col: 13, offset: 30132},
																																							val:        "\t",
																																							ignoreCase: false,
																																						},
																																					},
																																				},
																																			},
																																		},
																																	},
																																},
																															},
																														},
																														&litMatcher{
																															pos:        position{line: 156, col: 53, offset: 6403},
																															val:        "=",
																															ignoreCase: false,
																														},
																														&labeledExpr{
																															pos:   position{line: 156, col: 57, offset: 6407},
																															label: "value",
																															expr: &actionExpr{
																																pos: position{line: 167, col: 19, offset: 6793},
																																run: (*parser).callonDocumentBlock326,
																																expr: &seqExpr{
																																	pos: position{line: 167, col: 19, offset: 6793},
																																	exprs: []interface{}{
																																		&zeroOrMoreExpr{
																																			pos: position{line: 167, col: 19, offset: 6793},
																																			expr: &choiceExpr{
																																				pos: position{line: 713, col: 7, offset: 30126},
																																				alternatives: []interface{}{
																																					&litMatcher{
																																						pos:        position{line: 713, col: 7, offset: 30126},
																																						val:        " ",
																																						ignoreCase: false,
																																					},
																																					&actionExpr{
																																						pos: position{line: 713, col: 13, offset: 30132},
																																						run: (*parser).callonDocumentBlock331,
																																						expr: &litMatcher{
																																							pos:        position{line: 713, col: 13, offset: 30132},
																																							val:        "\t",
																																							ignoreCase: false,
																																						},
																																					},
																																				},
																																			},
																																		},
																																		&labeledExpr{
																																			pos:   position{line: 167, col: 23, offset: 6797},
																																			label: "value",
																																			expr: &zeroOrMoreExpr{
																																				pos: position{line: 167, col: 29, offset: 6803},
																																				expr: &seqExpr{
																																					pos: position{line: 167, col: 30, offset: 6804},
																																					exprs: []interface{}{
																																						&notExpr{
																																							pos: position{line: 167, col: 30, offset: 6804},
																																							expr: &choiceExpr{
																																								pos: position{line: 713, col: 7, offset: 30126},
																																								alternatives: []interface{}{
																																									&litMatcher{
																																										pos:        position{line: 713, col: 7, offset: 30126},
																																										val:        " ",
																																										ignoreCase: false,
																																									},
																																									&actionExpr{
																																										pos: position{line: 713, col: 13, offset: 30132},
																																										run: (*parser).callonDocumentBlock339,
																																										expr: &litMatcher{
																																											pos:        position{line: 713, col: 13, offset: 30132},
																																											val:        "\t",
																																											ignoreCase: false,
																																										},
																																									},
																																								},
																																							},
																																						},
																																						&notExpr{
																																							pos: position{line: 167, col: 34, offset: 6808},
																																							expr: &litMatcher{
																																								pos:        position{line: 167, col: 35, offset: 6809},
																																								val:        "=",
																																								ignoreCase: false,
																																							},
																																						},
																																						&notExpr{
																																							pos: position{line: 167, col: 39, offset: 6813},
																																							expr: &litMatcher{
																																								pos:        position{line: 167, col: 40, offset: 6814},
																																								val:        "]",
																																								ignoreCase: false,
																																							},
																																						},
																																						&anyMatcher{
																																							line: 167, col: 44, offset: 6818,
																																						},
																																					},
																																				},
																																			},
																																		},
																																		&zeroOrMoreExpr{
																																			pos: position{line: 167, col: 48, offset: 6822},
																																			expr: &choiceExpr{
																																				pos: position{line: 713, col: 7, offset: 30126},
																																				alternatives: []interface{}{
																																					&litMatcher{
																																						pos:        position{line: 713, col: 7, offset: 30126},
																																						val:        " ",
																																						ignoreCase: false,
																																					},
																																					&actionExpr{
																																						pos: position{line: 713, col: 13, offset: 30132},
																																						run: (*parser).callonDocumentBlock349,
																																						expr: &litMatcher{
																																							pos:        position{line: 713, col: 13, offset: 30132},
																																							val:        "\t",
																																							ignoreCase: false,
																																						},
																																					},
																																				},
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																											&actionExpr{
																												pos: position{line: 158, col: 5, offset: 6533},
																												run: (*parser).callonDocumentBlock351,
																												expr: &seqExpr{
																													pos: position{line: 158, col: 5, offset: 6533},
																													exprs: []interface{}{
																														&litMatcher{
																															pos:        position{line: 158, col: 5, offset: 6533},
																															val:        ",",
																															ignoreCase: false,
																														},
																														&zeroOrMoreExpr{
																															pos: position{line: 158, col: 9, offset: 6537},
																															expr: &choiceExpr{
																																pos: position{line: 713, col: 7, offset: 30126},
																																alternatives: []interface{}{
																																	&litMatcher{
																																		pos:        position{line: 713, col: 7, offset: 30126},
																																		val:        " ",
																																		ignoreCase: false,
																																	},
																																	&actionExpr{
																																		pos: position{line: 713, col: 13, offset: 30132},
																																		run: (*parser).callonDocumentBlock357,
																																		expr: &litMatcher{
																																			pos:        position{line: 713, col: 13, offset: 30132},
																																			val:        "\t",
																																			ignoreCase: false,
																																		},
																																	},
																																},
																															},
																														},
																														&labeledExpr{
																															pos:   position{line: 158, col: 13, offset: 6541},
																															label: "key",
																															expr: &actionExpr{
																																pos: position{line: 162, col: 17, offset: 6664},
																																run: (*parser).callonDocumentBlock360,
																																expr: &seqExpr{
																																	pos: position{line: 162, col: 17, offset: 6664},
																																	exprs: []interface{}{
																																		&labeledExpr{
																																			pos:   position{line: 162, col: 17, offset: 6664},
																																			label: "key",
																																			expr: &oneOrMoreExpr{
																																				pos: position{line: 162, col: 22, offset: 6669},
																																				expr: &seqExpr{
																																					pos: position{line: 162, col: 23, offset: 6670},
																																					exprs: []interface{}{
																																						&notExpr{
																																							pos: position{line: 162, col: 23, offset: 6670},
																																							expr: &choiceExpr{
																																								pos: position{line: 713, col: 7, offset: 30126},
																																								alternatives: []interface{}{
																																									&litMatcher{
																																										pos:        position{line: 713, col: 7, offset: 30126},
																																										val:        " ",
																																										ignoreCase: false,
																																									},
																																									&actionExpr{
																																										pos: position{line: 713, col: 13, offset: 30132},
																																										run: (*parser).callonDocumentBlock368,
																																										expr: &litMatcher{
																																											pos:        position{line: 713, col: 13, offset: 30132},
																																											val:        "\t",
																																											ignoreCase: false,
																																										},
																																									},
																																								},
																																							},
																																						},
																																						&notExpr{
																																							pos: position{line: 162, col: 27, offset: 6674},
																																							expr: &litMatcher{
																																								pos:        position{line: 162, col: 28, offset: 6675},
																																								val:        "=",
																																								ignoreCase: false,
																																							},
																																						},
																																						&notExpr{
																																							pos: position{line: 162, col: 32, offset: 6679},
																																							expr: &litMatcher{
																																								pos:        position{line: 162, col: 33, offset: 6680},
																																								val:        ",",
																																								ignoreCase: false,
																																							},
																																						},
																																						&notExpr{
																																							pos: position{line: 162, col: 37, offset: 6684},
																																							expr: &litMatcher{
																																								pos:        position{line: 162, col: 38, offset: 6685},
																																								val:        "]",
																																								ignoreCase: false,
																																							},
																																						},
																																						&anyMatcher{
																																							line: 162, col: 42, offset: 6689,
																																						},
																																					},
																																				},
																																			},
																																		},
																																		&zeroOrMoreExpr{
																																			pos: position{line: 162, col: 46, offset: 6693},
																																			expr: &choiceExpr{
																																				pos: position{line: 713, col: 7, offset: 30126},
																																				alternatives: []interface{}{
																																					&litMatcher{
																																						pos:        position{line: 713, col: 7, offset: 30126},
																																						val:        " ",
																																						ignoreCase: false,
																																					},
																																					&actionExpr{
																																						pos: position{line: 713, col: 13, offset: 30132},
																																						run: (*parser).callonDocumentBlock380,
																																						expr: &litMatcher{
																																							pos:        position{line: 713, col: 13, offset: 30132},
																																							val:        "\t",
																																							ignoreCase: false,
																																						},
																																					},
																																				},
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&litMatcher{
																								pos:        position{line: 146, col: 89, offset: 5966},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&zeroOrMoreExpr{
																		pos: position{line: 120, col: 98, offset: 5095},
																		expr: &choiceExpr{
																			pos: position{line: 713, col: 7, offset: 30126},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 713, col: 7, offset: 30126},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 713, col: 13, offset: 30132},
																					run: (*parser).callonDocumentBlock386,
																					expr: &litMatcher{
																						pos:        position{line: 713, col: 13, offset: 30132},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&choiceExpr{
																		pos: position{line: 721, col: 8, offset: 30228},
																		alternatives: []interface{}{
																			&litMatcher{
																				pos:        position{line: 717, col: 12, offset: 30188},
																				val:        "\r\n",
																				ignoreCase: false,
																			},
																			&charClassMatcher{
																				pos:        position{line: 717, col: 21, offset: 30197},
																				val:        "[\\r\\n]",
																				chars:      []rune{'\r', '\n'},
																				ignoreCase: false,
																				inverted:   false,
																			},
																			&notExpr{
																				pos: position{line: 719, col: 8, offset: 30217},
																				expr: &anyMatcher{
																					line: 719, col: 9, offset: 30218,
																				},
																			},
																		},
																	},
																},
															},
														},
													},
												},
												&labeledExpr{
													pos:   position{line: 599, col: 46, offset: 25700},
													label: "image",
													expr: &actionExpr{
														pos: position{line: 604, col: 20, offset: 25905},
														run: (*parser).callonDocumentBlock394,
														expr: &seqExpr{
															pos: position{line: 604, col: 20, offset: 25905},
															exprs: []interface{}{
																&litMatcher{
																	pos:        position{line: 604, col: 20, offset: 25905},
																	val:        "image::",
																	ignoreCase: false,
																},
																&labeledExpr{
																	pos:   position{line: 604, col: 30, offset: 25915},
																	label: "path",
																	expr: &actionExpr{
																		pos: position{line: 697, col: 8, offset: 29815},
																		run: (*parser).callonDocumentBlock398,
																		expr: &oneOrMoreExpr{
																			pos: position{line: 697, col: 8, offset: 29815},
																			expr: &seqExpr{
																				pos: position{line: 697, col: 9, offset: 29816},
																				exprs: []interface{}{
																					&notExpr{
																						pos: position{line: 697, col: 9, offset: 29816},
																						expr: &choiceExpr{
																							pos: position{line: 717, col: 12, offset: 30188},
																							alternatives: []interface{}{
																								&litMatcher{
																									pos:        position{line: 717, col: 12, offset: 30188},
																									val:        "\r\n",
																									ignoreCase: false,
																								},
																								&charClassMatcher{
																									pos:        position{line: 717, col: 21, offset: 30197},
																									val:        "[\\r\\n]",
																									chars:      []rune{'\r', '\n'},
																									ignoreCase: false,
																									inverted:   false,
																								},
																							},
																						},
																					},
																					&notExpr{
																						pos: position{line: 697, col: 18, offset: 29825},
																						expr: &choiceExpr{
																							pos: position{line: 713, col: 7, offset: 30126},
																							alternatives: []interface{}{
																								&litMatcher{
																									pos:        position{line: 713, col: 7, offset: 30126},
																									val:        " ",
																									ignoreCase: false,
																								},
																								&actionExpr{
																									pos: position{line: 713, col: 13, offset: 30132},
																									run: (*parser).callonDocumentBlock408,
																									expr: &litMatcher{
																										pos:        position{line: 713, col: 13, offset: 30132},
																										val:        "\t",
																										ignoreCase: false,
																									},
																								},
																							},
																						},
																					},
																					&notExpr{
																						pos: position{line: 697, col: 22, offset: 29829},
																						expr: &litMatcher{
																							pos:        position{line: 697, col: 23, offset: 29830},
																							val:        "[",
																							ignoreCase: false,
																						},
																					},
																					&notExpr{
																						pos: position{line: 697, col: 27, offset: 29834},
																						expr: &litMatcher{
																							pos:        position{line: 697, col: 28, offset: 29835},
																							val:        "]",
																							ignoreCase: false,
																						},
																					},
																					&anyMatcher{
																						line: 697, col: 32, offset: 29839,
																					},
																				},
																			},
																		},
																	},
																},
																&labeledExpr{
																	pos:   position{line: 604, col: 41, offset: 25926},
																	label: "attributes",
																	expr: &actionExpr{
																		pos: position{line: 179, col: 21, offset: 7160},
																		run: (*parser).callonDocumentBlock416,
																		expr: &seqExpr{
																			pos: position{line: 179, col: 21, offset: 7160},
																			exprs: []interface{}{
																				&litMatcher{
																					pos:        position{line: 179, col: 21, offset: 7160},
																					val:        "[",
																					ignoreCase: false,
																				},
																				&labeledExpr{
																					pos:   position{line: 179, col: 25, offset: 7164},
																					label: "attributes",
																					expr: &zeroOrMoreExpr{
																						pos: position{line: 179, col: 36, offset: 7175},
																						expr: &seqExpr{
																							pos: position{line: 179, col: 37, offset: 7176},
																							exprs: []interface{}{
																								&notExpr{
																									pos: position{line: 179, col: 37, offset: 7176},
																									expr: &litMatcher{
																										pos:        position{line: 179, col: 38, offset: 7177},
																										val:        "]",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 179, col: 42, offset: 7181},
																									expr: &choiceExpr{
																										pos: position{line: 717, col: 12, offset: 30188},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 717, col: 12, offset: 30188},
																												val:        "\r\n",
																												ignoreCase: false,
																											},
																											&charClassMatcher{
																												pos:        position{line: 717, col: 21, offset: 30197},
																												val:        "[\\r\\n]",
																												chars:      []rune{'\r', '\n'},
																												ignoreCase: false,
																												inverted:   false,
																											},
																										},
																									},
																								},
																								&notExpr{
																									pos: position{line: 179, col: 51, offset: 7190},
																									expr: &notExpr{
																										pos: position{line: 719, col: 8, offset: 30217},
																										expr: &anyMatcher{
																											line: 719, col: 9, offset: 30218,
																										},
																									},
																								},
																								&anyMatcher{
																									line: 179, col: 56, offset: 7195,
																								},
																							},
																						},
																					},
																				},
																				&litMatcher{
																					pos:        position{line: 179, col: 60, offset: 7199},
																					val:        "]",
																					ignoreCase: false,
																				},
																			},
																		},
																	},
																},
															},
														},
													},
												},
												&zeroOrMoreExpr{
													pos: position{line: 599, col: 69, offset: 25723},
													expr: &choiceExpr{
														pos: position{line: 713, col: 7, offset: 30126},
														alternatives: []interface{}{
															&litMatcher{
																pos:        position{line: 713, col: 7, offset: 30126},
																val:        " ",
																ignoreCase: false,
															},
															&actionExpr{
																pos: position{line: 713, col: 13, offset: 30132},
																run: (*parser).callonDocumentBlock436,
																expr: &litMatcher{
																	pos:        position{line: 713, col: 13, offset: 30132},
																	val:        "\t",
																	ignoreCase: false,
																},
															},
														},
													},
												},
												&choiceExpr{
													pos: position{line: 721, col: 8, offset: 30228},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 717, col: 12, offset: 30188},
															val:        "\r\n",
															ignoreCase: false,
														},
														&charClassMatcher{
															pos:        position{line: 717, col: 21, offset: 30197},
															val:        "[\\r\\n]",
															chars:      []rune{'\r', '\n'},
															ignoreCase: false,
															inverted:   false,
														},
														&notExpr{
															pos: position{line: 719, col: 8, offset: 30217},
															expr: &anyMatcher{
																line: 719, col: 9, offset: 30218,
															},
														},
													},
												},
											},
										},
									},
									&actionExpr{
										pos: position{line: 659, col: 24, offset: 28490},
										run: (*parser).callonDocumentBlock443,
										expr: &seqExpr{
											pos: position{line: 659, col: 24, offset: 28490},
											exprs: []interface{}{
												&labeledExpr{
													pos:   position{line: 659, col: 24, offset: 28490},
													label: "spaces",
													expr: &oneOrMoreExpr{
														pos: position{line: 659, col: 32, offset: 28498},
														expr: &choiceExpr{
															pos: position{line: 713, col: 7, offset: 30126},
															alternatives: []interface{}{
																&litMatcher{
																	pos:        position{line: 713, col: 7, offset: 30126},
																	val:        " ",
																	ignoreCase: false,
																},
																&actionExpr{
																	pos: position{line: 713, col: 13, offset: 30132},
																	run: (*parser).callonDocumentBlock449,
																	expr: &litMatcher{
																		pos:        position{line: 713, col: 13, offset: 30132},
																		val:        "\t",
																		ignoreCase: false,
																	},
																},
															},
														},
													},
												},
												&notExpr{
													pos: position{line: 659, col: 37, offset: 28503},
													expr: &choiceExpr{
														pos: position{line: 717, col: 12, offset: 30188},
														alternatives: []interface{}{
															&litMatcher{
																pos:        position{line: 717, col: 12, offset: 30188},
																val:        "\r\n",
																ignoreCase: false,
															},
															&charClassMatcher{
																pos:        position{line: 717, col: 21, offset: 30197},
																val:        "[\\r\\n]",
																chars:      []rune{'\r', '\n'},
																ignoreCase: false,
																inverted:   false,
															},
														},
													},
												},
												&labeledExpr{
													pos:   position{line: 659, col: 46, offset: 28512},
													label: "content",
													expr: &actionExpr{
														pos: position{line: 664, col: 24, offset: 28746},
														run: (*parser).callonDocumentBlock456,
														expr: &labeledExpr{
															pos:   position{line: 664, col: 24, offset: 28746},
															label: "content",
															expr: &oneOrMoreExpr{
																pos: position{line: 664, col: 32, offset: 28754},
																expr: &seqExpr{
																	pos: position{line: 664, col: 33, offset: 28755},
																	exprs: []interface{}{
																		&notExpr{
																			pos: position{line: 664, col: 33, offset: 28755},
																			expr: &seqExpr{
																				pos: position{line: 664, col: 35, offset: 28757},
																				exprs: []interface{}{
																					&choiceExpr{
																						pos: position{line: 717, col: 12, offset: 30188},
																						alternatives: []interface{}{
																							&litMatcher{
																								pos:        position{line: 717, col: 12, offset: 30188},
																								val:        "\r\n",
																								ignoreCase: false,
																							},
																							&charClassMatcher{
																								pos:        position{line: 717, col: 21, offset: 30197},
																								val:        "[\\r\\n]",
																								chars:      []rune{'\r', '\n'},
																								ignoreCase: false,
																								inverted:   false,
																							},
																						},
																					},
																					&actionExpr{
																						pos: position{line: 686, col: 14, offset: 29590},
																						run: (*parser).callonDocumentBlock465,
																						expr: &seqExpr{
																							pos: position{line: 686, col: 14, offset: 29590},
																							exprs: []interface{}{
																								&notExpr{
																									pos: position{line: 686, col: 14, offset: 29590},
																									expr: &notExpr{
																										pos: position{line: 719, col: 8, offset: 30217},
																										expr: &anyMatcher{
																											line: 719, col: 9, offset: 30218,
																										},
																									},
																								},
																								&zeroOrMoreExpr{
																									pos: position{line: 686, col: 19, offset: 29595},
																									expr: &choiceExpr{
																										pos: position{line: 713, col: 7, offset: 30126},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 713, col: 7, offset: 30126},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 713, col: 13, offset: 30132},
																												run: (*parser).callonDocumentBlock473,
																												expr: &litMatcher{
																													pos:        position{line: 713, col: 13, offset: 30132},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																								&choiceExpr{
																									pos: position{line: 721, col: 8, offset: 30228},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 717, col: 12, offset: 30188},
																											val:        "\r\n",
																											ignoreCase: false,
																										},
																										&charClassMatcher{
																											pos:        position{line: 717, col: 21, offset: 30197},
																											val:        "[\\r\\n]",
																											chars:      []rune{'\r', '\n'},
																											ignoreCase: false,
																											inverted:   false,
																										},
																										&notExpr{
																											pos: position{line: 719, col: 8, offset: 30217},
																											expr: &anyMatcher{
																												line: 719, col: 9, offset: 30218,
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																		&anyMatcher{
																			line: 664, col: 54, offset: 28776,
																		},
																	},
																},
															},
														},
													},
												},
												&choiceExpr{
													pos: position{line: 669, col: 22, offset: 28882},
													alternatives: []interface{}{
														&seqExpr{
															pos: position{line: 669, col: 22, offset: 28882},
															exprs: []interface{}{
																&choiceExpr{
																	pos: position{line: 717, col: 12, offset: 30188},
																	alternatives: []interface{}{
																		&litMatcher{
																			pos:        position{line: 717, col: 12, offset: 30188},
																			val:        "\r\n",
																			ignoreCase: false,
																		},
																		&charClassMatcher{
																			pos:        position{line: 717, col: 21, offset: 30197},
																			val:        "[\\r\\n]",
																			chars:      []rune{'\r', '\n'},
																			ignoreCase: false,
																			inverted:   false,
																		},
																	},
																},
																&actionExpr{
																	pos: position{line: 686, col: 14, offset: 29590},
																	run: (*parser).callonDocumentBlock486,
																	expr: &seqExpr{
																		pos: position{line: 686, col: 14, offset: 29590},
																		exprs: []interface{}{
																			&notExpr{
																				pos: position{line: 686, col: 14, offset: 29590},
																				expr: &notExpr{
																					pos: position{line: 719, col: 8, offset: 30217},
																					expr: &anyMatcher{
																						line: 719, col: 9, offset: 30218,
																					},
																				},
																			},
																			&zeroOrMoreExpr{
																				pos: position{line: 686, col: 19, offset: 29595},
																				expr: &choiceExpr{
																					pos: position{line: 713, col: 7, offset: 30126},
																					alternatives: []interface{}{
																						&litMatcher{
																							pos:        position{line: 713, col: 7, offset: 30126},
																							val:        " ",
																							ignoreCase: false,
																						},
																						&actionExpr{
																							pos: position{line: 713, col: 13, offset: 30132},
																							run: (*parser).callonDocumentBlock494,
																							expr: &litMatcher{
																								pos:        position{line: 713, col: 13, offset: 30132},
																								val:        "\t",
																								ignoreCase: false,
																							},
																						},
																					},
																				},
																			},
																			&choiceExpr{
																				pos: position{line: 721, col: 8, offset: 30228},
																				alternatives: []interface{}{
																					&litMatcher{
																						pos:        position{line: 717, col: 12, offset: 30188},
																						val:        "\r\n",
																						ignoreCase: false,
																					},
																					&charClassMatcher{
																						pos:        position{line: 717, col: 21, offset: 30197},
																						val:        "[\\r\\n]",
																						chars:      []rune{'\r', '\n'},
																						ignoreCase: false,
																						inverted:   false,
																					},
																					&notExpr{
																						pos: position{line: 719, col: 8, offset: 30217},
																						expr: &anyMatcher{
																							line: 719, col: 9, offset: 30218,
																						},
																					},
																				},
																			},
																		},
																	},
																},
															},
														},
														&litMatcher{
															pos:        position{line: 717, col: 12, offset: 30188},
															val:        "\r\n",
															ignoreCase: false,
														},
														&charClassMatcher{
															pos:        position{line: 717, col: 21, offset: 30197},
															val:        "[\\r\\n]",
															chars:      []rune{'\r', '\n'},
															ignoreCase: false,
															inverted:   false,
														},
														&notExpr{
															pos: position{line: 719, col: 8, offset: 30217},
															expr: &anyMatcher{
																line: 719, col: 9, offset: 30218,
															},
														},
													},
												},
											},
										},
									},
									&actionExpr{
										pos: position{line: 672, col: 39, offset: 29010},
										run: (*parser).callonDocumentBlock505,
										expr: &seqExpr{
											pos: position{line: 672, col: 39, offset: 29010},
											exprs: []interface{}{
												&litMatcher{
													pos:        position{line: 676, col: 26, offset: 29225},
													val:        "....",
													ignoreCase: false,
												},
												&zeroOrMoreExpr{
													pos: position{line: 672, col: 61, offset: 29032},
													expr: &choiceExpr{
														pos: position{line: 713, col: 7, offset: 30126},
														alternatives: []interface{}{
															&litMatcher{
																pos:        position{line: 713, col: 7, offset: 30126},
																val:        " ",
																ignoreCase: false,
															},
															&actionExpr{
																pos: position{line: 713, col: 13, offset: 30132},
																run: (*parser).callonDocumentBlock511,
																expr: &litMatcher{
																	pos:        position{line: 713, col: 13, offset: 30132},
																	val:        "\t",
																	ignoreCase: false,
																},
															},
														},
													},
												},
												&choiceExpr{
													pos: position{line: 717, col: 12, offset: 30188},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 717, col: 12, offset: 30188},
															val:        "\r\n",
															ignoreCase: false,
														},
														&charClassMatcher{
															pos:        position{line: 717, col: 21, offset: 30197},
															val:        "[\\r\\n]",
															chars:      []rune{'\r', '\n'},
															ignoreCase: false,
															inverted:   false,
														},
													},
												},
												&labeledExpr{
													pos:   position{line: 672, col: 73, offset: 29044},
													label: "content",
													expr: &zeroOrMoreExpr{
														pos: position{line: 672, col: 81, offset: 29052},
														expr: &seqExpr{
															pos: position{line: 672, col: 82, offset: 29053},
															exprs: []interface{}{
																&notExpr{
																	pos: position{line: 672, col: 82, offset: 29053},
																	expr: &litMatcher{
																		pos:        position{line: 676, col: 26, offset: 29225},
																		val:        "....",
																		ignoreCase: false,
																	},
																},
																&anyMatcher{
																	line: 672, col: 105, offset: 29076,
																},
															},
														},
													},
												},
												&choiceExpr{
													pos: position{line: 672, col: 110, offset: 29081},
													alternatives: []interface{}{
														&seqExpr{
															pos: position{line: 672, col: 111, offset: 29082},
															exprs: []interface{}{
																&litMatcher{
																	pos:        position{line: 676, col: 26, offset: 29225},
																	val:        "....",
																	ignoreCase: false,
																},
																&zeroOrMoreExpr{
																	pos: position{line: 672, col: 133, offset: 29104},
																	expr: &choiceExpr{
																		pos: position{line: 713, col: 7, offset: 30126},
																		alternatives: []interface{}{
																			&litMatcher{
																				pos:        position{line: 713, col: 7, offset: 30126},
																				val:        " ",
																				ignoreCase: false,
																			},
																			&actionExpr{
																				pos: position{line: 713, col: 13, offset: 30132},
																				run: (*parser).callonDocumentBlock528,
																				expr: &litMatcher{
																					pos:        position{line: 713, col: 13, offset: 30132},
																					val:        "\t",
																					ignoreCase: false,
																				},
																			},
																		},
																	},
																},
																&choiceExpr{
																	pos: position{line: 721, col: 8, offset: 30228},
																	alternatives: []interface{}{
																		&litMatcher{
																			pos:        position{line: 717, col: 12, offset: 30188},
																			val:        "\r\n",
																			ignoreCase: false,
																		},
																		&charClassMatcher{
																			pos:        position{line: 717, col: 21, offset: 30197},
																			val:        "[\\r\\n]",
																			chars:      []rune{'\r', '\n'},
																			ignoreCase: false,
																			inverted:   false,
																		},
																		&notExpr{
																			pos: position{line: 719, col: 8, offset: 30217},
																			expr: &anyMatcher{
																				line: 719, col: 9, offset: 30218,
																			},
																		},
																	},
																},
															},
														},
														&notExpr{
															pos: position{line: 719, col: 8, offset: 30217},
															expr: &anyMatcher{
																line: 719, col: 9, offset: 30218,
															},
														},
													},
												},
											},
										},
									},
									&actionExpr{
										pos: position{line: 679, col: 34, offset: 29320},
										run: (*parser).callonDocumentBlock537,
										expr: &seqExpr{
											pos: position{line: 679, col: 34, offset: 29320},
											exprs: []interface{}{
												&litMatcher{
													pos:        position{line: 679, col: 34, offset: 29320},
													val:        "[literal]",
													ignoreCase: false,
												},
												&zeroOrMoreExpr{
													pos: position{line: 679, col: 46, offset: 29332},
													expr: &choiceExpr{
														pos: position{line: 713, col: 7, offset: 30126},
														alternatives: []interface{}{
															&litMatcher{
																pos:        position{line: 713, col: 7, offset: 30126},
																val:        " ",
																ignoreCase: false,
															},
															&actionExpr{
																pos: position{line: 713, col: 13, offset: 30132},
																run: (*parser).callonDocumentBlock543,
																expr: &litMatcher{
																	pos:        position{line: 713, col: 13, offset: 30132},
																	val:        "\t",
																	ignoreCase: false,
																},
															},
														},
													},
												},
												&choiceExpr{
													pos: position{line: 717, col: 12, offset: 30188},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 717, col: 12, offset: 30188},
															val:        "\r\n",
															ignoreCase: false,
														},
														&charClassMatcher{
															pos:        position{line: 717, col: 21, offset: 30197},
															val:        "[\\r\\n]",
															chars:      []rune{'\r', '\n'},
															ignoreCase: false,
															inverted:   false,
														},
													},
												},
												&labeledExpr{
													pos:   position{line: 679, col: 58, offset: 29344},
													label: "content",
													expr: &actionExpr{
														pos: position{line: 664, col: 24, offset: 28746},
														run: (*parser).callonDocumentBlock549,
														expr: &labeledExpr{
															pos:   position{line: 664, col: 24, offset: 28746},
															label: "content",
															expr: &oneOrMoreExpr{
																pos: position{line: 664, col: 32, offset: 28754},
																expr: &seqExpr{
																	pos: position{line: 664, col: 33, offset: 28755},
																	exprs: []interface{}{
																		&notExpr{
																			pos: position{line: 664, col: 33, offset: 28755},
																			expr: &seqExpr{
																				pos: position{line: 664, col: 35, offset: 28757},
																				exprs: []interface{}{
																					&choiceExpr{
																						pos: position{line: 717, col: 12, offset: 30188},
																						alternatives: []interface{}{
																							&litMatcher{
																								pos:        position{line: 717, col: 12, offset: 30188},
																								val:        "\r\n",
																								ignoreCase: false,
																							},
																							&charClassMatcher{
																								pos:        position{line: 717, col: 21, offset: 30197},
																								val:        "[\\r\\n]",
																								chars:      []rune{'\r', '\n'},
																								ignoreCase: false,
																								inverted:   false,
																							},
																						},
																					},
																					&actionExpr{
																						pos: position{line: 686, col: 14, offset: 29590},
																						run: (*parser).callonDocumentBlock558,
																						expr: &seqExpr{
																							pos: position{line: 686, col: 14, offset: 29590},
																							exprs: []interface{}{
																								&notExpr{
																									pos: position{line: 686, col: 14, offset: 29590},
																									expr: &notExpr{
																										pos: position{line: 719, col: 8, offset: 30217},
																										expr: &anyMatcher{
																											line: 719, col: 9, offset: 30218,
																										},
																									},
																								},
																								&zeroOrMoreExpr{
																									pos: position{line: 686, col: 19, offset: 29595},
																									expr: &choiceExpr{
																										pos: position{line: 713, col: 7, offset: 30126},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 713, col: 7, offset: 30126},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 713, col: 13, offset: 30132},
																												run: (*parser).callonDocumentBlock566,
																												expr: &litMatcher{
																													pos:        position{line: 713, col: 13, offset: 30132},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																								&choiceExpr{
																									pos: position{line: 721, col: 8, offset: 30228},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 717, col: 12, offset: 30188},
																											val:        "\r\n",
																											ignoreCase: false,
																										},
																										&charClassMatcher{
																											pos:        position{line: 717, col: 21, offset: 30197},
																											val:        "[\\r\\n]",
																											chars:      []rune{'\r', '\n'},
																											ignoreCase: false,
																											inverted:   false,
																										},
																										&notExpr{
																											pos: position{line: 719, col: 8, offset: 30217},
																											expr: &anyMatcher{
																												line: 719, col: 9, offset: 30218,
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																		&anyMatcher{
																			line: 664, col: 54, offset: 28776,
																		},
																	},
																},
															},
														},
													},
												},
												&choiceExpr{
													pos: position{line: 669, col: 22, offset: 28882},
													alternatives: []interface{}{
														&seqExpr{
															pos: position{line: 669, col: 22, offset: 28882},
															exprs: []interface{}{
																&choiceExpr{
																	pos: position{line: 717, col: 12, offset: 30188},
																	alternatives: []interface{}{
																		&litMatcher{
																			pos:        position{line: 717, col: 12, offset: 30188},
																			val:        "\r\n",
																			ignoreCase: false,
																		},
																		&charClassMatcher{
																			pos:        position{line: 717, col: 21, offset: 30197},
																			val:        "[\\r\\n]",
																			chars:      []rune{'\r', '\n'},
																			ignoreCase: false,
																			inverted:   false,
																		},
																	},
																},
																&actionExpr{
																	pos: position{line: 686, col: 14, offset: 29590},
																	run: (*parser).callonDocumentBlock579,
																	expr: &seqExpr{
																		pos: position{line: 686, col: 14, offset: 29590},
																		exprs: []interface{}{
																			&notExpr{
																				pos: position{line: 686, col: 14, offset: 29590},
																				expr: &notExpr{
																					pos: position{line: 719, col: 8, offset: 30217},
																					expr: &anyMatcher{
																						line: 719, col: 9, offset: 30218,
																					},
																				},
																			},
																			&zeroOrMoreExpr{
																				pos: position{line: 686, col: 19, offset: 29595},
																				expr: &choiceExpr{
																					pos: position{line: 713, col: 7, offset: 30126},
																					alternatives: []interface{}{
																						&litMatcher{
																							pos:        position{line: 713, col: 7, offset: 30126},
																							val:        " ",
																							ignoreCase: false,
																						},
																						&actionExpr{
																							pos: position{line: 713, col: 13, offset: 30132},
																							run: (*parser).callonDocumentBlock587,
																							expr: &litMatcher{
																								pos:        position{line: 713, col: 13, offset: 30132},
																								val:        "\t",
																								ignoreCase: false,
																							},
																						},
																					},
																				},
																			},
																			&choiceExpr{
																				pos: position{line: 721, col: 8, offset: 30228},
																				alternatives: []interface{}{
																					&litMatcher{
																						pos:        position{line: 717, col: 12, offset: 30188},
																						val:        "\r\n",
																						ignoreCase: false,
																					},
																					&charClassMatcher{
																						pos:        position{line: 717, col: 21, offset: 30197},
																						val:        "[\\r\\n]",
																						chars:      []rune{'\r', '\n'},
																						ignoreCase: false,
																						inverted:   false,
																					},
																					&notExpr{
																						pos: position{line: 719, col: 8, offset: 30217},
																						expr: &anyMatcher{
																							line: 719, col: 9, offset: 30218,
																						},
																					},
																				},
																			},
																		},
																	},
																},
															},
														},
														&litMatcher{
															pos:        position{line: 717, col: 12, offset: 30188},
															val:        "\r\n",
															ignoreCase: false,
														},
														&charClassMatcher{
															pos:        position{line: 717, col: 21, offset: 30197},
															val:        "[\\r\\n]",
															chars:      []rune{'\r', '\n'},
															ignoreCase: false,
															inverted:   false,
														},
														&notExpr{
															pos: position{line: 719, col: 8, offset: 30217},
															expr: &anyMatcher{
																line: 719, col: 9, offset: 30218,
															},
														},
													},
												},
											},
										},
									},
									&ruleRefExpr{
										pos:  position{line: 23, col: 138, offset: 926},
										name: "DelimitedBlock",
									},
									&ruleRefExpr{
										pos:  position{line: 23, col: 155, offset: 943},
										name: "Paragraph",
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "FrontMatter",
			pos:  position{line: 30, col: 1, offset: 1151},
			expr: &ruleRefExpr{
				pos:  position{line: 30, col: 16, offset: 1166},
				name: "YamlFrontMatter",
			},
		},
		{
			name: "FrontMatter",
			pos:  position{line: 32, col: 1, offset: 1184},
			expr: &actionExpr{
				pos: position{line: 32, col: 16, offset: 1199},
				run: (*parser).callonFrontMatter1,
				expr: &seqExpr{
					pos: position{line: 32, col: 16, offset: 1199},
					exprs: []interface{}{
						&litMatcher{
							pos:        position{line: 36, col: 26, offset: 1358},
							val:        "---",
							ignoreCase: false,
						},
						&choiceExpr{
							pos: position{line: 721, col: 8, offset: 30228},
							alternatives: []interface{}{
								&litMatcher{
									pos:        position{line: 717, col: 12, offset: 30188},
									val:        "\r\n",
									ignoreCase: false,
								},
								&charClassMatcher{
									pos:        position{line: 717, col: 21, offset: 30197},
									val:        "[\\r\\n]",
									chars:      []rune{'\r', '\n'},
									ignoreCase: false,
									inverted:   false,
								},
								&notExpr{
									pos: position{line: 719, col: 8, offset: 30217},
									expr: &anyMatcher{
										line: 719, col: 9, offset: 30218,
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 32, col: 37, offset: 1220},
							label: "content",
							expr: &actionExpr{
								pos: position{line: 38, col: 27, offset: 1395},
								run: (*parser).callonFrontMatter10,
								expr: &zeroOrMoreExpr{
									pos: position{line: 38, col: 27, offset: 1395},
									expr: &seqExpr{
										pos: position{line: 38, col: 28, offset: 1396},
										exprs: []interface{}{
											&notExpr{
												pos: position{line: 38, col: 28, offset: 1396},
												expr: &seqExpr{
													pos: position{line: 36, col: 26, offset: 1358},
													exprs: []interface{}{
														&litMatcher{
															pos:        position{line: 36, col: 26, offset: 1358},
															val:        "---",
															ignoreCase: false,
														},
														&choiceExpr{
															pos: position{line: 721, col: 8, offset: 30228},
															alternatives: []interface{}{
																&litMatcher{
																	pos:        position{line: 717, col: 12, offset: 30188},
																	val:        "\r\n",
																	ignoreCase: false,
																},
																&charClassMatcher{
																	pos:        position{line: 717, col: 21, offset: 30197},
																	val:        "[\\r\\n]",
																	chars:      []rune{'\r', '\n'},
																	ignoreCase: false,
																	inverted:   false,
																},
																&notExpr{
																	pos: position{line: 719, col: 8, offset: 30217},
																	expr: &anyMatcher{
																		line: 719, col: 9, offset: 30218,
																	},
																},
															},
														},
													},
												},
											},
											&anyMatcher{
												line: 38, col: 50, offset: 1418,
											},
										},
									},
								},
							},
						},
						&litMatcher{
							pos:        position{line: 36, col: 26, offset: 1358},
							val:        "---",
							ignoreCase: false,
						},
						&choiceExpr{
							pos: position{line: 721, col: 8, offset: 30228},
							alternatives: []interface{}{
								&litMatcher{
									pos:        position{line: 717, col: 12, offset: 30188},
									val:        "\r\n",
									ignoreCase: false,
								},
								&charClassMatcher{
									pos:        position{line: 717, col: 21, offset: 30197},
									val:        "[\\r\\n]",
									chars:      []rune{'\r', '\n'},
									ignoreCase: false,
									inverted:   false,
								},
								&notExpr{
									pos: position{line: 719, col: 8, offset: 30217},
									expr: &anyMatcher{
										line: 719, col: 9, offset: 30218,
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "DocumentHeader",
			pos:  position{line: 46, col: 1, offset: 1642},
			expr: &actionExpr{
				pos: position{line: 46, col: 19, offset: 1660},
				run: (*parser).callonDocumentHeader1,
				expr: &seqExpr{
					pos: position{line: 46, col: 19, offset: 1660},
					exprs: []interface{}{
						&labeledExpr{
							pos:   position{line: 46, col: 19, offset: 1660},
							label: "header",
							expr: &ruleRefExpr{
								pos:  position{line: 46, col: 27, offset: 1668},
								name: "Section0Title",
							},
						},
						&labeledExpr{
							pos:   position{line: 46, col: 42, offset: 1683},
							label: "authors",
							expr: &zeroOrOneExpr{
								pos: position{line: 46, col: 51, offset: 1692},
								expr: &choiceExpr{
									pos: position{line: 50, col: 20, offset: 1906},
									alternatives: []interface{}{
										&actionExpr{
											pos: position{line: 52, col: 30, offset: 1993},
											run: (*parser).callonDocumentHeader8,
											expr: &seqExpr{
												pos: position{line: 52, col: 30, offset: 1993},
												exprs: []interface{}{
													&zeroOrMoreExpr{
														pos: position{line: 52, col: 30, offset: 1993},
														expr: &choiceExpr{
															pos: position{line: 713, col: 7, offset: 30126},
															alternatives: []interface{}{
																&litMatcher{
																	pos:        position{line: 713, col: 7, offset: 30126},
																	val:        " ",
																	ignoreCase: false,
																},
																&actionExpr{
																	pos: position{line: 713, col: 13, offset: 30132},
																	run: (*parser).callonDocumentHeader13,
																	expr: &litMatcher{
																		pos:        position{line: 713, col: 13, offset: 30132},
																		val:        "\t",
																		ignoreCase: false,
																	},
																},
															},
														},
													},
													&notExpr{
														pos: position{line: 52, col: 34, offset: 1997},
														expr: &litMatcher{
															pos:        position{line: 52, col: 35, offset: 1998},
															val:        ":",
															ignoreCase: false,
														},
													},
													&labeledExpr{
														pos:   position{line: 52, col: 39, offset: 2002},
														label: "authors",
														expr: &oneOrMoreExpr{
															pos: position{line: 52, col: 48, offset: 2011},
															expr: &actionExpr{
																pos: position{line: 60, col: 19, offset: 2262},
																run: (*parser).callonDocumentHeader19,
																expr: &seqExpr{
																	pos: position{line: 60, col: 19, offset: 2262},
																	exprs: []interface{}{
																		&zeroOrMoreExpr{
																			pos: position{line: 60, col: 19, offset: 2262},
																			expr: &choiceExpr{
																				pos: position{line: 713, col: 7, offset: 30126},
																				alternatives: []interface{}{
																					&litMatcher{
																						pos:        position{line: 713, col: 7, offset: 30126},
																						val:        " ",
																						ignoreCase: false,
																					},
																					&actionExpr{
																						pos: position{line: 713, col: 13, offset: 30132},
																						run: (*parser).callonDocumentHeader24,
																						expr: &litMatcher{
																							pos:        position{line: 713, col: 13, offset: 30132},
																							val:        "\t",
																							ignoreCase: false,
																						},
																					},
																				},
																			},
																		},
																		&labeledExpr{
																			pos:   position{line: 60, col: 23, offset: 2266},
																			label: "namePart1",
																			expr: &seqExpr{
																				pos: position{line: 65, col: 27, offset: 2602},
																				exprs: []interface{}{
																					&notExpr{
																						pos: position{line: 65, col: 27, offset: 2602},
																						expr: &litMatcher{
																							pos:        position{line: 65, col: 28, offset: 2603},
																							val:        "<",
																							ignoreCase: false,
																						},
																					},
																					&notExpr{
																						pos: position{line: 65, col: 32, offset: 2607},
																						expr: &litMatcher{
																							pos:        position{line: 65, col: 33, offset: 2608},
																							val:        ";",
																							ignoreCase: false,
																						},
																					},
																					&actionExpr{
																						pos: position{line: 693, col: 9, offset: 29754},
																						run: (*parser).callonDocumentHeader32,
																						expr: &oneOrMoreExpr{
																							pos: position{line: 693, col: 9, offset: 29754},
																							expr: &seqExpr{
																								pos: position{line: 693, col: 10, offset: 29755},
																								exprs: []interface{}{
																									&notExpr{
																										pos: position{line: 693, col: 10, offset: 29755},
																										expr: &choiceExpr{
																											pos: position{line: 717, col: 12, offset: 30188},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 717, col: 12, offset: 30188},
																													val:        "\r\n",
																													ignoreCase: false,
																												},
																												&charClassMatcher{
																													pos:        position{line: 717, col: 21, offset: 30197},
																													val:        "[\\r\\n]",
																													chars:      []rune{'\r', '\n'},
																													ignoreCase: false,
																													inverted:   false,
																												},
																											},
																										},
																									},
																									&notExpr{
																										pos: position{line: 693, col: 19, offset: 29764},
																										expr: &choiceExpr{
																											pos: position{line: 713, col: 7, offset: 30126},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 713, col: 7, offset: 30126},
																													val:        " ",
																													ignoreCase: false,
																												},
																												&actionExpr{
																													pos: position{line: 713, col: 13, offset: 30132},
																													run: (*parser).callonDocumentHeader42,
																													expr: &litMatcher{
																														pos:        position{line: 713, col: 13, offset: 30132},
																														val:        "\t",
																														ignoreCase: false,
																													},
																												},
																											},
																										},
																									},
																									&anyMatcher{
																										line: 693, col: 23, offset: 29768,
																									},
																								},
																							},
																						},
																					},
																					&zeroOrMoreExpr{
																						pos: position{line: 65, col: 42, offset: 2617},
																						expr: &choiceExpr{
																							pos: position{line: 713, col: 7, offset: 30126},
																							alternatives: []interface{}{
																								&litMatcher{
																									pos:        position{line: 713, col: 7, offset: 30126},
																									val:        " ",
																									ignoreCase: false,
																								},
																								&actionExpr{
																									pos: position{line: 713, col: 13, offset: 30132},
																									run: (*parser).callonDocumentHeader48,
																									expr: &litMatcher{
																										pos:        position{line: 713, col: 13, offset: 30132},
																										val:        "\t",
																										ignoreCase: false,
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																		&labeledExpr{
																			pos:   position{line: 60, col: 58, offset: 2301},
																			label: "namePart2",
																			expr: &zeroOrOneExpr{
																				pos: position{line: 60, col: 68, offset: 2311},
																				expr: &seqExpr{
																					pos: position{line: 65, col: 27, offset: 2602},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 65, col: 27, offset: 2602},
																							expr: &litMatcher{
																								pos:        position{line: 65, col: 28, offset: 2603},
																								val:        "<",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 65, col: 32, offset: 2607},
																							expr: &litMatcher{
																								pos:        position{line: 65, col: 33, offset: 2608},
																								val:        ";",
																								ignoreCase: false,
																							},
																						},
																						&actionExpr{
																							pos: position{line: 693, col: 9, offset: 29754},
																							run: (*parser).callonDocumentHeader57,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 693, col: 9, offset: 29754},
																								expr: &seqExpr{
																									pos: position{line: 693, col: 10, offset: 29755},
																									exprs: []interface{}{
																										&notExpr{
																											pos: position{line: 693, col: 10, offset: 29755},
																											expr: &choiceExpr{
																												pos: position{line: 717, col: 12, offset: 30188},
																												alternatives: []interface{}{
																													&litMatcher{
																														pos:        position{line: 717, col: 12, offset: 30188},
																														val:        "\r\n",
																														ignoreCase: false,
																													},
																													&charClassMatcher{
																														pos:        position{line: 717, col: 21, offset: 30197},
																														val:        "[\\r\\n]",
																														chars:      []rune{'\r', '\n'},
																														ignoreCase: false,
																														inverted:   false,
																													},
																												},
																											},
																										},
																										&notExpr{
																											pos: position{line: 693, col: 19, offset: 29764},
																											expr: &choiceExpr{
																												pos: position{line: 713, col: 7, offset: 30126},
																												alternatives: []interface{}{
																													&litMatcher{
																														pos:        position{line: 713, col: 7, offset: 30126},
																														val:        " ",
																														ignoreCase: false,
																													},
																													&actionExpr{
																														pos: position{line: 713, col: 13, offset: 30132},
																														run: (*parser).callonDocumentHeader67,
																														expr: &litMatcher{
																															pos:        position{line: 713, col: 13, offset: 30132},
																															val:        "\t",
																															ignoreCase: false,
																														},
																													},
																												},
																											},
																										},
																										&anyMatcher{
																											line: 693, col: 23, offset: 29768,
																										},
																									},
																								},
																							},
																						},
																						&zeroOrMoreExpr{
																							pos: position{line: 65, col: 42, offset: 2617},
																							expr: &choiceExpr{
																								pos: position{line: 713, col: 7, offset: 30126},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 713, col: 7, offset: 30126},
																										val:        " ",
																										ignoreCase: false,
																									},
																									&actionExpr{
																										pos: position{line: 713, col: 13, offset: 30132},
																										run: (*parser).callonDocumentHeader73,
																										expr: &litMatcher{
																											pos:        position{line: 713, col: 13, offset: 30132},
																											val:        "\t",
																											ignoreCase: false,
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																		&labeledExpr{
																			pos:   position{line: 60, col: 94, offset: 2337},
																			label: "namePart3",
																			expr: &zeroOrOneExpr{
																				pos: position{line: 60, col: 104, offset: 2347},
																				expr: &seqExpr{
																					pos: position{line: 65, col: 27, offset: 2602},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 65, col: 27, offset: 2602},
																							expr: &litMatcher{
																								pos:        position{line: 65, col: 28, offset: 2603},
																								val:        "<",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 65, col: 32, offset: 2607},
																							expr: &litMatcher{
																								pos:        position{line: 65, col: 33, offset: 2608},
																								val:        ";",
																								ignoreCase: false,
																							},
																						},
																						&actionExpr{
																							pos: position{line: 693, col: 9, offset: 29754},
																							run: (*parser).callonDocumentHeader82,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 693, col: 9, offset: 29754},
																								expr: &seqExpr{
																									pos: position{line: 693, col: 10, offset: 29755},
																									exprs: []interface{}{
																										&notExpr{
																											pos: position{line: 693, col: 10, offset: 29755},
																											expr: &choiceExpr{
																												pos: position{line: 717, col: 12, offset: 30188},
																												alternatives: []interface{}{
																													&litMatcher{
																														pos:        position{line: 717, col: 12, offset: 30188},
																														val:        "\r\n",
																														ignoreCase: false,
																													},
																													&charClassMatcher{
																														pos:        position{line: 717, col: 21, offset: 30197},
																														val:        "[\\r\\n]",
																														chars:      []rune{'\r', '\n'},
																														ignoreCase: false,
																														inverted:   false,
																													},
																												},
																											},
																										},
																										&notExpr{
																											pos: position{line: 693, col: 19, offset: 29764},
																											expr: &choiceExpr{
																												pos: position{line: 713, col: 7, offset: 30126},
																												alternatives: []interface{}{
																													&litMatcher{
																														pos:        position{line: 713, col: 7, offset: 30126},
																														val:        " ",
																														ignoreCase: false,
																													},
																													&actionExpr{
																														pos: position{line: 713, col: 13, offset: 30132},
																														run: (*parser).callonDocumentHeader92,
																														expr: &litMatcher{
																															pos:        position{line: 713, col: 13, offset: 30132},
																															val:        "\t",
																															ignoreCase: false,
																														},
																													},
																												},
																											},
																										},
																										&anyMatcher{
																											line: 693, col: 23, offset: 29768,
																										},
																									},
																								},
																							},
																						},
																						&zeroOrMoreExpr{
																							pos: position{line: 65, col: 42, offset: 2617},
																							expr: &choiceExpr{
																								pos: position{line: 713, col: 7, offset: 30126},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 713, col: 7, offset: 30126},
																										val:        " ",
																										ignoreCase: false,
																									},
																									&actionExpr{
																										pos: position{line: 713, col: 13, offset: 30132},
																										run: (*parser).callonDocumentHeader98,
																										expr: &litMatcher{
																											pos:        position{line: 713, col: 13, offset: 30132},
																											val:        "\t",
																											ignoreCase: false,
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																		&labeledExpr{
																			pos:   position{line: 60, col: 130, offset: 2373},
																			label: "email",
																			expr: &zeroOrOneExpr{
																				pos: position{line: 60, col: 136, offset: 2379},
																				expr: &seqExpr{
																					pos: position{line: 67, col: 24, offset: 2645},
																					exprs: []interface{}{
																						&litMatcher{
																							pos:        position{line: 67, col: 24, offset: 2645},
																							val:        "<",
																							ignoreCase: false,
																						},
																						&labeledExpr{
																							pos:   position{line: 67, col: 28, offset: 2649},
																							label: "email",
																							expr: &oneOrMoreExpr{
																								pos: position{line: 67, col: 34, offset: 2655},
																								expr: &seqExpr{
																									pos: position{line: 67, col: 35, offset: 2656},
																									exprs: []interface{}{
																										&notExpr{
																											pos: position{line: 67, col: 35, offset: 2656},
																											expr: &litMatcher{
																												pos:        position{line: 67, col: 36, offset: 2657},
																												val:        ">",
																												ignoreCase: false,
																											},
																										},
																										&notExpr{
																											pos: position{line: 67, col: 40, offset: 2661},
																											expr: &choiceExpr{
																												pos: position{line: 721, col: 8, offset: 30228},
																												alternatives: []interface{}{
																													&litMatcher{
																														pos:        position{line: 717, col: 12, offset: 30188},
																														val:        "\r\n",
																														ignoreCase: false,
																													},
																													&charClassMatcher{
																														pos:        position{line: 717, col: 21, offset: 30197},
																														val:        "[\\r\\n]",
																														chars:      []rune{'\r', '\n'},
																														ignoreCase: false,
																														inverted:   false,
																													},
																													&notExpr{
																														pos: position{line: 719, col: 8, offset: 30217},
																														expr: &anyMatcher{
																															line: 719, col: 9, offset: 30218,
																														},
																													},
																												},
																											},
																										},
																										&anyMatcher{
																											line: 67, col: 45, offset: 2666,
																										},
																									},
																								},
																							},
																						},
																						&litMatcher{
																							pos:        position{line: 67, col: 49, offset: 2670},
																							val:        ">",
																							ignoreCase: false,
																						},
																					},
																				},
																			},
																		},
																		&zeroOrMoreExpr{
																			pos: position{line: 60, col: 159, offset: 2402},
																			expr: &choiceExpr{
																				pos: position{line: 713, col: 7, offset: 30126},
																				alternatives: []interface{}{
																					&litMatcher{
																						pos:        position{line: 713, col: 7, offset: 30126},
																						val:        " ",
																						ignoreCase: false,
																					},
																					&actionExpr{
																						pos: position{line: 713, col: 13, offset: 30132},
																						run: (*parser).callonDocumentHeader120,
																						expr: &litMatcher{
																							pos:        position{line: 713, col: 13, offset: 30132},
																							val:        "\t",
																							ignoreCase: false,
																						},
																					},
																				},
																			},
																		},
																		&zeroOrOneExpr{
																			pos: position{line: 60, col: 163, offset: 2406},
																			expr: &litMatcher{
																				pos:        position{line: 60, col: 163, offset: 2406},
																				val:        ";",
																				ignoreCase: false,
																			},
																		},
																		&zeroOrMoreExpr{
																			pos: position{line: 60, col: 168, offset: 2411},
																			expr: &choiceExpr{
																				pos: position{line: 713, col: 7, offset: 30126},
																				alternatives: []interface{}{
																					&litMatcher{
																						pos:        position{line: 713, col: 7, offset: 30126},
																						val:        " ",
																						ignoreCase: false,
																					},
																					&actionExpr{
																						pos: position{line: 713, col: 13, offset: 30132},
																						run: (*parser).callonDocumentHeader127,
																						expr: &litMatcher{
																							pos:        position{line: 713, col: 13, offset: 30132},
																							val:        "\t",
																							ignoreCase: false,
																						},
																					},
																				},
																			},
																		},
																	},
																},
															},
														},
													},
													&choiceExpr{
														pos: position{line: 721, col: 8, offset: 30228},
														alternatives: []interface{}{
															&litMatcher{
																pos:        position{line: 717, col: 12, offset: 30188},
																val:        "\r\n",
																ignoreCase: false,
															},
															&charClassMatcher{
																pos:        position{line: 717, col: 21, offset: 30197},
																val:        "[\\r\\n]",
																chars:      []rune{'\r', '\n'},
																ignoreCase: false,
																inverted:   false,
															},
															&notExpr{
																pos: position{line: 719, col: 8, offset: 30217},
																expr: &anyMatcher{
																	line: 719, col: 9, offset: 30218,
																},
															},
														},
													},
												},
											},
										},
										&actionExpr{
											pos: position{line: 56, col: 33, offset: 2130},
											run: (*parser).callonDocumentHeader134,
											expr: &seqExpr{
												pos: position{line: 56, col: 33, offset: 2130},
												exprs: []interface{}{
													&zeroOrMoreExpr{
														pos: position{line: 56, col: 33, offset: 2130},
														expr: &choiceExpr{
															pos: position{line: 713, col: 7, offset: 30126},
															alternatives: []interface{}{
																&litMatcher{
																	pos:        position{line: 713, col: 7, offset: 30126},
																	val:        " ",
																	ignoreCase: false,
																},
																&actionExpr{
																	pos: position{line: 713, col: 13, offset: 30132},
																	run: (*parser).callonDocumentHeader139,
																	expr: &litMatcher{
																		pos:        position{line: 713, col: 13, offset: 30132},
																		val:        "\t",
																		ignoreCase: false,
																	},
																},
															},
														},
													},
													&litMatcher{
														pos:        position{line: 56, col: 37, offset: 2134},
														val:        ":author:",
														ignoreCase: false,
													},
													&labeledExpr{
														pos:   position{line: 56, col: 48, offset: 2145},
														label: "author",
														expr: &actionExpr{
															pos: position{line: 60, col: 19, offset: 2262},
															run: (*parser).callonDocumentHeader143,
															expr: &seqExpr{
																pos: position{line: 60, col: 19, offset: 2262},
																exprs: []interface{}{
																	&zeroOrMoreExpr{
																		pos: position{line: 60, col: 19, offset: 2262},
																		expr: &choiceExpr{
																			pos: position{line: 713, col: 7, offset: 30126},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 713, col: 7, offset: 30126},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 713, col: 13, offset: 30132},
																					run: (*parser).callonDocumentHeader148,
																					expr: &litMatcher{
																						pos:        position{line: 713, col: 13, offset: 30132},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 60, col: 23, offset: 2266},
																		label: "namePart1",
																		expr: &seqExpr{
																			pos: position{line: 65, col: 27, offset: 2602},
																			exprs: []interface{}{
																				&notExpr{
																					pos: position{line: 65, col: 27, offset: 2602},
																					expr: &litMatcher{
																						pos:        position{line: 65, col: 28, offset: 2603},
																						val:        "<",
																						ignoreCase: false,
																					},
																				},
																				&notExpr{
																					pos: position{line: 65, col: 32, offset: 2607},
																					expr: &litMatcher{
																						pos:        position{line: 65, col: 33, offset: 2608},
																						val:        ";",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 693, col: 9, offset: 29754},
																					run: (*parser).callonDocumentHeader156,
																					expr: &oneOrMoreExpr{
																						pos: position{line: 693, col: 9, offset: 29754},
																						expr: &seqExpr{
																							pos: position{line: 693, col: 10, offset: 29755},
																							exprs: []interface{}{
																								&notExpr{
																									pos: position{line: 693, col: 10, offset: 29755},
																									expr: &choiceExpr{
																										pos: position{line: 717, col: 12, offset: 30188},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 717, col: 12, offset: 30188},
																												val:        "\r\n",
																												ignoreCase: false,
																											},
																											&charClassMatcher{
																												pos:        position{line: 717, col: 21, offset: 30197},
																												val:        "[\\r\\n]",
																												chars:      []rune{'\r', '\n'},
																												ignoreCase: false,
																												inverted:   false,
																											},
																										},
																									},
																								},
																								&notExpr{
																									pos: position{line: 693, col: 19, offset: 29764},
																									expr: &choiceExpr{
																										pos: position{line: 713, col: 7, offset: 30126},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 713, col: 7, offset: 30126},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 713, col: 13, offset: 30132},
																												run: (*parser).callonDocumentHeader166,
																												expr: &litMatcher{
																													pos:        position{line: 713, col: 13, offset: 30132},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																								&anyMatcher{
																									line: 693, col: 23, offset: 29768,
																								},
																							},
																						},
																					},
																				},
																				&zeroOrMoreExpr{
																					pos: position{line: 65, col: 42, offset: 2617},
																					expr: &choiceExpr{
																						pos: position{line: 713, col: 7, offset: 30126},
																						alternatives: []interface{}{
																							&litMatcher{
																								pos:        position{line: 713, col: 7, offset: 30126},
																								val:        " ",
																								ignoreCase: false,
																							},
																							&actionExpr{
																								pos: position{line: 713, col: 13, offset: 30132},
																								run: (*parser).callonDocumentHeader172,
																								expr: &litMatcher{
																									pos:        position{line: 713, col: 13, offset: 30132},
																									val:        "\t",
																									ignoreCase: false,
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 60, col: 58, offset: 2301},
																		label: "namePart2",
																		expr: &zeroOrOneExpr{
																			pos: position{line: 60, col: 68, offset: 2311},
																			expr: &seqExpr{
																				pos: position{line: 65, col: 27, offset: 2602},
																				exprs: []interface{}{
																					&notExpr{
																						pos: position{line: 65, col: 27, offset: 2602},
																						expr: &litMatcher{
																							pos:        position{line: 65, col: 28, offset: 2603},
																							val:        "<",
																							ignoreCase: false,
																						},
																					},
																					&notExpr{
																						pos: position{line: 65, col: 32, offset: 2607},
																						expr: &litMatcher{
																							pos:        position{line: 65, col: 33, offset: 2608},
																							val:        ";",
																							ignoreCase: false,
																						},
																					},
																					&actionExpr{
																						pos: position{line: 693, col: 9, offset: 29754},
																						run: (*parser).callonDocumentHeader57,
																						expr: &oneOrMoreExpr{
																							pos: position{line: 693, col: 9, offset: 29754},
																							expr: &seqExpr{
																								pos: position{line: 693, col: 10, offset: 29755},
																								exprs: []interface{}{
																									&notExpr{
																										pos: position{line: 693, col: 10, offset: 29755},
																										expr: &choiceExpr{
																											pos: position{line: 717, col: 12, offset: 30188},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 717, col: 12, offset: 30188},
																													val:        "\r\n",
																													ignoreCase: false,
																												},
																												&charClassMatcher{
																													pos:        position{line: 717, col: 21, offset: 30197},
																													val:        "[\\r\\n]",
																													chars:      []rune{'\r', '\n'},
																													ignoreCase: false,
																													inverted:   false,
																												},
																											},
																										},
																									},
																									&notExpr{
																										pos: position{line: 693, col: 19, offset: 29764},
																										expr: &choiceExpr{
																											pos: position{line: 713, col: 7, offset: 30126},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 713, col: 7, offset: 30126},
																													val:        " ",
																													ignoreCase: false,
																												},
																												&actionExpr{
																													pos: position{line: 713, col: 13, offset: 30132},
																													run: (*parser).callonDocumentHeader67,
																													expr: &litMatcher{
																														pos:        position{line: 713, col: 13, offset: 30132},
																														val:        "\t",
																														ignoreCase: false,
																													},
																												},
																											},
																										},
																									},
																									&anyMatcher{
																										line: 693, col: 23, offset: 29768,
																									},
																								},
																							},
																						},
																					},
																					&zeroOrMoreExpr{
																						pos: position{line: 65, col: 42, offset: 2617},
																						expr: &choiceExpr{
																							pos: position{line: 713, col: 7, offset: 30126},
																							alternatives: []interface{}{
																								&litMatcher{
																									pos:        position{line: 713, col: 7, offset: 30126},
																									val:        " ",
																									ignoreCase: false,
																								},
																								&actionExpr{
																									pos: position{line: 713, col: 13, offset: 30132},
																									run: (*parser).callonDocumentHeader73,
																									expr: &litMatcher{
																										pos:        position{line: 713, col: 13, offset: 30132},
																										val:        "\t",
																										ignoreCase: false,
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 60, col: 94, offset: 2337},
																		label: "namePart3",
																		expr: &zeroOrOneExpr{
																			pos: position{line: 60, col: 104, offset: 2347},
																			expr: &seqExpr{
																				pos: position{line: 65, col: 27, offset: 2602},
																				exprs: []interface{}{
																					&notExpr{
																						pos: position{line: 65, col: 27, offset: 2602},
																						expr: &litMatcher{
																							pos:        position{line: 65, col: 28, offset: 2603},
																							val:        "<",
																							ignoreCase: false,
																						},
																					},
																					&notExpr{
																						pos: position{line: 65, col: 32, offset: 2607},
																						expr: &litMatcher{
																							pos:        position{line: 65, col: 33, offset: 2608},
																							val:        ";",
																							ignoreCase: false,
																						},
																					},
																					&actionExpr{
																						pos: position{line: 693, col: 9, offset: 29754},
																						run: (*parser).callonDocumentHeader82,
																						expr: &oneOrMoreExpr{
																							pos: position{line: 693, col: 9, offset: 29754},
																							expr: &seqExpr{
																								pos: position{line: 693, col: 10, offset: 29755},
																								exprs: []interface{}{
																									&notExpr{
																										pos: position{line: 693, col: 10, offset: 29755},
																										expr: &choiceExpr{
																											pos: position{line: 717, col: 12, offset: 30188},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 717, col: 12, offset: 30188},
																													val:        "\r\n",
																													ignoreCase: false,
																												},
																												&charClassMatcher{
																													pos:        position{line: 717, col: 21, offset: 30197},
																													val:        "[\\r\\n]",
																													chars:      []rune{'\r', '\n'},
																													ignoreCase: false,
																													inverted:   false,
																												},
																											},
																										},
																									},
																									&notExpr{
																										pos: position{line: 693, col: 19, offset: 29764},
																										expr: &choiceExpr{
																											pos: position{line: 713, col: 7, offset: 30126},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 713, col: 7, offset: 30126},
																													val:        " ",
																													ignoreCase: false,
																												},
																												&actionExpr{
																													pos: position{line: 713, col: 13, offset: 30132},
																													run: (*parser).callonDocumentHeader92,
																													expr: &litMatcher{
																														pos:        position{line: 713, col: 13, offset: 30132},
																														val:        "\t",
																														ignoreCase: false,
																													},
																												},
																											},
																										},
																									},
																									&anyMatcher{
																										line: 693, col: 23, offset: 29768,
																									},
																								},
																							},
																						},
																					},
																					&zeroOrMoreExpr{
																						pos: position{line: 65, col: 42, offset: 2617},
																						expr: &choiceExpr{
																							pos: position{line: 713, col: 7, offset: 30126},
																							alternatives: []interface{}{
																								&litMatcher{
																									pos:        position{line: 713, col: 7, offset: 30126},
																									val:        " ",
																									ignoreCase: false,
																								},
																								&actionExpr{
																									pos: position{line: 713, col: 13, offset: 30132},
																									run: (*parser).callonDocumentHeader98,
																									expr: &litMatcher{
																										pos:        position{line: 713, col: 13, offset: 30132},
																										val:        "\t",
																										ignoreCase: false,
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 60, col: 130, offset: 2373},
																		label: "email",
																		expr: &zeroOrOneExpr{
																			pos: position{line: 60, col: 136, offset: 2379},
																			expr: &seqExpr{
																				pos: position{line: 67, col: 24, offset: 2645},
																				exprs: []interface{}{
																					&litMatcher{
																						pos:        position{line: 67, col: 24, offset: 2645},
																						val:        "<",
																						ignoreCase: false,
																					},
																					&labeledExpr{
																						pos:   position{line: 67, col: 28, offset: 2649},
																						label: "email",
																						expr: &oneOrMoreExpr{
																							pos: position{line: 67, col: 34, offset: 2655},
																							expr: &seqExpr{
																								pos: position{line: 67, col: 35, offset: 2656},
																								exprs: []interface{}{
																									&notExpr{
																										pos: position{line: 67, col: 35, offset: 2656},
																										expr: &litMatcher{
																											pos:        position{line: 67, col: 36, offset: 2657},
																											val:        ">",
																											ignoreCase: false,
																										},
																									},
																									&notExpr{
																										pos: position{line: 67, col: 40, offset: 2661},
																										expr: &choiceExpr{
																											pos: position{line: 721, col: 8, offset: 30228},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 717, col: 12, offset: 30188},
																													val:        "\r\n",
																													ignoreCase: false,
																												},
																												&charClassMatcher{
																													pos:        position{line: 717, col: 21, offset: 30197},
																													val:        "[\\r\\n]",
																													chars:      []rune{'\r', '\n'},
																													ignoreCase: false,
																													inverted:   false,
																												},
																												&notExpr{
																													pos: position{line: 719, col: 8, offset: 30217},
																													expr: &anyMatcher{
																														line: 719, col: 9, offset: 30218,
																													},
																												},
																											},
																										},
																									},
																									&anyMatcher{
																										line: 67, col: 45, offset: 2666,
																									},
																								},
																							},
																						},
																					},
																					&litMatcher{
																						pos:        position{line: 67, col: 49, offset: 2670},
																						val:        ">",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&zeroOrMoreExpr{
																		pos: position{line: 60, col: 159, offset: 2402},
																		expr: &choiceExpr{
																			pos: position{line: 713, col: 7, offset: 30126},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 713, col: 7, offset: 30126},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 713, col: 13, offset: 30132},
																					run: (*parser).callonDocumentHeader244,
																					expr: &litMatcher{
																						pos:        position{line: 713, col: 13, offset: 30132},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&zeroOrOneExpr{
																		pos: position{line: 60, col: 163, offset: 2406},
																		expr: &litMatcher{
																			pos:        position{line: 60, col: 163, offset: 2406},
																			val:        ";",
																			ignoreCase: false,
																		},
																	},
																	&zeroOrMoreExpr{
																		pos: position{line: 60, col: 168, offset: 2411},
																		expr: &choiceExpr{
																			pos: position{line: 713, col: 7, offset: 30126},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 713, col: 7, offset: 30126},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 713, col: 13, offset: 30132},
																					run: (*parser).callonDocumentHeader251,
																					expr: &litMatcher{
																						pos:        position{line: 713, col: 13, offset: 30132},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																},
															},
														},
													},
												},
											},
										},
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 46, col: 69, offset: 1710},
							label: "revision",
							expr: &zeroOrOneExpr{
								pos: position{line: 46, col: 79, offset: 1720},
								expr: &actionExpr{
									pos: position{line: 71, col: 21, offset: 2826},
									run: (*parser).callonDocumentHeader255,
									expr: &seqExpr{
										pos: position{line: 71, col: 21, offset: 2826},
										exprs: []interface{}{
											&zeroOrMoreExpr{
												pos: position{line: 71, col: 21, offset: 2826},
												expr: &choiceExpr{
													pos: position{line: 713, col: 7, offset: 30126},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 713, col: 7, offset: 30126},
															val:        " ",
															ignoreCase: false,
														},
														&actionExpr{
															pos: position{line: 713, col: 13, offset: 30132},
															run: (*parser).callonDocumentHeader260,
															expr: &litMatcher{
																pos:        position{line: 713, col: 13, offset: 30132},
																val:        "\t",
																ignoreCase: false,
															},
														},
													},
												},
											},
											&notExpr{
												pos: position{line: 71, col: 25, offset: 2830},
												expr: &litMatcher{
													pos:        position{line: 71, col: 26, offset: 2831},
													val:        ":",
													ignoreCase: false,
												},
											},
											&labeledExpr{
												pos:   position{line: 71, col: 30, offset: 2835},
												label: "revnumber",
												expr: &zeroOrOneExpr{
													pos: position{line: 71, col: 40, offset: 2845},
													expr: &choiceExpr{
														pos: position{line: 76, col: 27, offset: 3148},
														alternatives: []interface{}{
															&seqExpr{
																pos: position{line: 76, col: 27, offset: 3148},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 76, col: 27, offset: 3148},
																		val:        "v",
																		ignoreCase: true,
																	},
																	&charClassMatcher{
																		pos:        position{line: 711, col: 10, offset: 30113},
																		val:        "[0-9]",
																		ranges:     []rune{'0', '9'},
																		ignoreCase: false,
																		inverted:   false,
																	},
																	&zeroOrMoreExpr{
																		pos: position{line: 76, col: 39, offset: 3160},
																		expr: &seqExpr{
																			pos: position{line: 76, col: 40, offset: 3161},
																			exprs: []interface{}{
																				&notExpr{
																					pos: position{line: 76, col: 40, offset: 3161},
																					expr: &choiceExpr{
																						pos: position{line: 721, col: 8, offset: 30228},
																						alternatives: []interface{}{
																							&litMatcher{
																								pos:        position{line: 717, col: 12, offset: 30188},
																								val:        "\r\n",
																								ignoreCase: false,
																							},
																							&charClassMatcher{
																								pos:        position{line: 717, col: 21, offset: 30197},
																								val:        "[\\r\\n]",
																								chars:      []rune{'\r', '\n'},
																								ignoreCase: false,
																								inverted:   false,
																							},
																							&notExpr{
																								pos: position{line: 719, col: 8, offset: 30217},
																								expr: &anyMatcher{
																									line: 719, col: 9, offset: 30218,
																								},
																							},
																						},
																					},
																				},
																				&notExpr{
																					pos: position{line: 76, col: 45, offset: 3166},
																					expr: &litMatcher{
																						pos:        position{line: 76, col: 46, offset: 3167},
																						val:        ",",
																						ignoreCase: false,
																					},
																				},
																				&notExpr{
																					pos: position{line: 76, col: 50, offset: 3171},
																					expr: &litMatcher{
																						pos:        position{line: 76, col: 51, offset: 3172},
																						val:        ":",
																						ignoreCase: false,
																					},
																				},
																				&anyMatcher{
																					line: 76, col: 55, offset: 3176,
																				},
																			},
																		},
																	},
																},
															},
															&seqExpr{
																pos: position{line: 76, col: 61, offset: 3182},
																exprs: []interface{}{
																	&zeroOrOneExpr{
																		pos: position{line: 76, col: 61, offset: 3182},
																		expr: &litMatcher{
																			pos:        position{line: 76, col: 61, offset: 3182},
																			val:        "v",
																			ignoreCase: true,
																		},
																	},
																	&charClassMatcher{
																		pos:        position{line: 711, col: 10, offset: 30113},
																		val:        "[0-9]",
																		ranges:     []rune{'0', '9'},
																		ignoreCase: false,
																		inverted:   false,
																	},
																	&zeroOrMoreExpr{
																		pos: position{line: 76, col: 74, offset: 3195},
																		expr: &seqExpr{
																			pos: position{line: 76, col: 75, offset: 3196},
																			exprs: []interface{}{
																				&notExpr{
																					pos: position{line: 76, col: 75, offset: 3196},
																					expr: &choiceExpr{
																						pos: position{line: 721, col: 8, offset: 30228},
																						alternatives: []interface{}{
																							&litMatcher{
																								pos:        position{line: 717, col: 12, offset: 30188},
																								val:        "\r\n",
																								ignoreCase: false,
																							},
																							&charClassMatcher{
																								pos:        position{line: 717, col: 21, offset: 30197},
																								val:        "[\\r\\n]",
																								chars:      []rune{'\r', '\n'},
																								ignoreCase: false,
																								inverted:   false,
																							},
																							&notExpr{
																								pos: position{line: 719, col: 8, offset: 30217},
																								expr: &anyMatcher{
																									line: 719, col: 9, offset: 30218,
																								},
																							},
																						},
																					},
																				},
																				&notExpr{
																					pos: position{line: 76, col: 80, offset: 3201},
																					expr: &litMatcher{
																						pos:        position{line: 76, col: 81, offset: 3202},
																						val:        ",",
																						ignoreCase: false,
																					},
																				},
																				&notExpr{
																					pos: position{line: 76, col: 85, offset: 3206},
																					expr: &litMatcher{
																						pos:        position{line: 76, col: 86, offset: 3207},
																						val:        ":",
																						ignoreCase: false,
																					},
																				},
																				&anyMatcher{
																					line: 76, col: 90, offset: 3211,
																				},
																			},
																		},
																	},
																	&zeroOrMoreExpr{
																		pos: position{line: 76, col: 94, offset: 3215},
																		expr: &choiceExpr{
																			pos: position{line: 713, col: 7, offset: 30126},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 713, col: 7, offset: 30126},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 713, col: 13, offset: 30132},
																					run: (*parser).callonDocumentHeader303,
																					expr: &litMatcher{
																						pos:        position{line: 713, col: 13, offset: 30132},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&andExpr{
																		pos: position{line: 76, col: 98, offset: 3219},
																		expr: &litMatcher{
																			pos:        position{line: 76, col: 99, offset: 3220},
																			val:        ",",
																			ignoreCase: false,
																		},
																	},
																},
															},
														},
													},
												},
											},
											&zeroOrOneExpr{
												pos: position{line: 71, col: 66, offset: 2871},
												expr: &litMatcher{
													pos:        position{line: 71, col: 66, offset: 2871},
													val:        ",",
													ignoreCase: false,
												},
											},
											&labeledExpr{
												pos:   position{line: 71, col: 71, offset: 2876},
												label: "revdate",
												expr: &zeroOrOneExpr{
													pos: position{line: 71, col: 79, offset: 2884},
													expr: &zeroOrMoreExpr{
														pos: position{line: 77, col: 25, offset: 3248},
														expr: &seqExpr{
															pos: position{line: 77, col: 26, offset: 3249},
															exprs: []interface{}{
																&notExpr{
																	pos: position{line: 77, col: 26, offset: 3249},
																	expr: &choiceExpr{
																		pos: position{line: 721, col: 8, offset: 30228},
																		alternatives: []interface{}{
																			&litMatcher{
																				pos:        position{line: 717, col: 12, offset: 30188},
																				val:        "\r\n",
																				ignoreCase: false,
																			},
																			&charClassMatcher{
																				pos:        position{line: 717, col: 21, offset: 30197},
																				val:        "[\\r\\n]",
																				chars:      []rune{'\r', '\n'},
																				ignoreCase: false,
																				inverted:   false,
																			},
																			&notExpr{
																				pos: position{line: 719, col: 8, offset: 30217},
																				expr: &anyMatcher{
																					line: 719, col: 9, offset: 30218,
																				},
																			},
																		},
																	},
																},
																&notExpr{
																	pos: position{line: 77, col: 31, offset: 3254},
																	expr: &litMatcher{
																		pos:        position{line: 77, col: 32, offset: 3255},
																		val:        ":",
																		ignoreCase: false,
																	},
																},
																&anyMatcher{
																	line: 77, col: 36, offset: 3259,
																},
															},
														},
													},
												},
											},
											&zeroOrOneExpr{
												pos: position{line: 71, col: 103, offset: 2908},
												expr: &litMatcher{
													pos:        position{line: 71, col: 103, offset: 2908},
													val:        ":",
													ignoreCase: false,
												},
											},
											&labeledExpr{
												pos:   position{line: 71, col: 108, offset: 2913},
												label: "revremark",
												expr: &zeroOrOneExpr{
													pos: position{line: 71, col: 118, offset: 2923},
													expr: &zeroOrMoreExpr{
														pos: position{line: 78, col: 27, offset: 3290},
														expr: &seqExpr{
															pos: position{line: 78, col: 28, offset: 3291},
															exprs: []interface{}{
																&notExpr{
																	pos: position{line: 78, col: 28, offset: 3291},
																	expr: &choiceExpr{
																		pos: position{line: 721, col: 8, offset: 30228},
																		alternatives: []interface{}{
																			&litMatcher{
																				pos:        position{line: 717, col: 12, offset: 30188},
																				val:        "\r\n",
																				ignoreCase: false,
																			},
																			&charClassMatcher{
																				pos:        position{line: 717, col: 21, offset: 30197},
																				val:        "[\\r\\n]",
																				chars:      []rune{'\r', '\n'},
																				ignoreCase: false,
																				inverted:   false,
																			},
																			&notExpr{
																				pos: position{line: 719, col: 8, offset: 30217},
																				expr: &anyMatcher{
																					line: 719, col: 9, offset: 30218,
																				},
																			},
																		},
																	},
																},
																&anyMatcher{
																	line: 78, col: 33, offset: 3296,
																},
															},
														},
													},
												},
											},
											&choiceExpr{
												pos: position{line: 721, col: 8, offset: 30228},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 717, col: 12, offset: 30188},
														val:        "\r\n",
														ignoreCase: false,
													},
													&charClassMatcher{
														pos:        position{line: 717, col: 21, offset: 30197},
														val:        "[\\r\\n]",
														chars:      []rune{'\r', '\n'},
														ignoreCase: false,
														inverted:   false,
													},
													&notExpr{
														pos: position{line: 719, col: 8, offset: 30217},
														expr: &anyMatcher{
															line: 719, col: 9, offset: 30218,
														},
													},
												},
											},
										},
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 46, col: 98, offset: 1739},
							label: "otherAttributes",
							expr: &zeroOrMoreExpr{
								pos: position{line: 46, col: 115, offset: 1756},
								expr: &choiceExpr{
									pos: position{line: 83, col: 33, offset: 3448},
									alternatives: []interface{}{
										&actionExpr{
											pos: position{line: 85, col: 45, offset: 3582},
											run: (*parser).callonDocumentHeader343,
											expr: &seqExpr{
												pos: position{line: 85, col: 45, offset: 3582},
												exprs: []interface{}{
													&litMatcher{
														pos:        position{line: 85, col: 45, offset: 3582},
														val:        ":",
														ignoreCase: false,
													},
													&labeledExpr{
														pos:   position{line: 85, col: 49, offset: 3586},
														label: "name",
														expr: &seqExpr{
															pos: position{line: 110, col: 18, offset: 4666},
															exprs: []interface{}{
																&charClassMatcher{
																	pos:        position{line: 110, col: 19, offset: 4667},
																	val:        "[_A-Za-z0-9]",
																	chars:      []rune{'_'},
																	ranges:     []rune{'A', 'Z', 'a', 'z', '0', '9'},
																	ignoreCase: false,
																	inverted:   false,
																},
																&zeroOrMoreExpr{
																	pos: position{line: 110, col: 48, offset: 4696},
																	expr: &charClassMatcher{
																		pos:        position{line: 110, col: 49, offset: 4697},
																		val:        "[-A-Za-z0-9]",
																		chars:      []rune{'-'},
																		ranges:     []rune{'A', 'Z', 'a', 'z', '0', '9'},
																		ignoreCase: false,
																		inverted:   false,
																	},
																},
															},
														},
													},
													&litMatcher{
														pos:        position{line: 85, col: 70, offset: 3607},
														val:        ":",
														ignoreCase: false,
													},
													&zeroOrMoreExpr{
														pos: position{line: 85, col: 74, offset: 3611},
														expr: &choiceExpr{
															pos: position{line: 713, col: 7, offset: 30126},
															alternatives: []interface{}{
																&litMatcher{
																	pos:        position{line: 713, col: 7, offset: 30126},
																	val:        " ",
																	ignoreCase: false,
																},
																&actionExpr{
																	pos: position{line: 713, col: 13, offset: 30132},
																	run: (*parser).callonDocumentHeader355,
																	expr: &litMatcher{
																		pos:        position{line: 713, col: 13, offset: 30132},
																		val:        "\t",
																		ignoreCase: false,
																	},
																},
															},
														},
													},
													&choiceExpr{
														pos: position{line: 721, col: 8, offset: 30228},
														alternatives: []interface{}{
															&litMatcher{
																pos:        position{line: 717, col: 12, offset: 30188},
																val:        "\r\n",
																ignoreCase: false,
															},
															&charClassMatcher{
																pos:        position{line: 717, col: 21, offset: 30197},
																val:        "[\\r\\n]",
																chars:      []rune{'\r', '\n'},
																ignoreCase: false,
																inverted:   false,
															},
															&notExpr{
																pos: position{line: 719, col: 8, offset: 30217},
																expr: &anyMatcher{
																	line: 719, col: 9, offset: 30218,
																},
															},
														},
													},
												},
											},
										},
										&actionExpr{
											pos: position{line: 89, col: 49, offset: 3748},
											run: (*parser).callonDocumentHeader362,
											expr: &seqExpr{
												pos: position{line: 89, col: 49, offset: 3748},
												exprs: []interface{}{
													&litMatcher{
														pos:        position{line: 89, col: 49, offset: 3748},
														val:        ":",
														ignoreCase: false,
													},
													&labeledExpr{
														pos:   position{line: 89, col: 53, offset: 3752},
														label: "name",
														expr: &seqExpr{
															pos: position{line: 110, col: 18, offset: 4666},
															exprs: []interface{}{
																&charClassMatcher{
																	pos:        position{line: 110, col: 19, offset: 4667},
																	val:        "[_A-Za-z0-9]",
																	chars:      []rune{'_'},
																	ranges:     []rune{'A', 'Z', 'a', 'z', '0', '9'},
																	ignoreCase: false,
																	inverted:   false,
																},
																&zeroOrMoreExpr{
																	pos: position{line: 110, col: 48, offset: 4696},
																	expr: &charClassMatcher{
																		pos:        position{line: 110, col: 49, offset: 4697},
																		val:        "[-A-Za-z0-9]",
																		chars:      []rune{'-'},
																		ranges:     []rune{'A', 'Z', 'a', 'z', '0', '9'},
																		ignoreCase: false,
																		inverted:   false,
																	},
																},
															},
														},
													},
													&litMatcher{
														pos:        position{line: 89, col: 74, offset: 3773},
														val:        ":",
														ignoreCase: false,
													},
													&oneOrMoreExpr{
														pos: position{line: 89, col: 78, offset: 3777},
														expr: &choiceExpr{
															pos: position{line: 713, col: 7, offset: 30126},
															alternatives: []interface{}{
																&litMatcher{
																	pos:        position{line: 713, col: 7, offset: 30126},
																	val:        " ",
																	ignoreCase: false,
																},
																&actionExpr{
																	pos: position{line: 713, col: 13, offset: 30132},
																	run: (*parser).callonDocumentHeader374,
																	expr: &litMatcher{
																		pos:        position{line: 713, col: 13, offset: 30132},
																		val:        "\t",
																		ignoreCase: false,
																	},
																},
															},
														},
													},
													&labeledExpr{
														pos:   position{line: 89, col: 82, offset: 3781},
														label: "value",
														expr: &zeroOrMoreExpr{
															pos: position{line: 89, col: 88, offset: 3787},
															expr: &seqExpr{
																pos: position{line: 89, col: 89, offset: 3788},
																exprs: []interface{}{
																	&notExpr{
																		pos: position{line: 89, col: 89, offset: 3788},
																		expr: &choiceExpr{
																			pos: position{line: 717, col: 12, offset: 30188},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 717, col: 12, offset: 30188},
																					val:        "\r\n",
																					ignoreCase: false,
																				},
																				&charClassMatcher{
																					pos:        position{line: 717, col: 21, offset: 30197},
																					val:        "[\\r\\n]",
																					chars:      []rune{'\r', '\n'},
																					ignoreCase: false,
																					inverted:   false,
																				},
																			},
																		},
																	},
																	&anyMatcher{
																		line: 89, col: 98, offset: 3797,
																	},
																},
															},
														},
													},
													&choiceExpr{
														pos: position{line: 721, col: 8, offset: 30228},
														alternatives: []interface{}{
															&litMatcher{
																pos:        position{line: 717, col: 12, offset: 30188},
																val:        "\r\n",
																ignoreCase: false,
															},
															&charClassMatcher{
																pos:        position{line: 717, col: 21, offset: 30197},
																val:        "[\\r\\n]",
																chars:      []rune{'\r', '\n'},
																ignoreCase: false,
																inverted:   false,
															},
															&notExpr{
																pos: position{line: 719, col: 8, offset: 30217},
																expr: &anyMatcher{
																	line: 719, col: 9, offset: 30218,
																},
															},
														},
													},
												},
											},
										},
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "Section",
			pos:  position{line: 186, col: 1, offset: 7339},
			expr: &actionExpr{
				pos: position{line: 186, col: 12, offset: 7350},
				run: (*parser).callonSection1,
				expr: &seqExpr{
					pos: position{line: 186, col: 12, offset: 7350},
					exprs: []interface{}{
						&notExpr{
							pos: position{line: 186, col: 12, offset: 7350},
							expr: &notExpr{
								pos: position{line: 719, col: 8, offset: 30217},
								expr: &anyMatcher{
									line: 719, col: 9, offset: 30218,
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 187, col: 5, offset: 7421},
							label: "section",
							expr: &choiceExpr{
								pos: position{line: 187, col: 14, offset: 7430},
								alternatives: []interface{}{
									&ruleRefExpr{
										pos:  position{line: 187, col: 14, offset: 7430},
										name: "Section0",
									},
									&ruleRefExpr{
										pos:  position{line: 187, col: 25, offset: 7441},
										name: "Section1",
									},
									&ruleRefExpr{
										pos:  position{line: 187, col: 36, offset: 7452},
										name: "Section2",
									},
									&ruleRefExpr{
										pos:  position{line: 187, col: 47, offset: 7463},
										name: "Section3",
									},
									&ruleRefExpr{
										pos:  position{line: 187, col: 58, offset: 7474},
										name: "Section4",
									},
									&ruleRefExpr{
										pos:  position{line: 187, col: 69, offset: 7485},
										name: "Section5",
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "Section0",
			pos:  position{line: 193, col: 1, offset: 7566},
			expr: &actionExpr{
				pos: position{line: 193, col: 13, offset: 7578},
				run: (*parser).callonSection01,
				expr: &seqExpr{
					pos: position{line: 193, col: 13, offset: 7578},
					exprs: []interface{}{
						&notExpr{
							pos: position{line: 193, col: 13, offset: 7578},
							expr: &notExpr{
								pos: position{line: 719, col: 8, offset: 30217},
								expr: &anyMatcher{
									line: 719, col: 9, offset: 30218,
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 194, col: 5, offset: 7649},
							label: "section",
							expr: &actionExpr{
								pos: position{line: 194, col: 14, offset: 7658},
								run: (*parser).callonSection07,
								expr: &seqExpr{
									pos: position{line: 194, col: 14, offset: 7658},
									exprs: []interface{}{
										&labeledExpr{
											pos:   position{line: 194, col: 14, offset: 7658},
											label: "header",
											expr: &ruleRefExpr{
												pos:  position{line: 194, col: 22, offset: 7666},
												name: "Section0Title",
											},
										},
										&labeledExpr{
											pos:   position{line: 194, col: 37, offset: 7681},
											label: "elements",
											expr: &zeroOrMoreExpr{
												pos: position{line: 194, col: 47, offset: 7691},
												expr: &ruleRefExpr{
													pos:  position{line: 194, col: 47, offset: 7691},
													name: "Section0Block",
												},
											},
										},
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "Section0Title",
			pos:  position{line: 202, col: 1, offset: 7875},
			expr: &actionExpr{
				pos: position{line: 202, col: 18, offset: 7892},
				run: (*parser).callonSection0Title1,
				expr: &seqExpr{
					pos: position{line: 202, col: 18, offset: 7892},
					exprs: []interface{}{
						&labeledExpr{
							pos:   position{line: 202, col: 18, offset: 7892},
							label: "attributes",
							expr: &zeroOrMoreExpr{
								pos: position{line: 202, col: 29, offset: 7903},
								expr: &actionExpr{
									pos: position{line: 120, col: 21, offset: 5018},
									run: (*parser).callonSection0Title5,
									expr: &seqExpr{
										pos: position{line: 120, col: 21, offset: 5018},
										exprs: []interface{}{
											&labeledExpr{
												pos:   position{line: 120, col: 21, offset: 5018},
												label: "attr",
												expr: &choiceExpr{
													pos: position{line: 120, col: 27, offset: 5024},
													alternatives: []interface{}{
														&actionExpr{
															pos: position{line: 124, col: 14, offset: 5203},
															run: (*parser).callonSection0Title9,
															expr: &labeledExpr{
																pos:   position{line: 124, col: 14, offset: 5203},
																label: "id",
																expr: &actionExpr{
																	pos: position{line: 130, col: 20, offset: 5333},
																	run: (*parser).callonSection0Title11,
																	expr: &seqExpr{
																		pos: position{line: 130, col: 20, offset: 5333},
																		exprs: []interface{}{
																			&litMatcher{
																				pos:        position{line: 130, col: 20, offset: 5333},
																				val:        "[[",
																				ignoreCase: false,
																			},
																			&labeledExpr{
																				pos:   position{line: 130, col: 25, offset: 5338},
																				label: "id",
																				expr: &actionExpr{
																					pos: position{line: 701, col: 7, offset: 29885},
																					run: (*parser).callonSection0Title15,
																					expr: &oneOrMoreExpr{
																						pos: position{line: 701, col: 7, offset: 29885},
																						expr: &seqExpr{
																							pos: position{line: 701, col: 8, offset: 29886},
																							exprs: []interface{}{
																								&notExpr{
																									pos: position{line: 701, col: 8, offset: 29886},
																									expr: &choiceExpr{
																										pos: position{line: 717, col: 12, offset: 30188},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 717, col: 12, offset: 30188},
																												val:        "\r\n",
																												ignoreCase: false,
																											},
																											&charClassMatcher{
																												pos:        position{line: 717, col: 21, offset: 30197},
																												val:        "[\\r\\n]",
																												chars:      []rune{'\r', '\n'},
																												ignoreCase: false,
																												inverted:   false,
																											},
																										},
																									},
																								},
																								&notExpr{
																									pos: position{line: 701, col: 17, offset: 29895},
																									expr: &choiceExpr{
																										pos: position{line: 713, col: 7, offset: 30126},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 713, col: 7, offset: 30126},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 713, col: 13, offset: 30132},
																												run: (*parser).callonSection0Title25,
																												expr: &litMatcher{
																													pos:        position{line: 713, col: 13, offset: 30132},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																								&notExpr{
																									pos: position{line: 701, col: 21, offset: 29899},
																									expr: &litMatcher{
																										pos:        position{line: 701, col: 22, offset: 29900},
																										val:        "[",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 701, col: 26, offset: 29904},
																									expr: &litMatcher{
																										pos:        position{line: 701, col: 27, offset: 29905},
																										val:        "]",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 701, col: 31, offset: 29909},
																									expr: &litMatcher{
																										pos:        position{line: 701, col: 32, offset: 29910},
																										val:        "<<",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 701, col: 37, offset: 29915},
																									expr: &litMatcher{
																										pos:        position{line: 701, col: 38, offset: 29916},
																										val:        ">>",
																										ignoreCase: false,
																									},
																								},
																								&anyMatcher{
																									line: 701, col: 42, offset: 29920,
																								},
																							},
																						},
																					},
																				},
																			},
																			&litMatcher{
																				pos:        position{line: 130, col: 33, offset: 5346},
																				val:        "]]",
																				ignoreCase: false,
																			},
																		},
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 126, col: 5, offset: 5249},
															run: (*parser).callonSection0Title37,
															expr: &seqExpr{
																pos: position{line: 126, col: 5, offset: 5249},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 126, col: 5, offset: 5249},
																		val:        "[#",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 126, col: 10, offset: 5254},
																		label: "id",
																		expr: &actionExpr{
																			pos: position{line: 701, col: 7, offset: 29885},
																			run: (*parser).callonSection0Title41,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 701, col: 7, offset: 29885},
																				expr: &seqExpr{
																					pos: position{line: 701, col: 8, offset: 29886},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 701, col: 8, offset: 29886},
																							expr: &choiceExpr{
																								pos: position{line: 717, col: 12, offset: 30188},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 717, col: 12, offset: 30188},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 717, col: 21, offset: 30197},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 701, col: 17, offset: 29895},
																							expr: &choiceExpr{
																								pos: position{line: 713, col: 7, offset: 30126},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 713, col: 7, offset: 30126},
																										val:        " ",
																										ignoreCase: false,
																									},
																									&actionExpr{
																										pos: position{line: 713, col: 13, offset: 30132},
																										run: (*parser).callonSection0Title51,
																										expr: &litMatcher{
																											pos:        position{line: 713, col: 13, offset: 30132},
																											val:        "\t",
																											ignoreCase: false,
																										},
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 701, col: 21, offset: 29899},
																							expr: &litMatcher{
																								pos:        position{line: 701, col: 22, offset: 29900},
																								val:        "[",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 701, col: 26, offset: 29904},
																							expr: &litMatcher{
																								pos:        position{line: 701, col: 27, offset: 29905},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 701, col: 31, offset: 29909},
																							expr: &litMatcher{
																								pos:        position{line: 701, col: 32, offset: 29910},
																								val:        "<<",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 701, col: 37, offset: 29915},
																							expr: &litMatcher{
																								pos:        position{line: 701, col: 38, offset: 29916},
																								val:        ">>",
																								ignoreCase: false,
																							},
																						},
																						&anyMatcher{
																							line: 701, col: 42, offset: 29920,
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 126, col: 18, offset: 5262},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 136, col: 17, offset: 5557},
															run: (*parser).callonSection0Title63,
															expr: &seqExpr{
																pos: position{line: 136, col: 17, offset: 5557},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 136, col: 17, offset: 5557},
																		val:        ".",
																		ignoreCase: false,
																	},
																	&notExpr{
																		pos: position{line: 136, col: 21, offset: 5561},
																		expr: &litMatcher{
																			pos:        position{line: 136, col: 22, offset: 5562},
																			val:        ".",
																			ignoreCase: false,
																		},
																	},
																	&notExpr{
																		pos: position{line: 136, col: 26, offset: 5566},
																		expr: &choiceExpr{
																			pos: position{line: 713, col: 7, offset: 30126},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 713, col: 7, offset: 30126},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 713, col: 13, offset: 30132},
																					run: (*parser).callonSection0Title71,
																					expr: &litMatcher{
																						pos:        position{line: 713, col: 13, offset: 30132},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 136, col: 30, offset: 5570},
																		label: "title",
																		expr: &oneOrMoreExpr{
																			pos: position{line: 136, col: 36, offset: 5576},
																			expr: &seqExpr{
																				pos: position{line: 136, col: 37, offset: 5577},
																				exprs: []interface{}{
																					&notExpr{
																						pos: position{line: 136, col: 37, offset: 5577},
																						expr: &choiceExpr{
																							pos: position{line: 717, col: 12, offset: 30188},
																							alternatives: []interface{}{
																								&litMatcher{
																									pos:        position{line: 717, col: 12, offset: 30188},
																									val:        "\r\n",
																									ignoreCase: false,
																								},
																								&charClassMatcher{
																									pos:        position{line: 717, col: 21, offset: 30197},
																									val:        "[\\r\\n]",
																									chars:      []rune{'\r', '\n'},
																									ignoreCase: false,
																									inverted:   false,
																								},
																							},
																						},
																					},
																					&anyMatcher{
																						line: 136, col: 46, offset: 5586,
																					},
																				},
																			},
																		},
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 141, col: 30, offset: 5760},
															run: (*parser).callonSection0Title81,
															expr: &seqExpr{
																pos: position{line: 141, col: 30, offset: 5760},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 141, col: 30, offset: 5760},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 141, col: 34, offset: 5764},
																		label: "k",
																		expr: &choiceExpr{
																			pos: position{line: 442, col: 19, offset: 17830},
																			alternatives: []interface{}{
																				&actionExpr{
																					pos: position{line: 442, col: 19, offset: 17830},
																					run: (*parser).callonSection0Title86,
																					expr: &litMatcher{
																						pos:        position{line: 442, col: 19, offset: 17830},
																						val:        "TIP",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 444, col: 5, offset: 17868},
																					run: (*parser).callonSection0Title88,
																					expr: &litMatcher{
																						pos:        position{line: 444, col: 5, offset: 17868},
																						val:        "NOTE",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 446, col: 5, offset: 17908},
																					run: (*parser).callonSection0Title90,
																					expr: &litMatcher{
																						pos:        position{line: 446, col: 5, offset: 17908},
																						val:        "IMPORTANT",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 448, col: 5, offset: 17958},
																					run: (*parser).callonSection0Title92,
																					expr: &litMatcher{
																						pos:        position{line: 448, col: 5, offset: 17958},
																						val:        "WARNING",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 450, col: 5, offset: 18004},
																					run: (*parser).callonSection0Title94,
																					expr: &litMatcher{
																						pos:        position{line: 450, col: 5, offset: 18004},
																						val:        "CAUTION",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 141, col: 53, offset: 5783},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 146, col: 19, offset: 5896},
															run: (*parser).callonSection0Title97,
															expr: &seqExpr{
																pos: position{line: 146, col: 19, offset: 5896},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 146, col: 19, offset: 5896},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 146, col: 23, offset: 5900},
																		label: "attribute",
																		expr: &choiceExpr{
																			pos: position{line: 150, col: 21, offset: 6095},
																			alternatives: []interface{}{
																				&actionExpr{
																					pos: position{line: 150, col: 21, offset: 6095},
																					run: (*parser).callonSection0Title102,
																					expr: &seqExpr{
																						pos: position{line: 150, col: 21, offset: 6095},
																						exprs: []interface{}{
																							&labeledExpr{
																								pos:   position{line: 150, col: 21, offset: 6095},
																								label: "key",
																								expr: &actionExpr{
																									pos: position{line: 162, col: 17, offset: 6664},
																									run: (*parser).callonSection0Title105,
																									expr: &seqExpr{
																										pos: position{line: 162, col: 17, offset: 6664},
																										exprs: []interface{}{
																											&labeledExpr{
																												pos:   position{line: 162, col: 17, offset: 6664},
																												label: "key",
																												expr: &oneOrMoreExpr{
																													pos: position{line: 162, col: 22, offset: 6669},
																													expr: &seqExpr{
																														pos: position{line: 162, col: 23, offset: 6670},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 162, col: 23, offset: 6670},
																																expr: &choiceExpr{
																																	pos: position{line: 713, col: 7, offset: 30126},
																																	alternatives: []interface{}{
																																		&litMatcher{
																																			pos:        position{line: 713, col: 7, offset: 30126},
																																			val:        " ",
																																			ignoreCase: false,
																																		},
																																		&actionExpr{
																																			pos: position{line: 713, col: 13, offset: 30132},
																																			run: (*parser).callonSection0Title113,
																																			expr: &litMatcher{
																																				pos:        position{line: 713, col: 13, offset: 30132},
																																				val:        "\t",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																},
																															},
																															&notExpr{
																																pos: position{line: 162, col: 27, offset: 6674},
																																expr: &litMatcher{
																																	pos:        position{line: 162, col: 28, offset: 6675},
																																	val:        "=",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 162, col: 32, offset: 6679},
																																expr: &litMatcher{
																																	pos:        position{line: 162, col: 33, offset: 6680},
																																	val:        ",",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 162, col: 37, offset: 6684},
																																expr: &litMatcher{
																																	pos:        position{line: 162, col: 38, offset: 6685},
																																	val:        "]",
																																	ignoreCase: false,
																																},
																															},
																															&anyMatcher{
																																line: 162, col: 42, offset: 6689,
																															},
																														},
																													},
																												},
																											},
																											&zeroOrMoreExpr{
																												pos: position{line: 162, col: 46, offset: 6693},
																												expr: &choiceExpr{
																													pos: position{line: 713, col: 7, offset: 30126},
																													alternatives: []interface{}{
																														&litMatcher{
																															pos:        position{line: 713, col: 7, offset: 30126},
																															val:        " ",
																															ignoreCase: false,
																														},
																														&actionExpr{
																															pos: position{line: 713, col: 13, offset: 30132},
																															run: (*parser).callonSection0Title125,
																															expr: &litMatcher{
																																pos:        position{line: 713, col: 13, offset: 30132},
																																val:        "\t",
																																ignoreCase: false,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&litMatcher{
																								pos:        position{line: 150, col: 40, offset: 6114},
																								val:        "=",
																								ignoreCase: false,
																							},
																							&labeledExpr{
																								pos:   position{line: 150, col: 44, offset: 6118},
																								label: "value",
																								expr: &actionExpr{
																									pos: position{line: 167, col: 19, offset: 6793},
																									run: (*parser).callonSection0Title129,
																									expr: &seqExpr{
																										pos: position{line: 167, col: 19, offset: 6793},
																										exprs: []interface{}{
																											&zeroOrMoreExpr{
																												pos: position{line: 167, col: 19, offset: 6793},
																												expr: &choiceExpr{
																													pos: position{line: 713, col: 7, offset: 30126},
																													alternatives: []interface{}{
																														&litMatcher{
																															pos:        position{line: 713, col: 7, offset: 30126},
																															val:        " ",
																															ignoreCase: false,
																														},
																														&actionExpr{
																															pos: position{line: 713, col: 13, offset: 30132},
																															run: (*parser).callonSection0Title134,
																															expr: &litMatcher{
																																pos:        position{line: 713, col: 13, offset: 30132},
																																val:        "\t",
																																ignoreCase: false,
																															},
																														},
																													},
																												},
																											},
																											&labeledExpr{
																												pos:   position{line: 167, col: 23, offset: 6797},
																												label: "value",
																												expr: &zeroOrMoreExpr{
																													pos: position{line: 167, col: 29, offset: 6803},
																													expr: &seqExpr{
																														pos: position{line: 167, col: 30, offset: 6804},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 167, col: 30, offset: 6804},
																																expr: &choiceExpr{
																																	pos: position{line: 713, col: 7, offset: 30126},
																																	alternatives: []interface{}{
																																		&litMatcher{
																																			pos:        position{line: 713, col: 7, offset: 30126},
																																			val:        " ",
																																			ignoreCase: false,
																																		},
																																		&actionExpr{
																																			pos: position{line: 713, col: 13, offset: 30132},
																																			run: (*parser).callonSection0Title142,
																																			expr: &litMatcher{
																																				pos:        position{line: 713, col: 13, offset: 30132},
																																				val:        "\t",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																},
																															},
																															&notExpr{
																																pos: position{line: 167, col: 34, offset: 6808},
																																expr: &litMatcher{
																																	pos:        position{line: 167, col: 35, offset: 6809},
																																	val:        "=",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 167, col: 39, offset: 6813},
																																expr: &litMatcher{
																																	pos:        position{line: 167, col: 40, offset: 6814},
																																	val:        "]",
																																	ignoreCase: false,
																																},
																															},
																															&anyMatcher{
																																line: 167, col: 44, offset: 6818,
																															},
																														},
																													},
																												},
																											},
																											&zeroOrMoreExpr{
																												pos: position{line: 167, col: 48, offset: 6822},
																												expr: &choiceExpr{
																													pos: position{line: 713, col: 7, offset: 30126},
																													alternatives: []interface{}{
																														&litMatcher{
																															pos:        position{line: 713, col: 7, offset: 30126},
																															val:        " ",
																															ignoreCase: false,
																														},
																														&actionExpr{
																															pos: position{line: 713, col: 13, offset: 30132},
																															run: (*parser).callonSection0Title152,
																															expr: &litMatcher{
																																pos:        position{line: 713, col: 13, offset: 30132},
																																val:        "\t",
																																ignoreCase: false,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																				&actionExpr{
																					pos: position{line: 152, col: 5, offset: 6244},
																					run: (*parser).callonSection0Title154,
																					expr: &labeledExpr{
																						pos:   position{line: 152, col: 5, offset: 6244},
																						label: "key",
																						expr: &actionExpr{
																							pos: position{line: 162, col: 17, offset: 6664},
																							run: (*parser).callonSection0Title156,
																							expr: &seqExpr{
																								pos: position{line: 162, col: 17, offset: 6664},
																								exprs: []interface{}{
																									&labeledExpr{
																										pos:   position{line: 162, col: 17, offset: 6664},
																										label: "key",
																										expr: &oneOrMoreExpr{
																											pos: position{line: 162, col: 22, offset: 6669},
																											expr: &seqExpr{
																												pos: position{line: 162, col: 23, offset: 6670},
																												exprs: []interface{}{
																													&notExpr{
																														pos: position{line: 162, col: 23, offset: 6670},
																														expr: &choiceExpr{
																															pos: position{line: 713, col: 7, offset: 30126},
																															alternatives: []interface{}{
																																&litMatcher{
																																	pos:        position{line: 713, col: 7, offset: 30126},
																																	val:        " ",
																																	ignoreCase: false,
																																},
																																&actionExpr{
																																	pos: position{line: 713, col: 13, offset: 30132},
																																	run: (*parser).callonSection0Title164,
																																	expr: &litMatcher{
																																		pos:        position{line: 713, col: 13, offset: 30132},
																																		val:        "\t",
																																		ignoreCase: false,
																																	},
																																},
																															},
																														},
																													},
																													&notExpr{
																														pos: position{line: 162, col: 27, offset: 6674},
																														expr: &litMatcher{
																															pos:        position{line: 162, col: 28, offset: 6675},
																															val:        "=",
																															ignoreCase: false,
																														},
																													},
																													&notExpr{
																														pos: position{line: 162, col: 32, offset: 6679},
																														expr: &litMatcher{
																															pos:        position{line: 162, col: 33, offset: 6680},
																															val:        ",",
																															ignoreCase: false,
																														},
																													},
																													&notExpr{
																														pos: position{line: 162, col: 37, offset: 6684},
																														expr: &litMatcher{
																															pos:        position{line: 162, col: 38, offset: 6685},
																															val:        "]",
																															ignoreCase: false,
																														},
																													},
																													&anyMatcher{
																														line: 162, col: 42, offset: 6689,
																													},
																												},
																											},
																										},
																									},
																									&zeroOrMoreExpr{
																										pos: position{line: 162, col: 46, offset: 6693},
																										expr: &choiceExpr{
																											pos: position{line: 713, col: 7, offset: 30126},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 713, col: 7, offset: 30126},
																													val:        " ",
																													ignoreCase: false,
																												},
																												&actionExpr{
																													pos: position{line: 713, col: 13, offset: 30132},
																													run: (*parser).callonSection0Title176,
																													expr: &litMatcher{
																														pos:        position{line: 713, col: 13, offset: 30132},
																														val:        "\t",
																														ignoreCase: false,
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 146, col: 52, offset: 5929},
																		label: "attributes",
																		expr: &zeroOrMoreExpr{
																			pos: position{line: 146, col: 63, offset: 5940},
																			expr: &choiceExpr{
																				pos: position{line: 156, col: 26, offset: 6376},
																				alternatives: []interface{}{
																					&actionExpr{
																						pos: position{line: 156, col: 26, offset: 6376},
																						run: (*parser).callonSection0Title181,
																						expr: &seqExpr{
																							pos: position{line: 156, col: 26, offset: 6376},
																							exprs: []interface{}{
																								&litMatcher{
																									pos:        position{line: 156, col: 26, offset: 6376},
																									val:        ",",
																									ignoreCase: false,
																								},
																								&zeroOrMoreExpr{
																									pos: position{line: 156, col: 30, offset: 6380},
																									expr: &choiceExpr{
																										pos: position{line: 713, col: 7, offset: 30126},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 713, col: 7, offset: 30126},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 713, col: 13, offset: 30132},
																												run: (*parser).callonSection0Title187,
																												expr: &litMatcher{
																													pos:        position{line: 713, col: 13, offset: 30132},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																								&labeledExpr{
																									pos:   position{line: 156, col: 34, offset: 6384},
																									label: "key",
																									expr: &actionExpr{
																										pos: position{line: 162, col: 17, offset: 6664},
																										run: (*parser).callonSection0Title190,
																										expr: &seqExpr{
																											pos: position{line: 162, col: 17, offset: 6664},
																											exprs: []interface{}{
																												&labeledExpr{
																													pos:   position{line: 162, col: 17, offset: 6664},
																													label: "key",
																													expr: &oneOrMoreExpr{
																														pos: position{line: 162, col: 22, offset: 6669},
																														expr: &seqExpr{
																															pos: position{line: 162, col: 23, offset: 6670},
																															exprs: []interface{}{
																																&notExpr{
																																	pos: position{line: 162, col: 23, offset: 6670},
																																	expr: &choiceExpr{
																																		pos: position{line: 713, col: 7, offset: 30126},
																																		alternatives: []interface{}{
																																			&litMatcher{
																																				pos:        position{line: 713, col: 7, offset: 30126},
																																				val:        " ",
																																				ignoreCase: false,
																																			},
																																			&actionExpr{
																																				pos: position{line: 713, col: 13, offset: 30132},
																																				run: (*parser).callonSection0Title198,
																																				expr: &litMatcher{
																																					pos:        position{line: 713, col: 13, offset: 30132},
																																					val:        "\t",
																																					ignoreCase: false,
																																				},
																																			},
																																		},
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 162, col: 27, offset: 6674},
																																	expr: &litMatcher{
																																		pos:        position{line: 162, col: 28, offset: 6675},
																																		val:        "=",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 162, col: 32, offset: 6679},
																																	expr: &litMatcher{
																																		pos:        position{line: 162, col: 33, offset: 6680},
																																		val:        ",",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 162, col: 37, offset: 6684},
																																	expr: &litMatcher{
																																		pos:        position{line: 162, col: 38, offset: 6685},
																																		val:        "]",
																																		ignoreCase: false,
																																	},
																																},
																																&anyMatcher{
																																	line: 162, col: 42, offset: 6689,
																																},
																															},
																														},
																													},
																												},
																												&zeroOrMoreExpr{
																													pos: position{line: 162, col: 46, offset: 6693},
																													expr: &choiceExpr{
																														pos: position{line: 713, col: 7, offset: 30126},
																														alternatives: []interface{}{
																															&litMatcher{
																																pos:        position{line: 713, col: 7, offset: 30126},
																																val:        " ",
																																ignoreCase: false,
																															},
																															&actionExpr{
																																pos: position{line: 713, col: 13, offset: 30132},
																																run: (*parser).callonSection0Title210,
																																expr: &litMatcher{
																																	pos:        position{line: 713, col: 13, offset: 30132},
																																	val:        "\t",
																																	ignoreCase: false,
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&litMatcher{
																									pos:        position{line: 156, col: 53, offset: 6403},
																									val:        "=",
																									ignoreCase: false,
																								},
																								&labeledExpr{
																									pos:   position{line: 156, col: 57, offset: 6407},
																									label: "value",
																									expr: &actionExpr{
																										pos: position{line: 167, col: 19, offset: 6793},
																										run: (*parser).callonSection0Title214,
																										expr: &seqExpr{
																											pos: position{line: 167, col: 19, offset: 6793},
																											exprs: []interface{}{
																												&zeroOrMoreExpr{
																													pos: position{line: 167, col: 19, offset: 6793},
																													expr: &choiceExpr{
																														pos: position{line: 713, col: 7, offset: 30126},
																														alternatives: []interface{}{
																															&litMatcher{
																																pos:        position{line: 713, col: 7, offset: 30126},
																																val:        " ",
																																ignoreCase: false,
																															},
																															&actionExpr{
																																pos: position{line: 713, col: 13, offset: 30132},
																																run: (*parser).callonSection0Title219,
																																expr: &litMatcher{
																																	pos:        position{line: 713, col: 13, offset: 30132},
																																	val:        "\t",
																																	ignoreCase: false,
																																},
																															},
																														},
																													},
																												},
																												&labeledExpr{
																													pos:   position{line: 167, col: 23, offset: 6797},
																													label: "value",
																													expr: &zeroOrMoreExpr{
																														pos: position{line: 167, col: 29, offset: 6803},
																														expr: &seqExpr{
																															pos: position{line: 167, col: 30, offset: 6804},
																															exprs: []interface{}{
																																&notExpr{
																																	pos: position{line: 167, col: 30, offset: 6804},
																																	expr: &choiceExpr{
																																		pos: position{line: 713, col: 7, offset: 30126},
																																		alternatives: []interface{}{
																																			&litMatcher{
																																				pos:        position{line: 713, col: 7, offset: 30126},
																																				val:        " ",
																																				ignoreCase: false,
																																			},
																																			&actionExpr{
																																				pos: position{line: 713, col: 13, offset: 30132},
																																				run: (*parser).callonSection0Title227,
																																				expr: &litMatcher{
																																					pos:        position{line: 713, col: 13, offset: 30132},
																																					val:        "\t",
																																					ignoreCase: false,
																																				},
																																			},
																																		},
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 167, col: 34, offset: 6808},
																																	expr: &litMatcher{
																																		pos:        position{line: 167, col: 35, offset: 6809},
																																		val:        "=",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 167, col: 39, offset: 6813},
																																	expr: &litMatcher{
																																		pos:        position{line: 167, col: 40, offset: 6814},
																																		val:        "]",
																																		ignoreCase: false,
																																	},
																																},
																																&anyMatcher{
																																	line: 167, col: 44, offset: 6818,
																																},
																															},
																														},
																													},
																												},
																												&zeroOrMoreExpr{
																													pos: position{line: 167, col: 48, offset: 6822},
																													expr: &choiceExpr{
																														pos: position{line: 713, col: 7, offset: 30126},
																														alternatives: []interface{}{
																															&litMatcher{
																																pos:        position{line: 713, col: 7, offset: 30126},
																																val:        " ",
																																ignoreCase: false,
																															},
																															&actionExpr{
																																pos: position{line: 713, col: 13, offset: 30132},
																																run: (*parser).callonSection0Title237,
																																expr: &litMatcher{
																																	pos:        position{line: 713, col: 13, offset: 30132},
																																	val:        "\t",
																																	ignoreCase: false,
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																					&actionExpr{
																						pos: position{line: 158, col: 5, offset: 6533},
																						run: (*parser).callonSection0Title239,
																						expr: &seqExpr{
																							pos: position{line: 158, col: 5, offset: 6533},
																							exprs: []interface{}{
																								&litMatcher{
																									pos:        position{line: 158, col: 5, offset: 6533},
																									val:        ",",
																									ignoreCase: false,
																								},
																								&zeroOrMoreExpr{
																									pos: position{line: 158, col: 9, offset: 6537},
																									expr: &choiceExpr{
																										pos: position{line: 713, col: 7, offset: 30126},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 713, col: 7, offset: 30126},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 713, col: 13, offset: 30132},
																												run: (*parser).callonSection0Title245,
																												expr: &litMatcher{
																													pos:        position{line: 713, col: 13, offset: 30132},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																								&labeledExpr{
																									pos:   position{line: 158, col: 13, offset: 6541},
																									label: "key",
																									expr: &actionExpr{
																										pos: position{line: 162, col: 17, offset: 6664},
																										run: (*parser).callonSection0Title248,
																										expr: &seqExpr{
																											pos: position{line: 162, col: 17, offset: 6664},
																											exprs: []interface{}{
																												&labeledExpr{
																													pos:   position{line: 162, col: 17, offset: 6664},
																													label: "key",
																													expr: &oneOrMoreExpr{
																														pos: position{line: 162, col: 22, offset: 6669},
																														expr: &seqExpr{
																															pos: position{line: 162, col: 23, offset: 6670},
																															exprs: []interface{}{
																																&notExpr{
																																	pos: position{line: 162, col: 23, offset: 6670},
																																	expr: &choiceExpr{
																																		pos: position{line: 713, col: 7, offset: 30126},
																																		alternatives: []interface{}{
																																			&litMatcher{
																																				pos:        position{line: 713, col: 7, offset: 30126},
																																				val:        " ",
																																				ignoreCase: false,
																																			},
																																			&actionExpr{
																																				pos: position{line: 713, col: 13, offset: 30132},
																																				run: (*parser).callonSection0Title256,
																																				expr: &litMatcher{
																																					pos:        position{line: 713, col: 13, offset: 30132},
																																					val:        "\t",
																																					ignoreCase: false,
																																				},
																																			},
																																		},
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 162, col: 27, offset: 6674},
																																	expr: &litMatcher{
																																		pos:        position{line: 162, col: 28, offset: 6675},
																																		val:        "=",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 162, col: 32, offset: 6679},
																																	expr: &litMatcher{
																																		pos:        position{line: 162, col: 33, offset: 6680},
																																		val:        ",",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 162, col: 37, offset: 6684},
																																	expr: &litMatcher{
																																		pos:        position{line: 162, col: 38, offset: 6685},
																																		val:        "]",
																																		ignoreCase: false,
																																	},
																																},
																																&anyMatcher{
																																	line: 162, col: 42, offset: 6689,
																																},
																															},
																														},
																													},
																												},
																												&zeroOrMoreExpr{
																													pos: position{line: 162, col: 46, offset: 6693},
																													expr: &choiceExpr{
																														pos: position{line: 713, col: 7, offset: 30126},
																														alternatives: []interface{}{
																															&litMatcher{
																																pos:        position{line: 713, col: 7, offset: 30126},
																																val:        " ",
																																ignoreCase: false,
																															},
																															&actionExpr{
																																pos: position{line: 713, col: 13, offset: 30132},
																																run: (*parser).callonSection0Title268,
																																expr: &litMatcher{
																																	pos:        position{line: 713, col: 13, offset: 30132},
																																	val:        "\t",
																																	ignoreCase: false,
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 146, col: 89, offset: 5966},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
													},
												},
											},
											&zeroOrMoreExpr{
												pos: position{line: 120, col: 98, offset: 5095},
												expr: &choiceExpr{
													pos: position{line: 713, col: 7, offset: 30126},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 713, col: 7, offset: 30126},
															val:        " ",
															ignoreCase: false,
														},
														&actionExpr{
															pos: position{line: 713, col: 13, offset: 30132},
															run: (*parser).callonSection0Title274,
															expr: &litMatcher{
																pos:        position{line: 713, col: 13, offset: 30132},
																val:        "\t",
																ignoreCase: false,
															},
														},
													},
												},
											},
											&choiceExpr{
												pos: position{line: 721, col: 8, offset: 30228},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 717, col: 12, offset: 30188},
														val:        "\r\n",
														ignoreCase: false,
													},
													&charClassMatcher{
														pos:        position{line: 717, col: 21, offset: 30197},
														val:        "[\\r\\n]",
														chars:      []rune{'\r', '\n'},
														ignoreCase: false,
														inverted:   false,
													},
													&notExpr{
														pos: position{line: 719, col: 8, offset: 30217},
														expr: &anyMatcher{
															line: 719, col: 9, offset: 30218,
														},
													},
												},
											},
										},
									},
								},
							},
						},
						&litMatcher{
							pos:        position{line: 200, col: 24, offset: 7866},
							val:        "=",
							ignoreCase: false,
						},
						&oneOrMoreExpr{
							pos: position{line: 200, col: 28, offset: 7870},
							expr: &choiceExpr{
								pos: position{line: 713, col: 7, offset: 30126},
								alternatives: []interface{}{
									&litMatcher{
										pos:        position{line: 713, col: 7, offset: 30126},
										val:        " ",
										ignoreCase: false,
									},
									&actionExpr{
										pos: position{line: 713, col: 13, offset: 30132},
										run: (*parser).callonSection0Title285,
										expr: &litMatcher{
											pos:        position{line: 713, col: 13, offset: 30132},
											val:        "\t",
											ignoreCase: false,
										},
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 202, col: 69, offset: 7943},
							label: "content",
							expr: &ruleRefExpr{
								pos:  position{line: 202, col: 78, offset: 7952},
								name: "TitleElements",
							},
						},
						&zeroOrMoreExpr{
							pos: position{line: 202, col: 93, offset: 7967},
							expr: &choiceExpr{
								pos: position{line: 713, col: 7, offset: 30126},
								alternatives: []interface{}{
									&litMatcher{
										pos:        position{line: 713, col: 7, offset: 30126},
										val:        " ",
										ignoreCase: false,
									},
									&actionExpr{
										pos: position{line: 713, col: 13, offset: 30132},
										run: (*parser).callonSection0Title292,
										expr: &litMatcher{
											pos:        position{line: 713, col: 13, offset: 30132},
											val:        "\t",
											ignoreCase: false,
										},
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 202, col: 97, offset: 7971},
							label: "id",
							expr: &zeroOrOneExpr{
								pos: position{line: 202, col: 100, offset: 7974},
								expr: &actionExpr{
									pos: position{line: 130, col: 20, offset: 5333},
									run: (*parser).callonSection0Title296,
									expr: &seqExpr{
										pos: position{line: 130, col: 20, offset: 5333},
										exprs: []interface{}{
											&litMatcher{
												pos:        position{line: 130, col: 20, offset: 5333},
												val:        "[[",
												ignoreCase: false,
											},
											&labeledExpr{
												pos:   position{line: 130, col: 25, offset: 5338},
												label: "id",
												expr: &actionExpr{
													pos: position{line: 701, col: 7, offset: 29885},
													run: (*parser).callonSection0Title300,
													expr: &oneOrMoreExpr{
														pos: position{line: 701, col: 7, offset: 29885},
														expr: &seqExpr{
															pos: position{line: 701, col: 8, offset: 29886},
															exprs: []interface{}{
																&notExpr{
																	pos: position{line: 701, col: 8, offset: 29886},
																	expr: &choiceExpr{
																		pos: position{line: 717, col: 12, offset: 30188},
																		alternatives: []interface{}{
																			&litMatcher{
																				pos:        position{line: 717, col: 12, offset: 30188},
																				val:        "\r\n",
																				ignoreCase: false,
																			},
																			&charClassMatcher{
																				pos:        position{line: 717, col: 21, offset: 30197},
																				val:        "[\\r\\n]",
																				chars:      []rune{'\r', '\n'},
																				ignoreCase: false,
																				inverted:   false,
																			},
																		},
																	},
																},
																&notExpr{
																	pos: position{line: 701, col: 17, offset: 29895},
																	expr: &choiceExpr{
																		pos: position{line: 713, col: 7, offset: 30126},
																		alternatives: []interface{}{
																			&litMatcher{
																				pos:        position{line: 713, col: 7, offset: 30126},
																				val:        " ",
																				ignoreCase: false,
																			},
																			&actionExpr{
																				pos: position{line: 713, col: 13, offset: 30132},
																				run: (*parser).callonSection0Title310,
																				expr: &litMatcher{
																					pos:        position{line: 713, col: 13, offset: 30132},
																					val:        "\t",
																					ignoreCase: false,
																				},
																			},
																		},
																	},
																},
																&notExpr{
																	pos: position{line: 701, col: 21, offset: 29899},
																	expr: &litMatcher{
																		pos:        position{line: 701, col: 22, offset: 29900},
																		val:        "[",
																		ignoreCase: false,
																	},
																},
																&notExpr{
																	pos: position{line: 701, col: 26, offset: 29904},
																	expr: &litMatcher{
																		pos:        position{line: 701, col: 27, offset: 29905},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
																&notExpr{
																	pos: position{line: 701, col: 31, offset: 29909},
																	expr: &litMatcher{
																		pos:        position{line: 701, col: 32, offset: 29910},
																		val:        "<<",
																		ignoreCase: false,
																	},
																},
																&notExpr{
																	pos: position{line: 701, col: 37, offset: 29915},
																	expr: &litMatcher{
																		pos:        position{line: 701, col: 38, offset: 29916},
																		val:        ">>",
																		ignoreCase: false,
																	},
																},
																&anyMatcher{
																	line: 701, col: 42, offset: 29920,
																},
															},
														},
													},
												},
											},
											&litMatcher{
												pos:        position{line: 130, col: 33, offset: 5346},
												val:        "]]",
												ignoreCase: false,
											},
										},
									},
								},
							},
						},
						&zeroOrMoreExpr{
							pos: position{line: 202, col: 119, offset: 7993},
							expr: &choiceExpr{
								pos: position{line: 713, col: 7, offset: 30126},
								alternatives: []interface{}{
									&litMatcher{
										pos:        position{line: 713, col: 7, offset: 30126},
										val:        " ",
										ignoreCase: false,
									},
									&actionExpr{
										pos: position{line: 713, col: 13, offset: 30132},
										run: (*parser).callonSection0Title325,
										expr: &litMatcher{
											pos:        position{line: 713, col: 13, offset: 30132},
											val:        "\t",
											ignoreCase: false,
										},
									},
								},
							},
						},
						&choiceExpr{
							pos: position{line: 721, col: 8, offset: 30228},
							alternatives: []interface{}{
								&litMatcher{
									pos:        position{line: 717, col: 12, offset: 30188},
									val:        "\r\n",
									ignoreCase: false,
								},
								&charClassMatcher{
									pos:        position{line: 717, col: 21, offset: 30197},
									val:        "[\\r\\n]",
									chars:      []rune{'\r', '\n'},
									ignoreCase: false,
									inverted:   false,
								},
								&notExpr{
									pos: position{line: 719, col: 8, offset: 30217},
									expr: &anyMatcher{
										line: 719, col: 9, offset: 30218,
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "Section0Block",
			pos:  position{line: 206, col: 1, offset: 8112},
			expr: &actionExpr{
				pos: position{line: 206, col: 18, offset: 8129},
				run: (*parser).callonSection0Block1,
				expr: &seqExpr{
					pos: position{line: 206, col: 18, offset: 8129},
					exprs: []interface{}{
						&notExpr{
							pos: position{line: 206, col: 18, offset: 8129},
							expr: &ruleRefExpr{
								pos:  position{line: 206, col: 19, offset: 8130},
								name: "Section0",
							},
						},
						&labeledExpr{
							pos:   position{line: 206, col: 28, offset: 8139},
							label: "content",
							expr: &choiceExpr{
								pos: position{line: 206, col: 37, offset: 8148},
								alternatives: []interface{}{
									&ruleRefExpr{
										pos:  position{line: 206, col: 37, offset: 8148},
										name: "Section1",
									},
									&ruleRefExpr{
										pos:  position{line: 206, col: 48, offset: 8159},
										name: "Section2",
									},
									&ruleRefExpr{
										pos:  position{line: 206, col: 59, offset: 8170},
										name: "Section3",
									},
									&ruleRefExpr{
										pos:  position{line: 206, col: 70, offset: 8181},
										name: "Section4",
									},
									&ruleRefExpr{
										pos:  position{line: 206, col: 81, offset: 8192},
										name: "Section5",
									},
									&ruleRefExpr{
										pos:  position{line: 206, col: 92, offset: 8203},
										name: "DocumentBlock",
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "Section1",
			pos:  position{line: 210, col: 1, offset: 8247},
			expr: &actionExpr{
				pos: position{line: 210, col: 13, offset: 8259},
				run: (*parser).callonSection11,
				expr: &seqExpr{
					pos: position{line: 210, col: 13, offset: 8259},
					exprs: []interface{}{
						&notExpr{
							pos: position{line: 210, col: 13, offset: 8259},
							expr: &notExpr{
								pos: position{line: 719, col: 8, offset: 30217},
								expr: &anyMatcher{
									line: 719, col: 9, offset: 30218,
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 211, col: 5, offset: 8330},
							label: "section",
							expr: &actionExpr{
								pos: position{line: 211, col: 14, offset: 8339},
								run: (*parser).callonSection17,
								expr: &seqExpr{
									pos: position{line: 211, col: 14, offset: 8339},
									exprs: []interface{}{
										&labeledExpr{
											pos:   position{line: 211, col: 14, offset: 8339},
											label: "header",
											expr: &ruleRefExpr{
												pos:  position{line: 211, col: 22, offset: 8347},
												name: "Section1Title",
											},
										},
										&labeledExpr{
											pos:   position{line: 211, col: 37, offset: 8362},
											label: "elements",
											expr: &zeroOrMoreExpr{
												pos: position{line: 211, col: 47, offset: 8372},
												expr: &ruleRefExpr{
													pos:  position{line: 211, col: 47, offset: 8372},
													name: "Section1Block",
												},
											},
										},
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "Section1Title",
			pos:  position{line: 219, col: 1, offset: 8549},
			expr: &actionExpr{
				pos: position{line: 219, col: 18, offset: 8566},
				run: (*parser).callonSection1Title1,
				expr: &seqExpr{
					pos: position{line: 219, col: 18, offset: 8566},
					exprs: []interface{}{
						&labeledExpr{
							pos:   position{line: 219, col: 18, offset: 8566},
							label: "attributes",
							expr: &zeroOrMoreExpr{
								pos: position{line: 219, col: 29, offset: 8577},
								expr: &actionExpr{
									pos: position{line: 120, col: 21, offset: 5018},
									run: (*parser).callonSection1Title5,
									expr: &seqExpr{
										pos: position{line: 120, col: 21, offset: 5018},
										exprs: []interface{}{
											&labeledExpr{
												pos:   position{line: 120, col: 21, offset: 5018},
												label: "attr",
												expr: &choiceExpr{
													pos: position{line: 120, col: 27, offset: 5024},
													alternatives: []interface{}{
														&actionExpr{
															pos: position{line: 124, col: 14, offset: 5203},
															run: (*parser).callonSection1Title9,
															expr: &labeledExpr{
																pos:   position{line: 124, col: 14, offset: 5203},
																label: "id",
																expr: &actionExpr{
																	pos: position{line: 130, col: 20, offset: 5333},
																	run: (*parser).callonSection1Title11,
																	expr: &seqExpr{
																		pos: position{line: 130, col: 20, offset: 5333},
																		exprs: []interface{}{
																			&litMatcher{
																				pos:        position{line: 130, col: 20, offset: 5333},
																				val:        "[[",
																				ignoreCase: false,
																			},
																			&labeledExpr{
																				pos:   position{line: 130, col: 25, offset: 5338},
																				label: "id",
																				expr: &actionExpr{
																					pos: position{line: 701, col: 7, offset: 29885},
																					run: (*parser).callonSection1Title15,
																					expr: &oneOrMoreExpr{
																						pos: position{line: 701, col: 7, offset: 29885},
																						expr: &seqExpr{
																							pos: position{line: 701, col: 8, offset: 29886},
																							exprs: []interface{}{
																								&notExpr{
																									pos: position{line: 701, col: 8, offset: 29886},
																									expr: &choiceExpr{
																										pos: position{line: 717, col: 12, offset: 30188},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 717, col: 12, offset: 30188},
																												val:        "\r\n",
																												ignoreCase: false,
																											},
																											&charClassMatcher{
																												pos:        position{line: 717, col: 21, offset: 30197},
																												val:        "[\\r\\n]",
																												chars:      []rune{'\r', '\n'},
																												ignoreCase: false,
																												inverted:   false,
																											},
																										},
																									},
																								},
																								&notExpr{
																									pos: position{line: 701, col: 17, offset: 29895},
																									expr: &choiceExpr{
																										pos: position{line: 713, col: 7, offset: 30126},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 713, col: 7, offset: 30126},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 713, col: 13, offset: 30132},
																												run: (*parser).callonSection1Title25,
																												expr: &litMatcher{
																													pos:        position{line: 713, col: 13, offset: 30132},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																								&notExpr{
																									pos: position{line: 701, col: 21, offset: 29899},
																									expr: &litMatcher{
																										pos:        position{line: 701, col: 22, offset: 29900},
																										val:        "[",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 701, col: 26, offset: 29904},
																									expr: &litMatcher{
																										pos:        position{line: 701, col: 27, offset: 29905},
																										val:        "]",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 701, col: 31, offset: 29909},
																									expr: &litMatcher{
																										pos:        position{line: 701, col: 32, offset: 29910},
																										val:        "<<",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 701, col: 37, offset: 29915},
																									expr: &litMatcher{
																										pos:        position{line: 701, col: 38, offset: 29916},
																										val:        ">>",
																										ignoreCase: false,
																									},
																								},
																								&anyMatcher{
																									line: 701, col: 42, offset: 29920,
																								},
																							},
																						},
																					},
																				},
																			},
																			&litMatcher{
																				pos:        position{line: 130, col: 33, offset: 5346},
																				val:        "]]",
																				ignoreCase: false,
																			},
																		},
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 126, col: 5, offset: 5249},
															run: (*parser).callonSection1Title37,
															expr: &seqExpr{
																pos: position{line: 126, col: 5, offset: 5249},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 126, col: 5, offset: 5249},
																		val:        "[#",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 126, col: 10, offset: 5254},
																		label: "id",
																		expr: &actionExpr{
																			pos: position{line: 701, col: 7, offset: 29885},
																			run: (*parser).callonSection1Title41,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 701, col: 7, offset: 29885},
																				expr: &seqExpr{
																					pos: position{line: 701, col: 8, offset: 29886},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 701, col: 8, offset: 29886},
																							expr: &choiceExpr{
																								pos: position{line: 717, col: 12, offset: 30188},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 717, col: 12, offset: 30188},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 717, col: 21, offset: 30197},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 701, col: 17, offset: 29895},
																							expr: &choiceExpr{
																								pos: position{line: 713, col: 7, offset: 30126},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 713, col: 7, offset: 30126},
																										val:        " ",
																										ignoreCase: false,
																									},
																									&actionExpr{
																										pos: position{line: 713, col: 13, offset: 30132},
																										run: (*parser).callonSection1Title51,
																										expr: &litMatcher{
																											pos:        position{line: 713, col: 13, offset: 30132},
																											val:        "\t",
																											ignoreCase: false,
																										},
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 701, col: 21, offset: 29899},
																							expr: &litMatcher{
																								pos:        position{line: 701, col: 22, offset: 29900},
																								val:        "[",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 701, col: 26, offset: 29904},
																							expr: &litMatcher{
																								pos:        position{line: 701, col: 27, offset: 29905},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 701, col: 31, offset: 29909},
																							expr: &litMatcher{
																								pos:        position{line: 701, col: 32, offset: 29910},
																								val:        "<<",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 701, col: 37, offset: 29915},
																							expr: &litMatcher{
																								pos:        position{line: 701, col: 38, offset: 29916},
																								val:        ">>",
																								ignoreCase: false,
																							},
																						},
																						&anyMatcher{
																							line: 701, col: 42, offset: 29920,
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 126, col: 18, offset: 5262},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 136, col: 17, offset: 5557},
															run: (*parser).callonSection1Title63,
															expr: &seqExpr{
																pos: position{line: 136, col: 17, offset: 5557},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 136, col: 17, offset: 5557},
																		val:        ".",
																		ignoreCase: false,
																	},
																	&notExpr{
																		pos: position{line: 136, col: 21, offset: 5561},
																		expr: &litMatcher{
																			pos:        position{line: 136, col: 22, offset: 5562},
																			val:        ".",
																			ignoreCase: false,
																		},
																	},
																	&notExpr{
																		pos: position{line: 136, col: 26, offset: 5566},
																		expr: &choiceExpr{
																			pos: position{line: 713, col: 7, offset: 30126},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 713, col: 7, offset: 30126},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 713, col: 13, offset: 30132},
																					run: (*parser).callonSection1Title71,
																					expr: &litMatcher{
																						pos:        position{line: 713, col: 13, offset: 30132},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 136, col: 30, offset: 5570},
																		label: "title",
																		expr: &oneOrMoreExpr{
																			pos: position{line: 136, col: 36, offset: 5576},
																			expr: &seqExpr{
																				pos: position{line: 136, col: 37, offset: 5577},
																				exprs: []interface{}{
																					&notExpr{
																						pos: position{line: 136, col: 37, offset: 5577},
																						expr: &choiceExpr{
																							pos: position{line: 717, col: 12, offset: 30188},
																							alternatives: []interface{}{
																								&litMatcher{
																									pos:        position{line: 717, col: 12, offset: 30188},
																									val:        "\r\n",
																									ignoreCase: false,
																								},
																								&charClassMatcher{
																									pos:        position{line: 717, col: 21, offset: 30197},
																									val:        "[\\r\\n]",
																									chars:      []rune{'\r', '\n'},
																									ignoreCase: false,
																									inverted:   false,
																								},
																							},
																						},
																					},
																					&anyMatcher{
																						line: 136, col: 46, offset: 5586,
																					},
																				},
																			},
																		},
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 141, col: 30, offset: 5760},
															run: (*parser).callonSection1Title81,
															expr: &seqExpr{
																pos: position{line: 141, col: 30, offset: 5760},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 141, col: 30, offset: 5760},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 141, col: 34, offset: 5764},
																		label: "k",
																		expr: &choiceExpr{
																			pos: position{line: 442, col: 19, offset: 17830},
																			alternatives: []interface{}{
																				&actionExpr{
																					pos: position{line: 442, col: 19, offset: 17830},
																					run: (*parser).callonSection1Title86,
																					expr: &litMatcher{
																						pos:        position{line: 442, col: 19, offset: 17830},
																						val:        "TIP",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 444, col: 5, offset: 17868},
																					run: (*parser).callonSection1Title88,
																					expr: &litMatcher{
																						pos:        position{line: 444, col: 5, offset: 17868},
																						val:        "NOTE",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 446, col: 5, offset: 17908},
																					run: (*parser).callonSection1Title90,
																					expr: &litMatcher{
																						pos:        position{line: 446, col: 5, offset: 17908},
																						val:        "IMPORTANT",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 448, col: 5, offset: 17958},
																					run: (*parser).callonSection1Title92,
																					expr: &litMatcher{
																						pos:        position{line: 448, col: 5, offset: 17958},
																						val:        "WARNING",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 450, col: 5, offset: 18004},
																					run: (*parser).callonSection1Title94,
																					expr: &litMatcher{
																						pos:        position{line: 450, col: 5, offset: 18004},
																						val:        "CAUTION",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 141, col: 53, offset: 5783},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 146, col: 19, offset: 5896},
															run: (*parser).callonSection1Title97,
															expr: &seqExpr{
																pos: position{line: 146, col: 19, offset: 5896},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 146, col: 19, offset: 5896},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 146, col: 23, offset: 5900},
																		label: "attribute",
																		expr: &choiceExpr{
																			pos: position{line: 150, col: 21, offset: 6095},
																			alternatives: []interface{}{
																				&actionExpr{
																					pos: position{line: 150, col: 21, offset: 6095},
																					run: (*parser).callonSection1Title102,
																					expr: &seqExpr{
																						pos: position{line: 150, col: 21, offset: 6095},
																						exprs: []interface{}{
																							&labeledExpr{
																								pos:   position{line: 150, col: 21, offset: 6095},
																								label: "key",
																								expr: &actionExpr{
																									pos: position{line: 162, col: 17, offset: 6664},
																									run: (*parser).callonSection1Title105,
																									expr: &seqExpr{
																										pos: position{line: 162, col: 17, offset: 6664},
																										exprs: []interface{}{
																											&labeledExpr{
																												pos:   position{line: 162, col: 17, offset: 6664},
																												label: "key",
																												expr: &oneOrMoreExpr{
																													pos: position{line: 162, col: 22, offset: 6669},
																													expr: &seqExpr{
																														pos: position{line: 162, col: 23, offset: 6670},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 162, col: 23, offset: 6670},
																																expr: &choiceExpr{
																																	pos: position{line: 713, col: 7, offset: 30126},
																																	alternatives: []interface{}{
																																		&litMatcher{
																																			pos:        position{line: 713, col: 7, offset: 30126},
																																			val:        " ",
																																			ignoreCase: false,
																																		},
																																		&actionExpr{
																																			pos: position{line: 713, col: 13, offset: 30132},
																																			run: (*parser).callonSection1Title113,
																																			expr: &litMatcher{
																																				pos:        position{line: 713, col: 13, offset: 30132},
																																				val:        "\t",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																},
																															},
																															&notExpr{
																																pos: position{line: 162, col: 27, offset: 6674},
																																expr: &litMatcher{
																																	pos:        position{line: 162, col: 28, offset: 6675},
																																	val:        "=",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 162, col: 32, offset: 6679},
																																expr: &litMatcher{
																																	pos:        position{line: 162, col: 33, offset: 6680},
																																	val:        ",",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 162, col: 37, offset: 6684},
																																expr: &litMatcher{
																																	pos:        position{line: 162, col: 38, offset: 6685},
																																	val:        "]",
																																	ignoreCase: false,
																																},
																															},
																															&anyMatcher{
																																line: 162, col: 42, offset: 6689,
																															},
																														},
																													},
																												},
																											},
																											&zeroOrMoreExpr{
																												pos: position{line: 162, col: 46, offset: 6693},
																												expr: &choiceExpr{
																													pos: position{line: 713, col: 7, offset: 30126},
																													alternatives: []interface{}{
																														&litMatcher{
																															pos:        position{line: 713, col: 7, offset: 30126},
																															val:        " ",
																															ignoreCase: false,
																														},
																														&actionExpr{
																															pos: position{line: 713, col: 13, offset: 30132},
																															run: (*parser).callonSection1Title125,
																															expr: &litMatcher{
																																pos:        position{line: 713, col: 13, offset: 30132},
																																val:        "\t",
																																ignoreCase: false,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&litMatcher{
																								pos:        position{line: 150, col: 40, offset: 6114},
																								val:        "=",
																								ignoreCase: false,
																							},
																							&labeledExpr{
																								pos:   position{line: 150, col: 44, offset: 6118},
																								label: "value",
																								expr: &actionExpr{
																									pos: position{line: 167, col: 19, offset: 6793},
																									run: (*parser).callonSection1Title129,
																									expr: &seqExpr{
																										pos: position{line: 167, col: 19, offset: 6793},
																										exprs: []interface{}{
																											&zeroOrMoreExpr{
																												pos: position{line: 167, col: 19, offset: 6793},
																												expr: &choiceExpr{
																													pos: position{line: 713, col: 7, offset: 30126},
																													alternatives: []interface{}{
																														&litMatcher{
																															pos:        position{line: 713, col: 7, offset: 30126},
																															val:        " ",
																															ignoreCase: false,
																														},
																														&actionExpr{
																															pos: position{line: 713, col: 13, offset: 30132},
																															run: (*parser).callonSection1Title134,
																															expr: &litMatcher{
																																pos:        position{line: 713, col: 13, offset: 30132},
																																val:        "\t",
																																ignoreCase: false,
																															},
																														},
																													},
																												},
																											},
																											&labeledExpr{
																												pos:   position{line: 167, col: 23, offset: 6797},
																												label: "value",
																												expr: &zeroOrMoreExpr{
																													pos: position{line: 167, col: 29, offset: 6803},
																													expr: &seqExpr{
																														pos: position{line: 167, col: 30, offset: 6804},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 167, col: 30, offset: 6804},
																																expr: &choiceExpr{
																																	pos: position{line: 713, col: 7, offset: 30126},
																																	alternatives: []interface{}{
																																		&litMatcher{
																																			pos:        position{line: 713, col: 7, offset: 30126},
																																			val:        " ",
																																			ignoreCase: false,
																																		},
																																		&actionExpr{
																																			pos: position{line: 713, col: 13, offset: 30132},
																																			run: (*parser).callonSection1Title142,
																																			expr: &litMatcher{
																																				pos:        position{line: 713, col: 13, offset: 30132},
																																				val:        "\t",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																},
																															},
																															&notExpr{
																																pos: position{line: 167, col: 34, offset: 6808},
																																expr: &litMatcher{
																																	pos:        position{line: 167, col: 35, offset: 6809},
																																	val:        "=",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 167, col: 39, offset: 6813},
																																expr: &litMatcher{
																																	pos:        position{line: 167, col: 40, offset: 6814},
																																	val:        "]",
																																	ignoreCase: false,
																																},
																															},
																															&anyMatcher{
																																line: 167, col: 44, offset: 6818,
																															},
																														},
																													},
																												},
																											},
																											&zeroOrMoreExpr{
																												pos: position{line: 167, col: 48, offset: 6822},
																												expr: &choiceExpr{
																													pos: position{line: 713, col: 7, offset: 30126},
																													alternatives: []interface{}{
																														&litMatcher{
																															pos:        position{line: 713, col: 7, offset: 30126},
																															val:        " ",
																															ignoreCase: false,
																														},
																														&actionExpr{
																															pos: position{line: 713, col: 13, offset: 30132},
																															run: (*parser).callonSection1Title152,
																															expr: &litMatcher{
																																pos:        position{line: 713, col: 13, offset: 30132},
																																val:        "\t",
																																ignoreCase: false,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																				&actionExpr{
																					pos: position{line: 152, col: 5, offset: 6244},
																					run: (*parser).callonSection1Title154,
																					expr: &labeledExpr{
																						pos:   position{line: 152, col: 5, offset: 6244},
																						label: "key",
																						expr: &actionExpr{
																							pos: position{line: 162, col: 17, offset: 6664},
																							run: (*parser).callonSection1Title156,
																							expr: &seqExpr{
																								pos: position{line: 162, col: 17, offset: 6664},
																								exprs: []interface{}{
																									&labeledExpr{
																										pos:   position{line: 162, col: 17, offset: 6664},
																										label: "key",
																										expr: &oneOrMoreExpr{
																											pos: position{line: 162, col: 22, offset: 6669},
																											expr: &seqExpr{
																												pos: position{line: 162, col: 23, offset: 6670},
																												exprs: []interface{}{
																													&notExpr{
																														pos: position{line: 162, col: 23, offset: 6670},
																														expr: &choiceExpr{
																															pos: position{line: 713, col: 7, offset: 30126},
																															alternatives: []interface{}{
																																&litMatcher{
																																	pos:        position{line: 713, col: 7, offset: 30126},
																																	val:        " ",
																																	ignoreCase: false,
																																},
																																&actionExpr{
																																	pos: position{line: 713, col: 13, offset: 30132},
																																	run: (*parser).callonSection1Title164,
																																	expr: &litMatcher{
																																		pos:        position{line: 713, col: 13, offset: 30132},
																																		val:        "\t",
																																		ignoreCase: false,
																																	},
																																},
																															},
																														},
																													},
																													&notExpr{
																														pos: position{line: 162, col: 27, offset: 6674},
																														expr: &litMatcher{
																															pos:        position{line: 162, col: 28, offset: 6675},
																															val:        "=",
																															ignoreCase: false,
																														},
																													},
																													&notExpr{
																														pos: position{line: 162, col: 32, offset: 6679},
																														expr: &litMatcher{
																															pos:        position{line: 162, col: 33, offset: 6680},
																															val:        ",",
																															ignoreCase: false,
																														},
																													},
																													&notExpr{
																														pos: position{line: 162, col: 37, offset: 6684},
																														expr: &litMatcher{
																															pos:        position{line: 162, col: 38, offset: 6685},
																															val:        "]",
																															ignoreCase: false,
																														},
																													},
																													&anyMatcher{
																														line: 162, col: 42, offset: 6689,
																													},
																												},
																											},
																										},
																									},
																									&zeroOrMoreExpr{
																										pos: position{line: 162, col: 46, offset: 6693},
																										expr: &choiceExpr{
																											pos: position{line: 713, col: 7, offset: 30126},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 713, col: 7, offset: 30126},
																													val:        " ",
																													ignoreCase: false,
																												},
																												&actionExpr{
																													pos: position{line: 713, col: 13, offset: 30132},
																													run: (*parser).callonSection1Title176,
																													expr: &litMatcher{
																														pos:        position{line: 713, col: 13, offset: 30132},
																														val:        "\t",
																														ignoreCase: false,
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 146, col: 52, offset: 5929},
																		label: "attributes",
																		expr: &zeroOrMoreExpr{
																			pos: position{line: 146, col: 63, offset: 5940},
																			expr: &choiceExpr{
																				pos: position{line: 156, col: 26, offset: 6376},
																				alternatives: []interface{}{
																					&actionExpr{
																						pos: position{line: 156, col: 26, offset: 6376},
																						run: (*parser).callonSection1Title181,
																						expr: &seqExpr{
																							pos: position{line: 156, col: 26, offset: 6376},
																							exprs: []interface{}{
																								&litMatcher{
																									pos:        position{line: 156, col: 26, offset: 6376},
																									val:        ",",
																									ignoreCase: false,
																								},
																								&zeroOrMoreExpr{
																									pos: position{line: 156, col: 30, offset: 6380},
																									expr: &choiceExpr{
																										pos: position{line: 713, col: 7, offset: 30126},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 713, col: 7, offset: 30126},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 713, col: 13, offset: 30132},
																												run: (*parser).callonSection1Title187,
																												expr: &litMatcher{
																													pos:        position{line: 713, col: 13, offset: 30132},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																								&labeledExpr{
																									pos:   position{line: 156, col: 34, offset: 6384},
																									label: "key",
																									expr: &actionExpr{
																										pos: position{line: 162, col: 17, offset: 6664},
																										run: (*parser).callonSection1Title190,
																										expr: &seqExpr{
																											pos: position{line: 162, col: 17, offset: 6664},
																											exprs: []interface{}{
																												&labeledExpr{
																													pos:   position{line: 162, col: 17, offset: 6664},
																													label: "key",
																													expr: &oneOrMoreExpr{
																														pos: position{line: 162, col: 22, offset: 6669},
																														expr: &seqExpr{
																															pos: position{line: 162, col: 23, offset: 6670},
																															exprs: []interface{}{
																																&notExpr{
																																	pos: position{line: 162, col: 23, offset: 6670},
																																	expr: &choiceExpr{
																																		pos: position{line: 713, col: 7, offset: 30126},
																																		alternatives: []interface{}{
																																			&litMatcher{
																																				pos:        position{line: 713, col: 7, offset: 30126},
																																				val:        " ",
																																				ignoreCase: false,
																																			},
																																			&actionExpr{
																																				pos: position{line: 713, col: 13, offset: 30132},
																																				run: (*parser).callonSection1Title198,
																																				expr: &litMatcher{
																																					pos:        position{line: 713, col: 13, offset: 30132},
																																					val:        "\t",
																																					ignoreCase: false,
																																				},
																																			},
																																		},
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 162, col: 27, offset: 6674},
																																	expr: &litMatcher{
																																		pos:        position{line: 162, col: 28, offset: 6675},
																																		val:        "=",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 162, col: 32, offset: 6679},
																																	expr: &litMatcher{
																																		pos:        position{line: 162, col: 33, offset: 6680},
																																		val:        ",",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 162, col: 37, offset: 6684},
																																	expr: &litMatcher{
																																		pos:        position{line: 162, col: 38, offset: 6685},
																																		val:        "]",
																																		ignoreCase: false,
																																	},
																																},
																																&anyMatcher{
																																	line: 162, col: 42, offset: 6689,
																																},
																															},
																														},
																													},
																												},
																												&zeroOrMoreExpr{
																													pos: position{line: 162, col: 46, offset: 6693},
																													expr: &choiceExpr{
																														pos: position{line: 713, col: 7, offset: 30126},
																														alternatives: []interface{}{
																															&litMatcher{
																																pos:        position{line: 713, col: 7, offset: 30126},
																																val:        " ",
																																ignoreCase: false,
																															},
																															&actionExpr{
																																pos: position{line: 713, col: 13, offset: 30132},
																																run: (*parser).callonSection1Title210,
																																expr: &litMatcher{
																																	pos:        position{line: 713, col: 13, offset: 30132},
																																	val:        "\t",
																																	ignoreCase: false,
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&litMatcher{
																									pos:        position{line: 156, col: 53, offset: 6403},
																									val:        "=",
																									ignoreCase: false,
																								},
																								&labeledExpr{
																									pos:   position{line: 156, col: 57, offset: 6407},
																									label: "value",
																									expr: &actionExpr{
																										pos: position{line: 167, col: 19, offset: 6793},
																										run: (*parser).callonSection1Title214,
																										expr: &seqExpr{
																											pos: position{line: 167, col: 19, offset: 6793},
																											exprs: []interface{}{
																												&zeroOrMoreExpr{
																													pos: position{line: 167, col: 19, offset: 6793},
																													expr: &choiceExpr{
																														pos: position{line: 713, col: 7, offset: 30126},
																														alternatives: []interface{}{
																															&litMatcher{
																																pos:        position{line: 713, col: 7, offset: 30126},
																																val:        " ",
																																ignoreCase: false,
																															},
																															&actionExpr{
																																pos: position{line: 713, col: 13, offset: 30132},
																																run: (*parser).callonSection1Title219,
																																expr: &litMatcher{
																																	pos:        position{line: 713, col: 13, offset: 30132},
																																	val:        "\t",
																																	ignoreCase: false,
																																},
																															},
																														},
																													},
																												},
																												&labeledExpr{
																													pos:   position{line: 167, col: 23, offset: 6797},
																													label: "value",
																													expr: &zeroOrMoreExpr{
																														pos: position{line: 167, col: 29, offset: 6803},
																														expr: &seqExpr{
																															pos: position{line: 167, col: 30, offset: 6804},
																															exprs: []interface{}{
																																&notExpr{
																																	pos: position{line: 167, col: 30, offset: 6804},
																																	expr: &choiceExpr{
																																		pos: position{line: 713, col: 7, offset: 30126},
																																		alternatives: []interface{}{
																																			&litMatcher{
																																				pos:        position{line: 713, col: 7, offset: 30126},
																																				val:        " ",
																																				ignoreCase: false,
																																			},
																																			&actionExpr{
																																				pos: position{line: 713, col: 13, offset: 30132},
																																				run: (*parser).callonSection1Title227,
																																				expr: &litMatcher{
																																					pos:        position{line: 713, col: 13, offset: 30132},
																																					val:        "\t",
																																					ignoreCase: false,
																																				},
																																			},
																																		},
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 167, col: 34, offset: 6808},
																																	expr: &litMatcher{
																																		pos:        position{line: 167, col: 35, offset: 6809},
																																		val:        "=",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 167, col: 39, offset: 6813},
																																	expr: &litMatcher{
																																		pos:        position{line: 167, col: 40, offset: 6814},
																																		val:        "]",
																																		ignoreCase: false,
																																	},
																																},
																																&anyMatcher{
																																	line: 167, col: 44, offset: 6818,
																																},
																															},
																														},
																													},
																												},
																												&zeroOrMoreExpr{
																													pos: position{line: 167, col: 48, offset: 6822},
																													expr: &choiceExpr{
																														pos: position{line: 713, col: 7, offset: 30126},
																														alternatives: []interface{}{
																															&litMatcher{
																																pos:        position{line: 713, col: 7, offset: 30126},
																																val:        " ",
																																ignoreCase: false,
																															},
																															&actionExpr{
																																pos: position{line: 713, col: 13, offset: 30132},
																																run: (*parser).callonSection1Title237,
																																expr: &litMatcher{
																																	pos:        position{line: 713, col: 13, offset: 30132},
																																	val:        "\t",
																																	ignoreCase: false,
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																					&actionExpr{
																						pos: position{line: 158, col: 5, offset: 6533},
																						run: (*parser).callonSection1Title239,
																						expr: &seqExpr{
																							pos: position{line: 158, col: 5, offset: 6533},
																							exprs: []interface{}{
																								&litMatcher{
																									pos:        position{line: 158, col: 5, offset: 6533},
																									val:        ",",
																									ignoreCase: false,
																								},
																								&zeroOrMoreExpr{
																									pos: position{line: 158, col: 9, offset: 6537},
																									expr: &choiceExpr{
																										pos: position{line: 713, col: 7, offset: 30126},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 713, col: 7, offset: 30126},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 713, col: 13, offset: 30132},
																												run: (*parser).callonSection1Title245,
																												expr: &litMatcher{
																													pos:        position{line: 713, col: 13, offset: 30132},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																								&labeledExpr{
																									pos:   position{line: 158, col: 13, offset: 6541},
																									label: "key",
																									expr: &actionExpr{
																										pos: position{line: 162, col: 17, offset: 6664},
																										run: (*parser).callonSection1Title248,
																										expr: &seqExpr{
																											pos: position{line: 162, col: 17, offset: 6664},
																											exprs: []interface{}{
																												&labeledExpr{
																													pos:   position{line: 162, col: 17, offset: 6664},
																													label: "key",
																													expr: &oneOrMoreExpr{
																														pos: position{line: 162, col: 22, offset: 6669},
																														expr: &seqExpr{
																															pos: position{line: 162, col: 23, offset: 6670},
																															exprs: []interface{}{
																																&notExpr{
																																	pos: position{line: 162, col: 23, offset: 6670},
																																	expr: &choiceExpr{
																																		pos: position{line: 713, col: 7, offset: 30126},
																																		alternatives: []interface{}{
																																			&litMatcher{
																																				pos:        position{line: 713, col: 7, offset: 30126},
																																				val:        " ",
																																				ignoreCase: false,
																																			},
																																			&actionExpr{
																																				pos: position{line: 713, col: 13, offset: 30132},
																																				run: (*parser).callonSection1Title256,
																																				expr: &litMatcher{
																																					pos:        position{line: 713, col: 13, offset: 30132},
																																					val:        "\t",
																																					ignoreCase: false,
																																				},
																																			},
																																		},
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 162, col: 27, offset: 6674},
																																	expr: &litMatcher{
																																		pos:        position{line: 162, col: 28, offset: 6675},
																																		val:        "=",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 162, col: 32, offset: 6679},
																																	expr: &litMatcher{
																																		pos:        position{line: 162, col: 33, offset: 6680},
																																		val:        ",",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 162, col: 37, offset: 6684},
																																	expr: &litMatcher{
																																		pos:        position{line: 162, col: 38, offset: 6685},
																																		val:        "]",
																																		ignoreCase: false,
																																	},
																																},
																																&anyMatcher{
																																	line: 162, col: 42, offset: 6689,
																																},
																															},
																														},
																													},
																												},
																												&zeroOrMoreExpr{
																													pos: position{line: 162, col: 46, offset: 6693},
																													expr: &choiceExpr{
																														pos: position{line: 713, col: 7, offset: 30126},
																														alternatives: []interface{}{
																															&litMatcher{
																																pos:        position{line: 713, col: 7, offset: 30126},
																																val:        " ",
																																ignoreCase: false,
																															},
																															&actionExpr{
																																pos: position{line: 713, col: 13, offset: 30132},
																																run: (*parser).callonSection1Title268,
																																expr: &litMatcher{
																																	pos:        position{line: 713, col: 13, offset: 30132},
																																	val:        "\t",
																																	ignoreCase: false,
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 146, col: 89, offset: 5966},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
													},
												},
											},
											&zeroOrMoreExpr{
												pos: position{line: 120, col: 98, offset: 5095},
												expr: &choiceExpr{
													pos: position{line: 713, col: 7, offset: 30126},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 713, col: 7, offset: 30126},
															val:        " ",
															ignoreCase: false,
														},
														&actionExpr{
															pos: position{line: 713, col: 13, offset: 30132},
															run: (*parser).callonSection1Title274,
															expr: &litMatcher{
																pos:        position{line: 713, col: 13, offset: 30132},
																val:        "\t",
																ignoreCase: false,
															},
														},
													},
												},
											},
											&choiceExpr{
												pos: position{line: 721, col: 8, offset: 30228},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 717, col: 12, offset: 30188},
														val:        "\r\n",
														ignoreCase: false,
													},
													&charClassMatcher{
														pos:        position{line: 717, col: 21, offset: 30197},
														val:        "[\\r\\n]",
														chars:      []rune{'\r', '\n'},
														ignoreCase: false,
														inverted:   false,
													},
													&notExpr{
														pos: position{line: 719, col: 8, offset: 30217},
														expr: &anyMatcher{
															line: 719, col: 9, offset: 30218,
														},
													},
												},
											},
										},
									},
								},
							},
						},
						&litMatcher{
							pos:        position{line: 217, col: 24, offset: 8539},
							val:        "==",
							ignoreCase: false,
						},
						&oneOrMoreExpr{
							pos: position{line: 217, col: 29, offset: 8544},
							expr: &choiceExpr{
								pos: position{line: 713, col: 7, offset: 30126},
								alternatives: []interface{}{
									&litMatcher{
										pos:        position{line: 713, col: 7, offset: 30126},
										val:        " ",
										ignoreCase: false,
									},
									&actionExpr{
										pos: position{line: 713, col: 13, offset: 30132},
										run: (*parser).callonSection1Title285,
										expr: &litMatcher{
											pos:        position{line: 713, col: 13, offset: 30132},
											val:        "\t",
											ignoreCase: false,
										},
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 219, col: 69, offset: 8617},
							label: "content",
							expr: &ruleRefExpr{
								pos:  position{line: 219, col: 78, offset: 8626},
								name: "TitleElements",
							},
						},
						&zeroOrMoreExpr{
							pos: position{line: 219, col: 93, offset: 8641},
							expr: &choiceExpr{
								pos: position{line: 713, col: 7, offset: 30126},
								alternatives: []interface{}{
									&litMatcher{
										pos:        position{line: 713, col: 7, offset: 30126},
										val:        " ",
										ignoreCase: false,
									},
									&actionExpr{
										pos: position{line: 713, col: 13, offset: 30132},
										run: (*parser).callonSection1Title292,
										expr: &litMatcher{
											pos:        position{line: 713, col: 13, offset: 30132},
											val:        "\t",
											ignoreCase: false,
										},
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 219, col: 97, offset: 8645},
							label: "id",
							expr: &zeroOrOneExpr{
								pos: position{line: 219, col: 100, offset: 8648},
								expr: &actionExpr{
									pos: position{line: 130, col: 20, offset: 5333},
									run: (*parser).callonSection1Title296,
									expr: &seqExpr{
										pos: position{line: 130, col: 20, offset: 5333},
										exprs: []interface{}{
											&litMatcher{
												pos:        position{line: 130, col: 20, offset: 5333},
												val:        "[[",
												ignoreCase: false,
											},
											&labeledExpr{
												pos:   position{line: 130, col: 25, offset: 5338},
												label: "id",
												expr: &actionExpr{
													pos: position{line: 701, col: 7, offset: 29885},
													run: (*parser).callonSection1Title300,
													expr: &oneOrMoreExpr{
														pos: position{line: 701, col: 7, offset: 29885},
														expr: &seqExpr{
															pos: position{line: 701, col: 8, offset: 29886},
															exprs: []interface{}{
																&notExpr{
																	pos: position{line: 701, col: 8, offset: 29886},
																	expr: &choiceExpr{
																		pos: position{line: 717, col: 12, offset: 30188},
																		alternatives: []interface{}{
																			&litMatcher{
																				pos:        position{line: 717, col: 12, offset: 30188},
																				val:        "\r\n",
																				ignoreCase: false,
																			},
																			&charClassMatcher{
																				pos:        position{line: 717, col: 21, offset: 30197},
																				val:        "[\\r\\n]",
																				chars:      []rune{'\r', '\n'},
																				ignoreCase: false,
																				inverted:   false,
																			},
																		},
																	},
																},
																&notExpr{
																	pos: position{line: 701, col: 17, offset: 29895},
																	expr: &choiceExpr{
																		pos: position{line: 713, col: 7, offset: 30126},
																		alternatives: []interface{}{
																			&litMatcher{
																				pos:        position{line: 713, col: 7, offset: 30126},
																				val:        " ",
																				ignoreCase: false,
																			},
																			&actionExpr{
																				pos: position{line: 713, col: 13, offset: 30132},
																				run: (*parser).callonSection1Title310,
																				expr: &litMatcher{
																					pos:        position{line: 713, col: 13, offset: 30132},
																					val:        "\t",
																					ignoreCase: false,
																				},
																			},
																		},
																	},
																},
																&notExpr{
																	pos: position{line: 701, col: 21, offset: 29899},
																	expr: &litMatcher{
																		pos:        position{line: 701, col: 22, offset: 29900},
																		val:        "[",
																		ignoreCase: false,
																	},
																},
																&notExpr{
																	pos: position{line: 701, col: 26, offset: 29904},
																	expr: &litMatcher{
																		pos:        position{line: 701, col: 27, offset: 29905},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
																&notExpr{
																	pos: position{line: 701, col: 31, offset: 29909},
																	expr: &litMatcher{
																		pos:        position{line: 701, col: 32, offset: 29910},
																		val:        "<<",
																		ignoreCase: false,
																	},
																},
																&notExpr{
																	pos: position{line: 701, col: 37, offset: 29915},
																	expr: &litMatcher{
																		pos:        position{line: 701, col: 38, offset: 29916},
																		val:        ">>",
																		ignoreCase: false,
																	},
																},
																&anyMatcher{
																	line: 701, col: 42, offset: 29920,
																},
															},
														},
													},
												},
											},
											&litMatcher{
												pos:        position{line: 130, col: 33, offset: 5346},
												val:        "]]",
												ignoreCase: false,
											},
										},
									},
								},
							},
						},
						&zeroOrMoreExpr{
							pos: position{line: 219, col: 119, offset: 8667},
							expr: &choiceExpr{
								pos: position{line: 713, col: 7, offset: 30126},
								alternatives: []interface{}{
									&litMatcher{
										pos:        position{line: 713, col: 7, offset: 30126},
										val:        " ",
										ignoreCase: false,
									},
									&actionExpr{
										pos: position{line: 713, col: 13, offset: 30132},
										run: (*parser).callonSection1Title325,
										expr: &litMatcher{
											pos:        position{line: 713, col: 13, offset: 30132},
											val:        "\t",
											ignoreCase: false,
										},
									},
								},
							},
						},
						&choiceExpr{
							pos: position{line: 721, col: 8, offset: 30228},
							alternatives: []interface{}{
								&litMatcher{
									pos:        position{line: 717, col: 12, offset: 30188},
									val:        "\r\n",
									ignoreCase: false,
								},
								&charClassMatcher{
									pos:        position{line: 717, col: 21, offset: 30197},
									val:        "[\\r\\n]",
									chars:      []rune{'\r', '\n'},
									ignoreCase: false,
									inverted:   false,
								},
								&notExpr{
									pos: position{line: 719, col: 8, offset: 30217},
									expr: &anyMatcher{
										line: 719, col: 9, offset: 30218,
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "Section1Block",
			pos:  position{line: 223, col: 1, offset: 8786},
			expr: &actionExpr{
				pos: position{line: 223, col: 18, offset: 8803},
				run: (*parser).callonSection1Block1,
				expr: &seqExpr{
					pos: position{line: 223, col: 18, offset: 8803},
					exprs: []interface{}{
						&notExpr{
							pos: position{line: 223, col: 18, offset: 8803},
							expr: &ruleRefExpr{
								pos:  position{line: 223, col: 19, offset: 8804},
								name: "Section1Title",
							},
						},
						&labeledExpr{
							pos:   position{line: 223, col: 33, offset: 8818},
							label: "content",
							expr: &choiceExpr{
								pos: position{line: 223, col: 42, offset: 8827},
								alternatives: []interface{}{
									&ruleRefExpr{
										pos:  position{line: 223, col: 42, offset: 8827},
										name: "Section2",
									},
									&ruleRefExpr{
										pos:  position{line: 223, col: 53, offset: 8838},
										name: "Section3",
									},
									&ruleRefExpr{
										pos:  position{line: 223, col: 64, offset: 8849},
										name: "Section4",
									},
									&ruleRefExpr{
										pos:  position{line: 223, col: 75, offset: 8860},
										name: "Section5",
									},
									&ruleRefExpr{
										pos:  position{line: 223, col: 86, offset: 8871},
										name: "DocumentBlock",
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "Section2",
			pos:  position{line: 227, col: 1, offset: 8915},
			expr: &actionExpr{
				pos: position{line: 227, col: 13, offset: 8927},
				run: (*parser).callonSection21,
				expr: &seqExpr{
					pos: position{line: 227, col: 13, offset: 8927},
					exprs: []interface{}{
						&notExpr{
							pos: position{line: 227, col: 13, offset: 8927},
							expr: &notExpr{
								pos: position{line: 719, col: 8, offset: 30217},
								expr: &anyMatcher{
									line: 719, col: 9, offset: 30218,
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 228, col: 5, offset: 8998},
							label: "section",
							expr: &actionExpr{
								pos: position{line: 228, col: 14, offset: 9007},
								run: (*parser).callonSection27,
								expr: &seqExpr{
									pos: position{line: 228, col: 14, offset: 9007},
									exprs: []interface{}{
										&labeledExpr{
											pos:   position{line: 228, col: 14, offset: 9007},
											label: "header",
											expr: &ruleRefExpr{
												pos:  position{line: 228, col: 22, offset: 9015},
												name: "Section2Title",
											},
										},
										&labeledExpr{
											pos:   position{line: 228, col: 37, offset: 9030},
											label: "elements",
											expr: &zeroOrOneExpr{
												pos: position{line: 228, col: 47, offset: 9040},
												expr: &ruleRefExpr{
													pos:  position{line: 228, col: 47, offset: 9040},
													name: "Section2Block",
												},
											},
										},
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "Section2Title",
			pos:  position{line: 236, col: 1, offset: 9227},
			expr: &actionExpr{
				pos: position{line: 236, col: 18, offset: 9244},
				run: (*parser).callonSection2Title1,
				expr: &seqExpr{
					pos: position{line: 236, col: 18, offset: 9244},
					exprs: []interface{}{
						&labeledExpr{
							pos:   position{line: 236, col: 18, offset: 9244},
							label: "attributes",
							expr: &zeroOrMoreExpr{
								pos: position{line: 236, col: 29, offset: 9255},
								expr: &actionExpr{
									pos: position{line: 120, col: 21, offset: 5018},
									run: (*parser).callonSection2Title5,
									expr: &seqExpr{
										pos: position{line: 120, col: 21, offset: 5018},
										exprs: []interface{}{
											&labeledExpr{
												pos:   position{line: 120, col: 21, offset: 5018},
												label: "attr",
												expr: &choiceExpr{
													pos: position{line: 120, col: 27, offset: 5024},
													alternatives: []interface{}{
														&actionExpr{
															pos: position{line: 124, col: 14, offset: 5203},
															run: (*parser).callonSection2Title9,
															expr: &labeledExpr{
																pos:   position{line: 124, col: 14, offset: 5203},
																label: "id",
																expr: &actionExpr{
																	pos: position{line: 130, col: 20, offset: 5333},
																	run: (*parser).callonSection2Title11,
																	expr: &seqExpr{
																		pos: position{line: 130, col: 20, offset: 5333},
																		exprs: []interface{}{
																			&litMatcher{
																				pos:        position{line: 130, col: 20, offset: 5333},
																				val:        "[[",
																				ignoreCase: false,
																			},
																			&labeledExpr{
																				pos:   position{line: 130, col: 25, offset: 5338},
																				label: "id",
																				expr: &actionExpr{
																					pos: position{line: 701, col: 7, offset: 29885},
																					run: (*parser).callonSection2Title15,
																					expr: &oneOrMoreExpr{
																						pos: position{line: 701, col: 7, offset: 29885},
																						expr: &seqExpr{
																							pos: position{line: 701, col: 8, offset: 29886},
																							exprs: []interface{}{
																								&notExpr{
																									pos: position{line: 701, col: 8, offset: 29886},
																									expr: &choiceExpr{
																										pos: position{line: 717, col: 12, offset: 30188},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 717, col: 12, offset: 30188},
																												val:        "\r\n",
																												ignoreCase: false,
																											},
																											&charClassMatcher{
																												pos:        position{line: 717, col: 21, offset: 30197},
																												val:        "[\\r\\n]",
																												chars:      []rune{'\r', '\n'},
																												ignoreCase: false,
																												inverted:   false,
																											},
																										},
																									},
																								},
																								&notExpr{
																									pos: position{line: 701, col: 17, offset: 29895},
																									expr: &choiceExpr{
																										pos: position{line: 713, col: 7, offset: 30126},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 713, col: 7, offset: 30126},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 713, col: 13, offset: 30132},
																												run: (*parser).callonSection2Title25,
																												expr: &litMatcher{
																													pos:        position{line: 713, col: 13, offset: 30132},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																								&notExpr{
																									pos: position{line: 701, col: 21, offset: 29899},
																									expr: &litMatcher{
																										pos:        position{line: 701, col: 22, offset: 29900},
																										val:        "[",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 701, col: 26, offset: 29904},
																									expr: &litMatcher{
																										pos:        position{line: 701, col: 27, offset: 29905},
																										val:        "]",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 701, col: 31, offset: 29909},
																									expr: &litMatcher{
																										pos:        position{line: 701, col: 32, offset: 29910},
																										val:        "<<",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 701, col: 37, offset: 29915},
																									expr: &litMatcher{
																										pos:        position{line: 701, col: 38, offset: 29916},
																										val:        ">>",
																										ignoreCase: false,
																									},
																								},
																								&anyMatcher{
																									line: 701, col: 42, offset: 29920,
																								},
																							},
																						},
																					},
																				},
																			},
																			&litMatcher{
																				pos:        position{line: 130, col: 33, offset: 5346},
																				val:        "]]",
																				ignoreCase: false,
																			},
																		},
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 126, col: 5, offset: 5249},
															run: (*parser).callonSection2Title37,
															expr: &seqExpr{
																pos: position{line: 126, col: 5, offset: 5249},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 126, col: 5, offset: 5249},
																		val:        "[#",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 126, col: 10, offset: 5254},
																		label: "id",
																		expr: &actionExpr{
																			pos: position{line: 701, col: 7, offset: 29885},
																			run: (*parser).callonSection2Title41,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 701, col: 7, offset: 29885},
																				expr: &seqExpr{
																					pos: position{line: 701, col: 8, offset: 29886},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 701, col: 8, offset: 29886},
																							expr: &choiceExpr{
																								pos: position{line: 717, col: 12, offset: 30188},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 717, col: 12, offset: 30188},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 717, col: 21, offset: 30197},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 701, col: 17, offset: 29895},
																							expr: &choiceExpr{
																								pos: position{line: 713, col: 7, offset: 30126},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 713, col: 7, offset: 30126},
																										val:        " ",
																										ignoreCase: false,
																									},
																									&actionExpr{
																										pos: position{line: 713, col: 13, offset: 30132},
																										run: (*parser).callonSection2Title51,
																										expr: &litMatcher{
																											pos:        position{line: 713, col: 13, offset: 30132},
																											val:        "\t",
																											ignoreCase: false,
																										},
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 701, col: 21, offset: 29899},
																							expr: &litMatcher{
																								pos:        position{line: 701, col: 22, offset: 29900},
																								val:        "[",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 701, col: 26, offset: 29904},
																							expr: &litMatcher{
																								pos:        position{line: 701, col: 27, offset: 29905},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 701, col: 31, offset: 29909},
																							expr: &litMatcher{
																								pos:        position{line: 701, col: 32, offset: 29910},
																								val:        "<<",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 701, col: 37, offset: 29915},
																							expr: &litMatcher{
																								pos:        position{line: 701, col: 38, offset: 29916},
																								val:        ">>",
																								ignoreCase: false,
																							},
																						},
																						&anyMatcher{
																							line: 701, col: 42, offset: 29920,
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 126, col: 18, offset: 5262},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 136, col: 17, offset: 5557},
															run: (*parser).callonSection2Title63,
															expr: &seqExpr{
																pos: position{line: 136, col: 17, offset: 5557},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 136, col: 17, offset: 5557},
																		val:        ".",
																		ignoreCase: false,
																	},
																	&notExpr{
																		pos: position{line: 136, col: 21, offset: 5561},
																		expr: &litMatcher{
																			pos:        position{line: 136, col: 22, offset: 5562},
																			val:        ".",
																			ignoreCase: false,
																		},
																	},
																	&notExpr{
																		pos: position{line: 136, col: 26, offset: 5566},
																		expr: &choiceExpr{
																			pos: position{line: 713, col: 7, offset: 30126},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 713, col: 7, offset: 30126},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 713, col: 13, offset: 30132},
																					run: (*parser).callonSection2Title71,
																					expr: &litMatcher{
																						pos:        position{line: 713, col: 13, offset: 30132},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 136, col: 30, offset: 5570},
																		label: "title",
																		expr: &oneOrMoreExpr{
																			pos: position{line: 136, col: 36, offset: 5576},
																			expr: &seqExpr{
																				pos: position{line: 136, col: 37, offset: 5577},
																				exprs: []interface{}{
																					&notExpr{
																						pos: position{line: 136, col: 37, offset: 5577},
																						expr: &choiceExpr{
																							pos: position{line: 717, col: 12, offset: 30188},
																							alternatives: []interface{}{
																								&litMatcher{
																									pos:        position{line: 717, col: 12, offset: 30188},
																									val:        "\r\n",
																									ignoreCase: false,
																								},
																								&charClassMatcher{
																									pos:        position{line: 717, col: 21, offset: 30197},
																									val:        "[\\r\\n]",
																									chars:      []rune{'\r', '\n'},
																									ignoreCase: false,
																									inverted:   false,
																								},
																							},
																						},
																					},
																					&anyMatcher{
																						line: 136, col: 46, offset: 5586,
																					},
																				},
																			},
																		},
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 141, col: 30, offset: 5760},
															run: (*parser).callonSection2Title81,
															expr: &seqExpr{
																pos: position{line: 141, col: 30, offset: 5760},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 141, col: 30, offset: 5760},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 141, col: 34, offset: 5764},
																		label: "k",
																		expr: &choiceExpr{
																			pos: position{line: 442, col: 19, offset: 17830},
																			alternatives: []interface{}{
																				&actionExpr{
																					pos: position{line: 442, col: 19, offset: 17830},
																					run: (*parser).callonSection2Title86,
																					expr: &litMatcher{
																						pos:        position{line: 442, col: 19, offset: 17830},
																						val:        "TIP",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 444, col: 5, offset: 17868},
																					run: (*parser).callonSection2Title88,
																					expr: &litMatcher{
																						pos:        position{line: 444, col: 5, offset: 17868},
																						val:        "NOTE",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 446, col: 5, offset: 17908},
																					run: (*parser).callonSection2Title90,
																					expr: &litMatcher{
																						pos:        position{line: 446, col: 5, offset: 17908},
																						val:        "IMPORTANT",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 448, col: 5, offset: 17958},
																					run: (*parser).callonSection2Title92,
																					expr: &litMatcher{
																						pos:        position{line: 448, col: 5, offset: 17958},
																						val:        "WARNING",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 450, col: 5, offset: 18004},
																					run: (*parser).callonSection2Title94,
																					expr: &litMatcher{
																						pos:        position{line: 450, col: 5, offset: 18004},
																						val:        "CAUTION",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 141, col: 53, offset: 5783},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 146, col: 19, offset: 5896},
															run: (*parser).callonSection2Title97,
															expr: &seqExpr{
																pos: position{line: 146, col: 19, offset: 5896},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 146, col: 19, offset: 5896},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 146, col: 23, offset: 5900},
																		label: "attribute",
																		expr: &choiceExpr{
																			pos: position{line: 150, col: 21, offset: 6095},
																			alternatives: []interface{}{
																				&actionExpr{
																					pos: position{line: 150, col: 21, offset: 6095},
																					run: (*parser).callonSection2Title102,
																					expr: &seqExpr{
																						pos: position{line: 150, col: 21, offset: 6095},
																						exprs: []interface{}{
																							&labeledExpr{
																								pos:   position{line: 150, col: 21, offset: 6095},
																								label: "key",
																								expr: &actionExpr{
																									pos: position{line: 162, col: 17, offset: 6664},
																									run: (*parser).callonSection2Title105,
																									expr: &seqExpr{
																										pos: position{line: 162, col: 17, offset: 6664},
																										exprs: []interface{}{
																											&labeledExpr{
																												pos:   position{line: 162, col: 17, offset: 6664},
																												label: "key",
																												expr: &oneOrMoreExpr{
																													pos: position{line: 162, col: 22, offset: 6669},
																													expr: &seqExpr{
																														pos: position{line: 162, col: 23, offset: 6670},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 162, col: 23, offset: 6670},
																																expr: &choiceExpr{
																																	pos: position{line: 713, col: 7, offset: 30126},
																																	alternatives: []interface{}{
																																		&litMatcher{
																																			pos:        position{line: 713, col: 7, offset: 30126},
																																			val:        " ",
																																			ignoreCase: false,
																																		},
																																		&actionExpr{
																																			pos: position{line: 713, col: 13, offset: 30132},
																																			run: (*parser).callonSection2Title113,
																																			expr: &litMatcher{
																																				pos:        position{line: 713, col: 13, offset: 30132},
																																				val:        "\t",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																},
																															},
																															&notExpr{
																																pos: position{line: 162, col: 27, offset: 6674},
																																expr: &litMatcher{
																																	pos:        position{line: 162, col: 28, offset: 6675},
																																	val:        "=",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 162, col: 32, offset: 6679},
																																expr: &litMatcher{
																																	pos:        position{line: 162, col: 33, offset: 6680},
																																	val:        ",",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 162, col: 37, offset: 6684},
																																expr: &litMatcher{
																																	pos:        position{line: 162, col: 38, offset: 6685},
																																	val:        "]",
																																	ignoreCase: false,
																																},
																															},
																															&anyMatcher{
																																line: 162, col: 42, offset: 6689,
																															},
																														},
																													},
																												},
																											},
																											&zeroOrMoreExpr{
																												pos: position{line: 162, col: 46, offset: 6693},
																												expr: &choiceExpr{
																													pos: position{line: 713, col: 7, offset: 30126},
																													alternatives: []interface{}{
																														&litMatcher{
																															pos:        position{line: 713, col: 7, offset: 30126},
																															val:        " ",
																															ignoreCase: false,
																														},
																														&actionExpr{
																															pos: position{line: 713, col: 13, offset: 30132},
																															run: (*parser).callonSection2Title125,
																															expr: &litMatcher{
																																pos:        position{line: 713, col: 13, offset: 30132},
																																val:        "\t",
																																ignoreCase: false,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&litMatcher{
																								pos:        position{line: 150, col: 40, offset: 6114},
																								val:        "=",
																								ignoreCase: false,
																							},
																							&labeledExpr{
																								pos:   position{line: 150, col: 44, offset: 6118},
																								label: "value",
																								expr: &actionExpr{
																									pos: position{line: 167, col: 19, offset: 6793},
																									run: (*parser).callonSection2Title129,
																									expr: &seqExpr{
																										pos: position{line: 167, col: 19, offset: 6793},
																										exprs: []interface{}{
																											&zeroOrMoreExpr{
																												pos: position{line: 167, col: 19, offset: 6793},
																												expr: &choiceExpr{
																													pos: position{line: 713, col: 7, offset: 30126},
																													alternatives: []interface{}{
																														&litMatcher{
																															pos:        position{line: 713, col: 7, offset: 30126},
																															val:        " ",
																															ignoreCase: false,
																														},
																														&actionExpr{
																															pos: position{line: 713, col: 13, offset: 30132},
																															run: (*parser).callonSection2Title134,
																															expr: &litMatcher{
																																pos:        position{line: 713, col: 13, offset: 30132},
																																val:        "\t",
																																ignoreCase: false,
																															},
																														},
																													},
																												},
																											},
																											&labeledExpr{
																												pos:   position{line: 167, col: 23, offset: 6797},
																												label: "value",
																												expr: &zeroOrMoreExpr{
																													pos: position{line: 167, col: 29, offset: 6803},
																													expr: &seqExpr{
																														pos: position{line: 167, col: 30, offset: 6804},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 167, col: 30, offset: 6804},
																																expr: &choiceExpr{
																																	pos: position{line: 713, col: 7, offset: 30126},
																																	alternatives: []interface{}{
																																		&litMatcher{
																																			pos:        position{line: 713, col: 7, offset: 30126},
																																			val:        " ",
																																			ignoreCase: false,
																																		},
																																		&actionExpr{
																																			pos: position{line: 713, col: 13, offset: 30132},
																																			run: (*parser).callonSection2Title142,
																																			expr: &litMatcher{
																																				pos:        position{line: 713, col: 13, offset: 30132},
																																				val:        "\t",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																},
																															},
																															&notExpr{
																																pos: position{line: 167, col: 34, offset: 6808},
																																expr: &litMatcher{
																																	pos:        position{line: 167, col: 35, offset: 6809},
																																	val:        "=",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 167, col: 39, offset: 6813},
																																expr: &litMatcher{
																																	pos:        position{line: 167, col: 40, offset: 6814},
																																	val:        "]",
																																	ignoreCase: false,
																																},
																															},
																															&anyMatcher{
																																line: 167, col: 44, offset: 6818,
																															},
																														},
																													},
																												},
																											},
																											&zeroOrMoreExpr{
																												pos: position{line: 167, col: 48, offset: 6822},
																												expr: &choiceExpr{
																													pos: position{line: 713, col: 7, offset: 30126},
																													alternatives: []interface{}{
																														&litMatcher{
																															pos:        position{line: 713, col: 7, offset: 30126},
																															val:        " ",
																															ignoreCase: false,
																														},
																														&actionExpr{
																															pos: position{line: 713, col: 13, offset: 30132},
																															run: (*parser).callonSection2Title152,
																															expr: &litMatcher{
																																pos:        position{line: 713, col: 13, offset: 30132},
																																val:        "\t",
																																ignoreCase: false,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																				&actionExpr{
																					pos: position{line: 152, col: 5, offset: 6244},
																					run: (*parser).callonSection2Title154,
																					expr: &labeledExpr{
																						pos:   position{line: 152, col: 5, offset: 6244},
																						label: "key",
																						expr: &actionExpr{
																							pos: position{line: 162, col: 17, offset: 6664},
																							run: (*parser).callonSection2Title156,
																							expr: &seqExpr{
																								pos: position{line: 162, col: 17, offset: 6664},
																								exprs: []interface{}{
																									&labeledExpr{
																										pos:   position{line: 162, col: 17, offset: 6664},
																										label: "key",
																										expr: &oneOrMoreExpr{
																											pos: position{line: 162, col: 22, offset: 6669},
																											expr: &seqExpr{
																												pos: position{line: 162, col: 23, offset: 6670},
																												exprs: []interface{}{
																													&notExpr{
																														pos: position{line: 162, col: 23, offset: 6670},
																														expr: &choiceExpr{
																															pos: position{line: 713, col: 7, offset: 30126},
																															alternatives: []interface{}{
																																&litMatcher{
																																	pos:        position{line: 713, col: 7, offset: 30126},
																																	val:        " ",
																																	ignoreCase: false,
																																},
																																&actionExpr{
																																	pos: position{line: 713, col: 13, offset: 30132},
																																	run: (*parser).callonSection2Title164,
																																	expr: &litMatcher{
																																		pos:        position{line: 713, col: 13, offset: 30132},
																																		val:        "\t",
																																		ignoreCase: false,
																																	},
																																},
																															},
																														},
																													},
																													&notExpr{
																														pos: position{line: 162, col: 27, offset: 6674},
																														expr: &litMatcher{
																															pos:        position{line: 162, col: 28, offset: 6675},
																															val:        "=",
																															ignoreCase: false,
																														},
																													},
																													&notExpr{
																														pos: position{line: 162, col: 32, offset: 6679},
																														expr: &litMatcher{
																															pos:        position{line: 162, col: 33, offset: 6680},
																															val:        ",",
																															ignoreCase: false,
																														},
																													},
																													&notExpr{
																														pos: position{line: 162, col: 37, offset: 6684},
																														expr: &litMatcher{
																															pos:        position{line: 162, col: 38, offset: 6685},
																															val:        "]",
																															ignoreCase: false,
																														},
																													},
																													&anyMatcher{
																														line: 162, col: 42, offset: 6689,
																													},
																												},
																											},
																										},
																									},
																									&zeroOrMoreExpr{
																										pos: position{line: 162, col: 46, offset: 6693},
																										expr: &choiceExpr{
																											pos: position{line: 713, col: 7, offset: 30126},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 713, col: 7, offset: 30126},
																													val:        " ",
																													ignoreCase: false,
																												},
																												&actionExpr{
																													pos: position{line: 713, col: 13, offset: 30132},
																													run: (*parser).callonSection2Title176,
																													expr: &litMatcher{
																														pos:        position{line: 713, col: 13, offset: 30132},
																														val:        "\t",
																														ignoreCase: false,
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 146, col: 52, offset: 5929},
																		label: "attributes",
																		expr: &zeroOrMoreExpr{
																			pos: position{line: 146, col: 63, offset: 5940},
																			expr: &choiceExpr{
																				pos: position{line: 156, col: 26, offset: 6376},
																				alternatives: []interface{}{
																					&actionExpr{
																						pos: position{line: 156, col: 26, offset: 6376},
																						run: (*parser).callonSection2Title181,
																						expr: &seqExpr{
																							pos: position{line: 156, col: 26, offset: 6376},
																							exprs: []interface{}{
																								&litMatcher{
																									pos:        position{line: 156, col: 26, offset: 6376},
																									val:        ",",
																									ignoreCase: false,
																								},
																								&zeroOrMoreExpr{
																									pos: position{line: 156, col: 30, offset: 6380},
																									expr: &choiceExpr{
																										pos: position{line: 713, col: 7, offset: 30126},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 713, col: 7, offset: 30126},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 713, col: 13, offset: 30132},
																												run: (*parser).callonSection2Title187,
																												expr: &litMatcher{
																													pos:        position{line: 713, col: 13, offset: 30132},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																								&labeledExpr{
																									pos:   position{line: 156, col: 34, offset: 6384},
																									label: "key",
																									expr: &actionExpr{
																										pos: position{line: 162, col: 17, offset: 6664},
																										run: (*parser).callonSection2Title190,
																										expr: &seqExpr{
																											pos: position{line: 162, col: 17, offset: 6664},
																											exprs: []interface{}{
																												&labeledExpr{
																													pos:   position{line: 162, col: 17, offset: 6664},
																													label: "key",
																													expr: &oneOrMoreExpr{
																														pos: position{line: 162, col: 22, offset: 6669},
																														expr: &seqExpr{
																															pos: position{line: 162, col: 23, offset: 6670},
																															exprs: []interface{}{
																																&notExpr{
																																	pos: position{line: 162, col: 23, offset: 6670},
																																	expr: &choiceExpr{
																																		pos: position{line: 713, col: 7, offset: 30126},
																																		alternatives: []interface{}{
																																			&litMatcher{
																																				pos:        position{line: 713, col: 7, offset: 30126},
																																				val:        " ",
																																				ignoreCase: false,
																																			},
																																			&actionExpr{
																																				pos: position{line: 713, col: 13, offset: 30132},
																																				run: (*parser).callonSection2Title198,
																																				expr: &litMatcher{
																																					pos:        position{line: 713, col: 13, offset: 30132},
																																					val:        "\t",
																																					ignoreCase: false,
																																				},
																																			},
																																		},
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 162, col: 27, offset: 6674},
																																	expr: &litMatcher{
																																		pos:        position{line: 162, col: 28, offset: 6675},
																																		val:        "=",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 162, col: 32, offset: 6679},
																																	expr: &litMatcher{
																																		pos:        position{line: 162, col: 33, offset: 6680},
																																		val:        ",",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 162, col: 37, offset: 6684},
																																	expr: &litMatcher{
																																		pos:        position{line: 162, col: 38, offset: 6685},
																																		val:        "]",
																																		ignoreCase: false,
																																	},
																																},
																																&anyMatcher{
																																	line: 162, col: 42, offset: 6689,
																																},
																															},
																														},
																													},
																												},
																												&zeroOrMoreExpr{
																													pos: position{line: 162, col: 46, offset: 6693},
																													expr: &choiceExpr{
																														pos: position{line: 713, col: 7, offset: 30126},
																														alternatives: []interface{}{
																															&litMatcher{
																																pos:        position{line: 713, col: 7, offset: 30126},
																																val:        " ",
																																ignoreCase: false,
																															},
																															&actionExpr{
																																pos: position{line: 713, col: 13, offset: 30132},
																																run: (*parser).callonSection2Title210,
																																expr: &litMatcher{
																																	pos:        position{line: 713, col: 13, offset: 30132},
																																	val:        "\t",
																																	ignoreCase: false,
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&litMatcher{
																									pos:        position{line: 156, col: 53, offset: 6403},
																									val:        "=",
																									ignoreCase: false,
																								},
																								&labeledExpr{
																									pos:   position{line: 156, col: 57, offset: 6407},
																									label: "value",
																									expr: &actionExpr{
																										pos: position{line: 167, col: 19, offset: 6793},
																										run: (*parser).callonSection2Title214,
																										expr: &seqExpr{
																											pos: position{line: 167, col: 19, offset: 6793},
																											exprs: []interface{}{
																												&zeroOrMoreExpr{
																													pos: position{line: 167, col: 19, offset: 6793},
																													expr: &choiceExpr{
																														pos: position{line: 713, col: 7, offset: 30126},
																														alternatives: []interface{}{
																															&litMatcher{
																																pos:        position{line: 713, col: 7, offset: 30126},
																																val:        " ",
																																ignoreCase: false,
																															},
																															&actionExpr{
																																pos: position{line: 713, col: 13, offset: 30132},
																																run: (*parser).callonSection2Title219,
																																expr: &litMatcher{
																																	pos:        position{line: 713, col: 13, offset: 30132},
																																	val:        "\t",
																																	ignoreCase: false,
																																},
																															},
																														},
																													},
																												},
																												&labeledExpr{
																													pos:   position{line: 167, col: 23, offset: 6797},
																													label: "value",
																													expr: &zeroOrMoreExpr{
																														pos: position{line: 167, col: 29, offset: 6803},
																														expr: &seqExpr{
																															pos: position{line: 167, col: 30, offset: 6804},
																															exprs: []interface{}{
																																&notExpr{
																																	pos: position{line: 167, col: 30, offset: 6804},
																																	expr: &choiceExpr{
																																		pos: position{line: 713, col: 7, offset: 30126},
																																		alternatives: []interface{}{
																																			&litMatcher{
																																				pos:        position{line: 713, col: 7, offset: 30126},
																																				val:        " ",
																																				ignoreCase: false,
																																			},
																																			&actionExpr{
																																				pos: position{line: 713, col: 13, offset: 30132},
																																				run: (*parser).callonSection2Title227,
																																				expr: &litMatcher{
																																					pos:        position{line: 713, col: 13, offset: 30132},
																																					val:        "\t",
																																					ignoreCase: false,
																																				},
																																			},
																																		},
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 167, col: 34, offset: 6808},
																																	expr: &litMatcher{
																																		pos:        position{line: 167, col: 35, offset: 6809},
																																		val:        "=",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 167, col: 39, offset: 6813},
																																	expr: &litMatcher{
																																		pos:        position{line: 167, col: 40, offset: 6814},
																																		val:        "]",
																																		ignoreCase: false,
																																	},
																																},
																																&anyMatcher{
																																	line: 167, col: 44, offset: 6818,
																																},
																															},
																														},
																													},
																												},
																												&zeroOrMoreExpr{
																													pos: position{line: 167, col: 48, offset: 6822},
																													expr: &choiceExpr{
																														pos: position{line: 713, col: 7, offset: 30126},
																														alternatives: []interface{}{
																															&litMatcher{
																																pos:        position{line: 713, col: 7, offset: 30126},
																																val:        " ",
																																ignoreCase: false,
																															},
																															&actionExpr{
																																pos: position{line: 713, col: 13, offset: 30132},
																																run: (*parser).callonSection2Title237,
																																expr: &litMatcher{
																																	pos:        position{line: 713, col: 13, offset: 30132},
																																	val:        "\t",
																																	ignoreCase: false,
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																					&actionExpr{
																						pos: position{line: 158, col: 5, offset: 6533},
																						run: (*parser).callonSection2Title239,
																						expr: &seqExpr{
																							pos: position{line: 158, col: 5, offset: 6533},
																							exprs: []interface{}{
																								&litMatcher{
																									pos:        position{line: 158, col: 5, offset: 6533},
																									val:        ",",
																									ignoreCase: false,
																								},
																								&zeroOrMoreExpr{
																									pos: position{line: 158, col: 9, offset: 6537},
																									expr: &choiceExpr{
																										pos: position{line: 713, col: 7, offset: 30126},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 713, col: 7, offset: 30126},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 713, col: 13, offset: 30132},
																												run: (*parser).callonSection2Title245,
																												expr: &litMatcher{
																													pos:        position{line: 713, col: 13, offset: 30132},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																								&labeledExpr{
																									pos:   position{line: 158, col: 13, offset: 6541},
																									label: "key",
																									expr: &actionExpr{
																										pos: position{line: 162, col: 17, offset: 6664},
																										run: (*parser).callonSection2Title248,
																										expr: &seqExpr{
																											pos: position{line: 162, col: 17, offset: 6664},
																											exprs: []interface{}{
																												&labeledExpr{
																													pos:   position{line: 162, col: 17, offset: 6664},
																													label: "key",
																													expr: &oneOrMoreExpr{
																														pos: position{line: 162, col: 22, offset: 6669},
																														expr: &seqExpr{
																															pos: position{line: 162, col: 23, offset: 6670},
																															exprs: []interface{}{
																																&notExpr{
																																	pos: position{line: 162, col: 23, offset: 6670},
																																	expr: &choiceExpr{
																																		pos: position{line: 713, col: 7, offset: 30126},
																																		alternatives: []interface{}{
																																			&litMatcher{
																																				pos:        position{line: 713, col: 7, offset: 30126},
																																				val:        " ",
																																				ignoreCase: false,
																																			},
																																			&actionExpr{
																																				pos: position{line: 713, col: 13, offset: 30132},
																																				run: (*parser).callonSection2Title256,
																																				expr: &litMatcher{
																																					pos:        position{line: 713, col: 13, offset: 30132},
																																					val:        "\t",
																																					ignoreCase: false,
																																				},
																																			},
																																		},
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 162, col: 27, offset: 6674},
																																	expr: &litMatcher{
																																		pos:        position{line: 162, col: 28, offset: 6675},
																																		val:        "=",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 162, col: 32, offset: 6679},
																																	expr: &litMatcher{
																																		pos:        position{line: 162, col: 33, offset: 6680},
																																		val:        ",",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 162, col: 37, offset: 6684},
																																	expr: &litMatcher{
																																		pos:        position{line: 162, col: 38, offset: 6685},
																																		val:        "]",
																																		ignoreCase: false,
																																	},
																																},
																																&anyMatcher{
																																	line: 162, col: 42, offset: 6689,
																																},
																															},
																														},
																													},
																												},
																												&zeroOrMoreExpr{
																													pos: position{line: 162, col: 46, offset: 6693},
																													expr: &choiceExpr{
																														pos: position{line: 713, col: 7, offset: 30126},
																														alternatives: []interface{}{
																															&litMatcher{
																																pos:        position{line: 713, col: 7, offset: 30126},
																																val:        " ",
																																ignoreCase: false,
																															},
																															&actionExpr{
																																pos: position{line: 713, col: 13, offset: 30132},
																																run: (*parser).callonSection2Title268,
																																expr: &litMatcher{
																																	pos:        position{line: 713, col: 13, offset: 30132},
																																	val:        "\t",
																																	ignoreCase: false,
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 146, col: 89, offset: 5966},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
													},
												},
											},
											&zeroOrMoreExpr{
												pos: position{line: 120, col: 98, offset: 5095},
												expr: &choiceExpr{
													pos: position{line: 713, col: 7, offset: 30126},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 713, col: 7, offset: 30126},
															val:        " ",
															ignoreCase: false,
														},
														&actionExpr{
															pos: position{line: 713, col: 13, offset: 30132},
															run: (*parser).callonSection2Title274,
															expr: &litMatcher{
																pos:        position{line: 713, col: 13, offset: 30132},
																val:        "\t",
																ignoreCase: false,
															},
														},
													},
												},
											},
											&choiceExpr{
												pos: position{line: 721, col: 8, offset: 30228},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 717, col: 12, offset: 30188},
														val:        "\r\n",
														ignoreCase: false,
													},
													&charClassMatcher{
														pos:        position{line: 717, col: 21, offset: 30197},
														val:        "[\\r\\n]",
														chars:      []rune{'\r', '\n'},
														ignoreCase: false,
														inverted:   false,
													},
													&notExpr{
														pos: position{line: 719, col: 8, offset: 30217},
														expr: &anyMatcher{
															line: 719, col: 9, offset: 30218,
														},
													},
												},
											},
										},
									},
								},
							},
						},
						&litMatcher{
							pos:        position{line: 234, col: 24, offset: 9215},
							val:        "===",
							ignoreCase: false,
						},
						&oneOrMoreExpr{
							pos: position{line: 234, col: 30, offset: 9221},
							expr: &choiceExpr{
								pos: position{line: 713, col: 7, offset: 30126},
								alternatives: []interface{}{
									&litMatcher{
										pos:        position{line: 713, col: 7, offset: 30126},
										val:        " ",
										ignoreCase: false,
									},
									&actionExpr{
										pos: position{line: 713, col: 13, offset: 30132},
										run: (*parser).callonSection2Title285,
										expr: &litMatcher{
											pos:        position{line: 713, col: 13, offset: 30132},
											val:        "\t",
											ignoreCase: false,
										},
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 236, col: 69, offset: 9295},
							label: "content",
							expr: &ruleRefExpr{
								pos:  position{line: 236, col: 78, offset: 9304},
								name: "TitleElements",
							},
						},
						&zeroOrMoreExpr{
							pos: position{line: 236, col: 93, offset: 9319},
							expr: &choiceExpr{
								pos: position{line: 713, col: 7, offset: 30126},
								alternatives: []interface{}{
									&litMatcher{
										pos:        position{line: 713, col: 7, offset: 30126},
										val:        " ",
										ignoreCase: false,
									},
									&actionExpr{
										pos: position{line: 713, col: 13, offset: 30132},
										run: (*parser).callonSection2Title292,
										expr: &litMatcher{
											pos:        position{line: 713, col: 13, offset: 30132},
											val:        "\t",
											ignoreCase: false,
										},
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 236, col: 97, offset: 9323},
							label: "id",
							expr: &zeroOrOneExpr{
								pos: position{line: 236, col: 100, offset: 9326},
								expr: &actionExpr{
									pos: position{line: 130, col: 20, offset: 5333},
									run: (*parser).callonSection2Title296,
									expr: &seqExpr{
										pos: position{line: 130, col: 20, offset: 5333},
										exprs: []interface{}{
											&litMatcher{
												pos:        position{line: 130, col: 20, offset: 5333},
												val:        "[[",
												ignoreCase: false,
											},
											&labeledExpr{
												pos:   position{line: 130, col: 25, offset: 5338},
												label: "id",
												expr: &actionExpr{
													pos: position{line: 701, col: 7, offset: 29885},
													run: (*parser).callonSection2Title300,
													expr: &oneOrMoreExpr{
														pos: position{line: 701, col: 7, offset: 29885},
														expr: &seqExpr{
															pos: position{line: 701, col: 8, offset: 29886},
															exprs: []interface{}{
																&notExpr{
																	pos: position{line: 701, col: 8, offset: 29886},
																	expr: &choiceExpr{
																		pos: position{line: 717, col: 12, offset: 30188},
																		alternatives: []interface{}{
																			&litMatcher{
																				pos:        position{line: 717, col: 12, offset: 30188},
																				val:        "\r\n",
																				ignoreCase: false,
																			},
																			&charClassMatcher{
																				pos:        position{line: 717, col: 21, offset: 30197},
																				val:        "[\\r\\n]",
																				chars:      []rune{'\r', '\n'},
																				ignoreCase: false,
																				inverted:   false,
																			},
																		},
																	},
																},
																&notExpr{
																	pos: position{line: 701, col: 17, offset: 29895},
																	expr: &choiceExpr{
																		pos: position{line: 713, col: 7, offset: 30126},
																		alternatives: []interface{}{
																			&litMatcher{
																				pos:        position{line: 713, col: 7, offset: 30126},
																				val:        " ",
																				ignoreCase: false,
																			},
																			&actionExpr{
																				pos: position{line: 713, col: 13, offset: 30132},
																				run: (*parser).callonSection2Title310,
																				expr: &litMatcher{
																					pos:        position{line: 713, col: 13, offset: 30132},
																					val:        "\t",
																					ignoreCase: false,
																				},
																			},
																		},
																	},
																},
																&notExpr{
																	pos: position{line: 701, col: 21, offset: 29899},
																	expr: &litMatcher{
																		pos:        position{line: 701, col: 22, offset: 29900},
																		val:        "[",
																		ignoreCase: false,
																	},
																},
																&notExpr{
																	pos: position{line: 701, col: 26, offset: 29904},
																	expr: &litMatcher{
																		pos:        position{line: 701, col: 27, offset: 29905},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
																&notExpr{
																	pos: position{line: 701, col: 31, offset: 29909},
																	expr: &litMatcher{
																		pos:        position{line: 701, col: 32, offset: 29910},
																		val:        "<<",
																		ignoreCase: false,
																	},
																},
																&notExpr{
																	pos: position{line: 701, col: 37, offset: 29915},
																	expr: &litMatcher{
																		pos:        position{line: 701, col: 38, offset: 29916},
																		val:        ">>",
																		ignoreCase: false,
																	},
																},
																&anyMatcher{
																	line: 701, col: 42, offset: 29920,
																},
															},
														},
													},
												},
											},
											&litMatcher{
												pos:        position{line: 130, col: 33, offset: 5346},
												val:        "]]",
												ignoreCase: false,
											},
										},
									},
								},
							},
						},
						&zeroOrMoreExpr{
							pos: position{line: 236, col: 119, offset: 9345},
							expr: &choiceExpr{
								pos: position{line: 713, col: 7, offset: 30126},
								alternatives: []interface{}{
									&litMatcher{
										pos:        position{line: 713, col: 7, offset: 30126},
										val:        " ",
										ignoreCase: false,
									},
									&actionExpr{
										pos: position{line: 713, col: 13, offset: 30132},
										run: (*parser).callonSection2Title325,
										expr: &litMatcher{
											pos:        position{line: 713, col: 13, offset: 30132},
											val:        "\t",
											ignoreCase: false,
										},
									},
								},
							},
						},
						&choiceExpr{
							pos: position{line: 721, col: 8, offset: 30228},
							alternatives: []interface{}{
								&litMatcher{
									pos:        position{line: 717, col: 12, offset: 30188},
									val:        "\r\n",
									ignoreCase: false,
								},
								&charClassMatcher{
									pos:        position{line: 717, col: 21, offset: 30197},
									val:        "[\\r\\n]",
									chars:      []rune{'\r', '\n'},
									ignoreCase: false,
									inverted:   false,
								},
								&notExpr{
									pos: position{line: 719, col: 8, offset: 30217},
									expr: &anyMatcher{
										line: 719, col: 9, offset: 30218,
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "Section2Block",
			pos:  position{line: 240, col: 1, offset: 9463},
			expr: &actionExpr{
				pos: position{line: 240, col: 18, offset: 9480},
				run: (*parser).callonSection2Block1,
				expr: &seqExpr{
					pos: position{line: 240, col: 18, offset: 9480},
					exprs: []interface{}{
						&notExpr{
							pos: position{line: 240, col: 18, offset: 9480},
							expr: &ruleRefExpr{
								pos:  position{line: 240, col: 19, offset: 9481},
								name: "Section1Title",
							},
						},
						&notExpr{
							pos: position{line: 240, col: 33, offset: 9495},
							expr: &ruleRefExpr{
								pos:  position{line: 240, col: 34, offset: 9496},
								name: "Section2Title",
							},
						},
						&labeledExpr{
							pos:   position{line: 240, col: 48, offset: 9510},
							label: "content",
							expr: &zeroOrMoreExpr{
								pos: position{line: 240, col: 56, offset: 9518},
								expr: &choiceExpr{
									pos: position{line: 240, col: 57, offset: 9519},
									alternatives: []interface{}{
										&ruleRefExpr{
											pos:  position{line: 240, col: 57, offset: 9519},
											name: "Section3",
										},
										&ruleRefExpr{
											pos:  position{line: 240, col: 68, offset: 9530},
											name: "Section4",
										},
										&ruleRefExpr{
											pos:  position{line: 240, col: 79, offset: 9541},
											name: "Section5",
										},
										&ruleRefExpr{
											pos:  position{line: 240, col: 90, offset: 9552},
											name: "DocumentBlock",
										},
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "Section3",
			pos:  position{line: 244, col: 1, offset: 9597},
			expr: &actionExpr{
				pos: position{line: 244, col: 13, offset: 9609},
				run: (*parser).callonSection31,
				expr: &seqExpr{
					pos: position{line: 244, col: 13, offset: 9609},
					exprs: []interface{}{
						&notExpr{
							pos: position{line: 244, col: 13, offset: 9609},
							expr: &notExpr{
								pos: position{line: 719, col: 8, offset: 30217},
								expr: &anyMatcher{
									line: 719, col: 9, offset: 30218,
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 245, col: 5, offset: 9680},
							label: "section",
							expr: &actionExpr{
								pos: position{line: 245, col: 14, offset: 9689},
								run: (*parser).callonSection37,
								expr: &seqExpr{
									pos: position{line: 245, col: 14, offset: 9689},
									exprs: []interface{}{
										&labeledExpr{
											pos:   position{line: 245, col: 14, offset: 9689},
											label: "header",
											expr: &ruleRefExpr{
												pos:  position{line: 245, col: 22, offset: 9697},
												name: "Section3Title",
											},
										},
										&labeledExpr{
											pos:   position{line: 245, col: 37, offset: 9712},
											label: "elements",
											expr: &zeroOrOneExpr{
												pos: position{line: 245, col: 47, offset: 9722},
												expr: &ruleRefExpr{
													pos:  position{line: 245, col: 47, offset: 9722},
													name: "Section3Block",
												},
											},
										},
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "Section3Title",
			pos:  position{line: 253, col: 1, offset: 9910},
			expr: &actionExpr{
				pos: position{line: 253, col: 18, offset: 9927},
				run: (*parser).callonSection3Title1,
				expr: &seqExpr{
					pos: position{line: 253, col: 18, offset: 9927},
					exprs: []interface{}{
						&labeledExpr{
							pos:   position{line: 253, col: 18, offset: 9927},
							label: "attributes",
							expr: &zeroOrMoreExpr{
								pos: position{line: 253, col: 29, offset: 9938},
								expr: &actionExpr{
									pos: position{line: 120, col: 21, offset: 5018},
									run: (*parser).callonSection3Title5,
									expr: &seqExpr{
										pos: position{line: 120, col: 21, offset: 5018},
										exprs: []interface{}{
											&labeledExpr{
												pos:   position{line: 120, col: 21, offset: 5018},
												label: "attr",
												expr: &choiceExpr{
													pos: position{line: 120, col: 27, offset: 5024},
													alternatives: []interface{}{
														&actionExpr{
															pos: position{line: 124, col: 14, offset: 5203},
															run: (*parser).callonSection3Title9,
															expr: &labeledExpr{
																pos:   position{line: 124, col: 14, offset: 5203},
																label: "id",
																expr: &actionExpr{
																	pos: position{line: 130, col: 20, offset: 5333},
																	run: (*parser).callonSection3Title11,
																	expr: &seqExpr{
																		pos: position{line: 130, col: 20, offset: 5333},
																		exprs: []interface{}{
																			&litMatcher{
																				pos:        position{line: 130, col: 20, offset: 5333},
																				val:        "[[",
																				ignoreCase: false,
																			},
																			&labeledExpr{
																				pos:   position{line: 130, col: 25, offset: 5338},
																				label: "id",
																				expr: &actionExpr{
																					pos: position{line: 701, col: 7, offset: 29885},
																					run: (*parser).callonSection3Title15,
																					expr: &oneOrMoreExpr{
																						pos: position{line: 701, col: 7, offset: 29885},
																						expr: &seqExpr{
																							pos: position{line: 701, col: 8, offset: 29886},
																							exprs: []interface{}{
																								&notExpr{
																									pos: position{line: 701, col: 8, offset: 29886},
																									expr: &choiceExpr{
																										pos: position{line: 717, col: 12, offset: 30188},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 717, col: 12, offset: 30188},
																												val:        "\r\n",
																												ignoreCase: false,
																											},
																											&charClassMatcher{
																												pos:        position{line: 717, col: 21, offset: 30197},
																												val:        "[\\r\\n]",
																												chars:      []rune{'\r', '\n'},
																												ignoreCase: false,
																												inverted:   false,
																											},
																										},
																									},
																								},
																								&notExpr{
																									pos: position{line: 701, col: 17, offset: 29895},
																									expr: &choiceExpr{
																										pos: position{line: 713, col: 7, offset: 30126},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 713, col: 7, offset: 30126},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 713, col: 13, offset: 30132},
																												run: (*parser).callonSection3Title25,
																												expr: &litMatcher{
																													pos:        position{line: 713, col: 13, offset: 30132},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																								&notExpr{
																									pos: position{line: 701, col: 21, offset: 29899},
																									expr: &litMatcher{
																										pos:        position{line: 701, col: 22, offset: 29900},
																										val:        "[",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 701, col: 26, offset: 29904},
																									expr: &litMatcher{
																										pos:        position{line: 701, col: 27, offset: 29905},
																										val:        "]",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 701, col: 31, offset: 29909},
																									expr: &litMatcher{
																										pos:        position{line: 701, col: 32, offset: 29910},
																										val:        "<<",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 701, col: 37, offset: 29915},
																									expr: &litMatcher{
																										pos:        position{line: 701, col: 38, offset: 29916},
																										val:        ">>",
																										ignoreCase: false,
																									},
																								},
																								&anyMatcher{
																									line: 701, col: 42, offset: 29920,
																								},
																							},
																						},
																					},
																				},
																			},
																			&litMatcher{
																				pos:        position{line: 130, col: 33, offset: 5346},
																				val:        "]]",
																				ignoreCase: false,
																			},
																		},
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 126, col: 5, offset: 5249},
															run: (*parser).callonSection3Title37,
															expr: &seqExpr{
																pos: position{line: 126, col: 5, offset: 5249},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 126, col: 5, offset: 5249},
																		val:        "[#",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 126, col: 10, offset: 5254},
																		label: "id",
																		expr: &actionExpr{
																			pos: position{line: 701, col: 7, offset: 29885},
																			run: (*parser).callonSection3Title41,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 701, col: 7, offset: 29885},
																				expr: &seqExpr{
																					pos: position{line: 701, col: 8, offset: 29886},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 701, col: 8, offset: 29886},
																							expr: &choiceExpr{
																								pos: position{line: 717, col: 12, offset: 30188},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 717, col: 12, offset: 30188},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 717, col: 21, offset: 30197},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 701, col: 17, offset: 29895},
																							expr: &choiceExpr{
																								pos: position{line: 713, col: 7, offset: 30126},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 713, col: 7, offset: 30126},
																										val:        " ",
																										ignoreCase: false,
																									},
																									&actionExpr{
																										pos: position{line: 713, col: 13, offset: 30132},
																										run: (*parser).callonSection3Title51,
																										expr: &litMatcher{
																											pos:        position{line: 713, col: 13, offset: 30132},
																											val:        "\t",
																											ignoreCase: false,
																										},
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 701, col: 21, offset: 29899},
																							expr: &litMatcher{
																								pos:        position{line: 701, col: 22, offset: 29900},
																								val:        "[",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 701, col: 26, offset: 29904},
																							expr: &litMatcher{
																								pos:        position{line: 701, col: 27, offset: 29905},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 701, col: 31, offset: 29909},
																							expr: &litMatcher{
																								pos:        position{line: 701, col: 32, offset: 29910},
																								val:        "<<",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 701, col: 37, offset: 29915},
																							expr: &litMatcher{
																								pos:        position{line: 701, col: 38, offset: 29916},
																								val:        ">>",
																								ignoreCase: false,
																							},
																						},
																						&anyMatcher{
																							line: 701, col: 42, offset: 29920,
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 126, col: 18, offset: 5262},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 136, col: 17, offset: 5557},
															run: (*parser).callonSection3Title63,
															expr: &seqExpr{
																pos: position{line: 136, col: 17, offset: 5557},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 136, col: 17, offset: 5557},
																		val:        ".",
																		ignoreCase: false,
																	},
																	&notExpr{
																		pos: position{line: 136, col: 21, offset: 5561},
																		expr: &litMatcher{
																			pos:        position{line: 136, col: 22, offset: 5562},
																			val:        ".",
																			ignoreCase: false,
																		},
																	},
																	&notExpr{
																		pos: position{line: 136, col: 26, offset: 5566},
																		expr: &choiceExpr{
																			pos: position{line: 713, col: 7, offset: 30126},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 713, col: 7, offset: 30126},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 713, col: 13, offset: 30132},
																					run: (*parser).callonSection3Title71,
																					expr: &litMatcher{
																						pos:        position{line: 713, col: 13, offset: 30132},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 136, col: 30, offset: 5570},
																		label: "title",
																		expr: &oneOrMoreExpr{
																			pos: position{line: 136, col: 36, offset: 5576},
																			expr: &seqExpr{
																				pos: position{line: 136, col: 37, offset: 5577},
																				exprs: []interface{}{
																					&notExpr{
																						pos: position{line: 136, col: 37, offset: 5577},
																						expr: &choiceExpr{
																							pos: position{line: 717, col: 12, offset: 30188},
																							alternatives: []interface{}{
																								&litMatcher{
																									pos:        position{line: 717, col: 12, offset: 30188},
																									val:        "\r\n",
																									ignoreCase: false,
																								},
																								&charClassMatcher{
																									pos:        position{line: 717, col: 21, offset: 30197},
																									val:        "[\\r\\n]",
																									chars:      []rune{'\r', '\n'},
																									ignoreCase: false,
																									inverted:   false,
																								},
																							},
																						},
																					},
																					&anyMatcher{
																						line: 136, col: 46, offset: 5586,
																					},
																				},
																			},
																		},
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 141, col: 30, offset: 5760},
															run: (*parser).callonSection3Title81,
															expr: &seqExpr{
																pos: position{line: 141, col: 30, offset: 5760},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 141, col: 30, offset: 5760},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 141, col: 34, offset: 5764},
																		label: "k",
																		expr: &choiceExpr{
																			pos: position{line: 442, col: 19, offset: 17830},
																			alternatives: []interface{}{
																				&actionExpr{
																					pos: position{line: 442, col: 19, offset: 17830},
																					run: (*parser).callonSection3Title86,
																					expr: &litMatcher{
																						pos:        position{line: 442, col: 19, offset: 17830},
																						val:        "TIP",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 444, col: 5, offset: 17868},
																					run: (*parser).callonSection3Title88,
																					expr: &litMatcher{
																						pos:        position{line: 444, col: 5, offset: 17868},
																						val:        "NOTE",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 446, col: 5, offset: 17908},
																					run: (*parser).callonSection3Title90,
																					expr: &litMatcher{
																						pos:        position{line: 446, col: 5, offset: 17908},
																						val:        "IMPORTANT",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 448, col: 5, offset: 17958},
																					run: (*parser).callonSection3Title92,
																					expr: &litMatcher{
																						pos:        position{line: 448, col: 5, offset: 17958},
																						val:        "WARNING",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 450, col: 5, offset: 18004},
																					run: (*parser).callonSection3Title94,
																					expr: &litMatcher{
																						pos:        position{line: 450, col: 5, offset: 18004},
																						val:        "CAUTION",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 141, col: 53, offset: 5783},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 146, col: 19, offset: 5896},
															run: (*parser).callonSection3Title97,
															expr: &seqExpr{
																pos: position{line: 146, col: 19, offset: 5896},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 146, col: 19, offset: 5896},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 146, col: 23, offset: 5900},
																		label: "attribute",
																		expr: &choiceExpr{
																			pos: position{line: 150, col: 21, offset: 6095},
																			alternatives: []interface{}{
																				&actionExpr{
																					pos: position{line: 150, col: 21, offset: 6095},
																					run: (*parser).callonSection3Title102,
																					expr: &seqExpr{
																						pos: position{line: 150, col: 21, offset: 6095},
																						exprs: []interface{}{
																							&labeledExpr{
																								pos:   position{line: 150, col: 21, offset: 6095},
																								label: "key",
																								expr: &actionExpr{
																									pos: position{line: 162, col: 17, offset: 6664},
																									run: (*parser).callonSection3Title105,
																									expr: &seqExpr{
																										pos: position{line: 162, col: 17, offset: 6664},
																										exprs: []interface{}{
																											&labeledExpr{
																												pos:   position{line: 162, col: 17, offset: 6664},
																												label: "key",
																												expr: &oneOrMoreExpr{
																													pos: position{line: 162, col: 22, offset: 6669},
																													expr: &seqExpr{
																														pos: position{line: 162, col: 23, offset: 6670},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 162, col: 23, offset: 6670},
																																expr: &choiceExpr{
																																	pos: position{line: 713, col: 7, offset: 30126},
																																	alternatives: []interface{}{
																																		&litMatcher{
																																			pos:        position{line: 713, col: 7, offset: 30126},
																																			val:        " ",
																																			ignoreCase: false,
																																		},
																																		&actionExpr{
																																			pos: position{line: 713, col: 13, offset: 30132},
																																			run: (*parser).callonSection3Title113,
																																			expr: &litMatcher{
																																				pos:        position{line: 713, col: 13, offset: 30132},
																																				val:        "\t",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																},
																															},
																															&notExpr{
																																pos: position{line: 162, col: 27, offset: 6674},
																																expr: &litMatcher{
																																	pos:        position{line: 162, col: 28, offset: 6675},
																																	val:        "=",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 162, col: 32, offset: 6679},
																																expr: &litMatcher{
																																	pos:        position{line: 162, col: 33, offset: 6680},
																																	val:        ",",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 162, col: 37, offset: 6684},
																																expr: &litMatcher{
																																	pos:        position{line: 162, col: 38, offset: 6685},
																																	val:        "]",
																																	ignoreCase: false,
																																},
																															},
																															&anyMatcher{
																																line: 162, col: 42, offset: 6689,
																															},
																														},
																													},
																												},
																											},
																											&zeroOrMoreExpr{
																												pos: position{line: 162, col: 46, offset: 6693},
																												expr: &choiceExpr{
																													pos: position{line: 713, col: 7, offset: 30126},
																													alternatives: []interface{}{
																														&litMatcher{
																															pos:        position{line: 713, col: 7, offset: 30126},
																															val:        " ",
																															ignoreCase: false,
																														},
																														&actionExpr{
																															pos: position{line: 713, col: 13, offset: 30132},
																															run: (*parser).callonSection3Title125,
																															expr: &litMatcher{
																																pos:        position{line: 713, col: 13, offset: 30132},
																																val:        "\t",
																																ignoreCase: false,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&litMatcher{
																								pos:        position{line: 150, col: 40, offset: 6114},
																								val:        "=",
																								ignoreCase: false,
																							},
																							&labeledExpr{
																								pos:   position{line: 150, col: 44, offset: 6118},
																								label: "value",
																								expr: &actionExpr{
																									pos: position{line: 167, col: 19, offset: 6793},
																									run: (*parser).callonSection3Title129,
																									expr: &seqExpr{
																										pos: position{line: 167, col: 19, offset: 6793},
																										exprs: []interface{}{
																											&zeroOrMoreExpr{
																												pos: position{line: 167, col: 19, offset: 6793},
																												expr: &choiceExpr{
																													pos: position{line: 713, col: 7, offset: 30126},
																													alternatives: []interface{}{
																														&litMatcher{
																															pos:        position{line: 713, col: 7, offset: 30126},
																															val:        " ",
																															ignoreCase: false,
																														},
																														&actionExpr{
																															pos: position{line: 713, col: 13, offset: 30132},
																															run: (*parser).callonSection3Title134,
																															expr: &litMatcher{
																																pos:        position{line: 713, col: 13, offset: 30132},
																																val:        "\t",
																																ignoreCase: false,
																															},
																														},
																													},
																												},
																											},
																											&labeledExpr{
																												pos:   position{line: 167, col: 23, offset: 6797},
																												label: "value",
																												expr: &zeroOrMoreExpr{
																													pos: position{line: 167, col: 29, offset: 6803},
																													expr: &seqExpr{
																														pos: position{line: 167, col: 30, offset: 6804},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 167, col: 30, offset: 6804},
																																expr: &choiceExpr{
																																	pos: position{line: 713, col: 7, offset: 30126},
																																	alternatives: []interface{}{
																																		&litMatcher{
																																			pos:        position{line: 713, col: 7, offset: 30126},
																																			val:        " ",
																																			ignoreCase: false,
																																		},
																																		&actionExpr{
																																			pos: position{line: 713, col: 13, offset: 30132},
																																			run: (*parser).callonSection3Title142,
																																			expr: &litMatcher{
																																				pos:        position{line: 713, col: 13, offset: 30132},
																																				val:        "\t",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																},
																															},
																															&notExpr{
																																pos: position{line: 167, col: 34, offset: 6808},
																																expr: &litMatcher{
																																	pos:        position{line: 167, col: 35, offset: 6809},
																																	val:        "=",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 167, col: 39, offset: 6813},
																																expr: &litMatcher{
																																	pos:        position{line: 167, col: 40, offset: 6814},
																																	val:        "]",
																																	ignoreCase: false,
																																},
																															},
																															&anyMatcher{
																																line: 167, col: 44, offset: 6818,
																															},
																														},
																													},
																												},
																											},
																											&zeroOrMoreExpr{
																												pos: position{line: 167, col: 48, offset: 6822},
																												expr: &choiceExpr{
																													pos: position{line: 713, col: 7, offset: 30126},
																													alternatives: []interface{}{
																														&litMatcher{
																															pos:        position{line: 713, col: 7, offset: 30126},
																															val:        " ",
																															ignoreCase: false,
																														},
																														&actionExpr{
																															pos: position{line: 713, col: 13, offset: 30132},
																															run: (*parser).callonSection3Title152,
																															expr: &litMatcher{
																																pos:        position{line: 713, col: 13, offset: 30132},
																																val:        "\t",
																																ignoreCase: false,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																				&actionExpr{
																					pos: position{line: 152, col: 5, offset: 6244},
																					run: (*parser).callonSection3Title154,
																					expr: &labeledExpr{
																						pos:   position{line: 152, col: 5, offset: 6244},
																						label: "key",
																						expr: &actionExpr{
																							pos: position{line: 162, col: 17, offset: 6664},
																							run: (*parser).callonSection3Title156,
																							expr: &seqExpr{
																								pos: position{line: 162, col: 17, offset: 6664},
																								exprs: []interface{}{
																									&labeledExpr{
																										pos:   position{line: 162, col: 17, offset: 6664},
																										label: "key",
																										expr: &oneOrMoreExpr{
																											pos: position{line: 162, col: 22, offset: 6669},
																											expr: &seqExpr{
																												pos: position{line: 162, col: 23, offset: 6670},
																												exprs: []interface{}{
																													&notExpr{
																														pos: position{line: 162, col: 23, offset: 6670},
																														expr: &choiceExpr{
																															pos: position{line: 713, col: 7, offset: 30126},
																															alternatives: []interface{}{
																																&litMatcher{
																																	pos:        position{line: 713, col: 7, offset: 30126},
																																	val:        " ",
																																	ignoreCase: false,
																																},
																																&actionExpr{
																																	pos: position{line: 713, col: 13, offset: 30132},
																																	run: (*parser).callonSection3Title164,
																																	expr: &litMatcher{
																																		pos:        position{line: 713, col: 13, offset: 30132},
																																		val:        "\t",
																																		ignoreCase: false,
																																	},
																																},
																															},
																														},
																													},
																													&notExpr{
																														pos: position{line: 162, col: 27, offset: 6674},
																														expr: &litMatcher{
																															pos:        position{line: 162, col: 28, offset: 6675},
																															val:        "=",
																															ignoreCase: false,
																														},
																													},
																													&notExpr{
																														pos: position{line: 162, col: 32, offset: 6679},
																														expr: &litMatcher{
																															pos:        position{line: 162, col: 33, offset: 6680},
																															val:        ",",
																															ignoreCase: false,
																														},
																													},
																													&notExpr{
																														pos: position{line: 162, col: 37, offset: 6684},
																														expr: &litMatcher{
																															pos:        position{line: 162, col: 38, offset: 6685},
																															val:        "]",
																															ignoreCase: false,
																														},
																													},
																													&anyMatcher{
																														line: 162, col: 42, offset: 6689,
																													},
																												},
																											},
																										},
																									},
																									&zeroOrMoreExpr{
																										pos: position{line: 162, col: 46, offset: 6693},
																										expr: &choiceExpr{
																											pos: position{line: 713, col: 7, offset: 30126},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 713, col: 7, offset: 30126},
																													val:        " ",
																													ignoreCase: false,
																												},
																												&actionExpr{
																													pos: position{line: 713, col: 13, offset: 30132},
																													run: (*parser).callonSection3Title176,
																													expr: &litMatcher{
																														pos:        position{line: 713, col: 13, offset: 30132},
																														val:        "\t",
																														ignoreCase: false,
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 146, col: 52, offset: 5929},
																		label: "attributes",
																		expr: &zeroOrMoreExpr{
																			pos: position{line: 146, col: 63, offset: 5940},
																			expr: &choiceExpr{
																				pos: position{line: 156, col: 26, offset: 6376},
																				alternatives: []interface{}{
																					&actionExpr{
																						pos: position{line: 156, col: 26, offset: 6376},
																						run: (*parser).callonSection3Title181,
																						expr: &seqExpr{
																							pos: position{line: 156, col: 26, offset: 6376},
																							exprs: []interface{}{
																								&litMatcher{
																									pos:        position{line: 156, col: 26, offset: 6376},
																									val:        ",",
																									ignoreCase: false,
																								},
																								&zeroOrMoreExpr{
																									pos: position{line: 156, col: 30, offset: 6380},
																									expr: &choiceExpr{
																										pos: position{line: 713, col: 7, offset: 30126},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 713, col: 7, offset: 30126},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 713, col: 13, offset: 30132},
																												run: (*parser).callonSection3Title187,
																												expr: &litMatcher{
																													pos:        position{line: 713, col: 13, offset: 30132},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																								&labeledExpr{
																									pos:   position{line: 156, col: 34, offset: 6384},
																									label: "key",
																									expr: &actionExpr{
																										pos: position{line: 162, col: 17, offset: 6664},
																										run: (*parser).callonSection3Title190,
																										expr: &seqExpr{
																											pos: position{line: 162, col: 17, offset: 6664},
																											exprs: []interface{}{
																												&labeledExpr{
																													pos:   position{line: 162, col: 17, offset: 6664},
																													label: "key",
																													expr: &oneOrMoreExpr{
																														pos: position{line: 162, col: 22, offset: 6669},
																														expr: &seqExpr{
																															pos: position{line: 162, col: 23, offset: 6670},
																															exprs: []interface{}{
																																&notExpr{
																																	pos: position{line: 162, col: 23, offset: 6670},
																																	expr: &choiceExpr{
																																		pos: position{line: 713, col: 7, offset: 30126},
																																		alternatives: []interface{}{
																																			&litMatcher{
																																				pos:        position{line: 713, col: 7, offset: 30126},
																																				val:        " ",
																																				ignoreCase: false,
																																			},
																																			&actionExpr{
																																				pos: position{line: 713, col: 13, offset: 30132},
																																				run: (*parser).callonSection3Title198,
																																				expr: &litMatcher{
																																					pos:        position{line: 713, col: 13, offset: 30132},
																																					val:        "\t",
																																					ignoreCase: false,
																																				},
																																			},
																																		},
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 162, col: 27, offset: 6674},
																																	expr: &litMatcher{
																																		pos:        position{line: 162, col: 28, offset: 6675},
																																		val:        "=",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 162, col: 32, offset: 6679},
																																	expr: &litMatcher{
																																		pos:        position{line: 162, col: 33, offset: 6680},
																																		val:        ",",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 162, col: 37, offset: 6684},
																																	expr: &litMatcher{
																																		pos:        position{line: 162, col: 38, offset: 6685},
																																		val:        "]",
																																		ignoreCase: false,
																																	},
																																},
																																&anyMatcher{
																																	line: 162, col: 42, offset: 6689,
																																},
																															},
																														},
																													},
																												},
																												&zeroOrMoreExpr{
																													pos: position{line: 162, col: 46, offset: 6693},
																													expr: &choiceExpr{
																														pos: position{line: 713, col: 7, offset: 30126},
																														alternatives: []interface{}{
																															&litMatcher{
																																pos:        position{line: 713, col: 7, offset: 30126},
																																val:        " ",
																																ignoreCase: false,
																															},
																															&actionExpr{
																																pos: position{line: 713, col: 13, offset: 30132},
																																run: (*parser).callonSection3Title210,
																																expr: &litMatcher{
																																	pos:        position{line: 713, col: 13, offset: 30132},
																																	val:        "\t",
																																	ignoreCase: false,
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&litMatcher{
																									pos:        position{line: 156, col: 53, offset: 6403},
																									val:        "=",
																									ignoreCase: false,
																								},
																								&labeledExpr{
																									pos:   position{line: 156, col: 57, offset: 6407},
																									label: "value",
																									expr: &actionExpr{
																										pos: position{line: 167, col: 19, offset: 6793},
																										run: (*parser).callonSection3Title214,
																										expr: &seqExpr{
																											pos: position{line: 167, col: 19, offset: 6793},
																											exprs: []interface{}{
																												&zeroOrMoreExpr{
																													pos: position{line: 167, col: 19, offset: 6793},
																													expr: &choiceExpr{
																														pos: position{line: 713, col: 7, offset: 30126},
																														alternatives: []interface{}{
																															&litMatcher{
																																pos:        position{line: 713, col: 7, offset: 30126},
																																val:        " ",
																																ignoreCase: false,
																															},
																															&actionExpr{
																																pos: position{line: 713, col: 13, offset: 30132},
																																run: (*parser).callonSection3Title219,
																																expr: &litMatcher{
																																	pos:        position{line: 713, col: 13, offset: 30132},
																																	val:        "\t",
																																	ignoreCase: false,
																																},
																															},
																														},
																													},
																												},
																												&labeledExpr{
																													pos:   position{line: 167, col: 23, offset: 6797},
																													label: "value",
																													expr: &zeroOrMoreExpr{
																														pos: position{line: 167, col: 29, offset: 6803},
																														expr: &seqExpr{
																															pos: position{line: 167, col: 30, offset: 6804},
																															exprs: []interface{}{
																																&notExpr{
																																	pos: position{line: 167, col: 30, offset: 6804},
																																	expr: &choiceExpr{
																																		pos: position{line: 713, col: 7, offset: 30126},
																																		alternatives: []interface{}{
																																			&litMatcher{
																																				pos:        position{line: 713, col: 7, offset: 30126},
																																				val:        " ",
																																				ignoreCase: false,
																																			},
																																			&actionExpr{
																																				pos: position{line: 713, col: 13, offset: 30132},
																																				run: (*parser).callonSection3Title227,
																																				expr: &litMatcher{
																																					pos:        position{line: 713, col: 13, offset: 30132},
																																					val:        "\t",
																																					ignoreCase: false,
																																				},
																																			},
																																		},
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 167, col: 34, offset: 6808},
																																	expr: &litMatcher{
																																		pos:        position{line: 167, col: 35, offset: 6809},
																																		val:        "=",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 167, col: 39, offset: 6813},
																																	expr: &litMatcher{
																																		pos:        position{line: 167, col: 40, offset: 6814},
																																		val:        "]",
																																		ignoreCase: false,
																																	},
																																},
																																&anyMatcher{
																																	line: 167, col: 44, offset: 6818,
																																},
																															},
																														},
																													},
																												},
																												&zeroOrMoreExpr{
																													pos: position{line: 167, col: 48, offset: 6822},
																													expr: &choiceExpr{
																														pos: position{line: 713, col: 7, offset: 30126},
																														alternatives: []interface{}{
																															&litMatcher{
																																pos:        position{line: 713, col: 7, offset: 30126},
																																val:        " ",
																																ignoreCase: false,
																															},
																															&actionExpr{
																																pos: position{line: 713, col: 13, offset: 30132},
																																run: (*parser).callonSection3Title237,
																																expr: &litMatcher{
																																	pos:        position{line: 713, col: 13, offset: 30132},
																																	val:        "\t",
																																	ignoreCase: false,
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																					&actionExpr{
																						pos: position{line: 158, col: 5, offset: 6533},
																						run: (*parser).callonSection3Title239,
																						expr: &seqExpr{
																							pos: position{line: 158, col: 5, offset: 6533},
																							exprs: []interface{}{
																								&litMatcher{
																									pos:        position{line: 158, col: 5, offset: 6533},
																									val:        ",",
																									ignoreCase: false,
																								},
																								&zeroOrMoreExpr{
																									pos: position{line: 158, col: 9, offset: 6537},
																									expr: &choiceExpr{
																										pos: position{line: 713, col: 7, offset: 30126},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 713, col: 7, offset: 30126},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 713, col: 13, offset: 30132},
																												run: (*parser).callonSection3Title245,
																												expr: &litMatcher{
																													pos:        position{line: 713, col: 13, offset: 30132},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																								&labeledExpr{
																									pos:   position{line: 158, col: 13, offset: 6541},
																									label: "key",
																									expr: &actionExpr{
																										pos: position{line: 162, col: 17, offset: 6664},
																										run: (*parser).callonSection3Title248,
																										expr: &seqExpr{
																											pos: position{line: 162, col: 17, offset: 6664},
																											exprs: []interface{}{
																												&labeledExpr{
																													pos:   position{line: 162, col: 17, offset: 6664},
																													label: "key",
																													expr: &oneOrMoreExpr{
																														pos: position{line: 162, col: 22, offset: 6669},
																														expr: &seqExpr{
																															pos: position{line: 162, col: 23, offset: 6670},
																															exprs: []interface{}{
																																&notExpr{
																																	pos: position{line: 162, col: 23, offset: 6670},
																																	expr: &choiceExpr{
																																		pos: position{line: 713, col: 7, offset: 30126},
																																		alternatives: []interface{}{
																																			&litMatcher{
																																				pos:        position{line: 713, col: 7, offset: 30126},
																																				val:        " ",
																																				ignoreCase: false,
																																			},
																																			&actionExpr{
																																				pos: position{line: 713, col: 13, offset: 30132},
																																				run: (*parser).callonSection3Title256,
																																				expr: &litMatcher{
																																					pos:        position{line: 713, col: 13, offset: 30132},
																																					val:        "\t",
																																					ignoreCase: false,
																																				},
																																			},
																																		},
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 162, col: 27, offset: 6674},
																																	expr: &litMatcher{
																																		pos:        position{line: 162, col: 28, offset: 6675},
																																		val:        "=",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 162, col: 32, offset: 6679},
																																	expr: &litMatcher{
																																		pos:        position{line: 162, col: 33, offset: 6680},
																																		val:        ",",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 162, col: 37, offset: 6684},
																																	expr: &litMatcher{
																																		pos:        position{line: 162, col: 38, offset: 6685},
																																		val:        "]",
																																		ignoreCase: false,
																																	},
																																},
																																&anyMatcher{
																																	line: 162, col: 42, offset: 6689,
																																},
																															},
																														},
																													},
																												},
																												&zeroOrMoreExpr{
																													pos: position{line: 162, col: 46, offset: 6693},
																													expr: &choiceExpr{
																														pos: position{line: 713, col: 7, offset: 30126},
																														alternatives: []interface{}{
																															&litMatcher{
																																pos:        position{line: 713, col: 7, offset: 30126},
																																val:        " ",
																																ignoreCase: false,
																															},
																															&actionExpr{
																																pos: position{line: 713, col: 13, offset: 30132},
																																run: (*parser).callonSection3Title268,
																																expr: &litMatcher{
																																	pos:        position{line: 713, col: 13, offset: 30132},
																																	val:        "\t",
																																	ignoreCase: false,
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 146, col: 89, offset: 5966},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
													},
												},
											},
											&zeroOrMoreExpr{
												pos: position{line: 120, col: 98, offset: 5095},
												expr: &choiceExpr{
													pos: position{line: 713, col: 7, offset: 30126},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 713, col: 7, offset: 30126},
															val:        " ",
															ignoreCase: false,
														},
														&actionExpr{
															pos: position{line: 713, col: 13, offset: 30132},
															run: (*parser).callonSection3Title274,
															expr: &litMatcher{
																pos:        position{line: 713, col: 13, offset: 30132},
																val:        "\t",
																ignoreCase: false,
															},
														},
													},
												},
											},
											&choiceExpr{
												pos: position{line: 721, col: 8, offset: 30228},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 717, col: 12, offset: 30188},
														val:        "\r\n",
														ignoreCase: false,
													},
													&charClassMatcher{
														pos:        position{line: 717, col: 21, offset: 30197},
														val:        "[\\r\\n]",
														chars:      []rune{'\r', '\n'},
														ignoreCase: false,
														inverted:   false,
													},
													&notExpr{
														pos: position{line: 719, col: 8, offset: 30217},
														expr: &anyMatcher{
															line: 719, col: 9, offset: 30218,
														},
													},
												},
											},
										},
									},
								},
							},
						},
						&litMatcher{
							pos:        position{line: 251, col: 24, offset: 9897},
							val:        "====",
							ignoreCase: false,
						},
						&oneOrMoreExpr{
							pos: position{line: 251, col: 31, offset: 9904},
							expr: &choiceExpr{
								pos: position{line: 713, col: 7, offset: 30126},
								alternatives: []interface{}{
									&litMatcher{
										pos:        position{line: 713, col: 7, offset: 30126},
										val:        " ",
										ignoreCase: false,
									},
									&actionExpr{
										pos: position{line: 713, col: 13, offset: 30132},
										run: (*parser).callonSection3Title285,
										expr: &litMatcher{
											pos:        position{line: 713, col: 13, offset: 30132},
											val:        "\t",
											ignoreCase: false,
										},
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 253, col: 69, offset: 9978},
							label: "content",
							expr: &ruleRefExpr{
								pos:  position{line: 253, col: 78, offset: 9987},
								name: "TitleElements",
							},
						},
						&zeroOrMoreExpr{
							pos: position{line: 253, col: 93, offset: 10002},
							expr: &choiceExpr{
								pos: position{line: 713, col: 7, offset: 30126},
								alternatives: []interface{}{
									&litMatcher{
										pos:        position{line: 713, col: 7, offset: 30126},
										val:        " ",
										ignoreCase: false,
									},
									&actionExpr{
										pos: position{line: 713, col: 13, offset: 30132},
										run: (*parser).callonSection3Title292,
										expr: &litMatcher{
											pos:        position{line: 713, col: 13, offset: 30132},
											val:        "\t",
											ignoreCase: false,
										},
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 253, col: 97, offset: 10006},
							label: "id",
							expr: &zeroOrOneExpr{
								pos: position{line: 253, col: 100, offset: 10009},
								expr: &actionExpr{
									pos: position{line: 130, col: 20, offset: 5333},
									run: (*parser).callonSection3Title296,
									expr: &seqExpr{
										pos: position{line: 130, col: 20, offset: 5333},
										exprs: []interface{}{
											&litMatcher{
												pos:        position{line: 130, col: 20, offset: 5333},
												val:        "[[",
												ignoreCase: false,
											},
											&labeledExpr{
												pos:   position{line: 130, col: 25, offset: 5338},
												label: "id",
												expr: &actionExpr{
													pos: position{line: 701, col: 7, offset: 29885},
													run: (*parser).callonSection3Title300,
													expr: &oneOrMoreExpr{
														pos: position{line: 701, col: 7, offset: 29885},
														expr: &seqExpr{
															pos: position{line: 701, col: 8, offset: 29886},
															exprs: []interface{}{
																&notExpr{
																	pos: position{line: 701, col: 8, offset: 29886},
																	expr: &choiceExpr{
																		pos: position{line: 717, col: 12, offset: 30188},
																		alternatives: []interface{}{
																			&litMatcher{
																				pos:        position{line: 717, col: 12, offset: 30188},
																				val:        "\r\n",
																				ignoreCase: false,
																			},
																			&charClassMatcher{
																				pos:        position{line: 717, col: 21, offset: 30197},
																				val:        "[\\r\\n]",
																				chars:      []rune{'\r', '\n'},
																				ignoreCase: false,
																				inverted:   false,
																			},
																		},
																	},
																},
																&notExpr{
																	pos: position{line: 701, col: 17, offset: 29895},
																	expr: &choiceExpr{
																		pos: position{line: 713, col: 7, offset: 30126},
																		alternatives: []interface{}{
																			&litMatcher{
																				pos:        position{line: 713, col: 7, offset: 30126},
																				val:        " ",
																				ignoreCase: false,
																			},
																			&actionExpr{
																				pos: position{line: 713, col: 13, offset: 30132},
																				run: (*parser).callonSection3Title310,
																				expr: &litMatcher{
																					pos:        position{line: 713, col: 13, offset: 30132},
																					val:        "\t",
																					ignoreCase: false,
																				},
																			},
																		},
																	},
																},
																&notExpr{
																	pos: position{line: 701, col: 21, offset: 29899},
																	expr: &litMatcher{
																		pos:        position{line: 701, col: 22, offset: 29900},
																		val:        "[",
																		ignoreCase: false,
																	},
																},
																&notExpr{
																	pos: position{line: 701, col: 26, offset: 29904},
																	expr: &litMatcher{
																		pos:        position{line: 701, col: 27, offset: 29905},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
																&notExpr{
																	pos: position{line: 701, col: 31, offset: 29909},
																	expr: &litMatcher{
																		pos:        position{line: 701, col: 32, offset: 29910},
																		val:        "<<",
																		ignoreCase: false,
																	},
																},
																&notExpr{
																	pos: position{line: 701, col: 37, offset: 29915},
																	expr: &litMatcher{
																		pos:        position{line: 701, col: 38, offset: 29916},
																		val:        ">>",
																		ignoreCase: false,
																	},
																},
																&anyMatcher{
																	line: 701, col: 42, offset: 29920,
																},
															},
														},
													},
												},
											},
											&litMatcher{
												pos:        position{line: 130, col: 33, offset: 5346},
												val:        "]]",
												ignoreCase: false,
											},
										},
									},
								},
							},
						},
						&choiceExpr{
							pos: position{line: 721, col: 8, offset: 30228},
							alternatives: []interface{}{
								&litMatcher{
									pos:        position{line: 717, col: 12, offset: 30188},
									val:        "\r\n",
									ignoreCase: false,
								},
								&charClassMatcher{
									pos:        position{line: 717, col: 21, offset: 30197},
									val:        "[\\r\\n]",
									chars:      []rune{'\r', '\n'},
									ignoreCase: false,
									inverted:   false,
								},
								&notExpr{
									pos: position{line: 719, col: 8, offset: 30217},
									expr: &anyMatcher{
										line: 719, col: 9, offset: 30218,
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "Section3Block",
			pos:  position{line: 257, col: 1, offset: 10142},
			expr: &actionExpr{
				pos: position{line: 257, col: 18, offset: 10159},
				run: (*parser).callonSection3Block1,
				expr: &seqExpr{
					pos: position{line: 257, col: 18, offset: 10159},
					exprs: []interface{}{
						&notExpr{
							pos: position{line: 257, col: 18, offset: 10159},
							expr: &ruleRefExpr{
								pos:  position{line: 257, col: 19, offset: 10160},
								name: "Section1Title",
							},
						},
						&notExpr{
							pos: position{line: 257, col: 33, offset: 10174},
							expr: &ruleRefExpr{
								pos:  position{line: 257, col: 34, offset: 10175},
								name: "Section2Title",
							},
						},
						&notExpr{
							pos: position{line: 257, col: 48, offset: 10189},
							expr: &ruleRefExpr{
								pos:  position{line: 257, col: 49, offset: 10190},
								name: "Section3Title",
							},
						},
						&labeledExpr{
							pos:   position{line: 257, col: 64, offset: 10205},
							label: "content",
							expr: &zeroOrMoreExpr{
								pos: position{line: 257, col: 72, offset: 10213},
								expr: &choiceExpr{
									pos: position{line: 257, col: 73, offset: 10214},
									alternatives: []interface{}{
										&ruleRefExpr{
											pos:  position{line: 257, col: 73, offset: 10214},
											name: "Section4",
										},
										&ruleRefExpr{
											pos:  position{line: 257, col: 84, offset: 10225},
											name: "Section5",
										},
										&ruleRefExpr{
											pos:  position{line: 257, col: 95, offset: 10236},
											name: "DocumentBlock",
										},
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "Section4",
			pos:  position{line: 261, col: 1, offset: 10281},
			expr: &actionExpr{
				pos: position{line: 261, col: 13, offset: 10293},
				run: (*parser).callonSection41,
				expr: &seqExpr{
					pos: position{line: 261, col: 13, offset: 10293},
					exprs: []interface{}{
						&notExpr{
							pos: position{line: 261, col: 13, offset: 10293},
							expr: &notExpr{
								pos: position{line: 719, col: 8, offset: 30217},
								expr: &anyMatcher{
									line: 719, col: 9, offset: 30218,
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 262, col: 5, offset: 10364},
							label: "section",
							expr: &actionExpr{
								pos: position{line: 262, col: 14, offset: 10373},
								run: (*parser).callonSection47,
								expr: &seqExpr{
									pos: position{line: 262, col: 14, offset: 10373},
									exprs: []interface{}{
										&labeledExpr{
											pos:   position{line: 262, col: 14, offset: 10373},
											label: "header",
											expr: &ruleRefExpr{
												pos:  position{line: 262, col: 22, offset: 10381},
												name: "Section4Title",
											},
										},
										&labeledExpr{
											pos:   position{line: 262, col: 37, offset: 10396},
											label: "elements",
											expr: &zeroOrOneExpr{
												pos: position{line: 262, col: 47, offset: 10406},
												expr: &ruleRefExpr{
													pos:  position{line: 262, col: 47, offset: 10406},
													name: "Section4Block",
												},
											},
										},
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "Section4Title",
			pos:  position{line: 270, col: 1, offset: 10595},
			expr: &actionExpr{
				pos: position{line: 270, col: 18, offset: 10612},
				run: (*parser).callonSection4Title1,
				expr: &seqExpr{
					pos: position{line: 270, col: 18, offset: 10612},
					exprs: []interface{}{
						&labeledExpr{
							pos:   position{line: 270, col: 18, offset: 10612},
							label: "attributes",
							expr: &zeroOrMoreExpr{
								pos: position{line: 270, col: 29, offset: 10623},
								expr: &actionExpr{
									pos: position{line: 120, col: 21, offset: 5018},
									run: (*parser).callonSection4Title5,
									expr: &seqExpr{
										pos: position{line: 120, col: 21, offset: 5018},
										exprs: []interface{}{
											&labeledExpr{
												pos:   position{line: 120, col: 21, offset: 5018},
												label: "attr",
												expr: &choiceExpr{
													pos: position{line: 120, col: 27, offset: 5024},
													alternatives: []interface{}{
														&actionExpr{
															pos: position{line: 124, col: 14, offset: 5203},
															run: (*parser).callonSection4Title9,
															expr: &labeledExpr{
																pos:   position{line: 124, col: 14, offset: 5203},
																label: "id",
																expr: &actionExpr{
																	pos: position{line: 130, col: 20, offset: 5333},
																	run: (*parser).callonSection4Title11,
																	expr: &seqExpr{
																		pos: position{line: 130, col: 20, offset: 5333},
																		exprs: []interface{}{
																			&litMatcher{
																				pos:        position{line: 130, col: 20, offset: 5333},
																				val:        "[[",
																				ignoreCase: false,
																			},
																			&labeledExpr{
																				pos:   position{line: 130, col: 25, offset: 5338},
																				label: "id",
																				expr: &actionExpr{
																					pos: position{line: 701, col: 7, offset: 29885},
																					run: (*parser).callonSection4Title15,
																					expr: &oneOrMoreExpr{
																						pos: position{line: 701, col: 7, offset: 29885},
																						expr: &seqExpr{
																							pos: position{line: 701, col: 8, offset: 29886},
																							exprs: []interface{}{
																								&notExpr{
																									pos: position{line: 701, col: 8, offset: 29886},
																									expr: &choiceExpr{
																										pos: position{line: 717, col: 12, offset: 30188},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 717, col: 12, offset: 30188},
																												val:        "\r\n",
																												ignoreCase: false,
																											},
																											&charClassMatcher{
																												pos:        position{line: 717, col: 21, offset: 30197},
																												val:        "[\\r\\n]",
																												chars:      []rune{'\r', '\n'},
																												ignoreCase: false,
																												inverted:   false,
																											},
																										},
																									},
																								},
																								&notExpr{
																									pos: position{line: 701, col: 17, offset: 29895},
																									expr: &choiceExpr{
																										pos: position{line: 713, col: 7, offset: 30126},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 713, col: 7, offset: 30126},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 713, col: 13, offset: 30132},
																												run: (*parser).callonSection4Title25,
																												expr: &litMatcher{
																													pos:        position{line: 713, col: 13, offset: 30132},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																								&notExpr{
																									pos: position{line: 701, col: 21, offset: 29899},
																									expr: &litMatcher{
																										pos:        position{line: 701, col: 22, offset: 29900},
																										val:        "[",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 701, col: 26, offset: 29904},
																									expr: &litMatcher{
																										pos:        position{line: 701, col: 27, offset: 29905},
																										val:        "]",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 701, col: 31, offset: 29909},
																									expr: &litMatcher{
																										pos:        position{line: 701, col: 32, offset: 29910},
																										val:        "<<",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 701, col: 37, offset: 29915},
																									expr: &litMatcher{
																										pos:        position{line: 701, col: 38, offset: 29916},
																										val:        ">>",
																										ignoreCase: false,
																									},
																								},
																								&anyMatcher{
																									line: 701, col: 42, offset: 29920,
																								},
																							},
																						},
																					},
																				},
																			},
																			&litMatcher{
																				pos:        position{line: 130, col: 33, offset: 5346},
																				val:        "]]",
																				ignoreCase: false,
																			},
																		},
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 126, col: 5, offset: 5249},
															run: (*parser).callonSection4Title37,
															expr: &seqExpr{
																pos: position{line: 126, col: 5, offset: 5249},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 126, col: 5, offset: 5249},
																		val:        "[#",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 126, col: 10, offset: 5254},
																		label: "id",
																		expr: &actionExpr{
																			pos: position{line: 701, col: 7, offset: 29885},
																			run: (*parser).callonSection4Title41,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 701, col: 7, offset: 29885},
																				expr: &seqExpr{
																					pos: position{line: 701, col: 8, offset: 29886},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 701, col: 8, offset: 29886},
																							expr: &choiceExpr{
																								pos: position{line: 717, col: 12, offset: 30188},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 717, col: 12, offset: 30188},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 717, col: 21, offset: 30197},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 701, col: 17, offset: 29895},
																							expr: &choiceExpr{
																								pos: position{line: 713, col: 7, offset: 30126},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 713, col: 7, offset: 30126},
																										val:        " ",
																										ignoreCase: false,
																									},
																									&actionExpr{
																										pos: position{line: 713, col: 13, offset: 30132},
																										run: (*parser).callonSection4Title51,
																										expr: &litMatcher{
																											pos:        position{line: 713, col: 13, offset: 30132},
																											val:        "\t",
																											ignoreCase: false,
																										},
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 701, col: 21, offset: 29899},
																							expr: &litMatcher{
																								pos:        position{line: 701, col: 22, offset: 29900},
																								val:        "[",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 701, col: 26, offset: 29904},
																							expr: &litMatcher{
																								pos:        position{line: 701, col: 27, offset: 29905},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 701, col: 31, offset: 29909},
																							expr: &litMatcher{
																								pos:        position{line: 701, col: 32, offset: 29910},
																								val:        "<<",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 701, col: 37, offset: 29915},
																							expr: &litMatcher{
																								pos:        position{line: 701, col: 38, offset: 29916},
																								val:        ">>",
																								ignoreCase: false,
																							},
																						},
																						&anyMatcher{
																							line: 701, col: 42, offset: 29920,
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 126, col: 18, offset: 5262},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 136, col: 17, offset: 5557},
															run: (*parser).callonSection4Title63,
															expr: &seqExpr{
																pos: position{line: 136, col: 17, offset: 5557},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 136, col: 17, offset: 5557},
																		val:        ".",
																		ignoreCase: false,
																	},
																	&notExpr{
																		pos: position{line: 136, col: 21, offset: 5561},
																		expr: &litMatcher{
																			pos:        position{line: 136, col: 22, offset: 5562},
																			val:        ".",
																			ignoreCase: false,
																		},
																	},
																	&notExpr{
																		pos: position{line: 136, col: 26, offset: 5566},
																		expr: &choiceExpr{
																			pos: position{line: 713, col: 7, offset: 30126},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 713, col: 7, offset: 30126},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 713, col: 13, offset: 30132},
																					run: (*parser).callonSection4Title71,
																					expr: &litMatcher{
																						pos:        position{line: 713, col: 13, offset: 30132},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 136, col: 30, offset: 5570},
																		label: "title",
																		expr: &oneOrMoreExpr{
																			pos: position{line: 136, col: 36, offset: 5576},
																			expr: &seqExpr{
																				pos: position{line: 136, col: 37, offset: 5577},
																				exprs: []interface{}{
																					&notExpr{
																						pos: position{line: 136, col: 37, offset: 5577},
																						expr: &choiceExpr{
																							pos: position{line: 717, col: 12, offset: 30188},
																							alternatives: []interface{}{
																								&litMatcher{
																									pos:        position{line: 717, col: 12, offset: 30188},
																									val:        "\r\n",
																									ignoreCase: false,
																								},
																								&charClassMatcher{
																									pos:        position{line: 717, col: 21, offset: 30197},
																									val:        "[\\r\\n]",
																									chars:      []rune{'\r', '\n'},
																									ignoreCase: false,
																									inverted:   false,
																								},
																							},
																						},
																					},
																					&anyMatcher{
																						line: 136, col: 46, offset: 5586,
																					},
																				},
																			},
																		},
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 141, col: 30, offset: 5760},
															run: (*parser).callonSection4Title81,
															expr: &seqExpr{
																pos: position{line: 141, col: 30, offset: 5760},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 141, col: 30, offset: 5760},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 141, col: 34, offset: 5764},
																		label: "k",
																		expr: &choiceExpr{
																			pos: position{line: 442, col: 19, offset: 17830},
																			alternatives: []interface{}{
																				&actionExpr{
																					pos: position{line: 442, col: 19, offset: 17830},
																					run: (*parser).callonSection4Title86,
																					expr: &litMatcher{
																						pos:        position{line: 442, col: 19, offset: 17830},
																						val:        "TIP",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 444, col: 5, offset: 17868},
																					run: (*parser).callonSection4Title88,
																					expr: &litMatcher{
																						pos:        position{line: 444, col: 5, offset: 17868},
																						val:        "NOTE",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 446, col: 5, offset: 17908},
																					run: (*parser).callonSection4Title90,
																					expr: &litMatcher{
																						pos:        position{line: 446, col: 5, offset: 17908},
																						val:        "IMPORTANT",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 448, col: 5, offset: 17958},
																					run: (*parser).callonSection4Title92,
																					expr: &litMatcher{
																						pos:        position{line: 448, col: 5, offset: 17958},
																						val:        "WARNING",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 450, col: 5, offset: 18004},
																					run: (*parser).callonSection4Title94,
																					expr: &litMatcher{
																						pos:        position{line: 450, col: 5, offset: 18004},
																						val:        "CAUTION",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 141, col: 53, offset: 5783},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 146, col: 19, offset: 5896},
															run: (*parser).callonSection4Title97,
															expr: &seqExpr{
																pos: position{line: 146, col: 19, offset: 5896},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 146, col: 19, offset: 5896},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 146, col: 23, offset: 5900},
																		label: "attribute",
																		expr: &choiceExpr{
																			pos: position{line: 150, col: 21, offset: 6095},
																			alternatives: []interface{}{
																				&actionExpr{
																					pos: position{line: 150, col: 21, offset: 6095},
																					run: (*parser).callonSection4Title102,
																					expr: &seqExpr{
																						pos: position{line: 150, col: 21, offset: 6095},
																						exprs: []interface{}{
																							&labeledExpr{
																								pos:   position{line: 150, col: 21, offset: 6095},
																								label: "key",
																								expr: &actionExpr{
																									pos: position{line: 162, col: 17, offset: 6664},
																									run: (*parser).callonSection4Title105,
																									expr: &seqExpr{
																										pos: position{line: 162, col: 17, offset: 6664},
																										exprs: []interface{}{
																											&labeledExpr{
																												pos:   position{line: 162, col: 17, offset: 6664},
																												label: "key",
																												expr: &oneOrMoreExpr{
																													pos: position{line: 162, col: 22, offset: 6669},
																													expr: &seqExpr{
																														pos: position{line: 162, col: 23, offset: 6670},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 162, col: 23, offset: 6670},
																																expr: &choiceExpr{
																																	pos: position{line: 713, col: 7, offset: 30126},
																																	alternatives: []interface{}{
																																		&litMatcher{
																																			pos:        position{line: 713, col: 7, offset: 30126},
																																			val:        " ",
																																			ignoreCase: false,
																																		},
																																		&actionExpr{
																																			pos: position{line: 713, col: 13, offset: 30132},
																																			run: (*parser).callonSection4Title113,
																																			expr: &litMatcher{
																																				pos:        position{line: 713, col: 13, offset: 30132},
																																				val:        "\t",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																},
																															},
																															&notExpr{
																																pos: position{line: 162, col: 27, offset: 6674},
																																expr: &litMatcher{
																																	pos:        position{line: 162, col: 28, offset: 6675},
																																	val:        "=",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 162, col: 32, offset: 6679},
																																expr: &litMatcher{
																																	pos:        position{line: 162, col: 33, offset: 6680},
																																	val:        ",",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 162, col: 37, offset: 6684},
																																expr: &litMatcher{
																																	pos:        position{line: 162, col: 38, offset: 6685},
																																	val:        "]",
																																	ignoreCase: false,
																																},
																															},
																															&anyMatcher{
																																line: 162, col: 42, offset: 6689,
																															},
																														},
																													},
																												},
																											},
																											&zeroOrMoreExpr{
																												pos: position{line: 162, col: 46, offset: 6693},
																												expr: &choiceExpr{
																													pos: position{line: 713, col: 7, offset: 30126},
																													alternatives: []interface{}{
																														&litMatcher{
																															pos:        position{line: 713, col: 7, offset: 30126},
																															val:        " ",
																															ignoreCase: false,
																														},
																														&actionExpr{
																															pos: position{line: 713, col: 13, offset: 30132},
																															run: (*parser).callonSection4Title125,
																															expr: &litMatcher{
																																pos:        position{line: 713, col: 13, offset: 30132},
																																val:        "\t",
																																ignoreCase: false,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&litMatcher{
																								pos:        position{line: 150, col: 40, offset: 6114},
																								val:        "=",
																								ignoreCase: false,
																							},
																							&labeledExpr{
																								pos:   position{line: 150, col: 44, offset: 6118},
																								label: "value",
																								expr: &actionExpr{
																									pos: position{line: 167, col: 19, offset: 6793},
																									run: (*parser).callonSection4Title129,
																									expr: &seqExpr{
																										pos: position{line: 167, col: 19, offset: 6793},
																										exprs: []interface{}{
																											&zeroOrMoreExpr{
																												pos: position{line: 167, col: 19, offset: 6793},
																												expr: &choiceExpr{
																													pos: position{line: 713, col: 7, offset: 30126},
																													alternatives: []interface{}{
																														&litMatcher{
																															pos:        position{line: 713, col: 7, offset: 30126},
																															val:        " ",
																															ignoreCase: false,
																														},
																														&actionExpr{
																															pos: position{line: 713, col: 13, offset: 30132},
																															run: (*parser).callonSection4Title134,
																															expr: &litMatcher{
																																pos:        position{line: 713, col: 13, offset: 30132},
																																val:        "\t",
																																ignoreCase: false,
																															},
																														},
																													},
																												},
																											},
																											&labeledExpr{
																												pos:   position{line: 167, col: 23, offset: 6797},
																												label: "value",
																												expr: &zeroOrMoreExpr{
																													pos: position{line: 167, col: 29, offset: 6803},
																													expr: &seqExpr{
																														pos: position{line: 167, col: 30, offset: 6804},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 167, col: 30, offset: 6804},
																																expr: &choiceExpr{
																																	pos: position{line: 713, col: 7, offset: 30126},
																																	alternatives: []interface{}{
																																		&litMatcher{
																																			pos:        position{line: 713, col: 7, offset: 30126},
																																			val:        " ",
																																			ignoreCase: false,
																																		},
																																		&actionExpr{
																																			pos: position{line: 713, col: 13, offset: 30132},
																																			run: (*parser).callonSection4Title142,
																																			expr: &litMatcher{
																																				pos:        position{line: 713, col: 13, offset: 30132},
																																				val:        "\t",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																},
																															},
																															&notExpr{
																																pos: position{line: 167, col: 34, offset: 6808},
																																expr: &litMatcher{
																																	pos:        position{line: 167, col: 35, offset: 6809},
																																	val:        "=",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 167, col: 39, offset: 6813},
																																expr: &litMatcher{
																																	pos:        position{line: 167, col: 40, offset: 6814},
																																	val:        "]",
																																	ignoreCase: false,
																																},
																															},
																															&anyMatcher{
																																line: 167, col: 44, offset: 6818,
																															},
																														},
																													},
																												},
																											},
																											&zeroOrMoreExpr{
																												pos: position{line: 167, col: 48, offset: 6822},
																												expr: &choiceExpr{
																													pos: position{line: 713, col: 7, offset: 30126},
																													alternatives: []interface{}{
																														&litMatcher{
																															pos:        position{line: 713, col: 7, offset: 30126},
																															val:        " ",
																															ignoreCase: false,
																														},
																														&actionExpr{
																															pos: position{line: 713, col: 13, offset: 30132},
																															run: (*parser).callonSection4Title152,
																															expr: &litMatcher{
																																pos:        position{line: 713, col: 13, offset: 30132},
																																val:        "\t",
																																ignoreCase: false,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																				&actionExpr{
																					pos: position{line: 152, col: 5, offset: 6244},
																					run: (*parser).callonSection4Title154,
																					expr: &labeledExpr{
																						pos:   position{line: 152, col: 5, offset: 6244},
																						label: "key",
																						expr: &actionExpr{
																							pos: position{line: 162, col: 17, offset: 6664},
																							run: (*parser).callonSection4Title156,
																							expr: &seqExpr{
																								pos: position{line: 162, col: 17, offset: 6664},
																								exprs: []interface{}{
																									&labeledExpr{
																										pos:   position{line: 162, col: 17, offset: 6664},
																										label: "key",
																										expr: &oneOrMoreExpr{
																											pos: position{line: 162, col: 22, offset: 6669},
																											expr: &seqExpr{
																												pos: position{line: 162, col: 23, offset: 6670},
																												exprs: []interface{}{
																													&notExpr{
																														pos: position{line: 162, col: 23, offset: 6670},
																														expr: &choiceExpr{
																															pos: position{line: 713, col: 7, offset: 30126},
																															alternatives: []interface{}{
																																&litMatcher{
																																	pos:        position{line: 713, col: 7, offset: 30126},
																																	val:        " ",
																																	ignoreCase: false,
																																},
																																&actionExpr{
																																	pos: position{line: 713, col: 13, offset: 30132},
																																	run: (*parser).callonSection4Title164,
																																	expr: &litMatcher{
																																		pos:        position{line: 713, col: 13, offset: 30132},
																																		val:        "\t",
																																		ignoreCase: false,
																																	},
																																},
																															},
																														},
																													},
																													&notExpr{
																														pos: position{line: 162, col: 27, offset: 6674},
																														expr: &litMatcher{
																															pos:        position{line: 162, col: 28, offset: 6675},
																															val:        "=",
																															ignoreCase: false,
																														},
																													},
																													&notExpr{
																														pos: position{line: 162, col: 32, offset: 6679},
																														expr: &litMatcher{
																															pos:        position{line: 162, col: 33, offset: 6680},
																															val:        ",",
																															ignoreCase: false,
																														},
																													},
																													&notExpr{
																														pos: position{line: 162, col: 37, offset: 6684},
																														expr: &litMatcher{
																															pos:        position{line: 162, col: 38, offset: 6685},
																															val:        "]",
																															ignoreCase: false,
																														},
																													},
																													&anyMatcher{
																														line: 162, col: 42, offset: 6689,
																													},
																												},
																											},
																										},
																									},
																									&zeroOrMoreExpr{
																										pos: position{line: 162, col: 46, offset: 6693},
																										expr: &choiceExpr{
																											pos: position{line: 713, col: 7, offset: 30126},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 713, col: 7, offset: 30126},
																													val:        " ",
																													ignoreCase: false,
																												},
																												&actionExpr{
																													pos: position{line: 713, col: 13, offset: 30132},
																													run: (*parser).callonSection4Title176,
																													expr: &litMatcher{
																														pos:        position{line: 713, col: 13, offset: 30132},
																														val:        "\t",
																														ignoreCase: false,
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 146, col: 52, offset: 5929},
																		label: "attributes",
																		expr: &zeroOrMoreExpr{
																			pos: position{line: 146, col: 63, offset: 5940},
																			expr: &choiceExpr{
																				pos: position{line: 156, col: 26, offset: 6376},
																				alternatives: []interface{}{
																					&actionExpr{
																						pos: position{line: 156, col: 26, offset: 6376},
																						run: (*parser).callonSection4Title181,
																						expr: &seqExpr{
																							pos: position{line: 156, col: 26, offset: 6376},
																							exprs: []interface{}{
																								&litMatcher{
																									pos:        position{line: 156, col: 26, offset: 6376},
																									val:        ",",
																									ignoreCase: false,
																								},
																								&zeroOrMoreExpr{
																									pos: position{line: 156, col: 30, offset: 6380},
																									expr: &choiceExpr{
																										pos: position{line: 713, col: 7, offset: 30126},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 713, col: 7, offset: 30126},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 713, col: 13, offset: 30132},
																												run: (*parser).callonSection4Title187,
																												expr: &litMatcher{
																													pos:        position{line: 713, col: 13, offset: 30132},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																								&labeledExpr{
																									pos:   position{line: 156, col: 34, offset: 6384},
																									label: "key",
																									expr: &actionExpr{
																										pos: position{line: 162, col: 17, offset: 6664},
																										run: (*parser).callonSection4Title190,
																										expr: &seqExpr{
																											pos: position{line: 162, col: 17, offset: 6664},
																											exprs: []interface{}{
																												&labeledExpr{
																													pos:   position{line: 162, col: 17, offset: 6664},
																													label: "key",
																													expr: &oneOrMoreExpr{
																														pos: position{line: 162, col: 22, offset: 6669},
																														expr: &seqExpr{
																															pos: position{line: 162, col: 23, offset: 6670},
																															exprs: []interface{}{
																																&notExpr{
																																	pos: position{line: 162, col: 23, offset: 6670},
																																	expr: &choiceExpr{
																																		pos: position{line: 713, col: 7, offset: 30126},
																																		alternatives: []interface{}{
																																			&litMatcher{
																																				pos:        position{line: 713, col: 7, offset: 30126},
																																				val:        " ",
																																				ignoreCase: false,
																																			},
																																			&actionExpr{
																																				pos: position{line: 713, col: 13, offset: 30132},
																																				run: (*parser).callonSection4Title198,
																																				expr: &litMatcher{
																																					pos:        position{line: 713, col: 13, offset: 30132},
																																					val:        "\t",
																																					ignoreCase: false,
																																				},
																																			},
																																		},
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 162, col: 27, offset: 6674},
																																	expr: &litMatcher{
																																		pos:        position{line: 162, col: 28, offset: 6675},
																																		val:        "=",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 162, col: 32, offset: 6679},
																																	expr: &litMatcher{
																																		pos:        position{line: 162, col: 33, offset: 6680},
																																		val:        ",",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 162, col: 37, offset: 6684},
																																	expr: &litMatcher{
																																		pos:        position{line: 162, col: 38, offset: 6685},
																																		val:        "]",
																																		ignoreCase: false,
																																	},
																																},
																																&anyMatcher{
																																	line: 162, col: 42, offset: 6689,
																																},
																															},
																														},
																													},
																												},
																												&zeroOrMoreExpr{
																													pos: position{line: 162, col: 46, offset: 6693},
																													expr: &choiceExpr{
																														pos: position{line: 713, col: 7, offset: 30126},
																														alternatives: []interface{}{
																															&litMatcher{
																																pos:        position{line: 713, col: 7, offset: 30126},
																																val:        " ",
																																ignoreCase: false,
																															},
																															&actionExpr{
																																pos: position{line: 713, col: 13, offset: 30132},
																																run: (*parser).callonSection4Title210,
																																expr: &litMatcher{
																																	pos:        position{line: 713, col: 13, offset: 30132},
																																	val:        "\t",
																																	ignoreCase: false,
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&litMatcher{
																									pos:        position{line: 156, col: 53, offset: 6403},
																									val:        "=",
																									ignoreCase: false,
																								},
																								&labeledExpr{
																									pos:   position{line: 156, col: 57, offset: 6407},
																									label: "value",
																									expr: &actionExpr{
																										pos: position{line: 167, col: 19, offset: 6793},
																										run: (*parser).callonSection4Title214,
																										expr: &seqExpr{
																											pos: position{line: 167, col: 19, offset: 6793},
																											exprs: []interface{}{
																												&zeroOrMoreExpr{
																													pos: position{line: 167, col: 19, offset: 6793},
																													expr: &choiceExpr{
																														pos: position{line: 713, col: 7, offset: 30126},
																														alternatives: []interface{}{
																															&litMatcher{
																																pos:        position{line: 713, col: 7, offset: 30126},
																																val:        " ",
																																ignoreCase: false,
																															},
																															&actionExpr{
																																pos: position{line: 713, col: 13, offset: 30132},
																																run: (*parser).callonSection4Title219,
																																expr: &litMatcher{
																																	pos:        position{line: 713, col: 13, offset: 30132},
																																	val:        "\t",
																																	ignoreCase: false,
																																},
																															},
																														},
																													},
																												},
																												&labeledExpr{
																													pos:   position{line: 167, col: 23, offset: 6797},
																													label: "value",
																													expr: &zeroOrMoreExpr{
																														pos: position{line: 167, col: 29, offset: 6803},
																														expr: &seqExpr{
																															pos: position{line: 167, col: 30, offset: 6804},
																															exprs: []interface{}{
																																&notExpr{
																																	pos: position{line: 167, col: 30, offset: 6804},
																																	expr: &choiceExpr{
																																		pos: position{line: 713, col: 7, offset: 30126},
																																		alternatives: []interface{}{
																																			&litMatcher{
																																				pos:        position{line: 713, col: 7, offset: 30126},
																																				val:        " ",
																																				ignoreCase: false,
																																			},
																																			&actionExpr{
																																				pos: position{line: 713, col: 13, offset: 30132},
																																				run: (*parser).callonSection4Title227,
																																				expr: &litMatcher{
																																					pos:        position{line: 713, col: 13, offset: 30132},
																																					val:        "\t",
																																					ignoreCase: false,
																																				},
																																			},
																																		},
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 167, col: 34, offset: 6808},
																																	expr: &litMatcher{
																																		pos:        position{line: 167, col: 35, offset: 6809},
																																		val:        "=",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 167, col: 39, offset: 6813},
																																	expr: &litMatcher{
																																		pos:        position{line: 167, col: 40, offset: 6814},
																																		val:        "]",
																																		ignoreCase: false,
																																	},
																																},
																																&anyMatcher{
																																	line: 167, col: 44, offset: 6818,
																																},
																															},
																														},
																													},
																												},
																												&zeroOrMoreExpr{
																													pos: position{line: 167, col: 48, offset: 6822},
																													expr: &choiceExpr{
																														pos: position{line: 713, col: 7, offset: 30126},
																														alternatives: []interface{}{
																															&litMatcher{
																																pos:        position{line: 713, col: 7, offset: 30126},
																																val:        " ",
																																ignoreCase: false,
																															},
																															&actionExpr{
																																pos: position{line: 713, col: 13, offset: 30132},
																																run: (*parser).callonSection4Title237,
																																expr: &litMatcher{
																																	pos:        position{line: 713, col: 13, offset: 30132},
																																	val:        "\t",
																																	ignoreCase: false,
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																					&actionExpr{
																						pos: position{line: 158, col: 5, offset: 6533},
																						run: (*parser).callonSection4Title239,
																						expr: &seqExpr{
																							pos: position{line: 158, col: 5, offset: 6533},
																							exprs: []interface{}{
																								&litMatcher{
																									pos:        position{line: 158, col: 5, offset: 6533},
																									val:        ",",
																									ignoreCase: false,
																								},
																								&zeroOrMoreExpr{
																									pos: position{line: 158, col: 9, offset: 6537},
																									expr: &choiceExpr{
																										pos: position{line: 713, col: 7, offset: 30126},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 713, col: 7, offset: 30126},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 713, col: 13, offset: 30132},
																												run: (*parser).callonSection4Title245,
																												expr: &litMatcher{
																													pos:        position{line: 713, col: 13, offset: 30132},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																								&labeledExpr{
																									pos:   position{line: 158, col: 13, offset: 6541},
																									label: "key",
																									expr: &actionExpr{
																										pos: position{line: 162, col: 17, offset: 6664},
																										run: (*parser).callonSection4Title248,
																										expr: &seqExpr{
																											pos: position{line: 162, col: 17, offset: 6664},
																											exprs: []interface{}{
																												&labeledExpr{
																													pos:   position{line: 162, col: 17, offset: 6664},
																													label: "key",
																													expr: &oneOrMoreExpr{
																														pos: position{line: 162, col: 22, offset: 6669},
																														expr: &seqExpr{
																															pos: position{line: 162, col: 23, offset: 6670},
																															exprs: []interface{}{
																																&notExpr{
																																	pos: position{line: 162, col: 23, offset: 6670},
																																	expr: &choiceExpr{
																																		pos: position{line: 713, col: 7, offset: 30126},
																																		alternatives: []interface{}{
																																			&litMatcher{
																																				pos:        position{line: 713, col: 7, offset: 30126},
																																				val:        " ",
																																				ignoreCase: false,
																																			},
																																			&actionExpr{
																																				pos: position{line: 713, col: 13, offset: 30132},
																																				run: (*parser).callonSection4Title256,
																																				expr: &litMatcher{
																																					pos:        position{line: 713, col: 13, offset: 30132},
																																					val:        "\t",
																																					ignoreCase: false,
																																				},
																																			},
																																		},
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 162, col: 27, offset: 6674},
																																	expr: &litMatcher{
																																		pos:        position{line: 162, col: 28, offset: 6675},
																																		val:        "=",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 162, col: 32, offset: 6679},
																																	expr: &litMatcher{
																																		pos:        position{line: 162, col: 33, offset: 6680},
																																		val:        ",",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 162, col: 37, offset: 6684},
																																	expr: &litMatcher{
																																		pos:        position{line: 162, col: 38, offset: 6685},
																																		val:        "]",
																																		ignoreCase: false,
																																	},
																																},
																																&anyMatcher{
																																	line: 162, col: 42, offset: 6689,
																																},
																															},
																														},
																													},
																												},
																												&zeroOrMoreExpr{
																													pos: position{line: 162, col: 46, offset: 6693},
																													expr: &choiceExpr{
																														pos: position{line: 713, col: 7, offset: 30126},
																														alternatives: []interface{}{
																															&litMatcher{
																																pos:        position{line: 713, col: 7, offset: 30126},
																																val:        " ",
																																ignoreCase: false,
																															},
																															&actionExpr{
																																pos: position{line: 713, col: 13, offset: 30132},
																																run: (*parser).callonSection4Title268,
																																expr: &litMatcher{
																																	pos:        position{line: 713, col: 13, offset: 30132},
																																	val:        "\t",
																																	ignoreCase: false,
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 146, col: 89, offset: 5966},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
													},
												},
											},
											&zeroOrMoreExpr{
												pos: position{line: 120, col: 98, offset: 5095},
												expr: &choiceExpr{
													pos: position{line: 713, col: 7, offset: 30126},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 713, col: 7, offset: 30126},
															val:        " ",
															ignoreCase: false,
														},
														&actionExpr{
															pos: position{line: 713, col: 13, offset: 30132},
															run: (*parser).callonSection4Title274,
															expr: &litMatcher{
																pos:        position{line: 713, col: 13, offset: 30132},
																val:        "\t",
																ignoreCase: false,
															},
														},
													},
												},
											},
											&choiceExpr{
												pos: position{line: 721, col: 8, offset: 30228},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 717, col: 12, offset: 30188},
														val:        "\r\n",
														ignoreCase: false,
													},
													&charClassMatcher{
														pos:        position{line: 717, col: 21, offset: 30197},
														val:        "[\\r\\n]",
														chars:      []rune{'\r', '\n'},
														ignoreCase: false,
														inverted:   false,
													},
													&notExpr{
														pos: position{line: 719, col: 8, offset: 30217},
														expr: &anyMatcher{
															line: 719, col: 9, offset: 30218,
														},
													},
												},
											},
										},
									},
								},
							},
						},
						&litMatcher{
							pos:        position{line: 268, col: 24, offset: 10581},
							val:        "=====",
							ignoreCase: false,
						},
						&oneOrMoreExpr{
							pos: position{line: 268, col: 32, offset: 10589},
							expr: &choiceExpr{
								pos: position{line: 713, col: 7, offset: 30126},
								alternatives: []interface{}{
									&litMatcher{
										pos:        position{line: 713, col: 7, offset: 30126},
										val:        " ",
										ignoreCase: false,
									},
									&actionExpr{
										pos: position{line: 713, col: 13, offset: 30132},
										run: (*parser).callonSection4Title285,
										expr: &litMatcher{
											pos:        position{line: 713, col: 13, offset: 30132},
											val:        "\t",
											ignoreCase: false,
										},
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 270, col: 69, offset: 10663},
							label: "content",
							expr: &ruleRefExpr{
								pos:  position{line: 270, col: 78, offset: 10672},
								name: "TitleElements",
							},
						},
						&zeroOrMoreExpr{
							pos: position{line: 270, col: 93, offset: 10687},
							expr: &choiceExpr{
								pos: position{line: 713, col: 7, offset: 30126},
								alternatives: []interface{}{
									&litMatcher{
										pos:        position{line: 713, col: 7, offset: 30126},
										val:        " ",
										ignoreCase: false,
									},
									&actionExpr{
										pos: position{line: 713, col: 13, offset: 30132},
										run: (*parser).callonSection4Title292,
										expr: &litMatcher{
											pos:        position{line: 713, col: 13, offset: 30132},
											val:        "\t",
											ignoreCase: false,
										},
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 270, col: 97, offset: 10691},
							label: "id",
							expr: &zeroOrOneExpr{
								pos: position{line: 270, col: 100, offset: 10694},
								expr: &actionExpr{
									pos: position{line: 130, col: 20, offset: 5333},
									run: (*parser).callonSection4Title296,
									expr: &seqExpr{
										pos: position{line: 130, col: 20, offset: 5333},
										exprs: []interface{}{
											&litMatcher{
												pos:        position{line: 130, col: 20, offset: 5333},
												val:        "[[",
												ignoreCase: false,
											},
											&labeledExpr{
												pos:   position{line: 130, col: 25, offset: 5338},
												label: "id",
												expr: &actionExpr{
													pos: position{line: 701, col: 7, offset: 29885},
													run: (*parser).callonSection4Title300,
													expr: &oneOrMoreExpr{
														pos: position{line: 701, col: 7, offset: 29885},
														expr: &seqExpr{
															pos: position{line: 701, col: 8, offset: 29886},
															exprs: []interface{}{
																&notExpr{
																	pos: position{line: 701, col: 8, offset: 29886},
																	expr: &choiceExpr{
																		pos: position{line: 717, col: 12, offset: 30188},
																		alternatives: []interface{}{
																			&litMatcher{
																				pos:        position{line: 717, col: 12, offset: 30188},
																				val:        "\r\n",
																				ignoreCase: false,
																			},
																			&charClassMatcher{
																				pos:        position{line: 717, col: 21, offset: 30197},
																				val:        "[\\r\\n]",
																				chars:      []rune{'\r', '\n'},
																				ignoreCase: false,
																				inverted:   false,
																			},
																		},
																	},
																},
																&notExpr{
																	pos: position{line: 701, col: 17, offset: 29895},
																	expr: &choiceExpr{
																		pos: position{line: 713, col: 7, offset: 30126},
																		alternatives: []interface{}{
																			&litMatcher{
																				pos:        position{line: 713, col: 7, offset: 30126},
																				val:        " ",
																				ignoreCase: false,
																			},
																			&actionExpr{
																				pos: position{line: 713, col: 13, offset: 30132},
																				run: (*parser).callonSection4Title310,
																				expr: &litMatcher{
																					pos:        position{line: 713, col: 13, offset: 30132},
																					val:        "\t",
																					ignoreCase: false,
																				},
																			},
																		},
																	},
																},
																&notExpr{
																	pos: position{line: 701, col: 21, offset: 29899},
																	expr: &litMatcher{
																		pos:        position{line: 701, col: 22, offset: 29900},
																		val:        "[",
																		ignoreCase: false,
																	},
																},
																&notExpr{
																	pos: position{line: 701, col: 26, offset: 29904},
																	expr: &litMatcher{
																		pos:        position{line: 701, col: 27, offset: 29905},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
																&notExpr{
																	pos: position{line: 701, col: 31, offset: 29909},
																	expr: &litMatcher{
																		pos:        position{line: 701, col: 32, offset: 29910},
																		val:        "<<",
																		ignoreCase: false,
																	},
																},
																&notExpr{
																	pos: position{line: 701, col: 37, offset: 29915},
																	expr: &litMatcher{
																		pos:        position{line: 701, col: 38, offset: 29916},
																		val:        ">>",
																		ignoreCase: false,
																	},
																},
																&anyMatcher{
																	line: 701, col: 42, offset: 29920,
																},
															},
														},
													},
												},
											},
											&litMatcher{
												pos:        position{line: 130, col: 33, offset: 5346},
												val:        "]]",
												ignoreCase: false,
											},
										},
									},
								},
							},
						},
						&choiceExpr{
							pos: position{line: 721, col: 8, offset: 30228},
							alternatives: []interface{}{
								&litMatcher{
									pos:        position{line: 717, col: 12, offset: 30188},
									val:        "\r\n",
									ignoreCase: false,
								},
								&charClassMatcher{
									pos:        position{line: 717, col: 21, offset: 30197},
									val:        "[\\r\\n]",
									chars:      []rune{'\r', '\n'},
									ignoreCase: false,
									inverted:   false,
								},
								&notExpr{
									pos: position{line: 719, col: 8, offset: 30217},
									expr: &anyMatcher{
										line: 719, col: 9, offset: 30218,
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "Section4Block",
			pos:  position{line: 274, col: 1, offset: 10827},
			expr: &actionExpr{
				pos: position{line: 274, col: 18, offset: 10844},
				run: (*parser).callonSection4Block1,
				expr: &seqExpr{
					pos: position{line: 274, col: 18, offset: 10844},
					exprs: []interface{}{
						&notExpr{
							pos: position{line: 274, col: 18, offset: 10844},
							expr: &ruleRefExpr{
								pos:  position{line: 274, col: 19, offset: 10845},
								name: "Section1Title",
							},
						},
						&notExpr{
							pos: position{line: 274, col: 33, offset: 10859},
							expr: &ruleRefExpr{
								pos:  position{line: 274, col: 34, offset: 10860},
								name: "Section2Title",
							},
						},
						&notExpr{
							pos: position{line: 274, col: 48, offset: 10874},
							expr: &ruleRefExpr{
								pos:  position{line: 274, col: 49, offset: 10875},
								name: "Section3Title",
							},
						},
						&notExpr{
							pos: position{line: 274, col: 63, offset: 10889},
							expr: &ruleRefExpr{
								pos:  position{line: 274, col: 64, offset: 10890},
								name: "Section4Title",
							},
						},
						&labeledExpr{
							pos:   position{line: 274, col: 79, offset: 10905},
							label: "content",
							expr: &zeroOrMoreExpr{
								pos: position{line: 274, col: 87, offset: 10913},
								expr: &choiceExpr{
									pos: position{line: 274, col: 88, offset: 10914},
									alternatives: []interface{}{
										&ruleRefExpr{
											pos:  position{line: 274, col: 88, offset: 10914},
											name: "Section5",
										},
										&ruleRefExpr{
											pos:  position{line: 274, col: 99, offset: 10925},
											name: "DocumentBlock",
										},
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "Section5",
			pos:  position{line: 278, col: 1, offset: 10970},
			expr: &actionExpr{
				pos: position{line: 278, col: 13, offset: 10982},
				run: (*parser).callonSection51,
				expr: &seqExpr{
					pos: position{line: 278, col: 13, offset: 10982},
					exprs: []interface{}{
						&notExpr{
							pos: position{line: 278, col: 13, offset: 10982},
							expr: &notExpr{
								pos: position{line: 719, col: 8, offset: 30217},
								expr: &anyMatcher{
									line: 719, col: 9, offset: 30218,
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 279, col: 5, offset: 11053},
							label: "section",
							expr: &actionExpr{
								pos: position{line: 279, col: 14, offset: 11062},
								run: (*parser).callonSection57,
								expr: &seqExpr{
									pos: position{line: 279, col: 14, offset: 11062},
									exprs: []interface{}{
										&labeledExpr{
											pos:   position{line: 279, col: 14, offset: 11062},
											label: "header",
											expr: &ruleRefExpr{
												pos:  position{line: 279, col: 22, offset: 11070},
												name: "Section5Title",
											},
										},
										&labeledExpr{
											pos:   position{line: 279, col: 37, offset: 11085},
											label: "elements",
											expr: &zeroOrOneExpr{
												pos: position{line: 279, col: 47, offset: 11095},
												expr: &ruleRefExpr{
													pos:  position{line: 279, col: 47, offset: 11095},
													name: "Section5Block",
												},
											},
										},
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "Section5Title",
			pos:  position{line: 287, col: 1, offset: 11285},
			expr: &actionExpr{
				pos: position{line: 287, col: 18, offset: 11302},
				run: (*parser).callonSection5Title1,
				expr: &seqExpr{
					pos: position{line: 287, col: 18, offset: 11302},
					exprs: []interface{}{
						&labeledExpr{
							pos:   position{line: 287, col: 18, offset: 11302},
							label: "attributes",
							expr: &zeroOrMoreExpr{
								pos: position{line: 287, col: 29, offset: 11313},
								expr: &actionExpr{
									pos: position{line: 120, col: 21, offset: 5018},
									run: (*parser).callonSection5Title5,
									expr: &seqExpr{
										pos: position{line: 120, col: 21, offset: 5018},
										exprs: []interface{}{
											&labeledExpr{
												pos:   position{line: 120, col: 21, offset: 5018},
												label: "attr",
												expr: &choiceExpr{
													pos: position{line: 120, col: 27, offset: 5024},
													alternatives: []interface{}{
														&actionExpr{
															pos: position{line: 124, col: 14, offset: 5203},
															run: (*parser).callonSection5Title9,
															expr: &labeledExpr{
																pos:   position{line: 124, col: 14, offset: 5203},
																label: "id",
																expr: &actionExpr{
																	pos: position{line: 130, col: 20, offset: 5333},
																	run: (*parser).callonSection5Title11,
																	expr: &seqExpr{
																		pos: position{line: 130, col: 20, offset: 5333},
																		exprs: []interface{}{
																			&litMatcher{
																				pos:        position{line: 130, col: 20, offset: 5333},
																				val:        "[[",
																				ignoreCase: false,
																			},
																			&labeledExpr{
																				pos:   position{line: 130, col: 25, offset: 5338},
																				label: "id",
																				expr: &actionExpr{
																					pos: position{line: 701, col: 7, offset: 29885},
																					run: (*parser).callonSection5Title15,
																					expr: &oneOrMoreExpr{
																						pos: position{line: 701, col: 7, offset: 29885},
																						expr: &seqExpr{
																							pos: position{line: 701, col: 8, offset: 29886},
																							exprs: []interface{}{
																								&notExpr{
																									pos: position{line: 701, col: 8, offset: 29886},
																									expr: &choiceExpr{
																										pos: position{line: 717, col: 12, offset: 30188},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 717, col: 12, offset: 30188},
																												val:        "\r\n",
																												ignoreCase: false,
																											},
																											&charClassMatcher{
																												pos:        position{line: 717, col: 21, offset: 30197},
																												val:        "[\\r\\n]",
																												chars:      []rune{'\r', '\n'},
																												ignoreCase: false,
																												inverted:   false,
																											},
																										},
																									},
																								},
																								&notExpr{
																									pos: position{line: 701, col: 17, offset: 29895},
																									expr: &choiceExpr{
																										pos: position{line: 713, col: 7, offset: 30126},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 713, col: 7, offset: 30126},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 713, col: 13, offset: 30132},
																												run: (*parser).callonSection5Title25,
																												expr: &litMatcher{
																													pos:        position{line: 713, col: 13, offset: 30132},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																								&notExpr{
																									pos: position{line: 701, col: 21, offset: 29899},
																									expr: &litMatcher{
																										pos:        position{line: 701, col: 22, offset: 29900},
																										val:        "[",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 701, col: 26, offset: 29904},
																									expr: &litMatcher{
																										pos:        position{line: 701, col: 27, offset: 29905},
																										val:        "]",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 701, col: 31, offset: 29909},
																									expr: &litMatcher{
																										pos:        position{line: 701, col: 32, offset: 29910},
																										val:        "<<",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 701, col: 37, offset: 29915},
																									expr: &litMatcher{
																										pos:        position{line: 701, col: 38, offset: 29916},
																										val:        ">>",
																										ignoreCase: false,
																									},
																								},
																								&anyMatcher{
																									line: 701, col: 42, offset: 29920,
																								},
																							},
																						},
																					},
																				},
																			},
																			&litMatcher{
																				pos:        position{line: 130, col: 33, offset: 5346},
																				val:        "]]",
																				ignoreCase: false,
																			},
																		},
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 126, col: 5, offset: 5249},
															run: (*parser).callonSection5Title37,
															expr: &seqExpr{
																pos: position{line: 126, col: 5, offset: 5249},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 126, col: 5, offset: 5249},
																		val:        "[#",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 126, col: 10, offset: 5254},
																		label: "id",
																		expr: &actionExpr{
																			pos: position{line: 701, col: 7, offset: 29885},
																			run: (*parser).callonSection5Title41,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 701, col: 7, offset: 29885},
																				expr: &seqExpr{
																					pos: position{line: 701, col: 8, offset: 29886},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 701, col: 8, offset: 29886},
																							expr: &choiceExpr{
																								pos: position{line: 717, col: 12, offset: 30188},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 717, col: 12, offset: 30188},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 717, col: 21, offset: 30197},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 701, col: 17, offset: 29895},
																							expr: &choiceExpr{
																								pos: position{line: 713, col: 7, offset: 30126},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 713, col: 7, offset: 30126},
																										val:        " ",
																										ignoreCase: false,
																									},
																									&actionExpr{
																										pos: position{line: 713, col: 13, offset: 30132},
																										run: (*parser).callonSection5Title51,
																										expr: &litMatcher{
																											pos:        position{line: 713, col: 13, offset: 30132},
																											val:        "\t",
																											ignoreCase: false,
																										},
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 701, col: 21, offset: 29899},
																							expr: &litMatcher{
																								pos:        position{line: 701, col: 22, offset: 29900},
																								val:        "[",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 701, col: 26, offset: 29904},
																							expr: &litMatcher{
																								pos:        position{line: 701, col: 27, offset: 29905},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 701, col: 31, offset: 29909},
																							expr: &litMatcher{
																								pos:        position{line: 701, col: 32, offset: 29910},
																								val:        "<<",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 701, col: 37, offset: 29915},
																							expr: &litMatcher{
																								pos:        position{line: 701, col: 38, offset: 29916},
																								val:        ">>",
																								ignoreCase: false,
																							},
																						},
																						&anyMatcher{
																							line: 701, col: 42, offset: 29920,
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 126, col: 18, offset: 5262},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 136, col: 17, offset: 5557},
															run: (*parser).callonSection5Title63,
															expr: &seqExpr{
																pos: position{line: 136, col: 17, offset: 5557},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 136, col: 17, offset: 5557},
																		val:        ".",
																		ignoreCase: false,
																	},
																	&notExpr{
																		pos: position{line: 136, col: 21, offset: 5561},
																		expr: &litMatcher{
																			pos:        position{line: 136, col: 22, offset: 5562},
																			val:        ".",
																			ignoreCase: false,
																		},
																	},
																	&notExpr{
																		pos: position{line: 136, col: 26, offset: 5566},
																		expr: &choiceExpr{
																			pos: position{line: 713, col: 7, offset: 30126},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 713, col: 7, offset: 30126},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 713, col: 13, offset: 30132},
																					run: (*parser).callonSection5Title71,
																					expr: &litMatcher{
																						pos:        position{line: 713, col: 13, offset: 30132},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 136, col: 30, offset: 5570},
																		label: "title",
																		expr: &oneOrMoreExpr{
																			pos: position{line: 136, col: 36, offset: 5576},
																			expr: &seqExpr{
																				pos: position{line: 136, col: 37, offset: 5577},
																				exprs: []interface{}{
																					&notExpr{
																						pos: position{line: 136, col: 37, offset: 5577},
																						expr: &choiceExpr{
																							pos: position{line: 717, col: 12, offset: 30188},
																							alternatives: []interface{}{
																								&litMatcher{
																									pos:        position{line: 717, col: 12, offset: 30188},
																									val:        "\r\n",
																									ignoreCase: false,
																								},
																								&charClassMatcher{
																									pos:        position{line: 717, col: 21, offset: 30197},
																									val:        "[\\r\\n]",
																									chars:      []rune{'\r', '\n'},
																									ignoreCase: false,
																									inverted:   false,
																								},
																							},
																						},
																					},
																					&anyMatcher{
																						line: 136, col: 46, offset: 5586,
																					},
																				},
																			},
																		},
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 141, col: 30, offset: 5760},
															run: (*parser).callonSection5Title81,
															expr: &seqExpr{
																pos: position{line: 141, col: 30, offset: 5760},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 141, col: 30, offset: 5760},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 141, col: 34, offset: 5764},
																		label: "k",
																		expr: &choiceExpr{
																			pos: position{line: 442, col: 19, offset: 17830},
																			alternatives: []interface{}{
																				&actionExpr{
																					pos: position{line: 442, col: 19, offset: 17830},
																					run: (*parser).callonSection5Title86,
																					expr: &litMatcher{
																						pos:        position{line: 442, col: 19, offset: 17830},
																						val:        "TIP",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 444, col: 5, offset: 17868},
																					run: (*parser).callonSection5Title88,
																					expr: &litMatcher{
																						pos:        position{line: 444, col: 5, offset: 17868},
																						val:        "NOTE",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 446, col: 5, offset: 17908},
																					run: (*parser).callonSection5Title90,
																					expr: &litMatcher{
																						pos:        position{line: 446, col: 5, offset: 17908},
																						val:        "IMPORTANT",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 448, col: 5, offset: 17958},
																					run: (*parser).callonSection5Title92,
																					expr: &litMatcher{
																						pos:        position{line: 448, col: 5, offset: 17958},
																						val:        "WARNING",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 450, col: 5, offset: 18004},
																					run: (*parser).callonSection5Title94,
																					expr: &litMatcher{
																						pos:        position{line: 450, col: 5, offset: 18004},
																						val:        "CAUTION",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 141, col: 53, offset: 5783},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 146, col: 19, offset: 5896},
															run: (*parser).callonSection5Title97,
															expr: &seqExpr{
																pos: position{line: 146, col: 19, offset: 5896},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 146, col: 19, offset: 5896},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 146, col: 23, offset: 5900},
																		label: "attribute",
																		expr: &choiceExpr{
																			pos: position{line: 150, col: 21, offset: 6095},
																			alternatives: []interface{}{
																				&actionExpr{
																					pos: position{line: 150, col: 21, offset: 6095},
																					run: (*parser).callonSection5Title102,
																					expr: &seqExpr{
																						pos: position{line: 150, col: 21, offset: 6095},
																						exprs: []interface{}{
																							&labeledExpr{
																								pos:   position{line: 150, col: 21, offset: 6095},
																								label: "key",
																								expr: &actionExpr{
																									pos: position{line: 162, col: 17, offset: 6664},
																									run: (*parser).callonSection5Title105,
																									expr: &seqExpr{
																										pos: position{line: 162, col: 17, offset: 6664},
																										exprs: []interface{}{
																											&labeledExpr{
																												pos:   position{line: 162, col: 17, offset: 6664},
																												label: "key",
																												expr: &oneOrMoreExpr{
																													pos: position{line: 162, col: 22, offset: 6669},
																													expr: &seqExpr{
																														pos: position{line: 162, col: 23, offset: 6670},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 162, col: 23, offset: 6670},
																																expr: &choiceExpr{
																																	pos: position{line: 713, col: 7, offset: 30126},
																																	alternatives: []interface{}{
																																		&litMatcher{
																																			pos:        position{line: 713, col: 7, offset: 30126},
																																			val:        " ",
																																			ignoreCase: false,
																																		},
																																		&actionExpr{
																																			pos: position{line: 713, col: 13, offset: 30132},
																																			run: (*parser).callonSection5Title113,
																																			expr: &litMatcher{
																																				pos:        position{line: 713, col: 13, offset: 30132},
																																				val:        "\t",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																},
																															},
																															&notExpr{
																																pos: position{line: 162, col: 27, offset: 6674},
																																expr: &litMatcher{
																																	pos:        position{line: 162, col: 28, offset: 6675},
																																	val:        "=",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 162, col: 32, offset: 6679},
																																expr: &litMatcher{
																																	pos:        position{line: 162, col: 33, offset: 6680},
																																	val:        ",",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 162, col: 37, offset: 6684},
																																expr: &litMatcher{
																																	pos:        position{line: 162, col: 38, offset: 6685},
																																	val:        "]",
																																	ignoreCase: false,
																																},
																															},
																															&anyMatcher{
																																line: 162, col: 42, offset: 6689,
																															},
																														},
																													},
																												},
																											},
																											&zeroOrMoreExpr{
																												pos: position{line: 162, col: 46, offset: 6693},
																												expr: &choiceExpr{
																													pos: position{line: 713, col: 7, offset: 30126},
																													alternatives: []interface{}{
																														&litMatcher{
																															pos:        position{line: 713, col: 7, offset: 30126},
																															val:        " ",
																															ignoreCase: false,
																														},
																														&actionExpr{
																															pos: position{line: 713, col: 13, offset: 30132},
																															run: (*parser).callonSection5Title125,
																															expr: &litMatcher{
																																pos:        position{line: 713, col: 13, offset: 30132},
																																val:        "\t",
																																ignoreCase: false,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&litMatcher{
																								pos:        position{line: 150, col: 40, offset: 6114},
																								val:        "=",
																								ignoreCase: false,
																							},
																							&labeledExpr{
																								pos:   position{line: 150, col: 44, offset: 6118},
																								label: "value",
																								expr: &actionExpr{
																									pos: position{line: 167, col: 19, offset: 6793},
																									run: (*parser).callonSection5Title129,
																									expr: &seqExpr{
																										pos: position{line: 167, col: 19, offset: 6793},
																										exprs: []interface{}{
																											&zeroOrMoreExpr{
																												pos: position{line: 167, col: 19, offset: 6793},
																												expr: &choiceExpr{
																													pos: position{line: 713, col: 7, offset: 30126},
																													alternatives: []interface{}{
																														&litMatcher{
																															pos:        position{line: 713, col: 7, offset: 30126},
																															val:        " ",
																															ignoreCase: false,
																														},
																														&actionExpr{
																															pos: position{line: 713, col: 13, offset: 30132},
																															run: (*parser).callonSection5Title134,
																															expr: &litMatcher{
																																pos:        position{line: 713, col: 13, offset: 30132},
																																val:        "\t",
																																ignoreCase: false,
																															},
																														},
																													},
																												},
																											},
																											&labeledExpr{
																												pos:   position{line: 167, col: 23, offset: 6797},
																												label: "value",
																												expr: &zeroOrMoreExpr{
																													pos: position{line: 167, col: 29, offset: 6803},
																													expr: &seqExpr{
																														pos: position{line: 167, col: 30, offset: 6804},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 167, col: 30, offset: 6804},
																																expr: &choiceExpr{
																																	pos: position{line: 713, col: 7, offset: 30126},
																																	alternatives: []interface{}{
																																		&litMatcher{
																																			pos:        position{line: 713, col: 7, offset: 30126},
																																			val:        " ",
																																			ignoreCase: false,
																																		},
																																		&actionExpr{
																																			pos: position{line: 713, col: 13, offset: 30132},
																																			run: (*parser).callonSection5Title142,
																																			expr: &litMatcher{
																																				pos:        position{line: 713, col: 13, offset: 30132},
																																				val:        "\t",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																},
																															},
																															&notExpr{
																																pos: position{line: 167, col: 34, offset: 6808},
																																expr: &litMatcher{
																																	pos:        position{line: 167, col: 35, offset: 6809},
																																	val:        "=",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 167, col: 39, offset: 6813},
																																expr: &litMatcher{
																																	pos:        position{line: 167, col: 40, offset: 6814},
																																	val:        "]",
																																	ignoreCase: false,
																																},
																															},
																															&anyMatcher{
																																line: 167, col: 44, offset: 6818,
																															},
																														},
																													},
																												},
																											},
																											&zeroOrMoreExpr{
																												pos: position{line: 167, col: 48, offset: 6822},
																												expr: &choiceExpr{
																													pos: position{line: 713, col: 7, offset: 30126},
																													alternatives: []interface{}{
																														&litMatcher{
																															pos:        position{line: 713, col: 7, offset: 30126},
																															val:        " ",
																															ignoreCase: false,
																														},
																														&actionExpr{
																															pos: position{line: 713, col: 13, offset: 30132},
																															run: (*parser).callonSection5Title152,
																															expr: &litMatcher{
																																pos:        position{line: 713, col: 13, offset: 30132},
																																val:        "\t",
																																ignoreCase: false,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																				&actionExpr{
																					pos: position{line: 152, col: 5, offset: 6244},
																					run: (*parser).callonSection5Title154,
																					expr: &labeledExpr{
																						pos:   position{line: 152, col: 5, offset: 6244},
																						label: "key",
																						expr: &actionExpr{
																							pos: position{line: 162, col: 17, offset: 6664},
																							run: (*parser).callonSection5Title156,
																							expr: &seqExpr{
																								pos: position{line: 162, col: 17, offset: 6664},
																								exprs: []interface{}{
																									&labeledExpr{
																										pos:   position{line: 162, col: 17, offset: 6664},
																										label: "key",
																										expr: &oneOrMoreExpr{
																											pos: position{line: 162, col: 22, offset: 6669},
																											expr: &seqExpr{
																												pos: position{line: 162, col: 23, offset: 6670},
																												exprs: []interface{}{
																													&notExpr{
																														pos: position{line: 162, col: 23, offset: 6670},
																														expr: &choiceExpr{
																															pos: position{line: 713, col: 7, offset: 30126},
																															alternatives: []interface{}{
																																&litMatcher{
																																	pos:        position{line: 713, col: 7, offset: 30126},
																																	val:        " ",
																																	ignoreCase: false,
																																},
																																&actionExpr{
																																	pos: position{line: 713, col: 13, offset: 30132},
																																	run: (*parser).callonSection5Title164,
																																	expr: &litMatcher{
																																		pos:        position{line: 713, col: 13, offset: 30132},
																																		val:        "\t",
																																		ignoreCase: false,
																																	},
																																},
																															},
																														},
																													},
																													&notExpr{
																														pos: position{line: 162, col: 27, offset: 6674},
																														expr: &litMatcher{
																															pos:        position{line: 162, col: 28, offset: 6675},
																															val:        "=",
																															ignoreCase: false,
																														},
																													},
																													&notExpr{
																														pos: position{line: 162, col: 32, offset: 6679},
																														expr: &litMatcher{
																															pos:        position{line: 162, col: 33, offset: 6680},
																															val:        ",",
																															ignoreCase: false,
																														},
																													},
																													&notExpr{
																														pos: position{line: 162, col: 37, offset: 6684},
																														expr: &litMatcher{
																															pos:        position{line: 162, col: 38, offset: 6685},
																															val:        "]",
																															ignoreCase: false,
																														},
																													},
																													&anyMatcher{
																														line: 162, col: 42, offset: 6689,
																													},
																												},
																											},
																										},
																									},
																									&zeroOrMoreExpr{
																										pos: position{line: 162, col: 46, offset: 6693},
																										expr: &choiceExpr{
																											pos: position{line: 713, col: 7, offset: 30126},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 713, col: 7, offset: 30126},
																													val:        " ",
																													ignoreCase: false,
																												},
																												&actionExpr{
																													pos: position{line: 713, col: 13, offset: 30132},
																													run: (*parser).callonSection5Title176,
																													expr: &litMatcher{
																														pos:        position{line: 713, col: 13, offset: 30132},
																														val:        "\t",
																														ignoreCase: false,
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 146, col: 52, offset: 5929},
																		label: "attributes",
																		expr: &zeroOrMoreExpr{
																			pos: position{line: 146, col: 63, offset: 5940},
																			expr: &choiceExpr{
																				pos: position{line: 156, col: 26, offset: 6376},
																				alternatives: []interface{}{
																					&actionExpr{
																						pos: position{line: 156, col: 26, offset: 6376},
																						run: (*parser).callonSection5Title181,
																						expr: &seqExpr{
																							pos: position{line: 156, col: 26, offset: 6376},
																							exprs: []interface{}{
																								&litMatcher{
																									pos:        position{line: 156, col: 26, offset: 6376},
																									val:        ",",
																									ignoreCase: false,
																								},
																								&zeroOrMoreExpr{
																									pos: position{line: 156, col: 30, offset: 6380},
																									expr: &choiceExpr{
																										pos: position{line: 713, col: 7, offset: 30126},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 713, col: 7, offset: 30126},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 713, col: 13, offset: 30132},
																												run: (*parser).callonSection5Title187,
																												expr: &litMatcher{
																													pos:        position{line: 713, col: 13, offset: 30132},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																								&labeledExpr{
																									pos:   position{line: 156, col: 34, offset: 6384},
																									label: "key",
																									expr: &actionExpr{
																										pos: position{line: 162, col: 17, offset: 6664},
																										run: (*parser).callonSection5Title190,
																										expr: &seqExpr{
																											pos: position{line: 162, col: 17, offset: 6664},
																											exprs: []interface{}{
																												&labeledExpr{
																													pos:   position{line: 162, col: 17, offset: 6664},
																													label: "key",
																													expr: &oneOrMoreExpr{
																														pos: position{line: 162, col: 22, offset: 6669},
																														expr: &seqExpr{
																															pos: position{line: 162, col: 23, offset: 6670},
																															exprs: []interface{}{
																																&notExpr{
																																	pos: position{line: 162, col: 23, offset: 6670},
																																	expr: &choiceExpr{
																																		pos: position{line: 713, col: 7, offset: 30126},
																																		alternatives: []interface{}{
																																			&litMatcher{
																																				pos:        position{line: 713, col: 7, offset: 30126},
																																				val:        " ",
																																				ignoreCase: false,
																																			},
																																			&actionExpr{
																																				pos: position{line: 713, col: 13, offset: 30132},
																																				run: (*parser).callonSection5Title198,
																																				expr: &litMatcher{
																																					pos:        position{line: 713, col: 13, offset: 30132},
																																					val:        "\t",
																																					ignoreCase: false,
																																				},
																																			},
																																		},
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 162, col: 27, offset: 6674},
																																	expr: &litMatcher{
																																		pos:        position{line: 162, col: 28, offset: 6675},
																																		val:        "=",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 162, col: 32, offset: 6679},
																																	expr: &litMatcher{
																																		pos:        position{line: 162, col: 33, offset: 6680},
																																		val:        ",",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 162, col: 37, offset: 6684},
																																	expr: &litMatcher{
																																		pos:        position{line: 162, col: 38, offset: 6685},
																																		val:        "]",
																																		ignoreCase: false,
																																	},
																																},
																																&anyMatcher{
																																	line: 162, col: 42, offset: 6689,
																																},
																															},
																														},
																													},
																												},
																												&zeroOrMoreExpr{
																													pos: position{line: 162, col: 46, offset: 6693},
																													expr: &choiceExpr{
																														pos: position{line: 713, col: 7, offset: 30126},
																														alternatives: []interface{}{
																															&litMatcher{
																																pos:        position{line: 713, col: 7, offset: 30126},
																																val:        " ",
																																ignoreCase: false,
																															},
																															&actionExpr{
																																pos: position{line: 713, col: 13, offset: 30132},
																																run: (*parser).callonSection5Title210,
																																expr: &litMatcher{
																																	pos:        position{line: 713, col: 13, offset: 30132},
																																	val:        "\t",
																																	ignoreCase: false,
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&litMatcher{
																									pos:        position{line: 156, col: 53, offset: 6403},
																									val:        "=",
																									ignoreCase: false,
																								},
																								&labeledExpr{
																									pos:   position{line: 156, col: 57, offset: 6407},
																									label: "value",
																									expr: &actionExpr{
																										pos: position{line: 167, col: 19, offset: 6793},
																										run: (*parser).callonSection5Title214,
																										expr: &seqExpr{
																											pos: position{line: 167, col: 19, offset: 6793},
																											exprs: []interface{}{
																												&zeroOrMoreExpr{
																													pos: position{line: 167, col: 19, offset: 6793},
																													expr: &choiceExpr{
																														pos: position{line: 713, col: 7, offset: 30126},
																														alternatives: []interface{}{
																															&litMatcher{
																																pos:        position{line: 713, col: 7, offset: 30126},
																																val:        " ",
																																ignoreCase: false,
																															},
																															&actionExpr{
																																pos: position{line: 713, col: 13, offset: 30132},
																																run: (*parser).callonSection5Title219,
																																expr: &litMatcher{
																																	pos:        position{line: 713, col: 13, offset: 30132},
																																	val:        "\t",
																																	ignoreCase: false,
																																},
																															},
																														},
																													},
																												},
																												&labeledExpr{
																													pos:   position{line: 167, col: 23, offset: 6797},
																													label: "value",
																													expr: &zeroOrMoreExpr{
																														pos: position{line: 167, col: 29, offset: 6803},
																														expr: &seqExpr{
																															pos: position{line: 167, col: 30, offset: 6804},
																															exprs: []interface{}{
																																&notExpr{
																																	pos: position{line: 167, col: 30, offset: 6804},
																																	expr: &choiceExpr{
																																		pos: position{line: 713, col: 7, offset: 30126},
																																		alternatives: []interface{}{
																																			&litMatcher{
																																				pos:        position{line: 713, col: 7, offset: 30126},
																																				val:        " ",
																																				ignoreCase: false,
																																			},
																																			&actionExpr{
																																				pos: position{line: 713, col: 13, offset: 30132},
																																				run: (*parser).callonSection5Title227,
																																				expr: &litMatcher{
																																					pos:        position{line: 713, col: 13, offset: 30132},
																																					val:        "\t",
																																					ignoreCase: false,
																																				},
																																			},
																																		},
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 167, col: 34, offset: 6808},
																																	expr: &litMatcher{
																																		pos:        position{line: 167, col: 35, offset: 6809},
																																		val:        "=",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 167, col: 39, offset: 6813},
																																	expr: &litMatcher{
																																		pos:        position{line: 167, col: 40, offset: 6814},
																																		val:        "]",
																																		ignoreCase: false,
																																	},
																																},
																																&anyMatcher{
																																	line: 167, col: 44, offset: 6818,
																																},
																															},
																														},
																													},
																												},
																												&zeroOrMoreExpr{
																													pos: position{line: 167, col: 48, offset: 6822},
																													expr: &choiceExpr{
																														pos: position{line: 713, col: 7, offset: 30126},
																														alternatives: []interface{}{
																															&litMatcher{
																																pos:        position{line: 713, col: 7, offset: 30126},
																																val:        " ",
																																ignoreCase: false,
																															},
																															&actionExpr{
																																pos: position{line: 713, col: 13, offset: 30132},
																																run: (*parser).callonSection5Title237,
																																expr: &litMatcher{
																																	pos:        position{line: 713, col: 13, offset: 30132},
																																	val:        "\t",
																																	ignoreCase: false,
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																					&actionExpr{
																						pos: position{line: 158, col: 5, offset: 6533},
																						run: (*parser).callonSection5Title239,
																						expr: &seqExpr{
																							pos: position{line: 158, col: 5, offset: 6533},
																							exprs: []interface{}{
																								&litMatcher{
																									pos:        position{line: 158, col: 5, offset: 6533},
																									val:        ",",
																									ignoreCase: false,
																								},
																								&zeroOrMoreExpr{
																									pos: position{line: 158, col: 9, offset: 6537},
																									expr: &choiceExpr{
																										pos: position{line: 713, col: 7, offset: 30126},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 713, col: 7, offset: 30126},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 713, col: 13, offset: 30132},
																												run: (*parser).callonSection5Title245,
																												expr: &litMatcher{
																													pos:        position{line: 713, col: 13, offset: 30132},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																								&labeledExpr{
																									pos:   position{line: 158, col: 13, offset: 6541},
																									label: "key",
																									expr: &actionExpr{
																										pos: position{line: 162, col: 17, offset: 6664},
																										run: (*parser).callonSection5Title248,
																										expr: &seqExpr{
																											pos: position{line: 162, col: 17, offset: 6664},
																											exprs: []interface{}{
																												&labeledExpr{
																													pos:   position{line: 162, col: 17, offset: 6664},
																													label: "key",
																													expr: &oneOrMoreExpr{
																														pos: position{line: 162, col: 22, offset: 6669},
																														expr: &seqExpr{
																															pos: position{line: 162, col: 23, offset: 6670},
																															exprs: []interface{}{
																																&notExpr{
																																	pos: position{line: 162, col: 23, offset: 6670},
																																	expr: &choiceExpr{
																																		pos: position{line: 713, col: 7, offset: 30126},
																																		alternatives: []interface{}{
																																			&litMatcher{
																																				pos:        position{line: 713, col: 7, offset: 30126},
																																				val:        " ",
																																				ignoreCase: false,
																																			},
																																			&actionExpr{
																																				pos: position{line: 713, col: 13, offset: 30132},
																																				run: (*parser).callonSection5Title256,
																																				expr: &litMatcher{
																																					pos:        position{line: 713, col: 13, offset: 30132},
																																					val:        "\t",
																																					ignoreCase: false,
																																				},
																																			},
																																		},
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 162, col: 27, offset: 6674},
																																	expr: &litMatcher{
																																		pos:        position{line: 162, col: 28, offset: 6675},
																																		val:        "=",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 162, col: 32, offset: 6679},
																																	expr: &litMatcher{
																																		pos:        position{line: 162, col: 33, offset: 6680},
																																		val:        ",",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 162, col: 37, offset: 6684},
																																	expr: &litMatcher{
																																		pos:        position{line: 162, col: 38, offset: 6685},
																																		val:        "]",
																																		ignoreCase: false,
																																	},
																																},
																																&anyMatcher{
																																	line: 162, col: 42, offset: 6689,
																																},
																															},
																														},
																													},
																												},
																												&zeroOrMoreExpr{
																													pos: position{line: 162, col: 46, offset: 6693},
																													expr: &choiceExpr{
																														pos: position{line: 713, col: 7, offset: 30126},
																														alternatives: []interface{}{
																															&litMatcher{
																																pos:        position{line: 713, col: 7, offset: 30126},
																																val:        " ",
																																ignoreCase: false,
																															},
																															&actionExpr{
																																pos: position{line: 713, col: 13, offset: 30132},
																																run: (*parser).callonSection5Title268,
																																expr: &litMatcher{
																																	pos:        position{line: 713, col: 13, offset: 30132},
																																	val:        "\t",
																																	ignoreCase: false,
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 146, col: 89, offset: 5966},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
													},
												},
											},
											&zeroOrMoreExpr{
												pos: position{line: 120, col: 98, offset: 5095},
												expr: &choiceExpr{
													pos: position{line: 713, col: 7, offset: 30126},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 713, col: 7, offset: 30126},
															val:        " ",
															ignoreCase: false,
														},
														&actionExpr{
															pos: position{line: 713, col: 13, offset: 30132},
															run: (*parser).callonSection5Title274,
															expr: &litMatcher{
																pos:        position{line: 713, col: 13, offset: 30132},
																val:        "\t",
																ignoreCase: false,
															},
														},
													},
												},
											},
											&choiceExpr{
												pos: position{line: 721, col: 8, offset: 30228},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 717, col: 12, offset: 30188},
														val:        "\r\n",
														ignoreCase: false,
													},
													&charClassMatcher{
														pos:        position{line: 717, col: 21, offset: 30197},
														val:        "[\\r\\n]",
														chars:      []rune{'\r', '\n'},
														ignoreCase: false,
														inverted:   false,
													},
													&notExpr{
														pos: position{line: 719, col: 8, offset: 30217},
														expr: &anyMatcher{
															line: 719, col: 9, offset: 30218,
														},
													},
												},
											},
										},
									},
								},
							},
						},
						&litMatcher{
							pos:        position{line: 285, col: 24, offset: 11270},
							val:        "======",
							ignoreCase: false,
						},
						&oneOrMoreExpr{
							pos: position{line: 285, col: 33, offset: 11279},
							expr: &choiceExpr{
								pos: position{line: 713, col: 7, offset: 30126},
								alternatives: []interface{}{
									&litMatcher{
										pos:        position{line: 713, col: 7, offset: 30126},
										val:        " ",
										ignoreCase: false,
									},
									&actionExpr{
										pos: position{line: 713, col: 13, offset: 30132},
										run: (*parser).callonSection5Title285,
										expr: &litMatcher{
											pos:        position{line: 713, col: 13, offset: 30132},
											val:        "\t",
											ignoreCase: false,
										},
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 287, col: 69, offset: 11353},
							label: "content",
							expr: &ruleRefExpr{
								pos:  position{line: 287, col: 78, offset: 11362},
								name: "TitleElements",
							},
						},
						&zeroOrMoreExpr{
							pos: position{line: 287, col: 93, offset: 11377},
							expr: &choiceExpr{
								pos: position{line: 713, col: 7, offset: 30126},
								alternatives: []interface{}{
									&litMatcher{
										pos:        position{line: 713, col: 7, offset: 30126},
										val:        " ",
										ignoreCase: false,
									},
									&actionExpr{
										pos: position{line: 713, col: 13, offset: 30132},
										run: (*parser).callonSection5Title292,
										expr: &litMatcher{
											pos:        position{line: 713, col: 13, offset: 30132},
											val:        "\t",
											ignoreCase: false,
										},
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 287, col: 97, offset: 11381},
							label: "id",
							expr: &zeroOrOneExpr{
								pos: position{line: 287, col: 100, offset: 11384},
								expr: &actionExpr{
									pos: position{line: 130, col: 20, offset: 5333},
									run: (*parser).callonSection5Title296,
									expr: &seqExpr{
										pos: position{line: 130, col: 20, offset: 5333},
										exprs: []interface{}{
											&litMatcher{
												pos:        position{line: 130, col: 20, offset: 5333},
												val:        "[[",
												ignoreCase: false,
											},
											&labeledExpr{
												pos:   position{line: 130, col: 25, offset: 5338},
												label: "id",
												expr: &actionExpr{
													pos: position{line: 701, col: 7, offset: 29885},
													run: (*parser).callonSection5Title300,
													expr: &oneOrMoreExpr{
														pos: position{line: 701, col: 7, offset: 29885},
														expr: &seqExpr{
															pos: position{line: 701, col: 8, offset: 29886},
															exprs: []interface{}{
																&notExpr{
																	pos: position{line: 701, col: 8, offset: 29886},
																	expr: &choiceExpr{
																		pos: position{line: 717, col: 12, offset: 30188},
																		alternatives: []interface{}{
																			&litMatcher{
																				pos:        position{line: 717, col: 12, offset: 30188},
																				val:        "\r\n",
																				ignoreCase: false,
																			},
																			&charClassMatcher{
																				pos:        position{line: 717, col: 21, offset: 30197},
																				val:        "[\\r\\n]",
																				chars:      []rune{'\r', '\n'},
																				ignoreCase: false,
																				inverted:   false,
																			},
																		},
																	},
																},
																&notExpr{
																	pos: position{line: 701, col: 17, offset: 29895},
																	expr: &choiceExpr{
																		pos: position{line: 713, col: 7, offset: 30126},
																		alternatives: []interface{}{
																			&litMatcher{
																				pos:        position{line: 713, col: 7, offset: 30126},
																				val:        " ",
																				ignoreCase: false,
																			},
																			&actionExpr{
																				pos: position{line: 713, col: 13, offset: 30132},
																				run: (*parser).callonSection5Title310,
																				expr: &litMatcher{
																					pos:        position{line: 713, col: 13, offset: 30132},
																					val:        "\t",
																					ignoreCase: false,
																				},
																			},
																		},
																	},
																},
																&notExpr{
																	pos: position{line: 701, col: 21, offset: 29899},
																	expr: &litMatcher{
																		pos:        position{line: 701, col: 22, offset: 29900},
																		val:        "[",
																		ignoreCase: false,
																	},
																},
																&notExpr{
																	pos: position{line: 701, col: 26, offset: 29904},
																	expr: &litMatcher{
																		pos:        position{line: 701, col: 27, offset: 29905},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
																&notExpr{
																	pos: position{line: 701, col: 31, offset: 29909},
																	expr: &litMatcher{
																		pos:        position{line: 701, col: 32, offset: 29910},
																		val:        "<<",
																		ignoreCase: false,
																	},
																},
																&notExpr{
																	pos: position{line: 701, col: 37, offset: 29915},
																	expr: &litMatcher{
																		pos:        position{line: 701, col: 38, offset: 29916},
																		val:        ">>",
																		ignoreCase: false,
																	},
																},
																&anyMatcher{
																	line: 701, col: 42, offset: 29920,
																},
															},
														},
													},
												},
											},
											&litMatcher{
												pos:        position{line: 130, col: 33, offset: 5346},
												val:        "]]",
												ignoreCase: false,
											},
										},
									},
								},
							},
						},
						&choiceExpr{
							pos: position{line: 721, col: 8, offset: 30228},
							alternatives: []interface{}{
								&litMatcher{
									pos:        position{line: 717, col: 12, offset: 30188},
									val:        "\r\n",
									ignoreCase: false,
								},
								&charClassMatcher{
									pos:        position{line: 717, col: 21, offset: 30197},
									val:        "[\\r\\n]",
									chars:      []rune{'\r', '\n'},
									ignoreCase: false,
									inverted:   false,
								},
								&notExpr{
									pos: position{line: 719, col: 8, offset: 30217},
									expr: &anyMatcher{
										line: 719, col: 9, offset: 30218,
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "Section5Block",
			pos:  position{line: 291, col: 1, offset: 11517},
			expr: &actionExpr{
				pos: position{line: 291, col: 18, offset: 11534},
				run: (*parser).callonSection5Block1,
				expr: &seqExpr{
					pos: position{line: 291, col: 18, offset: 11534},
					exprs: []interface{}{
						&notExpr{
							pos: position{line: 291, col: 18, offset: 11534},
							expr: &ruleRefExpr{
								pos:  position{line: 291, col: 19, offset: 11535},
								name: "Section1Title",
							},
						},
						&notExpr{
							pos: position{line: 291, col: 33, offset: 11549},
							expr: &ruleRefExpr{
								pos:  position{line: 291, col: 34, offset: 11550},
								name: "Section2Title",
							},
						},
						&notExpr{
							pos: position{line: 291, col: 48, offset: 11564},
							expr: &ruleRefExpr{
								pos:  position{line: 291, col: 49, offset: 11565},
								name: "Section3Title",
							},
						},
						&notExpr{
							pos: position{line: 291, col: 63, offset: 11579},
							expr: &ruleRefExpr{
								pos:  position{line: 291, col: 64, offset: 11580},
								name: "Section4Title",
							},
						},
						&notExpr{
							pos: position{line: 291, col: 78, offset: 11594},
							expr: &ruleRefExpr{
								pos:  position{line: 291, col: 79, offset: 11595},
								name: "Section5Title",
							},
						},
						&labeledExpr{
							pos:   position{line: 291, col: 93, offset: 11609},
							label: "content",
							expr: &zeroOrMoreExpr{
								pos: position{line: 291, col: 101, offset: 11617},
								expr: &ruleRefExpr{
									pos:  position{line: 291, col: 102, offset: 11618},
									name: "DocumentBlock",
								},
							},
						},
					},
				},
			},
		},
		{
			name: "TitleElements",
			pos:  position{line: 295, col: 1, offset: 11663},
			expr: &actionExpr{
				pos: position{line: 295, col: 18, offset: 11680},
				run: (*parser).callonTitleElements1,
				expr: &labeledExpr{
					pos:   position{line: 295, col: 18, offset: 11680},
					label: "elements",
					expr: &oneOrMoreExpr{
						pos: position{line: 295, col: 27, offset: 11689},
						expr: &seqExpr{
							pos: position{line: 295, col: 28, offset: 11690},
							exprs: []interface{}{
								&notExpr{
									pos: position{line: 295, col: 28, offset: 11690},
									expr: &choiceExpr{
										pos: position{line: 717, col: 12, offset: 30188},
										alternatives: []interface{}{
											&litMatcher{
												pos:        position{line: 717, col: 12, offset: 30188},
												val:        "\r\n",
												ignoreCase: false,
											},
											&charClassMatcher{
												pos:        position{line: 717, col: 21, offset: 30197},
												val:        "[\\r\\n]",
												chars:      []rune{'\r', '\n'},
												ignoreCase: false,
												inverted:   false,
											},
										},
									},
								},
								&zeroOrMoreExpr{
									pos: position{line: 295, col: 37, offset: 11699},
									expr: &choiceExpr{
										pos: position{line: 713, col: 7, offset: 30126},
										alternatives: []interface{}{
											&litMatcher{
												pos:        position{line: 713, col: 7, offset: 30126},
												val:        " ",
												ignoreCase: false,
											},
											&actionExpr{
												pos: position{line: 713, col: 13, offset: 30132},
												run: (*parser).callonTitleElements12,
												expr: &litMatcher{
													pos:        position{line: 713, col: 13, offset: 30132},
													val:        "\t",
													ignoreCase: false,
												},
											},
										},
									},
								},
								&notExpr{
									pos: position{line: 295, col: 41, offset: 11703},
									expr: &actionExpr{
										pos: position{line: 130, col: 20, offset: 5333},
										run: (*parser).callonTitleElements15,
										expr: &seqExpr{
											pos: position{line: 130, col: 20, offset: 5333},
											exprs: []interface{}{
												&litMatcher{
													pos:        position{line: 130, col: 20, offset: 5333},
													val:        "[[",
													ignoreCase: false,
												},
												&labeledExpr{
													pos:   position{line: 130, col: 25, offset: 5338},
													label: "id",
													expr: &actionExpr{
														pos: position{line: 701, col: 7, offset: 29885},
														run: (*parser).callonTitleElements19,
														expr: &oneOrMoreExpr{
															pos: position{line: 701, col: 7, offset: 29885},
															expr: &seqExpr{
																pos: position{line: 701, col: 8, offset: 29886},
																exprs: []interface{}{
																	&notExpr{
																		pos: position{line: 701, col: 8, offset: 29886},
																		expr: &choiceExpr{
																			pos: position{line: 717, col: 12, offset: 30188},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 717, col: 12, offset: 30188},
																					val:        "\r\n",
																					ignoreCase: false,
																				},
																				&charClassMatcher{
																					pos:        position{line: 717, col: 21, offset: 30197},
																					val:        "[\\r\\n]",
																					chars:      []rune{'\r', '\n'},
																					ignoreCase: false,
																					inverted:   false,
																				},
																			},
																		},
																	},
																	&notExpr{
																		pos: position{line: 701, col: 17, offset: 29895},
																		expr: &choiceExpr{
																			pos: position{line: 713, col: 7, offset: 30126},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 713, col: 7, offset: 30126},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 713, col: 13, offset: 30132},
																					run: (*parser).callonTitleElements29,
																					expr: &litMatcher{
																						pos:        position{line: 713, col: 13, offset: 30132},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&notExpr{
																		pos: position{line: 701, col: 21, offset: 29899},
																		expr: &litMatcher{
																			pos:        position{line: 701, col: 22, offset: 29900},
																			val:        "[",
																			ignoreCase: false,
																		},
																	},
																	&notExpr{
																		pos: position{line: 701, col: 26, offset: 29904},
																		expr: &litMatcher{
																			pos:        position{line: 701, col: 27, offset: 29905},
																			val:        "]",
																			ignoreCase: false,
																		},
																	},
																	&notExpr{
																		pos: position{line: 701, col: 31, offset: 29909},
																		expr: &litMatcher{
																			pos:        position{line: 701, col: 32, offset: 29910},
																			val:        "<<",
																			ignoreCase: false,
																		},
																	},
																	&notExpr{
																		pos: position{line: 701, col: 37, offset: 29915},
																		expr: &litMatcher{
																			pos:        position{line: 701, col: 38, offset: 29916},
																			val:        ">>",
																			ignoreCase: false,
																		},
																	},
																	&anyMatcher{
																		line: 701, col: 42, offset: 29920,
																	},
																},
															},
														},
													},
												},
												&litMatcher{
													pos:        position{line: 130, col: 33, offset: 5346},
													val:        "]]",
													ignoreCase: false,
												},
											},
										},
									},
								},
								&ruleRefExpr{
									pos:  position{line: 295, col: 58, offset: 11720},
									name: "TitleElement",
								},
								&zeroOrMoreExpr{
									pos: position{line: 295, col: 71, offset: 11733},
									expr: &choiceExpr{
										pos: position{line: 713, col: 7, offset: 30126},
										alternatives: []interface{}{
											&litMatcher{
												pos:        position{line: 713, col: 7, offset: 30126},
												val:        " ",
												ignoreCase: false,
											},
											&actionExpr{
												pos: position{line: 713, col: 13, offset: 30132},
												run: (*parser).callonTitleElements45,
												expr: &litMatcher{
													pos:        position{line: 713, col: 13, offset: 30132},
													val:        "\t",
													ignoreCase: false,
												},
											},
										},
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "TitleElement",
			pos:  position{line: 300, col: 1, offset: 11906},
			expr: &actionExpr{
				pos: position{line: 300, col: 17, offset: 11922},
				run: (*parser).callonTitleElement1,
				expr: &labeledExpr{
					pos:   position{line: 300, col: 17, offset: 11922},
					label: "element",
					expr: &choiceExpr{
						pos: position{line: 300, col: 26, offset: 11931},
						alternatives: []interface{}{
							&actionExpr{
								pos: position{line: 576, col: 19, offset: 24897},
								run: (*parser).callonTitleElement4,
								expr: &seqExpr{
									pos: position{line: 576, col: 19, offset: 24897},
									exprs: []interface{}{
										&litMatcher{
											pos:        position{line: 576, col: 19, offset: 24897},
											val:        "<<",
											ignoreCase: false,
										},
										&labeledExpr{
											pos:   position{line: 576, col: 24, offset: 24902},
											label: "id",
											expr: &actionExpr{
												pos: position{line: 701, col: 7, offset: 29885},
												run: (*parser).callonTitleElement8,
												expr: &oneOrMoreExpr{
													pos: position{line: 701, col: 7, offset: 29885},
													expr: &seqExpr{
														pos: position{line: 701, col: 8, offset: 29886},
														exprs: []interface{}{
															&notExpr{
																pos: position{line: 701, col: 8, offset: 29886},
																expr: &choiceExpr{
																	pos: position{line: 717, col: 12, offset: 30188},
																	alternatives: []interface{}{
																		&litMatcher{
																			pos:        position{line: 717, col: 12, offset: 30188},
																			val:        "\r\n",
																			ignoreCase: false,
																		},
																		&charClassMatcher{
																			pos:        position{line: 717, col: 21, offset: 30197},
																			val:        "[\\r\\n]",
																			chars:      []rune{'\r', '\n'},
																			ignoreCase: false,
																			inverted:   false,
																		},
																	},
																},
															},
															&notExpr{
																pos: position{line: 701, col: 17, offset: 29895},
																expr: &choiceExpr{
																	pos: position{line: 713, col: 7, offset: 30126},
																	alternatives: []interface{}{
																		&litMatcher{
																			pos:        position{line: 713, col: 7, offset: 30126},
																			val:        " ",
																			ignoreCase: false,
																		},
																		&actionExpr{
																			pos: position{line: 713, col: 13, offset: 30132},
																			run: (*parser).callonTitleElement18,
																			expr: &litMatcher{
																				pos:        position{line: 713, col: 13, offset: 30132},
																				val:        "\t",
																				ignoreCase: false,
																			},
																		},
																	},
																},
															},
															&notExpr{
																pos: position{line: 701, col: 21, offset: 29899},
																expr: &litMatcher{
																	pos:        position{line: 701, col: 22, offset: 29900},
																	val:        "[",
																	ignoreCase: false,
																},
															},
															&notExpr{
																pos: position{line: 701, col: 26, offset: 29904},
																expr: &litMatcher{
																	pos:        position{line: 701, col: 27, offset: 29905},
																	val:        "]",
																	ignoreCase: false,
																},
															},
															&notExpr{
																pos: position{line: 701, col: 31, offset: 29909},
																expr: &litMatcher{
																	pos:        position{line: 701, col: 32, offset: 29910},
																	val:        "<<",
																	ignoreCase: false,
																},
															},
															&notExpr{
																pos: position{line: 701, col: 37, offset: 29915},
																expr: &litMatcher{
																	pos:        position{line: 701, col: 38, offset: 29916},
																	val:        ">>",
																	ignoreCase: false,
																},
															},
															&anyMatcher{
																line: 701, col: 42, offset: 29920,
															},
														},
													},
												},
											},
										},
										&litMatcher{
											pos:        position{line: 576, col: 32, offset: 24910},
											val:        ">>",
											ignoreCase: false,
										},
									},
								},
							},
							&ruleRefExpr{
								pos:  position{line: 300, col: 43, offset: 11948},
								name: "Passthrough",
							},
							&actionExpr{
								pos: position{line: 608, col: 16, offset: 26050},
								run: (*parser).callonTitleElement31,
								expr: &labeledExpr{
									pos:   position{line: 608, col: 16, offset: 26050},
									label: "image",
									expr: &actionExpr{
										pos: position{line: 613, col: 21, offset: 26221},
										run: (*parser).callonTitleElement33,
										expr: &seqExpr{
											pos: position{line: 613, col: 21, offset: 26221},
											exprs: []interface{}{
												&litMatcher{
													pos:        position{line: 613, col: 21, offset: 26221},
													val:        "image:",
													ignoreCase: false,
												},
												&notExpr{
													pos: position{line: 613, col: 30, offset: 26230},
													expr: &litMatcher{
														pos:        position{line: 613, col: 31, offset: 26231},
														val:        ":",
														ignoreCase: false,
													},
												},
												&labeledExpr{
													pos:   position{line: 613, col: 35, offset: 26235},
													label: "path",
													expr: &actionExpr{
														pos: position{line: 697, col: 8, offset: 29815},
														run: (*parser).callonTitleElement39,
														expr: &oneOrMoreExpr{
															pos: position{line: 697, col: 8, offset: 29815},
															expr: &seqExpr{
																pos: position{line: 697, col: 9, offset: 29816},
																exprs: []interface{}{
																	&notExpr{
																		pos: position{line: 697, col: 9, offset: 29816},
																		expr: &choiceExpr{
																			pos: position{line: 717, col: 12, offset: 30188},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 717, col: 12, offset: 30188},
																					val:        "\r\n",
																					ignoreCase: false,
																				},
																				&charClassMatcher{
																					pos:        position{line: 717, col: 21, offset: 30197},
																					val:        "[\\r\\n]",
																					chars:      []rune{'\r', '\n'},
																					ignoreCase: false,
																					inverted:   false,
																				},
																			},
																		},
																	},
																	&notExpr{
																		pos: position{line: 697, col: 18, offset: 29825},
																		expr: &choiceExpr{
																			pos: position{line: 713, col: 7, offset: 30126},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 713, col: 7, offset: 30126},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 713, col: 13, offset: 30132},
																					run: (*parser).callonTitleElement49,
																					expr: &litMatcher{
																						pos:        position{line: 713, col: 13, offset: 30132},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&notExpr{
																		pos: position{line: 697, col: 22, offset: 29829},
																		expr: &litMatcher{
																			pos:        position{line: 697, col: 23, offset: 29830},
																			val:        "[",
																			ignoreCase: false,
																		},
																	},
																	&notExpr{
																		pos: position{line: 697, col: 27, offset: 29834},
																		expr: &litMatcher{
																			pos:        position{line: 697, col: 28, offset: 29835},
																			val:        "]",
																			ignoreCase: false,
																		},
																	},
																	&anyMatcher{
																		line: 697, col: 32, offset: 29839,
																	},
																},
															},
														},
													},
												},
												&labeledExpr{
													pos:   position{line: 613, col: 46, offset: 26246},
													label: "attributes",
													expr: &actionExpr{
														pos: position{line: 179, col: 21, offset: 7160},
														run: (*parser).callonTitleElement57,
														expr: &seqExpr{
															pos: position{line: 179, col: 21, offset: 7160},
															exprs: []interface{}{
																&litMatcher{
																	pos:        position{line: 179, col: 21, offset: 7160},
																	val:        "[",
																	ignoreCase: false,
																},
																&labeledExpr{
																	pos:   position{line: 179, col: 25, offset: 7164},
																	label: "attributes",
																	expr: &zeroOrMoreExpr{
																		pos: position{line: 179, col: 36, offset: 7175},
																		expr: &seqExpr{
																			pos: position{line: 179, col: 37, offset: 7176},
																			exprs: []interface{}{
																				&notExpr{
																					pos: position{line: 179, col: 37, offset: 7176},
																					expr: &litMatcher{
																						pos:        position{line: 179, col: 38, offset: 7177},
																						val:        "]",
																						ignoreCase: false,
																					},
																				},
																				&notExpr{
																					pos: position{line: 179, col: 42, offset: 7181},
																					expr: &choiceExpr{
																						pos: position{line: 717, col: 12, offset: 30188},
																						alternatives: []interface{}{
																							&litMatcher{
																								pos:        position{line: 717, col: 12, offset: 30188},
																								val:        "\r\n",
																								ignoreCase: false,
																							},
																							&charClassMatcher{
																								pos:        position{line: 717, col: 21, offset: 30197},
																								val:        "[\\r\\n]",
																								chars:      []rune{'\r', '\n'},
																								ignoreCase: false,
																								inverted:   false,
																							},
																						},
																					},
																				},
																				&notExpr{
																					pos: position{line: 179, col: 51, offset: 7190},
																					expr: &notExpr{
																						pos: position{line: 719, col: 8, offset: 30217},
																						expr: &anyMatcher{
																							line: 719, col: 9, offset: 30218,
																						},
																					},
																				},
																				&anyMatcher{
																					line: 179, col: 56, offset: 7195,
																				},
																			},
																		},
																	},
																},
																&litMatcher{
																	pos:        position{line: 179, col: 60, offset: 7199},
																	val:        "]",
																	ignoreCase: false,
																},
															},
														},
													},
												},
											},
										},
									},
								},
							},
							&ruleRefExpr{
								pos:  position{line: 300, col: 71, offset: 11976},
								name: "QuotedText",
							},
							&actionExpr{
								pos: position{line: 592, col: 17, offset: 25414},
								run: (*parser).callonTitleElement75,
								expr: &seqExpr{
									pos: position{line: 592, col: 17, offset: 25414},
									exprs: []interface{}{
										&litMatcher{
											pos:        position{line: 592, col: 17, offset: 25414},
											val:        "link:",
											ignoreCase: false,
										},
										&labeledExpr{
											pos:   position{line: 592, col: 25, offset: 25422},
											label: "url",
											expr: &seqExpr{
												pos: position{line: 592, col: 30, offset: 25427},
												exprs: []interface{}{
													&zeroOrOneExpr{
														pos: position{line: 592, col: 30, offset: 25427},
														expr: &choiceExpr{
															pos: position{line: 709, col: 15, offset: 30046},
															alternatives: []interface{}{
																&litMatcher{
																	pos:        position{line: 709, col: 15, offset: 30046},
																	val:        "http://",
																	ignoreCase: false,
																},
																&litMatcher{
																	pos:        position{line: 709, col: 27, offset: 30058},
																	val:        "https://",
																	ignoreCase: false,
																},
																&litMatcher{
																	pos:        position{line: 709, col: 40, offset: 30071},
																	val:        "ftp://",
																	ignoreCase: false,
																},
																&litMatcher{
																	pos:        position{line: 709, col: 51, offset: 30082},
																	val:        "irc://",
																	ignoreCase: false,
																},
																&litMatcher{
																	pos:        position{line: 709, col: 62, offset: 30093},
																	val:        "mailto:",
																	ignoreCase: false,
																},
															},
														},
													},
													&actionExpr{
														pos: position{line: 697, col: 8, offset: 29815},
														run: (*parser).callonTitleElement87,
														expr: &oneOrMoreExpr{
															pos: position{line: 697, col: 8, offset: 29815},
															expr: &seqExpr{
																pos: position{line: 697, col: 9, offset: 29816},
																exprs: []interface{}{
																	&notExpr{
																		pos: position{line: 697, col: 9, offset: 29816},
																		expr: &choiceExpr{
																			pos: position{line: 717, col: 12, offset: 30188},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 717, col: 12, offset: 30188},
																					val:        "\r\n",
																					ignoreCase: false,
																				},
																				&charClassMatcher{
																					pos:        position{line: 717, col: 21, offset: 30197},
																					val:        "[\\r\\n]",
																					chars:      []rune{'\r', '\n'},
																					ignoreCase: false,
																					inverted:   false,
																				},
																			},
																		},
																	},
																	&notExpr{
																		pos: position{line: 697, col: 18, offset: 29825},
																		expr: &choiceExpr{
																			pos: position{line: 713, col: 7, offset: 30126},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 713, col: 7, offset: 30126},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 713, col: 13, offset: 30132},
																					run: (*parser).callonTitleElement97,
																					expr: &litMatcher{
																						pos:        position{line: 713, col: 13, offset: 30132},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&notExpr{
																		pos: position{line: 697, col: 22, offset: 29829},
																		expr: &litMatcher{
																			pos:        position{line: 697, col: 23, offset: 29830},
																			val:        "[",
																			ignoreCase: false,
																		},
																	},
																	&notExpr{
																		pos: position{line: 697, col: 27, offset: 29834},
																		expr: &litMatcher{
																			pos:        position{line: 697, col: 28, offset: 29835},
																			val:        "]",
																			ignoreCase: false,
																		},
																	},
																	&anyMatcher{
																		line: 697, col: 32, offset: 29839,
																	},
																},
															},
														},
													},
												},
											},
										},
										&labeledExpr{
											pos:   position{line: 592, col: 47, offset: 25444},
											label: "attributes",
											expr: &actionExpr{
												pos: position{line: 179, col: 21, offset: 7160},
												run: (*parser).callonTitleElement105,
												expr: &seqExpr{
													pos: position{line: 179, col: 21, offset: 7160},
													exprs: []interface{}{
														&litMatcher{
															pos:        position{line: 179, col: 21, offset: 7160},
															val:        "[",
															ignoreCase: false,
														},
														&labeledExpr{
															pos:   position{line: 179, col: 25, offset: 7164},
															label: "attributes",
															expr: &zeroOrMoreExpr{
																pos: position{line: 179, col: 36, offset: 7175},
																expr: &seqExpr{
																	pos: position{line: 179, col: 37, offset: 7176},
																	exprs: []interface{}{
																		&notExpr{
																			pos: position{line: 179, col: 37, offset: 7176},
																			expr: &litMatcher{
																				pos:        position{line: 179, col: 38, offset: 7177},
																				val:        "]",
																				ignoreCase: false,
																			},
																		},
																		&notExpr{
																			pos: position{line: 179, col: 42, offset: 7181},
																			expr: &choiceExpr{
																				pos: position{line: 717, col: 12, offset: 30188},
																				alternatives: []interface{}{
																					&litMatcher{
																						pos:        position{line: 717, col: 12, offset: 30188},
																						val:        "\r\n",
																						ignoreCase: false,
																					},
																					&charClassMatcher{
																						pos:        position{line: 717, col: 21, offset: 30197},
																						val:        "[\\r\\n]",
																						chars:      []rune{'\r', '\n'},
																						ignoreCase: false,
																						inverted:   false,
																					},
																				},
																			},
																		},
																		&notExpr{
																			pos: position{line: 179, col: 51, offset: 7190},
																			expr: &notExpr{
																				pos: position{line: 719, col: 8, offset: 30217},
																				expr: &anyMatcher{
																					line: 719, col: 9, offset: 30218,
																				},
																			},
																		},
																		&anyMatcher{
																			line: 179, col: 56, offset: 7195,
																		},
																	},
																},
															},
														},
														&litMatcher{
															pos:        position{line: 179, col: 60, offset: 7199},
															val:        "]",
															ignoreCase: false,
														},
													},
												},
											},
										},
									},
								},
							},
							&actionExpr{
								pos: position{line: 585, col: 17, offset: 25123},
								run: (*parser).callonTitleElement122,
								expr: &seqExpr{
									pos: position{line: 585, col: 17, offset: 25123},
									exprs: []interface{}{
										&labeledExpr{
											pos:   position{line: 585, col: 17, offset: 25123},
											label: "url",
											expr: &seqExpr{
												pos: position{line: 585, col: 22, offset: 25128},
												exprs: []interface{}{
													&choiceExpr{
														pos: position{line: 709, col: 15, offset: 30046},
														alternatives: []interface{}{
															&litMatcher{
																pos:        position{line: 709, col: 15, offset: 30046},
																val:        "http://",
																ignoreCase: false,
															},
															&litMatcher{
																pos:        position{line: 709, col: 27, offset: 30058},
																val:        "https://",
																ignoreCase: false,
															},
															&litMatcher{
																pos:        position{line: 709, col: 40, offset: 30071},
																val:        "ftp://",
																ignoreCase: false,
															},
															&litMatcher{
																pos:        position{line: 709, col: 51, offset: 30082},
																val:        "irc://",
																ignoreCase: false,
															},
															&litMatcher{
																pos:        position{line: 709, col: 62, offset: 30093},
																val:        "mailto:",
																ignoreCase: false,
															},
														},
													},
													&actionExpr{
														pos: position{line: 697, col: 8, offset: 29815},
														run: (*parser).callonTitleElement132,
														expr: &oneOrMoreExpr{
															pos: position{line: 697, col: 8, offset: 29815},
															expr: &seqExpr{
																pos: position{line: 697, col: 9, offset: 29816},
																exprs: []interface{}{
																	&notExpr{
																		pos: position{line: 697, col: 9, offset: 29816},
																		expr: &choiceExpr{
																			pos: position{line: 717, col: 12, offset: 30188},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 717, col: 12, offset: 30188},
																					val:        "\r\n",
																					ignoreCase: false,
																				},
																				&charClassMatcher{
																					pos:        position{line: 717, col: 21, offset: 30197},
																					val:        "[\\r\\n]",
																					chars:      []rune{'\r', '\n'},
																					ignoreCase: false,
																					inverted:   false,
																				},
																			},
																		},
																	},
																	&notExpr{
																		pos: position{line: 697, col: 18, offset: 29825},
																		expr: &choiceExpr{
																			pos: position{line: 713, col: 7, offset: 30126},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 713, col: 7, offset: 30126},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 713, col: 13, offset: 30132},
																					run: (*parser).callonTitleElement142,
																					expr: &litMatcher{
																						pos:        position{line: 713, col: 13, offset: 30132},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&notExpr{
																		pos: position{line: 697, col: 22, offset: 29829},
																		expr: &litMatcher{
																			pos:        position{line: 697, col: 23, offset: 29830},
																			val:        "[",
																			ignoreCase: false,
																		},
																	},
																	&notExpr{
																		pos: position{line: 697, col: 27, offset: 29834},
																		expr: &litMatcher{
																			pos:        position{line: 697, col: 28, offset: 29835},
																			val:        "]",
																			ignoreCase: false,
																		},
																	},
																	&anyMatcher{
																		line: 697, col: 32, offset: 29839,
																	},
																},
															},
														},
													},
												},
											},
										},
										&labeledExpr{
											pos:   position{line: 585, col: 38, offset: 25144},
											label: "attributes",
											expr: &actionExpr{
												pos: position{line: 179, col: 21, offset: 7160},
												run: (*parser).callonTitleElement150,
												expr: &seqExpr{
													pos: position{line: 179, col: 21, offset: 7160},
													exprs: []interface{}{
														&litMatcher{
															pos:        position{line: 179, col: 21, offset: 7160},
															val:        "[",
															ignoreCase: false,
														},
														&labeledExpr{
															pos:   position{line: 179, col: 25, offset: 7164},
															label: "attributes",
															expr: &zeroOrMoreExpr{
																pos: position{line: 179, col: 36, offset: 7175},
																expr: &seqExpr{
																	pos: position{line: 179, col: 37, offset: 7176},
																	exprs: []interface{}{
																		&notExpr{
																			pos: position{line: 179, col: 37, offset: 7176},
																			expr: &litMatcher{
																				pos:        position{line: 179, col: 38, offset: 7177},
																				val:        "]",
																				ignoreCase: false,
																			},
																		},
																		&notExpr{
																			pos: position{line: 179, col: 42, offset: 7181},
																			expr: &choiceExpr{
																				pos: position{line: 717, col: 12, offset: 30188},
																				alternatives: []interface{}{
																					&litMatcher{
																						pos:        position{line: 717, col: 12, offset: 30188},
																						val:        "\r\n",
																						ignoreCase: false,
																					},
																					&charClassMatcher{
																						pos:        position{line: 717, col: 21, offset: 30197},
																						val:        "[\\r\\n]",
																						chars:      []rune{'\r', '\n'},
																						ignoreCase: false,
																						inverted:   false,
																					},
																				},
																			},
																		},
																		&notExpr{
																			pos: position{line: 179, col: 51, offset: 7190},
																			expr: &notExpr{
																				pos: position{line: 719, col: 8, offset: 30217},
																				expr: &anyMatcher{
																					line: 719, col: 9, offset: 30218,
																				},
																			},
																		},
																		&anyMatcher{
																			line: 179, col: 56, offset: 7195,
																		},
																	},
																},
															},
														},
														&litMatcher{
															pos:        position{line: 179, col: 60, offset: 7199},
															val:        "]",
															ignoreCase: false,
														},
													},
												},
											},
										},
									},
								},
							},
							&actionExpr{
								pos: position{line: 587, col: 5, offset: 25254},
								run: (*parser).callonTitleElement167,
								expr: &labeledExpr{
									pos:   position{line: 587, col: 5, offset: 25254},
									label: "url",
									expr: &seqExpr{
										pos: position{line: 587, col: 10, offset: 25259},
										exprs: []interface{}{
											&choiceExpr{
												pos: position{line: 709, col: 15, offset: 30046},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 709, col: 15, offset: 30046},
														val:        "http://",
														ignoreCase: false,
													},
													&litMatcher{
														pos:        position{line: 709, col: 27, offset: 30058},
														val:        "https://",
														ignoreCase: false,
													},
													&litMatcher{
														pos:        position{line: 709, col: 40, offset: 30071},
														val:        "ftp://",
														ignoreCase: false,
													},
													&litMatcher{
														pos:        position{line: 709, col: 51, offset: 30082},
														val:        "irc://",
														ignoreCase: false,
													},
													&litMatcher{
														pos:        position{line: 709, col: 62, offset: 30093},
														val:        "mailto:",
														ignoreCase: false,
													},
												},
											},
											&actionExpr{
												pos: position{line: 697, col: 8, offset: 29815},
												run: (*parser).callonTitleElement176,
												expr: &oneOrMoreExpr{
													pos: position{line: 697, col: 8, offset: 29815},
													expr: &seqExpr{
														pos: position{line: 697, col: 9, offset: 29816},
														exprs: []interface{}{
															&notExpr{
																pos: position{line: 697, col: 9, offset: 29816},
																expr: &choiceExpr{
																	pos: position{line: 717, col: 12, offset: 30188},
																	alternatives: []interface{}{
																		&litMatcher{
																			pos:        position{line: 717, col: 12, offset: 30188},
																			val:        "\r\n",
																			ignoreCase: false,
																		},
																		&charClassMatcher{
																			pos:        position{line: 717, col: 21, offset: 30197},
																			val:        "[\\r\\n]",
																			chars:      []rune{'\r', '\n'},
																			ignoreCase: false,
																			inverted:   false,
																		},
																	},
																},
															},
															&notExpr{
																pos: position{line: 697, col: 18, offset: 29825},
																expr: &choiceExpr{
																	pos: position{line: 713, col: 7, offset: 30126},
																	alternatives: []interface{}{
																		&litMatcher{
																			pos:        position{line: 713, col: 7, offset: 30126},
																			val:        " ",
																			ignoreCase: false,
																		},
																		&actionExpr{
																			pos: position{line: 713, col: 13, offset: 30132},
																			run: (*parser).callonTitleElement186,
																			expr: &litMatcher{
																				pos:        position{line: 713, col: 13, offset: 30132},
																				val:        "\t",
																				ignoreCase: false,
																			},
																		},
																	},
																},
															},
															&notExpr{
																pos: position{line: 697, col: 22, offset: 29829},
																expr: &litMatcher{
																	pos:        position{line: 697, col: 23, offset: 29830},
																	val:        "[",
																	ignoreCase: false,
																},
															},
															&notExpr{
																pos: position{line: 697, col: 27, offset: 29834},
																expr: &litMatcher{
																	pos:        position{line: 697, col: 28, offset: 29835},
																	val:        "]",
																	ignoreCase: false,
																},
															},
															&anyMatcher{
																line: 697, col: 32, offset: 29839,
															},
														},
													},
												},
											},
										},
									},
								},
							},
							&actionExpr{
								pos: position{line: 103, col: 34, offset: 4376},
								run: (*parser).callonTitleElement193,
								expr: &seqExpr{
									pos: position{line: 103, col: 34, offset: 4376},
									exprs: []interface{}{
										&litMatcher{
											pos:        position{line: 103, col: 34, offset: 4376},
											val:        "{",
											ignoreCase: false,
										},
										&labeledExpr{
											pos:   position{line: 103, col: 38, offset: 4380},
											label: "name",
											expr: &seqExpr{
												pos: position{line: 110, col: 18, offset: 4666},
												exprs: []interface{}{
													&charClassMatcher{
														pos:        position{line: 110, col: 19, offset: 4667},
														val:        "[_A-Za-z0-9]",
														chars:      []rune{'_'},
														ranges:     []rune{'A', 'Z', 'a', 'z', '0', '9'},
														ignoreCase: false,
														inverted:   false,
													},
													&zeroOrMoreExpr{
														pos: position{line: 110, col: 48, offset: 4696},
														expr: &charClassMatcher{
															pos:        position{line: 110, col: 49, offset: 4697},
															val:        "[-A-Za-z0-9]",
															chars:      []rune{'-'},
															ranges:     []rune{'A', 'Z', 'a', 'z', '0', '9'},
															ignoreCase: false,
															inverted:   false,
														},
													},
												},
											},
										},
										&litMatcher{
											pos:        position{line: 103, col: 59, offset: 4401},
											val:        "}",
											ignoreCase: false,
										},
									},
								},
							},
							&actionExpr{
								pos: position{line: 693, col: 9, offset: 29754},
								run: (*parser).callonTitleElement202,
								expr: &oneOrMoreExpr{
									pos: position{line: 693, col: 9, offset: 29754},
									expr: &seqExpr{
										pos: position{line: 693, col: 10, offset: 29755},
										exprs: []interface{}{
											&notExpr{
												pos: position{line: 693, col: 10, offset: 29755},
												expr: &choiceExpr{
													pos: position{line: 717, col: 12, offset: 30188},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 717, col: 12, offset: 30188},
															val:        "\r\n",
															ignoreCase: false,
														},
														&charClassMatcher{
															pos:        position{line: 717, col: 21, offset: 30197},
															val:        "[\\r\\n]",
															chars:      []rune{'\r', '\n'},
															ignoreCase: false,
															inverted:   false,
														},
													},
												},
											},
											&notExpr{
												pos: position{line: 693, col: 19, offset: 29764},
												expr: &choiceExpr{
													pos: position{line: 713, col: 7, offset: 30126},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 713, col: 7, offset: 30126},
															val:        " ",
															ignoreCase: false,
														},
														&actionExpr{
															pos: position{line: 713, col: 13, offset: 30132},
															run: (*parser).callonTitleElement212,
															expr: &litMatcher{
																pos:        position{line: 713, col: 13, offset: 30132},
																val:        "\t",
																ignoreCase: false,
															},
														},
													},
												},
											},
											&anyMatcher{
												line: 693, col: 23, offset: 29768,
											},
										},
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "List",
			pos:  position{line: 309, col: 1, offset: 12224},
			expr: &actionExpr{
				pos: position{line: 309, col: 9, offset: 12232},
				run: (*parser).callonList1,
				expr: &seqExpr{
					pos: position{line: 309, col: 9, offset: 12232},
					exprs: []interface{}{
						&labeledExpr{
							pos:   position{line: 309, col: 9, offset: 12232},
							label: "attributes",
							expr: &zeroOrMoreExpr{
								pos: position{line: 309, col: 20, offset: 12243},
								expr: &actionExpr{
									pos: position{line: 317, col: 18, offset: 12524},
									run: (*parser).callonList5,
									expr: &seqExpr{
										pos: position{line: 317, col: 18, offset: 12524},
										exprs: []interface{}{
											&labeledExpr{
												pos:   position{line: 317, col: 18, offset: 12524},
												label: "attribute",
												expr: &choiceExpr{
													pos: position{line: 317, col: 29, offset: 12535},
													alternatives: []interface{}{
														&actionExpr{
															pos: position{line: 325, col: 21, offset: 12710},
															run: (*parser).callonList9,
															expr: &litMatcher{
																pos:        position{line: 325, col: 21, offset: 12710},
																val:        "[horizontal]",
																ignoreCase: false,
															},
														},
														&actionExpr{
															pos: position{line: 321, col: 11, offset: 12611},
															run: (*parser).callonList11,
															expr: &seqExpr{
																pos: position{line: 321, col: 11, offset: 12611},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 321, col: 11, offset: 12611},
																		val:        "[#",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 321, col: 16, offset: 12616},
																		label: "id",
																		expr: &actionExpr{
																			pos: position{line: 701, col: 7, offset: 29885},
																			run: (*parser).callonList15,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 701, col: 7, offset: 29885},
																				expr: &seqExpr{
																					pos: position{line: 701, col: 8, offset: 29886},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 701, col: 8, offset: 29886},
																							expr: &choiceExpr{
																								pos: position{line: 717, col: 12, offset: 30188},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 717, col: 12, offset: 30188},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 717, col: 21, offset: 30197},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 701, col: 17, offset: 29895},
																							expr: &choiceExpr{
																								pos: position{line: 713, col: 7, offset: 30126},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 713, col: 7, offset: 30126},
																										val:        " ",
																										ignoreCase: false,
																									},
																									&actionExpr{
																										pos: position{line: 713, col: 13, offset: 30132},
																										run: (*parser).callonList25,
																										expr: &litMatcher{
																											pos:        position{line: 713, col: 13, offset: 30132},
																											val:        "\t",
																											ignoreCase: false,
																										},
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 701, col: 21, offset: 29899},
																							expr: &litMatcher{
																								pos:        position{line: 701, col: 22, offset: 29900},
																								val:        "[",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 701, col: 26, offset: 29904},
																							expr: &litMatcher{
																								pos:        position{line: 701, col: 27, offset: 29905},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 701, col: 31, offset: 29909},
																							expr: &litMatcher{
																								pos:        position{line: 701, col: 32, offset: 29910},
																								val:        "<<",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 701, col: 37, offset: 29915},
																							expr: &litMatcher{
																								pos:        position{line: 701, col: 38, offset: 29916},
																								val:        ">>",
																								ignoreCase: false,
																							},
																						},
																						&anyMatcher{
																							line: 701, col: 42, offset: 29920,
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 321, col: 24, offset: 12624},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
													},
												},
											},
											&choiceExpr{
												pos: position{line: 717, col: 12, offset: 30188},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 717, col: 12, offset: 30188},
														val:        "\r\n",
														ignoreCase: false,
													},
													&charClassMatcher{
														pos:        position{line: 717, col: 21, offset: 30197},
														val:        "[\\r\\n]",
														chars:      []rune{'\r', '\n'},
														ignoreCase: false,
														inverted:   false,
													},
												},
											},
										},
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 311, col: 5, offset: 12333},
							label: "elements",
							expr: &ruleRefExpr{
								pos:  position{line: 311, col: 14, offset: 12342},
								name: "ListItems",
							},
						},
					},
				},
			},
		},
		{
			name: "ListItems",
			pos:  position{line: 315, col: 1, offset: 12436},
			expr: &oneOrMoreExpr{
				pos: position{line: 315, col: 14, offset: 12449},
				expr: &choiceExpr{
					pos: position{line: 315, col: 15, offset: 12450},
					alternatives: []interface{}{
						&ruleRefExpr{
							pos:  position{line: 315, col: 15, offset: 12450},
							name: "OrderedListItem",
						},
						&ruleRefExpr{
							pos:  position{line: 315, col: 33, offset: 12468},
							name: "UnorderedListItem",
						},
						&ruleRefExpr{
							pos:  position{line: 315, col: 53, offset: 12488},
							name: "LabeledListItem",
						},
					},
				},
			},
		},
		{
			name: "ListParagraph",
			pos:  position{line: 329, col: 1, offset: 12793},
			expr: &actionExpr{
				pos: position{line: 329, col: 19, offset: 12811},
				run: (*parser).callonListParagraph1,
				expr: &labeledExpr{
					pos:   position{line: 329, col: 19, offset: 12811},
					label: "lines",
					expr: &oneOrMoreExpr{
						pos: position{line: 329, col: 25, offset: 12817},
						expr: &seqExpr{
							pos: position{line: 330, col: 5, offset: 12823},
							exprs: []interface{}{
								&notExpr{
									pos: position{line: 330, col: 5, offset: 12823},
									expr: &actionExpr{
										pos: position{line: 355, col: 26, offset: 13676},
										run: (*parser).callonListParagraph6,
										expr: &seqExpr{
											pos: position{line: 355, col: 26, offset: 13676},
											exprs: []interface{}{
												&zeroOrMoreExpr{
													pos: position{line: 355, col: 26, offset: 13676},
													expr: &choiceExpr{
														pos: position{line: 713, col: 7, offset: 30126},
														alternatives: []interface{}{
															&litMatcher{
																pos:        position{line: 713, col: 7, offset: 30126},
																val:        " ",
																ignoreCase: false,
															},
															&actionExpr{
																pos: position{line: 713, col: 13, offset: 30132},
																run: (*parser).callonListParagraph11,
																expr: &litMatcher{
																	pos:        position{line: 713, col: 13, offset: 30132},
																	val:        "\t",
																	ignoreCase: false,
																},
															},
														},
													},
												},
												&labeledExpr{
													pos:   position{line: 355, col: 30, offset: 13680},
													label: "prefix",
													expr: &choiceExpr{
														pos: position{line: 357, col: 5, offset: 13735},
														alternatives: []interface{}{
															&actionExpr{
																pos: position{line: 357, col: 5, offset: 13735},
																run: (*parser).callonListParagraph15,
																expr: &litMatcher{
																	pos:        position{line: 357, col: 5, offset: 13735},
																	val:        ".....",
																	ignoreCase: false,
																},
															},
															&actionExpr{
																pos: position{line: 359, col: 9, offset: 13848},
																run: (*parser).callonListParagraph17,
																expr: &litMatcher{
																	pos:        position{line: 359, col: 9, offset: 13848},
																	val:        "....",
																	ignoreCase: false,
																},
															},
															&actionExpr{
																pos: position{line: 361, col: 9, offset: 13959},
																run: (*parser).callonListParagraph19,
																expr: &litMatcher{
																	pos:        position{line: 361, col: 9, offset: 13959},
																	val:        "...",
																	ignoreCase: false,
																},
															},
															&actionExpr{
																pos: position{line: 363, col: 9, offset: 14068},
																run: (*parser).callonListParagraph21,
																expr: &litMatcher{
																	pos:        position{line: 363, col: 9, offset: 14068},
																	val:        "..",
																	ignoreCase: false,
																},
															},
															&actionExpr{
																pos: position{line: 365, col: 9, offset: 14175},
																run: (*parser).callonListParagraph23,
																expr: &litMatcher{
																	pos:        position{line: 365, col: 9, offset: 14175},
																	val:        ".",
																	ignoreCase: false,
																},
															},
															&actionExpr{
																pos: position{line: 368, col: 9, offset: 14302},
																run: (*parser).callonListParagraph25,
																expr: &seqExpr{
																	pos: position{line: 368, col: 9, offset: 14302},
																	exprs: []interface{}{
																		&oneOrMoreExpr{
																			pos: position{line: 368, col: 9, offset: 14302},
																			expr: &charClassMatcher{
																				pos:        position{line: 368, col: 10, offset: 14303},
																				val:        "[0-9]",
																				ranges:     []rune{'0', '9'},
																				ignoreCase: false,
																				inverted:   false,
																			},
																		},
																		&litMatcher{
																			pos:        position{line: 368, col: 18, offset: 14311},
																			val:        ".",
																			ignoreCase: false,
																		},
																	},
																},
															},
															&actionExpr{
																pos: position{line: 370, col: 9, offset: 14414},
																run: (*parser).callonListParagraph30,
																expr: &seqExpr{
																	pos: position{line: 370, col: 9, offset: 14414},
																	exprs: []interface{}{
																		&oneOrMoreExpr{
																			pos: position{line: 370, col: 9, offset: 14414},
																			expr: &charClassMatcher{
																				pos:        position{line: 370, col: 10, offset: 14415},
																				val:        "[a-z]",
																				ranges:     []rune{'a', 'z'},
																				ignoreCase: false,
																				inverted:   false,
																			},
																		},
																		&litMatcher{
																			pos:        position{line: 370, col: 18, offset: 14423},
																			val:        ".",
																			ignoreCase: false,
																		},
																	},
																},
															},
															&actionExpr{
																pos: position{line: 372, col: 9, offset: 14529},
																run: (*parser).callonListParagraph35,
																expr: &seqExpr{
																	pos: position{line: 372, col: 9, offset: 14529},
																	exprs: []interface{}{
																		&oneOrMoreExpr{
																			pos: position{line: 372, col: 9, offset: 14529},
																			expr: &charClassMatcher{
																				pos:        position{line: 372, col: 10, offset: 14530},
																				val:        "[A-Z]",
																				ranges:     []rune{'A', 'Z'},
																				ignoreCase: false,
																				inverted:   false,
																			},
																		},
																		&litMatcher{
																			pos:        position{line: 372, col: 18, offset: 14538},
																			val:        ".",
																			ignoreCase: false,
																		},
																	},
																},
															},
															&actionExpr{
																pos: position{line: 374, col: 9, offset: 14644},
																run: (*parser).callonListParagraph40,
																expr: &seqExpr{
																	pos: position{line: 374, col: 9, offset: 14644},
																	exprs: []interface{}{
																		&oneOrMoreExpr{
																			pos: position{line: 374, col: 9, offset: 14644},
																			expr: &charClassMatcher{
																				pos:        position{line: 374, col: 10, offset: 14645},
																				val:        "[a-z]",
																				ranges:     []rune{'a', 'z'},
																				ignoreCase: false,
																				inverted:   false,
																			},
																		},
																		&litMatcher{
																			pos:        position{line: 374, col: 18, offset: 14653},
																			val:        ")",
																			ignoreCase: false,
																		},
																	},
																},
															},
															&actionExpr{
																pos: position{line: 376, col: 9, offset: 14759},
																run: (*parser).callonListParagraph45,
																expr: &seqExpr{
																	pos: position{line: 376, col: 9, offset: 14759},
																	exprs: []interface{}{
																		&oneOrMoreExpr{
																			pos: position{line: 376, col: 9, offset: 14759},
																			expr: &charClassMatcher{
																				pos:        position{line: 376, col: 10, offset: 14760},
																				val:        "[A-Z]",
																				ranges:     []rune{'A', 'Z'},
																				ignoreCase: false,
																				inverted:   false,
																			},
																		},
																		&litMatcher{
																			pos:        position{line: 376, col: 18, offset: 14768},
																			val:        ")",
																			ignoreCase: false,
																		},
																	},
																},
															},
														},
													},
												},
												&oneOrMoreExpr{
													pos: position{line: 378, col: 8, offset: 14873},
													expr: &choiceExpr{
														pos: position{line: 713, col: 7, offset: 30126},
														alternatives: []interface{}{
															&litMatcher{
																pos:        position{line: 713, col: 7, offset: 30126},
																val:        " ",
																ignoreCase: false,
															},
															&actionExpr{
																pos: position{line: 713, col: 13, offset: 30132},
																run: (*parser).callonListParagraph53,
																expr: &litMatcher{
																	pos:        position{line: 713, col: 13, offset: 30132},
																	val:        "\t",
																	ignoreCase: false,
																},
															},
														},
													},
												},
											},
										},
									},
								},
								&notExpr{
									pos: position{line: 331, col: 5, offset: 12853},
									expr: &actionExpr{
										pos: position{line: 393, col: 28, offset: 15526},
										run: (*parser).callonListParagraph56,
										expr: &seqExpr{
											pos: position{line: 393, col: 28, offset: 15526},
											exprs: []interface{}{
												&zeroOrMoreExpr{
													pos: position{line: 393, col: 28, offset: 15526},
													expr: &choiceExpr{
														pos: position{line: 713, col: 7, offset: 30126},
														alternatives: []interface{}{
															&litMatcher{
																pos:        position{line: 713, col: 7, offset: 30126},
																val:        " ",
																ignoreCase: false,
															},
															&actionExpr{
																pos: position{line: 713, col: 13, offset: 30132},
																run: (*parser).callonListParagraph61,
																expr: &litMatcher{
																	pos:        position{line: 713, col: 13, offset: 30132},
																	val:        "\t",
																	ignoreCase: false,
																},
															},
														},
													},
												},
												&labeledExpr{
													pos:   position{line: 393, col: 32, offset: 15530},
													label: "prefix",
													expr: &choiceExpr{
														pos: position{line: 394, col: 5, offset: 15543},
														alternatives: []interface{}{
															&actionExpr{
																pos: position{line: 394, col: 5, offset: 15543},
																run: (*parser).callonListParagraph65,
																expr: &litMatcher{
																	pos:        position{line: 394, col: 5, offset: 15543},
																	val:        "*****",
																	ignoreCase: false,
																},
															},
															&actionExpr{
																pos: position{line: 397, col: 7, offset: 15703},
																run: (*parser).callonListParagraph67,
																expr: &litMatcher{
																	pos:        position{line: 397, col: 7, offset: 15703},
																	val:        "****",
																	ignoreCase: false,
																},
															},
															&actionExpr{
																pos: position{line: 400, col: 7, offset: 15862},
																run: (*parser).callonListParagraph69,
																expr: &litMatcher{
																	pos:        position{line: 400, col: 7, offset: 15862},
																	val:        "***",
																	ignoreCase: false,
																},
															},
															&actionExpr{
																pos: position{line: 403, col: 7, offset: 16021},
																run: (*parser).callonListParagraph71,
																expr: &litMatcher{
																	pos:        position{line: 403, col: 7, offset: 16021},
																	val:        "**",
																	ignoreCase: false,
																},
															},
															&actionExpr{
																pos: position{line: 406, col: 7, offset: 16177},
																run: (*parser).callonListParagraph73,
																expr: &litMatcher{
																	pos:        position{line: 406, col: 7, offset: 16177},
																	val:        "*",
																	ignoreCase: false,
																},
															},
															&actionExpr{
																pos: position{line: 409, col: 7, offset: 16331},
																run: (*parser).callonListParagraph75,
																expr: &litMatcher{
																	pos:        position{line: 409, col: 7, offset: 16331},
																	val:        "-",
																	ignoreCase: false,
																},
															},
														},
													},
												},
												&oneOrMoreExpr{
													pos: position{line: 411, col: 12, offset: 16472},
													expr: &choiceExpr{
														pos: position{line: 713, col: 7, offset: 30126},
														alternatives: []interface{}{
															&litMatcher{
																pos:        position{line: 713, col: 7, offset: 30126},
																val:        " ",
																ignoreCase: false,
															},
															&actionExpr{
																pos: position{line: 713, col: 13, offset: 30132},
																run: (*parser).callonListParagraph80,
																expr: &litMatcher{
																	pos:        position{line: 713, col: 13, offset: 30132},
																	val:        "\t",
																	ignoreCase: false,
																},
															},
														},
													},
												},
											},
										},
									},
								},
								&notExpr{
									pos: position{line: 332, col: 5, offset: 12885},
									expr: &seqExpr{
										pos: position{line: 332, col: 7, offset: 12887},
										exprs: []interface{}{
											&actionExpr{
												pos: position{line: 428, col: 24, offset: 17285},
												run: (*parser).callonListParagraph84,
												expr: &labeledExpr{
													pos:   position{line: 428, col: 24, offset: 17285},
													label: "term",
													expr: &zeroOrMoreExpr{
														pos: position{line: 428, col: 29, offset: 17290},
														expr: &seqExpr{
															pos: position{line: 428, col: 30, offset: 17291},
															exprs: []interface{}{
																&notExpr{
																	pos: position{line: 428, col: 30, offset: 17291},
																	expr: &choiceExpr{
																		pos: position{line: 717, col: 12, offset: 30188},
																		alternatives: []interface{}{
																			&litMatcher{
																				pos:        position{line: 717, col: 12, offset: 30188},
																				val:        "\r\n",
																				ignoreCase: false,
																			},
																			&charClassMatcher{
																				pos:        position{line: 717, col: 21, offset: 30197},
																				val:        "[\\r\\n]",
																				chars:      []rune{'\r', '\n'},
																				ignoreCase: false,
																				inverted:   false,
																			},
																		},
																	},
																},
																&notExpr{
																	pos: position{line: 428, col: 39, offset: 17300},
																	expr: &litMatcher{
																		pos:        position{line: 428, col: 40, offset: 17301},
																		val:        "::",
																		ignoreCase: false,
																	},
																},
																&anyMatcher{
																	line: 428, col: 45, offset: 17306,
																},
															},
														},
													},
												},
											},
											&litMatcher{
												pos:        position{line: 433, col: 30, offset: 17426},
												val:        "::",
												ignoreCase: false,
											},
											&oneOrMoreExpr{
												pos: position{line: 433, col: 35, offset: 17431},
												expr: &choiceExpr{
													pos: position{line: 433, col: 36, offset: 17432},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 713, col: 7, offset: 30126},
															val:        " ",
															ignoreCase: false,
														},
														&actionExpr{
															pos: position{line: 713, col: 13, offset: 30132},
															run: (*parser).callonListParagraph99,
															expr: &litMatcher{
																pos:        position{line: 713, col: 13, offset: 30132},
																val:        "\t",
																ignoreCase: false,
															},
														},
														&litMatcher{
															pos:        position{line: 717, col: 12, offset: 30188},
															val:        "\r\n",
															ignoreCase: false,
														},
														&charClassMatcher{
															pos:        position{line: 717, col: 21, offset: 30197},
															val:        "[\\r\\n]",
															chars:      []rune{'\r', '\n'},
															ignoreCase: false,
															inverted:   false,
														},
													},
												},
											},
										},
									},
								},
								&notExpr{
									pos: position{line: 333, col: 5, offset: 12938},
									expr: &actionExpr{
										pos: position{line: 340, col: 25, offset: 13122},
										run: (*parser).callonListParagraph104,
										expr: &seqExpr{
											pos: position{line: 340, col: 25, offset: 13122},
											exprs: []interface{}{
												&litMatcher{
													pos:        position{line: 340, col: 25, offset: 13122},
													val:        "+",
													ignoreCase: false,
												},
												&zeroOrMoreExpr{
													pos: position{line: 340, col: 29, offset: 13126},
													expr: &choiceExpr{
														pos: position{line: 713, col: 7, offset: 30126},
														alternatives: []interface{}{
															&litMatcher{
																pos:        position{line: 713, col: 7, offset: 30126},
																val:        " ",
																ignoreCase: false,
															},
															&actionExpr{
																pos: position{line: 713, col: 13, offset: 30132},
																run: (*parser).callonListParagraph110,
																expr: &litMatcher{
																	pos:        position{line: 713, col: 13, offset: 30132},
																	val:        "\t",
																	ignoreCase: false,
																},
															},
														},
													},
												},
												&choiceExpr{
													pos: position{line: 721, col: 8, offset: 30228},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 717, col: 12, offset: 30188},
															val:        "\r\n",
															ignoreCase: false,
														},
														&charClassMatcher{
															pos:        position{line: 717, col: 21, offset: 30197},
															val:        "[\\r\\n]",
															chars:      []rune{'\r', '\n'},
															ignoreCase: false,
															inverted:   false,
														},
														&notExpr{
															pos: position{line: 719, col: 8, offset: 30217},
															expr: &anyMatcher{
																line: 719, col: 9, offset: 30218,
															},
														},
													},
												},
											},
										},
									},
								},
								&notExpr{
									pos: position{line: 334, col: 5, offset: 12967},
									expr: &actionExpr{
										pos: position{line: 120, col: 21, offset: 5018},
										run: (*parser).callonListParagraph118,
										expr: &seqExpr{
											pos: position{line: 120, col: 21, offset: 5018},
											exprs: []interface{}{
												&labeledExpr{
													pos:   position{line: 120, col: 21, offset: 5018},
													label: "attr",
													expr: &choiceExpr{
														pos: position{line: 120, col: 27, offset: 5024},
														alternatives: []interface{}{
															&actionExpr{
																pos: position{line: 124, col: 14, offset: 5203},
																run: (*parser).callonListParagraph122,
																expr: &labeledExpr{
																	pos:   position{line: 124, col: 14, offset: 5203},
																	label: "id",
																	expr: &actionExpr{
																		pos: position{line: 130, col: 20, offset: 5333},
																		run: (*parser).callonListParagraph124,
																		expr: &seqExpr{
																			pos: position{line: 130, col: 20, offset: 5333},
																			exprs: []interface{}{
																				&litMatcher{
																					pos:        position{line: 130, col: 20, offset: 5333},
																					val:        "[[",
																					ignoreCase: false,
																				},
																				&labeledExpr{
																					pos:   position{line: 130, col: 25, offset: 5338},
																					label: "id",
																					expr: &actionExpr{
																						pos: position{line: 701, col: 7, offset: 29885},
																						run: (*parser).callonListParagraph128,
																						expr: &oneOrMoreExpr{
																							pos: position{line: 701, col: 7, offset: 29885},
																							expr: &seqExpr{
																								pos: position{line: 701, col: 8, offset: 29886},
																								exprs: []interface{}{
																									&notExpr{
																										pos: position{line: 701, col: 8, offset: 29886},
																										expr: &choiceExpr{
																											pos: position{line: 717, col: 12, offset: 30188},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 717, col: 12, offset: 30188},
																													val:        "\r\n",
																													ignoreCase: false,
																												},
																												&charClassMatcher{
																													pos:        position{line: 717, col: 21, offset: 30197},
																													val:        "[\\r\\n]",
																													chars:      []rune{'\r', '\n'},
																													ignoreCase: false,
																													inverted:   false,
																												},
																											},
																										},
																									},
																									&notExpr{
																										pos: position{line: 701, col: 17, offset: 29895},
																										expr: &choiceExpr{
																											pos: position{line: 713, col: 7, offset: 30126},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 713, col: 7, offset: 30126},
																													val:        " ",
																													ignoreCase: false,
																												},
																												&actionExpr{
																													pos: position{line: 713, col: 13, offset: 30132},
																													run: (*parser).callonListParagraph138,
																													expr: &litMatcher{
																														pos:        position{line: 713, col: 13, offset: 30132},
																														val:        "\t",
																														ignoreCase: false,
																													},
																												},
																											},
																										},
																									},
																									&notExpr{
																										pos: position{line: 701, col: 21, offset: 29899},
																										expr: &litMatcher{
																											pos:        position{line: 701, col: 22, offset: 29900},
																											val:        "[",
																											ignoreCase: false,
																										},
																									},
																									&notExpr{
																										pos: position{line: 701, col: 26, offset: 29904},
																										expr: &litMatcher{
																											pos:        position{line: 701, col: 27, offset: 29905},
																											val:        "]",
																											ignoreCase: false,
																										},
																									},
																									&notExpr{
																										pos: position{line: 701, col: 31, offset: 29909},
																										expr: &litMatcher{
																											pos:        position{line: 701, col: 32, offset: 29910},
																											val:        "<<",
																											ignoreCase: false,
																										},
																									},
																									&notExpr{
																										pos: position{line: 701, col: 37, offset: 29915},
																										expr: &litMatcher{
																											pos:        position{line: 701, col: 38, offset: 29916},
																											val:        ">>",
																											ignoreCase: false,
																										},
																									},
																									&anyMatcher{
																										line: 701, col: 42, offset: 29920,
																									},
																								},
																							},
																						},
																					},
																				},
																				&litMatcher{
																					pos:        position{line: 130, col: 33, offset: 5346},
																					val:        "]]",
																					ignoreCase: false,
																				},
																			},
																		},
																	},
																},
															},
															&actionExpr{
																pos: position{line: 126, col: 5, offset: 5249},
																run: (*parser).callonListParagraph150,
																expr: &seqExpr{
																	pos: position{line: 126, col: 5, offset: 5249},
																	exprs: []interface{}{
																		&litMatcher{
																			pos:        position{line: 126, col: 5, offset: 5249},
																			val:        "[#",
																			ignoreCase: false,
																		},
																		&labeledExpr{
																			pos:   position{line: 126, col: 10, offset: 5254},
																			label: "id",
																			expr: &actionExpr{
																				pos: position{line: 701, col: 7, offset: 29885},
																				run: (*parser).callonListParagraph154,
																				expr: &oneOrMoreExpr{
																					pos: position{line: 701, col: 7, offset: 29885},
																					expr: &seqExpr{
																						pos: position{line: 701, col: 8, offset: 29886},
																						exprs: []interface{}{
																							&notExpr{
																								pos: position{line: 701, col: 8, offset: 29886},
																								expr: &choiceExpr{
																									pos: position{line: 717, col: 12, offset: 30188},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 717, col: 12, offset: 30188},
																											val:        "\r\n",
																											ignoreCase: false,
																										},
																										&charClassMatcher{
																											pos:        position{line: 717, col: 21, offset: 30197},
																											val:        "[\\r\\n]",
																											chars:      []rune{'\r', '\n'},
																											ignoreCase: false,
																											inverted:   false,
																										},
																									},
																								},
																							},
																							&notExpr{
																								pos: position{line: 701, col: 17, offset: 29895},
																								expr: &choiceExpr{
																									pos: position{line: 713, col: 7, offset: 30126},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 713, col: 7, offset: 30126},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 713, col: 13, offset: 30132},
																											run: (*parser).callonListParagraph164,
																											expr: &litMatcher{
																												pos:        position{line: 713, col: 13, offset: 30132},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																							&notExpr{
																								pos: position{line: 701, col: 21, offset: 29899},
																								expr: &litMatcher{
																									pos:        position{line: 701, col: 22, offset: 29900},
																									val:        "[",
																									ignoreCase: false,
																								},
																							},
																							&notExpr{
																								pos: position{line: 701, col: 26, offset: 29904},
																								expr: &litMatcher{
																									pos:        position{line: 701, col: 27, offset: 29905},
																									val:        "]",
																									ignoreCase: false,
																								},
																							},
																							&notExpr{
																								pos: position{line: 701, col: 31, offset: 29909},
																								expr: &litMatcher{
																									pos:        position{line: 701, col: 32, offset: 29910},
																									val:        "<<",
																									ignoreCase: false,
																								},
																							},
																							&notExpr{
																								pos: position{line: 701, col: 37, offset: 29915},
																								expr: &litMatcher{
																									pos:        position{line: 701, col: 38, offset: 29916},
																									val:        ">>",
																									ignoreCase: false,
																								},
																							},
																							&anyMatcher{
																								line: 701, col: 42, offset: 29920,
																							},
																						},
																					},
																				},
																			},
																		},
																		&litMatcher{
																			pos:        position{line: 126, col: 18, offset: 5262},
																			val:        "]",
																			ignoreCase: false,
																		},
																	},
																},
															},
															&actionExpr{
																pos: position{line: 136, col: 17, offset: 5557},
																run: (*parser).callonListParagraph176,
																expr: &seqExpr{
																	pos: position{line: 136, col: 17, offset: 5557},
																	exprs: []interface{}{
																		&litMatcher{
																			pos:        position{line: 136, col: 17, offset: 5557},
																			val:        ".",
																			ignoreCase: false,
																		},
																		&notExpr{
																			pos: position{line: 136, col: 21, offset: 5561},
																			expr: &litMatcher{
																				pos:        position{line: 136, col: 22, offset: 5562},
																				val:        ".",
																				ignoreCase: false,
																			},
																		},
																		&notExpr{
																			pos: position{line: 136, col: 26, offset: 5566},
																			expr: &choiceExpr{
																				pos: position{line: 713, col: 7, offset: 30126},
																				alternatives: []interface{}{
																					&litMatcher{
																						pos:        position{line: 713, col: 7, offset: 30126},
																						val:        " ",
																						ignoreCase: false,
																					},
																					&actionExpr{
																						pos: position{line: 713, col: 13, offset: 30132},
																						run: (*parser).callonListParagraph184,
																						expr: &litMatcher{
																							pos:        position{line: 713, col: 13, offset: 30132},
																							val:        "\t",
																							ignoreCase: false,
																						},
																					},
																				},
																			},
																		},
																		&labeledExpr{
																			pos:   position{line: 136, col: 30, offset: 5570},
																			label: "title",
																			expr: &oneOrMoreExpr{
																				pos: position{line: 136, col: 36, offset: 5576},
																				expr: &seqExpr{
																					pos: position{line: 136, col: 37, offset: 5577},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 136, col: 37, offset: 5577},
																							expr: &choiceExpr{
																								pos: position{line: 717, col: 12, offset: 30188},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 717, col: 12, offset: 30188},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 717, col: 21, offset: 30197},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																						},
																						&anyMatcher{
																							line: 136, col: 46, offset: 5586,
																						},
																					},
																				},
																			},
																		},
																	},
																},
															},
															&actionExpr{
																pos: position{line: 141, col: 30, offset: 5760},
																run: (*parser).callonListParagraph194,
																expr: &seqExpr{
																	pos: position{line: 141, col: 30, offset: 5760},
																	exprs: []interface{}{
																		&litMatcher{
																			pos:        position{line: 141, col: 30, offset: 5760},
																			val:        "[",
																			ignoreCase: false,
																		},
																		&labeledExpr{
																			pos:   position{line: 141, col: 34, offset: 5764},
																			label: "k",
																			expr: &choiceExpr{
																				pos: position{line: 442, col: 19, offset: 17830},
																				alternatives: []interface{}{
																					&actionExpr{
																						pos: position{line: 442, col: 19, offset: 17830},
																						run: (*parser).callonListParagraph199,
																						expr: &litMatcher{
																							pos:        position{line: 442, col: 19, offset: 17830},
																							val:        "TIP",
																							ignoreCase: false,
																						},
																					},
																					&actionExpr{
																						pos: position{line: 444, col: 5, offset: 17868},
																						run: (*parser).callonListParagraph201,
																						expr: &litMatcher{
																							pos:        position{line: 444, col: 5, offset: 17868},
																							val:        "NOTE",
																							ignoreCase: false,
																						},
																					},
																					&actionExpr{
																						pos: position{line: 446, col: 5, offset: 17908},
																						run: (*parser).callonListParagraph203,
																						expr: &litMatcher{
																							pos:        position{line: 446, col: 5, offset: 17908},
																							val:        "IMPORTANT",
																							ignoreCase: false,
																						},
																					},
																					&actionExpr{
																						pos: position{line: 448, col: 5, offset: 17958},
																						run: (*parser).callonListParagraph205,
																						expr: &litMatcher{
																							pos:        position{line: 448, col: 5, offset: 17958},
																							val:        "WARNING",
																							ignoreCase: false,
																						},
																					},
																					&actionExpr{
																						pos: position{line: 450, col: 5, offset: 18004},
																						run: (*parser).callonListParagraph207,
																						expr: &litMatcher{
																							pos:        position{line: 450, col: 5, offset: 18004},
																							val:        "CAUTION",
																							ignoreCase: false,
																						},
																					},
																				},
																			},
																		},
																		&litMatcher{
																			pos:        position{line: 141, col: 53, offset: 5783},
																			val:        "]",
																			ignoreCase: false,
																		},
																	},
																},
															},
															&actionExpr{
																pos: position{line: 146, col: 19, offset: 5896},
																run: (*parser).callonListParagraph210,
																expr: &seqExpr{
																	pos: position{line: 146, col: 19, offset: 5896},
																	exprs: []interface{}{
																		&litMatcher{
																			pos:        position{line: 146, col: 19, offset: 5896},
																			val:        "[",
																			ignoreCase: false,
																		},
																		&labeledExpr{
																			pos:   position{line: 146, col: 23, offset: 5900},
																			label: "attribute",
																			expr: &choiceExpr{
																				pos: position{line: 150, col: 21, offset: 6095},
																				alternatives: []interface{}{
																					&actionExpr{
																						pos: position{line: 150, col: 21, offset: 6095},
																						run: (*parser).callonListParagraph215,
																						expr: &seqExpr{
																							pos: position{line: 150, col: 21, offset: 6095},
																							exprs: []interface{}{
																								&labeledExpr{
																									pos:   position{line: 150, col: 21, offset: 6095},
																									label: "key",
																									expr: &actionExpr{
																										pos: position{line: 162, col: 17, offset: 6664},
																										run: (*parser).callonListParagraph218,
																										expr: &seqExpr{
																											pos: position{line: 162, col: 17, offset: 6664},
																											exprs: []interface{}{
																												&labeledExpr{
																													pos:   position{line: 162, col: 17, offset: 6664},
																													label: "key",
																													expr: &oneOrMoreExpr{
																														pos: position{line: 162, col: 22, offset: 6669},
																														expr: &seqExpr{
																															pos: position{line: 162, col: 23, offset: 6670},
																															exprs: []interface{}{
																																&notExpr{
																																	pos: position{line: 162, col: 23, offset: 6670},
																																	expr: &choiceExpr{
																																		pos: position{line: 713, col: 7, offset: 30126},
																																		alternatives: []interface{}{
																																			&litMatcher{
																																				pos:        position{line: 713, col: 7, offset: 30126},
																																				val:        " ",
																																				ignoreCase: false,
																																			},
																																			&actionExpr{
																																				pos: position{line: 713, col: 13, offset: 30132},
																																				run: (*parser).callonListParagraph226,
																																				expr: &litMatcher{
																																					pos:        position{line: 713, col: 13, offset: 30132},
																																					val:        "\t",
																																					ignoreCase: false,
																																				},
																																			},
																																		},
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 162, col: 27, offset: 6674},
																																	expr: &litMatcher{
																																		pos:        position{line: 162, col: 28, offset: 6675},
																																		val:        "=",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 162, col: 32, offset: 6679},
																																	expr: &litMatcher{
																																		pos:        position{line: 162, col: 33, offset: 6680},
																																		val:        ",",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 162, col: 37, offset: 6684},
																																	expr: &litMatcher{
																																		pos:        position{line: 162, col: 38, offset: 6685},
																																		val:        "]",
																																		ignoreCase: false,
																																	},
																																},
																																&anyMatcher{
																																	line: 162, col: 42, offset: 6689,
																																},
																															},
																														},
																													},
																												},
																												&zeroOrMoreExpr{
																													pos: position{line: 162, col: 46, offset: 6693},
																													expr: &choiceExpr{
																														pos: position{line: 713, col: 7, offset: 30126},
																														alternatives: []interface{}{
																															&litMatcher{
																																pos:        position{line: 713, col: 7, offset: 30126},
																																val:        " ",
																																ignoreCase: false,
																															},
																															&actionExpr{
																																pos: position{line: 713, col: 13, offset: 30132},
																																run: (*parser).callonListParagraph238,
																																expr: &litMatcher{
																																	pos:        position{line: 713, col: 13, offset: 30132},
																																	val:        "\t",
																																	ignoreCase: false,
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&litMatcher{
																									pos:        position{line: 150, col: 40, offset: 6114},
																									val:        "=",
																									ignoreCase: false,
																								},
																								&labeledExpr{
																									pos:   position{line: 150, col: 44, offset: 6118},
																									label: "value",
																									expr: &actionExpr{
																										pos: position{line: 167, col: 19, offset: 6793},
																										run: (*parser).callonListParagraph242,
																										expr: &seqExpr{
																											pos: position{line: 167, col: 19, offset: 6793},
																											exprs: []interface{}{
																												&zeroOrMoreExpr{
																													pos: position{line: 167, col: 19, offset: 6793},
																													expr: &choiceExpr{
																														pos: position{line: 713, col: 7, offset: 30126},
																														alternatives: []interface{}{
																															&litMatcher{
																																pos:        position{line: 713, col: 7, offset: 30126},
																																val:        " ",
																																ignoreCase: false,
																															},
																															&actionExpr{
																																pos: position{line: 713, col: 13, offset: 30132},
																																run: (*parser).callonListParagraph247,
																																expr: &litMatcher{
																																	pos:        position{line: 713, col: 13, offset: 30132},
																																	val:        "\t",
																																	ignoreCase: false,
																																},
																															},
																														},
																													},
																												},
																												&labeledExpr{
																													pos:   position{line: 167, col: 23, offset: 6797},
																													label: "value",
																													expr: &zeroOrMoreExpr{
																														pos: position{line: 167, col: 29, offset: 6803},
																														expr: &seqExpr{
																															pos: position{line: 167, col: 30, offset: 6804},
																															exprs: []interface{}{
																																&notExpr{
																																	pos: position{line: 167, col: 30, offset: 6804},
																																	expr: &choiceExpr{
																																		pos: position{line: 713, col: 7, offset: 30126},
																																		alternatives: []interface{}{
																																			&litMatcher{
																																				pos:        position{line: 713, col: 7, offset: 30126},
																																				val:        " ",
																																				ignoreCase: false,
																																			},
																																			&actionExpr{
																																				pos: position{line: 713, col: 13, offset: 30132},
																																				run: (*parser).callonListParagraph255,
																																				expr: &litMatcher{
																																					pos:        position{line: 713, col: 13, offset: 30132},
																																					val:        "\t",
																																					ignoreCase: false,
																																				},
																																			},
																																		},
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 167, col: 34, offset: 6808},
																																	expr: &litMatcher{
																																		pos:        position{line: 167, col: 35, offset: 6809},
																																		val:        "=",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 167, col: 39, offset: 6813},
																																	expr: &litMatcher{
																																		pos:        position{line: 167, col: 40, offset: 6814},
																																		val:        "]",
																																		ignoreCase: false,
																																	},
																																},
																																&anyMatcher{
																																	line: 167, col: 44, offset: 6818,
																																},
																															},
																														},
																													},
																												},
																												&zeroOrMoreExpr{
																													pos: position{line: 167, col: 48, offset: 6822},
																													expr: &choiceExpr{
																														pos: position{line: 713, col: 7, offset: 30126},
																														alternatives: []interface{}{
																															&litMatcher{
																																pos:        position{line: 713, col: 7, offset: 30126},
																																val:        " ",
																																ignoreCase: false,
																															},
																															&actionExpr{
																																pos: position{line: 713, col: 13, offset: 30132},
																																run: (*parser).callonListParagraph265,
																																expr: &litMatcher{
																																	pos:        position{line: 713, col: 13, offset: 30132},
																																	val:        "\t",
																																	ignoreCase: false,
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																					&actionExpr{
																						pos: position{line: 152, col: 5, offset: 6244},
																						run: (*parser).callonListParagraph267,
																						expr: &labeledExpr{
																							pos:   position{line: 152, col: 5, offset: 6244},
																							label: "key",
																							expr: &actionExpr{
																								pos: position{line: 162, col: 17, offset: 6664},
																								run: (*parser).callonListParagraph269,
																								expr: &seqExpr{
																									pos: position{line: 162, col: 17, offset: 6664},
																									exprs: []interface{}{
																										&labeledExpr{
																											pos:   position{line: 162, col: 17, offset: 6664},
																											label: "key",
																											expr: &oneOrMoreExpr{
																												pos: position{line: 162, col: 22, offset: 6669},
																												expr: &seqExpr{
																													pos: position{line: 162, col: 23, offset: 6670},
																													exprs: []interface{}{
																														&notExpr{
																															pos: position{line: 162, col: 23, offset: 6670},
																															expr: &choiceExpr{
																																pos: position{line: 713, col: 7, offset: 30126},
																																alternatives: []interface{}{
																																	&litMatcher{
																																		pos:        position{line: 713, col: 7, offset: 30126},
																																		val:        " ",
																																		ignoreCase: false,
																																	},
																																	&actionExpr{
																																		pos: position{line: 713, col: 13, offset: 30132},
																																		run: (*parser).callonListParagraph277,
																																		expr: &litMatcher{
																																			pos:        position{line: 713, col: 13, offset: 30132},
																																			val:        "\t",
																																			ignoreCase: false,
																																		},
																																	},
																																},
																															},
																														},
																														&notExpr{
																															pos: position{line: 162, col: 27, offset: 6674},
																															expr: &litMatcher{
																																pos:        position{line: 162, col: 28, offset: 6675},
																																val:        "=",
																																ignoreCase: false,
																															},
																														},
																														&notExpr{
																															pos: position{line: 162, col: 32, offset: 6679},
																															expr: &litMatcher{
																																pos:        position{line: 162, col: 33, offset: 6680},
																																val:        ",",
																																ignoreCase: false,
																															},
																														},
																														&notExpr{
																															pos: position{line: 162, col: 37, offset: 6684},
																															expr: &litMatcher{
																																pos:        position{line: 162, col: 38, offset: 6685},
																																val:        "]",
																																ignoreCase: false,
																															},
																														},
																														&anyMatcher{
																															line: 162, col: 42, offset: 6689,
																														},
																													},
																												},
																											},
																										},
																										&zeroOrMoreExpr{
																											pos: position{line: 162, col: 46, offset: 6693},
																											expr: &choiceExpr{
																												pos: position{line: 713, col: 7, offset: 30126},
																												alternatives: []interface{}{
																													&litMatcher{
																														pos:        position{line: 713, col: 7, offset: 30126},
																														val:        " ",
																														ignoreCase: false,
																													},
																													&actionExpr{
																														pos: position{line: 713, col: 13, offset: 30132},
																														run: (*parser).callonListParagraph289,
																														expr: &litMatcher{
																															pos:        position{line: 713, col: 13, offset: 30132},
																															val:        "\t",
																															ignoreCase: false,
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																		&labeledExpr{
																			pos:   position{line: 146, col: 52, offset: 5929},
																			label: "attributes",
																			expr: &zeroOrMoreExpr{
																				pos: position{line: 146, col: 63, offset: 5940},
																				expr: &choiceExpr{
																					pos: position{line: 156, col: 26, offset: 6376},
																					alternatives: []interface{}{
																						&actionExpr{
																							pos: position{line: 156, col: 26, offset: 6376},
																							run: (*parser).callonListParagraph294,
																							expr: &seqExpr{
																								pos: position{line: 156, col: 26, offset: 6376},
																								exprs: []interface{}{
																									&litMatcher{
																										pos:        position{line: 156, col: 26, offset: 6376},
																										val:        ",",
																										ignoreCase: false,
																									},
																									&zeroOrMoreExpr{
																										pos: position{line: 156, col: 30, offset: 6380},
																										expr: &choiceExpr{
																											pos: position{line: 713, col: 7, offset: 30126},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 713, col: 7, offset: 30126},
																													val:        " ",
																													ignoreCase: false,
																												},
																												&actionExpr{
																													pos: position{line: 713, col: 13, offset: 30132},
																													run: (*parser).callonListParagraph300,
																													expr: &litMatcher{
																														pos:        position{line: 713, col: 13, offset: 30132},
																														val:        "\t",
																														ignoreCase: false,
																													},
																												},
																											},
																										},
																									},
																									&labeledExpr{
																										pos:   position{line: 156, col: 34, offset: 6384},
																										label: "key",
																										expr: &actionExpr{
																											pos: position{line: 162, col: 17, offset: 6664},
																											run: (*parser).callonListParagraph303,
																											expr: &seqExpr{
																												pos: position{line: 162, col: 17, offset: 6664},
																												exprs: []interface{}{
																													&labeledExpr{
																														pos:   position{line: 162, col: 17, offset: 6664},
																														label: "key",
																														expr: &oneOrMoreExpr{
																															pos: position{line: 162, col: 22, offset: 6669},
																															expr: &seqExpr{
																																pos: position{line: 162, col: 23, offset: 6670},
																																exprs: []interface{}{
																																	&notExpr{
																																		pos: position{line: 162, col: 23, offset: 6670},
																																		expr: &choiceExpr{
																																			pos: position{line: 713, col: 7, offset: 30126},
																																			alternatives: []interface{}{
																																				&litMatcher{
																																					pos:        position{line: 713, col: 7, offset: 30126},
																																					val:        " ",
																																					ignoreCase: false,
																																				},
																																				&actionExpr{
																																					pos: position{line: 713, col: 13, offset: 30132},
																																					run: (*parser).callonListParagraph311,
																																					expr: &litMatcher{
																																						pos:        position{line: 713, col: 13, offset: 30132},
																																						val:        "\t",
																																						ignoreCase: false,
																																					},
																																				},
																																			},
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 162, col: 27, offset: 6674},
																																		expr: &litMatcher{
																																			pos:        position{line: 162, col: 28, offset: 6675},
																																			val:        "=",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 162, col: 32, offset: 6679},
																																		expr: &litMatcher{
																																			pos:        position{line: 162, col: 33, offset: 6680},
																																			val:        ",",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 162, col: 37, offset: 6684},
																																		expr: &litMatcher{
																																			pos:        position{line: 162, col: 38, offset: 6685},
																																			val:        "]",
																																			ignoreCase: false,
																																		},
																																	},
																																	&anyMatcher{
																																		line: 162, col: 42, offset: 6689,
																																	},
																																},
																															},
																														},
																													},
																													&zeroOrMoreExpr{
																														pos: position{line: 162, col: 46, offset: 6693},
																														expr: &choiceExpr{
																															pos: position{line: 713, col: 7, offset: 30126},
																															alternatives: []interface{}{
																																&litMatcher{
																																	pos:        position{line: 713, col: 7, offset: 30126},
																																	val:        " ",
																																	ignoreCase: false,
																																},
																																&actionExpr{
																																	pos: position{line: 713, col: 13, offset: 30132},
																																	run: (*parser).callonListParagraph323,
																																	expr: &litMatcher{
																																		pos:        position{line: 713, col: 13, offset: 30132},
																																		val:        "\t",
																																		ignoreCase: false,
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																									&litMatcher{
																										pos:        position{line: 156, col: 53, offset: 6403},
																										val:        "=",
																										ignoreCase: false,
																									},
																									&labeledExpr{
																										pos:   position{line: 156, col: 57, offset: 6407},
																										label: "value",
																										expr: &actionExpr{
																											pos: position{line: 167, col: 19, offset: 6793},
																											run: (*parser).callonListParagraph327,
																											expr: &seqExpr{
																												pos: position{line: 167, col: 19, offset: 6793},
																												exprs: []interface{}{
																													&zeroOrMoreExpr{
																														pos: position{line: 167, col: 19, offset: 6793},
																														expr: &choiceExpr{
																															pos: position{line: 713, col: 7, offset: 30126},
																															alternatives: []interface{}{
																																&litMatcher{
																																	pos:        position{line: 713, col: 7, offset: 30126},
																																	val:        " ",
																																	ignoreCase: false,
																																},
																																&actionExpr{
																																	pos: position{line: 713, col: 13, offset: 30132},
																																	run: (*parser).callonListParagraph332,
																																	expr: &litMatcher{
																																		pos:        position{line: 713, col: 13, offset: 30132},
																																		val:        "\t",
																																		ignoreCase: false,
																																	},
																																},
																															},
																														},
																													},
																													&labeledExpr{
																														pos:   position{line: 167, col: 23, offset: 6797},
																														label: "value",
																														expr: &zeroOrMoreExpr{
																															pos: position{line: 167, col: 29, offset: 6803},
																															expr: &seqExpr{
																																pos: position{line: 167, col: 30, offset: 6804},
																																exprs: []interface{}{
																																	&notExpr{
																																		pos: position{line: 167, col: 30, offset: 6804},
																																		expr: &choiceExpr{
																																			pos: position{line: 713, col: 7, offset: 30126},
																																			alternatives: []interface{}{
																																				&litMatcher{
																																					pos:        position{line: 713, col: 7, offset: 30126},
																																					val:        " ",
																																					ignoreCase: false,
																																				},
																																				&actionExpr{
																																					pos: position{line: 713, col: 13, offset: 30132},
																																					run: (*parser).callonListParagraph340,
																																					expr: &litMatcher{
																																						pos:        position{line: 713, col: 13, offset: 30132},
																																						val:        "\t",
																																						ignoreCase: false,
																																					},
																																				},
																																			},
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 167, col: 34, offset: 6808},
																																		expr: &litMatcher{
																																			pos:        position{line: 167, col: 35, offset: 6809},
																																			val:        "=",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 167, col: 39, offset: 6813},
																																		expr: &litMatcher{
																																			pos:        position{line: 167, col: 40, offset: 6814},
																																			val:        "]",
																																			ignoreCase: false,
																																		},
																																	},
																																	&anyMatcher{
																																		line: 167, col: 44, offset: 6818,
																																	},
																																},
																															},
																														},
																													},
																													&zeroOrMoreExpr{
																														pos: position{line: 167, col: 48, offset: 6822},
																														expr: &choiceExpr{
																															pos: position{line: 713, col: 7, offset: 30126},
																															alternatives: []interface{}{
																																&litMatcher{
																																	pos:        position{line: 713, col: 7, offset: 30126},
																																	val:        " ",
																																	ignoreCase: false,
																																},
																																&actionExpr{
																																	pos: position{line: 713, col: 13, offset: 30132},
																																	run: (*parser).callonListParagraph350,
																																	expr: &litMatcher{
																																		pos:        position{line: 713, col: 13, offset: 30132},
																																		val:        "\t",
																																		ignoreCase: false,
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 158, col: 5, offset: 6533},
																							run: (*parser).callonListParagraph352,
																							expr: &seqExpr{
																								pos: position{line: 158, col: 5, offset: 6533},
																								exprs: []interface{}{
																									&litMatcher{
																										pos:        position{line: 158, col: 5, offset: 6533},
																										val:        ",",
																										ignoreCase: false,
																									},
																									&zeroOrMoreExpr{
																										pos: position{line: 158, col: 9, offset: 6537},
																										expr: &choiceExpr{
																											pos: position{line: 713, col: 7, offset: 30126},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 713, col: 7, offset: 30126},
																													val:        " ",
																													ignoreCase: false,
																												},
																												&actionExpr{
																													pos: position{line: 713, col: 13, offset: 30132},
																													run: (*parser).callonListParagraph358,
																													expr: &litMatcher{
																														pos:        position{line: 713, col: 13, offset: 30132},
																														val:        "\t",
																														ignoreCase: false,
																													},
																												},
																											},
																										},
																									},
																									&labeledExpr{
																										pos:   position{line: 158, col: 13, offset: 6541},
																										label: "key",
																										expr: &actionExpr{
																											pos: position{line: 162, col: 17, offset: 6664},
																											run: (*parser).callonListParagraph361,
																											expr: &seqExpr{
																												pos: position{line: 162, col: 17, offset: 6664},
																												exprs: []interface{}{
																													&labeledExpr{
																														pos:   position{line: 162, col: 17, offset: 6664},
																														label: "key",
																														expr: &oneOrMoreExpr{
																															pos: position{line: 162, col: 22, offset: 6669},
																															expr: &seqExpr{
																																pos: position{line: 162, col: 23, offset: 6670},
																																exprs: []interface{}{
																																	&notExpr{
																																		pos: position{line: 162, col: 23, offset: 6670},
																																		expr: &choiceExpr{
																																			pos: position{line: 713, col: 7, offset: 30126},
																																			alternatives: []interface{}{
																																				&litMatcher{
																																					pos:        position{line: 713, col: 7, offset: 30126},
																																					val:        " ",
																																					ignoreCase: false,
																																				},
																																				&actionExpr{
																																					pos: position{line: 713, col: 13, offset: 30132},
																																					run: (*parser).callonListParagraph369,
																																					expr: &litMatcher{
																																						pos:        position{line: 713, col: 13, offset: 30132},
																																						val:        "\t",
																																						ignoreCase: false,
																																					},
																																				},
																																			},
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 162, col: 27, offset: 6674},
																																		expr: &litMatcher{
																																			pos:        position{line: 162, col: 28, offset: 6675},
																																			val:        "=",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 162, col: 32, offset: 6679},
																																		expr: &litMatcher{
																																			pos:        position{line: 162, col: 33, offset: 6680},
																																			val:        ",",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 162, col: 37, offset: 6684},
																																		expr: &litMatcher{
																																			pos:        position{line: 162, col: 38, offset: 6685},
																																			val:        "]",
																																			ignoreCase: false,
																																		},
																																	},
																																	&anyMatcher{
																																		line: 162, col: 42, offset: 6689,
																																	},
																																},
																															},
																														},
																													},
																													&zeroOrMoreExpr{
																														pos: position{line: 162, col: 46, offset: 6693},
																														expr: &choiceExpr{
																															pos: position{line: 713, col: 7, offset: 30126},
																															alternatives: []interface{}{
																																&litMatcher{
																																	pos:        position{line: 713, col: 7, offset: 30126},
																																	val:        " ",
																																	ignoreCase: false,
																																},
																																&actionExpr{
																																	pos: position{line: 713, col: 13, offset: 30132},
																																	run: (*parser).callonListParagraph381,
																																	expr: &litMatcher{
																																		pos:        position{line: 713, col: 13, offset: 30132},
																																		val:        "\t",
																																		ignoreCase: false,
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																		&litMatcher{
																			pos:        position{line: 146, col: 89, offset: 5966},
																			val:        "]",
																			ignoreCase: false,
																		},
																	},
																},
															},
														},
													},
												},
												&zeroOrMoreExpr{
													pos: position{line: 120, col: 98, offset: 5095},
													expr: &choiceExpr{
														pos: position{line: 713, col: 7, offset: 30126},
														alternatives: []interface{}{
															&litMatcher{
																pos:        position{line: 713, col: 7, offset: 30126},
																val:        " ",
																ignoreCase: false,
															},
															&actionExpr{
																pos: position{line: 713, col: 13, offset: 30132},
																run: (*parser).callonListParagraph387,
																expr: &litMatcher{
																	pos:        position{line: 713, col: 13, offset: 30132},
																	val:        "\t",
																	ignoreCase: false,
																},
															},
														},
													},
												},
												&choiceExpr{
													pos: position{line: 721, col: 8, offset: 30228},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 717, col: 12, offset: 30188},
															val:        "\r\n",
															ignoreCase: false,
														},
														&charClassMatcher{
															pos:        position{line: 717, col: 21, offset: 30197},
															val:        "[\\r\\n]",
															chars:      []rune{'\r', '\n'},
															ignoreCase: false,
															inverted:   false,
														},
														&notExpr{
															pos: position{line: 719, col: 8, offset: 30217},
															expr: &anyMatcher{
																line: 719, col: 9, offset: 30218,
															},
														},
													},
												},
											},
										},
									},
								},
								&notExpr{
									pos: position{line: 335, col: 5, offset: 12991},
									expr: &choiceExpr{
										pos: position{line: 622, col: 19, offset: 26697},
										alternatives: []interface{}{
											&litMatcher{
												pos:        position{line: 676, col: 26, offset: 29225},
												val:        "....",
												ignoreCase: false,
											},
											&litMatcher{
												pos:        position{line: 624, col: 25, offset: 26815},
												val:        "```",
												ignoreCase: false,
											},
											&litMatcher{
												pos:        position{line: 630, col: 26, offset: 27122},
												val:        "----",
												ignoreCase: false,
											},
											&litMatcher{
												pos:        position{line: 636, col: 26, offset: 27434},
												val:        "====",
												ignoreCase: false,
											},
										},
									},
								},
								&ruleRefExpr{
									pos:  position{line: 336, col: 5, offset: 13013},
									name: "InlineElements",
								},
								&choiceExpr{
									pos: position{line: 721, col: 8, offset: 30228},
									alternatives: []interface{}{
										&litMatcher{
											pos:        position{line: 717, col: 12, offset: 30188},
											val:        "\r\n",
											ignoreCase: false,
										},
										&charClassMatcher{
											pos:        position{line: 717, col: 21, offset: 30197},
											val:        "[\\r\\n]",
											chars:      []rune{'\r', '\n'},
											ignoreCase: false,
											inverted:   false,
										},
										&notExpr{
											pos: position{line: 719, col: 8, offset: 30217},
											expr: &anyMatcher{
												line: 719, col: 9, offset: 30218,
											},
										},
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "ContinuedDocumentBlock",
			pos:  position{line: 344, col: 1, offset: 13182},
			expr: &actionExpr{
				pos: position{line: 344, col: 27, offset: 13208},
				run: (*parser).callonContinuedDocumentBlock1,
				expr: &seqExpr{
					pos: position{line: 344, col: 27, offset: 13208},
					exprs: []interface{}{
						&actionExpr{
							pos: position{line: 340, col: 25, offset: 13122},
							run: (*parser).callonContinuedDocumentBlock3,
							expr: &seqExpr{
								pos: position{line: 340, col: 25, offset: 13122},
								exprs: []interface{}{
									&litMatcher{
										pos:        position{line: 340, col: 25, offset: 13122},
										val:        "+",
										ignoreCase: false,
									},
									&zeroOrMoreExpr{
										pos: position{line: 340, col: 29, offset: 13126},
										expr: &choiceExpr{
											pos: position{line: 713, col: 7, offset: 30126},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 713, col: 7, offset: 30126},
													val:        " ",
													ignoreCase: false,
												},
												&actionExpr{
													pos: position{line: 713, col: 13, offset: 30132},
													run: (*parser).callonContinuedDocumentBlock9,
													expr: &litMatcher{
														pos:        position{line: 713, col: 13, offset: 30132},
														val:        "\t",
														ignoreCase: false,
													},
												},
											},
										},
									},
									&choiceExpr{
										pos: position{line: 721, col: 8, offset: 30228},
										alternatives: []interface{}{
											&litMatcher{
												pos:        position{line: 717, col: 12, offset: 30188},
												val:        "\r\n",
												ignoreCase: false,
											},
											&charClassMatcher{
												pos:        position{line: 717, col: 21, offset: 30197},
												val:        "[\\r\\n]",
												chars:      []rune{'\r', '\n'},
												ignoreCase: false,
												inverted:   false,
											},
											&notExpr{
												pos: position{line: 719, col: 8, offset: 30217},
												expr: &anyMatcher{
													line: 719, col: 9, offset: 30218,
												},
											},
										},
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 344, col: 48, offset: 13229},
							label: "element",
							expr: &ruleRefExpr{
								pos:  position{line: 344, col: 56, offset: 13237},
								name: "DocumentBlock",
							},
						},
					},
				},
			},
		},
		{
			name: "OrderedListItem",
			pos:  position{line: 351, col: 1, offset: 13394},
			expr: &actionExpr{
				pos: position{line: 351, col: 20, offset: 13413},
				run: (*parser).callonOrderedListItem1,
				expr: &seqExpr{
					pos: position{line: 351, col: 20, offset: 13413},
					exprs: []interface{}{
						&labeledExpr{
							pos:   position{line: 351, col: 20, offset: 13413},
							label: "attributes",
							expr: &zeroOrMoreExpr{
								pos: position{line: 351, col: 31, offset: 13424},
								expr: &actionExpr{
									pos: position{line: 120, col: 21, offset: 5018},
									run: (*parser).callonOrderedListItem5,
									expr: &seqExpr{
										pos: position{line: 120, col: 21, offset: 5018},
										exprs: []interface{}{
											&labeledExpr{
												pos:   position{line: 120, col: 21, offset: 5018},
												label: "attr",
												expr: &choiceExpr{
													pos: position{line: 120, col: 27, offset: 5024},
													alternatives: []interface{}{
														&actionExpr{
															pos: position{line: 124, col: 14, offset: 5203},
															run: (*parser).callonOrderedListItem9,
															expr: &labeledExpr{
																pos:   position{line: 124, col: 14, offset: 5203},
																label: "id",
																expr: &actionExpr{
																	pos: position{line: 130, col: 20, offset: 5333},
																	run: (*parser).callonOrderedListItem11,
																	expr: &seqExpr{
																		pos: position{line: 130, col: 20, offset: 5333},
																		exprs: []interface{}{
																			&litMatcher{
																				pos:        position{line: 130, col: 20, offset: 5333},
																				val:        "[[",
																				ignoreCase: false,
																			},
																			&labeledExpr{
																				pos:   position{line: 130, col: 25, offset: 5338},
																				label: "id",
																				expr: &actionExpr{
																					pos: position{line: 701, col: 7, offset: 29885},
																					run: (*parser).callonOrderedListItem15,
																					expr: &oneOrMoreExpr{
																						pos: position{line: 701, col: 7, offset: 29885},
																						expr: &seqExpr{
																							pos: position{line: 701, col: 8, offset: 29886},
																							exprs: []interface{}{
																								&notExpr{
																									pos: position{line: 701, col: 8, offset: 29886},
																									expr: &choiceExpr{
																										pos: position{line: 717, col: 12, offset: 30188},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 717, col: 12, offset: 30188},
																												val:        "\r\n",
																												ignoreCase: false,
																											},
																											&charClassMatcher{
																												pos:        position{line: 717, col: 21, offset: 30197},
																												val:        "[\\r\\n]",
																												chars:      []rune{'\r', '\n'},
																												ignoreCase: false,
																												inverted:   false,
																											},
																										},
																									},
																								},
																								&notExpr{
																									pos: position{line: 701, col: 17, offset: 29895},
																									expr: &choiceExpr{
																										pos: position{line: 713, col: 7, offset: 30126},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 713, col: 7, offset: 30126},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 713, col: 13, offset: 30132},
																												run: (*parser).callonOrderedListItem25,
																												expr: &litMatcher{
																													pos:        position{line: 713, col: 13, offset: 30132},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																								&notExpr{
																									pos: position{line: 701, col: 21, offset: 29899},
																									expr: &litMatcher{
																										pos:        position{line: 701, col: 22, offset: 29900},
																										val:        "[",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 701, col: 26, offset: 29904},
																									expr: &litMatcher{
																										pos:        position{line: 701, col: 27, offset: 29905},
																										val:        "]",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 701, col: 31, offset: 29909},
																									expr: &litMatcher{
																										pos:        position{line: 701, col: 32, offset: 29910},
																										val:        "<<",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 701, col: 37, offset: 29915},
																									expr: &litMatcher{
																										pos:        position{line: 701, col: 38, offset: 29916},
																										val:        ">>",
																										ignoreCase: false,
																									},
																								},
																								&anyMatcher{
																									line: 701, col: 42, offset: 29920,
																								},
																							},
																						},
																					},
																				},
																			},
																			&litMatcher{
																				pos:        position{line: 130, col: 33, offset: 5346},
																				val:        "]]",
																				ignoreCase: false,
																			},
																		},
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 126, col: 5, offset: 5249},
															run: (*parser).callonOrderedListItem37,
															expr: &seqExpr{
																pos: position{line: 126, col: 5, offset: 5249},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 126, col: 5, offset: 5249},
																		val:        "[#",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 126, col: 10, offset: 5254},
																		label: "id",
																		expr: &actionExpr{
																			pos: position{line: 701, col: 7, offset: 29885},
																			run: (*parser).callonOrderedListItem41,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 701, col: 7, offset: 29885},
																				expr: &seqExpr{
																					pos: position{line: 701, col: 8, offset: 29886},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 701, col: 8, offset: 29886},
																							expr: &choiceExpr{
																								pos: position{line: 717, col: 12, offset: 30188},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 717, col: 12, offset: 30188},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 717, col: 21, offset: 30197},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 701, col: 17, offset: 29895},
																							expr: &choiceExpr{
																								pos: position{line: 713, col: 7, offset: 30126},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 713, col: 7, offset: 30126},
																										val:        " ",
																										ignoreCase: false,
																									},
																									&actionExpr{
																										pos: position{line: 713, col: 13, offset: 30132},
																										run: (*parser).callonOrderedListItem51,
																										expr: &litMatcher{
																											pos:        position{line: 713, col: 13, offset: 30132},
																											val:        "\t",
																											ignoreCase: false,
																										},
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 701, col: 21, offset: 29899},
																							expr: &litMatcher{
																								pos:        position{line: 701, col: 22, offset: 29900},
																								val:        "[",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 701, col: 26, offset: 29904},
																							expr: &litMatcher{
																								pos:        position{line: 701, col: 27, offset: 29905},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 701, col: 31, offset: 29909},
																							expr: &litMatcher{
																								pos:        position{line: 701, col: 32, offset: 29910},
																								val:        "<<",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 701, col: 37, offset: 29915},
																							expr: &litMatcher{
																								pos:        position{line: 701, col: 38, offset: 29916},
																								val:        ">>",
																								ignoreCase: false,
																							},
																						},
																						&anyMatcher{
																							line: 701, col: 42, offset: 29920,
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 126, col: 18, offset: 5262},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 136, col: 17, offset: 5557},
															run: (*parser).callonOrderedListItem63,
															expr: &seqExpr{
																pos: position{line: 136, col: 17, offset: 5557},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 136, col: 17, offset: 5557},
																		val:        ".",
																		ignoreCase: false,
																	},
																	&notExpr{
																		pos: position{line: 136, col: 21, offset: 5561},
																		expr: &litMatcher{
																			pos:        position{line: 136, col: 22, offset: 5562},
																			val:        ".",
																			ignoreCase: false,
																		},
																	},
																	&notExpr{
																		pos: position{line: 136, col: 26, offset: 5566},
																		expr: &choiceExpr{
																			pos: position{line: 713, col: 7, offset: 30126},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 713, col: 7, offset: 30126},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 713, col: 13, offset: 30132},
																					run: (*parser).callonOrderedListItem71,
																					expr: &litMatcher{
																						pos:        position{line: 713, col: 13, offset: 30132},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 136, col: 30, offset: 5570},
																		label: "title",
																		expr: &oneOrMoreExpr{
																			pos: position{line: 136, col: 36, offset: 5576},
																			expr: &seqExpr{
																				pos: position{line: 136, col: 37, offset: 5577},
																				exprs: []interface{}{
																					&notExpr{
																						pos: position{line: 136, col: 37, offset: 5577},
																						expr: &choiceExpr{
																							pos: position{line: 717, col: 12, offset: 30188},
																							alternatives: []interface{}{
																								&litMatcher{
																									pos:        position{line: 717, col: 12, offset: 30188},
																									val:        "\r\n",
																									ignoreCase: false,
																								},
																								&charClassMatcher{
																									pos:        position{line: 717, col: 21, offset: 30197},
																									val:        "[\\r\\n]",
																									chars:      []rune{'\r', '\n'},
																									ignoreCase: false,
																									inverted:   false,
																								},
																							},
																						},
																					},
																					&anyMatcher{
																						line: 136, col: 46, offset: 5586,
																					},
																				},
																			},
																		},
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 141, col: 30, offset: 5760},
															run: (*parser).callonOrderedListItem81,
															expr: &seqExpr{
																pos: position{line: 141, col: 30, offset: 5760},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 141, col: 30, offset: 5760},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 141, col: 34, offset: 5764},
																		label: "k",
																		expr: &choiceExpr{
																			pos: position{line: 442, col: 19, offset: 17830},
																			alternatives: []interface{}{
																				&actionExpr{
																					pos: position{line: 442, col: 19, offset: 17830},
																					run: (*parser).callonOrderedListItem86,
																					expr: &litMatcher{
																						pos:        position{line: 442, col: 19, offset: 17830},
																						val:        "TIP",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 444, col: 5, offset: 17868},
																					run: (*parser).callonOrderedListItem88,
																					expr: &litMatcher{
																						pos:        position{line: 444, col: 5, offset: 17868},
																						val:        "NOTE",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 446, col: 5, offset: 17908},
																					run: (*parser).callonOrderedListItem90,
																					expr: &litMatcher{
																						pos:        position{line: 446, col: 5, offset: 17908},
																						val:        "IMPORTANT",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 448, col: 5, offset: 17958},
																					run: (*parser).callonOrderedListItem92,
																					expr: &litMatcher{
																						pos:        position{line: 448, col: 5, offset: 17958},
																						val:        "WARNING",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 450, col: 5, offset: 18004},
																					run: (*parser).callonOrderedListItem94,
																					expr: &litMatcher{
																						pos:        position{line: 450, col: 5, offset: 18004},
																						val:        "CAUTION",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 141, col: 53, offset: 5783},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 146, col: 19, offset: 5896},
															run: (*parser).callonOrderedListItem97,
															expr: &seqExpr{
																pos: position{line: 146, col: 19, offset: 5896},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 146, col: 19, offset: 5896},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 146, col: 23, offset: 5900},
																		label: "attribute",
																		expr: &choiceExpr{
																			pos: position{line: 150, col: 21, offset: 6095},
																			alternatives: []interface{}{
																				&actionExpr{
																					pos: position{line: 150, col: 21, offset: 6095},
																					run: (*parser).callonOrderedListItem102,
																					expr: &seqExpr{
																						pos: position{line: 150, col: 21, offset: 6095},
																						exprs: []interface{}{
																							&labeledExpr{
																								pos:   position{line: 150, col: 21, offset: 6095},
																								label: "key",
																								expr: &actionExpr{
																									pos: position{line: 162, col: 17, offset: 6664},
																									run: (*parser).callonOrderedListItem105,
																									expr: &seqExpr{
																										pos: position{line: 162, col: 17, offset: 6664},
																										exprs: []interface{}{
																											&labeledExpr{
																												pos:   position{line: 162, col: 17, offset: 6664},
																												label: "key",
																												expr: &oneOrMoreExpr{
																													pos: position{line: 162, col: 22, offset: 6669},
																													expr: &seqExpr{
																														pos: position{line: 162, col: 23, offset: 6670},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 162, col: 23, offset: 6670},
																																expr: &choiceExpr{
																																	pos: position{line: 713, col: 7, offset: 30126},
																																	alternatives: []interface{}{
																																		&litMatcher{
																																			pos:        position{line: 713, col: 7, offset: 30126},
																																			val:        " ",
																																			ignoreCase: false,
																																		},
																																		&actionExpr{
																																			pos: position{line: 713, col: 13, offset: 30132},
																																			run: (*parser).callonOrderedListItem113,
																																			expr: &litMatcher{
																																				pos:        position{line: 713, col: 13, offset: 30132},
																																				val:        "\t",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																},
																															},
																															&notExpr{
																																pos: position{line: 162, col: 27, offset: 6674},
																																expr: &litMatcher{
																																	pos:        position{line: 162, col: 28, offset: 6675},
																																	val:        "=",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 162, col: 32, offset: 6679},
																																expr: &litMatcher{
																																	pos:        position{line: 162, col: 33, offset: 6680},
																																	val:        ",",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 162, col: 37, offset: 6684},
																																expr: &litMatcher{
																																	pos:        position{line: 162, col: 38, offset: 6685},
																																	val:        "]",
																																	ignoreCase: false,
																																},
																															},
																															&anyMatcher{
																																line: 162, col: 42, offset: 6689,
																															},
																														},
																													},
																												},
																											},
																											&zeroOrMoreExpr{
																												pos: position{line: 162, col: 46, offset: 6693},
																												expr: &choiceExpr{
																													pos: position{line: 713, col: 7, offset: 30126},
																													alternatives: []interface{}{
																														&litMatcher{
																															pos:        position{line: 713, col: 7, offset: 30126},
																															val:        " ",
																															ignoreCase: false,
																														},
																														&actionExpr{
																															pos: position{line: 713, col: 13, offset: 30132},
																															run: (*parser).callonOrderedListItem125,
																															expr: &litMatcher{
																																pos:        position{line: 713, col: 13, offset: 30132},
																																val:        "\t",
																																ignoreCase: false,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&litMatcher{
																								pos:        position{line: 150, col: 40, offset: 6114},
																								val:        "=",
																								ignoreCase: false,
																							},
																							&labeledExpr{
																								pos:   position{line: 150, col: 44, offset: 6118},
																								label: "value",
																								expr: &actionExpr{
																									pos: position{line: 167, col: 19, offset: 6793},
																									run: (*parser).callonOrderedListItem129,
																									expr: &seqExpr{
																										pos: position{line: 167, col: 19, offset: 6793},
																										exprs: []interface{}{
																											&zeroOrMoreExpr{
																												pos: position{line: 167, col: 19, offset: 6793},
																												expr: &choiceExpr{
																													pos: position{line: 713, col: 7, offset: 30126},
																													alternatives: []interface{}{
																														&litMatcher{
																															pos:        position{line: 713, col: 7, offset: 30126},
																															val:        " ",
																															ignoreCase: false,
																														},
																														&actionExpr{
																															pos: position{line: 713, col: 13, offset: 30132},
																															run: (*parser).callonOrderedListItem134,
																															expr: &litMatcher{
																																pos:        position{line: 713, col: 13, offset: 30132},
																																val:        "\t",
																																ignoreCase: false,
																															},
																														},
																													},
																												},
																											},
																											&labeledExpr{
																												pos:   position{line: 167, col: 23, offset: 6797},
																												label: "value",
																												expr: &zeroOrMoreExpr{
																													pos: position{line: 167, col: 29, offset: 6803},
																													expr: &seqExpr{
																														pos: position{line: 167, col: 30, offset: 6804},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 167, col: 30, offset: 6804},
																																expr: &choiceExpr{
																																	pos: position{line: 713, col: 7, offset: 30126},
																																	alternatives: []interface{}{
																																		&litMatcher{
																																			pos:        position{line: 713, col: 7, offset: 30126},
																																			val:        " ",
																																			ignoreCase: false,
																																		},
																																		&actionExpr{
																																			pos: position{line: 713, col: 13, offset: 30132},
																																			run: (*parser).callonOrderedListItem142,
																																			expr: &litMatcher{
																																				pos:        position{line: 713, col: 13, offset: 30132},
																																				val:        "\t",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																},
																															},
																															&notExpr{
																																pos: position{line: 167, col: 34, offset: 6808},
																																expr: &litMatcher{
																																	pos:        position{line: 167, col: 35, offset: 6809},
																																	val:        "=",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 167, col: 39, offset: 6813},
																																expr: &litMatcher{
																																	pos:        position{line: 167, col: 40, offset: 6814},
																																	val:        "]",
																																	ignoreCase: false,
																																},
																															},
																															&anyMatcher{
																																line: 167, col: 44, offset: 6818,
																															},
																														},
																													},
																												},
																											},
																											&zeroOrMoreExpr{
																												pos: position{line: 167, col: 48, offset: 6822},
																												expr: &choiceExpr{
																													pos: position{line: 713, col: 7, offset: 30126},
																													alternatives: []interface{}{
																														&litMatcher{
																															pos:        position{line: 713, col: 7, offset: 30126},
																															val:        " ",
																															ignoreCase: false,
																														},
																														&actionExpr{
																															pos: position{line: 713, col: 13, offset: 30132},
																															run: (*parser).callonOrderedListItem152,
																															expr: &litMatcher{
																																pos:        position{line: 713, col: 13, offset: 30132},
																																val:        "\t",
																																ignoreCase: false,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																				&actionExpr{
																					pos: position{line: 152, col: 5, offset: 6244},
																					run: (*parser).callonOrderedListItem154,
																					expr: &labeledExpr{
																						pos:   position{line: 152, col: 5, offset: 6244},
																						label: "key",
																						expr: &actionExpr{
																							pos: position{line: 162, col: 17, offset: 6664},
																							run: (*parser).callonOrderedListItem156,
																							expr: &seqExpr{
																								pos: position{line: 162, col: 17, offset: 6664},
																								exprs: []interface{}{
																									&labeledExpr{
																										pos:   position{line: 162, col: 17, offset: 6664},
																										label: "key",
																										expr: &oneOrMoreExpr{
																											pos: position{line: 162, col: 22, offset: 6669},
																											expr: &seqExpr{
																												pos: position{line: 162, col: 23, offset: 6670},
																												exprs: []interface{}{
																													&notExpr{
																														pos: position{line: 162, col: 23, offset: 6670},
																														expr: &choiceExpr{
																															pos: position{line: 713, col: 7, offset: 30126},
																															alternatives: []interface{}{
																																&litMatcher{
																																	pos:        position{line: 713, col: 7, offset: 30126},
																																	val:        " ",
																																	ignoreCase: false,
																																},
																																&actionExpr{
																																	pos: position{line: 713, col: 13, offset: 30132},
																																	run: (*parser).callonOrderedListItem164,
																																	expr: &litMatcher{
																																		pos:        position{line: 713, col: 13, offset: 30132},
																																		val:        "\t",
																																		ignoreCase: false,
																																	},
																																},
																															},
																														},
																													},
																													&notExpr{
																														pos: position{line: 162, col: 27, offset: 6674},
																														expr: &litMatcher{
																															pos:        position{line: 162, col: 28, offset: 6675},
																															val:        "=",
																															ignoreCase: false,
																														},
																													},
																													&notExpr{
																														pos: position{line: 162, col: 32, offset: 6679},
																														expr: &litMatcher{
																															pos:        position{line: 162, col: 33, offset: 6680},
																															val:        ",",
																															ignoreCase: false,
																														},
																													},
																													&notExpr{
																														pos: position{line: 162, col: 37, offset: 6684},
																														expr: &litMatcher{
																															pos:        position{line: 162, col: 38, offset: 6685},
																															val:        "]",
																															ignoreCase: false,
																														},
																													},
																													&anyMatcher{
																														line: 162, col: 42, offset: 6689,
																													},
																												},
																											},
																										},
																									},
																									&zeroOrMoreExpr{
																										pos: position{line: 162, col: 46, offset: 6693},
																										expr: &choiceExpr{
																											pos: position{line: 713, col: 7, offset: 30126},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 713, col: 7, offset: 30126},
																													val:        " ",
																													ignoreCase: false,
																												},
																												&actionExpr{
																													pos: position{line: 713, col: 13, offset: 30132},
																													run: (*parser).callonOrderedListItem176,
																													expr: &litMatcher{
																														pos:        position{line: 713, col: 13, offset: 30132},
																														val:        "\t",
																														ignoreCase: false,
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 146, col: 52, offset: 5929},
																		label: "attributes",
																		expr: &zeroOrMoreExpr{
																			pos: position{line: 146, col: 63, offset: 5940},
																			expr: &choiceExpr{
																				pos: position{line: 156, col: 26, offset: 6376},
																				alternatives: []interface{}{
																					&actionExpr{
																						pos: position{line: 156, col: 26, offset: 6376},
																						run: (*parser).callonOrderedListItem181,
																						expr: &seqExpr{
																							pos: position{line: 156, col: 26, offset: 6376},
																							exprs: []interface{}{
																								&litMatcher{
																									pos:        position{line: 156, col: 26, offset: 6376},
																									val:        ",",
																									ignoreCase: false,
																								},
																								&zeroOrMoreExpr{
																									pos: position{line: 156, col: 30, offset: 6380},
																									expr: &choiceExpr{
																										pos: position{line: 713, col: 7, offset: 30126},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 713, col: 7, offset: 30126},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 713, col: 13, offset: 30132},
																												run: (*parser).callonOrderedListItem187,
																												expr: &litMatcher{
																													pos:        position{line: 713, col: 13, offset: 30132},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																								&labeledExpr{
																									pos:   position{line: 156, col: 34, offset: 6384},
																									label: "key",
																									expr: &actionExpr{
																										pos: position{line: 162, col: 17, offset: 6664},
																										run: (*parser).callonOrderedListItem190,
																										expr: &seqExpr{
																											pos: position{line: 162, col: 17, offset: 6664},
																											exprs: []interface{}{
																												&labeledExpr{
																													pos:   position{line: 162, col: 17, offset: 6664},
																													label: "key",
																													expr: &oneOrMoreExpr{
																														pos: position{line: 162, col: 22, offset: 6669},
																														expr: &seqExpr{
																															pos: position{line: 162, col: 23, offset: 6670},
																															exprs: []interface{}{
																																&notExpr{
																																	pos: position{line: 162, col: 23, offset: 6670},
																																	expr: &choiceExpr{
																																		pos: position{line: 713, col: 7, offset: 30126},
																																		alternatives: []interface{}{
																																			&litMatcher{
																																				pos:        position{line: 713, col: 7, offset: 30126},
																																				val:        " ",
																																				ignoreCase: false,
																																			},
																																			&actionExpr{
																																				pos: position{line: 713, col: 13, offset: 30132},
																																				run: (*parser).callonOrderedListItem198,
																																				expr: &litMatcher{
																																					pos:        position{line: 713, col: 13, offset: 30132},
																																					val:        "\t",
																																					ignoreCase: false,
																																				},
																																			},
																																		},
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 162, col: 27, offset: 6674},
																																	expr: &litMatcher{
																																		pos:        position{line: 162, col: 28, offset: 6675},
																																		val:        "=",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 162, col: 32, offset: 6679},
																																	expr: &litMatcher{
																																		pos:        position{line: 162, col: 33, offset: 6680},
																																		val:        ",",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 162, col: 37, offset: 6684},
																																	expr: &litMatcher{
																																		pos:        position{line: 162, col: 38, offset: 6685},
																																		val:        "]",
																																		ignoreCase: false,
																																	},
																																},
																																&anyMatcher{
																																	line: 162, col: 42, offset: 6689,
																																},
																															},
																														},
																													},
																												},
																												&zeroOrMoreExpr{
																													pos: position{line: 162, col: 46, offset: 6693},
																													expr: &choiceExpr{
																														pos: position{line: 713, col: 7, offset: 30126},
																														alternatives: []interface{}{
																															&litMatcher{
																																pos:        position{line: 713, col: 7, offset: 30126},
																																val:        " ",
																																ignoreCase: false,
																															},
																															&actionExpr{
																																pos: position{line: 713, col: 13, offset: 30132},
																																run: (*parser).callonOrderedListItem210,
																																expr: &litMatcher{
																																	pos:        position{line: 713, col: 13, offset: 30132},
																																	val:        "\t",
																																	ignoreCase: false,
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&litMatcher{
																									pos:        position{line: 156, col: 53, offset: 6403},
																									val:        "=",
																									ignoreCase: false,
																								},
																								&labeledExpr{
																									pos:   position{line: 156, col: 57, offset: 6407},
																									label: "value",
																									expr: &actionExpr{
																										pos: position{line: 167, col: 19, offset: 6793},
																										run: (*parser).callonOrderedListItem214,
																										expr: &seqExpr{
																											pos: position{line: 167, col: 19, offset: 6793},
																											exprs: []interface{}{
																												&zeroOrMoreExpr{
																													pos: position{line: 167, col: 19, offset: 6793},
																													expr: &choiceExpr{
																														pos: position{line: 713, col: 7, offset: 30126},
																														alternatives: []interface{}{
																															&litMatcher{
																																pos:        position{line: 713, col: 7, offset: 30126},
																																val:        " ",
																																ignoreCase: false,
																															},
																															&actionExpr{
																																pos: position{line: 713, col: 13, offset: 30132},
																																run: (*parser).callonOrderedListItem219,
																																expr: &litMatcher{
																																	pos:        position{line: 713, col: 13, offset: 30132},
																																	val:        "\t",
																																	ignoreCase: false,
																																},
																															},
																														},
																													},
																												},
																												&labeledExpr{
																													pos:   position{line: 167, col: 23, offset: 6797},
																													label: "value",
																													expr: &zeroOrMoreExpr{
																														pos: position{line: 167, col: 29, offset: 6803},
																														expr: &seqExpr{
																															pos: position{line: 167, col: 30, offset: 6804},
																															exprs: []interface{}{
																																&notExpr{
																																	pos: position{line: 167, col: 30, offset: 6804},
																																	expr: &choiceExpr{
																																		pos: position{line: 713, col: 7, offset: 30126},
																																		alternatives: []interface{}{
																																			&litMatcher{
																																				pos:        position{line: 713, col: 7, offset: 30126},
																																				val:        " ",
																																				ignoreCase: false,
																																			},
																																			&actionExpr{
																																				pos: position{line: 713, col: 13, offset: 30132},
																																				run: (*parser).callonOrderedListItem227,
																																				expr: &litMatcher{
																																					pos:        position{line: 713, col: 13, offset: 30132},
																																					val:        "\t",
																																					ignoreCase: false,
																																				},
																																			},
																																		},
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 167, col: 34, offset: 6808},
																																	expr: &litMatcher{
																																		pos:        position{line: 167, col: 35, offset: 6809},
																																		val:        "=",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 167, col: 39, offset: 6813},
																																	expr: &litMatcher{
																																		pos:        position{line: 167, col: 40, offset: 6814},
																																		val:        "]",
																																		ignoreCase: false,
																																	},
																																},
																																&anyMatcher{
																																	line: 167, col: 44, offset: 6818,
																																},
																															},
																														},
																													},
																												},
																												&zeroOrMoreExpr{
																													pos: position{line: 167, col: 48, offset: 6822},
																													expr: &choiceExpr{
																														pos: position{line: 713, col: 7, offset: 30126},
																														alternatives: []interface{}{
																															&litMatcher{
																																pos:        position{line: 713, col: 7, offset: 30126},
																																val:        " ",
																																ignoreCase: false,
																															},
																															&actionExpr{
																																pos: position{line: 713, col: 13, offset: 30132},
																																run: (*parser).callonOrderedListItem237,
																																expr: &litMatcher{
																																	pos:        position{line: 713, col: 13, offset: 30132},
																																	val:        "\t",
																																	ignoreCase: false,
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																					&actionExpr{
																						pos: position{line: 158, col: 5, offset: 6533},
																						run: (*parser).callonOrderedListItem239,
																						expr: &seqExpr{
																							pos: position{line: 158, col: 5, offset: 6533},
																							exprs: []interface{}{
																								&litMatcher{
																									pos:        position{line: 158, col: 5, offset: 6533},
																									val:        ",",
																									ignoreCase: false,
																								},
																								&zeroOrMoreExpr{
																									pos: position{line: 158, col: 9, offset: 6537},
																									expr: &choiceExpr{
																										pos: position{line: 713, col: 7, offset: 30126},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 713, col: 7, offset: 30126},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 713, col: 13, offset: 30132},
																												run: (*parser).callonOrderedListItem245,
																												expr: &litMatcher{
																													pos:        position{line: 713, col: 13, offset: 30132},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																								&labeledExpr{
																									pos:   position{line: 158, col: 13, offset: 6541},
																									label: "key",
																									expr: &actionExpr{
																										pos: position{line: 162, col: 17, offset: 6664},
																										run: (*parser).callonOrderedListItem248,
																										expr: &seqExpr{
																											pos: position{line: 162, col: 17, offset: 6664},
																											exprs: []interface{}{
																												&labeledExpr{
																													pos:   position{line: 162, col: 17, offset: 6664},
																													label: "key",
																													expr: &oneOrMoreExpr{
																														pos: position{line: 162, col: 22, offset: 6669},
																														expr: &seqExpr{
																															pos: position{line: 162, col: 23, offset: 6670},
																															exprs: []interface{}{
																																&notExpr{
																																	pos: position{line: 162, col: 23, offset: 6670},
																																	expr: &choiceExpr{
																																		pos: position{line: 713, col: 7, offset: 30126},
																																		alternatives: []interface{}{
																																			&litMatcher{
																																				pos:        position{line: 713, col: 7, offset: 30126},
																																				val:        " ",
																																				ignoreCase: false,
																																			},
																																			&actionExpr{
																																				pos: position{line: 713, col: 13, offset: 30132},
																																				run: (*parser).callonOrderedListItem256,
																																				expr: &litMatcher{
																																					pos:        position{line: 713, col: 13, offset: 30132},
																																					val:        "\t",
																																					ignoreCase: false,
																																				},
																																			},
																																		},
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 162, col: 27, offset: 6674},
																																	expr: &litMatcher{
																																		pos:        position{line: 162, col: 28, offset: 6675},
																																		val:        "=",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 162, col: 32, offset: 6679},
																																	expr: &litMatcher{
																																		pos:        position{line: 162, col: 33, offset: 6680},
																																		val:        ",",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 162, col: 37, offset: 6684},
																																	expr: &litMatcher{
																																		pos:        position{line: 162, col: 38, offset: 6685},
																																		val:        "]",
																																		ignoreCase: false,
																																	},
																																},
																																&anyMatcher{
																																	line: 162, col: 42, offset: 6689,
																																},
																															},
																														},
																													},
																												},
																												&zeroOrMoreExpr{
																													pos: position{line: 162, col: 46, offset: 6693},
																													expr: &choiceExpr{
																														pos: position{line: 713, col: 7, offset: 30126},
																														alternatives: []interface{}{
																															&litMatcher{
																																pos:        position{line: 713, col: 7, offset: 30126},
																																val:        " ",
																																ignoreCase: false,
																															},
																															&actionExpr{
																																pos: position{line: 713, col: 13, offset: 30132},
																																run: (*parser).callonOrderedListItem268,
																																expr: &litMatcher{
																																	pos:        position{line: 713, col: 13, offset: 30132},
																																	val:        "\t",
																																	ignoreCase: false,
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 146, col: 89, offset: 5966},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
													},
												},
											},
											&zeroOrMoreExpr{
												pos: position{line: 120, col: 98, offset: 5095},
												expr: &choiceExpr{
													pos: position{line: 713, col: 7, offset: 30126},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 713, col: 7, offset: 30126},
															val:        " ",
															ignoreCase: false,
														},
														&actionExpr{
															pos: position{line: 713, col: 13, offset: 30132},
															run: (*parser).callonOrderedListItem274,
															expr: &litMatcher{
																pos:        position{line: 713, col: 13, offset: 30132},
																val:        "\t",
																ignoreCase: false,
															},
														},
													},
												},
											},
											&choiceExpr{
												pos: position{line: 721, col: 8, offset: 30228},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 717, col: 12, offset: 30188},
														val:        "\r\n",
														ignoreCase: false,
													},
													&charClassMatcher{
														pos:        position{line: 717, col: 21, offset: 30197},
														val:        "[\\r\\n]",
														chars:      []rune{'\r', '\n'},
														ignoreCase: false,
														inverted:   false,
													},
													&notExpr{
														pos: position{line: 719, col: 8, offset: 30217},
														expr: &anyMatcher{
															line: 719, col: 9, offset: 30218,
														},
													},
												},
											},
										},
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 351, col: 51, offset: 13444},
							label: "prefix",
							expr: &actionExpr{
								pos: position{line: 355, col: 26, offset: 13676},
								run: (*parser).callonOrderedListItem282,
								expr: &seqExpr{
									pos: position{line: 355, col: 26, offset: 13676},
									exprs: []interface{}{
										&zeroOrMoreExpr{
											pos: position{line: 355, col: 26, offset: 13676},
											expr: &choiceExpr{
												pos: position{line: 713, col: 7, offset: 30126},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 713, col: 7, offset: 30126},
														val:        " ",
														ignoreCase: false,
													},
													&actionExpr{
														pos: position{line: 713, col: 13, offset: 30132},
														run: (*parser).callonOrderedListItem287,
														expr: &litMatcher{
															pos:        position{line: 713, col: 13, offset: 30132},
															val:        "\t",
															ignoreCase: false,
														},
													},
												},
											},
										},
										&labeledExpr{
											pos:   position{line: 355, col: 30, offset: 13680},
											label: "prefix",
											expr: &choiceExpr{
												pos: position{line: 357, col: 5, offset: 13735},
												alternatives: []interface{}{
													&actionExpr{
														pos: position{line: 357, col: 5, offset: 13735},
														run: (*parser).callonOrderedListItem291,
														expr: &litMatcher{
															pos:        position{line: 357, col: 5, offset: 13735},
															val:        ".....",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 359, col: 9, offset: 13848},
														run: (*parser).callonOrderedListItem293,
														expr: &litMatcher{
															pos:        position{line: 359, col: 9, offset: 13848},
															val:        "....",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 361, col: 9, offset: 13959},
														run: (*parser).callonOrderedListItem295,
														expr: &litMatcher{
															pos:        position{line: 361, col: 9, offset: 13959},
															val:        "...",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 363, col: 9, offset: 14068},
														run: (*parser).callonOrderedListItem297,
														expr: &litMatcher{
															pos:        position{line: 363, col: 9, offset: 14068},
															val:        "..",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 365, col: 9, offset: 14175},
														run: (*parser).callonOrderedListItem299,
														expr: &litMatcher{
															pos:        position{line: 365, col: 9, offset: 14175},
															val:        ".",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 368, col: 9, offset: 14302},
														run: (*parser).callonOrderedListItem301,
														expr: &seqExpr{
															pos: position{line: 368, col: 9, offset: 14302},
															exprs: []interface{}{
																&oneOrMoreExpr{
																	pos: position{line: 368, col: 9, offset: 14302},
																	expr: &charClassMatcher{
																		pos:        position{line: 368, col: 10, offset: 14303},
																		val:        "[0-9]",
																		ranges:     []rune{'0', '9'},
																		ignoreCase: false,
																		inverted:   false,
																	},
																},
																&litMatcher{
																	pos:        position{line: 368, col: 18, offset: 14311},
																	val:        ".",
																	ignoreCase: false,
																},
															},
														},
													},
													&actionExpr{
														pos: position{line: 370, col: 9, offset: 14414},
														run: (*parser).callonOrderedListItem306,
														expr: &seqExpr{
															pos: position{line: 370, col: 9, offset: 14414},
															exprs: []interface{}{
																&oneOrMoreExpr{
																	pos: position{line: 370, col: 9, offset: 14414},
																	expr: &charClassMatcher{
																		pos:        position{line: 370, col: 10, offset: 14415},
																		val:        "[a-z]",
																		ranges:     []rune{'a', 'z'},
																		ignoreCase: false,
																		inverted:   false,
																	},
																},
																&litMatcher{
																	pos:        position{line: 370, col: 18, offset: 14423},
																	val:        ".",
																	ignoreCase: false,
																},
															},
														},
													},
													&actionExpr{
														pos: position{line: 372, col: 9, offset: 14529},
														run: (*parser).callonOrderedListItem311,
														expr: &seqExpr{
															pos: position{line: 372, col: 9, offset: 14529},
															exprs: []interface{}{
																&oneOrMoreExpr{
																	pos: position{line: 372, col: 9, offset: 14529},
																	expr: &charClassMatcher{
																		pos:        position{line: 372, col: 10, offset: 14530},
																		val:        "[A-Z]",
																		ranges:     []rune{'A', 'Z'},
																		ignoreCase: false,
																		inverted:   false,
																	},
																},
																&litMatcher{
																	pos:        position{line: 372, col: 18, offset: 14538},
																	val:        ".",
																	ignoreCase: false,
																},
															},
														},
													},
													&actionExpr{
														pos: position{line: 374, col: 9, offset: 14644},
														run: (*parser).callonOrderedListItem316,
														expr: &seqExpr{
															pos: position{line: 374, col: 9, offset: 14644},
															exprs: []interface{}{
																&oneOrMoreExpr{
																	pos: position{line: 374, col: 9, offset: 14644},
																	expr: &charClassMatcher{
																		pos:        position{line: 374, col: 10, offset: 14645},
																		val:        "[a-z]",
																		ranges:     []rune{'a', 'z'},
																		ignoreCase: false,
																		inverted:   false,
																	},
																},
																&litMatcher{
																	pos:        position{line: 374, col: 18, offset: 14653},
																	val:        ")",
																	ignoreCase: false,
																},
															},
														},
													},
													&actionExpr{
														pos: position{line: 376, col: 9, offset: 14759},
														run: (*parser).callonOrderedListItem321,
														expr: &seqExpr{
															pos: position{line: 376, col: 9, offset: 14759},
															exprs: []interface{}{
																&oneOrMoreExpr{
																	pos: position{line: 376, col: 9, offset: 14759},
																	expr: &charClassMatcher{
																		pos:        position{line: 376, col: 10, offset: 14760},
																		val:        "[A-Z]",
																		ranges:     []rune{'A', 'Z'},
																		ignoreCase: false,
																		inverted:   false,
																	},
																},
																&litMatcher{
																	pos:        position{line: 376, col: 18, offset: 14768},
																	val:        ")",
																	ignoreCase: false,
																},
															},
														},
													},
												},
											},
										},
										&oneOrMoreExpr{
											pos: position{line: 378, col: 8, offset: 14873},
											expr: &choiceExpr{
												pos: position{line: 713, col: 7, offset: 30126},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 713, col: 7, offset: 30126},
														val:        " ",
														ignoreCase: false,
													},
													&actionExpr{
														pos: position{line: 713, col: 13, offset: 30132},
														run: (*parser).callonOrderedListItem329,
														expr: &litMatcher{
															pos:        position{line: 713, col: 13, offset: 30132},
															val:        "\t",
															ignoreCase: false,
														},
													},
												},
											},
										},
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 351, col: 82, offset: 13475},
							label: "content",
							expr: &ruleRefExpr{
								pos:  position{line: 351, col: 91, offset: 13484},
								name: "OrderedListItemContent",
							},
						},
						&zeroOrOneExpr{
							pos: position{line: 351, col: 115, offset: 13508},
							expr: &actionExpr{
								pos: position{line: 686, col: 14, offset: 29590},
								run: (*parser).callonOrderedListItem334,
								expr: &seqExpr{
									pos: position{line: 686, col: 14, offset: 29590},
									exprs: []interface{}{
										&notExpr{
											pos: position{line: 686, col: 14, offset: 29590},
											expr: &notExpr{
												pos: position{line: 719, col: 8, offset: 30217},
												expr: &anyMatcher{
													line: 719, col: 9, offset: 30218,
												},
											},
										},
										&zeroOrMoreExpr{
											pos: position{line: 686, col: 19, offset: 29595},
											expr: &choiceExpr{
												pos: position{line: 713, col: 7, offset: 30126},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 713, col: 7, offset: 30126},
														val:        " ",
														ignoreCase: false,
													},
													&actionExpr{
														pos: position{line: 713, col: 13, offset: 30132},
														run: (*parser).callonOrderedListItem342,
														expr: &litMatcher{
															pos:        position{line: 713, col: 13, offset: 30132},
															val:        "\t",
															ignoreCase: false,
														},
													},
												},
											},
										},
										&choiceExpr{
											pos: position{line: 721, col: 8, offset: 30228},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 717, col: 12, offset: 30188},
													val:        "\r\n",
													ignoreCase: false,
												},
												&charClassMatcher{
													pos:        position{line: 717, col: 21, offset: 30197},
													val:        "[\\r\\n]",
													chars:      []rune{'\r', '\n'},
													ignoreCase: false,
													inverted:   false,
												},
												&notExpr{
													pos: position{line: 719, col: 8, offset: 30217},
													expr: &anyMatcher{
														line: 719, col: 9, offset: 30218,
													},
												},
											},
										},
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "OrderedListItemContent",
			pos:  position{line: 382, col: 1, offset: 14913},
			expr: &actionExpr{
				pos: position{line: 382, col: 27, offset: 14939},
				run: (*parser).callonOrderedListItemContent1,
				expr: &labeledExpr{
					pos:   position{line: 382, col: 27, offset: 14939},
					label: "elements",
					expr: &seqExpr{
						pos: position{line: 382, col: 37, offset: 14949},
						exprs: []interface{}{
							&oneOrMoreExpr{
								pos: position{line: 382, col: 37, offset: 14949},
								expr: &ruleRefExpr{
									pos:  position{line: 382, col: 37, offset: 14949},
									name: "ListParagraph",
								},
							},
							&zeroOrMoreExpr{
								pos: position{line: 382, col: 52, offset: 14964},
								expr: &ruleRefExpr{
									pos:  position{line: 382, col: 52, offset: 14964},
									name: "ContinuedDocumentBlock",
								},
							},
						},
					},
				},
			},
		},
		{
			name: "UnorderedListItem",
			pos:  position{line: 389, col: 1, offset: 15291},
			expr: &actionExpr{
				pos: position{line: 389, col: 22, offset: 15312},
				run: (*parser).callonUnorderedListItem1,
				expr: &seqExpr{
					pos: position{line: 389, col: 22, offset: 15312},
					exprs: []interface{}{
						&labeledExpr{
							pos:   position{line: 389, col: 22, offset: 15312},
							label: "prefix",
							expr: &actionExpr{
								pos: position{line: 393, col: 28, offset: 15526},
								run: (*parser).callonUnorderedListItem4,
								expr: &seqExpr{
									pos: position{line: 393, col: 28, offset: 15526},
									exprs: []interface{}{
										&zeroOrMoreExpr{
											pos: position{line: 393, col: 28, offset: 15526},
											expr: &choiceExpr{
												pos: position{line: 713, col: 7, offset: 30126},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 713, col: 7, offset: 30126},
														val:        " ",
														ignoreCase: false,
													},
													&actionExpr{
														pos: position{line: 713, col: 13, offset: 30132},
														run: (*parser).callonUnorderedListItem9,
														expr: &litMatcher{
															pos:        position{line: 713, col: 13, offset: 30132},
															val:        "\t",
															ignoreCase: false,
														},
													},
												},
											},
										},
										&labeledExpr{
											pos:   position{line: 393, col: 32, offset: 15530},
											label: "prefix",
											expr: &choiceExpr{
												pos: position{line: 394, col: 5, offset: 15543},
												alternatives: []interface{}{
													&actionExpr{
														pos: position{line: 394, col: 5, offset: 15543},
														run: (*parser).callonUnorderedListItem13,
														expr: &litMatcher{
															pos:        position{line: 394, col: 5, offset: 15543},
															val:        "*****",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 397, col: 7, offset: 15703},
														run: (*parser).callonUnorderedListItem15,
														expr: &litMatcher{
															pos:        position{line: 397, col: 7, offset: 15703},
															val:        "****",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 400, col: 7, offset: 15862},
														run: (*parser).callonUnorderedListItem17,
														expr: &litMatcher{
															pos:        position{line: 400, col: 7, offset: 15862},
															val:        "***",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 403, col: 7, offset: 16021},
														run: (*parser).callonUnorderedListItem19,
														expr: &litMatcher{
															pos:        position{line: 403, col: 7, offset: 16021},
															val:        "**",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 406, col: 7, offset: 16177},
														run: (*parser).callonUnorderedListItem21,
														expr: &litMatcher{
															pos:        position{line: 406, col: 7, offset: 16177},
															val:        "*",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 409, col: 7, offset: 16331},
														run: (*parser).callonUnorderedListItem23,
														expr: &litMatcher{
															pos:        position{line: 409, col: 7, offset: 16331},
															val:        "-",
															ignoreCase: false,
														},
													},
												},
											},
										},
										&oneOrMoreExpr{
											pos: position{line: 411, col: 12, offset: 16472},
											expr: &choiceExpr{
												pos: position{line: 713, col: 7, offset: 30126},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 713, col: 7, offset: 30126},
														val:        " ",
														ignoreCase: false,
													},
													&actionExpr{
														pos: position{line: 713, col: 13, offset: 30132},
														run: (*parser).callonUnorderedListItem28,
														expr: &litMatcher{
															pos:        position{line: 713, col: 13, offset: 30132},
															val:        "\t",
															ignoreCase: false,
														},
													},
												},
											},
										},
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 389, col: 55, offset: 15345},
							label: "content",
							expr: &ruleRefExpr{
								pos:  position{line: 389, col: 64, offset: 15354},
								name: "UnorderedListItemContent",
							},
						},
						&zeroOrOneExpr{
							pos: position{line: 389, col: 90, offset: 15380},
							expr: &actionExpr{
								pos: position{line: 686, col: 14, offset: 29590},
								run: (*parser).callonUnorderedListItem33,
								expr: &seqExpr{
									pos: position{line: 686, col: 14, offset: 29590},
									exprs: []interface{}{
										&notExpr{
											pos: position{line: 686, col: 14, offset: 29590},
											expr: &notExpr{
												pos: position{line: 719, col: 8, offset: 30217},
												expr: &anyMatcher{
													line: 719, col: 9, offset: 30218,
												},
											},
										},
										&zeroOrMoreExpr{
											pos: position{line: 686, col: 19, offset: 29595},
											expr: &choiceExpr{
												pos: position{line: 713, col: 7, offset: 30126},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 713, col: 7, offset: 30126},
														val:        " ",
														ignoreCase: false,
													},
													&actionExpr{
														pos: position{line: 713, col: 13, offset: 30132},
														run: (*parser).callonUnorderedListItem41,
														expr: &litMatcher{
															pos:        position{line: 713, col: 13, offset: 30132},
															val:        "\t",
															ignoreCase: false,
														},
													},
												},
											},
										},
										&choiceExpr{
											pos: position{line: 721, col: 8, offset: 30228},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 717, col: 12, offset: 30188},
													val:        "\r\n",
													ignoreCase: false,
												},
												&charClassMatcher{
													pos:        position{line: 717, col: 21, offset: 30197},
													val:        "[\\r\\n]",
													chars:      []rune{'\r', '\n'},
													ignoreCase: false,
													inverted:   false,
												},
												&notExpr{
													pos: position{line: 719, col: 8, offset: 30217},
													expr: &anyMatcher{
														line: 719, col: 9, offset: 30218,
													},
												},
											},
										},
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "UnorderedListItemContent",
			pos:  position{line: 415, col: 1, offset: 16505},
			expr: &actionExpr{
				pos: position{line: 415, col: 29, offset: 16533},
				run: (*parser).callonUnorderedListItemContent1,
				expr: &labeledExpr{
					pos:   position{line: 415, col: 29, offset: 16533},
					label: "elements",
					expr: &seqExpr{
						pos: position{line: 415, col: 39, offset: 16543},
						exprs: []interface{}{
							&oneOrMoreExpr{
								pos: position{line: 415, col: 39, offset: 16543},
								expr: &ruleRefExpr{
									pos:  position{line: 415, col: 39, offset: 16543},
									name: "ListParagraph",
								},
							},
							&zeroOrMoreExpr{
								pos: position{line: 415, col: 54, offset: 16558},
								expr: &ruleRefExpr{
									pos:  position{line: 415, col: 54, offset: 16558},
									name: "ContinuedDocumentBlock",
								},
							},
						},
					},
				},
			},
		},
		{
			name: "LabeledListItem",
			pos:  position{line: 422, col: 1, offset: 16883},
			expr: &choiceExpr{
				pos: position{line: 422, col: 20, offset: 16902},
				alternatives: []interface{}{
					&actionExpr{
						pos: position{line: 422, col: 20, offset: 16902},
						run: (*parser).callonLabeledListItem2,
						expr: &seqExpr{
							pos: position{line: 422, col: 20, offset: 16902},
							exprs: []interface{}{
								&labeledExpr{
									pos:   position{line: 422, col: 20, offset: 16902},
									label: "term",
									expr: &actionExpr{
										pos: position{line: 428, col: 24, offset: 17285},
										run: (*parser).callonLabeledListItem5,
										expr: &labeledExpr{
											pos:   position{line: 428, col: 24, offset: 17285},
											label: "term",
											expr: &zeroOrMoreExpr{
												pos: position{line: 428, col: 29, offset: 17290},
												expr: &seqExpr{
													pos: position{line: 428, col: 30, offset: 17291},
													exprs: []interface{}{
														&notExpr{
															pos: position{line: 428, col: 30, offset: 17291},
															expr: &choiceExpr{
																pos: position{line: 717, col: 12, offset: 30188},
																alternatives: []interface{}{
																	&litMatcher{
																		pos:        position{line: 717, col: 12, offset: 30188},
																		val:        "\r\n",
																		ignoreCase: false,
																	},
																	&charClassMatcher{
																		pos:        position{line: 717, col: 21, offset: 30197},
																		val:        "[\\r\\n]",
																		chars:      []rune{'\r', '\n'},
																		ignoreCase: false,
																		inverted:   false,
																	},
																},
															},
														},
														&notExpr{
															pos: position{line: 428, col: 39, offset: 17300},
															expr: &litMatcher{
																pos:        position{line: 428, col: 40, offset: 17301},
																val:        "::",
																ignoreCase: false,
															},
														},
														&anyMatcher{
															line: 428, col: 45, offset: 17306,
														},
													},
												},
											},
										},
									},
								},
								&litMatcher{
									pos:        position{line: 433, col: 30, offset: 17426},
									val:        "::",
									ignoreCase: false,
								},
								&oneOrMoreExpr{
									pos: position{line: 433, col: 35, offset: 17431},
									expr: &choiceExpr{
										pos: position{line: 433, col: 36, offset: 17432},
										alternatives: []interface{}{
											&litMatcher{
												pos:        position{line: 713, col: 7, offset: 30126},
												val:        " ",
												ignoreCase: false,
											},
											&actionExpr{
												pos: position{line: 713, col: 13, offset: 30132},
												run: (*parser).callonLabeledListItem20,
												expr: &litMatcher{
													pos:        position{line: 713, col: 13, offset: 30132},
													val:        "\t",
													ignoreCase: false,
												},
											},
											&litMatcher{
												pos:        position{line: 717, col: 12, offset: 30188},
												val:        "\r\n",
												ignoreCase: false,
											},
											&charClassMatcher{
												pos:        position{line: 717, col: 21, offset: 30197},
												val:        "[\\r\\n]",
												chars:      []rune{'\r', '\n'},
												ignoreCase: false,
												inverted:   false,
											},
										},
									},
								},
								&labeledExpr{
									pos:   position{line: 422, col: 72, offset: 16954},
									label: "description",
									expr: &ruleRefExpr{
										pos:  position{line: 422, col: 85, offset: 16967},
										name: "LabeledListItemDescription",
									},
								},
							},
						},
					},
					&actionExpr{
						pos: position{line: 424, col: 6, offset: 17089},
						run: (*parser).callonLabeledListItem26,
						expr: &seqExpr{
							pos: position{line: 424, col: 6, offset: 17089},
							exprs: []interface{}{
								&labeledExpr{
									pos:   position{line: 424, col: 6, offset: 17089},
									label: "term",
									expr: &actionExpr{
										pos: position{line: 428, col: 24, offset: 17285},
										run: (*parser).callonLabeledListItem29,
										expr: &labeledExpr{
											pos:   position{line: 428, col: 24, offset: 17285},
											label: "term",
											expr: &zeroOrMoreExpr{
												pos: position{line: 428, col: 29, offset: 17290},
												expr: &seqExpr{
													pos: position{line: 428, col: 30, offset: 17291},
													exprs: []interface{}{
														&notExpr{
															pos: position{line: 428, col: 30, offset: 17291},
															expr: &choiceExpr{
																pos: position{line: 717, col: 12, offset: 30188},
																alternatives: []interface{}{
																	&litMatcher{
																		pos:        position{line: 717, col: 12, offset: 30188},
																		val:        "\r\n",
																		ignoreCase: false,
																	},
																	&charClassMatcher{
																		pos:        position{line: 717, col: 21, offset: 30197},
																		val:        "[\\r\\n]",
																		chars:      []rune{'\r', '\n'},
																		ignoreCase: false,
																		inverted:   false,
																	},
																},
															},
														},
														&notExpr{
															pos: position{line: 428, col: 39, offset: 17300},
															expr: &litMatcher{
																pos:        position{line: 428, col: 40, offset: 17301},
																val:        "::",
																ignoreCase: false,
															},
														},
														&anyMatcher{
															line: 428, col: 45, offset: 17306,
														},
													},
												},
											},
										},
									},
								},
								&litMatcher{
									pos:        position{line: 424, col: 33, offset: 17116},
									val:        "::",
									ignoreCase: false,
								},
								&zeroOrMoreExpr{
									pos: position{line: 424, col: 38, offset: 17121},
									expr: &choiceExpr{
										pos: position{line: 713, col: 7, offset: 30126},
										alternatives: []interface{}{
											&litMatcher{
												pos:        position{line: 713, col: 7, offset: 30126},
												val:        " ",
												ignoreCase: false,
											},
											&actionExpr{
												pos: position{line: 713, col: 13, offset: 30132},
												run: (*parser).callonLabeledListItem44,
												expr: &litMatcher{
													pos:        position{line: 713, col: 13, offset: 30132},
													val:        "\t",
													ignoreCase: false,
												},
											},
										},
									},
								},
								&choiceExpr{
									pos: position{line: 721, col: 8, offset: 30228},
									alternatives: []interface{}{
										&litMatcher{
											pos:        position{line: 717, col: 12, offset: 30188},
											val:        "\r\n",
											ignoreCase: false,
										},
										&charClassMatcher{
											pos:        position{line: 717, col: 21, offset: 30197},
											val:        "[\\r\\n]",
											chars:      []rune{'\r', '\n'},
											ignoreCase: false,
											inverted:   false,
										},
										&notExpr{
											pos: position{line: 719, col: 8, offset: 30217},
											expr: &anyMatcher{
												line: 719, col: 9, offset: 30218,
											},
										},
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "LabeledListItemDescription",
			pos:  position{line: 435, col: 1, offset: 17448},
			expr: &actionExpr{
				pos: position{line: 435, col: 31, offset: 17478},
				run: (*parser).callonLabeledListItemDescription1,
				expr: &labeledExpr{
					pos:   position{line: 435, col: 31, offset: 17478},
					label: "elements",
					expr: &zeroOrMoreExpr{
						pos: position{line: 435, col: 40, offset: 17487},
						expr: &choiceExpr{
							pos: position{line: 435, col: 41, offset: 17488},
							alternatives: []interface{}{
								&ruleRefExpr{
									pos:  position{line: 435, col: 41, offset: 17488},
									name: "ListParagraph",
								},
								&ruleRefExpr{
									pos:  position{line: 435, col: 57, offset: 17504},
									name: "ContinuedDocumentBlock",
								},
							},
						},
					},
				},
			},
		},
		{
			name: "Paragraph",
			pos:  position{line: 459, col: 1, offset: 18307},
			expr: &choiceExpr{
				pos: position{line: 461, col: 5, offset: 18354},
				alternatives: []interface{}{
					&actionExpr{
						pos: position{line: 461, col: 5, offset: 18354},
						run: (*parser).callonParagraph2,
						expr: &seqExpr{
							pos: position{line: 461, col: 5, offset: 18354},
							exprs: []interface{}{
								&labeledExpr{
									pos:   position{line: 461, col: 5, offset: 18354},
									label: "attributes",
									expr: &zeroOrMoreExpr{
										pos: position{line: 461, col: 16, offset: 18365},
										expr: &actionExpr{
											pos: position{line: 120, col: 21, offset: 5018},
											run: (*parser).callonParagraph6,
											expr: &seqExpr{
												pos: position{line: 120, col: 21, offset: 5018},
												exprs: []interface{}{
													&labeledExpr{
														pos:   position{line: 120, col: 21, offset: 5018},
														label: "attr",
														expr: &choiceExpr{
															pos: position{line: 120, col: 27, offset: 5024},
															alternatives: []interface{}{
																&actionExpr{
																	pos: position{line: 124, col: 14, offset: 5203},
																	run: (*parser).callonParagraph10,
																	expr: &labeledExpr{
																		pos:   position{line: 124, col: 14, offset: 5203},
																		label: "id",
																		expr: &actionExpr{
																			pos: position{line: 130, col: 20, offset: 5333},
																			run: (*parser).callonParagraph12,
																			expr: &seqExpr{
																				pos: position{line: 130, col: 20, offset: 5333},
																				exprs: []interface{}{
																					&litMatcher{
																						pos:        position{line: 130, col: 20, offset: 5333},
																						val:        "[[",
																						ignoreCase: false,
																					},
																					&labeledExpr{
																						pos:   position{line: 130, col: 25, offset: 5338},
																						label: "id",
																						expr: &actionExpr{
																							pos: position{line: 701, col: 7, offset: 29885},
																							run: (*parser).callonParagraph16,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 701, col: 7, offset: 29885},
																								expr: &seqExpr{
																									pos: position{line: 701, col: 8, offset: 29886},
																									exprs: []interface{}{
																										&notExpr{
																											pos: position{line: 701, col: 8, offset: 29886},
																											expr: &choiceExpr{
																												pos: position{line: 717, col: 12, offset: 30188},
																												alternatives: []interface{}{
																													&litMatcher{
																														pos:        position{line: 717, col: 12, offset: 30188},
																														val:        "\r\n",
																														ignoreCase: false,
																													},
																													&charClassMatcher{
																														pos:        position{line: 717, col: 21, offset: 30197},
																														val:        "[\\r\\n]",
																														chars:      []rune{'\r', '\n'},
																														ignoreCase: false,
																														inverted:   false,
																													},
																												},
																											},
																										},
																										&notExpr{
																											pos: position{line: 701, col: 17, offset: 29895},
																											expr: &choiceExpr{
																												pos: position{line: 713, col: 7, offset: 30126},
																												alternatives: []interface{}{
																													&litMatcher{
																														pos:        position{line: 713, col: 7, offset: 30126},
																														val:        " ",
																														ignoreCase: false,
																													},
																													&actionExpr{
																														pos: position{line: 713, col: 13, offset: 30132},
																														run: (*parser).callonParagraph26,
																														expr: &litMatcher{
																															pos:        position{line: 713, col: 13, offset: 30132},
																															val:        "\t",
																															ignoreCase: false,
																														},
																													},
																												},
																											},
																										},
																										&notExpr{
																											pos: position{line: 701, col: 21, offset: 29899},
																											expr: &litMatcher{
																												pos:        position{line: 701, col: 22, offset: 29900},
																												val:        "[",
																												ignoreCase: false,
																											},
																										},
																										&notExpr{
																											pos: position{line: 701, col: 26, offset: 29904},
																											expr: &litMatcher{
																												pos:        position{line: 701, col: 27, offset: 29905},
																												val:        "]",
																												ignoreCase: false,
																											},
																										},
																										&notExpr{
																											pos: position{line: 701, col: 31, offset: 29909},
																											expr: &litMatcher{
																												pos:        position{line: 701, col: 32, offset: 29910},
																												val:        "<<",
																												ignoreCase: false,
																											},
																										},
																										&notExpr{
																											pos: position{line: 701, col: 37, offset: 29915},
																											expr: &litMatcher{
																												pos:        position{line: 701, col: 38, offset: 29916},
																												val:        ">>",
																												ignoreCase: false,
																											},
																										},
																										&anyMatcher{
																											line: 701, col: 42, offset: 29920,
																										},
																									},
																								},
																							},
																						},
																					},
																					&litMatcher{
																						pos:        position{line: 130, col: 33, offset: 5346},
																						val:        "]]",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																},
																&actionExpr{
																	pos: position{line: 126, col: 5, offset: 5249},
																	run: (*parser).callonParagraph38,
																	expr: &seqExpr{
																		pos: position{line: 126, col: 5, offset: 5249},
																		exprs: []interface{}{
																			&litMatcher{
																				pos:        position{line: 126, col: 5, offset: 5249},
																				val:        "[#",
																				ignoreCase: false,
																			},
																			&labeledExpr{
																				pos:   position{line: 126, col: 10, offset: 5254},
																				label: "id",
																				expr: &actionExpr{
																					pos: position{line: 701, col: 7, offset: 29885},
																					run: (*parser).callonParagraph42,
																					expr: &oneOrMoreExpr{
																						pos: position{line: 701, col: 7, offset: 29885},
																						expr: &seqExpr{
																							pos: position{line: 701, col: 8, offset: 29886},
																							exprs: []interface{}{
																								&notExpr{
																									pos: position{line: 701, col: 8, offset: 29886},
																									expr: &choiceExpr{
																										pos: position{line: 717, col: 12, offset: 30188},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 717, col: 12, offset: 30188},
																												val:        "\r\n",
																												ignoreCase: false,
																											},
																											&charClassMatcher{
																												pos:        position{line: 717, col: 21, offset: 30197},
																												val:        "[\\r\\n]",
																												chars:      []rune{'\r', '\n'},
																												ignoreCase: false,
																												inverted:   false,
																											},
																										},
																									},
																								},
																								&notExpr{
																									pos: position{line: 701, col: 17, offset: 29895},
																									expr: &choiceExpr{
																										pos: position{line: 713, col: 7, offset: 30126},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 713, col: 7, offset: 30126},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 713, col: 13, offset: 30132},
																												run: (*parser).callonParagraph52,
																												expr: &litMatcher{
																													pos:        position{line: 713, col: 13, offset: 30132},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																								&notExpr{
																									pos: position{line: 701, col: 21, offset: 29899},
																									expr: &litMatcher{
																										pos:        position{line: 701, col: 22, offset: 29900},
																										val:        "[",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 701, col: 26, offset: 29904},
																									expr: &litMatcher{
																										pos:        position{line: 701, col: 27, offset: 29905},
																										val:        "]",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 701, col: 31, offset: 29909},
																									expr: &litMatcher{
																										pos:        position{line: 701, col: 32, offset: 29910},
																										val:        "<<",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 701, col: 37, offset: 29915},
																									expr: &litMatcher{
																										pos:        position{line: 701, col: 38, offset: 29916},
																										val:        ">>",
																										ignoreCase: false,
																									},
																								},
																								&anyMatcher{
																									line: 701, col: 42, offset: 29920,
																								},
																							},
																						},
																					},
																				},
																			},
																			&litMatcher{
																				pos:        position{line: 126, col: 18, offset: 5262},
																				val:        "]",
																				ignoreCase: false,
																			},
																		},
																	},
																},
																&actionExpr{
																	pos: position{line: 136, col: 17, offset: 5557},
																	run: (*parser).callonParagraph64,
																	expr: &seqExpr{
																		pos: position{line: 136, col: 17, offset: 5557},
																		exprs: []interface{}{
																			&litMatcher{
																				pos:        position{line: 136, col: 17, offset: 5557},
																				val:        ".",
																				ignoreCase: false,
																			},
																			&notExpr{
																				pos: position{line: 136, col: 21, offset: 5561},
																				expr: &litMatcher{
																					pos:        position{line: 136, col: 22, offset: 5562},
																					val:        ".",
																					ignoreCase: false,
																				},
																			},
																			&notExpr{
																				pos: position{line: 136, col: 26, offset: 5566},
																				expr: &choiceExpr{
																					pos: position{line: 713, col: 7, offset: 30126},
																					alternatives: []interface{}{
																						&litMatcher{
																							pos:        position{line: 713, col: 7, offset: 30126},
																							val:        " ",
																							ignoreCase: false,
																						},
																						&actionExpr{
																							pos: position{line: 713, col: 13, offset: 30132},
																							run: (*parser).callonParagraph72,
																							expr: &litMatcher{
																								pos:        position{line: 713, col: 13, offset: 30132},
																								val:        "\t",
																								ignoreCase: false,
																							},
																						},
																					},
																				},
																			},
																			&labeledExpr{
																				pos:   position{line: 136, col: 30, offset: 5570},
																				label: "title",
																				expr: &oneOrMoreExpr{
																					pos: position{line: 136, col: 36, offset: 5576},
																					expr: &seqExpr{
																						pos: position{line: 136, col: 37, offset: 5577},
																						exprs: []interface{}{
																							&notExpr{
																								pos: position{line: 136, col: 37, offset: 5577},
																								expr: &choiceExpr{
																									pos: position{line: 717, col: 12, offset: 30188},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 717, col: 12, offset: 30188},
																											val:        "\r\n",
																											ignoreCase: false,
																										},
																										&charClassMatcher{
																											pos:        position{line: 717, col: 21, offset: 30197},
																											val:        "[\\r\\n]",
																											chars:      []rune{'\r', '\n'},
																											ignoreCase: false,
																											inverted:   false,
																										},
																									},
																								},
																							},
																							&anyMatcher{
																								line: 136, col: 46, offset: 5586,
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																},
																&actionExpr{
																	pos: position{line: 141, col: 30, offset: 5760},
																	run: (*parser).callonParagraph82,
																	expr: &seqExpr{
																		pos: position{line: 141, col: 30, offset: 5760},
																		exprs: []interface{}{
																			&litMatcher{
																				pos:        position{line: 141, col: 30, offset: 5760},
																				val:        "[",
																				ignoreCase: false,
																			},
																			&labeledExpr{
																				pos:   position{line: 141, col: 34, offset: 5764},
																				label: "k",
																				expr: &choiceExpr{
																					pos: position{line: 442, col: 19, offset: 17830},
																					alternatives: []interface{}{
																						&actionExpr{
																							pos: position{line: 442, col: 19, offset: 17830},
																							run: (*parser).callonParagraph87,
																							expr: &litMatcher{
																								pos:        position{line: 442, col: 19, offset: 17830},
																								val:        "TIP",
																								ignoreCase: false,
																							},
																						},
																						&actionExpr{
																							pos: position{line: 444, col: 5, offset: 17868},
																							run: (*parser).callonParagraph89,
																							expr: &litMatcher{
																								pos:        position{line: 444, col: 5, offset: 17868},
																								val:        "NOTE",
																								ignoreCase: false,
																							},
																						},
																						&actionExpr{
																							pos: position{line: 446, col: 5, offset: 17908},
																							run: (*parser).callonParagraph91,
																							expr: &litMatcher{
																								pos:        position{line: 446, col: 5, offset: 17908},
																								val:        "IMPORTANT",
																								ignoreCase: false,
																							},
																						},
																						&actionExpr{
																							pos: position{line: 448, col: 5, offset: 17958},
																							run: (*parser).callonParagraph93,
																							expr: &litMatcher{
																								pos:        position{line: 448, col: 5, offset: 17958},
																								val:        "WARNING",
																								ignoreCase: false,
																							},
																						},
																						&actionExpr{
																							pos: position{line: 450, col: 5, offset: 18004},
																							run: (*parser).callonParagraph95,
																							expr: &litMatcher{
																								pos:        position{line: 450, col: 5, offset: 18004},
																								val:        "CAUTION",
																								ignoreCase: false,
																							},
																						},
																					},
																				},
																			},
																			&litMatcher{
																				pos:        position{line: 141, col: 53, offset: 5783},
																				val:        "]",
																				ignoreCase: false,
																			},
																		},
																	},
																},
																&actionExpr{
																	pos: position{line: 146, col: 19, offset: 5896},
																	run: (*parser).callonParagraph98,
																	expr: &seqExpr{
																		pos: position{line: 146, col: 19, offset: 5896},
																		exprs: []interface{}{
																			&litMatcher{
																				pos:        position{line: 146, col: 19, offset: 5896},
																				val:        "[",
																				ignoreCase: false,
																			},
																			&labeledExpr{
																				pos:   position{line: 146, col: 23, offset: 5900},
																				label: "attribute",
																				expr: &choiceExpr{
																					pos: position{line: 150, col: 21, offset: 6095},
																					alternatives: []interface{}{
																						&actionExpr{
																							pos: position{line: 150, col: 21, offset: 6095},
																							run: (*parser).callonParagraph103,
																							expr: &seqExpr{
																								pos: position{line: 150, col: 21, offset: 6095},
																								exprs: []interface{}{
																									&labeledExpr{
																										pos:   position{line: 150, col: 21, offset: 6095},
																										label: "key",
																										expr: &actionExpr{
																											pos: position{line: 162, col: 17, offset: 6664},
																											run: (*parser).callonParagraph106,
																											expr: &seqExpr{
																												pos: position{line: 162, col: 17, offset: 6664},
																												exprs: []interface{}{
																													&labeledExpr{
																														pos:   position{line: 162, col: 17, offset: 6664},
																														label: "key",
																														expr: &oneOrMoreExpr{
																															pos: position{line: 162, col: 22, offset: 6669},
																															expr: &seqExpr{
																																pos: position{line: 162, col: 23, offset: 6670},
																																exprs: []interface{}{
																																	&notExpr{
																																		pos: position{line: 162, col: 23, offset: 6670},
																																		expr: &choiceExpr{
																																			pos: position{line: 713, col: 7, offset: 30126},
																																			alternatives: []interface{}{
																																				&litMatcher{
																																					pos:        position{line: 713, col: 7, offset: 30126},
																																					val:        " ",
																																					ignoreCase: false,
																																				},
																																				&actionExpr{
																																					pos: position{line: 713, col: 13, offset: 30132},
																																					run: (*parser).callonParagraph114,
																																					expr: &litMatcher{
																																						pos:        position{line: 713, col: 13, offset: 30132},
																																						val:        "\t",
																																						ignoreCase: false,
																																					},
																																				},
																																			},
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 162, col: 27, offset: 6674},
																																		expr: &litMatcher{
																																			pos:        position{line: 162, col: 28, offset: 6675},
																																			val:        "=",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 162, col: 32, offset: 6679},
																																		expr: &litMatcher{
																																			pos:        position{line: 162, col: 33, offset: 6680},
																																			val:        ",",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 162, col: 37, offset: 6684},
																																		expr: &litMatcher{
																																			pos:        position{line: 162, col: 38, offset: 6685},
																																			val:        "]",
																																			ignoreCase: false,
																																		},
																																	},
																																	&anyMatcher{
																																		line: 162, col: 42, offset: 6689,
																																	},
																																},
																															},
																														},
																													},
																													&zeroOrMoreExpr{
																														pos: position{line: 162, col: 46, offset: 6693},
																														expr: &choiceExpr{
																															pos: position{line: 713, col: 7, offset: 30126},
																															alternatives: []interface{}{
																																&litMatcher{
																																	pos:        position{line: 713, col: 7, offset: 30126},
																																	val:        " ",
																																	ignoreCase: false,
																																},
																																&actionExpr{
																																	pos: position{line: 713, col: 13, offset: 30132},
																																	run: (*parser).callonParagraph126,
																																	expr: &litMatcher{
																																		pos:        position{line: 713, col: 13, offset: 30132},
																																		val:        "\t",
																																		ignoreCase: false,
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																									&litMatcher{
																										pos:        position{line: 150, col: 40, offset: 6114},
																										val:        "=",
																										ignoreCase: false,
																									},
																									&labeledExpr{
																										pos:   position{line: 150, col: 44, offset: 6118},
																										label: "value",
																										expr: &actionExpr{
																											pos: position{line: 167, col: 19, offset: 6793},
																											run: (*parser).callonParagraph130,
																											expr: &seqExpr{
																												pos: position{line: 167, col: 19, offset: 6793},
																												exprs: []interface{}{
																													&zeroOrMoreExpr{
																														pos: position{line: 167, col: 19, offset: 6793},
																														expr: &choiceExpr{
																															pos: position{line: 713, col: 7, offset: 30126},
																															alternatives: []interface{}{
																																&litMatcher{
																																	pos:        position{line: 713, col: 7, offset: 30126},
																																	val:        " ",
																																	ignoreCase: false,
																																},
																																&actionExpr{
																																	pos: position{line: 713, col: 13, offset: 30132},
																																	run: (*parser).callonParagraph135,
																																	expr: &litMatcher{
																																		pos:        position{line: 713, col: 13, offset: 30132},
																																		val:        "\t",
																																		ignoreCase: false,
																																	},
																																},
																															},
																														},
																													},
																													&labeledExpr{
																														pos:   position{line: 167, col: 23, offset: 6797},
																														label: "value",
																														expr: &zeroOrMoreExpr{
																															pos: position{line: 167, col: 29, offset: 6803},
																															expr: &seqExpr{
																																pos: position{line: 167, col: 30, offset: 6804},
																																exprs: []interface{}{
																																	&notExpr{
																																		pos: position{line: 167, col: 30, offset: 6804},
																																		expr: &choiceExpr{
																																			pos: position{line: 713, col: 7, offset: 30126},
																																			alternatives: []interface{}{
																																				&litMatcher{
																																					pos:        position{line: 713, col: 7, offset: 30126},
																																					val:        " ",
																																					ignoreCase: false,
																																				},
																																				&actionExpr{
																																					pos: position{line: 713, col: 13, offset: 30132},
																																					run: (*parser).callonParagraph143,
																																					expr: &litMatcher{
																																						pos:        position{line: 713, col: 13, offset: 30132},
																																						val:        "\t",
																																						ignoreCase: false,
																																					},
																																				},
																																			},
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 167, col: 34, offset: 6808},
																																		expr: &litMatcher{
																																			pos:        position{line: 167, col: 35, offset: 6809},
																																			val:        "=",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 167, col: 39, offset: 6813},
																																		expr: &litMatcher{
																																			pos:        position{line: 167, col: 40, offset: 6814},
																																			val:        "]",
																																			ignoreCase: false,
																																		},
																																	},
																																	&anyMatcher{
																																		line: 167, col: 44, offset: 6818,
																																	},
																																},
																															},
																														},
																													},
																													&zeroOrMoreExpr{
																														pos: position{line: 167, col: 48, offset: 6822},
																														expr: &choiceExpr{
																															pos: position{line: 713, col: 7, offset: 30126},
																															alternatives: []interface{}{
																																&litMatcher{
																																	pos:        position{line: 713, col: 7, offset: 30126},
																																	val:        " ",
																																	ignoreCase: false,
																																},
																																&actionExpr{
																																	pos: position{line: 713, col: 13, offset: 30132},
																																	run: (*parser).callonParagraph153,
																																	expr: &litMatcher{
																																		pos:        position{line: 713, col: 13, offset: 30132},
																																		val:        "\t",
																																		ignoreCase: false,
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 152, col: 5, offset: 6244},
																							run: (*parser).callonParagraph155,
																							expr: &labeledExpr{
																								pos:   position{line: 152, col: 5, offset: 6244},
																								label: "key",
																								expr: &actionExpr{
																									pos: position{line: 162, col: 17, offset: 6664},
																									run: (*parser).callonParagraph157,
																									expr: &seqExpr{
																										pos: position{line: 162, col: 17, offset: 6664},
																										exprs: []interface{}{
																											&labeledExpr{
																												pos:   position{line: 162, col: 17, offset: 6664},
																												label: "key",
																												expr: &oneOrMoreExpr{
																													pos: position{line: 162, col: 22, offset: 6669},
																													expr: &seqExpr{
																														pos: position{line: 162, col: 23, offset: 6670},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 162, col: 23, offset: 6670},
																																expr: &choiceExpr{
																																	pos: position{line: 713, col: 7, offset: 30126},
																																	alternatives: []interface{}{
																																		&litMatcher{
																																			pos:        position{line: 713, col: 7, offset: 30126},
																																			val:        " ",
																																			ignoreCase: false,
																																		},
																																		&actionExpr{
																																			pos: position{line: 713, col: 13, offset: 30132},
																																			run: (*parser).callonParagraph165,
																																			expr: &litMatcher{
																																				pos:        position{line: 713, col: 13, offset: 30132},
																																				val:        "\t",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																},
																															},
																															&notExpr{
																																pos: position{line: 162, col: 27, offset: 6674},
																																expr: &litMatcher{
																																	pos:        position{line: 162, col: 28, offset: 6675},
																																	val:        "=",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 162, col: 32, offset: 6679},
																																expr: &litMatcher{
																																	pos:        position{line: 162, col: 33, offset: 6680},
																																	val:        ",",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 162, col: 37, offset: 6684},
																																expr: &litMatcher{
																																	pos:        position{line: 162, col: 38, offset: 6685},
																																	val:        "]",
																																	ignoreCase: false,
																																},
																															},
																															&anyMatcher{
																																line: 162, col: 42, offset: 6689,
																															},
																														},
																													},
																												},
																											},
																											&zeroOrMoreExpr{
																												pos: position{line: 162, col: 46, offset: 6693},
																												expr: &choiceExpr{
																													pos: position{line: 713, col: 7, offset: 30126},
																													alternatives: []interface{}{
																														&litMatcher{
																															pos:        position{line: 713, col: 7, offset: 30126},
																															val:        " ",
																															ignoreCase: false,
																														},
																														&actionExpr{
																															pos: position{line: 713, col: 13, offset: 30132},
																															run: (*parser).callonParagraph177,
																															expr: &litMatcher{
																																pos:        position{line: 713, col: 13, offset: 30132},
																																val:        "\t",
																																ignoreCase: false,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																			&labeledExpr{
																				pos:   position{line: 146, col: 52, offset: 5929},
																				label: "attributes",
																				expr: &zeroOrMoreExpr{
																					pos: position{line: 146, col: 63, offset: 5940},
																					expr: &choiceExpr{
																						pos: position{line: 156, col: 26, offset: 6376},
																						alternatives: []interface{}{
																							&actionExpr{
																								pos: position{line: 156, col: 26, offset: 6376},
																								run: (*parser).callonParagraph182,
																								expr: &seqExpr{
																									pos: position{line: 156, col: 26, offset: 6376},
																									exprs: []interface{}{
																										&litMatcher{
																											pos:        position{line: 156, col: 26, offset: 6376},
																											val:        ",",
																											ignoreCase: false,
																										},
																										&zeroOrMoreExpr{
																											pos: position{line: 156, col: 30, offset: 6380},
																											expr: &choiceExpr{
																												pos: position{line: 713, col: 7, offset: 30126},
																												alternatives: []interface{}{
																													&litMatcher{
																														pos:        position{line: 713, col: 7, offset: 30126},
																														val:        " ",
																														ignoreCase: false,
																													},
																													&actionExpr{
																														pos: position{line: 713, col: 13, offset: 30132},
																														run: (*parser).callonParagraph188,
																														expr: &litMatcher{
																															pos:        position{line: 713, col: 13, offset: 30132},
																															val:        "\t",
																															ignoreCase: false,
																														},
																													},
																												},
																											},
																										},
																										&labeledExpr{
																											pos:   position{line: 156, col: 34, offset: 6384},
																											label: "key",
																											expr: &actionExpr{
																												pos: position{line: 162, col: 17, offset: 6664},
																												run: (*parser).callonParagraph191,
																												expr: &seqExpr{
																													pos: position{line: 162, col: 17, offset: 6664},
																													exprs: []interface{}{
																														&labeledExpr{
																															pos:   position{line: 162, col: 17, offset: 6664},
																															label: "key",
																															expr: &oneOrMoreExpr{
																																pos: position{line: 162, col: 22, offset: 6669},
																																expr: &seqExpr{
																																	pos: position{line: 162, col: 23, offset: 6670},
																																	exprs: []interface{}{
																																		&notExpr{
																																			pos: position{line: 162, col: 23, offset: 6670},
																																			expr: &choiceExpr{
																																				pos: position{line: 713, col: 7, offset: 30126},
																																				alternatives: []interface{}{
																																					&litMatcher{
																																						pos:        position{line: 713, col: 7, offset: 30126},
																																						val:        " ",
																																						ignoreCase: false,
																																					},
																																					&actionExpr{
																																						pos: position{line: 713, col: 13, offset: 30132},
																																						run: (*parser).callonParagraph199,
																																						expr: &litMatcher{
																																							pos:        position{line: 713, col: 13, offset: 30132},
																																							val:        "\t",
																																							ignoreCase: false,
																																						},
																																					},
																																				},
																																			},
																																		},
																																		&notExpr{
																																			pos: position{line: 162, col: 27, offset: 6674},
																																			expr: &litMatcher{
																																				pos:        position{line: 162, col: 28, offset: 6675},
																																				val:        "=",
																																				ignoreCase: false,
																																			},
																																		},
																																		&notExpr{
																																			pos: position{line: 162, col: 32, offset: 6679},
																																			expr: &litMatcher{
																																				pos:        position{line: 162, col: 33, offset: 6680},
																																				val:        ",",
																																				ignoreCase: false,
																																			},
																																		},
																																		&notExpr{
																																			pos: position{line: 162, col: 37, offset: 6684},
																																			expr: &litMatcher{
																																				pos:        position{line: 162, col: 38, offset: 6685},
																																				val:        "]",
																																				ignoreCase: false,
																																			},
																																		},
																																		&anyMatcher{
																																			line: 162, col: 42, offset: 6689,
																																		},
																																	},
																																},
																															},
																														},
																														&zeroOrMoreExpr{
																															pos: position{line: 162, col: 46, offset: 6693},
																															expr: &choiceExpr{
																																pos: position{line: 713, col: 7, offset: 30126},
																																alternatives: []interface{}{
																																	&litMatcher{
																																		pos:        position{line: 713, col: 7, offset: 30126},
																																		val:        " ",
																																		ignoreCase: false,
																																	},
																																	&actionExpr{
																																		pos: position{line: 713, col: 13, offset: 30132},
																																		run: (*parser).callonParagraph211,
																																		expr: &litMatcher{
																																			pos:        position{line: 713, col: 13, offset: 30132},
																																			val:        "\t",
																																			ignoreCase: false,
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																										&litMatcher{
																											pos:        position{line: 156, col: 53, offset: 6403},
																											val:        "=",
																											ignoreCase: false,
																										},
																										&labeledExpr{
																											pos:   position{line: 156, col: 57, offset: 6407},
																											label: "value",
																											expr: &actionExpr{
																												pos: position{line: 167, col: 19, offset: 6793},
																												run: (*parser).callonParagraph215,
																												expr: &seqExpr{
																													pos: position{line: 167, col: 19, offset: 6793},
																													exprs: []interface{}{
																														&zeroOrMoreExpr{
																															pos: position{line: 167, col: 19, offset: 6793},
																															expr: &choiceExpr{
																																pos: position{line: 713, col: 7, offset: 30126},
																																alternatives: []interface{}{
																																	&litMatcher{
																																		pos:        position{line: 713, col: 7, offset: 30126},
																																		val:        " ",
																																		ignoreCase: false,
																																	},
																																	&actionExpr{
																																		pos: position{line: 713, col: 13, offset: 30132},
																																		run: (*parser).callonParagraph220,
																																		expr: &litMatcher{
																																			pos:        position{line: 713, col: 13, offset: 30132},
																																			val:        "\t",
																																			ignoreCase: false,
																																		},
																																	},
																																},
																															},
																														},
																														&labeledExpr{
																															pos:   position{line: 167, col: 23, offset: 6797},
																															label: "value",
																															expr: &zeroOrMoreExpr{
																																pos: position{line: 167, col: 29, offset: 6803},
																																expr: &seqExpr{
																																	pos: position{line: 167, col: 30, offset: 6804},
																																	exprs: []interface{}{
																																		&notExpr{
																																			pos: position{line: 167, col: 30, offset: 6804},
																																			expr: &choiceExpr{
																																				pos: position{line: 713, col: 7, offset: 30126},
																																				alternatives: []interface{}{
																																					&litMatcher{
																																						pos:        position{line: 713, col: 7, offset: 30126},
																																						val:        " ",
																																						ignoreCase: false,
																																					},
																																					&actionExpr{
																																						pos: position{line: 713, col: 13, offset: 30132},
																																						run: (*parser).callonParagraph228,
																																						expr: &litMatcher{
																																							pos:        position{line: 713, col: 13, offset: 30132},
																																							val:        "\t",
																																							ignoreCase: false,
																																						},
																																					},
																																				},
																																			},
																																		},
																																		&notExpr{
																																			pos: position{line: 167, col: 34, offset: 6808},
																																			expr: &litMatcher{
																																				pos:        position{line: 167, col: 35, offset: 6809},
																																				val:        "=",
																																				ignoreCase: false,
																																			},
																																		},
																																		&notExpr{
																																			pos: position{line: 167, col: 39, offset: 6813},
																																			expr: &litMatcher{
																																				pos:        position{line: 167, col: 40, offset: 6814},
																																				val:        "]",
																																				ignoreCase: false,
																																			},
																																		},
																																		&anyMatcher{
																																			line: 167, col: 44, offset: 6818,
																																		},
																																	},
																																},
																															},
																														},
																														&zeroOrMoreExpr{
																															pos: position{line: 167, col: 48, offset: 6822},
																															expr: &choiceExpr{
																																pos: position{line: 713, col: 7, offset: 30126},
																																alternatives: []interface{}{
																																	&litMatcher{
																																		pos:        position{line: 713, col: 7, offset: 30126},
																																		val:        " ",
																																		ignoreCase: false,
																																	},
																																	&actionExpr{
																																		pos: position{line: 713, col: 13, offset: 30132},
																																		run: (*parser).callonParagraph238,
																																		expr: &litMatcher{
																																			pos:        position{line: 713, col: 13, offset: 30132},
																																			val:        "\t",
																																			ignoreCase: false,
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&actionExpr{
																								pos: position{line: 158, col: 5, offset: 6533},
																								run: (*parser).callonParagraph240,
																								expr: &seqExpr{
																									pos: position{line: 158, col: 5, offset: 6533},
																									exprs: []interface{}{
																										&litMatcher{
																											pos:        position{line: 158, col: 5, offset: 6533},
																											val:        ",",
																											ignoreCase: false,
																										},
																										&zeroOrMoreExpr{
																											pos: position{line: 158, col: 9, offset: 6537},
																											expr: &choiceExpr{
																												pos: position{line: 713, col: 7, offset: 30126},
																												alternatives: []interface{}{
																													&litMatcher{
																														pos:        position{line: 713, col: 7, offset: 30126},
																														val:        " ",
																														ignoreCase: false,
																													},
																													&actionExpr{
																														pos: position{line: 713, col: 13, offset: 30132},
																														run: (*parser).callonParagraph246,
																														expr: &litMatcher{
																															pos:        position{line: 713, col: 13, offset: 30132},
																															val:        "\t",
																															ignoreCase: false,
																														},
																													},
																												},
																											},
																										},
																										&labeledExpr{
																											pos:   position{line: 158, col: 13, offset: 6541},
																											label: "key",
																											expr: &actionExpr{
																												pos: position{line: 162, col: 17, offset: 6664},
																												run: (*parser).callonParagraph249,
																												expr: &seqExpr{
																													pos: position{line: 162, col: 17, offset: 6664},
																													exprs: []interface{}{
																														&labeledExpr{
																															pos:   position{line: 162, col: 17, offset: 6664},
																															label: "key",
																															expr: &oneOrMoreExpr{
																																pos: position{line: 162, col: 22, offset: 6669},
																																expr: &seqExpr{
																																	pos: position{line: 162, col: 23, offset: 6670},
																																	exprs: []interface{}{
																																		&notExpr{
																																			pos: position{line: 162, col: 23, offset: 6670},
																																			expr: &choiceExpr{
																																				pos: position{line: 713, col: 7, offset: 30126},
																																				alternatives: []interface{}{
																																					&litMatcher{
																																						pos:        position{line: 713, col: 7, offset: 30126},
																																						val:        " ",
																																						ignoreCase: false,
																																					},
																																					&actionExpr{
																																						pos: position{line: 713, col: 13, offset: 30132},
																																						run: (*parser).callonParagraph257,
																																						expr: &litMatcher{
																																							pos:        position{line: 713, col: 13, offset: 30132},
																																							val:        "\t",
																																							ignoreCase: false,
																																						},
																																					},
																																				},
																																			},
																																		},
																																		&notExpr{
																																			pos: position{line: 162, col: 27, offset: 6674},
																																			expr: &litMatcher{
																																				pos:        position{line: 162, col: 28, offset: 6675},
																																				val:        "=",
																																				ignoreCase: false,
																																			},
																																		},
																																		&notExpr{
																																			pos: position{line: 162, col: 32, offset: 6679},
																																			expr: &litMatcher{
																																				pos:        position{line: 162, col: 33, offset: 6680},
																																				val:        ",",
																																				ignoreCase: false,
																																			},
																																		},
																																		&notExpr{
																																			pos: position{line: 162, col: 37, offset: 6684},
																																			expr: &litMatcher{
																																				pos:        position{line: 162, col: 38, offset: 6685},
																																				val:        "]",
																																				ignoreCase: false,
																																			},
																																		},
																																		&anyMatcher{
																																			line: 162, col: 42, offset: 6689,
																																		},
																																	},
																																},
																															},
																														},
																														&zeroOrMoreExpr{
																															pos: position{line: 162, col: 46, offset: 6693},
																															expr: &choiceExpr{
																																pos: position{line: 713, col: 7, offset: 30126},
																																alternatives: []interface{}{
																																	&litMatcher{
																																		pos:        position{line: 713, col: 7, offset: 30126},
																																		val:        " ",
																																		ignoreCase: false,
																																	},
																																	&actionExpr{
																																		pos: position{line: 713, col: 13, offset: 30132},
																																		run: (*parser).callonParagraph269,
																																		expr: &litMatcher{
																																			pos:        position{line: 713, col: 13, offset: 30132},
																																			val:        "\t",
																																			ignoreCase: false,
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																			&litMatcher{
																				pos:        position{line: 146, col: 89, offset: 5966},
																				val:        "]",
																				ignoreCase: false,
																			},
																		},
																	},
																},
															},
														},
													},
													&zeroOrMoreExpr{
														pos: position{line: 120, col: 98, offset: 5095},
														expr: &choiceExpr{
															pos: position{line: 713, col: 7, offset: 30126},
															alternatives: []interface{}{
																&litMatcher{
																	pos:        position{line: 713, col: 7, offset: 30126},
																	val:        " ",
																	ignoreCase: false,
																},
																&actionExpr{
																	pos: position{line: 713, col: 13, offset: 30132},
																	run: (*parser).callonParagraph275,
																	expr: &litMatcher{
																		pos:        position{line: 713, col: 13, offset: 30132},
																		val:        "\t",
																		ignoreCase: false,
																	},
																},
															},
														},
													},
													&choiceExpr{
														pos: position{line: 721, col: 8, offset: 30228},
														alternatives: []interface{}{
															&litMatcher{
																pos:        position{line: 717, col: 12, offset: 30188},
																val:        "\r\n",
																ignoreCase: false,
															},
															&charClassMatcher{
																pos:        position{line: 717, col: 21, offset: 30197},
																val:        "[\\r\\n]",
																chars:      []rune{'\r', '\n'},
																ignoreCase: false,
																inverted:   false,
															},
															&notExpr{
																pos: position{line: 719, col: 8, offset: 30217},
																expr: &anyMatcher{
																	line: 719, col: 9, offset: 30218,
																},
															},
														},
													},
												},
											},
										},
									},
								},
								&notExpr{
									pos: position{line: 461, col: 36, offset: 18385},
									expr: &seqExpr{
										pos: position{line: 461, col: 38, offset: 18387},
										exprs: []interface{}{
											&oneOrMoreExpr{
												pos: position{line: 461, col: 38, offset: 18387},
												expr: &litMatcher{
													pos:        position{line: 461, col: 38, offset: 18387},
													val:        "=",
													ignoreCase: false,
												},
											},
											&oneOrMoreExpr{
												pos: position{line: 461, col: 43, offset: 18392},
												expr: &choiceExpr{
													pos: position{line: 713, col: 7, offset: 30126},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 713, col: 7, offset: 30126},
															val:        " ",
															ignoreCase: false,
														},
														&actionExpr{
															pos: position{line: 713, col: 13, offset: 30132},
															run: (*parser).callonParagraph289,
															expr: &litMatcher{
																pos:        position{line: 713, col: 13, offset: 30132},
																val:        "\t",
																ignoreCase: false,
															},
														},
													},
												},
											},
											&notExpr{
												pos: position{line: 461, col: 47, offset: 18396},
												expr: &choiceExpr{
													pos: position{line: 717, col: 12, offset: 30188},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 717, col: 12, offset: 30188},
															val:        "\r\n",
															ignoreCase: false,
														},
														&charClassMatcher{
															pos:        position{line: 717, col: 21, offset: 30197},
															val:        "[\\r\\n]",
															chars:      []rune{'\r', '\n'},
															ignoreCase: false,
															inverted:   false,
														},
													},
												},
											},
										},
									},
								},
								&labeledExpr{
									pos:   position{line: 461, col: 57, offset: 18406},
									label: "t",
									expr: &choiceExpr{
										pos: position{line: 442, col: 19, offset: 17830},
										alternatives: []interface{}{
											&actionExpr{
												pos: position{line: 442, col: 19, offset: 17830},
												run: (*parser).callonParagraph297,
												expr: &litMatcher{
													pos:        position{line: 442, col: 19, offset: 17830},
													val:        "TIP",
													ignoreCase: false,
												},
											},
											&actionExpr{
												pos: position{line: 444, col: 5, offset: 17868},
												run: (*parser).callonParagraph299,
												expr: &litMatcher{
													pos:        position{line: 444, col: 5, offset: 17868},
													val:        "NOTE",
													ignoreCase: false,
												},
											},
											&actionExpr{
												pos: position{line: 446, col: 5, offset: 17908},
												run: (*parser).callonParagraph301,
												expr: &litMatcher{
													pos:        position{line: 446, col: 5, offset: 17908},
													val:        "IMPORTANT",
													ignoreCase: false,
												},
											},
											&actionExpr{
												pos: position{line: 448, col: 5, offset: 17958},
												run: (*parser).callonParagraph303,
												expr: &litMatcher{
													pos:        position{line: 448, col: 5, offset: 17958},
													val:        "WARNING",
													ignoreCase: false,
												},
											},
											&actionExpr{
												pos: position{line: 450, col: 5, offset: 18004},
												run: (*parser).callonParagraph305,
												expr: &litMatcher{
													pos:        position{line: 450, col: 5, offset: 18004},
													val:        "CAUTION",
													ignoreCase: false,
												},
											},
										},
									},
								},
								&litMatcher{
									pos:        position{line: 461, col: 76, offset: 18425},
									val:        ": ",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 461, col: 81, offset: 18430},
									label: "lines",
									expr: &oneOrMoreExpr{
										pos: position{line: 461, col: 87, offset: 18436},
										expr: &seqExpr{
											pos: position{line: 461, col: 88, offset: 18437},
											exprs: []interface{}{
												&ruleRefExpr{
													pos:  position{line: 461, col: 88, offset: 18437},
													name: "InlineElements",
												},
												&choiceExpr{
													pos: position{line: 721, col: 8, offset: 30228},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 717, col: 12, offset: 30188},
															val:        "\r\n",
															ignoreCase: false,
														},
														&charClassMatcher{
															pos:        position{line: 717, col: 21, offset: 30197},
															val:        "[\\r\\n]",
															chars:      []rune{'\r', '\n'},
															ignoreCase: false,
															inverted:   false,
														},
														&notExpr{
															pos: position{line: 719, col: 8, offset: 30217},
															expr: &anyMatcher{
																line: 719, col: 9, offset: 30218,
															},
														},
													},
												},
											},
										},
									},
								},
							},
						},
					},
					&actionExpr{
						pos: position{line: 465, col: 5, offset: 18618},
						run: (*parser).callonParagraph317,
						expr: &seqExpr{
							pos: position{line: 465, col: 5, offset: 18618},
							exprs: []interface{}{
								&labeledExpr{
									pos:   position{line: 465, col: 5, offset: 18618},
									label: "attributes",
									expr: &zeroOrMoreExpr{
										pos: position{line: 465, col: 16, offset: 18629},
										expr: &actionExpr{
											pos: position{line: 120, col: 21, offset: 5018},
											run: (*parser).callonParagraph321,
											expr: &seqExpr{
												pos: position{line: 120, col: 21, offset: 5018},
												exprs: []interface{}{
													&labeledExpr{
														pos:   position{line: 120, col: 21, offset: 5018},
														label: "attr",
														expr: &choiceExpr{
															pos: position{line: 120, col: 27, offset: 5024},
															alternatives: []interface{}{
																&actionExpr{
																	pos: position{line: 124, col: 14, offset: 5203},
																	run: (*parser).callonParagraph325,
																	expr: &labeledExpr{
																		pos:   position{line: 124, col: 14, offset: 5203},
																		label: "id",
																		expr: &actionExpr{
																			pos: position{line: 130, col: 20, offset: 5333},
																			run: (*parser).callonParagraph327,
																			expr: &seqExpr{
																				pos: position{line: 130, col: 20, offset: 5333},
																				exprs: []interface{}{
																					&litMatcher{
																						pos:        position{line: 130, col: 20, offset: 5333},
																						val:        "[[",
																						ignoreCase: false,
																					},
																					&labeledExpr{
																						pos:   position{line: 130, col: 25, offset: 5338},
																						label: "id",
																						expr: &actionExpr{
																							pos: position{line: 701, col: 7, offset: 29885},
																							run: (*parser).callonParagraph331,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 701, col: 7, offset: 29885},
																								expr: &seqExpr{
																									pos: position{line: 701, col: 8, offset: 29886},
																									exprs: []interface{}{
																										&notExpr{
																											pos: position{line: 701, col: 8, offset: 29886},
																											expr: &choiceExpr{
																												pos: position{line: 717, col: 12, offset: 30188},
																												alternatives: []interface{}{
																													&litMatcher{
																														pos:        position{line: 717, col: 12, offset: 30188},
																														val:        "\r\n",
																														ignoreCase: false,
																													},
																													&charClassMatcher{
																														pos:        position{line: 717, col: 21, offset: 30197},
																														val:        "[\\r\\n]",
																														chars:      []rune{'\r', '\n'},
																														ignoreCase: false,
																														inverted:   false,
																													},
																												},
																											},
																										},
																										&notExpr{
																											pos: position{line: 701, col: 17, offset: 29895},
																											expr: &choiceExpr{
																												pos: position{line: 713, col: 7, offset: 30126},
																												alternatives: []interface{}{
																													&litMatcher{
																														pos:        position{line: 713, col: 7, offset: 30126},
																														val:        " ",
																														ignoreCase: false,
																													},
																													&actionExpr{
																														pos: position{line: 713, col: 13, offset: 30132},
																														run: (*parser).callonParagraph341,
																														expr: &litMatcher{
																															pos:        position{line: 713, col: 13, offset: 30132},
																															val:        "\t",
																															ignoreCase: false,
																														},
																													},
																												},
																											},
																										},
																										&notExpr{
																											pos: position{line: 701, col: 21, offset: 29899},
																											expr: &litMatcher{
																												pos:        position{line: 701, col: 22, offset: 29900},
																												val:        "[",
																												ignoreCase: false,
																											},
																										},
																										&notExpr{
																											pos: position{line: 701, col: 26, offset: 29904},
																											expr: &litMatcher{
																												pos:        position{line: 701, col: 27, offset: 29905},
																												val:        "]",
																												ignoreCase: false,
																											},
																										},
																										&notExpr{
																											pos: position{line: 701, col: 31, offset: 29909},
																											expr: &litMatcher{
																												pos:        position{line: 701, col: 32, offset: 29910},
																												val:        "<<",
																												ignoreCase: false,
																											},
																										},
																										&notExpr{
																											pos: position{line: 701, col: 37, offset: 29915},
																											expr: &litMatcher{
																												pos:        position{line: 701, col: 38, offset: 29916},
																												val:        ">>",
																												ignoreCase: false,
																											},
																										},
																										&anyMatcher{
																											line: 701, col: 42, offset: 29920,
																										},
																									},
																								},
																							},
																						},
																					},
																					&litMatcher{
																						pos:        position{line: 130, col: 33, offset: 5346},
																						val:        "]]",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																},
																&actionExpr{
																	pos: position{line: 126, col: 5, offset: 5249},
																	run: (*parser).callonParagraph353,
																	expr: &seqExpr{
																		pos: position{line: 126, col: 5, offset: 5249},
																		exprs: []interface{}{
																			&litMatcher{
																				pos:        position{line: 126, col: 5, offset: 5249},
																				val:        "[#",
																				ignoreCase: false,
																			},
																			&labeledExpr{
																				pos:   position{line: 126, col: 10, offset: 5254},
																				label: "id",
																				expr: &actionExpr{
																					pos: position{line: 701, col: 7, offset: 29885},
																					run: (*parser).callonParagraph357,
																					expr: &oneOrMoreExpr{
																						pos: position{line: 701, col: 7, offset: 29885},
																						expr: &seqExpr{
																							pos: position{line: 701, col: 8, offset: 29886},
																							exprs: []interface{}{
																								&notExpr{
																									pos: position{line: 701, col: 8, offset: 29886},
																									expr: &choiceExpr{
																										pos: position{line: 717, col: 12, offset: 30188},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 717, col: 12, offset: 30188},
																												val:        "\r\n",
																												ignoreCase: false,
																											},
																											&charClassMatcher{
																												pos:        position{line: 717, col: 21, offset: 30197},
																												val:        "[\\r\\n]",
																												chars:      []rune{'\r', '\n'},
																												ignoreCase: false,
																												inverted:   false,
																											},
																										},
																									},
																								},
																								&notExpr{
																									pos: position{line: 701, col: 17, offset: 29895},
																									expr: &choiceExpr{
																										pos: position{line: 713, col: 7, offset: 30126},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 713, col: 7, offset: 30126},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 713, col: 13, offset: 30132},
																												run: (*parser).callonParagraph367,
																												expr: &litMatcher{
																													pos:        position{line: 713, col: 13, offset: 30132},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																								&notExpr{
																									pos: position{line: 701, col: 21, offset: 29899},
																									expr: &litMatcher{
																										pos:        position{line: 701, col: 22, offset: 29900},
																										val:        "[",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 701, col: 26, offset: 29904},
																									expr: &litMatcher{
																										pos:        position{line: 701, col: 27, offset: 29905},
																										val:        "]",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 701, col: 31, offset: 29909},
																									expr: &litMatcher{
																										pos:        position{line: 701, col: 32, offset: 29910},
																										val:        "<<",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 701, col: 37, offset: 29915},
																									expr: &litMatcher{
																										pos:        position{line: 701, col: 38, offset: 29916},
																										val:        ">>",
																										ignoreCase: false,
																									},
																								},
																								&anyMatcher{
																									line: 701, col: 42, offset: 29920,
																								},
																							},
																						},
																					},
																				},
																			},
																			&litMatcher{
																				pos:        position{line: 126, col: 18, offset: 5262},
																				val:        "]",
																				ignoreCase: false,
																			},
																		},
																	},
																},
																&actionExpr{
																	pos: position{line: 136, col: 17, offset: 5557},
																	run: (*parser).callonParagraph379,
																	expr: &seqExpr{
																		pos: position{line: 136, col: 17, offset: 5557},
																		exprs: []interface{}{
																			&litMatcher{
																				pos:        position{line: 136, col: 17, offset: 5557},
																				val:        ".",
																				ignoreCase: false,
																			},
																			&notExpr{
																				pos: position{line: 136, col: 21, offset: 5561},
																				expr: &litMatcher{
																					pos:        position{line: 136, col: 22, offset: 5562},
																					val:        ".",
																					ignoreCase: false,
																				},
																			},
																			&notExpr{
																				pos: position{line: 136, col: 26, offset: 5566},
																				expr: &choiceExpr{
																					pos: position{line: 713, col: 7, offset: 30126},
																					alternatives: []interface{}{
																						&litMatcher{
																							pos:        position{line: 713, col: 7, offset: 30126},
																							val:        " ",
																							ignoreCase: false,
																						},
																						&actionExpr{
																							pos: position{line: 713, col: 13, offset: 30132},
																							run: (*parser).callonParagraph387,
																							expr: &litMatcher{
																								pos:        position{line: 713, col: 13, offset: 30132},
																								val:        "\t",
																								ignoreCase: false,
																							},
																						},
																					},
																				},
																			},
																			&labeledExpr{
																				pos:   position{line: 136, col: 30, offset: 5570},
																				label: "title",
																				expr: &oneOrMoreExpr{
																					pos: position{line: 136, col: 36, offset: 5576},
																					expr: &seqExpr{
																						pos: position{line: 136, col: 37, offset: 5577},
																						exprs: []interface{}{
																							&notExpr{
																								pos: position{line: 136, col: 37, offset: 5577},
																								expr: &choiceExpr{
																									pos: position{line: 717, col: 12, offset: 30188},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 717, col: 12, offset: 30188},
																											val:        "\r\n",
																											ignoreCase: false,
																										},
																										&charClassMatcher{
																											pos:        position{line: 717, col: 21, offset: 30197},
																											val:        "[\\r\\n]",
																											chars:      []rune{'\r', '\n'},
																											ignoreCase: false,
																											inverted:   false,
																										},
																									},
																								},
																							},
																							&anyMatcher{
																								line: 136, col: 46, offset: 5586,
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																},
																&actionExpr{
																	pos: position{line: 141, col: 30, offset: 5760},
																	run: (*parser).callonParagraph397,
																	expr: &seqExpr{
																		pos: position{line: 141, col: 30, offset: 5760},
																		exprs: []interface{}{
																			&litMatcher{
																				pos:        position{line: 141, col: 30, offset: 5760},
																				val:        "[",
																				ignoreCase: false,
																			},
																			&labeledExpr{
																				pos:   position{line: 141, col: 34, offset: 5764},
																				label: "k",
																				expr: &choiceExpr{
																					pos: position{line: 442, col: 19, offset: 17830},
																					alternatives: []interface{}{
																						&actionExpr{
																							pos: position{line: 442, col: 19, offset: 17830},
																							run: (*parser).callonParagraph402,
																							expr: &litMatcher{
																								pos:        position{line: 442, col: 19, offset: 17830},
																								val:        "TIP",
																								ignoreCase: false,
																							},
																						},
																						&actionExpr{
																							pos: position{line: 444, col: 5, offset: 17868},
																							run: (*parser).callonParagraph404,
																							expr: &litMatcher{
																								pos:        position{line: 444, col: 5, offset: 17868},
																								val:        "NOTE",
																								ignoreCase: false,
																							},
																						},
																						&actionExpr{
																							pos: position{line: 446, col: 5, offset: 17908},
																							run: (*parser).callonParagraph406,
																							expr: &litMatcher{
																								pos:        position{line: 446, col: 5, offset: 17908},
																								val:        "IMPORTANT",
																								ignoreCase: false,
																							},
																						},
																						&actionExpr{
																							pos: position{line: 448, col: 5, offset: 17958},
																							run: (*parser).callonParagraph408,
																							expr: &litMatcher{
																								pos:        position{line: 448, col: 5, offset: 17958},
																								val:        "WARNING",
																								ignoreCase: false,
																							},
																						},
																						&actionExpr{
																							pos: position{line: 450, col: 5, offset: 18004},
																							run: (*parser).callonParagraph410,
																							expr: &litMatcher{
																								pos:        position{line: 450, col: 5, offset: 18004},
																								val:        "CAUTION",
																								ignoreCase: false,
																							},
																						},
																					},
																				},
																			},
																			&litMatcher{
																				pos:        position{line: 141, col: 53, offset: 5783},
																				val:        "]",
																				ignoreCase: false,
																			},
																		},
																	},
																},
																&actionExpr{
																	pos: position{line: 146, col: 19, offset: 5896},
																	run: (*parser).callonParagraph413,
																	expr: &seqExpr{
																		pos: position{line: 146, col: 19, offset: 5896},
																		exprs: []interface{}{
																			&litMatcher{
																				pos:        position{line: 146, col: 19, offset: 5896},
																				val:        "[",
																				ignoreCase: false,
																			},
																			&labeledExpr{
																				pos:   position{line: 146, col: 23, offset: 5900},
																				label: "attribute",
																				expr: &choiceExpr{
																					pos: position{line: 150, col: 21, offset: 6095},
																					alternatives: []interface{}{
																						&actionExpr{
																							pos: position{line: 150, col: 21, offset: 6095},
																							run: (*parser).callonParagraph418,
																							expr: &seqExpr{
																								pos: position{line: 150, col: 21, offset: 6095},
																								exprs: []interface{}{
																									&labeledExpr{
																										pos:   position{line: 150, col: 21, offset: 6095},
																										label: "key",
																										expr: &actionExpr{
																											pos: position{line: 162, col: 17, offset: 6664},
																											run: (*parser).callonParagraph421,
																											expr: &seqExpr{
																												pos: position{line: 162, col: 17, offset: 6664},
																												exprs: []interface{}{
																													&labeledExpr{
																														pos:   position{line: 162, col: 17, offset: 6664},
																														label: "key",
																														expr: &oneOrMoreExpr{
																															pos: position{line: 162, col: 22, offset: 6669},
																															expr: &seqExpr{
																																pos: position{line: 162, col: 23, offset: 6670},
																																exprs: []interface{}{
																																	&notExpr{
																																		pos: position{line: 162, col: 23, offset: 6670},
																																		expr: &choiceExpr{
																																			pos: position{line: 713, col: 7, offset: 30126},
																																			alternatives: []interface{}{
																																				&litMatcher{
																																					pos:        position{line: 713, col: 7, offset: 30126},
																																					val:        " ",
																																					ignoreCase: false,
																																				},
																																				&actionExpr{
																																					pos: position{line: 713, col: 13, offset: 30132},
																																					run: (*parser).callonParagraph429,
																																					expr: &litMatcher{
																																						pos:        position{line: 713, col: 13, offset: 30132},
																																						val:        "\t",
																																						ignoreCase: false,
																																					},
																																				},
																																			},
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 162, col: 27, offset: 6674},
																																		expr: &litMatcher{
																																			pos:        position{line: 162, col: 28, offset: 6675},
																																			val:        "=",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 162, col: 32, offset: 6679},
																																		expr: &litMatcher{
																																			pos:        position{line: 162, col: 33, offset: 6680},
																																			val:        ",",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 162, col: 37, offset: 6684},
																																		expr: &litMatcher{
																																			pos:        position{line: 162, col: 38, offset: 6685},
																																			val:        "]",
																																			ignoreCase: false,
																																		},
																																	},
																																	&anyMatcher{
																																		line: 162, col: 42, offset: 6689,
																																	},
																																},
																															},
																														},
																													},
																													&zeroOrMoreExpr{
																														pos: position{line: 162, col: 46, offset: 6693},
																														expr: &choiceExpr{
																															pos: position{line: 713, col: 7, offset: 30126},
																															alternatives: []interface{}{
																																&litMatcher{
																																	pos:        position{line: 713, col: 7, offset: 30126},
																																	val:        " ",
																																	ignoreCase: false,
																																},
																																&actionExpr{
																																	pos: position{line: 713, col: 13, offset: 30132},
																																	run: (*parser).callonParagraph441,
																																	expr: &litMatcher{
																																		pos:        position{line: 713, col: 13, offset: 30132},
																																		val:        "\t",
																																		ignoreCase: false,
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																									&litMatcher{
																										pos:        position{line: 150, col: 40, offset: 6114},
																										val:        "=",
																										ignoreCase: false,
																									},
																									&labeledExpr{
																										pos:   position{line: 150, col: 44, offset: 6118},
																										label: "value",
																										expr: &actionExpr{
																											pos: position{line: 167, col: 19, offset: 6793},
																											run: (*parser).callonParagraph445,
																											expr: &seqExpr{
																												pos: position{line: 167, col: 19, offset: 6793},
																												exprs: []interface{}{
																													&zeroOrMoreExpr{
																														pos: position{line: 167, col: 19, offset: 6793},
																														expr: &choiceExpr{
																															pos: position{line: 713, col: 7, offset: 30126},
																															alternatives: []interface{}{
																																&litMatcher{
																																	pos:        position{line: 713, col: 7, offset: 30126},
																																	val:        " ",
																																	ignoreCase: false,
																																},
																																&actionExpr{
																																	pos: position{line: 713, col: 13, offset: 30132},
																																	run: (*parser).callonParagraph450,
																																	expr: &litMatcher{
																																		pos:        position{line: 713, col: 13, offset: 30132},
																																		val:        "\t",
																																		ignoreCase: false,
																																	},
																																},
																															},
																														},
																													},
																													&labeledExpr{
																														pos:   position{line: 167, col: 23, offset: 6797},
																														label: "value",
																														expr: &zeroOrMoreExpr{
																															pos: position{line: 167, col: 29, offset: 6803},
																															expr: &seqExpr{
																																pos: position{line: 167, col: 30, offset: 6804},
																																exprs: []interface{}{
																																	&notExpr{
																																		pos: position{line: 167, col: 30, offset: 6804},
																																		expr: &choiceExpr{
																																			pos: position{line: 713, col: 7, offset: 30126},
																																			alternatives: []interface{}{
																																				&litMatcher{
																																					pos:        position{line: 713, col: 7, offset: 30126},
																																					val:        " ",
																																					ignoreCase: false,
																																				},
																																				&actionExpr{
																																					pos: position{line: 713, col: 13, offset: 30132},
																																					run: (*parser).callonParagraph458,
																																					expr: &litMatcher{
																																						pos:        position{line: 713, col: 13, offset: 30132},
																																						val:        "\t",
																																						ignoreCase: false,
																																					},
																																				},
																																			},
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 167, col: 34, offset: 6808},
																																		expr: &litMatcher{
																																			pos:        position{line: 167, col: 35, offset: 6809},
																																			val:        "=",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 167, col: 39, offset: 6813},
																																		expr: &litMatcher{
																																			pos:        position{line: 167, col: 40, offset: 6814},
																																			val:        "]",
																																			ignoreCase: false,
																																		},
																																	},
																																	&anyMatcher{
																																		line: 167, col: 44, offset: 6818,
																																	},
																																},
																															},
																														},
																													},
																													&zeroOrMoreExpr{
																														pos: position{line: 167, col: 48, offset: 6822},
																														expr: &choiceExpr{
																															pos: position{line: 713, col: 7, offset: 30126},
																															alternatives: []interface{}{
																																&litMatcher{
																																	pos:        position{line: 713, col: 7, offset: 30126},
																																	val:        " ",
																																	ignoreCase: false,
																																},
																																&actionExpr{
																																	pos: position{line: 713, col: 13, offset: 30132},
																																	run: (*parser).callonParagraph468,
																																	expr: &litMatcher{
																																		pos:        position{line: 713, col: 13, offset: 30132},
																																		val:        "\t",
																																		ignoreCase: false,
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 152, col: 5, offset: 6244},
																							run: (*parser).callonParagraph470,
																							expr: &labeledExpr{
																								pos:   position{line: 152, col: 5, offset: 6244},
																								label: "key",
																								expr: &actionExpr{
																									pos: position{line: 162, col: 17, offset: 6664},
																									run: (*parser).callonParagraph472,
																									expr: &seqExpr{
																										pos: position{line: 162, col: 17, offset: 6664},
																										exprs: []interface{}{
																											&labeledExpr{
																												pos:   position{line: 162, col: 17, offset: 6664},
																												label: "key",
																												expr: &oneOrMoreExpr{
																													pos: position{line: 162, col: 22, offset: 6669},
																													expr: &seqExpr{
																														pos: position{line: 162, col: 23, offset: 6670},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 162, col: 23, offset: 6670},
																																expr: &choiceExpr{
																																	pos: position{line: 713, col: 7, offset: 30126},
																																	alternatives: []interface{}{
																																		&litMatcher{
																																			pos:        position{line: 713, col: 7, offset: 30126},
																																			val:        " ",
																																			ignoreCase: false,
																																		},
																																		&actionExpr{
																																			pos: position{line: 713, col: 13, offset: 30132},
																																			run: (*parser).callonParagraph480,
																																			expr: &litMatcher{
																																				pos:        position{line: 713, col: 13, offset: 30132},
																																				val:        "\t",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																},
																															},
																															&notExpr{
																																pos: position{line: 162, col: 27, offset: 6674},
																																expr: &litMatcher{
																																	pos:        position{line: 162, col: 28, offset: 6675},
																																	val:        "=",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 162, col: 32, offset: 6679},
																																expr: &litMatcher{
																																	pos:        position{line: 162, col: 33, offset: 6680},
																																	val:        ",",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 162, col: 37, offset: 6684},
																																expr: &litMatcher{
																																	pos:        position{line: 162, col: 38, offset: 6685},
																																	val:        "]",
																																	ignoreCase: false,
																																},
																															},
																															&anyMatcher{
																																line: 162, col: 42, offset: 6689,
																															},
																														},
																													},
																												},
																											},
																											&zeroOrMoreExpr{
																												pos: position{line: 162, col: 46, offset: 6693},
																												expr: &choiceExpr{
																													pos: position{line: 713, col: 7, offset: 30126},
																													alternatives: []interface{}{
																														&litMatcher{
																															pos:        position{line: 713, col: 7, offset: 30126},
																															val:        " ",
																															ignoreCase: false,
																														},
																														&actionExpr{
																															pos: position{line: 713, col: 13, offset: 30132},
																															run: (*parser).callonParagraph492,
																															expr: &litMatcher{
																																pos:        position{line: 713, col: 13, offset: 30132},
																																val:        "\t",
																																ignoreCase: false,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																			&labeledExpr{
																				pos:   position{line: 146, col: 52, offset: 5929},
																				label: "attributes",
																				expr: &zeroOrMoreExpr{
																					pos: position{line: 146, col: 63, offset: 5940},
																					expr: &choiceExpr{
																						pos: position{line: 156, col: 26, offset: 6376},
																						alternatives: []interface{}{
																							&actionExpr{
																								pos: position{line: 156, col: 26, offset: 6376},
																								run: (*parser).callonParagraph497,
																								expr: &seqExpr{
																									pos: position{line: 156, col: 26, offset: 6376},
																									exprs: []interface{}{
																										&litMatcher{
																											pos:        position{line: 156, col: 26, offset: 6376},
																											val:        ",",
																											ignoreCase: false,
																										},
																										&zeroOrMoreExpr{
																											pos: position{line: 156, col: 30, offset: 6380},
																											expr: &choiceExpr{
																												pos: position{line: 713, col: 7, offset: 30126},
																												alternatives: []interface{}{
																													&litMatcher{
																														pos:        position{line: 713, col: 7, offset: 30126},
																														val:        " ",
																														ignoreCase: false,
																													},
																													&actionExpr{
																														pos: position{line: 713, col: 13, offset: 30132},
																														run: (*parser).callonParagraph503,
																														expr: &litMatcher{
																															pos:        position{line: 713, col: 13, offset: 30132},
																															val:        "\t",
																															ignoreCase: false,
																														},
																													},
																												},
																											},
																										},
																										&labeledExpr{
																											pos:   position{line: 156, col: 34, offset: 6384},
																											label: "key",
																											expr: &actionExpr{
																												pos: position{line: 162, col: 17, offset: 6664},
																												run: (*parser).callonParagraph506,
																												expr: &seqExpr{
																													pos: position{line: 162, col: 17, offset: 6664},
																													exprs: []interface{}{
																														&labeledExpr{
																															pos:   position{line: 162, col: 17, offset: 6664},
																															label: "key",
																															expr: &oneOrMoreExpr{
																																pos: position{line: 162, col: 22, offset: 6669},
																																expr: &seqExpr{
																																	pos: position{line: 162, col: 23, offset: 6670},
																																	exprs: []interface{}{
																																		&notExpr{
																																			pos: position{line: 162, col: 23, offset: 6670},
																																			expr: &choiceExpr{
																																				pos: position{line: 713, col: 7, offset: 30126},
																																				alternatives: []interface{}{
																																					&litMatcher{
																																						pos:        position{line: 713, col: 7, offset: 30126},
																																						val:        " ",
																																						ignoreCase: false,
																																					},
																																					&actionExpr{
																																						pos: position{line: 713, col: 13, offset: 30132},
																																						run: (*parser).callonParagraph514,
																																						expr: &litMatcher{
																																							pos:        position{line: 713, col: 13, offset: 30132},
																																							val:        "\t",
																																							ignoreCase: false,
																																						},
																																					},
																																				},
																																			},
																																		},
																																		&notExpr{
																																			pos: position{line: 162, col: 27, offset: 6674},
																																			expr: &litMatcher{
																																				pos:        position{line: 162, col: 28, offset: 6675},
																																				val:        "=",
																																				ignoreCase: false,
																																			},
																																		},
																																		&notExpr{
																																			pos: position{line: 162, col: 32, offset: 6679},
																																			expr: &litMatcher{
																																				pos:        position{line: 162, col: 33, offset: 6680},
																																				val:        ",",
																																				ignoreCase: false,
																																			},
																																		},
																																		&notExpr{
																																			pos: position{line: 162, col: 37, offset: 6684},
																																			expr: &litMatcher{
																																				pos:        position{line: 162, col: 38, offset: 6685},
																																				val:        "]",
																																				ignoreCase: false,
																																			},
																																		},
																																		&anyMatcher{
																																			line: 162, col: 42, offset: 6689,
																																		},
																																	},
																																},
																															},
																														},
																														&zeroOrMoreExpr{
																															pos: position{line: 162, col: 46, offset: 6693},
																															expr: &choiceExpr{
																																pos: position{line: 713, col: 7, offset: 30126},
																																alternatives: []interface{}{
																																	&litMatcher{
																																		pos:        position{line: 713, col: 7, offset: 30126},
																																		val:        " ",
																																		ignoreCase: false,
																																	},
																																	&actionExpr{
																																		pos: position{line: 713, col: 13, offset: 30132},
																																		run: (*parser).callonParagraph526,
																																		expr: &litMatcher{
																																			pos:        position{line: 713, col: 13, offset: 30132},
																																			val:        "\t",
																																			ignoreCase: false,
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																										&litMatcher{
																											pos:        position{line: 156, col: 53, offset: 6403},
																											val:        "=",
																											ignoreCase: false,
																										},
																										&labeledExpr{
																											pos:   position{line: 156, col: 57, offset: 6407},
																											label: "value",
																											expr: &actionExpr{
																												pos: position{line: 167, col: 19, offset: 6793},
																												run: (*parser).callonParagraph530,
																												expr: &seqExpr{
																													pos: position{line: 167, col: 19, offset: 6793},
																													exprs: []interface{}{
																														&zeroOrMoreExpr{
																															pos: position{line: 167, col: 19, offset: 6793},
																															expr: &choiceExpr{
																																pos: position{line: 713, col: 7, offset: 30126},
																																alternatives: []interface{}{
																																	&litMatcher{
																																		pos:        position{line: 713, col: 7, offset: 30126},
																																		val:        " ",
																																		ignoreCase: false,
																																	},
																																	&actionExpr{
																																		pos: position{line: 713, col: 13, offset: 30132},
																																		run: (*parser).callonParagraph535,
																																		expr: &litMatcher{
																																			pos:        position{line: 713, col: 13, offset: 30132},
																																			val:        "\t",
																																			ignoreCase: false,
																																		},
																																	},
																																},
																															},
																														},
																														&labeledExpr{
																															pos:   position{line: 167, col: 23, offset: 6797},
																															label: "value",
																															expr: &zeroOrMoreExpr{
																																pos: position{line: 167, col: 29, offset: 6803},
																																expr: &seqExpr{
																																	pos: position{line: 167, col: 30, offset: 6804},
																																	exprs: []interface{}{
																																		&notExpr{
																																			pos: position{line: 167, col: 30, offset: 6804},
																																			expr: &choiceExpr{
																																				pos: position{line: 713, col: 7, offset: 30126},
																																				alternatives: []interface{}{
																																					&litMatcher{
																																						pos:        position{line: 713, col: 7, offset: 30126},
																																						val:        " ",
																																						ignoreCase: false,
																																					},
																																					&actionExpr{
																																						pos: position{line: 713, col: 13, offset: 30132},
																																						run: (*parser).callonParagraph543,
																																						expr: &litMatcher{
																																							pos:        position{line: 713, col: 13, offset: 30132},
																																							val:        "\t",
																																							ignoreCase: false,
																																						},
																																					},
																																				},
																																			},
																																		},
																																		&notExpr{
																																			pos: position{line: 167, col: 34, offset: 6808},
																																			expr: &litMatcher{
																																				pos:        position{line: 167, col: 35, offset: 6809},
																																				val:        "=",
																																				ignoreCase: false,
																																			},
																																		},
																																		&notExpr{
																																			pos: position{line: 167, col: 39, offset: 6813},
																																			expr: &litMatcher{
																																				pos:        position{line: 167, col: 40, offset: 6814},
																																				val:        "]",
																																				ignoreCase: false,
																																			},
																																		},
																																		&anyMatcher{
																																			line: 167, col: 44, offset: 6818,
																																		},
																																	},
																																},
																															},
																														},
																														&zeroOrMoreExpr{
																															pos: position{line: 167, col: 48, offset: 6822},
																															expr: &choiceExpr{
																																pos: position{line: 713, col: 7, offset: 30126},
																																alternatives: []interface{}{
																																	&litMatcher{
																																		pos:        position{line: 713, col: 7, offset: 30126},
																																		val:        " ",
																																		ignoreCase: false,
																																	},
																																	&actionExpr{
																																		pos: position{line: 713, col: 13, offset: 30132},
																																		run: (*parser).callonParagraph553,
																																		expr: &litMatcher{
																																			pos:        position{line: 713, col: 13, offset: 30132},
																																			val:        "\t",
																																			ignoreCase: false,
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&actionExpr{
																								pos: position{line: 158, col: 5, offset: 6533},
																								run: (*parser).callonParagraph555,
																								expr: &seqExpr{
																									pos: position{line: 158, col: 5, offset: 6533},
																									exprs: []interface{}{
																										&litMatcher{
																											pos:        position{line: 158, col: 5, offset: 6533},
																											val:        ",",
																											ignoreCase: false,
																										},
																										&zeroOrMoreExpr{
																											pos: position{line: 158, col: 9, offset: 6537},
																											expr: &choiceExpr{
																												pos: position{line: 713, col: 7, offset: 30126},
																												alternatives: []interface{}{
																													&litMatcher{
																														pos:        position{line: 713, col: 7, offset: 30126},
																														val:        " ",
																														ignoreCase: false,
																													},
																													&actionExpr{
																														pos: position{line: 713, col: 13, offset: 30132},
																														run: (*parser).callonParagraph561,
																														expr: &litMatcher{
																															pos:        position{line: 713, col: 13, offset: 30132},
																															val:        "\t",
																															ignoreCase: false,
																														},
																													},
																												},
																											},
																										},
																										&labeledExpr{
																											pos:   position{line: 158, col: 13, offset: 6541},
																											label: "key",
																											expr: &actionExpr{
																												pos: position{line: 162, col: 17, offset: 6664},
																												run: (*parser).callonParagraph564,
																												expr: &seqExpr{
																													pos: position{line: 162, col: 17, offset: 6664},
																													exprs: []interface{}{
																														&labeledExpr{
																															pos:   position{line: 162, col: 17, offset: 6664},
																															label: "key",
																															expr: &oneOrMoreExpr{
																																pos: position{line: 162, col: 22, offset: 6669},
																																expr: &seqExpr{
																																	pos: position{line: 162, col: 23, offset: 6670},
																																	exprs: []interface{}{
																																		&notExpr{
																																			pos: position{line: 162, col: 23, offset: 6670},
																																			expr: &choiceExpr{
																																				pos: position{line: 713, col: 7, offset: 30126},
																																				alternatives: []interface{}{
																																					&litMatcher{
																																						pos:        position{line: 713, col: 7, offset: 30126},
																																						val:        " ",
																																						ignoreCase: false,
																																					},
																																					&actionExpr{
																																						pos: position{line: 713, col: 13, offset: 30132},
																																						run: (*parser).callonParagraph572,
																																						expr: &litMatcher{
																																							pos:        position{line: 713, col: 13, offset: 30132},
																																							val:        "\t",
																																							ignoreCase: false,
																																						},
																																					},
																																				},
																																			},
																																		},
																																		&notExpr{
																																			pos: position{line: 162, col: 27, offset: 6674},
																																			expr: &litMatcher{
																																				pos:        position{line: 162, col: 28, offset: 6675},
																																				val:        "=",
																																				ignoreCase: false,
																																			},
																																		},
																																		&notExpr{
																																			pos: position{line: 162, col: 32, offset: 6679},
																																			expr: &litMatcher{
																																				pos:        position{line: 162, col: 33, offset: 6680},
																																				val:        ",",
																																				ignoreCase: false,
																																			},
																																		},
																																		&notExpr{
																																			pos: position{line: 162, col: 37, offset: 6684},
																																			expr: &litMatcher{
																																				pos:        position{line: 162, col: 38, offset: 6685},
																																				val:        "]",
																																				ignoreCase: false,
																																			},
																																		},
																																		&anyMatcher{
																																			line: 162, col: 42, offset: 6689,
																																		},
																																	},
																																},
																															},
																														},
																														&zeroOrMoreExpr{
																															pos: position{line: 162, col: 46, offset: 6693},
																															expr: &choiceExpr{
																																pos: position{line: 713, col: 7, offset: 30126},
																																alternatives: []interface{}{
																																	&litMatcher{
																																		pos:        position{line: 713, col: 7, offset: 30126},
																																		val:        " ",
																																		ignoreCase: false,
																																	},
																																	&actionExpr{
																																		pos: position{line: 713, col: 13, offset: 30132},
																																		run: (*parser).callonParagraph584,
																																		expr: &litMatcher{
																																			pos:        position{line: 713, col: 13, offset: 30132},
																																			val:        "\t",
																																			ignoreCase: false,
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																			&litMatcher{
																				pos:        position{line: 146, col: 89, offset: 5966},
																				val:        "]",
																				ignoreCase: false,
																			},
																		},
																	},
																},
															},
														},
													},
													&zeroOrMoreExpr{
														pos: position{line: 120, col: 98, offset: 5095},
														expr: &choiceExpr{
															pos: position{line: 713, col: 7, offset: 30126},
															alternatives: []interface{}{
																&litMatcher{
																	pos:        position{line: 713, col: 7, offset: 30126},
																	val:        " ",
																	ignoreCase: false,
																},
																&actionExpr{
																	pos: position{line: 713, col: 13, offset: 30132},
																	run: (*parser).callonParagraph590,
																	expr: &litMatcher{
																		pos:        position{line: 713, col: 13, offset: 30132},
																		val:        "\t",
																		ignoreCase: false,
																	},
																},
															},
														},
													},
													&choiceExpr{
														pos: position{line: 721, col: 8, offset: 30228},
														alternatives: []interface{}{
															&litMatcher{
																pos:        position{line: 717, col: 12, offset: 30188},
																val:        "\r\n",
																ignoreCase: false,
															},
															&charClassMatcher{
																pos:        position{line: 717, col: 21, offset: 30197},
																val:        "[\\r\\n]",
																chars:      []rune{'\r', '\n'},
																ignoreCase: false,
																inverted:   false,
															},
															&notExpr{
																pos: position{line: 719, col: 8, offset: 30217},
																expr: &anyMatcher{
																	line: 719, col: 9, offset: 30218,
																},
															},
														},
													},
												},
											},
										},
									},
								},
								&notExpr{
									pos: position{line: 465, col: 36, offset: 18649},
									expr: &seqExpr{
										pos: position{line: 465, col: 38, offset: 18651},
										exprs: []interface{}{
											&oneOrMoreExpr{
												pos: position{line: 465, col: 38, offset: 18651},
												expr: &litMatcher{
													pos:        position{line: 465, col: 38, offset: 18651},
													val:        "=",
													ignoreCase: false,
												},
											},
											&oneOrMoreExpr{
												pos: position{line: 465, col: 43, offset: 18656},
												expr: &choiceExpr{
													pos: position{line: 713, col: 7, offset: 30126},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 713, col: 7, offset: 30126},
															val:        " ",
															ignoreCase: false,
														},
														&actionExpr{
															pos: position{line: 713, col: 13, offset: 30132},
															run: (*parser).callonParagraph604,
															expr: &litMatcher{
																pos:        position{line: 713, col: 13, offset: 30132},
																val:        "\t",
																ignoreCase: false,
															},
														},
													},
												},
											},
											&notExpr{
												pos: position{line: 465, col: 47, offset: 18660},
												expr: &choiceExpr{
													pos: position{line: 717, col: 12, offset: 30188},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 717, col: 12, offset: 30188},
															val:        "\r\n",
															ignoreCase: false,
														},
														&charClassMatcher{
															pos:        position{line: 717, col: 21, offset: 30197},
															val:        "[\\r\\n]",
															chars:      []rune{'\r', '\n'},
															ignoreCase: false,
															inverted:   false,
														},
													},
												},
											},
										},
									},
								},
								&labeledExpr{
									pos:   position{line: 465, col: 57, offset: 18670},
									label: "lines",
									expr: &oneOrMoreExpr{
										pos: position{line: 465, col: 63, offset: 18676},
										expr: &seqExpr{
											pos: position{line: 465, col: 64, offset: 18677},
											exprs: []interface{}{
												&ruleRefExpr{
													pos:  position{line: 465, col: 64, offset: 18677},
													name: "InlineElements",
												},
												&choiceExpr{
													pos: position{line: 721, col: 8, offset: 30228},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 717, col: 12, offset: 30188},
															val:        "\r\n",
															ignoreCase: false,
														},
														&charClassMatcher{
															pos:        position{line: 717, col: 21, offset: 30197},
															val:        "[\\r\\n]",
															chars:      []rune{'\r', '\n'},
															ignoreCase: false,
															inverted:   false,
														},
														&notExpr{
															pos: position{line: 719, col: 8, offset: 30217},
															expr: &anyMatcher{
																line: 719, col: 9, offset: 30218,
															},
														},
													},
												},
											},
										},
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "InlineElements",
			pos:  position{line: 469, col: 1, offset: 18794},
			expr: &actionExpr{
				pos: position{line: 469, col: 19, offset: 18812},
				run: (*parser).callonInlineElements1,
				expr: &seqExpr{
					pos: position{line: 469, col: 19, offset: 18812},
					exprs: []interface{}{
						&notExpr{
							pos: position{line: 469, col: 19, offset: 18812},
							expr: &notExpr{
								pos: position{line: 719, col: 8, offset: 30217},
								expr: &anyMatcher{
									line: 719, col: 9, offset: 30218,
								},
							},
						},
						&notExpr{
							pos: position{line: 469, col: 24, offset: 18817},
							expr: &choiceExpr{
								pos: position{line: 622, col: 19, offset: 26697},
								alternatives: []interface{}{
									&litMatcher{
										pos:        position{line: 676, col: 26, offset: 29225},
										val:        "....",
										ignoreCase: false,
									},
									&litMatcher{
										pos:        position{line: 624, col: 25, offset: 26815},
										val:        "```",
										ignoreCase: false,
									},
									&litMatcher{
										pos:        position{line: 630, col: 26, offset: 27122},
										val:        "----",
										ignoreCase: false,
									},
									&litMatcher{
										pos:        position{line: 636, col: 26, offset: 27434},
										val:        "====",
										ignoreCase: false,
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 469, col: 40, offset: 18833},
							label: "elements",
							expr: &oneOrMoreExpr{
								pos: position{line: 469, col: 49, offset: 18842},
								expr: &seqExpr{
									pos: position{line: 469, col: 50, offset: 18843},
									exprs: []interface{}{
										&notExpr{
											pos: position{line: 469, col: 50, offset: 18843},
											expr: &choiceExpr{
												pos: position{line: 721, col: 8, offset: 30228},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 717, col: 12, offset: 30188},
														val:        "\r\n",
														ignoreCase: false,
													},
													&charClassMatcher{
														pos:        position{line: 717, col: 21, offset: 30197},
														val:        "[\\r\\n]",
														chars:      []rune{'\r', '\n'},
														ignoreCase: false,
														inverted:   false,
													},
													&notExpr{
														pos: position{line: 719, col: 8, offset: 30217},
														expr: &anyMatcher{
															line: 719, col: 9, offset: 30218,
														},
													},
												},
											},
										},
										&zeroOrMoreExpr{
											pos: position{line: 469, col: 55, offset: 18848},
											expr: &choiceExpr{
												pos: position{line: 713, col: 7, offset: 30126},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 713, col: 7, offset: 30126},
														val:        " ",
														ignoreCase: false,
													},
													&actionExpr{
														pos: position{line: 713, col: 13, offset: 30132},
														run: (*parser).callonInlineElements24,
														expr: &litMatcher{
															pos:        position{line: 713, col: 13, offset: 30132},
															val:        "\t",
															ignoreCase: false,
														},
													},
												},
											},
										},
										&notExpr{
											pos: position{line: 469, col: 59, offset: 18852},
											expr: &actionExpr{
												pos: position{line: 130, col: 20, offset: 5333},
												run: (*parser).callonInlineElements27,
												expr: &seqExpr{
													pos: position{line: 130, col: 20, offset: 5333},
													exprs: []interface{}{
														&litMatcher{
															pos:        position{line: 130, col: 20, offset: 5333},
															val:        "[[",
															ignoreCase: false,
														},
														&labeledExpr{
															pos:   position{line: 130, col: 25, offset: 5338},
															label: "id",
															expr: &actionExpr{
																pos: position{line: 701, col: 7, offset: 29885},
																run: (*parser).callonInlineElements31,
																expr: &oneOrMoreExpr{
																	pos: position{line: 701, col: 7, offset: 29885},
																	expr: &seqExpr{
																		pos: position{line: 701, col: 8, offset: 29886},
																		exprs: []interface{}{
																			&notExpr{
																				pos: position{line: 701, col: 8, offset: 29886},
																				expr: &choiceExpr{
																					pos: position{line: 717, col: 12, offset: 30188},
																					alternatives: []interface{}{
																						&litMatcher{
																							pos:        position{line: 717, col: 12, offset: 30188},
																							val:        "\r\n",
																							ignoreCase: false,
																						},
																						&charClassMatcher{
																							pos:        position{line: 717, col: 21, offset: 30197},
																							val:        "[\\r\\n]",
																							chars:      []rune{'\r', '\n'},
																							ignoreCase: false,
																							inverted:   false,
																						},
																					},
																				},
																			},
																			&notExpr{
																				pos: position{line: 701, col: 17, offset: 29895},
																				expr: &choiceExpr{
																					pos: position{line: 713, col: 7, offset: 30126},
																					alternatives: []interface{}{
																						&litMatcher{
																							pos:        position{line: 713, col: 7, offset: 30126},
																							val:        " ",
																							ignoreCase: false,
																						},
																						&actionExpr{
																							pos: position{line: 713, col: 13, offset: 30132},
																							run: (*parser).callonInlineElements41,
																							expr: &litMatcher{
																								pos:        position{line: 713, col: 13, offset: 30132},
																								val:        "\t",
																								ignoreCase: false,
																							},
																						},
																					},
																				},
																			},
																			&notExpr{
																				pos: position{line: 701, col: 21, offset: 29899},
																				expr: &litMatcher{
																					pos:        position{line: 701, col: 22, offset: 29900},
																					val:        "[",
																					ignoreCase: false,
																				},
																			},
																			&notExpr{
																				pos: position{line: 701, col: 26, offset: 29904},
																				expr: &litMatcher{
																					pos:        position{line: 701, col: 27, offset: 29905},
																					val:        "]",
																					ignoreCase: false,
																				},
																			},
																			&notExpr{
																				pos: position{line: 701, col: 31, offset: 29909},
																				expr: &litMatcher{
																					pos:        position{line: 701, col: 32, offset: 29910},
																					val:        "<<",
																					ignoreCase: false,
																				},
																			},
																			&notExpr{
																				pos: position{line: 701, col: 37, offset: 29915},
																				expr: &litMatcher{
																					pos:        position{line: 701, col: 38, offset: 29916},
																					val:        ">>",
																					ignoreCase: false,
																				},
																			},
																			&anyMatcher{
																				line: 701, col: 42, offset: 29920,
																			},
																		},
																	},
																},
															},
														},
														&litMatcher{
															pos:        position{line: 130, col: 33, offset: 5346},
															val:        "]]",
															ignoreCase: false,
														},
													},
												},
											},
										},
										&ruleRefExpr{
											pos:  position{line: 469, col: 76, offset: 18869},
											name: "InlineElement",
										},
										&zeroOrMoreExpr{
											pos: position{line: 469, col: 90, offset: 18883},
											expr: &choiceExpr{
												pos: position{line: 713, col: 7, offset: 30126},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 713, col: 7, offset: 30126},
														val:        " ",
														ignoreCase: false,
													},
													&actionExpr{
														pos: position{line: 713, col: 13, offset: 30132},
														run: (*parser).callonInlineElements57,
														expr: &litMatcher{
															pos:        position{line: 713, col: 13, offset: 30132},
															val:        "\t",
															ignoreCase: false,
														},
													},
												},
											},
										},
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "InlineElement",
			pos:  position{line: 474, col: 1, offset: 19057},
			expr: &actionExpr{
				pos: position{line: 474, col: 18, offset: 19074},
				run: (*parser).callonInlineElement1,
				expr: &labeledExpr{
					pos:   position{line: 474, col: 18, offset: 19074},
					label: "element",
					expr: &choiceExpr{
						pos: position{line: 474, col: 27, offset: 19083},
						alternatives: []interface{}{
							&actionExpr{
								pos: position{line: 576, col: 19, offset: 24897},
								run: (*parser).callonInlineElement4,
								expr: &seqExpr{
									pos: position{line: 576, col: 19, offset: 24897},
									exprs: []interface{}{
										&litMatcher{
											pos:        position{line: 576, col: 19, offset: 24897},
											val:        "<<",
											ignoreCase: false,
										},
										&labeledExpr{
											pos:   position{line: 576, col: 24, offset: 24902},
											label: "id",
											expr: &actionExpr{
												pos: position{line: 701, col: 7, offset: 29885},
												run: (*parser).callonInlineElement8,
												expr: &oneOrMoreExpr{
													pos: position{line: 701, col: 7, offset: 29885},
													expr: &seqExpr{
														pos: position{line: 701, col: 8, offset: 29886},
														exprs: []interface{}{
															&notExpr{
																pos: position{line: 701, col: 8, offset: 29886},
																expr: &choiceExpr{
																	pos: position{line: 717, col: 12, offset: 30188},
																	alternatives: []interface{}{
																		&litMatcher{
																			pos:        position{line: 717, col: 12, offset: 30188},
																			val:        "\r\n",
																			ignoreCase: false,
																		},
																		&charClassMatcher{
																			pos:        position{line: 717, col: 21, offset: 30197},
																			val:        "[\\r\\n]",
																			chars:      []rune{'\r', '\n'},
																			ignoreCase: false,
																			inverted:   false,
																		},
																	},
																},
															},
															&notExpr{
																pos: position{line: 701, col: 17, offset: 29895},
																expr: &choiceExpr{
																	pos: position{line: 713, col: 7, offset: 30126},
																	alternatives: []interface{}{
																		&litMatcher{
																			pos:        position{line: 713, col: 7, offset: 30126},
																			val:        " ",
																			ignoreCase: false,
																		},
																		&actionExpr{
																			pos: position{line: 713, col: 13, offset: 30132},
																			run: (*parser).callonInlineElement18,
																			expr: &litMatcher{
																				pos:        position{line: 713, col: 13, offset: 30132},
																				val:        "\t",
																				ignoreCase: false,
																			},
																		},
																	},
																},
															},
															&notExpr{
																pos: position{line: 701, col: 21, offset: 29899},
																expr: &litMatcher{
																	pos:        position{line: 701, col: 22, offset: 29900},
																	val:        "[",
																	ignoreCase: false,
																},
															},
															&notExpr{
																pos: position{line: 701, col: 26, offset: 29904},
																expr: &litMatcher{
																	pos:        position{line: 701, col: 27, offset: 29905},
																	val:        "]",
																	ignoreCase: false,
																},
															},
															&notExpr{
																pos: position{line: 701, col: 31, offset: 29909},
																expr: &litMatcher{
																	pos:        position{line: 701, col: 32, offset: 29910},
																	val:        "<<",
																	ignoreCase: false,
																},
															},
															&notExpr{
																pos: position{line: 701, col: 37, offset: 29915},
																expr: &litMatcher{
																	pos:        position{line: 701, col: 38, offset: 29916},
																	val:        ">>",
																	ignoreCase: false,
																},
															},
															&anyMatcher{
																line: 701, col: 42, offset: 29920,
															},
														},
													},
												},
											},
										},
										&litMatcher{
											pos:        position{line: 576, col: 32, offset: 24910},
											val:        ">>",
											ignoreCase: false,
										},
									},
								},
							},
							&ruleRefExpr{
								pos:  position{line: 474, col: 44, offset: 19100},
								name: "Passthrough",
							},
							&actionExpr{
								pos: position{line: 608, col: 16, offset: 26050},
								run: (*parser).callonInlineElement31,
								expr: &labeledExpr{
									pos:   position{line: 608, col: 16, offset: 26050},
									label: "image",
									expr: &actionExpr{
										pos: position{line: 613, col: 21, offset: 26221},
										run: (*parser).callonInlineElement33,
										expr: &seqExpr{
											pos: position{line: 613, col: 21, offset: 26221},
											exprs: []interface{}{
												&litMatcher{
													pos:        position{line: 613, col: 21, offset: 26221},
													val:        "image:",
													ignoreCase: false,
												},
												&notExpr{
													pos: position{line: 613, col: 30, offset: 26230},
													expr: &litMatcher{
														pos:        position{line: 613, col: 31, offset: 26231},
														val:        ":",
														ignoreCase: false,
													},
												},
												&labeledExpr{
													pos:   position{line: 613, col: 35, offset: 26235},
													label: "path",
													expr: &actionExpr{
														pos: position{line: 697, col: 8, offset: 29815},
														run: (*parser).callonInlineElement39,
														expr: &oneOrMoreExpr{
															pos: position{line: 697, col: 8, offset: 29815},
															expr: &seqExpr{
																pos: position{line: 697, col: 9, offset: 29816},
																exprs: []interface{}{
																	&notExpr{
																		pos: position{line: 697, col: 9, offset: 29816},
																		expr: &choiceExpr{
																			pos: position{line: 717, col: 12, offset: 30188},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 717, col: 12, offset: 30188},
																					val:        "\r\n",
																					ignoreCase: false,
																				},
																				&charClassMatcher{
																					pos:        position{line: 717, col: 21, offset: 30197},
																					val:        "[\\r\\n]",
																					chars:      []rune{'\r', '\n'},
																					ignoreCase: false,
																					inverted:   false,
																				},
																			},
																		},
																	},
																	&notExpr{
																		pos: position{line: 697, col: 18, offset: 29825},
																		expr: &choiceExpr{
																			pos: position{line: 713, col: 7, offset: 30126},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 713, col: 7, offset: 30126},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 713, col: 13, offset: 30132},
																					run: (*parser).callonInlineElement49,
																					expr: &litMatcher{
																						pos:        position{line: 713, col: 13, offset: 30132},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&notExpr{
																		pos: position{line: 697, col: 22, offset: 29829},
																		expr: &litMatcher{
																			pos:        position{line: 697, col: 23, offset: 29830},
																			val:        "[",
																			ignoreCase: false,
																		},
																	},
																	&notExpr{
																		pos: position{line: 697, col: 27, offset: 29834},
																		expr: &litMatcher{
																			pos:        position{line: 697, col: 28, offset: 29835},
																			val:        "]",
																			ignoreCase: false,
																		},
																	},
																	&anyMatcher{
																		line: 697, col: 32, offset: 29839,
																	},
																},
															},
														},
													},
												},
												&labeledExpr{
													pos:   position{line: 613, col: 46, offset: 26246},
													label: "attributes",
													expr: &actionExpr{
														pos: position{line: 179, col: 21, offset: 7160},
														run: (*parser).callonInlineElement57,
														expr: &seqExpr{
															pos: position{line: 179, col: 21, offset: 7160},
															exprs: []interface{}{
																&litMatcher{
																	pos:        position{line: 179, col: 21, offset: 7160},
																	val:        "[",
																	ignoreCase: false,
																},
																&labeledExpr{
																	pos:   position{line: 179, col: 25, offset: 7164},
																	label: "attributes",
																	expr: &zeroOrMoreExpr{
																		pos: position{line: 179, col: 36, offset: 7175},
																		expr: &seqExpr{
																			pos: position{line: 179, col: 37, offset: 7176},
																			exprs: []interface{}{
																				&notExpr{
																					pos: position{line: 179, col: 37, offset: 7176},
																					expr: &litMatcher{
																						pos:        position{line: 179, col: 38, offset: 7177},
																						val:        "]",
																						ignoreCase: false,
																					},
																				},
																				&notExpr{
																					pos: position{line: 179, col: 42, offset: 7181},
																					expr: &choiceExpr{
																						pos: position{line: 717, col: 12, offset: 30188},
																						alternatives: []interface{}{
																							&litMatcher{
																								pos:        position{line: 717, col: 12, offset: 30188},
																								val:        "\r\n",
																								ignoreCase: false,
																							},
																							&charClassMatcher{
																								pos:        position{line: 717, col: 21, offset: 30197},
																								val:        "[\\r\\n]",
																								chars:      []rune{'\r', '\n'},
																								ignoreCase: false,
																								inverted:   false,
																							},
																						},
																					},
																				},
																				&notExpr{
																					pos: position{line: 179, col: 51, offset: 7190},
																					expr: &notExpr{
																						pos: position{line: 719, col: 8, offset: 30217},
																						expr: &anyMatcher{
																							line: 719, col: 9, offset: 30218,
																						},
																					},
																				},
																				&anyMatcher{
																					line: 179, col: 56, offset: 7195,
																				},
																			},
																		},
																	},
																},
																&litMatcher{
																	pos:        position{line: 179, col: 60, offset: 7199},
																	val:        "]",
																	ignoreCase: false,
																},
															},
														},
													},
												},
											},
										},
									},
								},
							},
							&ruleRefExpr{
								pos:  position{line: 474, col: 72, offset: 19128},
								name: "QuotedText",
							},
							&actionExpr{
								pos: position{line: 592, col: 17, offset: 25414},
								run: (*parser).callonInlineElement75,
								expr: &seqExpr{
									pos: position{line: 592, col: 17, offset: 25414},
									exprs: []interface{}{
										&litMatcher{
											pos:        position{line: 592, col: 17, offset: 25414},
											val:        "link:",
											ignoreCase: false,
										},
										&labeledExpr{
											pos:   position{line: 592, col: 25, offset: 25422},
											label: "url",
											expr: &seqExpr{
												pos: position{line: 592, col: 30, offset: 25427},
												exprs: []interface{}{
													&zeroOrOneExpr{
														pos: position{line: 592, col: 30, offset: 25427},
														expr: &choiceExpr{
															pos: position{line: 709, col: 15, offset: 30046},
															alternatives: []interface{}{
																&litMatcher{
																	pos:        position{line: 709, col: 15, offset: 30046},
																	val:        "http://",
																	ignoreCase: false,
																},
																&litMatcher{
																	pos:        position{line: 709, col: 27, offset: 30058},
																	val:        "https://",
																	ignoreCase: false,
																},
																&litMatcher{
																	pos:        position{line: 709, col: 40, offset: 30071},
																	val:        "ftp://",
																	ignoreCase: false,
																},
																&litMatcher{
																	pos:        position{line: 709, col: 51, offset: 30082},
																	val:        "irc://",
																	ignoreCase: false,
																},
																&litMatcher{
																	pos:        position{line: 709, col: 62, offset: 30093},
																	val:        "mailto:",
																	ignoreCase: false,
																},
															},
														},
													},
													&actionExpr{
														pos: position{line: 697, col: 8, offset: 29815},
														run: (*parser).callonInlineElement87,
														expr: &oneOrMoreExpr{
															pos: position{line: 697, col: 8, offset: 29815},
															expr: &seqExpr{
																pos: position{line: 697, col: 9, offset: 29816},
																exprs: []interface{}{
																	&notExpr{
																		pos: position{line: 697, col: 9, offset: 29816},
																		expr: &choiceExpr{
																			pos: position{line: 717, col: 12, offset: 30188},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 717, col: 12, offset: 30188},
																					val:        "\r\n",
																					ignoreCase: false,
																				},
																				&charClassMatcher{
																					pos:        position{line: 717, col: 21, offset: 30197},
																					val:        "[\\r\\n]",
																					chars:      []rune{'\r', '\n'},
																					ignoreCase: false,
																					inverted:   false,
																				},
																			},
																		},
																	},
																	&notExpr{
																		pos: position{line: 697, col: 18, offset: 29825},
																		expr: &choiceExpr{
																			pos: position{line: 713, col: 7, offset: 30126},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 713, col: 7, offset: 30126},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 713, col: 13, offset: 30132},
																					run: (*parser).callonInlineElement97,
																					expr: &litMatcher{
																						pos:        position{line: 713, col: 13, offset: 30132},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&notExpr{
																		pos: position{line: 697, col: 22, offset: 29829},
																		expr: &litMatcher{
																			pos:        position{line: 697, col: 23, offset: 29830},
																			val:        "[",
																			ignoreCase: false,
																		},
																	},
																	&notExpr{
																		pos: position{line: 697, col: 27, offset: 29834},
																		expr: &litMatcher{
																			pos:        position{line: 697, col: 28, offset: 29835},
																			val:        "]",
																			ignoreCase: false,
																		},
																	},
																	&anyMatcher{
																		line: 697, col: 32, offset: 29839,
																	},
																},
															},
														},
													},
												},
											},
										},
										&labeledExpr{
											pos:   position{line: 592, col: 47, offset: 25444},
											label: "attributes",
											expr: &actionExpr{
												pos: position{line: 179, col: 21, offset: 7160},
												run: (*parser).callonInlineElement105,
												expr: &seqExpr{
													pos: position{line: 179, col: 21, offset: 7160},
													exprs: []interface{}{
														&litMatcher{
															pos:        position{line: 179, col: 21, offset: 7160},
															val:        "[",
															ignoreCase: false,
														},
														&labeledExpr{
															pos:   position{line: 179, col: 25, offset: 7164},
															label: "attributes",
															expr: &zeroOrMoreExpr{
																pos: position{line: 179, col: 36, offset: 7175},
																expr: &seqExpr{
																	pos: position{line: 179, col: 37, offset: 7176},
																	exprs: []interface{}{
																		&notExpr{
																			pos: position{line: 179, col: 37, offset: 7176},
																			expr: &litMatcher{
																				pos:        position{line: 179, col: 38, offset: 7177},
																				val:        "]",
																				ignoreCase: false,
																			},
																		},
																		&notExpr{
																			pos: position{line: 179, col: 42, offset: 7181},
																			expr: &choiceExpr{
																				pos: position{line: 717, col: 12, offset: 30188},
																				alternatives: []interface{}{
																					&litMatcher{
																						pos:        position{line: 717, col: 12, offset: 30188},
																						val:        "\r\n",
																						ignoreCase: false,
																					},
																					&charClassMatcher{
																						pos:        position{line: 717, col: 21, offset: 30197},
																						val:        "[\\r\\n]",
																						chars:      []rune{'\r', '\n'},
																						ignoreCase: false,
																						inverted:   false,
																					},
																				},
																			},
																		},
																		&notExpr{
																			pos: position{line: 179, col: 51, offset: 7190},
																			expr: &notExpr{
																				pos: position{line: 719, col: 8, offset: 30217},
																				expr: &anyMatcher{
																					line: 719, col: 9, offset: 30218,
																				},
																			},
																		},
																		&anyMatcher{
																			line: 179, col: 56, offset: 7195,
																		},
																	},
																},
															},
														},
														&litMatcher{
															pos:        position{line: 179, col: 60, offset: 7199},
															val:        "]",
															ignoreCase: false,
														},
													},
												},
											},
										},
									},
								},
							},
							&actionExpr{
								pos: position{line: 585, col: 17, offset: 25123},
								run: (*parser).callonInlineElement122,
								expr: &seqExpr{
									pos: position{line: 585, col: 17, offset: 25123},
									exprs: []interface{}{
										&labeledExpr{
											pos:   position{line: 585, col: 17, offset: 25123},
											label: "url",
											expr: &seqExpr{
												pos: position{line: 585, col: 22, offset: 25128},
												exprs: []interface{}{
													&choiceExpr{
														pos: position{line: 709, col: 15, offset: 30046},
														alternatives: []interface{}{
															&litMatcher{
																pos:        position{line: 709, col: 15, offset: 30046},
																val:        "http://",
																ignoreCase: false,
															},
															&litMatcher{
																pos:        position{line: 709, col: 27, offset: 30058},
																val:        "https://",
																ignoreCase: false,
															},
															&litMatcher{
																pos:        position{line: 709, col: 40, offset: 30071},
																val:        "ftp://",
																ignoreCase: false,
															},
															&litMatcher{
																pos:        position{line: 709, col: 51, offset: 30082},
																val:        "irc://",
																ignoreCase: false,
															},
															&litMatcher{
																pos:        position{line: 709, col: 62, offset: 30093},
																val:        "mailto:",
																ignoreCase: false,
															},
														},
													},
													&actionExpr{
														pos: position{line: 697, col: 8, offset: 29815},
														run: (*parser).callonInlineElement132,
														expr: &oneOrMoreExpr{
															pos: position{line: 697, col: 8, offset: 29815},
															expr: &seqExpr{
																pos: position{line: 697, col: 9, offset: 29816},
																exprs: []interface{}{
																	&notExpr{
																		pos: position{line: 697, col: 9, offset: 29816},
																		expr: &choiceExpr{
																			pos: position{line: 717, col: 12, offset: 30188},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 717, col: 12, offset: 30188},
																					val:        "\r\n",
																					ignoreCase: false,
																				},
																				&charClassMatcher{
																					pos:        position{line: 717, col: 21, offset: 30197},
																					val:        "[\\r\\n]",
																					chars:      []rune{'\r', '\n'},
																					ignoreCase: false,
																					inverted:   false,
																				},
																			},
																		},
																	},
																	&notExpr{
																		pos: position{line: 697, col: 18, offset: 29825},
																		expr: &choiceExpr{
																			pos: position{line: 713, col: 7, offset: 30126},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 713, col: 7, offset: 30126},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 713, col: 13, offset: 30132},
																					run: (*parser).callonInlineElement142,
																					expr: &litMatcher{
																						pos:        position{line: 713, col: 13, offset: 30132},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&notExpr{
																		pos: position{line: 697, col: 22, offset: 29829},
																		expr: &litMatcher{
																			pos:        position{line: 697, col: 23, offset: 29830},
																			val:        "[",
																			ignoreCase: false,
																		},
																	},
																	&notExpr{
																		pos: position{line: 697, col: 27, offset: 29834},
																		expr: &litMatcher{
																			pos:        position{line: 697, col: 28, offset: 29835},
																			val:        "]",
																			ignoreCase: false,
																		},
																	},
																	&anyMatcher{
																		line: 697, col: 32, offset: 29839,
																	},
																},
															},
														},
													},
												},
											},
										},
										&labeledExpr{
											pos:   position{line: 585, col: 38, offset: 25144},
											label: "attributes",
											expr: &actionExpr{
												pos: position{line: 179, col: 21, offset: 7160},
												run: (*parser).callonInlineElement150,
												expr: &seqExpr{
													pos: position{line: 179, col: 21, offset: 7160},
													exprs: []interface{}{
														&litMatcher{
															pos:        position{line: 179, col: 21, offset: 7160},
															val:        "[",
															ignoreCase: false,
														},
														&labeledExpr{
															pos:   position{line: 179, col: 25, offset: 7164},
															label: "attributes",
															expr: &zeroOrMoreExpr{
																pos: position{line: 179, col: 36, offset: 7175},
																expr: &seqExpr{
																	pos: position{line: 179, col: 37, offset: 7176},
																	exprs: []interface{}{
																		&notExpr{
																			pos: position{line: 179, col: 37, offset: 7176},
																			expr: &litMatcher{
																				pos:        position{line: 179, col: 38, offset: 7177},
																				val:        "]",
																				ignoreCase: false,
																			},
																		},
																		&notExpr{
																			pos: position{line: 179, col: 42, offset: 7181},
																			expr: &choiceExpr{
																				pos: position{line: 717, col: 12, offset: 30188},
																				alternatives: []interface{}{
																					&litMatcher{
																						pos:        position{line: 717, col: 12, offset: 30188},
																						val:        "\r\n",
																						ignoreCase: false,
																					},
																					&charClassMatcher{
																						pos:        position{line: 717, col: 21, offset: 30197},
																						val:        "[\\r\\n]",
																						chars:      []rune{'\r', '\n'},
																						ignoreCase: false,
																						inverted:   false,
																					},
																				},
																			},
																		},
																		&notExpr{
																			pos: position{line: 179, col: 51, offset: 7190},
																			expr: &notExpr{
																				pos: position{line: 719, col: 8, offset: 30217},
																				expr: &anyMatcher{
																					line: 719, col: 9, offset: 30218,
																				},
																			},
																		},
																		&anyMatcher{
																			line: 179, col: 56, offset: 7195,
																		},
																	},
																},
															},
														},
														&litMatcher{
															pos:        position{line: 179, col: 60, offset: 7199},
															val:        "]",
															ignoreCase: false,
														},
													},
												},
											},
										},
									},
								},
							},
							&actionExpr{
								pos: position{line: 587, col: 5, offset: 25254},
								run: (*parser).callonInlineElement167,
								expr: &labeledExpr{
									pos:   position{line: 587, col: 5, offset: 25254},
									label: "url",
									expr: &seqExpr{
										pos: position{line: 587, col: 10, offset: 25259},
										exprs: []interface{}{
											&choiceExpr{
												pos: position{line: 709, col: 15, offset: 30046},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 709, col: 15, offset: 30046},
														val:        "http://",
														ignoreCase: false,
													},
													&litMatcher{
														pos:        position{line: 709, col: 27, offset: 30058},
														val:        "https://",
														ignoreCase: false,
													},
													&litMatcher{
														pos:        position{line: 709, col: 40, offset: 30071},
														val:        "ftp://",
														ignoreCase: false,
													},
													&litMatcher{
														pos:        position{line: 709, col: 51, offset: 30082},
														val:        "irc://",
														ignoreCase: false,
													},
													&litMatcher{
														pos:        position{line: 709, col: 62, offset: 30093},
														val:        "mailto:",
														ignoreCase: false,
													},
												},
											},
											&actionExpr{
												pos: position{line: 697, col: 8, offset: 29815},
												run: (*parser).callonInlineElement176,
												expr: &oneOrMoreExpr{
													pos: position{line: 697, col: 8, offset: 29815},
													expr: &seqExpr{
														pos: position{line: 697, col: 9, offset: 29816},
														exprs: []interface{}{
															&notExpr{
																pos: position{line: 697, col: 9, offset: 29816},
																expr: &choiceExpr{
																	pos: position{line: 717, col: 12, offset: 30188},
																	alternatives: []interface{}{
																		&litMatcher{
																			pos:        position{line: 717, col: 12, offset: 30188},
																			val:        "\r\n",
																			ignoreCase: false,
																		},
																		&charClassMatcher{
																			pos:        position{line: 717, col: 21, offset: 30197},
																			val:        "[\\r\\n]",
																			chars:      []rune{'\r', '\n'},
																			ignoreCase: false,
																			inverted:   false,
																		},
																	},
																},
															},
															&notExpr{
																pos: position{line: 697, col: 18, offset: 29825},
																expr: &choiceExpr{
																	pos: position{line: 713, col: 7, offset: 30126},
																	alternatives: []interface{}{
																		&litMatcher{
																			pos:        position{line: 713, col: 7, offset: 30126},
																			val:        " ",
																			ignoreCase: false,
																		},
																		&actionExpr{
																			pos: position{line: 713, col: 13, offset: 30132},
																			run: (*parser).callonInlineElement186,
																			expr: &litMatcher{
																				pos:        position{line: 713, col: 13, offset: 30132},
																				val:        "\t",
																				ignoreCase: false,
																			},
																		},
																	},
																},
															},
															&notExpr{
																pos: position{line: 697, col: 22, offset: 29829},
																expr: &litMatcher{
																	pos:        position{line: 697, col: 23, offset: 29830},
																	val:        "[",
																	ignoreCase: false,
																},
															},
															&notExpr{
																pos: position{line: 697, col: 27, offset: 29834},
																expr: &litMatcher{
																	pos:        position{line: 697, col: 28, offset: 29835},
																	val:        "]",
																	ignoreCase: false,
																},
															},
															&anyMatcher{
																line: 697, col: 32, offset: 29839,
															},
														},
													},
												},
											},
										},
									},
								},
							},
							&actionExpr{
								pos: position{line: 103, col: 34, offset: 4376},
								run: (*parser).callonInlineElement193,
								expr: &seqExpr{
									pos: position{line: 103, col: 34, offset: 4376},
									exprs: []interface{}{
										&litMatcher{
											pos:        position{line: 103, col: 34, offset: 4376},
											val:        "{",
											ignoreCase: false,
										},
										&labeledExpr{
											pos:   position{line: 103, col: 38, offset: 4380},
											label: "name",
											expr: &seqExpr{
												pos: position{line: 110, col: 18, offset: 4666},
												exprs: []interface{}{
													&charClassMatcher{
														pos:        position{line: 110, col: 19, offset: 4667},
														val:        "[_A-Za-z0-9]",
														chars:      []rune{'_'},
														ranges:     []rune{'A', 'Z', 'a', 'z', '0', '9'},
														ignoreCase: false,
														inverted:   false,
													},
													&zeroOrMoreExpr{
														pos: position{line: 110, col: 48, offset: 4696},
														expr: &charClassMatcher{
															pos:        position{line: 110, col: 49, offset: 4697},
															val:        "[-A-Za-z0-9]",
															chars:      []rune{'-'},
															ranges:     []rune{'A', 'Z', 'a', 'z', '0', '9'},
															ignoreCase: false,
															inverted:   false,
														},
													},
												},
											},
										},
										&litMatcher{
											pos:        position{line: 103, col: 59, offset: 4401},
											val:        "}",
											ignoreCase: false,
										},
									},
								},
							},
							&actionExpr{
								pos: position{line: 693, col: 9, offset: 29754},
								run: (*parser).callonInlineElement202,
								expr: &oneOrMoreExpr{
									pos: position{line: 693, col: 9, offset: 29754},
									expr: &seqExpr{
										pos: position{line: 693, col: 10, offset: 29755},
										exprs: []interface{}{
											&notExpr{
												pos: position{line: 693, col: 10, offset: 29755},
												expr: &choiceExpr{
													pos: position{line: 717, col: 12, offset: 30188},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 717, col: 12, offset: 30188},
															val:        "\r\n",
															ignoreCase: false,
														},
														&charClassMatcher{
															pos:        position{line: 717, col: 21, offset: 30197},
															val:        "[\\r\\n]",
															chars:      []rune{'\r', '\n'},
															ignoreCase: false,
															inverted:   false,
														},
													},
												},
											},
											&notExpr{
												pos: position{line: 693, col: 19, offset: 29764},
												expr: &choiceExpr{
													pos: position{line: 713, col: 7, offset: 30126},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 713, col: 7, offset: 30126},
															val:        " ",
															ignoreCase: false,
														},
														&actionExpr{
															pos: position{line: 713, col: 13, offset: 30132},
															run: (*parser).callonInlineElement212,
															expr: &litMatcher{
																pos:        position{line: 713, col: 13, offset: 30132},
																val:        "\t",
																ignoreCase: false,
															},
														},
													},
												},
											},
											&anyMatcher{
												line: 693, col: 23, offset: 29768,
											},
										},
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "QuotedText",
			pos:  position{line: 482, col: 1, offset: 19514},
			expr: &choiceExpr{
				pos: position{line: 482, col: 15, offset: 19528},
				alternatives: []interface{}{
					&ruleRefExpr{
						pos:  position{line: 482, col: 15, offset: 19528},
						name: "BoldText",
					},
					&ruleRefExpr{
						pos:  position{line: 482, col: 26, offset: 19539},
						name: "ItalicText",
					},
					&ruleRefExpr{
						pos:  position{line: 482, col: 39, offset: 19552},
						name: "MonospaceText",
					},
					&ruleRefExpr{
						pos:  position{line: 483, col: 13, offset: 19580},
						name: "EscapedBoldText",
					},
					&ruleRefExpr{
						pos:  position{line: 483, col: 31, offset: 19598},
						name: "EscapedItalicText",
					},
					&ruleRefExpr{
						pos:  position{line: 483, col: 51, offset: 19618},
						name: "EscapedMonospaceText",
					},
				},
			},
		},
		{
			name: "BoldText",
			pos:  position{line: 485, col: 1, offset: 19640},
			expr: &choiceExpr{
				pos: position{line: 485, col: 13, offset: 19652},
				alternatives: []interface{}{
					&actionExpr{
						pos: position{line: 485, col: 13, offset: 19652},
						run: (*parser).callonBoldText2,
						expr: &seqExpr{
							pos: position{line: 485, col: 13, offset: 19652},
							exprs: []interface{}{
								&notExpr{
									pos: position{line: 485, col: 13, offset: 19652},
									expr: &litMatcher{
										pos:        position{line: 485, col: 14, offset: 19653},
										val:        "\\\\",
										ignoreCase: false,
									},
								},
								&litMatcher{
									pos:        position{line: 485, col: 19, offset: 19658},
									val:        "**",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 485, col: 24, offset: 19663},
									label: "content",
									expr: &ruleRefExpr{
										pos:  position{line: 485, col: 33, offset: 19672},
										name: "QuotedTextContent",
									},
								},
								&litMatcher{
									pos:        position{line: 485, col: 52, offset: 19691},
									val:        "**",
									ignoreCase: false,
								},
							},
						},
					},
					&actionExpr{
						pos: position{line: 487, col: 5, offset: 19816},
						run: (*parser).callonBoldText10,
						expr: &seqExpr{
							pos: position{line: 487, col: 5, offset: 19816},
							exprs: []interface{}{
								&notExpr{
									pos: position{line: 487, col: 5, offset: 19816},
									expr: &litMatcher{
										pos:        position{line: 487, col: 6, offset: 19817},
										val:        "\\\\",
										ignoreCase: false,
									},
								},
								&litMatcher{
									pos:        position{line: 487, col: 11, offset: 19822},
									val:        "**",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 487, col: 16, offset: 19827},
									label: "content",
									expr: &ruleRefExpr{
										pos:  position{line: 487, col: 25, offset: 19836},
										name: "QuotedTextContent",
									},
								},
								&litMatcher{
									pos:        position{line: 487, col: 44, offset: 19855},
									val:        "*",
									ignoreCase: false,
								},
							},
						},
					},
					&actionExpr{
						pos: position{line: 490, col: 5, offset: 20020},
						run: (*parser).callonBoldText18,
						expr: &seqExpr{
							pos: position{line: 490, col: 5, offset: 20020},
							exprs: []interface{}{
								&notExpr{
									pos: position{line: 490, col: 5, offset: 20020},
									expr: &litMatcher{
										pos:        position{line: 490, col: 6, offset: 20021},
										val:        "\\",
										ignoreCase: false,
									},
								},
								&litMatcher{
									pos:        position{line: 490, col: 10, offset: 20025},
									val:        "*",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 490, col: 14, offset: 20029},
									label: "content",
									expr: &ruleRefExpr{
										pos:  position{line: 490, col: 23, offset: 20038},
										name: "QuotedTextContent",
									},
								},
								&litMatcher{
									pos:        position{line: 490, col: 42, offset: 20057},
									val:        "*",
									ignoreCase: false,
								},
							},
						},
					},
				},
			},
		},
		{
			name: "EscapedBoldText",
			pos:  position{line: 494, col: 1, offset: 20157},
			expr: &choiceExpr{
				pos: position{line: 494, col: 20, offset: 20176},
				alternatives: []interface{}{
					&actionExpr{
						pos: position{line: 494, col: 20, offset: 20176},
						run: (*parser).callonEscapedBoldText2,
						expr: &seqExpr{
							pos: position{line: 494, col: 20, offset: 20176},
							exprs: []interface{}{
								&labeledExpr{
									pos:   position{line: 494, col: 20, offset: 20176},
									label: "backslashes",
									expr: &seqExpr{
										pos: position{line: 494, col: 33, offset: 20189},
										exprs: []interface{}{
											&litMatcher{
												pos:        position{line: 494, col: 33, offset: 20189},
												val:        "\\\\",
												ignoreCase: false,
											},
											&zeroOrMoreExpr{
												pos: position{line: 494, col: 38, offset: 20194},
												expr: &litMatcher{
													pos:        position{line: 494, col: 38, offset: 20194},
													val:        "\\",
													ignoreCase: false,
												},
											},
										},
									},
								},
								&litMatcher{
									pos:        position{line: 494, col: 44, offset: 20200},
									val:        "**",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 494, col: 49, offset: 20205},
									label: "content",
									expr: &ruleRefExpr{
										pos:  position{line: 494, col: 58, offset: 20214},
										name: "QuotedTextContent",
									},
								},
								&litMatcher{
									pos:        position{line: 494, col: 77, offset: 20233},
									val:        "**",
									ignoreCase: false,
								},
							},
						},
					},
					&actionExpr{
						pos: position{line: 496, col: 5, offset: 20388},
						run: (*parser).callonEscapedBoldText13,
						expr: &seqExpr{
							pos: position{line: 496, col: 5, offset: 20388},
							exprs: []interface{}{
								&labeledExpr{
									pos:   position{line: 496, col: 5, offset: 20388},
									label: "backslashes",
									expr: &seqExpr{
										pos: position{line: 496, col: 18, offset: 20401},
										exprs: []interface{}{
											&litMatcher{
												pos:        position{line: 496, col: 18, offset: 20401},
												val:        "\\",
												ignoreCase: false,
											},
											&zeroOrMoreExpr{
												pos: position{line: 496, col: 22, offset: 20405},
												expr: &litMatcher{
													pos:        position{line: 496, col: 22, offset: 20405},
													val:        "\\",
													ignoreCase: false,
												},
											},
										},
									},
								},
								&litMatcher{
									pos:        position{line: 496, col: 28, offset: 20411},
									val:        "**",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 496, col: 33, offset: 20416},
									label: "content",
									expr: &ruleRefExpr{
										pos:  position{line: 496, col: 42, offset: 20425},
										name: "QuotedTextContent",
									},
								},
								&litMatcher{
									pos:        position{line: 496, col: 61, offset: 20444},
									val:        "*",
									ignoreCase: false,
								},
							},
						},
					},
					&actionExpr{
						pos: position{line: 499, col: 5, offset: 20638},
						run: (*parser).callonEscapedBoldText24,
						expr: &seqExpr{
							pos: position{line: 499, col: 5, offset: 20638},
							exprs: []interface{}{
								&labeledExpr{
									pos:   position{line: 499, col: 5, offset: 20638},
									label: "backslashes",
									expr: &seqExpr{
										pos: position{line: 499, col: 18, offset: 20651},
										exprs: []interface{}{
											&litMatcher{
												pos:        position{line: 499, col: 18, offset: 20651},
												val:        "\\",
												ignoreCase: false,
											},
											&zeroOrMoreExpr{
												pos: position{line: 499, col: 22, offset: 20655},
												expr: &litMatcher{
													pos:        position{line: 499, col: 22, offset: 20655},
													val:        "\\",
													ignoreCase: false,
												},
											},
										},
									},
								},
								&litMatcher{
									pos:        position{line: 499, col: 28, offset: 20661},
									val:        "*",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 499, col: 32, offset: 20665},
									label: "content",
									expr: &ruleRefExpr{
										pos:  position{line: 499, col: 41, offset: 20674},
										name: "QuotedTextContent",
									},
								},
								&litMatcher{
									pos:        position{line: 499, col: 60, offset: 20693},
									val:        "*",
									ignoreCase: false,
								},
							},
						},
					},
				},
			},
		},
		{
			name: "ItalicText",
			pos:  position{line: 503, col: 1, offset: 20845},
			expr: &choiceExpr{
				pos: position{line: 503, col: 15, offset: 20859},
				alternatives: []interface{}{
					&actionExpr{
						pos: position{line: 503, col: 15, offset: 20859},
						run: (*parser).callonItalicText2,
						expr: &seqExpr{
							pos: position{line: 503, col: 15, offset: 20859},
							exprs: []interface{}{
								&notExpr{
									pos: position{line: 503, col: 15, offset: 20859},
									expr: &litMatcher{
										pos:        position{line: 503, col: 16, offset: 20860},
										val:        "\\\\",
										ignoreCase: false,
									},
								},
								&litMatcher{
									pos:        position{line: 503, col: 21, offset: 20865},
									val:        "__",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 503, col: 26, offset: 20870},
									label: "content",
									expr: &ruleRefExpr{
										pos:  position{line: 503, col: 35, offset: 20879},
										name: "QuotedTextContent",
									},
								},
								&litMatcher{
									pos:        position{line: 503, col: 54, offset: 20898},
									val:        "__",
									ignoreCase: false,
								},
							},
						},
					},
					&actionExpr{
						pos: position{line: 505, col: 5, offset: 20979},
						run: (*parser).callonItalicText10,
						expr: &seqExpr{
							pos: position{line: 505, col: 5, offset: 20979},
							exprs: []interface{}{
								&notExpr{
									pos: position{line: 505, col: 5, offset: 20979},
									expr: &litMatcher{
										pos:        position{line: 505, col: 6, offset: 20980},
										val:        "\\\\",
										ignoreCase: false,
									},
								},
								&litMatcher{
									pos:        position{line: 505, col: 11, offset: 20985},
									val:        "__",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 505, col: 16, offset: 20990},
									label: "content",
									expr: &ruleRefExpr{
										pos:  position{line: 505, col: 25, offset: 20999},
										name: "QuotedTextContent",
									},
								},
								&litMatcher{
									pos:        position{line: 505, col: 44, offset: 21018},
									val:        "_",
									ignoreCase: false,
								},
							},
						},
					},
					&actionExpr{
						pos: position{line: 508, col: 5, offset: 21185},
						run: (*parser).callonItalicText18,
						expr: &seqExpr{
							pos: position{line: 508, col: 5, offset: 21185},
							exprs: []interface{}{
								&notExpr{
									pos: position{line: 508, col: 5, offset: 21185},
									expr: &litMatcher{
										pos:        position{line: 508, col: 6, offset: 21186},
										val:        "\\",
										ignoreCase: false,
									},
								},
								&litMatcher{
									pos:        position{line: 508, col: 10, offset: 21190},
									val:        "_",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 508, col: 14, offset: 21194},
									label: "content",
									expr: &ruleRefExpr{
										pos:  position{line: 508, col: 23, offset: 21203},
										name: "QuotedTextContent",
									},
								},
								&litMatcher{
									pos:        position{line: 508, col: 42, offset: 21222},
									val:        "_",
									ignoreCase: false,
								},
							},
						},
					},
				},
			},
		},
		{
			name: "EscapedItalicText",
			pos:  position{line: 512, col: 1, offset: 21301},
			expr: &choiceExpr{
				pos: position{line: 512, col: 22, offset: 21322},
				alternatives: []interface{}{
					&actionExpr{
						pos: position{line: 512, col: 22, offset: 21322},
						run: (*parser).callonEscapedItalicText2,
						expr: &seqExpr{
							pos: position{line: 512, col: 22, offset: 21322},
							exprs: []interface{}{
								&labeledExpr{
									pos:   position{line: 512, col: 22, offset: 21322},
									label: "backslashes",
									expr: &seqExpr{
										pos: position{line: 512, col: 35, offset: 21335},
										exprs: []interface{}{
											&litMatcher{
												pos:        position{line: 512, col: 35, offset: 21335},
												val:        "\\\\",
												ignoreCase: false,
											},
											&zeroOrMoreExpr{
												pos: position{line: 512, col: 40, offset: 21340},
												expr: &litMatcher{
													pos:        position{line: 512, col: 40, offset: 21340},
													val:        "\\",
													ignoreCase: false,
												},
											},
										},
									},
								},
								&litMatcher{
									pos:        position{line: 512, col: 46, offset: 21346},
									val:        "__",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 512, col: 51, offset: 21351},
									label: "content",
									expr: &ruleRefExpr{
										pos:  position{line: 512, col: 60, offset: 21360},
										name: "QuotedTextContent",
									},
								},
								&litMatcher{
									pos:        position{line: 512, col: 79, offset: 21379},
									val:        "__",
									ignoreCase: false,
								},
							},
						},
					},
					&actionExpr{
						pos: position{line: 514, col: 5, offset: 21534},
						run: (*parser).callonEscapedItalicText13,
						expr: &seqExpr{
							pos: position{line: 514, col: 5, offset: 21534},
							exprs: []interface{}{
								&labeledExpr{
									pos:   position{line: 514, col: 5, offset: 21534},
									label: "backslashes",
									expr: &seqExpr{
										pos: position{line: 514, col: 18, offset: 21547},
										exprs: []interface{}{
											&litMatcher{
												pos:        position{line: 514, col: 18, offset: 21547},
												val:        "\\",
												ignoreCase: false,
											},
											&zeroOrMoreExpr{
												pos: position{line: 514, col: 22, offset: 21551},
												expr: &litMatcher{
													pos:        position{line: 514, col: 22, offset: 21551},
													val:        "\\",
													ignoreCase: false,
												},
											},
										},
									},
								},
								&litMatcher{
									pos:        position{line: 514, col: 28, offset: 21557},
									val:        "__",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 514, col: 33, offset: 21562},
									label: "content",
									expr: &ruleRefExpr{
										pos:  position{line: 514, col: 42, offset: 21571},
										name: "QuotedTextContent",
									},
								},
								&litMatcher{
									pos:        position{line: 514, col: 61, offset: 21590},
									val:        "_",
									ignoreCase: false,
								},
							},
						},
					},
					&actionExpr{
						pos: position{line: 517, col: 5, offset: 21784},
						run: (*parser).callonEscapedItalicText24,
						expr: &seqExpr{
							pos: position{line: 517, col: 5, offset: 21784},
							exprs: []interface{}{
								&labeledExpr{
									pos:   position{line: 517, col: 5, offset: 21784},
									label: "backslashes",
									expr: &seqExpr{
										pos: position{line: 517, col: 18, offset: 21797},
										exprs: []interface{}{
											&litMatcher{
												pos:        position{line: 517, col: 18, offset: 21797},
												val:        "\\",
												ignoreCase: false,
											},
											&zeroOrMoreExpr{
												pos: position{line: 517, col: 22, offset: 21801},
												expr: &litMatcher{
													pos:        position{line: 517, col: 22, offset: 21801},
													val:        "\\",
													ignoreCase: false,
												},
											},
										},
									},
								},
								&litMatcher{
									pos:        position{line: 517, col: 28, offset: 21807},
									val:        "_",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 517, col: 32, offset: 21811},
									label: "content",
									expr: &ruleRefExpr{
										pos:  position{line: 517, col: 41, offset: 21820},
										name: "QuotedTextContent",
									},
								},
								&litMatcher{
									pos:        position{line: 517, col: 60, offset: 21839},
									val:        "_",
									ignoreCase: false,
								},
							},
						},
					},
				},
			},
		},
		{
			name: "MonospaceText",
			pos:  position{line: 521, col: 1, offset: 21991},
			expr: &choiceExpr{
				pos: position{line: 521, col: 18, offset: 22008},
				alternatives: []interface{}{
					&actionExpr{
						pos: position{line: 521, col: 18, offset: 22008},
						run: (*parser).callonMonospaceText2,
						expr: &seqExpr{
							pos: position{line: 521, col: 18, offset: 22008},
							exprs: []interface{}{
								&notExpr{
									pos: position{line: 521, col: 18, offset: 22008},
									expr: &litMatcher{
										pos:        position{line: 521, col: 19, offset: 22009},
										val:        "\\\\",
										ignoreCase: false,
									},
								},
								&litMatcher{
									pos:        position{line: 521, col: 24, offset: 22014},
									val:        "``",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 521, col: 29, offset: 22019},
									label: "content",
									expr: &ruleRefExpr{
										pos:  position{line: 521, col: 38, offset: 22028},
										name: "QuotedTextContent",
									},
								},
								&litMatcher{
									pos:        position{line: 521, col: 57, offset: 22047},
									val:        "``",
									ignoreCase: false,
								},
							},
						},
					},
					&actionExpr{
						pos: position{line: 523, col: 5, offset: 22177},
						run: (*parser).callonMonospaceText10,
						expr: &seqExpr{
							pos: position{line: 523, col: 5, offset: 22177},
							exprs: []interface{}{
								&notExpr{
									pos: position{line: 523, col: 5, offset: 22177},
									expr: &litMatcher{
										pos:        position{line: 523, col: 6, offset: 22178},
										val:        "\\\\",
										ignoreCase: false,
									},
								},
								&litMatcher{
									pos:        position{line: 523, col: 11, offset: 22183},
									val:        "``",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 523, col: 16, offset: 22188},
									label: "content",
									expr: &ruleRefExpr{
										pos:  position{line: 523, col: 25, offset: 22197},
										name: "QuotedTextContent",
									},
								},
								&litMatcher{
									pos:        position{line: 523, col: 44, offset: 22216},
									val:        "`",
									ignoreCase: false,
								},
							},
						},
					},
					&actionExpr{
						pos: position{line: 526, col: 5, offset: 22386},
						run: (*parser).callonMonospaceText18,
						expr: &seqExpr{
							pos: position{line: 526, col: 5, offset: 22386},
							exprs: []interface{}{
								&notExpr{
									pos: position{line: 526, col: 5, offset: 22386},
									expr: &litMatcher{
										pos:        position{line: 526, col: 6, offset: 22387},
										val:        "\\",
										ignoreCase: false,
									},
								},
								&litMatcher{
									pos:        position{line: 526, col: 10, offset: 22391},
									val:        "`",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 526, col: 14, offset: 22395},
									label: "content",
									expr: &ruleRefExpr{
										pos:  position{line: 526, col: 23, offset: 22404},
										name: "QuotedTextContent",
									},
								},
								&litMatcher{
									pos:        position{line: 526, col: 42, offset: 22423},
									val:        "`",
									ignoreCase: false,
								},
							},
						},
					},
				},
			},
		},
		{
			name: "EscapedMonospaceText",
			pos:  position{line: 530, col: 1, offset: 22550},
			expr: &choiceExpr{
				pos: position{line: 530, col: 25, offset: 22574},
				alternatives: []interface{}{
					&actionExpr{
						pos: position{line: 530, col: 25, offset: 22574},
						run: (*parser).callonEscapedMonospaceText2,
						expr: &seqExpr{
							pos: position{line: 530, col: 25, offset: 22574},
							exprs: []interface{}{
								&labeledExpr{
									pos:   position{line: 530, col: 25, offset: 22574},
									label: "backslashes",
									expr: &seqExpr{
										pos: position{line: 530, col: 38, offset: 22587},
										exprs: []interface{}{
											&litMatcher{
												pos:        position{line: 530, col: 38, offset: 22587},
												val:        "\\\\",
												ignoreCase: false,
											},
											&zeroOrMoreExpr{
												pos: position{line: 530, col: 43, offset: 22592},
												expr: &litMatcher{
													pos:        position{line: 530, col: 43, offset: 22592},
													val:        "\\",
													ignoreCase: false,
												},
											},
										},
									},
								},
								&litMatcher{
									pos:        position{line: 530, col: 49, offset: 22598},
									val:        "``",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 530, col: 54, offset: 22603},
									label: "content",
									expr: &ruleRefExpr{
										pos:  position{line: 530, col: 63, offset: 22612},
										name: "QuotedTextContent",
									},
								},
								&litMatcher{
									pos:        position{line: 530, col: 82, offset: 22631},
									val:        "``",
									ignoreCase: false,
								},
							},
						},
					},
					&actionExpr{
						pos: position{line: 532, col: 5, offset: 22786},
						run: (*parser).callonEscapedMonospaceText13,
						expr: &seqExpr{
							pos: position{line: 532, col: 5, offset: 22786},
							exprs: []interface{}{
								&labeledExpr{
									pos:   position{line: 532, col: 5, offset: 22786},
									label: "backslashes",
									expr: &seqExpr{
										pos: position{line: 532, col: 18, offset: 22799},
										exprs: []interface{}{
											&litMatcher{
												pos:        position{line: 532, col: 18, offset: 22799},
												val:        "\\",
												ignoreCase: false,
											},
											&zeroOrMoreExpr{
												pos: position{line: 532, col: 22, offset: 22803},
												expr: &litMatcher{
													pos:        position{line: 532, col: 22, offset: 22803},
													val:        "\\",
													ignoreCase: false,
												},
											},
										},
									},
								},
								&litMatcher{
									pos:        position{line: 532, col: 28, offset: 22809},
									val:        "``",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 532, col: 33, offset: 22814},
									label: "content",
									expr: &ruleRefExpr{
										pos:  position{line: 532, col: 42, offset: 22823},
										name: "QuotedTextContent",
									},
								},
								&litMatcher{
									pos:        position{line: 532, col: 61, offset: 22842},
									val:        "`",
									ignoreCase: false,
								},
							},
						},
					},
					&actionExpr{
						pos: position{line: 535, col: 5, offset: 23036},
						run: (*parser).callonEscapedMonospaceText24,
						expr: &seqExpr{
							pos: position{line: 535, col: 5, offset: 23036},
							exprs: []interface{}{
								&labeledExpr{
									pos:   position{line: 535, col: 5, offset: 23036},
									label: "backslashes",
									expr: &seqExpr{
										pos: position{line: 535, col: 18, offset: 23049},
										exprs: []interface{}{
											&litMatcher{
												pos:        position{line: 535, col: 18, offset: 23049},
												val:        "\\",
												ignoreCase: false,
											},
											&zeroOrMoreExpr{
												pos: position{line: 535, col: 22, offset: 23053},
												expr: &litMatcher{
													pos:        position{line: 535, col: 22, offset: 23053},
													val:        "\\",
													ignoreCase: false,
												},
											},
										},
									},
								},
								&litMatcher{
									pos:        position{line: 535, col: 28, offset: 23059},
									val:        "`",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 535, col: 32, offset: 23063},
									label: "content",
									expr: &ruleRefExpr{
										pos:  position{line: 535, col: 41, offset: 23072},
										name: "QuotedTextContent",
									},
								},
								&litMatcher{
									pos:        position{line: 535, col: 60, offset: 23091},
									val:        "`",
									ignoreCase: false,
								},
							},
						},
					},
				},
			},
		},
		{
			name: "QuotedTextContent",
			pos:  position{line: 539, col: 1, offset: 23243},
			expr: &seqExpr{
				pos: position{line: 539, col: 22, offset: 23264},
				exprs: []interface{}{
					&ruleRefExpr{
						pos:  position{line: 539, col: 22, offset: 23264},
						name: "QuotedTextContentElement",
					},
					&zeroOrMoreExpr{
						pos: position{line: 539, col: 47, offset: 23289},
						expr: &seqExpr{
							pos: position{line: 539, col: 48, offset: 23290},
							exprs: []interface{}{
								&oneOrMoreExpr{
									pos: position{line: 539, col: 48, offset: 23290},
									expr: &choiceExpr{
										pos: position{line: 713, col: 7, offset: 30126},
										alternatives: []interface{}{
											&litMatcher{
												pos:        position{line: 713, col: 7, offset: 30126},
												val:        " ",
												ignoreCase: false,
											},
											&actionExpr{
												pos: position{line: 713, col: 13, offset: 30132},
												run: (*parser).callonQuotedTextContent8,
												expr: &litMatcher{
													pos:        position{line: 713, col: 13, offset: 30132},
													val:        "\t",
													ignoreCase: false,
												},
											},
										},
									},
								},
								&ruleRefExpr{
									pos:  position{line: 539, col: 52, offset: 23294},
									name: "QuotedTextContentElement",
								},
							},
						},
					},
				},
			},
		},
		{
			name: "QuotedTextContentElement",
			pos:  position{line: 541, col: 1, offset: 23322},
			expr: &choiceExpr{
				pos: position{line: 541, col: 29, offset: 23350},
				alternatives: []interface{}{
					&ruleRefExpr{
						pos:  position{line: 541, col: 29, offset: 23350},
						name: "QuotedText",
					},
					&oneOrMoreExpr{
						pos: position{line: 543, col: 19, offset: 23527},
						expr: &seqExpr{
							pos: position{line: 543, col: 20, offset: 23528},
							exprs: []interface{}{
								&notExpr{
									pos: position{line: 543, col: 20, offset: 23528},
									expr: &choiceExpr{
										pos: position{line: 717, col: 12, offset: 30188},
										alternatives: []interface{}{
											&litMatcher{
												pos:        position{line: 717, col: 12, offset: 30188},
												val:        "\r\n",
												ignoreCase: false,
											},
											&charClassMatcher{
												pos:        position{line: 717, col: 21, offset: 30197},
												val:        "[\\r\\n]",
												chars:      []rune{'\r', '\n'},
												ignoreCase: false,
												inverted:   false,
											},
										},
									},
								},
								&notExpr{
									pos: position{line: 543, col: 29, offset: 23537},
									expr: &choiceExpr{
										pos: position{line: 713, col: 7, offset: 30126},
										alternatives: []interface{}{
											&litMatcher{
												pos:        position{line: 713, col: 7, offset: 30126},
												val:        " ",
												ignoreCase: false,
											},
											&actionExpr{
												pos: position{line: 713, col: 13, offset: 30132},
												run: (*parser).callonQuotedTextContentElement12,
												expr: &litMatcher{
													pos:        position{line: 713, col: 13, offset: 30132},
													val:        "\t",
													ignoreCase: false,
												},
											},
										},
									},
								},
								&notExpr{
									pos: position{line: 543, col: 33, offset: 23541},
									expr: &litMatcher{
										pos:        position{line: 543, col: 34, offset: 23542},
										val:        "*",
										ignoreCase: false,
									},
								},
								&notExpr{
									pos: position{line: 543, col: 38, offset: 23546},
									expr: &litMatcher{
										pos:        position{line: 543, col: 39, offset: 23547},
										val:        "_",
										ignoreCase: false,
									},
								},
								&notExpr{
									pos: position{line: 543, col: 43, offset: 23551},
									expr: &litMatcher{
										pos:        position{line: 543, col: 44, offset: 23552},
										val:        "`",
										ignoreCase: false,
									},
								},
								&anyMatcher{
									line: 543, col: 48, offset: 23556,
								},
							},
						},
					},
					&actionExpr{
						pos: position{line: 545, col: 29, offset: 23627},
						run: (*parser).callonQuotedTextContentElement21,
						expr: &oneOrMoreExpr{
							pos: position{line: 545, col: 29, offset: 23627},
							expr: &seqExpr{
								pos: position{line: 545, col: 30, offset: 23628},
								exprs: []interface{}{
									&notExpr{
										pos: position{line: 545, col: 30, offset: 23628},
										expr: &choiceExpr{
											pos: position{line: 717, col: 12, offset: 30188},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 717, col: 12, offset: 30188},
													val:        "\r\n",
													ignoreCase: false,
												},
												&charClassMatcher{
													pos:        position{line: 717, col: 21, offset: 30197},
													val:        "[\\r\\n]",
													chars:      []rune{'\r', '\n'},
													ignoreCase: false,
													inverted:   false,
												},
											},
										},
									},
									&notExpr{
										pos: position{line: 545, col: 39, offset: 23637},
										expr: &choiceExpr{
											pos: position{line: 713, col: 7, offset: 30126},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 713, col: 7, offset: 30126},
													val:        " ",
													ignoreCase: false,
												},
												&actionExpr{
													pos: position{line: 713, col: 13, offset: 30132},
													run: (*parser).callonQuotedTextContentElement31,
													expr: &litMatcher{
														pos:        position{line: 713, col: 13, offset: 30132},
														val:        "\t",
														ignoreCase: false,
													},
												},
											},
										},
									},
									&anyMatcher{
										line: 545, col: 44, offset: 23642,
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "Passthrough",
			pos:  position{line: 555, col: 1, offset: 24041},
			expr: &choiceExpr{
				pos: position{line: 555, col: 16, offset: 24056},
				alternatives: []interface{}{
					&actionExpr{
						pos: position{line: 561, col: 26, offset: 24298},
						run: (*parser).callonPassthrough2,
						expr: &seqExpr{
							pos: position{line: 561, col: 26, offset: 24298},
							exprs: []interface{}{
								&litMatcher{
									pos:        position{line: 561, col: 26, offset: 24298},
									val:        "+++",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 561, col: 32, offset: 24304},
									label: "content",
									expr: &zeroOrMoreExpr{
										pos: position{line: 561, col: 40, offset: 24312},
										expr: &seqExpr{
											pos: position{line: 561, col: 41, offset: 24313},
											exprs: []interface{}{
												&notExpr{
													pos: position{line: 561, col: 41, offset: 24313},
													expr: &litMatcher{
														pos:        position{line: 561, col: 42, offset: 24314},
														val:        "+++",
														ignoreCase: false,
													},
												},
												&anyMatcher{
													line: 561, col: 48, offset: 24320,
												},
											},
										},
									},
								},
								&litMatcher{
									pos:        position{line: 561, col: 52, offset: 24324},
									val:        "+++",
									ignoreCase: false,
								},
							},
						},
					},
					&actionExpr{
						pos: position{line: 557, col: 26, offset: 24147},
						run: (*parser).callonPassthrough12,
						expr: &seqExpr{
							pos: position{line: 557, col: 26, offset: 24147},
							exprs: []interface{}{
								&litMatcher{
									pos:        position{line: 557, col: 26, offset: 24147},
									val:        "+",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 557, col: 30, offset: 24151},
									label: "content",
									expr: &zeroOrMoreExpr{
										pos: position{line: 557, col: 38, offset: 24159},
										expr: &seqExpr{
											pos: position{line: 557, col: 39, offset: 24160},
											exprs: []interface{}{
												&notExpr{
													pos: position{line: 557, col: 39, offset: 24160},
													expr: &choiceExpr{
														pos: position{line: 717, col: 12, offset: 30188},
														alternatives: []interface{}{
															&litMatcher{
																pos:        position{line: 717, col: 12, offset: 30188},
																val:        "\r\n",
																ignoreCase: false,
															},
															&charClassMatcher{
																pos:        position{line: 717, col: 21, offset: 30197},
																val:        "[\\r\\n]",
																chars:      []rune{'\r', '\n'},
																ignoreCase: false,
																inverted:   false,
															},
														},
													},
												},
												&notExpr{
													pos: position{line: 557, col: 48, offset: 24169},
													expr: &litMatcher{
														pos:        position{line: 557, col: 49, offset: 24170},
														val:        "+",
														ignoreCase: false,
													},
												},
												&anyMatcher{
													line: 557, col: 53, offset: 24174,
												},
											},
										},
									},
								},
								&litMatcher{
									pos:        position{line: 557, col: 57, offset: 24178},
									val:        "+",
									ignoreCase: false,
								},
							},
						},
					},
					&ruleRefExpr{
						pos:  position{line: 555, col: 64, offset: 24104},
						name: "PassthroughMacro",
					},
				},
			},
		},
		{
			name: "PassthroughMacro",
			pos:  position{line: 565, col: 1, offset: 24421},
			expr: &choiceExpr{
				pos: position{line: 565, col: 21, offset: 24441},
				alternatives: []interface{}{
					&actionExpr{
						pos: position{line: 565, col: 21, offset: 24441},
						run: (*parser).callonPassthroughMacro2,
						expr: &seqExpr{
							pos: position{line: 565, col: 21, offset: 24441},
							exprs: []interface{}{
								&litMatcher{
									pos:        position{line: 565, col: 21, offset: 24441},
									val:        "pass:[",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 565, col: 30, offset: 24450},
									label: "content",
									expr: &zeroOrMoreExpr{
										pos: position{line: 565, col: 38, offset: 24458},
										expr: &seqExpr{
											pos: position{line: 571, col: 31, offset: 24758},
											exprs: []interface{}{
												&notExpr{
													pos: position{line: 571, col: 31, offset: 24758},
													expr: &litMatcher{
														pos:        position{line: 571, col: 32, offset: 24759},
														val:        "]",
														ignoreCase: false,
													},
												},
												&anyMatcher{
													line: 571, col: 36, offset: 24763,
												},
											},
										},
									},
								},
								&litMatcher{
									pos:        position{line: 565, col: 67, offset: 24487},
									val:        "]",
									ignoreCase: false,
								},
							},
						},
					},
					&actionExpr{
						pos: position{line: 567, col: 5, offset: 24578},
						run: (*parser).callonPassthroughMacro12,
						expr: &seqExpr{
							pos: position{line: 567, col: 5, offset: 24578},
							exprs: []interface{}{
								&litMatcher{
									pos:        position{line: 567, col: 5, offset: 24578},
									val:        "pass:q[",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 567, col: 15, offset: 24588},
									label: "content",
									expr: &zeroOrMoreExpr{
										pos: position{line: 567, col: 23, offset: 24596},
										expr: &choiceExpr{
											pos: position{line: 567, col: 24, offset: 24597},
											alternatives: []interface{}{
												&ruleRefExpr{
													pos:  position{line: 567, col: 24, offset: 24597},
													name: "QuotedText",
												},
												&seqExpr{
													pos: position{line: 571, col: 31, offset: 24758},
													exprs: []interface{}{
														&notExpr{
															pos: position{line: 571, col: 31, offset: 24758},
															expr: &litMatcher{
																pos:        position{line: 571, col: 32, offset: 24759},
																val:        "]",
																ignoreCase: false,
															},
														},
														&anyMatcher{
															line: 571, col: 36, offset: 24763,
														},
													},
												},
											},
										},
									},
								},
								&litMatcher{
									pos:        position{line: 567, col: 65, offset: 24638},
									val:        "]",
									ignoreCase: false,
								},
							},
						},
					},
				},
			},
		},
		{
			name: "DelimitedBlock",
			pos:  position{line: 620, col: 1, offset: 26618},
			expr: &choiceExpr{
				pos: position{line: 620, col: 19, offset: 26636},
				alternatives: []interface{}{
					&ruleRefExpr{
						pos:  position{line: 620, col: 19, offset: 26636},
						name: "FencedBlock",
					},
					&ruleRefExpr{
						pos:  position{line: 620, col: 33, offset: 26650},
						name: "ListingBlock",
					},
					&ruleRefExpr{
						pos:  position{line: 620, col: 48, offset: 26665},
						name: "ExampleBlock",
					},
				},
			},
		},
		{
			name: "FencedBlock",
			pos:  position{line: 626, col: 1, offset: 26822},
			expr: &actionExpr{
				pos: position{line: 626, col: 16, offset: 26837},
				run: (*parser).callonFencedBlock1,
				expr: &seqExpr{
					pos: position{line: 626, col: 16, offset: 26837},
					exprs: []interface{}{
						&labeledExpr{
							pos:   position{line: 626, col: 16, offset: 26837},
							label: "attributes",
							expr: &zeroOrMoreExpr{
								pos: position{line: 626, col: 27, offset: 26848},
								expr: &actionExpr{
									pos: position{line: 120, col: 21, offset: 5018},
									run: (*parser).callonFencedBlock5,
									expr: &seqExpr{
										pos: position{line: 120, col: 21, offset: 5018},
										exprs: []interface{}{
											&labeledExpr{
												pos:   position{line: 120, col: 21, offset: 5018},
												label: "attr",
												expr: &choiceExpr{
													pos: position{line: 120, col: 27, offset: 5024},
													alternatives: []interface{}{
														&actionExpr{
															pos: position{line: 124, col: 14, offset: 5203},
															run: (*parser).callonFencedBlock9,
															expr: &labeledExpr{
																pos:   position{line: 124, col: 14, offset: 5203},
																label: "id",
																expr: &actionExpr{
																	pos: position{line: 130, col: 20, offset: 5333},
																	run: (*parser).callonFencedBlock11,
																	expr: &seqExpr{
																		pos: position{line: 130, col: 20, offset: 5333},
																		exprs: []interface{}{
																			&litMatcher{
																				pos:        position{line: 130, col: 20, offset: 5333},
																				val:        "[[",
																				ignoreCase: false,
																			},
																			&labeledExpr{
																				pos:   position{line: 130, col: 25, offset: 5338},
																				label: "id",
																				expr: &actionExpr{
																					pos: position{line: 701, col: 7, offset: 29885},
																					run: (*parser).callonFencedBlock15,
																					expr: &oneOrMoreExpr{
																						pos: position{line: 701, col: 7, offset: 29885},
																						expr: &seqExpr{
																							pos: position{line: 701, col: 8, offset: 29886},
																							exprs: []interface{}{
																								&notExpr{
																									pos: position{line: 701, col: 8, offset: 29886},
																									expr: &choiceExpr{
																										pos: position{line: 717, col: 12, offset: 30188},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 717, col: 12, offset: 30188},
																												val:        "\r\n",
																												ignoreCase: false,
																											},
																											&charClassMatcher{
																												pos:        position{line: 717, col: 21, offset: 30197},
																												val:        "[\\r\\n]",
																												chars:      []rune{'\r', '\n'},
																												ignoreCase: false,
																												inverted:   false,
																											},
																										},
																									},
																								},
																								&notExpr{
																									pos: position{line: 701, col: 17, offset: 29895},
																									expr: &choiceExpr{
																										pos: position{line: 713, col: 7, offset: 30126},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 713, col: 7, offset: 30126},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 713, col: 13, offset: 30132},
																												run: (*parser).callonFencedBlock25,
																												expr: &litMatcher{
																													pos:        position{line: 713, col: 13, offset: 30132},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																								&notExpr{
																									pos: position{line: 701, col: 21, offset: 29899},
																									expr: &litMatcher{
																										pos:        position{line: 701, col: 22, offset: 29900},
																										val:        "[",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 701, col: 26, offset: 29904},
																									expr: &litMatcher{
																										pos:        position{line: 701, col: 27, offset: 29905},
																										val:        "]",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 701, col: 31, offset: 29909},
																									expr: &litMatcher{
																										pos:        position{line: 701, col: 32, offset: 29910},
																										val:        "<<",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 701, col: 37, offset: 29915},
																									expr: &litMatcher{
																										pos:        position{line: 701, col: 38, offset: 29916},
																										val:        ">>",
																										ignoreCase: false,
																									},
																								},
																								&anyMatcher{
																									line: 701, col: 42, offset: 29920,
																								},
																							},
																						},
																					},
																				},
																			},
																			&litMatcher{
																				pos:        position{line: 130, col: 33, offset: 5346},
																				val:        "]]",
																				ignoreCase: false,
																			},
																		},
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 126, col: 5, offset: 5249},
															run: (*parser).callonFencedBlock37,
															expr: &seqExpr{
																pos: position{line: 126, col: 5, offset: 5249},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 126, col: 5, offset: 5249},
																		val:        "[#",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 126, col: 10, offset: 5254},
																		label: "id",
																		expr: &actionExpr{
																			pos: position{line: 701, col: 7, offset: 29885},
																			run: (*parser).callonFencedBlock41,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 701, col: 7, offset: 29885},
																				expr: &seqExpr{
																					pos: position{line: 701, col: 8, offset: 29886},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 701, col: 8, offset: 29886},
																							expr: &choiceExpr{
																								pos: position{line: 717, col: 12, offset: 30188},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 717, col: 12, offset: 30188},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 717, col: 21, offset: 30197},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 701, col: 17, offset: 29895},
																							expr: &choiceExpr{
																								pos: position{line: 713, col: 7, offset: 30126},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 713, col: 7, offset: 30126},
																										val:        " ",
																										ignoreCase: false,
																									},
																									&actionExpr{
																										pos: position{line: 713, col: 13, offset: 30132},
																										run: (*parser).callonFencedBlock51,
																										expr: &litMatcher{
																											pos:        position{line: 713, col: 13, offset: 30132},
																											val:        "\t",
																											ignoreCase: false,
																										},
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 701, col: 21, offset: 29899},
																							expr: &litMatcher{
																								pos:        position{line: 701, col: 22, offset: 29900},
																								val:        "[",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 701, col: 26, offset: 29904},
																							expr: &litMatcher{
																								pos:        position{line: 701, col: 27, offset: 29905},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 701, col: 31, offset: 29909},
																							expr: &litMatcher{
																								pos:        position{line: 701, col: 32, offset: 29910},
																								val:        "<<",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 701, col: 37, offset: 29915},
																							expr: &litMatcher{
																								pos:        position{line: 701, col: 38, offset: 29916},
																								val:        ">>",
																								ignoreCase: false,
																							},
																						},
																						&anyMatcher{
																							line: 701, col: 42, offset: 29920,
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 126, col: 18, offset: 5262},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 136, col: 17, offset: 5557},
															run: (*parser).callonFencedBlock63,
															expr: &seqExpr{
																pos: position{line: 136, col: 17, offset: 5557},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 136, col: 17, offset: 5557},
																		val:        ".",
																		ignoreCase: false,
																	},
																	&notExpr{
																		pos: position{line: 136, col: 21, offset: 5561},
																		expr: &litMatcher{
																			pos:        position{line: 136, col: 22, offset: 5562},
																			val:        ".",
																			ignoreCase: false,
																		},
																	},
																	&notExpr{
																		pos: position{line: 136, col: 26, offset: 5566},
																		expr: &choiceExpr{
																			pos: position{line: 713, col: 7, offset: 30126},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 713, col: 7, offset: 30126},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 713, col: 13, offset: 30132},
																					run: (*parser).callonFencedBlock71,
																					expr: &litMatcher{
																						pos:        position{line: 713, col: 13, offset: 30132},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 136, col: 30, offset: 5570},
																		label: "title",
																		expr: &oneOrMoreExpr{
																			pos: position{line: 136, col: 36, offset: 5576},
																			expr: &seqExpr{
																				pos: position{line: 136, col: 37, offset: 5577},
																				exprs: []interface{}{
																					&notExpr{
																						pos: position{line: 136, col: 37, offset: 5577},
																						expr: &choiceExpr{
																							pos: position{line: 717, col: 12, offset: 30188},
																							alternatives: []interface{}{
																								&litMatcher{
																									pos:        position{line: 717, col: 12, offset: 30188},
																									val:        "\r\n",
																									ignoreCase: false,
																								},
																								&charClassMatcher{
																									pos:        position{line: 717, col: 21, offset: 30197},
																									val:        "[\\r\\n]",
																									chars:      []rune{'\r', '\n'},
																									ignoreCase: false,
																									inverted:   false,
																								},
																							},
																						},
																					},
																					&anyMatcher{
																						line: 136, col: 46, offset: 5586,
																					},
																				},
																			},
																		},
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 141, col: 30, offset: 5760},
															run: (*parser).callonFencedBlock81,
															expr: &seqExpr{
																pos: position{line: 141, col: 30, offset: 5760},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 141, col: 30, offset: 5760},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 141, col: 34, offset: 5764},
																		label: "k",
																		expr: &choiceExpr{
																			pos: position{line: 442, col: 19, offset: 17830},
																			alternatives: []interface{}{
																				&actionExpr{
																					pos: position{line: 442, col: 19, offset: 17830},
																					run: (*parser).callonFencedBlock86,
																					expr: &litMatcher{
																						pos:        position{line: 442, col: 19, offset: 17830},
																						val:        "TIP",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 444, col: 5, offset: 17868},
																					run: (*parser).callonFencedBlock88,
																					expr: &litMatcher{
																						pos:        position{line: 444, col: 5, offset: 17868},
																						val:        "NOTE",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 446, col: 5, offset: 17908},
																					run: (*parser).callonFencedBlock90,
																					expr: &litMatcher{
																						pos:        position{line: 446, col: 5, offset: 17908},
																						val:        "IMPORTANT",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 448, col: 5, offset: 17958},
																					run: (*parser).callonFencedBlock92,
																					expr: &litMatcher{
																						pos:        position{line: 448, col: 5, offset: 17958},
																						val:        "WARNING",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 450, col: 5, offset: 18004},
																					run: (*parser).callonFencedBlock94,
																					expr: &litMatcher{
																						pos:        position{line: 450, col: 5, offset: 18004},
																						val:        "CAUTION",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 141, col: 53, offset: 5783},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 146, col: 19, offset: 5896},
															run: (*parser).callonFencedBlock97,
															expr: &seqExpr{
																pos: position{line: 146, col: 19, offset: 5896},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 146, col: 19, offset: 5896},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 146, col: 23, offset: 5900},
																		label: "attribute",
																		expr: &choiceExpr{
																			pos: position{line: 150, col: 21, offset: 6095},
																			alternatives: []interface{}{
																				&actionExpr{
																					pos: position{line: 150, col: 21, offset: 6095},
																					run: (*parser).callonFencedBlock102,
																					expr: &seqExpr{
																						pos: position{line: 150, col: 21, offset: 6095},
																						exprs: []interface{}{
																							&labeledExpr{
																								pos:   position{line: 150, col: 21, offset: 6095},
																								label: "key",
																								expr: &actionExpr{
																									pos: position{line: 162, col: 17, offset: 6664},
																									run: (*parser).callonFencedBlock105,
																									expr: &seqExpr{
																										pos: position{line: 162, col: 17, offset: 6664},
																										exprs: []interface{}{
																											&labeledExpr{
																												pos:   position{line: 162, col: 17, offset: 6664},
																												label: "key",
																												expr: &oneOrMoreExpr{
																													pos: position{line: 162, col: 22, offset: 6669},
																													expr: &seqExpr{
																														pos: position{line: 162, col: 23, offset: 6670},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 162, col: 23, offset: 6670},
																																expr: &choiceExpr{
																																	pos: position{line: 713, col: 7, offset: 30126},
																																	alternatives: []interface{}{
																																		&litMatcher{
																																			pos:        position{line: 713, col: 7, offset: 30126},
																																			val:        " ",
																																			ignoreCase: false,
																																		},
																																		&actionExpr{
																																			pos: position{line: 713, col: 13, offset: 30132},
																																			run: (*parser).callonFencedBlock113,
																																			expr: &litMatcher{
																																				pos:        position{line: 713, col: 13, offset: 30132},
																																				val:        "\t",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																},
																															},
																															&notExpr{
																																pos: position{line: 162, col: 27, offset: 6674},
																																expr: &litMatcher{
																																	pos:        position{line: 162, col: 28, offset: 6675},
																																	val:        "=",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 162, col: 32, offset: 6679},
																																expr: &litMatcher{
																																	pos:        position{line: 162, col: 33, offset: 6680},
																																	val:        ",",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 162, col: 37, offset: 6684},
																																expr: &litMatcher{
																																	pos:        position{line: 162, col: 38, offset: 6685},
																																	val:        "]",
																																	ignoreCase: false,
																																},
																															},
																															&anyMatcher{
																																line: 162, col: 42, offset: 6689,
																															},
																														},
																													},
																												},
																											},
																											&zeroOrMoreExpr{
																												pos: position{line: 162, col: 46, offset: 6693},
																												expr: &choiceExpr{
																													pos: position{line: 713, col: 7, offset: 30126},
																													alternatives: []interface{}{
																														&litMatcher{
																															pos:        position{line: 713, col: 7, offset: 30126},
																															val:        " ",
																															ignoreCase: false,
																														},
																														&actionExpr{
																															pos: position{line: 713, col: 13, offset: 30132},
																															run: (*parser).callonFencedBlock125,
																															expr: &litMatcher{
																																pos:        position{line: 713, col: 13, offset: 30132},
																																val:        "\t",
																																ignoreCase: false,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&litMatcher{
																								pos:        position{line: 150, col: 40, offset: 6114},
																								val:        "=",
																								ignoreCase: false,
																							},
																							&labeledExpr{
																								pos:   position{line: 150, col: 44, offset: 6118},
																								label: "value",
																								expr: &actionExpr{
																									pos: position{line: 167, col: 19, offset: 6793},
																									run: (*parser).callonFencedBlock129,
																									expr: &seqExpr{
																										pos: position{line: 167, col: 19, offset: 6793},
																										exprs: []interface{}{
																											&zeroOrMoreExpr{
																												pos: position{line: 167, col: 19, offset: 6793},
																												expr: &choiceExpr{
																													pos: position{line: 713, col: 7, offset: 30126},
																													alternatives: []interface{}{
																														&litMatcher{
																															pos:        position{line: 713, col: 7, offset: 30126},
																															val:        " ",
																															ignoreCase: false,
																														},
																														&actionExpr{
																															pos: position{line: 713, col: 13, offset: 30132},
																															run: (*parser).callonFencedBlock134,
																															expr: &litMatcher{
																																pos:        position{line: 713, col: 13, offset: 30132},
																																val:        "\t",
																																ignoreCase: false,
																															},
																														},
																													},
																												},
																											},
																											&labeledExpr{
																												pos:   position{line: 167, col: 23, offset: 6797},
																												label: "value",
																												expr: &zeroOrMoreExpr{
																													pos: position{line: 167, col: 29, offset: 6803},
																													expr: &seqExpr{
																														pos: position{line: 167, col: 30, offset: 6804},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 167, col: 30, offset: 6804},
																																expr: &choiceExpr{
																																	pos: position{line: 713, col: 7, offset: 30126},
																																	alternatives: []interface{}{
																																		&litMatcher{
																																			pos:        position{line: 713, col: 7, offset: 30126},
																																			val:        " ",
																																			ignoreCase: false,
																																		},
																																		&actionExpr{
																																			pos: position{line: 713, col: 13, offset: 30132},
																																			run: (*parser).callonFencedBlock142,
																																			expr: &litMatcher{
																																				pos:        position{line: 713, col: 13, offset: 30132},
																																				val:        "\t",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																},
																															},
																															&notExpr{
																																pos: position{line: 167, col: 34, offset: 6808},
																																expr: &litMatcher{
																																	pos:        position{line: 167, col: 35, offset: 6809},
																																	val:        "=",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 167, col: 39, offset: 6813},
																																expr: &litMatcher{
																																	pos:        position{line: 167, col: 40, offset: 6814},
																																	val:        "]",
																																	ignoreCase: false,
																																},
																															},
																															&anyMatcher{
																																line: 167, col: 44, offset: 6818,
																															},
																														},
																													},
																												},
																											},
																											&zeroOrMoreExpr{
																												pos: position{line: 167, col: 48, offset: 6822},
																												expr: &choiceExpr{
																													pos: position{line: 713, col: 7, offset: 30126},
																													alternatives: []interface{}{
																														&litMatcher{
																															pos:        position{line: 713, col: 7, offset: 30126},
																															val:        " ",
																															ignoreCase: false,
																														},
																														&actionExpr{
																															pos: position{line: 713, col: 13, offset: 30132},
																															run: (*parser).callonFencedBlock152,
																															expr: &litMatcher{
																																pos:        position{line: 713, col: 13, offset: 30132},
																																val:        "\t",
																																ignoreCase: false,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																				&actionExpr{
																					pos: position{line: 152, col: 5, offset: 6244},
																					run: (*parser).callonFencedBlock154,
																					expr: &labeledExpr{
																						pos:   position{line: 152, col: 5, offset: 6244},
																						label: "key",
																						expr: &actionExpr{
																							pos: position{line: 162, col: 17, offset: 6664},
																							run: (*parser).callonFencedBlock156,
																							expr: &seqExpr{
																								pos: position{line: 162, col: 17, offset: 6664},
																								exprs: []interface{}{
																									&labeledExpr{
																										pos:   position{line: 162, col: 17, offset: 6664},
																										label: "key",
																										expr: &oneOrMoreExpr{
																											pos: position{line: 162, col: 22, offset: 6669},
																											expr: &seqExpr{
																												pos: position{line: 162, col: 23, offset: 6670},
																												exprs: []interface{}{
																													&notExpr{
																														pos: position{line: 162, col: 23, offset: 6670},
																														expr: &choiceExpr{
																															pos: position{line: 713, col: 7, offset: 30126},
																															alternatives: []interface{}{
																																&litMatcher{
																																	pos:        position{line: 713, col: 7, offset: 30126},
																																	val:        " ",
																																	ignoreCase: false,
																																},
																																&actionExpr{
																																	pos: position{line: 713, col: 13, offset: 30132},
																																	run: (*parser).callonFencedBlock164,
																																	expr: &litMatcher{
																																		pos:        position{line: 713, col: 13, offset: 30132},
																																		val:        "\t",
																																		ignoreCase: false,
																																	},
																																},
																															},
																														},
																													},
																													&notExpr{
																														pos: position{line: 162, col: 27, offset: 6674},
																														expr: &litMatcher{
																															pos:        position{line: 162, col: 28, offset: 6675},
																															val:        "=",
																															ignoreCase: false,
																														},
																													},
																													&notExpr{
																														pos: position{line: 162, col: 32, offset: 6679},
																														expr: &litMatcher{
																															pos:        position{line: 162, col: 33, offset: 6680},
																															val:        ",",
																															ignoreCase: false,
																														},
																													},
																													&notExpr{
																														pos: position{line: 162, col: 37, offset: 6684},
																														expr: &litMatcher{
																															pos:        position{line: 162, col: 38, offset: 6685},
																															val:        "]",
																															ignoreCase: false,
																														},
																													},
																													&anyMatcher{
																														line: 162, col: 42, offset: 6689,
																													},
																												},
																											},
																										},
																									},
																									&zeroOrMoreExpr{
																										pos: position{line: 162, col: 46, offset: 6693},
																										expr: &choiceExpr{
																											pos: position{line: 713, col: 7, offset: 30126},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 713, col: 7, offset: 30126},
																													val:        " ",
																													ignoreCase: false,
																												},
																												&actionExpr{
																													pos: position{line: 713, col: 13, offset: 30132},
																													run: (*parser).callonFencedBlock176,
																													expr: &litMatcher{
																														pos:        position{line: 713, col: 13, offset: 30132},
																														val:        "\t",
																														ignoreCase: false,
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 146, col: 52, offset: 5929},
																		label: "attributes",
																		expr: &zeroOrMoreExpr{
																			pos: position{line: 146, col: 63, offset: 5940},
																			expr: &choiceExpr{
																				pos: position{line: 156, col: 26, offset: 6376},
																				alternatives: []interface{}{
																					&actionExpr{
																						pos: position{line: 156, col: 26, offset: 6376},
																						run: (*parser).callonFencedBlock181,
																						expr: &seqExpr{
																							pos: position{line: 156, col: 26, offset: 6376},
																							exprs: []interface{}{
																								&litMatcher{
																									pos:        position{line: 156, col: 26, offset: 6376},
																									val:        ",",
																									ignoreCase: false,
																								},
																								&zeroOrMoreExpr{
																									pos: position{line: 156, col: 30, offset: 6380},
																									expr: &choiceExpr{
																										pos: position{line: 713, col: 7, offset: 30126},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 713, col: 7, offset: 30126},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 713, col: 13, offset: 30132},
																												run: (*parser).callonFencedBlock187,
																												expr: &litMatcher{
																													pos:        position{line: 713, col: 13, offset: 30132},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																								&labeledExpr{
																									pos:   position{line: 156, col: 34, offset: 6384},
																									label: "key",
																									expr: &actionExpr{
																										pos: position{line: 162, col: 17, offset: 6664},
																										run: (*parser).callonFencedBlock190,
																										expr: &seqExpr{
																											pos: position{line: 162, col: 17, offset: 6664},
																											exprs: []interface{}{
																												&labeledExpr{
																													pos:   position{line: 162, col: 17, offset: 6664},
																													label: "key",
																													expr: &oneOrMoreExpr{
																														pos: position{line: 162, col: 22, offset: 6669},
																														expr: &seqExpr{
																															pos: position{line: 162, col: 23, offset: 6670},
																															exprs: []interface{}{
																																&notExpr{
																																	pos: position{line: 162, col: 23, offset: 6670},
																																	expr: &choiceExpr{
																																		pos: position{line: 713, col: 7, offset: 30126},
																																		alternatives: []interface{}{
																																			&litMatcher{
																																				pos:        position{line: 713, col: 7, offset: 30126},
																																				val:        " ",
																																				ignoreCase: false,
																																			},
																																			&actionExpr{
																																				pos: position{line: 713, col: 13, offset: 30132},
																																				run: (*parser).callonFencedBlock198,
																																				expr: &litMatcher{
																																					pos:        position{line: 713, col: 13, offset: 30132},
																																					val:        "\t",
																																					ignoreCase: false,
																																				},
																																			},
																																		},
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 162, col: 27, offset: 6674},
																																	expr: &litMatcher{
																																		pos:        position{line: 162, col: 28, offset: 6675},
																																		val:        "=",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 162, col: 32, offset: 6679},
																																	expr: &litMatcher{
																																		pos:        position{line: 162, col: 33, offset: 6680},
																																		val:        ",",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 162, col: 37, offset: 6684},
																																	expr: &litMatcher{
																																		pos:        position{line: 162, col: 38, offset: 6685},
																																		val:        "]",
																																		ignoreCase: false,
																																	},
																																},
																																&anyMatcher{
																																	line: 162, col: 42, offset: 6689,
																																},
																															},
																														},
																													},
																												},
																												&zeroOrMoreExpr{
																													pos: position{line: 162, col: 46, offset: 6693},
																													expr: &choiceExpr{
																														pos: position{line: 713, col: 7, offset: 30126},
																														alternatives: []interface{}{
																															&litMatcher{
																																pos:        position{line: 713, col: 7, offset: 30126},
																																val:        " ",
																																ignoreCase: false,
																															},
																															&actionExpr{
																																pos: position{line: 713, col: 13, offset: 30132},
																																run: (*parser).callonFencedBlock210,
																																expr: &litMatcher{
																																	pos:        position{line: 713, col: 13, offset: 30132},
																																	val:        "\t",
																																	ignoreCase: false,
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&litMatcher{
																									pos:        position{line: 156, col: 53, offset: 6403},
																									val:        "=",
																									ignoreCase: false,
																								},
																								&labeledExpr{
																									pos:   position{line: 156, col: 57, offset: 6407},
																									label: "value",
																									expr: &actionExpr{
																										pos: position{line: 167, col: 19, offset: 6793},
																										run: (*parser).callonFencedBlock214,
																										expr: &seqExpr{
																											pos: position{line: 167, col: 19, offset: 6793},
																											exprs: []interface{}{
																												&zeroOrMoreExpr{
																													pos: position{line: 167, col: 19, offset: 6793},
																													expr: &choiceExpr{
																														pos: position{line: 713, col: 7, offset: 30126},
																														alternatives: []interface{}{
																															&litMatcher{
																																pos:        position{line: 713, col: 7, offset: 30126},
																																val:        " ",
																																ignoreCase: false,
																															},
																															&actionExpr{
																																pos: position{line: 713, col: 13, offset: 30132},
																																run: (*parser).callonFencedBlock219,
																																expr: &litMatcher{
																																	pos:        position{line: 713, col: 13, offset: 30132},
																																	val:        "\t",
																																	ignoreCase: false,
																																},
																															},
																														},
																													},
																												},
																												&labeledExpr{
																													pos:   position{line: 167, col: 23, offset: 6797},
																													label: "value",
																													expr: &zeroOrMoreExpr{
																														pos: position{line: 167, col: 29, offset: 6803},
																														expr: &seqExpr{
																															pos: position{line: 167, col: 30, offset: 6804},
																															exprs: []interface{}{
																																&notExpr{
																																	pos: position{line: 167, col: 30, offset: 6804},
																																	expr: &choiceExpr{
																																		pos: position{line: 713, col: 7, offset: 30126},
																																		alternatives: []interface{}{
																																			&litMatcher{
																																				pos:        position{line: 713, col: 7, offset: 30126},
																																				val:        " ",
																																				ignoreCase: false,
																																			},
																																			&actionExpr{
																																				pos: position{line: 713, col: 13, offset: 30132},
																																				run: (*parser).callonFencedBlock227,
																																				expr: &litMatcher{
																																					pos:        position{line: 713, col: 13, offset: 30132},
																																					val:        "\t",
																																					ignoreCase: false,
																																				},
																																			},
																																		},
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 167, col: 34, offset: 6808},
																																	expr: &litMatcher{
																																		pos:        position{line: 167, col: 35, offset: 6809},
																																		val:        "=",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 167, col: 39, offset: 6813},
																																	expr: &litMatcher{
																																		pos:        position{line: 167, col: 40, offset: 6814},
																																		val:        "]",
																																		ignoreCase: false,
																																	},
																																},
																																&anyMatcher{
																																	line: 167, col: 44, offset: 6818,
																																},
																															},
																														},
																													},
																												},
																												&zeroOrMoreExpr{
																													pos: position{line: 167, col: 48, offset: 6822},
																													expr: &choiceExpr{
																														pos: position{line: 713, col: 7, offset: 30126},
																														alternatives: []interface{}{
																															&litMatcher{
																																pos:        position{line: 713, col: 7, offset: 30126},
																																val:        " ",
																																ignoreCase: false,
																															},
																															&actionExpr{
																																pos: position{line: 713, col: 13, offset: 30132},
																																run: (*parser).callonFencedBlock237,
																																expr: &litMatcher{
																																	pos:        position{line: 713, col: 13, offset: 30132},
																																	val:        "\t",
																																	ignoreCase: false,
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																					&actionExpr{
																						pos: position{line: 158, col: 5, offset: 6533},
																						run: (*parser).callonFencedBlock239,
																						expr: &seqExpr{
																							pos: position{line: 158, col: 5, offset: 6533},
																							exprs: []interface{}{
																								&litMatcher{
																									pos:        position{line: 158, col: 5, offset: 6533},
																									val:        ",",
																									ignoreCase: false,
																								},
																								&zeroOrMoreExpr{
																									pos: position{line: 158, col: 9, offset: 6537},
																									expr: &choiceExpr{
																										pos: position{line: 713, col: 7, offset: 30126},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 713, col: 7, offset: 30126},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 713, col: 13, offset: 30132},
																												run: (*parser).callonFencedBlock245,
																												expr: &litMatcher{
																													pos:        position{line: 713, col: 13, offset: 30132},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																								&labeledExpr{
																									pos:   position{line: 158, col: 13, offset: 6541},
																									label: "key",
																									expr: &actionExpr{
																										pos: position{line: 162, col: 17, offset: 6664},
																										run: (*parser).callonFencedBlock248,
																										expr: &seqExpr{
																											pos: position{line: 162, col: 17, offset: 6664},
																											exprs: []interface{}{
																												&labeledExpr{
																													pos:   position{line: 162, col: 17, offset: 6664},
																													label: "key",
																													expr: &oneOrMoreExpr{
																														pos: position{line: 162, col: 22, offset: 6669},
																														expr: &seqExpr{
																															pos: position{line: 162, col: 23, offset: 6670},
																															exprs: []interface{}{
																																&notExpr{
																																	pos: position{line: 162, col: 23, offset: 6670},
																																	expr: &choiceExpr{
																																		pos: position{line: 713, col: 7, offset: 30126},
																																		alternatives: []interface{}{
																																			&litMatcher{
																																				pos:        position{line: 713, col: 7, offset: 30126},
																																				val:        " ",
																																				ignoreCase: false,
																																			},
																																			&actionExpr{
																																				pos: position{line: 713, col: 13, offset: 30132},
																																				run: (*parser).callonFencedBlock256,
																																				expr: &litMatcher{
																																					pos:        position{line: 713, col: 13, offset: 30132},
																																					val:        "\t",
																																					ignoreCase: false,
																																				},
																																			},
																																		},
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 162, col: 27, offset: 6674},
																																	expr: &litMatcher{
																																		pos:        position{line: 162, col: 28, offset: 6675},
																																		val:        "=",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 162, col: 32, offset: 6679},
																																	expr: &litMatcher{
																																		pos:        position{line: 162, col: 33, offset: 6680},
																																		val:        ",",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 162, col: 37, offset: 6684},
																																	expr: &litMatcher{
																																		pos:        position{line: 162, col: 38, offset: 6685},
																																		val:        "]",
																																		ignoreCase: false,
																																	},
																																},
																																&anyMatcher{
																																	line: 162, col: 42, offset: 6689,
																																},
																															},
																														},
																													},
																												},
																												&zeroOrMoreExpr{
																													pos: position{line: 162, col: 46, offset: 6693},
																													expr: &choiceExpr{
																														pos: position{line: 713, col: 7, offset: 30126},
																														alternatives: []interface{}{
																															&litMatcher{
																																pos:        position{line: 713, col: 7, offset: 30126},
																																val:        " ",
																																ignoreCase: false,
																															},
																															&actionExpr{
																																pos: position{line: 713, col: 13, offset: 30132},
																																run: (*parser).callonFencedBlock268,
																																expr: &litMatcher{
																																	pos:        position{line: 713, col: 13, offset: 30132},
																																	val:        "\t",
																																	ignoreCase: false,
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 146, col: 89, offset: 5966},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
													},
												},
											},
											&zeroOrMoreExpr{
												pos: position{line: 120, col: 98, offset: 5095},
												expr: &choiceExpr{
													pos: position{line: 713, col: 7, offset: 30126},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 713, col: 7, offset: 30126},
															val:        " ",
															ignoreCase: false,
														},
														&actionExpr{
															pos: position{line: 713, col: 13, offset: 30132},
															run: (*parser).callonFencedBlock274,
															expr: &litMatcher{
																pos:        position{line: 713, col: 13, offset: 30132},
																val:        "\t",
																ignoreCase: false,
															},
														},
													},
												},
											},
											&choiceExpr{
												pos: position{line: 721, col: 8, offset: 30228},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 717, col: 12, offset: 30188},
														val:        "\r\n",
														ignoreCase: false,
													},
													&charClassMatcher{
														pos:        position{line: 717, col: 21, offset: 30197},
														val:        "[\\r\\n]",
														chars:      []rune{'\r', '\n'},
														ignoreCase: false,
														inverted:   false,
													},
													&notExpr{
														pos: position{line: 719, col: 8, offset: 30217},
														expr: &anyMatcher{
															line: 719, col: 9, offset: 30218,
														},
													},
												},
											},
										},
									},
								},
							},
						},
						&litMatcher{
							pos:        position{line: 624, col: 25, offset: 26815},
							val:        "```",
							ignoreCase: false,
						},
						&zeroOrMoreExpr{
							pos: position{line: 626, col: 68, offset: 26889},
							expr: &choiceExpr{
								pos: position{line: 713, col: 7, offset: 30126},
								alternatives: []interface{}{
									&litMatcher{
										pos:        position{line: 713, col: 7, offset: 30126},
										val:        " ",
										ignoreCase: false,
									},
									&actionExpr{
										pos: position{line: 713, col: 13, offset: 30132},
										run: (*parser).callonFencedBlock285,
										expr: &litMatcher{
											pos:        position{line: 713, col: 13, offset: 30132},
											val:        "\t",
											ignoreCase: false,
										},
									},
								},
							},
						},
						&choiceExpr{
							pos: position{line: 717, col: 12, offset: 30188},
							alternatives: []interface{}{
								&litMatcher{
									pos:        position{line: 717, col: 12, offset: 30188},
									val:        "\r\n",
									ignoreCase: false,
								},
								&charClassMatcher{
									pos:        position{line: 717, col: 21, offset: 30197},
									val:        "[\\r\\n]",
									chars:      []rune{'\r', '\n'},
									ignoreCase: false,
									inverted:   false,
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 626, col: 80, offset: 26901},
							label: "content",
							expr: &zeroOrMoreExpr{
								pos: position{line: 626, col: 88, offset: 26909},
								expr: &choiceExpr{
									pos: position{line: 626, col: 89, offset: 26910},
									alternatives: []interface{}{
										&ruleRefExpr{
											pos:  position{line: 626, col: 89, offset: 26910},
											name: "List",
										},
										&ruleRefExpr{
											pos:  position{line: 626, col: 96, offset: 26917},
											name: "BlockParagraph",
										},
										&actionExpr{
											pos: position{line: 686, col: 14, offset: 29590},
											run: (*parser).callonFencedBlock295,
											expr: &seqExpr{
												pos: position{line: 686, col: 14, offset: 29590},
												exprs: []interface{}{
													&notExpr{
														pos: position{line: 686, col: 14, offset: 29590},
														expr: &notExpr{
															pos: position{line: 719, col: 8, offset: 30217},
															expr: &anyMatcher{
																line: 719, col: 9, offset: 30218,
															},
														},
													},
													&zeroOrMoreExpr{
														pos: position{line: 686, col: 19, offset: 29595},
														expr: &choiceExpr{
															pos: position{line: 713, col: 7, offset: 30126},
															alternatives: []interface{}{
																&litMatcher{
																	pos:        position{line: 713, col: 7, offset: 30126},
																	val:        " ",
																	ignoreCase: false,
																},
																&actionExpr{
																	pos: position{line: 713, col: 13, offset: 30132},
																	run: (*parser).callonFencedBlock303,
																	expr: &litMatcher{
																		pos:        position{line: 713, col: 13, offset: 30132},
																		val:        "\t",
																		ignoreCase: false,
																	},
																},
															},
														},
													},
													&choiceExpr{
														pos: position{line: 721, col: 8, offset: 30228},
														alternatives: []interface{}{
															&litMatcher{
																pos:        position{line: 717, col: 12, offset: 30188},
																val:        "\r\n",
																ignoreCase: false,
															},
															&charClassMatcher{
																pos:        position{line: 717, col: 21, offset: 30197},
																val:        "[\\r\\n]",
																chars:      []rune{'\r', '\n'},
																ignoreCase: false,
																inverted:   false,
															},
															&notExpr{
																pos: position{line: 719, col: 8, offset: 30217},
																expr: &anyMatcher{
																	line: 719, col: 9, offset: 30218,
																},
															},
														},
													},
												},
											},
										},
									},
								},
							},
						},
						&choiceExpr{
							pos: position{line: 626, col: 126, offset: 26947},
							alternatives: []interface{}{
								&seqExpr{
									pos: position{line: 626, col: 127, offset: 26948},
									exprs: []interface{}{
										&litMatcher{
											pos:        position{line: 624, col: 25, offset: 26815},
											val:        "```",
											ignoreCase: false,
										},
										&zeroOrMoreExpr{
											pos: position{line: 626, col: 148, offset: 26969},
											expr: &choiceExpr{
												pos: position{line: 713, col: 7, offset: 30126},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 713, col: 7, offset: 30126},
														val:        " ",
														ignoreCase: false,
													},
													&actionExpr{
														pos: position{line: 713, col: 13, offset: 30132},
														run: (*parser).callonFencedBlock316,
														expr: &litMatcher{
															pos:        position{line: 713, col: 13, offset: 30132},
															val:        "\t",
															ignoreCase: false,
														},
													},
												},
											},
										},
										&choiceExpr{
											pos: position{line: 721, col: 8, offset: 30228},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 717, col: 12, offset: 30188},
													val:        "\r\n",
													ignoreCase: false,
												},
												&charClassMatcher{
													pos:        position{line: 717, col: 21, offset: 30197},
													val:        "[\\r\\n]",
													chars:      []rune{'\r', '\n'},
													ignoreCase: false,
													inverted:   false,
												},
												&notExpr{
													pos: position{line: 719, col: 8, offset: 30217},
													expr: &anyMatcher{
														line: 719, col: 9, offset: 30218,
													},
												},
											},
										},
									},
								},
								&notExpr{
									pos: position{line: 719, col: 8, offset: 30217},
									expr: &anyMatcher{
										line: 719, col: 9, offset: 30218,
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "ListingBlock",
			pos:  position{line: 632, col: 1, offset: 27130},
			expr: &actionExpr{
				pos: position{line: 632, col: 17, offset: 27146},
				run: (*parser).callonListingBlock1,
				expr: &seqExpr{
					pos: position{line: 632, col: 17, offset: 27146},
					exprs: []interface{}{
						&labeledExpr{
							pos:   position{line: 632, col: 17, offset: 27146},
							label: "attributes",
							expr: &zeroOrMoreExpr{
								pos: position{line: 632, col: 28, offset: 27157},
								expr: &actionExpr{
									pos: position{line: 120, col: 21, offset: 5018},
									run: (*parser).callonListingBlock5,
									expr: &seqExpr{
										pos: position{line: 120, col: 21, offset: 5018},
										exprs: []interface{}{
											&labeledExpr{
												pos:   position{line: 120, col: 21, offset: 5018},
												label: "attr",
												expr: &choiceExpr{
													pos: position{line: 120, col: 27, offset: 5024},
													alternatives: []interface{}{
														&actionExpr{
															pos: position{line: 124, col: 14, offset: 5203},
															run: (*parser).callonListingBlock9,
															expr: &labeledExpr{
																pos:   position{line: 124, col: 14, offset: 5203},
																label: "id",
																expr: &actionExpr{
																	pos: position{line: 130, col: 20, offset: 5333},
																	run: (*parser).callonListingBlock11,
																	expr: &seqExpr{
																		pos: position{line: 130, col: 20, offset: 5333},
																		exprs: []interface{}{
																			&litMatcher{
																				pos:        position{line: 130, col: 20, offset: 5333},
																				val:        "[[",
																				ignoreCase: false,
																			},
																			&labeledExpr{
																				pos:   position{line: 130, col: 25, offset: 5338},
																				label: "id",
																				expr: &actionExpr{
																					pos: position{line: 701, col: 7, offset: 29885},
																					run: (*parser).callonListingBlock15,
																					expr: &oneOrMoreExpr{
																						pos: position{line: 701, col: 7, offset: 29885},
																						expr: &seqExpr{
																							pos: position{line: 701, col: 8, offset: 29886},
																							exprs: []interface{}{
																								&notExpr{
																									pos: position{line: 701, col: 8, offset: 29886},
																									expr: &choiceExpr{
																										pos: position{line: 717, col: 12, offset: 30188},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 717, col: 12, offset: 30188},
																												val:        "\r\n",
																												ignoreCase: false,
																											},
																											&charClassMatcher{
																												pos:        position{line: 717, col: 21, offset: 30197},
																												val:        "[\\r\\n]",
																												chars:      []rune{'\r', '\n'},
																												ignoreCase: false,
																												inverted:   false,
																											},
																										},
																									},
																								},
																								&notExpr{
																									pos: position{line: 701, col: 17, offset: 29895},
																									expr: &choiceExpr{
																										pos: position{line: 713, col: 7, offset: 30126},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 713, col: 7, offset: 30126},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 713, col: 13, offset: 30132},
																												run: (*parser).callonListingBlock25,
																												expr: &litMatcher{
																													pos:        position{line: 713, col: 13, offset: 30132},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																								&notExpr{
																									pos: position{line: 701, col: 21, offset: 29899},
																									expr: &litMatcher{
																										pos:        position{line: 701, col: 22, offset: 29900},
																										val:        "[",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 701, col: 26, offset: 29904},
																									expr: &litMatcher{
																										pos:        position{line: 701, col: 27, offset: 29905},
																										val:        "]",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 701, col: 31, offset: 29909},
																									expr: &litMatcher{
																										pos:        position{line: 701, col: 32, offset: 29910},
																										val:        "<<",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 701, col: 37, offset: 29915},
																									expr: &litMatcher{
																										pos:        position{line: 701, col: 38, offset: 29916},
																										val:        ">>",
																										ignoreCase: false,
																									},
																								},
																								&anyMatcher{
																									line: 701, col: 42, offset: 29920,
																								},
																							},
																						},
																					},
																				},
																			},
																			&litMatcher{
																				pos:        position{line: 130, col: 33, offset: 5346},
																				val:        "]]",
																				ignoreCase: false,
																			},
																		},
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 126, col: 5, offset: 5249},
															run: (*parser).callonListingBlock37,
															expr: &seqExpr{
																pos: position{line: 126, col: 5, offset: 5249},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 126, col: 5, offset: 5249},
																		val:        "[#",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 126, col: 10, offset: 5254},
																		label: "id",
																		expr: &actionExpr{
																			pos: position{line: 701, col: 7, offset: 29885},
																			run: (*parser).callonListingBlock41,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 701, col: 7, offset: 29885},
																				expr: &seqExpr{
																					pos: position{line: 701, col: 8, offset: 29886},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 701, col: 8, offset: 29886},
																							expr: &choiceExpr{
																								pos: position{line: 717, col: 12, offset: 30188},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 717, col: 12, offset: 30188},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 717, col: 21, offset: 30197},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 701, col: 17, offset: 29895},
																							expr: &choiceExpr{
																								pos: position{line: 713, col: 7, offset: 30126},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 713, col: 7, offset: 30126},
																										val:        " ",
																										ignoreCase: false,
																									},
																									&actionExpr{
																										pos: position{line: 713, col: 13, offset: 30132},
																										run: (*parser).callonListingBlock51,
																										expr: &litMatcher{
																											pos:        position{line: 713, col: 13, offset: 30132},
																											val:        "\t",
																											ignoreCase: false,
																										},
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 701, col: 21, offset: 29899},
																							expr: &litMatcher{
																								pos:        position{line: 701, col: 22, offset: 29900},
																								val:        "[",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 701, col: 26, offset: 29904},
																							expr: &litMatcher{
																								pos:        position{line: 701, col: 27, offset: 29905},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 701, col: 31, offset: 29909},
																							expr: &litMatcher{
																								pos:        position{line: 701, col: 32, offset: 29910},
																								val:        "<<",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 701, col: 37, offset: 29915},
																							expr: &litMatcher{
																								pos:        position{line: 701, col: 38, offset: 29916},
																								val:        ">>",
																								ignoreCase: false,
																							},
																						},
																						&anyMatcher{
																							line: 701, col: 42, offset: 29920,
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 126, col: 18, offset: 5262},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 136, col: 17, offset: 5557},
															run: (*parser).callonListingBlock63,
															expr: &seqExpr{
																pos: position{line: 136, col: 17, offset: 5557},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 136, col: 17, offset: 5557},
																		val:        ".",
																		ignoreCase: false,
																	},
																	&notExpr{
																		pos: position{line: 136, col: 21, offset: 5561},
																		expr: &litMatcher{
																			pos:        position{line: 136, col: 22, offset: 5562},
																			val:        ".",
																			ignoreCase: false,
																		},
																	},
																	&notExpr{
																		pos: position{line: 136, col: 26, offset: 5566},
																		expr: &choiceExpr{
																			pos: position{line: 713, col: 7, offset: 30126},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 713, col: 7, offset: 30126},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 713, col: 13, offset: 30132},
																					run: (*parser).callonListingBlock71,
																					expr: &litMatcher{
																						pos:        position{line: 713, col: 13, offset: 30132},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 136, col: 30, offset: 5570},
																		label: "title",
																		expr: &oneOrMoreExpr{
																			pos: position{line: 136, col: 36, offset: 5576},
																			expr: &seqExpr{
																				pos: position{line: 136, col: 37, offset: 5577},
																				exprs: []interface{}{
																					&notExpr{
																						pos: position{line: 136, col: 37, offset: 5577},
																						expr: &choiceExpr{
																							pos: position{line: 717, col: 12, offset: 30188},
																							alternatives: []interface{}{
																								&litMatcher{
																									pos:        position{line: 717, col: 12, offset: 30188},
																									val:        "\r\n",
																									ignoreCase: false,
																								},
																								&charClassMatcher{
																									pos:        position{line: 717, col: 21, offset: 30197},
																									val:        "[\\r\\n]",
																									chars:      []rune{'\r', '\n'},
																									ignoreCase: false,
																									inverted:   false,
																								},
																							},
																						},
																					},
																					&anyMatcher{
																						line: 136, col: 46, offset: 5586,
																					},
																				},
																			},
																		},
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 141, col: 30, offset: 5760},
															run: (*parser).callonListingBlock81,
															expr: &seqExpr{
																pos: position{line: 141, col: 30, offset: 5760},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 141, col: 30, offset: 5760},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 141, col: 34, offset: 5764},
																		label: "k",
																		expr: &choiceExpr{
																			pos: position{line: 442, col: 19, offset: 17830},
																			alternatives: []interface{}{
																				&actionExpr{
																					pos: position{line: 442, col: 19, offset: 17830},
																					run: (*parser).callonListingBlock86,
																					expr: &litMatcher{
																						pos:        position{line: 442, col: 19, offset: 17830},
																						val:        "TIP",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 444, col: 5, offset: 17868},
																					run: (*parser).callonListingBlock88,
																					expr: &litMatcher{
																						pos:        position{line: 444, col: 5, offset: 17868},
																						val:        "NOTE",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 446, col: 5, offset: 17908},
																					run: (*parser).callonListingBlock90,
																					expr: &litMatcher{
																						pos:        position{line: 446, col: 5, offset: 17908},
																						val:        "IMPORTANT",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 448, col: 5, offset: 17958},
																					run: (*parser).callonListingBlock92,
																					expr: &litMatcher{
																						pos:        position{line: 448, col: 5, offset: 17958},
																						val:        "WARNING",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 450, col: 5, offset: 18004},
																					run: (*parser).callonListingBlock94,
																					expr: &litMatcher{
																						pos:        position{line: 450, col: 5, offset: 18004},
																						val:        "CAUTION",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 141, col: 53, offset: 5783},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 146, col: 19, offset: 5896},
															run: (*parser).callonListingBlock97,
															expr: &seqExpr{
																pos: position{line: 146, col: 19, offset: 5896},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 146, col: 19, offset: 5896},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 146, col: 23, offset: 5900},
																		label: "attribute",
																		expr: &choiceExpr{
																			pos: position{line: 150, col: 21, offset: 6095},
																			alternatives: []interface{}{
																				&actionExpr{
																					pos: position{line: 150, col: 21, offset: 6095},
																					run: (*parser).callonListingBlock102,
																					expr: &seqExpr{
																						pos: position{line: 150, col: 21, offset: 6095},
																						exprs: []interface{}{
																							&labeledExpr{
																								pos:   position{line: 150, col: 21, offset: 6095},
																								label: "key",
																								expr: &actionExpr{
																									pos: position{line: 162, col: 17, offset: 6664},
																									run: (*parser).callonListingBlock105,
																									expr: &seqExpr{
																										pos: position{line: 162, col: 17, offset: 6664},
																										exprs: []interface{}{
																											&labeledExpr{
																												pos:   position{line: 162, col: 17, offset: 6664},
																												label: "key",
																												expr: &oneOrMoreExpr{
																													pos: position{line: 162, col: 22, offset: 6669},
																													expr: &seqExpr{
																														pos: position{line: 162, col: 23, offset: 6670},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 162, col: 23, offset: 6670},
																																expr: &choiceExpr{
																																	pos: position{line: 713, col: 7, offset: 30126},
																																	alternatives: []interface{}{
																																		&litMatcher{
																																			pos:        position{line: 713, col: 7, offset: 30126},
																																			val:        " ",
																																			ignoreCase: false,
																																		},
																																		&actionExpr{
																																			pos: position{line: 713, col: 13, offset: 30132},
																																			run: (*parser).callonListingBlock113,
																																			expr: &litMatcher{
																																				pos:        position{line: 713, col: 13, offset: 30132},
																																				val:        "\t",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																},
																															},
																															&notExpr{
																																pos: position{line: 162, col: 27, offset: 6674},
																																expr: &litMatcher{
																																	pos:        position{line: 162, col: 28, offset: 6675},
																																	val:        "=",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 162, col: 32, offset: 6679},
																																expr: &litMatcher{
																																	pos:        position{line: 162, col: 33, offset: 6680},
																																	val:        ",",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 162, col: 37, offset: 6684},
																																expr: &litMatcher{
																																	pos:        position{line: 162, col: 38, offset: 6685},
																																	val:        "]",
																																	ignoreCase: false,
																																},
																															},
																															&anyMatcher{
																																line: 162, col: 42, offset: 6689,
																															},
																														},
																													},
																												},
																											},
																											&zeroOrMoreExpr{
																												pos: position{line: 162, col: 46, offset: 6693},
																												expr: &choiceExpr{
																													pos: position{line: 713, col: 7, offset: 30126},
																													alternatives: []interface{}{
																														&litMatcher{
																															pos:        position{line: 713, col: 7, offset: 30126},
																															val:        " ",
																															ignoreCase: false,
																														},
																														&actionExpr{
																															pos: position{line: 713, col: 13, offset: 30132},
																															run: (*parser).callonListingBlock125,
																															expr: &litMatcher{
																																pos:        position{line: 713, col: 13, offset: 30132},
																																val:        "\t",
																																ignoreCase: false,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&litMatcher{
																								pos:        position{line: 150, col: 40, offset: 6114},
																								val:        "=",
																								ignoreCase: false,
																							},
																							&labeledExpr{
																								pos:   position{line: 150, col: 44, offset: 6118},
																								label: "value",
																								expr: &actionExpr{
																									pos: position{line: 167, col: 19, offset: 6793},
																									run: (*parser).callonListingBlock129,
																									expr: &seqExpr{
																										pos: position{line: 167, col: 19, offset: 6793},
																										exprs: []interface{}{
																											&zeroOrMoreExpr{
																												pos: position{line: 167, col: 19, offset: 6793},
																												expr: &choiceExpr{
																													pos: position{line: 713, col: 7, offset: 30126},
																													alternatives: []interface{}{
																														&litMatcher{
																															pos:        position{line: 713, col: 7, offset: 30126},
																															val:        " ",
																															ignoreCase: false,
																														},
																														&actionExpr{
																															pos: position{line: 713, col: 13, offset: 30132},
																															run: (*parser).callonListingBlock134,
																															expr: &litMatcher{
																																pos:        position{line: 713, col: 13, offset: 30132},
																																val:        "\t",
																																ignoreCase: false,
																															},
																														},
																													},
																												},
																											},
																											&labeledExpr{
																												pos:   position{line: 167, col: 23, offset: 6797},
																												label: "value",
																												expr: &zeroOrMoreExpr{
																													pos: position{line: 167, col: 29, offset: 6803},
																													expr: &seqExpr{
																														pos: position{line: 167, col: 30, offset: 6804},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 167, col: 30, offset: 6804},
																																expr: &choiceExpr{
																																	pos: position{line: 713, col: 7, offset: 30126},
																																	alternatives: []interface{}{
																																		&litMatcher{
																																			pos:        position{line: 713, col: 7, offset: 30126},
																																			val:        " ",
																																			ignoreCase: false,
																																		},
																																		&actionExpr{
																																			pos: position{line: 713, col: 13, offset: 30132},
																																			run: (*parser).callonListingBlock142,
																																			expr: &litMatcher{
																																				pos:        position{line: 713, col: 13, offset: 30132},
																																				val:        "\t",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																},
																															},
																															&notExpr{
																																pos: position{line: 167, col: 34, offset: 6808},
																																expr: &litMatcher{
																																	pos:        position{line: 167, col: 35, offset: 6809},
																																	val:        "=",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 167, col: 39, offset: 6813},
																																expr: &litMatcher{
																																	pos:        position{line: 167, col: 40, offset: 6814},
																																	val:        "]",
																																	ignoreCase: false,
																																},
																															},
																															&anyMatcher{
																																line: 167, col: 44, offset: 6818,
																															},
																														},
																													},
																												},
																											},
																											&zeroOrMoreExpr{
																												pos: position{line: 167, col: 48, offset: 6822},
																												expr: &choiceExpr{
																													pos: position{line: 713, col: 7, offset: 30126},
																													alternatives: []interface{}{
																														&litMatcher{
																															pos:        position{line: 713, col: 7, offset: 30126},
																															val:        " ",
																															ignoreCase: false,
																														},
																														&actionExpr{
																															pos: position{line: 713, col: 13, offset: 30132},
																															run: (*parser).callonListingBlock152,
																															expr: &litMatcher{
																																pos:        position{line: 713, col: 13, offset: 30132},
																																val:        "\t",
																																ignoreCase: false,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																				&actionExpr{
																					pos: position{line: 152, col: 5, offset: 6244},
																					run: (*parser).callonListingBlock154,
																					expr: &labeledExpr{
																						pos:   position{line: 152, col: 5, offset: 6244},
																						label: "key",
																						expr: &actionExpr{
																							pos: position{line: 162, col: 17, offset: 6664},
																							run: (*parser).callonListingBlock156,
																							expr: &seqExpr{
																								pos: position{line: 162, col: 17, offset: 6664},
																								exprs: []interface{}{
																									&labeledExpr{
																										pos:   position{line: 162, col: 17, offset: 6664},
																										label: "key",
																										expr: &oneOrMoreExpr{
																											pos: position{line: 162, col: 22, offset: 6669},
																											expr: &seqExpr{
																												pos: position{line: 162, col: 23, offset: 6670},
																												exprs: []interface{}{
																													&notExpr{
																														pos: position{line: 162, col: 23, offset: 6670},
																														expr: &choiceExpr{
																															pos: position{line: 713, col: 7, offset: 30126},
																															alternatives: []interface{}{
																																&litMatcher{
																																	pos:        position{line: 713, col: 7, offset: 30126},
																																	val:        " ",
																																	ignoreCase: false,
																																},
																																&actionExpr{
																																	pos: position{line: 713, col: 13, offset: 30132},
																																	run: (*parser).callonListingBlock164,
																																	expr: &litMatcher{
																																		pos:        position{line: 713, col: 13, offset: 30132},
																																		val:        "\t",
																																		ignoreCase: false,
																																	},
																																},
																															},
																														},
																													},
																													&notExpr{
																														pos: position{line: 162, col: 27, offset: 6674},
																														expr: &litMatcher{
																															pos:        position{line: 162, col: 28, offset: 6675},
																															val:        "=",
																															ignoreCase: false,
																														},
																													},
																													&notExpr{
																														pos: position{line: 162, col: 32, offset: 6679},
																														expr: &litMatcher{
																															pos:        position{line: 162, col: 33, offset: 6680},
																															val:        ",",
																															ignoreCase: false,
																														},
																													},
																													&notExpr{
																														pos: position{line: 162, col: 37, offset: 6684},
																														expr: &litMatcher{
																															pos:        position{line: 162, col: 38, offset: 6685},
																															val:        "]",
																															ignoreCase: false,
																														},
																													},
																													&anyMatcher{
																														line: 162, col: 42, offset: 6689,
																													},
																												},
																											},
																										},
																									},
																									&zeroOrMoreExpr{
																										pos: position{line: 162, col: 46, offset: 6693},
																										expr: &choiceExpr{
																											pos: position{line: 713, col: 7, offset: 30126},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 713, col: 7, offset: 30126},
																													val:        " ",
																													ignoreCase: false,
																												},
																												&actionExpr{
																													pos: position{line: 713, col: 13, offset: 30132},
																													run: (*parser).callonListingBlock176,
																													expr: &litMatcher{
																														pos:        position{line: 713, col: 13, offset: 30132},
																														val:        "\t",
																														ignoreCase: false,
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 146, col: 52, offset: 5929},
																		label: "attributes",
																		expr: &zeroOrMoreExpr{
																			pos: position{line: 146, col: 63, offset: 5940},
																			expr: &choiceExpr{
																				pos: position{line: 156, col: 26, offset: 6376},
																				alternatives: []interface{}{
																					&actionExpr{
																						pos: position{line: 156, col: 26, offset: 6376},
																						run: (*parser).callonListingBlock181,
																						expr: &seqExpr{
																							pos: position{line: 156, col: 26, offset: 6376},
																							exprs: []interface{}{
																								&litMatcher{
																									pos:        position{line: 156, col: 26, offset: 6376},
																									val:        ",",
																									ignoreCase: false,
																								},
																								&zeroOrMoreExpr{
																									pos: position{line: 156, col: 30, offset: 6380},
																									expr: &choiceExpr{
																										pos: position{line: 713, col: 7, offset: 30126},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 713, col: 7, offset: 30126},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 713, col: 13, offset: 30132},
																												run: (*parser).callonListingBlock187,
																												expr: &litMatcher{
																													pos:        position{line: 713, col: 13, offset: 30132},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																								&labeledExpr{
																									pos:   position{line: 156, col: 34, offset: 6384},
																									label: "key",
																									expr: &actionExpr{
																										pos: position{line: 162, col: 17, offset: 6664},
																										run: (*parser).callonListingBlock190,
																										expr: &seqExpr{
																											pos: position{line: 162, col: 17, offset: 6664},
																											exprs: []interface{}{
																												&labeledExpr{
																													pos:   position{line: 162, col: 17, offset: 6664},
																													label: "key",
																													expr: &oneOrMoreExpr{
																														pos: position{line: 162, col: 22, offset: 6669},
																														expr: &seqExpr{
																															pos: position{line: 162, col: 23, offset: 6670},
																															exprs: []interface{}{
																																&notExpr{
																																	pos: position{line: 162, col: 23, offset: 6670},
																																	expr: &choiceExpr{
																																		pos: position{line: 713, col: 7, offset: 30126},
																																		alternatives: []interface{}{
																																			&litMatcher{
																																				pos:        position{line: 713, col: 7, offset: 30126},
																																				val:        " ",
																																				ignoreCase: false,
																																			},
																																			&actionExpr{
																																				pos: position{line: 713, col: 13, offset: 30132},
																																				run: (*parser).callonListingBlock198,
																																				expr: &litMatcher{
																																					pos:        position{line: 713, col: 13, offset: 30132},
																																					val:        "\t",
																																					ignoreCase: false,
																																				},
																																			},
																																		},
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 162, col: 27, offset: 6674},
																																	expr: &litMatcher{
																																		pos:        position{line: 162, col: 28, offset: 6675},
																																		val:        "=",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 162, col: 32, offset: 6679},
																																	expr: &litMatcher{
																																		pos:        position{line: 162, col: 33, offset: 6680},
																																		val:        ",",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 162, col: 37, offset: 6684},
																																	expr: &litMatcher{
																																		pos:        position{line: 162, col: 38, offset: 6685},
																																		val:        "]",
																																		ignoreCase: false,
																																	},
																																},
																																&anyMatcher{
																																	line: 162, col: 42, offset: 6689,
																																},
																															},
																														},
																													},
																												},
																												&zeroOrMoreExpr{
																													pos: position{line: 162, col: 46, offset: 6693},
																													expr: &choiceExpr{
																														pos: position{line: 713, col: 7, offset: 30126},
																														alternatives: []interface{}{
																															&litMatcher{
																																pos:        position{line: 713, col: 7, offset: 30126},
																																val:        " ",
																																ignoreCase: false,
																															},
																															&actionExpr{
																																pos: position{line: 713, col: 13, offset: 30132},
																																run: (*parser).callonListingBlock210,
																																expr: &litMatcher{
																																	pos:        position{line: 713, col: 13, offset: 30132},
																																	val:        "\t",
																																	ignoreCase: false,
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&litMatcher{
																									pos:        position{line: 156, col: 53, offset: 6403},
																									val:        "=",
																									ignoreCase: false,
																								},
																								&labeledExpr{
																									pos:   position{line: 156, col: 57, offset: 6407},
																									label: "value",
																									expr: &actionExpr{
																										pos: position{line: 167, col: 19, offset: 6793},
																										run: (*parser).callonListingBlock214,
																										expr: &seqExpr{
																											pos: position{line: 167, col: 19, offset: 6793},
																											exprs: []interface{}{
																												&zeroOrMoreExpr{
																													pos: position{line: 167, col: 19, offset: 6793},
																													expr: &choiceExpr{
																														pos: position{line: 713, col: 7, offset: 30126},
																														alternatives: []interface{}{
																															&litMatcher{
																																pos:        position{line: 713, col: 7, offset: 30126},
																																val:        " ",
																																ignoreCase: false,
																															},
																															&actionExpr{
																																pos: position{line: 713, col: 13, offset: 30132},
																																run: (*parser).callonListingBlock219,
																																expr: &litMatcher{
																																	pos:        position{line: 713, col: 13, offset: 30132},
																																	val:        "\t",
																																	ignoreCase: false,
																																},
																															},
																														},
																													},
																												},
																												&labeledExpr{
																													pos:   position{line: 167, col: 23, offset: 6797},
																													label: "value",
																													expr: &zeroOrMoreExpr{
																														pos: position{line: 167, col: 29, offset: 6803},
																														expr: &seqExpr{
																															pos: position{line: 167, col: 30, offset: 6804},
																															exprs: []interface{}{
																																&notExpr{
																																	pos: position{line: 167, col: 30, offset: 6804},
																																	expr: &choiceExpr{
																																		pos: position{line: 713, col: 7, offset: 30126},
																																		alternatives: []interface{}{
																																			&litMatcher{
																																				pos:        position{line: 713, col: 7, offset: 30126},
																																				val:        " ",
																																				ignoreCase: false,
																																			},
																																			&actionExpr{
																																				pos: position{line: 713, col: 13, offset: 30132},
																																				run: (*parser).callonListingBlock227,
																																				expr: &litMatcher{
																																					pos:        position{line: 713, col: 13, offset: 30132},
																																					val:        "\t",
																																					ignoreCase: false,
																																				},
																																			},
																																		},
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 167, col: 34, offset: 6808},
																																	expr: &litMatcher{
																																		pos:        position{line: 167, col: 35, offset: 6809},
																																		val:        "=",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 167, col: 39, offset: 6813},
																																	expr: &litMatcher{
																																		pos:        position{line: 167, col: 40, offset: 6814},
																																		val:        "]",
																																		ignoreCase: false,
																																	},
																																},
																																&anyMatcher{
																																	line: 167, col: 44, offset: 6818,
																																},
																															},
																														},
																													},
																												},
																												&zeroOrMoreExpr{
																													pos: position{line: 167, col: 48, offset: 6822},
																													expr: &choiceExpr{
																														pos: position{line: 713, col: 7, offset: 30126},
																														alternatives: []interface{}{
																															&litMatcher{
																																pos:        position{line: 713, col: 7, offset: 30126},
																																val:        " ",
																																ignoreCase: false,
																															},
																															&actionExpr{
																																pos: position{line: 713, col: 13, offset: 30132},
																																run: (*parser).callonListingBlock237,
																																expr: &litMatcher{
																																	pos:        position{line: 713, col: 13, offset: 30132},
																																	val:        "\t",
																																	ignoreCase: false,
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																					&actionExpr{
																						pos: position{line: 158, col: 5, offset: 6533},
																						run: (*parser).callonListingBlock239,
																						expr: &seqExpr{
																							pos: position{line: 158, col: 5, offset: 6533},
																							exprs: []interface{}{
																								&litMatcher{
																									pos:        position{line: 158, col: 5, offset: 6533},
																									val:        ",",
																									ignoreCase: false,
																								},
																								&zeroOrMoreExpr{
																									pos: position{line: 158, col: 9, offset: 6537},
																									expr: &choiceExpr{
																										pos: position{line: 713, col: 7, offset: 30126},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 713, col: 7, offset: 30126},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 713, col: 13, offset: 30132},
																												run: (*parser).callonListingBlock245,
																												expr: &litMatcher{
																													pos:        position{line: 713, col: 13, offset: 30132},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																								&labeledExpr{
																									pos:   position{line: 158, col: 13, offset: 6541},
																									label: "key",
																									expr: &actionExpr{
																										pos: position{line: 162, col: 17, offset: 6664},
																										run: (*parser).callonListingBlock248,
																										expr: &seqExpr{
																											pos: position{line: 162, col: 17, offset: 6664},
																											exprs: []interface{}{
																												&labeledExpr{
																													pos:   position{line: 162, col: 17, offset: 6664},
																													label: "key",
																													expr: &oneOrMoreExpr{
																														pos: position{line: 162, col: 22, offset: 6669},
																														expr: &seqExpr{
																															pos: position{line: 162, col: 23, offset: 6670},
																															exprs: []interface{}{
																																&notExpr{
																																	pos: position{line: 162, col: 23, offset: 6670},
																																	expr: &choiceExpr{
																																		pos: position{line: 713, col: 7, offset: 30126},
																																		alternatives: []interface{}{
																																			&litMatcher{
																																				pos:        position{line: 713, col: 7, offset: 30126},
																																				val:        " ",
																																				ignoreCase: false,
																																			},
																																			&actionExpr{
																																				pos: position{line: 713, col: 13, offset: 30132},
																																				run: (*parser).callonListingBlock256,
																																				expr: &litMatcher{
																																					pos:        position{line: 713, col: 13, offset: 30132},
																																					val:        "\t",
																																					ignoreCase: false,
																																				},
																																			},
																																		},
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 162, col: 27, offset: 6674},
																																	expr: &litMatcher{
																																		pos:        position{line: 162, col: 28, offset: 6675},
																																		val:        "=",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 162, col: 32, offset: 6679},
																																	expr: &litMatcher{
																																		pos:        position{line: 162, col: 33, offset: 6680},
																																		val:        ",",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 162, col: 37, offset: 6684},
																																	expr: &litMatcher{
																																		pos:        position{line: 162, col: 38, offset: 6685},
																																		val:        "]",
																																		ignoreCase: false,
																																	},
																																},
																																&anyMatcher{
																																	line: 162, col: 42, offset: 6689,
																																},
																															},
																														},
																													},
																												},
																												&zeroOrMoreExpr{
																													pos: position{line: 162, col: 46, offset: 6693},
																													expr: &choiceExpr{
																														pos: position{line: 713, col: 7, offset: 30126},
																														alternatives: []interface{}{
																															&litMatcher{
																																pos:        position{line: 713, col: 7, offset: 30126},
																																val:        " ",
																																ignoreCase: false,
																															},
																															&actionExpr{
																																pos: position{line: 713, col: 13, offset: 30132},
																																run: (*parser).callonListingBlock268,
																																expr: &litMatcher{
																																	pos:        position{line: 713, col: 13, offset: 30132},
																																	val:        "\t",
																																	ignoreCase: false,
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 146, col: 89, offset: 5966},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
													},
												},
											},
											&zeroOrMoreExpr{
												pos: position{line: 120, col: 98, offset: 5095},
												expr: &choiceExpr{
													pos: position{line: 713, col: 7, offset: 30126},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 713, col: 7, offset: 30126},
															val:        " ",
															ignoreCase: false,
														},
														&actionExpr{
															pos: position{line: 713, col: 13, offset: 30132},
															run: (*parser).callonListingBlock274,
															expr: &litMatcher{
																pos:        position{line: 713, col: 13, offset: 30132},
																val:        "\t",
																ignoreCase: false,
															},
														},
													},
												},
											},
											&choiceExpr{
												pos: position{line: 721, col: 8, offset: 30228},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 717, col: 12, offset: 30188},
														val:        "\r\n",
														ignoreCase: false,
													},
													&charClassMatcher{
														pos:        position{line: 717, col: 21, offset: 30197},
														val:        "[\\r\\n]",
														chars:      []rune{'\r', '\n'},
														ignoreCase: false,
														inverted:   false,
													},
													&notExpr{
														pos: position{line: 719, col: 8, offset: 30217},
														expr: &anyMatcher{
															line: 719, col: 9, offset: 30218,
														},
													},
												},
											},
										},
									},
								},
							},
						},
						&litMatcher{
							pos:        position{line: 630, col: 26, offset: 27122},
							val:        "----",
							ignoreCase: false,
						},
						&zeroOrMoreExpr{
							pos: position{line: 632, col: 70, offset: 27199},
							expr: &choiceExpr{
								pos: position{line: 713, col: 7, offset: 30126},
								alternatives: []interface{}{
									&litMatcher{
										pos:        position{line: 713, col: 7, offset: 30126},
										val:        " ",
										ignoreCase: false,
									},
									&actionExpr{
										pos: position{line: 713, col: 13, offset: 30132},
										run: (*parser).callonListingBlock285,
										expr: &litMatcher{
											pos:        position{line: 713, col: 13, offset: 30132},
											val:        "\t",
											ignoreCase: false,
										},
									},
								},
							},
						},
						&choiceExpr{
							pos: position{line: 717, col: 12, offset: 30188},
							alternatives: []interface{}{
								&litMatcher{
									pos:        position{line: 717, col: 12, offset: 30188},
									val:        "\r\n",
									ignoreCase: false,
								},
								&charClassMatcher{
									pos:        position{line: 717, col: 21, offset: 30197},
									val:        "[\\r\\n]",
									chars:      []rune{'\r', '\n'},
									ignoreCase: false,
									inverted:   false,
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 632, col: 82, offset: 27211},
							label: "content",
							expr: &zeroOrMoreExpr{
								pos: position{line: 632, col: 90, offset: 27219},
								expr: &choiceExpr{
									pos: position{line: 632, col: 91, offset: 27220},
									alternatives: []interface{}{
										&ruleRefExpr{
											pos:  position{line: 632, col: 91, offset: 27220},
											name: "List",
										},
										&ruleRefExpr{
											pos:  position{line: 632, col: 98, offset: 27227},
											name: "BlockParagraph",
										},
										&actionExpr{
											pos: position{line: 686, col: 14, offset: 29590},
											run: (*parser).callonListingBlock295,
											expr: &seqExpr{
												pos: position{line: 686, col: 14, offset: 29590},
												exprs: []interface{}{
													&notExpr{
														pos: position{line: 686, col: 14, offset: 29590},
														expr: &notExpr{
															pos: position{line: 719, col: 8, offset: 30217},
															expr: &anyMatcher{
																line: 719, col: 9, offset: 30218,
															},
														},
													},
													&zeroOrMoreExpr{
														pos: position{line: 686, col: 19, offset: 29595},
														expr: &choiceExpr{
															pos: position{line: 713, col: 7, offset: 30126},
															alternatives: []interface{}{
																&litMatcher{
																	pos:        position{line: 713, col: 7, offset: 30126},
																	val:        " ",
																	ignoreCase: false,
																},
																&actionExpr{
																	pos: position{line: 713, col: 13, offset: 30132},
																	run: (*parser).callonListingBlock303,
																	expr: &litMatcher{
																		pos:        position{line: 713, col: 13, offset: 30132},
																		val:        "\t",
																		ignoreCase: false,
																	},
																},
															},
														},
													},
													&choiceExpr{
														pos: position{line: 721, col: 8, offset: 30228},
														alternatives: []interface{}{
															&litMatcher{
																pos:        position{line: 717, col: 12, offset: 30188},
																val:        "\r\n",
																ignoreCase: false,
															},
															&charClassMatcher{
																pos:        position{line: 717, col: 21, offset: 30197},
																val:        "[\\r\\n]",
																chars:      []rune{'\r', '\n'},
																ignoreCase: false,
																inverted:   false,
															},
															&notExpr{
																pos: position{line: 719, col: 8, offset: 30217},
																expr: &anyMatcher{
																	line: 719, col: 9, offset: 30218,
																},
															},
														},
													},
												},
											},
										},
									},
								},
							},
						},
						&choiceExpr{
							pos: position{line: 632, col: 128, offset: 27257},
							alternatives: []interface{}{
								&seqExpr{
									pos: position{line: 632, col: 129, offset: 27258},
									exprs: []interface{}{
										&litMatcher{
											pos:        position{line: 630, col: 26, offset: 27122},
											val:        "----",
											ignoreCase: false,
										},
										&zeroOrMoreExpr{
											pos: position{line: 632, col: 151, offset: 27280},
											expr: &choiceExpr{
												pos: position{line: 713, col: 7, offset: 30126},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 713, col: 7, offset: 30126},
														val:        " ",
														ignoreCase: false,
													},
													&actionExpr{
														pos: position{line: 713, col: 13, offset: 30132},
														run: (*parser).callonListingBlock316,
														expr: &litMatcher{
															pos:        position{line: 713, col: 13, offset: 30132},
															val:        "\t",
															ignoreCase: false,
														},
													},
												},
											},
										},
										&choiceExpr{
											pos: position{line: 721, col: 8, offset: 30228},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 717, col: 12, offset: 30188},
													val:        "\r\n",
													ignoreCase: false,
												},
												&charClassMatcher{
													pos:        position{line: 717, col: 21, offset: 30197},
													val:        "[\\r\\n]",
													chars:      []rune{'\r', '\n'},
													ignoreCase: false,
													inverted:   false,
												},
												&notExpr{
													pos: position{line: 719, col: 8, offset: 30217},
													expr: &anyMatcher{
														line: 719, col: 9, offset: 30218,
													},
												},
											},
										},
									},
								},
								&notExpr{
									pos: position{line: 719, col: 8, offset: 30217},
									expr: &anyMatcher{
										line: 719, col: 9, offset: 30218,
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "ExampleBlock",
			pos:  position{line: 638, col: 1, offset: 27442},
			expr: &actionExpr{
				pos: position{line: 638, col: 17, offset: 27458},
				run: (*parser).callonExampleBlock1,
				expr: &seqExpr{
					pos: position{line: 638, col: 17, offset: 27458},
					exprs: []interface{}{
						&labeledExpr{
							pos:   position{line: 638, col: 17, offset: 27458},
							label: "attributes",
							expr: &zeroOrMoreExpr{
								pos: position{line: 638, col: 28, offset: 27469},
								expr: &actionExpr{
									pos: position{line: 120, col: 21, offset: 5018},
									run: (*parser).callonExampleBlock5,
									expr: &seqExpr{
										pos: position{line: 120, col: 21, offset: 5018},
										exprs: []interface{}{
											&labeledExpr{
												pos:   position{line: 120, col: 21, offset: 5018},
												label: "attr",
												expr: &choiceExpr{
													pos: position{line: 120, col: 27, offset: 5024},
													alternatives: []interface{}{
														&actionExpr{
															pos: position{line: 124, col: 14, offset: 5203},
															run: (*parser).callonExampleBlock9,
															expr: &labeledExpr{
																pos:   position{line: 124, col: 14, offset: 5203},
																label: "id",
																expr: &actionExpr{
																	pos: position{line: 130, col: 20, offset: 5333},
																	run: (*parser).callonExampleBlock11,
																	expr: &seqExpr{
																		pos: position{line: 130, col: 20, offset: 5333},
																		exprs: []interface{}{
																			&litMatcher{
																				pos:        position{line: 130, col: 20, offset: 5333},
																				val:        "[[",
																				ignoreCase: false,
																			},
																			&labeledExpr{
																				pos:   position{line: 130, col: 25, offset: 5338},
																				label: "id",
																				expr: &actionExpr{
																					pos: position{line: 701, col: 7, offset: 29885},
																					run: (*parser).callonExampleBlock15,
																					expr: &oneOrMoreExpr{
																						pos: position{line: 701, col: 7, offset: 29885},
																						expr: &seqExpr{
																							pos: position{line: 701, col: 8, offset: 29886},
																							exprs: []interface{}{
																								&notExpr{
																									pos: position{line: 701, col: 8, offset: 29886},
																									expr: &choiceExpr{
																										pos: position{line: 717, col: 12, offset: 30188},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 717, col: 12, offset: 30188},
																												val:        "\r\n",
																												ignoreCase: false,
																											},
																											&charClassMatcher{
																												pos:        position{line: 717, col: 21, offset: 30197},
																												val:        "[\\r\\n]",
																												chars:      []rune{'\r', '\n'},
																												ignoreCase: false,
																												inverted:   false,
																											},
																										},
																									},
																								},
																								&notExpr{
																									pos: position{line: 701, col: 17, offset: 29895},
																									expr: &choiceExpr{
																										pos: position{line: 713, col: 7, offset: 30126},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 713, col: 7, offset: 30126},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 713, col: 13, offset: 30132},
																												run: (*parser).callonExampleBlock25,
																												expr: &litMatcher{
																													pos:        position{line: 713, col: 13, offset: 30132},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																								&notExpr{
																									pos: position{line: 701, col: 21, offset: 29899},
																									expr: &litMatcher{
																										pos:        position{line: 701, col: 22, offset: 29900},
																										val:        "[",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 701, col: 26, offset: 29904},
																									expr: &litMatcher{
																										pos:        position{line: 701, col: 27, offset: 29905},
																										val:        "]",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 701, col: 31, offset: 29909},
																									expr: &litMatcher{
																										pos:        position{line: 701, col: 32, offset: 29910},
																										val:        "<<",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 701, col: 37, offset: 29915},
																									expr: &litMatcher{
																										pos:        position{line: 701, col: 38, offset: 29916},
																										val:        ">>",
																										ignoreCase: false,
																									},
																								},
																								&anyMatcher{
																									line: 701, col: 42, offset: 29920,
																								},
																							},
																						},
																					},
																				},
																			},
																			&litMatcher{
																				pos:        position{line: 130, col: 33, offset: 5346},
																				val:        "]]",
																				ignoreCase: false,
																			},
																		},
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 126, col: 5, offset: 5249},
															run: (*parser).callonExampleBlock37,
															expr: &seqExpr{
																pos: position{line: 126, col: 5, offset: 5249},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 126, col: 5, offset: 5249},
																		val:        "[#",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 126, col: 10, offset: 5254},
																		label: "id",
																		expr: &actionExpr{
																			pos: position{line: 701, col: 7, offset: 29885},
																			run: (*parser).callonExampleBlock41,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 701, col: 7, offset: 29885},
																				expr: &seqExpr{
																					pos: position{line: 701, col: 8, offset: 29886},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 701, col: 8, offset: 29886},
																							expr: &choiceExpr{
																								pos: position{line: 717, col: 12, offset: 30188},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 717, col: 12, offset: 30188},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 717, col: 21, offset: 30197},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 701, col: 17, offset: 29895},
																							expr: &choiceExpr{
																								pos: position{line: 713, col: 7, offset: 30126},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 713, col: 7, offset: 30126},
																										val:        " ",
																										ignoreCase: false,
																									},
																									&actionExpr{
																										pos: position{line: 713, col: 13, offset: 30132},
																										run: (*parser).callonExampleBlock51,
																										expr: &litMatcher{
																											pos:        position{line: 713, col: 13, offset: 30132},
																											val:        "\t",
																											ignoreCase: false,
																										},
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 701, col: 21, offset: 29899},
																							expr: &litMatcher{
																								pos:        position{line: 701, col: 22, offset: 29900},
																								val:        "[",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 701, col: 26, offset: 29904},
																							expr: &litMatcher{
																								pos:        position{line: 701, col: 27, offset: 29905},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 701, col: 31, offset: 29909},
																							expr: &litMatcher{
																								pos:        position{line: 701, col: 32, offset: 29910},
																								val:        "<<",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 701, col: 37, offset: 29915},
																							expr: &litMatcher{
																								pos:        position{line: 701, col: 38, offset: 29916},
																								val:        ">>",
																								ignoreCase: false,
																							},
																						},
																						&anyMatcher{
																							line: 701, col: 42, offset: 29920,
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 126, col: 18, offset: 5262},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 136, col: 17, offset: 5557},
															run: (*parser).callonExampleBlock63,
															expr: &seqExpr{
																pos: position{line: 136, col: 17, offset: 5557},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 136, col: 17, offset: 5557},
																		val:        ".",
																		ignoreCase: false,
																	},
																	&notExpr{
																		pos: position{line: 136, col: 21, offset: 5561},
																		expr: &litMatcher{
																			pos:        position{line: 136, col: 22, offset: 5562},
																			val:        ".",
																			ignoreCase: false,
																		},
																	},
																	&notExpr{
																		pos: position{line: 136, col: 26, offset: 5566},
																		expr: &choiceExpr{
																			pos: position{line: 713, col: 7, offset: 30126},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 713, col: 7, offset: 30126},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 713, col: 13, offset: 30132},
																					run: (*parser).callonExampleBlock71,
																					expr: &litMatcher{
																						pos:        position{line: 713, col: 13, offset: 30132},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 136, col: 30, offset: 5570},
																		label: "title",
																		expr: &oneOrMoreExpr{
																			pos: position{line: 136, col: 36, offset: 5576},
																			expr: &seqExpr{
																				pos: position{line: 136, col: 37, offset: 5577},
																				exprs: []interface{}{
																					&notExpr{
																						pos: position{line: 136, col: 37, offset: 5577},
																						expr: &choiceExpr{
																							pos: position{line: 717, col: 12, offset: 30188},
																							alternatives: []interface{}{
																								&litMatcher{
																									pos:        position{line: 717, col: 12, offset: 30188},
																									val:        "\r\n",
																									ignoreCase: false,
																								},
																								&charClassMatcher{
																									pos:        position{line: 717, col: 21, offset: 30197},
																									val:        "[\\r\\n]",
																									chars:      []rune{'\r', '\n'},
																									ignoreCase: false,
																									inverted:   false,
																								},
																							},
																						},
																					},
																					&anyMatcher{
																						line: 136, col: 46, offset: 5586,
																					},
																				},
																			},
																		},
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 141, col: 30, offset: 5760},
															run: (*parser).callonExampleBlock81,
															expr: &seqExpr{
																pos: position{line: 141, col: 30, offset: 5760},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 141, col: 30, offset: 5760},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 141, col: 34, offset: 5764},
																		label: "k",
																		expr: &choiceExpr{
																			pos: position{line: 442, col: 19, offset: 17830},
																			alternatives: []interface{}{
																				&actionExpr{
																					pos: position{line: 442, col: 19, offset: 17830},
																					run: (*parser).callonExampleBlock86,
																					expr: &litMatcher{
																						pos:        position{line: 442, col: 19, offset: 17830},
																						val:        "TIP",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 444, col: 5, offset: 17868},
																					run: (*parser).callonExampleBlock88,
																					expr: &litMatcher{
																						pos:        position{line: 444, col: 5, offset: 17868},
																						val:        "NOTE",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 446, col: 5, offset: 17908},
																					run: (*parser).callonExampleBlock90,
																					expr: &litMatcher{
																						pos:        position{line: 446, col: 5, offset: 17908},
																						val:        "IMPORTANT",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 448, col: 5, offset: 17958},
																					run: (*parser).callonExampleBlock92,
																					expr: &litMatcher{
																						pos:        position{line: 448, col: 5, offset: 17958},
																						val:        "WARNING",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 450, col: 5, offset: 18004},
																					run: (*parser).callonExampleBlock94,
																					expr: &litMatcher{
																						pos:        position{line: 450, col: 5, offset: 18004},
																						val:        "CAUTION",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 141, col: 53, offset: 5783},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 146, col: 19, offset: 5896},
															run: (*parser).callonExampleBlock97,
															expr: &seqExpr{
																pos: position{line: 146, col: 19, offset: 5896},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 146, col: 19, offset: 5896},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 146, col: 23, offset: 5900},
																		label: "attribute",
																		expr: &choiceExpr{
																			pos: position{line: 150, col: 21, offset: 6095},
																			alternatives: []interface{}{
																				&actionExpr{
																					pos: position{line: 150, col: 21, offset: 6095},
																					run: (*parser).callonExampleBlock102,
																					expr: &seqExpr{
																						pos: position{line: 150, col: 21, offset: 6095},
																						exprs: []interface{}{
																							&labeledExpr{
																								pos:   position{line: 150, col: 21, offset: 6095},
																								label: "key",
																								expr: &actionExpr{
																									pos: position{line: 162, col: 17, offset: 6664},
																									run: (*parser).callonExampleBlock105,
																									expr: &seqExpr{
																										pos: position{line: 162, col: 17, offset: 6664},
																										exprs: []interface{}{
																											&labeledExpr{
																												pos:   position{line: 162, col: 17, offset: 6664},
																												label: "key",
																												expr: &oneOrMoreExpr{
																													pos: position{line: 162, col: 22, offset: 6669},
																													expr: &seqExpr{
																														pos: position{line: 162, col: 23, offset: 6670},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 162, col: 23, offset: 6670},
																																expr: &choiceExpr{
																																	pos: position{line: 713, col: 7, offset: 30126},
																																	alternatives: []interface{}{
																																		&litMatcher{
																																			pos:        position{line: 713, col: 7, offset: 30126},
																																			val:        " ",
																																			ignoreCase: false,
																																		},
																																		&actionExpr{
																																			pos: position{line: 713, col: 13, offset: 30132},
																																			run: (*parser).callonExampleBlock113,
																																			expr: &litMatcher{
																																				pos:        position{line: 713, col: 13, offset: 30132},
																																				val:        "\t",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																},
																															},
																															&notExpr{
																																pos: position{line: 162, col: 27, offset: 6674},
																																expr: &litMatcher{
																																	pos:        position{line: 162, col: 28, offset: 6675},
																																	val:        "=",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 162, col: 32, offset: 6679},
																																expr: &litMatcher{
																																	pos:        position{line: 162, col: 33, offset: 6680},
																																	val:        ",",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 162, col: 37, offset: 6684},
																																expr: &litMatcher{
																																	pos:        position{line: 162, col: 38, offset: 6685},
																																	val:        "]",
																																	ignoreCase: false,
																																},
																															},
																															&anyMatcher{
																																line: 162, col: 42, offset: 6689,
																															},
																														},
																													},
																												},
																											},
																											&zeroOrMoreExpr{
																												pos: position{line: 162, col: 46, offset: 6693},
																												expr: &choiceExpr{
																													pos: position{line: 713, col: 7, offset: 30126},
																													alternatives: []interface{}{
																														&litMatcher{
																															pos:        position{line: 713, col: 7, offset: 30126},
																															val:        " ",
																															ignoreCase: false,
																														},
																														&actionExpr{
																															pos: position{line: 713, col: 13, offset: 30132},
																															run: (*parser).callonExampleBlock125,
																															expr: &litMatcher{
																																pos:        position{line: 713, col: 13, offset: 30132},
																																val:        "\t",
																																ignoreCase: false,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&litMatcher{
																								pos:        position{line: 150, col: 40, offset: 6114},
																								val:        "=",
																								ignoreCase: false,
																							},
																							&labeledExpr{
																								pos:   position{line: 150, col: 44, offset: 6118},
																								label: "value",
																								expr: &actionExpr{
																									pos: position{line: 167, col: 19, offset: 6793},
																									run: (*parser).callonExampleBlock129,
																									expr: &seqExpr{
																										pos: position{line: 167, col: 19, offset: 6793},
																										exprs: []interface{}{
																											&zeroOrMoreExpr{
																												pos: position{line: 167, col: 19, offset: 6793},
																												expr: &choiceExpr{
																													pos: position{line: 713, col: 7, offset: 30126},
																													alternatives: []interface{}{
																														&litMatcher{
																															pos:        position{line: 713, col: 7, offset: 30126},
																															val:        " ",
																															ignoreCase: false,
																														},
																														&actionExpr{
																															pos: position{line: 713, col: 13, offset: 30132},
																															run: (*parser).callonExampleBlock134,
																															expr: &litMatcher{
																																pos:        position{line: 713, col: 13, offset: 30132},
																																val:        "\t",
																																ignoreCase: false,
																															},
																														},
																													},
																												},
																											},
																											&labeledExpr{
																												pos:   position{line: 167, col: 23, offset: 6797},
																												label: "value",
																												expr: &zeroOrMoreExpr{
																													pos: position{line: 167, col: 29, offset: 6803},
																													expr: &seqExpr{
																														pos: position{line: 167, col: 30, offset: 6804},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 167, col: 30, offset: 6804},
																																expr: &choiceExpr{
																																	pos: position{line: 713, col: 7, offset: 30126},
																																	alternatives: []interface{}{
																																		&litMatcher{
																																			pos:        position{line: 713, col: 7, offset: 30126},
																																			val:        " ",
																																			ignoreCase: false,
																																		},
																																		&actionExpr{
																																			pos: position{line: 713, col: 13, offset: 30132},
																																			run: (*parser).callonExampleBlock142,
																																			expr: &litMatcher{
																																				pos:        position{line: 713, col: 13, offset: 30132},
																																				val:        "\t",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																},
																															},
																															&notExpr{
																																pos: position{line: 167, col: 34, offset: 6808},
																																expr: &litMatcher{
																																	pos:        position{line: 167, col: 35, offset: 6809},
																																	val:        "=",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 167, col: 39, offset: 6813},
																																expr: &litMatcher{
																																	pos:        position{line: 167, col: 40, offset: 6814},
																																	val:        "]",
																																	ignoreCase: false,
																																},
																															},
																															&anyMatcher{
																																line: 167, col: 44, offset: 6818,
																															},
																														},
																													},
																												},
																											},
																											&zeroOrMoreExpr{
																												pos: position{line: 167, col: 48, offset: 6822},
																												expr: &choiceExpr{
																													pos: position{line: 713, col: 7, offset: 30126},
																													alternatives: []interface{}{
																														&litMatcher{
																															pos:        position{line: 713, col: 7, offset: 30126},
																															val:        " ",
																															ignoreCase: false,
																														},
																														&actionExpr{
																															pos: position{line: 713, col: 13, offset: 30132},
																															run: (*parser).callonExampleBlock152,
																															expr: &litMatcher{
																																pos:        position{line: 713, col: 13, offset: 30132},
																																val:        "\t",
																																ignoreCase: false,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																				&actionExpr{
																					pos: position{line: 152, col: 5, offset: 6244},
																					run: (*parser).callonExampleBlock154,
																					expr: &labeledExpr{
																						pos:   position{line: 152, col: 5, offset: 6244},
																						label: "key",
																						expr: &actionExpr{
																							pos: position{line: 162, col: 17, offset: 6664},
																							run: (*parser).callonExampleBlock156,
																							expr: &seqExpr{
																								pos: position{line: 162, col: 17, offset: 6664},
																								exprs: []interface{}{
																									&labeledExpr{
																										pos:   position{line: 162, col: 17, offset: 6664},
																										label: "key",
																										expr: &oneOrMoreExpr{
																											pos: position{line: 162, col: 22, offset: 6669},
																											expr: &seqExpr{
																												pos: position{line: 162, col: 23, offset: 6670},
																												exprs: []interface{}{
																													&notExpr{
																														pos: position{line: 162, col: 23, offset: 6670},
																														expr: &choiceExpr{
																															pos: position{line: 713, col: 7, offset: 30126},
																															alternatives: []interface{}{
																																&litMatcher{
																																	pos:        position{line: 713, col: 7, offset: 30126},
																																	val:        " ",
																																	ignoreCase: false,
																																},
																																&actionExpr{
																																	pos: position{line: 713, col: 13, offset: 30132},
																																	run: (*parser).callonExampleBlock164,
																																	expr: &litMatcher{
																																		pos:        position{line: 713, col: 13, offset: 30132},
																																		val:        "\t",
																																		ignoreCase: false,
																																	},
																																},
																															},
																														},
																													},
																													&notExpr{
																														pos: position{line: 162, col: 27, offset: 6674},
																														expr: &litMatcher{
																															pos:        position{line: 162, col: 28, offset: 6675},
																															val:        "=",
																															ignoreCase: false,
																														},
																													},
																													&notExpr{
																														pos: position{line: 162, col: 32, offset: 6679},
																														expr: &litMatcher{
																															pos:        position{line: 162, col: 33, offset: 6680},
																															val:        ",",
																															ignoreCase: false,
																														},
																													},
																													&notExpr{
																														pos: position{line: 162, col: 37, offset: 6684},
																														expr: &litMatcher{
																															pos:        position{line: 162, col: 38, offset: 6685},
																															val:        "]",
																															ignoreCase: false,
																														},
																													},
																													&anyMatcher{
																														line: 162, col: 42, offset: 6689,
																													},
																												},
																											},
																										},
																									},
																									&zeroOrMoreExpr{
																										pos: position{line: 162, col: 46, offset: 6693},
																										expr: &choiceExpr{
																											pos: position{line: 713, col: 7, offset: 30126},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 713, col: 7, offset: 30126},
																													val:        " ",
																													ignoreCase: false,
																												},
																												&actionExpr{
																													pos: position{line: 713, col: 13, offset: 30132},
																													run: (*parser).callonExampleBlock176,
																													expr: &litMatcher{
																														pos:        position{line: 713, col: 13, offset: 30132},
																														val:        "\t",
																														ignoreCase: false,
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 146, col: 52, offset: 5929},
																		label: "attributes",
																		expr: &zeroOrMoreExpr{
																			pos: position{line: 146, col: 63, offset: 5940},
																			expr: &choiceExpr{
																				pos: position{line: 156, col: 26, offset: 6376},
																				alternatives: []interface{}{
																					&actionExpr{
																						pos: position{line: 156, col: 26, offset: 6376},
																						run: (*parser).callonExampleBlock181,
																						expr: &seqExpr{
																							pos: position{line: 156, col: 26, offset: 6376},
																							exprs: []interface{}{
																								&litMatcher{
																									pos:        position{line: 156, col: 26, offset: 6376},
																									val:        ",",
																									ignoreCase: false,
																								},
																								&zeroOrMoreExpr{
																									pos: position{line: 156, col: 30, offset: 6380},
																									expr: &choiceExpr{
																										pos: position{line: 713, col: 7, offset: 30126},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 713, col: 7, offset: 30126},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 713, col: 13, offset: 30132},
																												run: (*parser).callonExampleBlock187,
																												expr: &litMatcher{
																													pos:        position{line: 713, col: 13, offset: 30132},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																								&labeledExpr{
																									pos:   position{line: 156, col: 34, offset: 6384},
																									label: "key",
																									expr: &actionExpr{
																										pos: position{line: 162, col: 17, offset: 6664},
																										run: (*parser).callonExampleBlock190,
																										expr: &seqExpr{
																											pos: position{line: 162, col: 17, offset: 6664},
																											exprs: []interface{}{
																												&labeledExpr{
																													pos:   position{line: 162, col: 17, offset: 6664},
																													label: "key",
																													expr: &oneOrMoreExpr{
																														pos: position{line: 162, col: 22, offset: 6669},
																														expr: &seqExpr{
																															pos: position{line: 162, col: 23, offset: 6670},
																															exprs: []interface{}{
																																&notExpr{
																																	pos: position{line: 162, col: 23, offset: 6670},
																																	expr: &choiceExpr{
																																		pos: position{line: 713, col: 7, offset: 30126},
																																		alternatives: []interface{}{
																																			&litMatcher{
																																				pos:        position{line: 713, col: 7, offset: 30126},
																																				val:        " ",
																																				ignoreCase: false,
																																			},
																																			&actionExpr{
																																				pos: position{line: 713, col: 13, offset: 30132},
																																				run: (*parser).callonExampleBlock198,
																																				expr: &litMatcher{
																																					pos:        position{line: 713, col: 13, offset: 30132},
																																					val:        "\t",
																																					ignoreCase: false,
																																				},
																																			},
																																		},
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 162, col: 27, offset: 6674},
																																	expr: &litMatcher{
																																		pos:        position{line: 162, col: 28, offset: 6675},
																																		val:        "=",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 162, col: 32, offset: 6679},
																																	expr: &litMatcher{
																																		pos:        position{line: 162, col: 33, offset: 6680},
																																		val:        ",",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 162, col: 37, offset: 6684},
																																	expr: &litMatcher{
																																		pos:        position{line: 162, col: 38, offset: 6685},
																																		val:        "]",
																																		ignoreCase: false,
																																	},
																																},
																																&anyMatcher{
																																	line: 162, col: 42, offset: 6689,
																																},
																															},
																														},
																													},
																												},
																												&zeroOrMoreExpr{
																													pos: position{line: 162, col: 46, offset: 6693},
																													expr: &choiceExpr{
																														pos: position{line: 713, col: 7, offset: 30126},
																														alternatives: []interface{}{
																															&litMatcher{
																																pos:        position{line: 713, col: 7, offset: 30126},
																																val:        " ",
																																ignoreCase: false,
																															},
																															&actionExpr{
																																pos: position{line: 713, col: 13, offset: 30132},
																																run: (*parser).callonExampleBlock210,
																																expr: &litMatcher{
																																	pos:        position{line: 713, col: 13, offset: 30132},
																																	val:        "\t",
																																	ignoreCase: false,
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&litMatcher{
																									pos:        position{line: 156, col: 53, offset: 6403},
																									val:        "=",
																									ignoreCase: false,
																								},
																								&labeledExpr{
																									pos:   position{line: 156, col: 57, offset: 6407},
																									label: "value",
																									expr: &actionExpr{
																										pos: position{line: 167, col: 19, offset: 6793},
																										run: (*parser).callonExampleBlock214,
																										expr: &seqExpr{
																											pos: position{line: 167, col: 19, offset: 6793},
																											exprs: []interface{}{
																												&zeroOrMoreExpr{
																													pos: position{line: 167, col: 19, offset: 6793},
																													expr: &choiceExpr{
																														pos: position{line: 713, col: 7, offset: 30126},
																														alternatives: []interface{}{
																															&litMatcher{
																																pos:        position{line: 713, col: 7, offset: 30126},
																																val:        " ",
																																ignoreCase: false,
																															},
																															&actionExpr{
																																pos: position{line: 713, col: 13, offset: 30132},
																																run: (*parser).callonExampleBlock219,
																																expr: &litMatcher{
																																	pos:        position{line: 713, col: 13, offset: 30132},
																																	val:        "\t",
																																	ignoreCase: false,
																																},
																															},
																														},
																													},
																												},
																												&labeledExpr{
																													pos:   position{line: 167, col: 23, offset: 6797},
																													label: "value",
																													expr: &zeroOrMoreExpr{
																														pos: position{line: 167, col: 29, offset: 6803},
																														expr: &seqExpr{
																															pos: position{line: 167, col: 30, offset: 6804},
																															exprs: []interface{}{
																																&notExpr{
																																	pos: position{line: 167, col: 30, offset: 6804},
																																	expr: &choiceExpr{
																																		pos: position{line: 713, col: 7, offset: 30126},
																																		alternatives: []interface{}{
																																			&litMatcher{
																																				pos:        position{line: 713, col: 7, offset: 30126},
																																				val:        " ",
																																				ignoreCase: false,
																																			},
																																			&actionExpr{
																																				pos: position{line: 713, col: 13, offset: 30132},
																																				run: (*parser).callonExampleBlock227,
																																				expr: &litMatcher{
																																					pos:        position{line: 713, col: 13, offset: 30132},
																																					val:        "\t",
																																					ignoreCase: false,
																																				},
																																			},
																																		},
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 167, col: 34, offset: 6808},
																																	expr: &litMatcher{
																																		pos:        position{line: 167, col: 35, offset: 6809},
																																		val:        "=",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 167, col: 39, offset: 6813},
																																	expr: &litMatcher{
																																		pos:        position{line: 167, col: 40, offset: 6814},
																																		val:        "]",
																																		ignoreCase: false,
																																	},
																																},
																																&anyMatcher{
																																	line: 167, col: 44, offset: 6818,
																																},
																															},
																														},
																													},
																												},
																												&zeroOrMoreExpr{
																													pos: position{line: 167, col: 48, offset: 6822},
																													expr: &choiceExpr{
																														pos: position{line: 713, col: 7, offset: 30126},
																														alternatives: []interface{}{
																															&litMatcher{
																																pos:        position{line: 713, col: 7, offset: 30126},
																																val:        " ",
																																ignoreCase: false,
																															},
																															&actionExpr{
																																pos: position{line: 713, col: 13, offset: 30132},
																																run: (*parser).callonExampleBlock237,
																																expr: &litMatcher{
																																	pos:        position{line: 713, col: 13, offset: 30132},
																																	val:        "\t",
																																	ignoreCase: false,
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																					&actionExpr{
																						pos: position{line: 158, col: 5, offset: 6533},
																						run: (*parser).callonExampleBlock239,
																						expr: &seqExpr{
																							pos: position{line: 158, col: 5, offset: 6533},
																							exprs: []interface{}{
																								&litMatcher{
																									pos:        position{line: 158, col: 5, offset: 6533},
																									val:        ",",
																									ignoreCase: false,
																								},
																								&zeroOrMoreExpr{
																									pos: position{line: 158, col: 9, offset: 6537},
																									expr: &choiceExpr{
																										pos: position{line: 713, col: 7, offset: 30126},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 713, col: 7, offset: 30126},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 713, col: 13, offset: 30132},
																												run: (*parser).callonExampleBlock245,
																												expr: &litMatcher{
																													pos:        position{line: 713, col: 13, offset: 30132},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																								&labeledExpr{
																									pos:   position{line: 158, col: 13, offset: 6541},
																									label: "key",
																									expr: &actionExpr{
																										pos: position{line: 162, col: 17, offset: 6664},
																										run: (*parser).callonExampleBlock248,
																										expr: &seqExpr{
																											pos: position{line: 162, col: 17, offset: 6664},
																											exprs: []interface{}{
																												&labeledExpr{
																													pos:   position{line: 162, col: 17, offset: 6664},
																													label: "key",
																													expr: &oneOrMoreExpr{
																														pos: position{line: 162, col: 22, offset: 6669},
																														expr: &seqExpr{
																															pos: position{line: 162, col: 23, offset: 6670},
																															exprs: []interface{}{
																																&notExpr{
																																	pos: position{line: 162, col: 23, offset: 6670},
																																	expr: &choiceExpr{
																																		pos: position{line: 713, col: 7, offset: 30126},
																																		alternatives: []interface{}{
																																			&litMatcher{
																																				pos:        position{line: 713, col: 7, offset: 30126},
																																				val:        " ",
																																				ignoreCase: false,
																																			},
																																			&actionExpr{
																																				pos: position{line: 713, col: 13, offset: 30132},
																																				run: (*parser).callonExampleBlock256,
																																				expr: &litMatcher{
																																					pos:        position{line: 713, col: 13, offset: 30132},
																																					val:        "\t",
																																					ignoreCase: false,
																																				},
																																			},
																																		},
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 162, col: 27, offset: 6674},
																																	expr: &litMatcher{
																																		pos:        position{line: 162, col: 28, offset: 6675},
																																		val:        "=",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 162, col: 32, offset: 6679},
																																	expr: &litMatcher{
																																		pos:        position{line: 162, col: 33, offset: 6680},
																																		val:        ",",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 162, col: 37, offset: 6684},
																																	expr: &litMatcher{
																																		pos:        position{line: 162, col: 38, offset: 6685},
																																		val:        "]",
																																		ignoreCase: false,
																																	},
																																},
																																&anyMatcher{
																																	line: 162, col: 42, offset: 6689,
																																},
																															},
																														},
																													},
																												},
																												&zeroOrMoreExpr{
																													pos: position{line: 162, col: 46, offset: 6693},
																													expr: &choiceExpr{
																														pos: position{line: 713, col: 7, offset: 30126},
																														alternatives: []interface{}{
																															&litMatcher{
																																pos:        position{line: 713, col: 7, offset: 30126},
																																val:        " ",
																																ignoreCase: false,
																															},
																															&actionExpr{
																																pos: position{line: 713, col: 13, offset: 30132},
																																run: (*parser).callonExampleBlock268,
																																expr: &litMatcher{
																																	pos:        position{line: 713, col: 13, offset: 30132},
																																	val:        "\t",
																																	ignoreCase: false,
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 146, col: 89, offset: 5966},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
													},
												},
											},
											&zeroOrMoreExpr{
												pos: position{line: 120, col: 98, offset: 5095},
												expr: &choiceExpr{
													pos: position{line: 713, col: 7, offset: 30126},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 713, col: 7, offset: 30126},
															val:        " ",
															ignoreCase: false,
														},
														&actionExpr{
															pos: position{line: 713, col: 13, offset: 30132},
															run: (*parser).callonExampleBlock274,
															expr: &litMatcher{
																pos:        position{line: 713, col: 13, offset: 30132},
																val:        "\t",
																ignoreCase: false,
															},
														},
													},
												},
											},
											&choiceExpr{
												pos: position{line: 721, col: 8, offset: 30228},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 717, col: 12, offset: 30188},
														val:        "\r\n",
														ignoreCase: false,
													},
													&charClassMatcher{
														pos:        position{line: 717, col: 21, offset: 30197},
														val:        "[\\r\\n]",
														chars:      []rune{'\r', '\n'},
														ignoreCase: false,
														inverted:   false,
													},
													&notExpr{
														pos: position{line: 719, col: 8, offset: 30217},
														expr: &anyMatcher{
															line: 719, col: 9, offset: 30218,
														},
													},
												},
											},
										},
									},
								},
							},
						},
						&litMatcher{
							pos:        position{line: 636, col: 26, offset: 27434},
							val:        "====",
							ignoreCase: false,
						},
						&zeroOrMoreExpr{
							pos: position{line: 638, col: 70, offset: 27511},
							expr: &choiceExpr{
								pos: position{line: 713, col: 7, offset: 30126},
								alternatives: []interface{}{
									&litMatcher{
										pos:        position{line: 713, col: 7, offset: 30126},
										val:        " ",
										ignoreCase: false,
									},
									&actionExpr{
										pos: position{line: 713, col: 13, offset: 30132},
										run: (*parser).callonExampleBlock285,
										expr: &litMatcher{
											pos:        position{line: 713, col: 13, offset: 30132},
											val:        "\t",
											ignoreCase: false,
										},
									},
								},
							},
						},
						&choiceExpr{
							pos: position{line: 717, col: 12, offset: 30188},
							alternatives: []interface{}{
								&litMatcher{
									pos:        position{line: 717, col: 12, offset: 30188},
									val:        "\r\n",
									ignoreCase: false,
								},
								&charClassMatcher{
									pos:        position{line: 717, col: 21, offset: 30197},
									val:        "[\\r\\n]",
									chars:      []rune{'\r', '\n'},
									ignoreCase: false,
									inverted:   false,
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 638, col: 82, offset: 27523},
							label: "content",
							expr: &zeroOrMoreExpr{
								pos: position{line: 638, col: 90, offset: 27531},
								expr: &choiceExpr{
									pos: position{line: 638, col: 91, offset: 27532},
									alternatives: []interface{}{
										&ruleRefExpr{
											pos:  position{line: 638, col: 91, offset: 27532},
											name: "List",
										},
										&ruleRefExpr{
											pos:  position{line: 638, col: 98, offset: 27539},
											name: "BlockParagraph",
										},
										&actionExpr{
											pos: position{line: 686, col: 14, offset: 29590},
											run: (*parser).callonExampleBlock295,
											expr: &seqExpr{
												pos: position{line: 686, col: 14, offset: 29590},
												exprs: []interface{}{
													&notExpr{
														pos: position{line: 686, col: 14, offset: 29590},
														expr: &notExpr{
															pos: position{line: 719, col: 8, offset: 30217},
															expr: &anyMatcher{
																line: 719, col: 9, offset: 30218,
															},
														},
													},
													&zeroOrMoreExpr{
														pos: position{line: 686, col: 19, offset: 29595},
														expr: &choiceExpr{
															pos: position{line: 713, col: 7, offset: 30126},
															alternatives: []interface{}{
																&litMatcher{
																	pos:        position{line: 713, col: 7, offset: 30126},
																	val:        " ",
																	ignoreCase: false,
																},
																&actionExpr{
																	pos: position{line: 713, col: 13, offset: 30132},
																	run: (*parser).callonExampleBlock303,
																	expr: &litMatcher{
																		pos:        position{line: 713, col: 13, offset: 30132},
																		val:        "\t",
																		ignoreCase: false,
																	},
																},
															},
														},
													},
													&choiceExpr{
														pos: position{line: 721, col: 8, offset: 30228},
														alternatives: []interface{}{
															&litMatcher{
																pos:        position{line: 717, col: 12, offset: 30188},
																val:        "\r\n",
																ignoreCase: false,
															},
															&charClassMatcher{
																pos:        position{line: 717, col: 21, offset: 30197},
																val:        "[\\r\\n]",
																chars:      []rune{'\r', '\n'},
																ignoreCase: false,
																inverted:   false,
															},
															&notExpr{
																pos: position{line: 719, col: 8, offset: 30217},
																expr: &anyMatcher{
																	line: 719, col: 9, offset: 30218,
																},
															},
														},
													},
												},
											},
										},
									},
								},
							},
						},
						&choiceExpr{
							pos: position{line: 638, col: 129, offset: 27570},
							alternatives: []interface{}{
								&seqExpr{
									pos: position{line: 638, col: 130, offset: 27571},
									exprs: []interface{}{
										&litMatcher{
											pos:        position{line: 636, col: 26, offset: 27434},
											val:        "====",
											ignoreCase: false,
										},
										&zeroOrMoreExpr{
											pos: position{line: 638, col: 152, offset: 27593},
											expr: &choiceExpr{
												pos: position{line: 713, col: 7, offset: 30126},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 713, col: 7, offset: 30126},
														val:        " ",
														ignoreCase: false,
													},
													&actionExpr{
														pos: position{line: 713, col: 13, offset: 30132},
														run: (*parser).callonExampleBlock316,
														expr: &litMatcher{
															pos:        position{line: 713, col: 13, offset: 30132},
															val:        "\t",
															ignoreCase: false,
														},
													},
												},
											},
										},
										&choiceExpr{
											pos: position{line: 721, col: 8, offset: 30228},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 717, col: 12, offset: 30188},
													val:        "\r\n",
													ignoreCase: false,
												},
												&charClassMatcher{
													pos:        position{line: 717, col: 21, offset: 30197},
													val:        "[\\r\\n]",
													chars:      []rune{'\r', '\n'},
													ignoreCase: false,
													inverted:   false,
												},
												&notExpr{
													pos: position{line: 719, col: 8, offset: 30217},
													expr: &anyMatcher{
														line: 719, col: 9, offset: 30218,
													},
												},
											},
										},
									},
								},
								&notExpr{
									pos: position{line: 719, col: 8, offset: 30217},
									expr: &anyMatcher{
										line: 719, col: 9, offset: 30218,
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "BlockParagraph",
			pos:  position{line: 642, col: 1, offset: 27722},
			expr: &actionExpr{
				pos: position{line: 642, col: 20, offset: 27741},
				run: (*parser).callonBlockParagraph1,
				expr: &labeledExpr{
					pos:   position{line: 642, col: 20, offset: 27741},
					label: "lines",
					expr: &oneOrMoreExpr{
						pos: position{line: 642, col: 26, offset: 27747},
						expr: &seqExpr{
							pos: position{line: 643, col: 5, offset: 27753},
							exprs: []interface{}{
								&notExpr{
									pos: position{line: 643, col: 5, offset: 27753},
									expr: &actionExpr{
										pos: position{line: 355, col: 26, offset: 13676},
										run: (*parser).callonBlockParagraph6,
										expr: &seqExpr{
											pos: position{line: 355, col: 26, offset: 13676},
											exprs: []interface{}{
												&zeroOrMoreExpr{
													pos: position{line: 355, col: 26, offset: 13676},
													expr: &choiceExpr{
														pos: position{line: 713, col: 7, offset: 30126},
														alternatives: []interface{}{
															&litMatcher{
																pos:        position{line: 713, col: 7, offset: 30126},
																val:        " ",
																ignoreCase: false,
															},
															&actionExpr{
																pos: position{line: 713, col: 13, offset: 30132},
																run: (*parser).callonBlockParagraph11,
																expr: &litMatcher{
																	pos:        position{line: 713, col: 13, offset: 30132},
																	val:        "\t",
																	ignoreCase: false,
																},
															},
														},
													},
												},
												&labeledExpr{
													pos:   position{line: 355, col: 30, offset: 13680},
													label: "prefix",
													expr: &choiceExpr{
														pos: position{line: 357, col: 5, offset: 13735},
														alternatives: []interface{}{
															&actionExpr{
																pos: position{line: 357, col: 5, offset: 13735},
																run: (*parser).callonBlockParagraph15,
																expr: &litMatcher{
																	pos:        position{line: 357, col: 5, offset: 13735},
																	val:        ".....",
																	ignoreCase: false,
																},
															},
															&actionExpr{
																pos: position{line: 359, col: 9, offset: 13848},
																run: (*parser).callonBlockParagraph17,
																expr: &litMatcher{
																	pos:        position{line: 359, col: 9, offset: 13848},
																	val:        "....",
																	ignoreCase: false,
																},
															},
															&actionExpr{
																pos: position{line: 361, col: 9, offset: 13959},
																run: (*parser).callonBlockParagraph19,
																expr: &litMatcher{
																	pos:        position{line: 361, col: 9, offset: 13959},
																	val:        "...",
																	ignoreCase: false,
																},
															},
															&actionExpr{
																pos: position{line: 363, col: 9, offset: 14068},
																run: (*parser).callonBlockParagraph21,
																expr: &litMatcher{
																	pos:        position{line: 363, col: 9, offset: 14068},
																	val:        "..",
																	ignoreCase: false,
																},
															},
															&actionExpr{
																pos: position{line: 365, col: 9, offset: 14175},
																run: (*parser).callonBlockParagraph23,
																expr: &litMatcher{
																	pos:        position{line: 365, col: 9, offset: 14175},
																	val:        ".",
																	ignoreCase: false,
																},
															},
															&actionExpr{
																pos: position{line: 368, col: 9, offset: 14302},
																run: (*parser).callonBlockParagraph25,
																expr: &seqExpr{
																	pos: position{line: 368, col: 9, offset: 14302},
																	exprs: []interface{}{
																		&oneOrMoreExpr{
																			pos: position{line: 368, col: 9, offset: 14302},
																			expr: &charClassMatcher{
																				pos:        position{line: 368, col: 10, offset: 14303},
																				val:        "[0-9]",
																				ranges:     []rune{'0', '9'},
																				ignoreCase: false,
																				inverted:   false,
																			},
																		},
																		&litMatcher{
																			pos:        position{line: 368, col: 18, offset: 14311},
																			val:        ".",
																			ignoreCase: false,
																		},
																	},
																},
															},
															&actionExpr{
																pos: position{line: 370, col: 9, offset: 14414},
																run: (*parser).callonBlockParagraph30,
																expr: &seqExpr{
																	pos: position{line: 370, col: 9, offset: 14414},
																	exprs: []interface{}{
																		&oneOrMoreExpr{
																			pos: position{line: 370, col: 9, offset: 14414},
																			expr: &charClassMatcher{
																				pos:        position{line: 370, col: 10, offset: 14415},
																				val:        "[a-z]",
																				ranges:     []rune{'a', 'z'},
																				ignoreCase: false,
																				inverted:   false,
																			},
																		},
																		&litMatcher{
																			pos:        position{line: 370, col: 18, offset: 14423},
																			val:        ".",
																			ignoreCase: false,
																		},
																	},
																},
															},
															&actionExpr{
																pos: position{line: 372, col: 9, offset: 14529},
																run: (*parser).callonBlockParagraph35,
																expr: &seqExpr{
																	pos: position{line: 372, col: 9, offset: 14529},
																	exprs: []interface{}{
																		&oneOrMoreExpr{
																			pos: position{line: 372, col: 9, offset: 14529},
																			expr: &charClassMatcher{
																				pos:        position{line: 372, col: 10, offset: 14530},
																				val:        "[A-Z]",
																				ranges:     []rune{'A', 'Z'},
																				ignoreCase: false,
																				inverted:   false,
																			},
																		},
																		&litMatcher{
																			pos:        position{line: 372, col: 18, offset: 14538},
																			val:        ".",
																			ignoreCase: false,
																		},
																	},
																},
															},
															&actionExpr{
																pos: position{line: 374, col: 9, offset: 14644},
																run: (*parser).callonBlockParagraph40,
																expr: &seqExpr{
																	pos: position{line: 374, col: 9, offset: 14644},
																	exprs: []interface{}{
																		&oneOrMoreExpr{
																			pos: position{line: 374, col: 9, offset: 14644},
																			expr: &charClassMatcher{
																				pos:        position{line: 374, col: 10, offset: 14645},
																				val:        "[a-z]",
																				ranges:     []rune{'a', 'z'},
																				ignoreCase: false,
																				inverted:   false,
																			},
																		},
																		&litMatcher{
																			pos:        position{line: 374, col: 18, offset: 14653},
																			val:        ")",
																			ignoreCase: false,
																		},
																	},
																},
															},
															&actionExpr{
																pos: position{line: 376, col: 9, offset: 14759},
																run: (*parser).callonBlockParagraph45,
																expr: &seqExpr{
																	pos: position{line: 376, col: 9, offset: 14759},
																	exprs: []interface{}{
																		&oneOrMoreExpr{
																			pos: position{line: 376, col: 9, offset: 14759},
																			expr: &charClassMatcher{
																				pos:        position{line: 376, col: 10, offset: 14760},
																				val:        "[A-Z]",
																				ranges:     []rune{'A', 'Z'},
																				ignoreCase: false,
																				inverted:   false,
																			},
																		},
																		&litMatcher{
																			pos:        position{line: 376, col: 18, offset: 14768},
																			val:        ")",
																			ignoreCase: false,
																		},
																	},
																},
															},
														},
													},
												},
												&oneOrMoreExpr{
													pos: position{line: 378, col: 8, offset: 14873},
													expr: &choiceExpr{
														pos: position{line: 713, col: 7, offset: 30126},
														alternatives: []interface{}{
															&litMatcher{
																pos:        position{line: 713, col: 7, offset: 30126},
																val:        " ",
																ignoreCase: false,
															},
															&actionExpr{
																pos: position{line: 713, col: 13, offset: 30132},
																run: (*parser).callonBlockParagraph53,
																expr: &litMatcher{
																	pos:        position{line: 713, col: 13, offset: 30132},
																	val:        "\t",
																	ignoreCase: false,
																},
															},
														},
													},
												},
											},
										},
									},
								},
								&notExpr{
									pos: position{line: 644, col: 5, offset: 27783},
									expr: &actionExpr{
										pos: position{line: 393, col: 28, offset: 15526},
										run: (*parser).callonBlockParagraph56,
										expr: &seqExpr{
											pos: position{line: 393, col: 28, offset: 15526},
											exprs: []interface{}{
												&zeroOrMoreExpr{
													pos: position{line: 393, col: 28, offset: 15526},
													expr: &choiceExpr{
														pos: position{line: 713, col: 7, offset: 30126},
														alternatives: []interface{}{
															&litMatcher{
																pos:        position{line: 713, col: 7, offset: 30126},
																val:        " ",
																ignoreCase: false,
															},
															&actionExpr{
																pos: position{line: 713, col: 13, offset: 30132},
																run: (*parser).callonBlockParagraph61,
																expr: &litMatcher{
																	pos:        position{line: 713, col: 13, offset: 30132},
																	val:        "\t",
																	ignoreCase: false,
																},
															},
														},
													},
												},
												&labeledExpr{
													pos:   position{line: 393, col: 32, offset: 15530},
													label: "prefix",
													expr: &choiceExpr{
														pos: position{line: 394, col: 5, offset: 15543},
														alternatives: []interface{}{
															&actionExpr{
																pos: position{line: 394, col: 5, offset: 15543},
																run: (*parser).callonBlockParagraph65,
																expr: &litMatcher{
																	pos:        position{line: 394, col: 5, offset: 15543},
																	val:        "*****",
																	ignoreCase: false,
																},
															},
															&actionExpr{
																pos: position{line: 397, col: 7, offset: 15703},
																run: (*parser).callonBlockParagraph67,
																expr: &litMatcher{
																	pos:        position{line: 397, col: 7, offset: 15703},
																	val:        "****",
																	ignoreCase: false,
																},
															},
															&actionExpr{
																pos: position{line: 400, col: 7, offset: 15862},
																run: (*parser).callonBlockParagraph69,
																expr: &litMatcher{
																	pos:        position{line: 400, col: 7, offset: 15862},
																	val:        "***",
																	ignoreCase: false,
																},
															},
															&actionExpr{
																pos: position{line: 403, col: 7, offset: 16021},
																run: (*parser).callonBlockParagraph71,
																expr: &litMatcher{
																	pos:        position{line: 403, col: 7, offset: 16021},
																	val:        "**",
																	ignoreCase: false,
																},
															},
															&actionExpr{
																pos: position{line: 406, col: 7, offset: 16177},
																run: (*parser).callonBlockParagraph73,
																expr: &litMatcher{
																	pos:        position{line: 406, col: 7, offset: 16177},
																	val:        "*",
																	ignoreCase: false,
																},
															},
															&actionExpr{
																pos: position{line: 409, col: 7, offset: 16331},
																run: (*parser).callonBlockParagraph75,
																expr: &litMatcher{
																	pos:        position{line: 409, col: 7, offset: 16331},
																	val:        "-",
																	ignoreCase: false,
																},
															},
														},
													},
												},
												&oneOrMoreExpr{
													pos: position{line: 411, col: 12, offset: 16472},
													expr: &choiceExpr{
														pos: position{line: 713, col: 7, offset: 30126},
														alternatives: []interface{}{
															&litMatcher{
																pos:        position{line: 713, col: 7, offset: 30126},
																val:        " ",
																ignoreCase: false,
															},
															&actionExpr{
																pos: position{line: 713, col: 13, offset: 30132},
																run: (*parser).callonBlockParagraph80,
																expr: &litMatcher{
																	pos:        position{line: 713, col: 13, offset: 30132},
																	val:        "\t",
																	ignoreCase: false,
																},
															},
														},
													},
												},
											},
										},
									},
								},
								&notExpr{
									pos: position{line: 645, col: 5, offset: 27815},
									expr: &seqExpr{
										pos: position{line: 645, col: 7, offset: 27817},
										exprs: []interface{}{
											&actionExpr{
												pos: position{line: 428, col: 24, offset: 17285},
												run: (*parser).callonBlockParagraph84,
												expr: &labeledExpr{
													pos:   position{line: 428, col: 24, offset: 17285},
													label: "term",
													expr: &zeroOrMoreExpr{
														pos: position{line: 428, col: 29, offset: 17290},
														expr: &seqExpr{
															pos: position{line: 428, col: 30, offset: 17291},
															exprs: []interface{}{
																&notExpr{
																	pos: position{line: 428, col: 30, offset: 17291},
																	expr: &choiceExpr{
																		pos: position{line: 717, col: 12, offset: 30188},
																		alternatives: []interface{}{
																			&litMatcher{
																				pos:        position{line: 717, col: 12, offset: 30188},
																				val:        "\r\n",
																				ignoreCase: false,
																			},
																			&charClassMatcher{
																				pos:        position{line: 717, col: 21, offset: 30197},
																				val:        "[\\r\\n]",
																				chars:      []rune{'\r', '\n'},
																				ignoreCase: false,
																				inverted:   false,
																			},
																		},
																	},
																},
																&notExpr{
																	pos: position{line: 428, col: 39, offset: 17300},
																	expr: &litMatcher{
																		pos:        position{line: 428, col: 40, offset: 17301},
																		val:        "::",
																		ignoreCase: false,
																	},
																},
																&anyMatcher{
																	line: 428, col: 45, offset: 17306,
																},
															},
														},
													},
												},
											},
											&litMatcher{
												pos:        position{line: 433, col: 30, offset: 17426},
												val:        "::",
												ignoreCase: false,
											},
											&oneOrMoreExpr{
												pos: position{line: 433, col: 35, offset: 17431},
												expr: &choiceExpr{
													pos: position{line: 433, col: 36, offset: 17432},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 713, col: 7, offset: 30126},
															val:        " ",
															ignoreCase: false,
														},
														&actionExpr{
															pos: position{line: 713, col: 13, offset: 30132},
															run: (*parser).callonBlockParagraph99,
															expr: &litMatcher{
																pos:        position{line: 713, col: 13, offset: 30132},
																val:        "\t",
																ignoreCase: false,
															},
														},
														&litMatcher{
															pos:        position{line: 717, col: 12, offset: 30188},
															val:        "\r\n",
															ignoreCase: false,
														},
														&charClassMatcher{
															pos:        position{line: 717, col: 21, offset: 30197},
															val:        "[\\r\\n]",
															chars:      []rune{'\r', '\n'},
															ignoreCase: false,
															inverted:   false,
														},
													},
												},
											},
										},
									},
								},
								&notExpr{
									pos: position{line: 646, col: 5, offset: 27868},
									expr: &actionExpr{
										pos: position{line: 340, col: 25, offset: 13122},
										run: (*parser).callonBlockParagraph104,
										expr: &seqExpr{
											pos: position{line: 340, col: 25, offset: 13122},
											exprs: []interface{}{
												&litMatcher{
													pos:        position{line: 340, col: 25, offset: 13122},
													val:        "+",
													ignoreCase: false,
												},
												&zeroOrMoreExpr{
													pos: position{line: 340, col: 29, offset: 13126},
													expr: &choiceExpr{
														pos: position{line: 713, col: 7, offset: 30126},
														alternatives: []interface{}{
															&litMatcher{
																pos:        position{line: 713, col: 7, offset: 30126},
																val:        " ",
																ignoreCase: false,
															},
															&actionExpr{
																pos: position{line: 713, col: 13, offset: 30132},
																run: (*parser).callonBlockParagraph110,
																expr: &litMatcher{
																	pos:        position{line: 713, col: 13, offset: 30132},
																	val:        "\t",
																	ignoreCase: false,
																},
															},
														},
													},
												},
												&choiceExpr{
													pos: position{line: 721, col: 8, offset: 30228},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 717, col: 12, offset: 30188},
															val:        "\r\n",
															ignoreCase: false,
														},
														&charClassMatcher{
															pos:        position{line: 717, col: 21, offset: 30197},
															val:        "[\\r\\n]",
															chars:      []rune{'\r', '\n'},
															ignoreCase: false,
															inverted:   false,
														},
														&notExpr{
															pos: position{line: 719, col: 8, offset: 30217},
															expr: &anyMatcher{
																line: 719, col: 9, offset: 30218,
															},
														},
													},
												},
											},
										},
									},
								},
								&notExpr{
									pos: position{line: 648, col: 5, offset: 27923},
									expr: &choiceExpr{
										pos: position{line: 622, col: 19, offset: 26697},
										alternatives: []interface{}{
											&litMatcher{
												pos:        position{line: 676, col: 26, offset: 29225},
												val:        "....",
												ignoreCase: false,
											},
											&litMatcher{
												pos:        position{line: 624, col: 25, offset: 26815},
												val:        "```",
												ignoreCase: false,
											},
											&litMatcher{
												pos:        position{line: 630, col: 26, offset: 27122},
												val:        "----",
												ignoreCase: false,
											},
											&litMatcher{
												pos:        position{line: 636, col: 26, offset: 27434},
												val:        "====",
												ignoreCase: false,
											},
										},
									},
								},
								&ruleRefExpr{
									pos:  position{line: 649, col: 5, offset: 27945},
									name: "InlineElements",
								},
								&choiceExpr{
									pos: position{line: 721, col: 8, offset: 30228},
									alternatives: []interface{}{
										&litMatcher{
											pos:        position{line: 717, col: 12, offset: 30188},
											val:        "\r\n",
											ignoreCase: false,
										},
										&charClassMatcher{
											pos:        position{line: 717, col: 21, offset: 30197},
											val:        "[\\r\\n]",
											chars:      []rune{'\r', '\n'},
											ignoreCase: false,
											inverted:   false,
										},
										&notExpr{
											pos: position{line: 719, col: 8, offset: 30217},
											expr: &anyMatcher{
												line: 719, col: 9, offset: 30218,
											},
										},
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "WS",
			pos:  position{line: 713, col: 1, offset: 30120},
			expr: &choiceExpr{
				pos: position{line: 713, col: 7, offset: 30126},
				alternatives: []interface{}{
					&litMatcher{
						pos:        position{line: 713, col: 7, offset: 30126},
						val:        " ",
						ignoreCase: false,
					},
					&actionExpr{
						pos: position{line: 713, col: 13, offset: 30132},
						run: (*parser).callonWS3,
						expr: &litMatcher{
							pos:        position{line: 713, col: 13, offset: 30132},
							val:        "\t",
							ignoreCase: false,
						},
					},
				},
			},
		},
		{
			name: "NEWLINE",
			pos:  position{line: 717, col: 1, offset: 30177},
			expr: &choiceExpr{
				pos: position{line: 717, col: 12, offset: 30188},
				alternatives: []interface{}{
					&litMatcher{
						pos:        position{line: 717, col: 12, offset: 30188},
						val:        "\r\n",
						ignoreCase: false,
					},
					&charClassMatcher{
						pos:        position{line: 717, col: 21, offset: 30197},
						val:        "[\\r\\n]",
						chars:      []rune{'\r', '\n'},
						ignoreCase: false,
						inverted:   false,
					},
				},
			},
		},
	},
}

func (c *current) onDocument1(frontMatter, documentHeader, blocks interface{}) (interface{}, error) {
	return types.NewDocument(frontMatter, documentHeader, blocks.([]interface{}))
}

func (p *parser) callonDocument1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocument1(stack["frontMatter"], stack["documentHeader"], stack["blocks"])
}

func (c *current) onDocumentBlock16() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock16() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock16()
}

func (c *current) onDocumentBlock8() (interface{}, error) {
	return types.NewBlankLine()
}

func (p *parser) callonDocumentBlock8() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock8()
}

func (c *current) onDocumentBlock35() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock35() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock35()
}

func (c *current) onDocumentBlock23(name interface{}) (interface{}, error) {
	return types.NewDocumentAttributeDeclaration(name.([]interface{}), nil)
}

func (p *parser) callonDocumentBlock23() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock23(stack["name"])
}

func (c *current) onDocumentBlock54() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock54() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock54()
}

func (c *current) onDocumentBlock42(name, value interface{}) (interface{}, error) {
	return types.NewDocumentAttributeDeclaration(name.([]interface{}), value.([]interface{}))
}

func (p *parser) callonDocumentBlock42() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock42(stack["name"], stack["value"])
}

func (c *current) onDocumentBlock81() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock81() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock81()
}

func (c *current) onDocumentBlock69(name interface{}) (interface{}, error) {
	return types.NewDocumentAttributeReset(name.([]interface{}))
}

func (p *parser) callonDocumentBlock69() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock69(stack["name"])
}

func (c *current) onDocumentBlock100() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock100() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock100()
}

func (c *current) onDocumentBlock88(name interface{}) (interface{}, error) {
	return types.NewDocumentAttributeReset(name.([]interface{}))
}

func (p *parser) callonDocumentBlock88() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock88(stack["name"])
}

func (c *current) onDocumentBlock137() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock137() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock137()
}

func (c *current) onDocumentBlock127() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock127() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock127()
}

func (c *current) onDocumentBlock123(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonDocumentBlock123() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock123(stack["id"])
}

func (c *current) onDocumentBlock121(id interface{}) (interface{}, error) {
	return id, nil
}

func (p *parser) callonDocumentBlock121() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock121(stack["id"])
}

func (c *current) onDocumentBlock163() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock163() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock163()
}

func (c *current) onDocumentBlock153() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock153() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock153()
}

func (c *current) onDocumentBlock149(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonDocumentBlock149() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock149(stack["id"])
}

func (c *current) onDocumentBlock183() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock183() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock183()
}

func (c *current) onDocumentBlock175(title interface{}) (interface{}, error) {
	return types.NewElementTitle(title.([]interface{}))
}

func (p *parser) callonDocumentBlock175() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock175(stack["title"])
}

func (c *current) onDocumentBlock198() (interface{}, error) {
	return types.Tip, nil
}

func (p *parser) callonDocumentBlock198() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock198()
}

func (c *current) onDocumentBlock200() (interface{}, error) {
	return types.Note, nil
}

func (p *parser) callonDocumentBlock200() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock200()
}

func (c *current) onDocumentBlock202() (interface{}, error) {
	return types.Important, nil
}

func (p *parser) callonDocumentBlock202() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock202()
}

func (c *current) onDocumentBlock204() (interface{}, error) {
	return types.Warning, nil
}

func (p *parser) callonDocumentBlock204() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock204()
}

func (c *current) onDocumentBlock206() (interface{}, error) {
	return types.Caution, nil
}

func (p *parser) callonDocumentBlock206() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock206()
}

func (c *current) onDocumentBlock193(k interface{}) (interface{}, error) {
	return k, nil
}

func (p *parser) callonDocumentBlock193() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock193(stack["k"])
}

func (c *current) onDocumentBlock225() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock225() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock225()
}

func (c *current) onDocumentBlock237() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock237() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock237()
}

func (c *current) onDocumentBlock217(key interface{}) (interface{}, error) {
	// fmt.Printf("found attribute key: %v\n", key)
	return key, nil
}

func (p *parser) callonDocumentBlock217() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock217(stack["key"])
}

func (c *current) onDocumentBlock246() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock246() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock246()
}

func (c *current) onDocumentBlock254() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock254() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock254()
}

func (c *current) onDocumentBlock264() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock264() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock264()
}

func (c *current) onDocumentBlock241(value interface{}) (interface{}, error) {
	// fmt.Printf("found attribute value: %v\n", value)
	return value, nil
}

func (p *parser) callonDocumentBlock241() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock241(stack["value"])
}

func (c *current) onDocumentBlock214(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.([]interface{}), value.([]interface{}))
}

func (p *parser) callonDocumentBlock214() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock214(stack["key"], stack["value"])
}

func (c *current) onDocumentBlock276() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock276() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock276()
}

func (c *current) onDocumentBlock288() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock288() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock288()
}

func (c *current) onDocumentBlock268(key interface{}) (interface{}, error) {
	// fmt.Printf("found attribute key: %v\n", key)
	return key, nil
}

func (p *parser) callonDocumentBlock268() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock268(stack["key"])
}

func (c *current) onDocumentBlock266(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.([]interface{}), nil)
}

func (p *parser) callonDocumentBlock266() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock266(stack["key"])
}

func (c *current) onDocumentBlock299() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock299() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock299()
}

func (c *current) onDocumentBlock310() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock310() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock310()
}

func (c *current) onDocumentBlock322() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock322() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock322()
}

func (c *current) onDocumentBlock302(key interface{}) (interface{}, error) {
	// fmt.Printf("found attribute key: %v\n", key)
	return key, nil
}

func (p *parser) callonDocumentBlock302() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock302(stack["key"])
}

func (c *current) onDocumentBlock331() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock331() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock331()
}

func (c *current) onDocumentBlock339() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock339() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock339()
}

func (c *current) onDocumentBlock349() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock349() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock349()
}

func (c *current) onDocumentBlock326(value interface{}) (interface{}, error) {
	// fmt.Printf("found attribute value: %v\n", value)
	return value, nil
}

func (p *parser) callonDocumentBlock326() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock326(stack["value"])
}

func (c *current) onDocumentBlock293(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.([]interface{}), value.([]interface{}))
}

func (p *parser) callonDocumentBlock293() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock293(stack["key"], stack["value"])
}

func (c *current) onDocumentBlock357() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock357() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock357()
}

func (c *current) onDocumentBlock368() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock368() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock368()
}

func (c *current) onDocumentBlock380() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock380() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock380()
}

func (c *current) onDocumentBlock360(key interface{}) (interface{}, error) {
	// fmt.Printf("found attribute key: %v\n", key)
	return key, nil
}

func (p *parser) callonDocumentBlock360() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock360(stack["key"])
}

func (c *current) onDocumentBlock351(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.([]interface{}), nil)
}

func (p *parser) callonDocumentBlock351() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock351(stack["key"])
}

func (c *current) onDocumentBlock209(attribute, attributes interface{}) (interface{}, error) {
	return types.NewAttributeGroup(append([]interface{}{attribute}, attributes.([]interface{})...))
}

func (p *parser) callonDocumentBlock209() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock209(stack["attribute"], stack["attributes"])
}

func (c *current) onDocumentBlock386() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock386() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock386()
}

func (c *current) onDocumentBlock117(attr interface{}) (interface{}, error) {
	return attr, nil // avoid returning something like `[]interface{}{attr, EOL}`
}

func (p *parser) callonDocumentBlock117() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock117(stack["attr"])
}

func (c *current) onDocumentBlock408() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock408() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock408()
}

func (c *current) onDocumentBlock398() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock398() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock398()
}

func (c *current) onDocumentBlock416(attributes interface{}) (interface{}, error) {
	return attributes, nil
}

func (p *parser) callonDocumentBlock416() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock416(stack["attributes"])
}

func (c *current) onDocumentBlock394(path, attributes interface{}) (interface{}, error) {
	return types.NewImageMacro(path.(string), attributes.([]interface{}))
}

func (p *parser) callonDocumentBlock394() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock394(stack["path"], stack["attributes"])
}

func (c *current) onDocumentBlock436() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock436() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock436()
}

func (c *current) onDocumentBlock113(attributes, image interface{}) (interface{}, error) {
	// here we can ignore the blank line in the returned element
	return types.NewBlockImage(image.(types.ImageMacro), attributes.([]interface{}))
}

func (p *parser) callonDocumentBlock113() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock113(stack["attributes"], stack["image"])
}

func (c *current) onDocumentBlock449() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock449() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock449()
}

func (c *current) onDocumentBlock473() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock473() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock473()
}

func (c *current) onDocumentBlock465() (interface{}, error) {
	return types.NewBlankLine()
}

func (p *parser) callonDocumentBlock465() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock465()
}

func (c *current) onDocumentBlock456(content interface{}) (interface{}, error) {

	return content, nil
}

func (p *parser) callonDocumentBlock456() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock456(stack["content"])
}

func (c *current) onDocumentBlock494() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock494() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock494()
}

func (c *current) onDocumentBlock486() (interface{}, error) {
	return types.NewBlankLine()
}

func (p *parser) callonDocumentBlock486() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock486()
}

func (c *current) onDocumentBlock443(spaces, content interface{}) (interface{}, error) {
	return types.NewLiteralBlock(spaces.([]interface{}), content.([]interface{}))
}

func (p *parser) callonDocumentBlock443() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock443(stack["spaces"], stack["content"])
}

func (c *current) onDocumentBlock511() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock511() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock511()
}

func (c *current) onDocumentBlock528() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock528() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock528()
}

func (c *current) onDocumentBlock505(content interface{}) (interface{}, error) {
	return types.NewLiteralBlock([]interface{}{}, content.([]interface{}))
}

func (p *parser) callonDocumentBlock505() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock505(stack["content"])
}

func (c *current) onDocumentBlock543() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock543() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock543()
}

func (c *current) onDocumentBlock566() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock566() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock566()
}

func (c *current) onDocumentBlock558() (interface{}, error) {
	return types.NewBlankLine()
}

func (p *parser) callonDocumentBlock558() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock558()
}

func (c *current) onDocumentBlock549(content interface{}) (interface{}, error) {

	return content, nil
}

func (p *parser) callonDocumentBlock549() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock549(stack["content"])
}

func (c *current) onDocumentBlock587() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock587() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock587()
}

func (c *current) onDocumentBlock579() (interface{}, error) {
	return types.NewBlankLine()
}

func (p *parser) callonDocumentBlock579() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock579()
}

func (c *current) onDocumentBlock537(content interface{}) (interface{}, error) {
	return types.NewLiteralBlock([]interface{}{}, content.([]interface{}))
}

func (p *parser) callonDocumentBlock537() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock537(stack["content"])
}

func (c *current) onDocumentBlock1(block interface{}) (interface{}, error) {
	// element attribute alone should be take recognized as such
	return block, nil
}

func (p *parser) callonDocumentBlock1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock1(stack["block"])
}

func (c *current) onFrontMatter10() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonFrontMatter10() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFrontMatter10()
}

func (c *current) onFrontMatter1(content interface{}) (interface{}, error) {
	return types.NewYamlFrontMatter(content.(string))
}

func (p *parser) callonFrontMatter1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFrontMatter1(stack["content"])
}

func (c *current) onDocumentHeader13() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader13() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader13()
}

func (c *current) onDocumentHeader24() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader24() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader24()
}

func (c *current) onDocumentHeader42() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader42() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader42()
}

func (c *current) onDocumentHeader32() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader32() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader32()
}

func (c *current) onDocumentHeader48() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader48() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader48()
}

func (c *current) onDocumentHeader67() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader67() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader67()
}

func (c *current) onDocumentHeader57() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader57() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader57()
}

func (c *current) onDocumentHeader73() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader73() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader73()
}

func (c *current) onDocumentHeader92() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader92() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader92()
}

func (c *current) onDocumentHeader82() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader82() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader82()
}

func (c *current) onDocumentHeader98() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader98() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader98()
}

func (c *current) onDocumentHeader120() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader120() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader120()
}

func (c *current) onDocumentHeader127() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader127() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader127()
}

func (c *current) onDocumentHeader19(namePart1, namePart2, namePart3, email interface{}) (interface{}, error) {
	return types.NewDocumentAuthor(namePart1, namePart2, namePart3, email)
}

func (p *parser) callonDocumentHeader19() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader19(stack["namePart1"], stack["namePart2"], stack["namePart3"], stack["email"])
}

func (c *current) onDocumentHeader8(authors interface{}) (interface{}, error) {
	return types.NewDocumentAuthors(authors.([]interface{}))
}

func (p *parser) callonDocumentHeader8() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader8(stack["authors"])
}

func (c *current) onDocumentHeader139() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader139() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader139()
}

func (c *current) onDocumentHeader148() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader148() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader148()
}

func (c *current) onDocumentHeader166() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader166() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader166()
}

func (c *current) onDocumentHeader156() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader156() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader156()
}

func (c *current) onDocumentHeader172() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader172() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader172()
}

func (c *current) onDocumentHeader244() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader244() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader244()
}

func (c *current) onDocumentHeader251() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader251() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader251()
}

func (c *current) onDocumentHeader143(namePart1, namePart2, namePart3, email interface{}) (interface{}, error) {
	return types.NewDocumentAuthor(namePart1, namePart2, namePart3, email)
}

func (p *parser) callonDocumentHeader143() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader143(stack["namePart1"], stack["namePart2"], stack["namePart3"], stack["email"])
}

func (c *current) onDocumentHeader134(author interface{}) (interface{}, error) {
	return []types.DocumentAuthor{author.(types.DocumentAuthor)}, nil
}

func (p *parser) callonDocumentHeader134() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader134(stack["author"])
}

func (c *current) onDocumentHeader260() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader260() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader260()
}

func (c *current) onDocumentHeader303() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader303() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader303()
}

func (c *current) onDocumentHeader255(revnumber, revdate, revremark interface{}) (interface{}, error) {
	return types.NewDocumentRevision(revnumber, revdate, revremark)
}

func (p *parser) callonDocumentHeader255() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader255(stack["revnumber"], stack["revdate"], stack["revremark"])
}

func (c *current) onDocumentHeader355() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader355() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader355()
}

func (c *current) onDocumentHeader343(name interface{}) (interface{}, error) {
	return types.NewDocumentAttributeDeclaration(name.([]interface{}), nil)
}

func (p *parser) callonDocumentHeader343() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader343(stack["name"])
}

func (c *current) onDocumentHeader374() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader374() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader374()
}

func (c *current) onDocumentHeader362(name, value interface{}) (interface{}, error) {
	return types.NewDocumentAttributeDeclaration(name.([]interface{}), value.([]interface{}))
}

func (p *parser) callonDocumentHeader362() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader362(stack["name"], stack["value"])
}

func (c *current) onDocumentHeader1(header, authors, revision, otherAttributes interface{}) (interface{}, error) {

	return types.NewDocumentHeader(header, authors, revision, otherAttributes.([]interface{}))
}

func (p *parser) callonDocumentHeader1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader1(stack["header"], stack["authors"], stack["revision"], stack["otherAttributes"])
}

func (c *current) onSection1(section interface{}) (interface{}, error) {
	return section, nil

}

func (p *parser) callonSection1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1(stack["section"])
}

func (c *current) onSection07(header, elements interface{}) (interface{}, error) {
	return types.NewSection(0, header.(types.SectionTitle), elements.([]interface{}))

}

func (p *parser) callonSection07() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection07(stack["header"], stack["elements"])
}

func (c *current) onSection01(section interface{}) (interface{}, error) {
	return section, nil

}

func (p *parser) callonSection01() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection01(stack["section"])
}

func (c *current) onSection0Title25() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Title25() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Title25()
}

func (c *current) onSection0Title15() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Title15() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Title15()
}

func (c *current) onSection0Title11(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonSection0Title11() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Title11(stack["id"])
}

func (c *current) onSection0Title9(id interface{}) (interface{}, error) {
	return id, nil
}

func (p *parser) callonSection0Title9() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Title9(stack["id"])
}

func (c *current) onSection0Title51() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Title51() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Title51()
}

func (c *current) onSection0Title41() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Title41() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Title41()
}

func (c *current) onSection0Title37(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonSection0Title37() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Title37(stack["id"])
}

func (c *current) onSection0Title71() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Title71() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Title71()
}

func (c *current) onSection0Title63(title interface{}) (interface{}, error) {
	return types.NewElementTitle(title.([]interface{}))
}

func (p *parser) callonSection0Title63() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Title63(stack["title"])
}

func (c *current) onSection0Title86() (interface{}, error) {
	return types.Tip, nil
}

func (p *parser) callonSection0Title86() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Title86()
}

func (c *current) onSection0Title88() (interface{}, error) {
	return types.Note, nil
}

func (p *parser) callonSection0Title88() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Title88()
}

func (c *current) onSection0Title90() (interface{}, error) {
	return types.Important, nil
}

func (p *parser) callonSection0Title90() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Title90()
}

func (c *current) onSection0Title92() (interface{}, error) {
	return types.Warning, nil
}

func (p *parser) callonSection0Title92() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Title92()
}

func (c *current) onSection0Title94() (interface{}, error) {
	return types.Caution, nil
}

func (p *parser) callonSection0Title94() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Title94()
}

func (c *current) onSection0Title81(k interface{}) (interface{}, error) {
	return k, nil
}

func (p *parser) callonSection0Title81() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Title81(stack["k"])
}

func (c *current) onSection0Title113() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Title113() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Title113()
}

func (c *current) onSection0Title125() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Title125() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Title125()
}

func (c *current) onSection0Title105(key interface{}) (interface{}, error) {
	// fmt.Printf("found attribute key: %v\n", key)
	return key, nil
}

func (p *parser) callonSection0Title105() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Title105(stack["key"])
}

func (c *current) onSection0Title134() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Title134() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Title134()
}

func (c *current) onSection0Title142() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Title142() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Title142()
}

func (c *current) onSection0Title152() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Title152() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Title152()
}

func (c *current) onSection0Title129(value interface{}) (interface{}, error) {
	// fmt.Printf("found attribute value: %v\n", value)
	return value, nil
}

func (p *parser) callonSection0Title129() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Title129(stack["value"])
}

func (c *current) onSection0Title102(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.([]interface{}), value.([]interface{}))
}

func (p *parser) callonSection0Title102() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Title102(stack["key"], stack["value"])
}

func (c *current) onSection0Title164() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Title164() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Title164()
}

func (c *current) onSection0Title176() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Title176() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Title176()
}

func (c *current) onSection0Title156(key interface{}) (interface{}, error) {
	// fmt.Printf("found attribute key: %v\n", key)
	return key, nil
}

func (p *parser) callonSection0Title156() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Title156(stack["key"])
}

func (c *current) onSection0Title154(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.([]interface{}), nil)
}

func (p *parser) callonSection0Title154() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Title154(stack["key"])
}

func (c *current) onSection0Title187() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Title187() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Title187()
}

func (c *current) onSection0Title198() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Title198() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Title198()
}

func (c *current) onSection0Title210() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Title210() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Title210()
}

func (c *current) onSection0Title190(key interface{}) (interface{}, error) {
	// fmt.Printf("found attribute key: %v\n", key)
	return key, nil
}

func (p *parser) callonSection0Title190() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Title190(stack["key"])
}

func (c *current) onSection0Title219() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Title219() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Title219()
}

func (c *current) onSection0Title227() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Title227() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Title227()
}

func (c *current) onSection0Title237() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Title237() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Title237()
}

func (c *current) onSection0Title214(value interface{}) (interface{}, error) {
	// fmt.Printf("found attribute value: %v\n", value)
	return value, nil
}

func (p *parser) callonSection0Title214() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Title214(stack["value"])
}

func (c *current) onSection0Title181(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.([]interface{}), value.([]interface{}))
}

func (p *parser) callonSection0Title181() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Title181(stack["key"], stack["value"])
}

func (c *current) onSection0Title245() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Title245() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Title245()
}

func (c *current) onSection0Title256() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Title256() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Title256()
}

func (c *current) onSection0Title268() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Title268() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Title268()
}

func (c *current) onSection0Title248(key interface{}) (interface{}, error) {
	// fmt.Printf("found attribute key: %v\n", key)
	return key, nil
}

func (p *parser) callonSection0Title248() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Title248(stack["key"])
}

func (c *current) onSection0Title239(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.([]interface{}), nil)
}

func (p *parser) callonSection0Title239() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Title239(stack["key"])
}

func (c *current) onSection0Title97(attribute, attributes interface{}) (interface{}, error) {
	return types.NewAttributeGroup(append([]interface{}{attribute}, attributes.([]interface{})...))
}

func (p *parser) callonSection0Title97() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Title97(stack["attribute"], stack["attributes"])
}

func (c *current) onSection0Title274() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Title274() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Title274()
}

func (c *current) onSection0Title5(attr interface{}) (interface{}, error) {
	return attr, nil // avoid returning something like `[]interface{}{attr, EOL}`
}

func (p *parser) callonSection0Title5() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Title5(stack["attr"])
}

func (c *current) onSection0Title285() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Title285() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Title285()
}

func (c *current) onSection0Title292() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Title292() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Title292()
}

func (c *current) onSection0Title310() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Title310() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Title310()
}

func (c *current) onSection0Title300() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Title300() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Title300()
}

func (c *current) onSection0Title296(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonSection0Title296() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Title296(stack["id"])
}

func (c *current) onSection0Title325() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Title325() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Title325()
}

func (c *current) onSection0Title1(attributes, content, id interface{}) (interface{}, error) {

	return types.NewSectionTitle(content.(types.InlineElements), append(attributes.([]interface{}), id))
}

func (p *parser) callonSection0Title1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Title1(stack["attributes"], stack["content"], stack["id"])
}

func (c *current) onSection0Block1(content interface{}) (interface{}, error) {
	return content, nil
}

func (p *parser) callonSection0Block1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Block1(stack["content"])
}

func (c *current) onSection17(header, elements interface{}) (interface{}, error) {
	return types.NewSection(1, header.(types.SectionTitle), elements.([]interface{}))

}

func (p *parser) callonSection17() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection17(stack["header"], stack["elements"])
}

func (c *current) onSection11(section interface{}) (interface{}, error) {
	return section, nil
}

func (p *parser) callonSection11() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection11(stack["section"])
}

func (c *current) onSection1Title25() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Title25() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Title25()
}

func (c *current) onSection1Title15() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Title15() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Title15()
}

func (c *current) onSection1Title11(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonSection1Title11() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Title11(stack["id"])
}

func (c *current) onSection1Title9(id interface{}) (interface{}, error) {
	return id, nil
}

func (p *parser) callonSection1Title9() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Title9(stack["id"])
}

func (c *current) onSection1Title51() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Title51() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Title51()
}

func (c *current) onSection1Title41() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Title41() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Title41()
}

func (c *current) onSection1Title37(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonSection1Title37() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Title37(stack["id"])
}

func (c *current) onSection1Title71() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Title71() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Title71()
}

func (c *current) onSection1Title63(title interface{}) (interface{}, error) {
	return types.NewElementTitle(title.([]interface{}))
}

func (p *parser) callonSection1Title63() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Title63(stack["title"])
}

func (c *current) onSection1Title86() (interface{}, error) {
	return types.Tip, nil
}

func (p *parser) callonSection1Title86() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Title86()
}

func (c *current) onSection1Title88() (interface{}, error) {
	return types.Note, nil
}

func (p *parser) callonSection1Title88() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Title88()
}

func (c *current) onSection1Title90() (interface{}, error) {
	return types.Important, nil
}

func (p *parser) callonSection1Title90() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Title90()
}

func (c *current) onSection1Title92() (interface{}, error) {
	return types.Warning, nil
}

func (p *parser) callonSection1Title92() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Title92()
}

func (c *current) onSection1Title94() (interface{}, error) {
	return types.Caution, nil
}

func (p *parser) callonSection1Title94() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Title94()
}

func (c *current) onSection1Title81(k interface{}) (interface{}, error) {
	return k, nil
}

func (p *parser) callonSection1Title81() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Title81(stack["k"])
}

func (c *current) onSection1Title113() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Title113() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Title113()
}

func (c *current) onSection1Title125() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Title125() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Title125()
}

func (c *current) onSection1Title105(key interface{}) (interface{}, error) {
	// fmt.Printf("found attribute key: %v\n", key)
	return key, nil
}

func (p *parser) callonSection1Title105() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Title105(stack["key"])
}

func (c *current) onSection1Title134() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Title134() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Title134()
}

func (c *current) onSection1Title142() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Title142() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Title142()
}

func (c *current) onSection1Title152() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Title152() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Title152()
}

func (c *current) onSection1Title129(value interface{}) (interface{}, error) {
	// fmt.Printf("found attribute value: %v\n", value)
	return value, nil
}

func (p *parser) callonSection1Title129() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Title129(stack["value"])
}

func (c *current) onSection1Title102(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.([]interface{}), value.([]interface{}))
}

func (p *parser) callonSection1Title102() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Title102(stack["key"], stack["value"])
}

func (c *current) onSection1Title164() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Title164() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Title164()
}

func (c *current) onSection1Title176() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Title176() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Title176()
}

func (c *current) onSection1Title156(key interface{}) (interface{}, error) {
	// fmt.Printf("found attribute key: %v\n", key)
	return key, nil
}

func (p *parser) callonSection1Title156() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Title156(stack["key"])
}

func (c *current) onSection1Title154(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.([]interface{}), nil)
}

func (p *parser) callonSection1Title154() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Title154(stack["key"])
}

func (c *current) onSection1Title187() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Title187() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Title187()
}

func (c *current) onSection1Title198() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Title198() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Title198()
}

func (c *current) onSection1Title210() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Title210() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Title210()
}

func (c *current) onSection1Title190(key interface{}) (interface{}, error) {
	// fmt.Printf("found attribute key: %v\n", key)
	return key, nil
}

func (p *parser) callonSection1Title190() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Title190(stack["key"])
}

func (c *current) onSection1Title219() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Title219() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Title219()
}

func (c *current) onSection1Title227() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Title227() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Title227()
}

func (c *current) onSection1Title237() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Title237() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Title237()
}

func (c *current) onSection1Title214(value interface{}) (interface{}, error) {
	// fmt.Printf("found attribute value: %v\n", value)
	return value, nil
}

func (p *parser) callonSection1Title214() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Title214(stack["value"])
}

func (c *current) onSection1Title181(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.([]interface{}), value.([]interface{}))
}

func (p *parser) callonSection1Title181() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Title181(stack["key"], stack["value"])
}

func (c *current) onSection1Title245() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Title245() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Title245()
}

func (c *current) onSection1Title256() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Title256() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Title256()
}

func (c *current) onSection1Title268() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Title268() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Title268()
}

func (c *current) onSection1Title248(key interface{}) (interface{}, error) {
	// fmt.Printf("found attribute key: %v\n", key)
	return key, nil
}

func (p *parser) callonSection1Title248() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Title248(stack["key"])
}

func (c *current) onSection1Title239(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.([]interface{}), nil)
}

func (p *parser) callonSection1Title239() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Title239(stack["key"])
}

func (c *current) onSection1Title97(attribute, attributes interface{}) (interface{}, error) {
	return types.NewAttributeGroup(append([]interface{}{attribute}, attributes.([]interface{})...))
}

func (p *parser) callonSection1Title97() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Title97(stack["attribute"], stack["attributes"])
}

func (c *current) onSection1Title274() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Title274() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Title274()
}

func (c *current) onSection1Title5(attr interface{}) (interface{}, error) {
	return attr, nil // avoid returning something like `[]interface{}{attr, EOL}`
}

func (p *parser) callonSection1Title5() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Title5(stack["attr"])
}

func (c *current) onSection1Title285() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Title285() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Title285()
}

func (c *current) onSection1Title292() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Title292() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Title292()
}

func (c *current) onSection1Title310() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Title310() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Title310()
}

func (c *current) onSection1Title300() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Title300() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Title300()
}

func (c *current) onSection1Title296(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonSection1Title296() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Title296(stack["id"])
}

func (c *current) onSection1Title325() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Title325() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Title325()
}

func (c *current) onSection1Title1(attributes, content, id interface{}) (interface{}, error) {

	return types.NewSectionTitle(content.(types.InlineElements), append(attributes.([]interface{}), id))
}

func (p *parser) callonSection1Title1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Title1(stack["attributes"], stack["content"], stack["id"])
}

func (c *current) onSection1Block1(content interface{}) (interface{}, error) {
	return content, nil
}

func (p *parser) callonSection1Block1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Block1(stack["content"])
}

func (c *current) onSection27(header, elements interface{}) (interface{}, error) {
	return types.NewSection(2, header.(types.SectionTitle), elements.([]interface{}))

}

func (p *parser) callonSection27() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection27(stack["header"], stack["elements"])
}

func (c *current) onSection21(section interface{}) (interface{}, error) {
	return section, nil

}

func (p *parser) callonSection21() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection21(stack["section"])
}

func (c *current) onSection2Title25() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Title25() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Title25()
}

func (c *current) onSection2Title15() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Title15() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Title15()
}

func (c *current) onSection2Title11(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonSection2Title11() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Title11(stack["id"])
}

func (c *current) onSection2Title9(id interface{}) (interface{}, error) {
	return id, nil
}

func (p *parser) callonSection2Title9() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Title9(stack["id"])
}

func (c *current) onSection2Title51() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Title51() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Title51()
}

func (c *current) onSection2Title41() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Title41() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Title41()
}

func (c *current) onSection2Title37(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonSection2Title37() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Title37(stack["id"])
}

func (c *current) onSection2Title71() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Title71() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Title71()
}

func (c *current) onSection2Title63(title interface{}) (interface{}, error) {
	return types.NewElementTitle(title.([]interface{}))
}

func (p *parser) callonSection2Title63() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Title63(stack["title"])
}

func (c *current) onSection2Title86() (interface{}, error) {
	return types.Tip, nil
}

func (p *parser) callonSection2Title86() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Title86()
}

func (c *current) onSection2Title88() (interface{}, error) {
	return types.Note, nil
}

func (p *parser) callonSection2Title88() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Title88()
}

func (c *current) onSection2Title90() (interface{}, error) {
	return types.Important, nil
}

func (p *parser) callonSection2Title90() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Title90()
}

func (c *current) onSection2Title92() (interface{}, error) {
	return types.Warning, nil
}

func (p *parser) callonSection2Title92() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Title92()
}

func (c *current) onSection2Title94() (interface{}, error) {
	return types.Caution, nil
}

func (p *parser) callonSection2Title94() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Title94()
}

func (c *current) onSection2Title81(k interface{}) (interface{}, error) {
	return k, nil
}

func (p *parser) callonSection2Title81() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Title81(stack["k"])
}

func (c *current) onSection2Title113() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Title113() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Title113()
}

func (c *current) onSection2Title125() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Title125() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Title125()
}

func (c *current) onSection2Title105(key interface{}) (interface{}, error) {
	// fmt.Printf("found attribute key: %v\n", key)
	return key, nil
}

func (p *parser) callonSection2Title105() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Title105(stack["key"])
}

func (c *current) onSection2Title134() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Title134() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Title134()
}

func (c *current) onSection2Title142() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Title142() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Title142()
}

func (c *current) onSection2Title152() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Title152() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Title152()
}

func (c *current) onSection2Title129(value interface{}) (interface{}, error) {
	// fmt.Printf("found attribute value: %v\n", value)
	return value, nil
}

func (p *parser) callonSection2Title129() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Title129(stack["value"])
}

func (c *current) onSection2Title102(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.([]interface{}), value.([]interface{}))
}

func (p *parser) callonSection2Title102() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Title102(stack["key"], stack["value"])
}

func (c *current) onSection2Title164() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Title164() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Title164()
}

func (c *current) onSection2Title176() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Title176() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Title176()
}

func (c *current) onSection2Title156(key interface{}) (interface{}, error) {
	// fmt.Printf("found attribute key: %v\n", key)
	return key, nil
}

func (p *parser) callonSection2Title156() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Title156(stack["key"])
}

func (c *current) onSection2Title154(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.([]interface{}), nil)
}

func (p *parser) callonSection2Title154() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Title154(stack["key"])
}

func (c *current) onSection2Title187() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Title187() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Title187()
}

func (c *current) onSection2Title198() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Title198() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Title198()
}

func (c *current) onSection2Title210() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Title210() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Title210()
}

func (c *current) onSection2Title190(key interface{}) (interface{}, error) {
	// fmt.Printf("found attribute key: %v\n", key)
	return key, nil
}

func (p *parser) callonSection2Title190() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Title190(stack["key"])
}

func (c *current) onSection2Title219() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Title219() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Title219()
}

func (c *current) onSection2Title227() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Title227() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Title227()
}

func (c *current) onSection2Title237() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Title237() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Title237()
}

func (c *current) onSection2Title214(value interface{}) (interface{}, error) {
	// fmt.Printf("found attribute value: %v\n", value)
	return value, nil
}

func (p *parser) callonSection2Title214() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Title214(stack["value"])
}

func (c *current) onSection2Title181(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.([]interface{}), value.([]interface{}))
}

func (p *parser) callonSection2Title181() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Title181(stack["key"], stack["value"])
}

func (c *current) onSection2Title245() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Title245() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Title245()
}

func (c *current) onSection2Title256() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Title256() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Title256()
}

func (c *current) onSection2Title268() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Title268() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Title268()
}

func (c *current) onSection2Title248(key interface{}) (interface{}, error) {
	// fmt.Printf("found attribute key: %v\n", key)
	return key, nil
}

func (p *parser) callonSection2Title248() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Title248(stack["key"])
}

func (c *current) onSection2Title239(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.([]interface{}), nil)
}

func (p *parser) callonSection2Title239() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Title239(stack["key"])
}

func (c *current) onSection2Title97(attribute, attributes interface{}) (interface{}, error) {
	return types.NewAttributeGroup(append([]interface{}{attribute}, attributes.([]interface{})...))
}

func (p *parser) callonSection2Title97() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Title97(stack["attribute"], stack["attributes"])
}

func (c *current) onSection2Title274() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Title274() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Title274()
}

func (c *current) onSection2Title5(attr interface{}) (interface{}, error) {
	return attr, nil // avoid returning something like `[]interface{}{attr, EOL}`
}

func (p *parser) callonSection2Title5() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Title5(stack["attr"])
}

func (c *current) onSection2Title285() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Title285() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Title285()
}

func (c *current) onSection2Title292() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Title292() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Title292()
}

func (c *current) onSection2Title310() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Title310() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Title310()
}

func (c *current) onSection2Title300() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Title300() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Title300()
}

func (c *current) onSection2Title296(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonSection2Title296() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Title296(stack["id"])
}

func (c *current) onSection2Title325() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Title325() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Title325()
}

func (c *current) onSection2Title1(attributes, content, id interface{}) (interface{}, error) {
	return types.NewSectionTitle(content.(types.InlineElements), append(attributes.([]interface{}), id))
}

func (p *parser) callonSection2Title1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Title1(stack["attributes"], stack["content"], stack["id"])
}

func (c *current) onSection2Block1(content interface{}) (interface{}, error) {
	return content, nil
}

func (p *parser) callonSection2Block1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Block1(stack["content"])
}

func (c *current) onSection37(header, elements interface{}) (interface{}, error) {
	return types.NewSection(3, header.(types.SectionTitle), elements.([]interface{}))

}

func (p *parser) callonSection37() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection37(stack["header"], stack["elements"])
}

func (c *current) onSection31(section interface{}) (interface{}, error) {
	return section, nil

}

func (p *parser) callonSection31() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection31(stack["section"])
}

func (c *current) onSection3Title25() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Title25() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Title25()
}

func (c *current) onSection3Title15() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Title15() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Title15()
}

func (c *current) onSection3Title11(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonSection3Title11() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Title11(stack["id"])
}

func (c *current) onSection3Title9(id interface{}) (interface{}, error) {
	return id, nil
}

func (p *parser) callonSection3Title9() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Title9(stack["id"])
}

func (c *current) onSection3Title51() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Title51() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Title51()
}

func (c *current) onSection3Title41() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Title41() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Title41()
}

func (c *current) onSection3Title37(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonSection3Title37() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Title37(stack["id"])
}

func (c *current) onSection3Title71() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Title71() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Title71()
}

func (c *current) onSection3Title63(title interface{}) (interface{}, error) {
	return types.NewElementTitle(title.([]interface{}))
}

func (p *parser) callonSection3Title63() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Title63(stack["title"])
}

func (c *current) onSection3Title86() (interface{}, error) {
	return types.Tip, nil
}

func (p *parser) callonSection3Title86() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Title86()
}

func (c *current) onSection3Title88() (interface{}, error) {
	return types.Note, nil
}

func (p *parser) callonSection3Title88() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Title88()
}

func (c *current) onSection3Title90() (interface{}, error) {
	return types.Important, nil
}

func (p *parser) callonSection3Title90() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Title90()
}

func (c *current) onSection3Title92() (interface{}, error) {
	return types.Warning, nil
}

func (p *parser) callonSection3Title92() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Title92()
}

func (c *current) onSection3Title94() (interface{}, error) {
	return types.Caution, nil
}

func (p *parser) callonSection3Title94() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Title94()
}

func (c *current) onSection3Title81(k interface{}) (interface{}, error) {
	return k, nil
}

func (p *parser) callonSection3Title81() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Title81(stack["k"])
}

func (c *current) onSection3Title113() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Title113() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Title113()
}

func (c *current) onSection3Title125() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Title125() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Title125()
}

func (c *current) onSection3Title105(key interface{}) (interface{}, error) {
	// fmt.Printf("found attribute key: %v\n", key)
	return key, nil
}

func (p *parser) callonSection3Title105() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Title105(stack["key"])
}

func (c *current) onSection3Title134() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Title134() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Title134()
}

func (c *current) onSection3Title142() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Title142() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Title142()
}

func (c *current) onSection3Title152() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Title152() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Title152()
}

func (c *current) onSection3Title129(value interface{}) (interface{}, error) {
	// fmt.Printf("found attribute value: %v\n", value)
	return value, nil
}

func (p *parser) callonSection3Title129() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Title129(stack["value"])
}

func (c *current) onSection3Title102(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.([]interface{}), value.([]interface{}))
}

func (p *parser) callonSection3Title102() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Title102(stack["key"], stack["value"])
}

func (c *current) onSection3Title164() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Title164() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Title164()
}

func (c *current) onSection3Title176() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Title176() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Title176()
}

func (c *current) onSection3Title156(key interface{}) (interface{}, error) {
	// fmt.Printf("found attribute key: %v\n", key)
	return key, nil
}

func (p *parser) callonSection3Title156() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Title156(stack["key"])
}

func (c *current) onSection3Title154(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.([]interface{}), nil)
}

func (p *parser) callonSection3Title154() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Title154(stack["key"])
}

func (c *current) onSection3Title187() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Title187() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Title187()
}

func (c *current) onSection3Title198() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Title198() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Title198()
}

func (c *current) onSection3Title210() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Title210() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Title210()
}

func (c *current) onSection3Title190(key interface{}) (interface{}, error) {
	// fmt.Printf("found attribute key: %v\n", key)
	return key, nil
}

func (p *parser) callonSection3Title190() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Title190(stack["key"])
}

func (c *current) onSection3Title219() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Title219() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Title219()
}

func (c *current) onSection3Title227() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Title227() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Title227()
}

func (c *current) onSection3Title237() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Title237() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Title237()
}

func (c *current) onSection3Title214(value interface{}) (interface{}, error) {
	// fmt.Printf("found attribute value: %v\n", value)
	return value, nil
}

func (p *parser) callonSection3Title214() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Title214(stack["value"])
}

func (c *current) onSection3Title181(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.([]interface{}), value.([]interface{}))
}

func (p *parser) callonSection3Title181() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Title181(stack["key"], stack["value"])
}

func (c *current) onSection3Title245() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Title245() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Title245()
}

func (c *current) onSection3Title256() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Title256() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Title256()
}

func (c *current) onSection3Title268() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Title268() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Title268()
}

func (c *current) onSection3Title248(key interface{}) (interface{}, error) {
	// fmt.Printf("found attribute key: %v\n", key)
	return key, nil
}

func (p *parser) callonSection3Title248() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Title248(stack["key"])
}

func (c *current) onSection3Title239(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.([]interface{}), nil)
}

func (p *parser) callonSection3Title239() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Title239(stack["key"])
}

func (c *current) onSection3Title97(attribute, attributes interface{}) (interface{}, error) {
	return types.NewAttributeGroup(append([]interface{}{attribute}, attributes.([]interface{})...))
}

func (p *parser) callonSection3Title97() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Title97(stack["attribute"], stack["attributes"])
}

func (c *current) onSection3Title274() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Title274() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Title274()
}

func (c *current) onSection3Title5(attr interface{}) (interface{}, error) {
	return attr, nil // avoid returning something like `[]interface{}{attr, EOL}`
}

func (p *parser) callonSection3Title5() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Title5(stack["attr"])
}

func (c *current) onSection3Title285() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Title285() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Title285()
}

func (c *current) onSection3Title292() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Title292() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Title292()
}

func (c *current) onSection3Title310() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Title310() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Title310()
}

func (c *current) onSection3Title300() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Title300() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Title300()
}

func (c *current) onSection3Title296(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonSection3Title296() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Title296(stack["id"])
}

func (c *current) onSection3Title1(attributes, content, id interface{}) (interface{}, error) {
	return types.NewSectionTitle(content.(types.InlineElements), append(attributes.([]interface{}), id))
}

func (p *parser) callonSection3Title1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Title1(stack["attributes"], stack["content"], stack["id"])
}

func (c *current) onSection3Block1(content interface{}) (interface{}, error) {
	return content, nil
}

func (p *parser) callonSection3Block1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Block1(stack["content"])
}

func (c *current) onSection47(header, elements interface{}) (interface{}, error) {
	return types.NewSection(4, header.(types.SectionTitle), elements.([]interface{}))

}

func (p *parser) callonSection47() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection47(stack["header"], stack["elements"])
}

func (c *current) onSection41(section interface{}) (interface{}, error) {
	return section, nil

}

func (p *parser) callonSection41() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection41(stack["section"])
}

func (c *current) onSection4Title25() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Title25() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Title25()
}

func (c *current) onSection4Title15() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Title15() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Title15()
}

func (c *current) onSection4Title11(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonSection4Title11() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Title11(stack["id"])
}

func (c *current) onSection4Title9(id interface{}) (interface{}, error) {
	return id, nil
}

func (p *parser) callonSection4Title9() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Title9(stack["id"])
}

func (c *current) onSection4Title51() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Title51() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Title51()
}

func (c *current) onSection4Title41() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Title41() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Title41()
}

func (c *current) onSection4Title37(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonSection4Title37() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Title37(stack["id"])
}

func (c *current) onSection4Title71() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Title71() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Title71()
}

func (c *current) onSection4Title63(title interface{}) (interface{}, error) {
	return types.NewElementTitle(title.([]interface{}))
}

func (p *parser) callonSection4Title63() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Title63(stack["title"])
}

func (c *current) onSection4Title86() (interface{}, error) {
	return types.Tip, nil
}

func (p *parser) callonSection4Title86() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Title86()
}

func (c *current) onSection4Title88() (interface{}, error) {
	return types.Note, nil
}

func (p *parser) callonSection4Title88() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Title88()
}

func (c *current) onSection4Title90() (interface{}, error) {
	return types.Important, nil
}

func (p *parser) callonSection4Title90() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Title90()
}

func (c *current) onSection4Title92() (interface{}, error) {
	return types.Warning, nil
}

func (p *parser) callonSection4Title92() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Title92()
}

func (c *current) onSection4Title94() (interface{}, error) {
	return types.Caution, nil
}

func (p *parser) callonSection4Title94() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Title94()
}

func (c *current) onSection4Title81(k interface{}) (interface{}, error) {
	return k, nil
}

func (p *parser) callonSection4Title81() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Title81(stack["k"])
}

func (c *current) onSection4Title113() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Title113() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Title113()
}

func (c *current) onSection4Title125() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Title125() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Title125()
}

func (c *current) onSection4Title105(key interface{}) (interface{}, error) {
	// fmt.Printf("found attribute key: %v\n", key)
	return key, nil
}

func (p *parser) callonSection4Title105() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Title105(stack["key"])
}

func (c *current) onSection4Title134() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Title134() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Title134()
}

func (c *current) onSection4Title142() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Title142() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Title142()
}

func (c *current) onSection4Title152() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Title152() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Title152()
}

func (c *current) onSection4Title129(value interface{}) (interface{}, error) {
	// fmt.Printf("found attribute value: %v\n", value)
	return value, nil
}

func (p *parser) callonSection4Title129() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Title129(stack["value"])
}

func (c *current) onSection4Title102(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.([]interface{}), value.([]interface{}))
}

func (p *parser) callonSection4Title102() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Title102(stack["key"], stack["value"])
}

func (c *current) onSection4Title164() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Title164() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Title164()
}

func (c *current) onSection4Title176() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Title176() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Title176()
}

func (c *current) onSection4Title156(key interface{}) (interface{}, error) {
	// fmt.Printf("found attribute key: %v\n", key)
	return key, nil
}

func (p *parser) callonSection4Title156() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Title156(stack["key"])
}

func (c *current) onSection4Title154(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.([]interface{}), nil)
}

func (p *parser) callonSection4Title154() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Title154(stack["key"])
}

func (c *current) onSection4Title187() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Title187() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Title187()
}

func (c *current) onSection4Title198() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Title198() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Title198()
}

func (c *current) onSection4Title210() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Title210() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Title210()
}

func (c *current) onSection4Title190(key interface{}) (interface{}, error) {
	// fmt.Printf("found attribute key: %v\n", key)
	return key, nil
}

func (p *parser) callonSection4Title190() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Title190(stack["key"])
}

func (c *current) onSection4Title219() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Title219() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Title219()
}

func (c *current) onSection4Title227() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Title227() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Title227()
}

func (c *current) onSection4Title237() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Title237() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Title237()
}

func (c *current) onSection4Title214(value interface{}) (interface{}, error) {
	// fmt.Printf("found attribute value: %v\n", value)
	return value, nil
}

func (p *parser) callonSection4Title214() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Title214(stack["value"])
}

func (c *current) onSection4Title181(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.([]interface{}), value.([]interface{}))
}

func (p *parser) callonSection4Title181() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Title181(stack["key"], stack["value"])
}

func (c *current) onSection4Title245() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Title245() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Title245()
}

func (c *current) onSection4Title256() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Title256() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Title256()
}

func (c *current) onSection4Title268() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Title268() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Title268()
}

func (c *current) onSection4Title248(key interface{}) (interface{}, error) {
	// fmt.Printf("found attribute key: %v\n", key)
	return key, nil
}

func (p *parser) callonSection4Title248() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Title248(stack["key"])
}

func (c *current) onSection4Title239(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.([]interface{}), nil)
}

func (p *parser) callonSection4Title239() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Title239(stack["key"])
}

func (c *current) onSection4Title97(attribute, attributes interface{}) (interface{}, error) {
	return types.NewAttributeGroup(append([]interface{}{attribute}, attributes.([]interface{})...))
}

func (p *parser) callonSection4Title97() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Title97(stack["attribute"], stack["attributes"])
}

func (c *current) onSection4Title274() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Title274() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Title274()
}

func (c *current) onSection4Title5(attr interface{}) (interface{}, error) {
	return attr, nil // avoid returning something like `[]interface{}{attr, EOL}`
}

func (p *parser) callonSection4Title5() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Title5(stack["attr"])
}

func (c *current) onSection4Title285() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Title285() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Title285()
}

func (c *current) onSection4Title292() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Title292() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Title292()
}

func (c *current) onSection4Title310() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Title310() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Title310()
}

func (c *current) onSection4Title300() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Title300() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Title300()
}

func (c *current) onSection4Title296(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonSection4Title296() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Title296(stack["id"])
}

func (c *current) onSection4Title1(attributes, content, id interface{}) (interface{}, error) {
	return types.NewSectionTitle(content.(types.InlineElements), append(attributes.([]interface{}), id))
}

func (p *parser) callonSection4Title1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Title1(stack["attributes"], stack["content"], stack["id"])
}

func (c *current) onSection4Block1(content interface{}) (interface{}, error) {
	return content, nil
}

func (p *parser) callonSection4Block1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Block1(stack["content"])
}

func (c *current) onSection57(header, elements interface{}) (interface{}, error) {
	return types.NewSection(5, header.(types.SectionTitle), elements.([]interface{}))

}

func (p *parser) callonSection57() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection57(stack["header"], stack["elements"])
}

func (c *current) onSection51(section interface{}) (interface{}, error) {
	return section, nil

}

func (p *parser) callonSection51() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection51(stack["section"])
}

func (c *current) onSection5Title25() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Title25() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Title25()
}

func (c *current) onSection5Title15() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Title15() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Title15()
}

func (c *current) onSection5Title11(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonSection5Title11() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Title11(stack["id"])
}

func (c *current) onSection5Title9(id interface{}) (interface{}, error) {
	return id, nil
}

func (p *parser) callonSection5Title9() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Title9(stack["id"])
}

func (c *current) onSection5Title51() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Title51() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Title51()
}

func (c *current) onSection5Title41() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Title41() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Title41()
}

func (c *current) onSection5Title37(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonSection5Title37() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Title37(stack["id"])
}

func (c *current) onSection5Title71() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Title71() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Title71()
}

func (c *current) onSection5Title63(title interface{}) (interface{}, error) {
	return types.NewElementTitle(title.([]interface{}))
}

func (p *parser) callonSection5Title63() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Title63(stack["title"])
}

func (c *current) onSection5Title86() (interface{}, error) {
	return types.Tip, nil
}

func (p *parser) callonSection5Title86() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Title86()
}

func (c *current) onSection5Title88() (interface{}, error) {
	return types.Note, nil
}

func (p *parser) callonSection5Title88() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Title88()
}

func (c *current) onSection5Title90() (interface{}, error) {
	return types.Important, nil
}

func (p *parser) callonSection5Title90() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Title90()
}

func (c *current) onSection5Title92() (interface{}, error) {
	return types.Warning, nil
}

func (p *parser) callonSection5Title92() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Title92()
}

func (c *current) onSection5Title94() (interface{}, error) {
	return types.Caution, nil
}

func (p *parser) callonSection5Title94() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Title94()
}

func (c *current) onSection5Title81(k interface{}) (interface{}, error) {
	return k, nil
}

func (p *parser) callonSection5Title81() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Title81(stack["k"])
}

func (c *current) onSection5Title113() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Title113() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Title113()
}

func (c *current) onSection5Title125() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Title125() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Title125()
}

func (c *current) onSection5Title105(key interface{}) (interface{}, error) {
	// fmt.Printf("found attribute key: %v\n", key)
	return key, nil
}

func (p *parser) callonSection5Title105() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Title105(stack["key"])
}

func (c *current) onSection5Title134() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Title134() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Title134()
}

func (c *current) onSection5Title142() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Title142() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Title142()
}

func (c *current) onSection5Title152() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Title152() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Title152()
}

func (c *current) onSection5Title129(value interface{}) (interface{}, error) {
	// fmt.Printf("found attribute value: %v\n", value)
	return value, nil
}

func (p *parser) callonSection5Title129() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Title129(stack["value"])
}

func (c *current) onSection5Title102(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.([]interface{}), value.([]interface{}))
}

func (p *parser) callonSection5Title102() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Title102(stack["key"], stack["value"])
}

func (c *current) onSection5Title164() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Title164() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Title164()
}

func (c *current) onSection5Title176() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Title176() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Title176()
}

func (c *current) onSection5Title156(key interface{}) (interface{}, error) {
	// fmt.Printf("found attribute key: %v\n", key)
	return key, nil
}

func (p *parser) callonSection5Title156() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Title156(stack["key"])
}

func (c *current) onSection5Title154(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.([]interface{}), nil)
}

func (p *parser) callonSection5Title154() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Title154(stack["key"])
}

func (c *current) onSection5Title187() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Title187() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Title187()
}

func (c *current) onSection5Title198() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Title198() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Title198()
}

func (c *current) onSection5Title210() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Title210() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Title210()
}

func (c *current) onSection5Title190(key interface{}) (interface{}, error) {
	// fmt.Printf("found attribute key: %v\n", key)
	return key, nil
}

func (p *parser) callonSection5Title190() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Title190(stack["key"])
}

func (c *current) onSection5Title219() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Title219() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Title219()
}

func (c *current) onSection5Title227() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Title227() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Title227()
}

func (c *current) onSection5Title237() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Title237() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Title237()
}

func (c *current) onSection5Title214(value interface{}) (interface{}, error) {
	// fmt.Printf("found attribute value: %v\n", value)
	return value, nil
}

func (p *parser) callonSection5Title214() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Title214(stack["value"])
}

func (c *current) onSection5Title181(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.([]interface{}), value.([]interface{}))
}

func (p *parser) callonSection5Title181() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Title181(stack["key"], stack["value"])
}

func (c *current) onSection5Title245() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Title245() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Title245()
}

func (c *current) onSection5Title256() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Title256() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Title256()
}

func (c *current) onSection5Title268() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Title268() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Title268()
}

func (c *current) onSection5Title248(key interface{}) (interface{}, error) {
	// fmt.Printf("found attribute key: %v\n", key)
	return key, nil
}

func (p *parser) callonSection5Title248() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Title248(stack["key"])
}

func (c *current) onSection5Title239(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.([]interface{}), nil)
}

func (p *parser) callonSection5Title239() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Title239(stack["key"])
}

func (c *current) onSection5Title97(attribute, attributes interface{}) (interface{}, error) {
	return types.NewAttributeGroup(append([]interface{}{attribute}, attributes.([]interface{})...))
}

func (p *parser) callonSection5Title97() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Title97(stack["attribute"], stack["attributes"])
}

func (c *current) onSection5Title274() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Title274() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Title274()
}

func (c *current) onSection5Title5(attr interface{}) (interface{}, error) {
	return attr, nil // avoid returning something like `[]interface{}{attr, EOL}`
}

func (p *parser) callonSection5Title5() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Title5(stack["attr"])
}

func (c *current) onSection5Title285() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Title285() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Title285()
}

func (c *current) onSection5Title292() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Title292() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Title292()
}

func (c *current) onSection5Title310() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Title310() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Title310()
}

func (c *current) onSection5Title300() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Title300() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Title300()
}

func (c *current) onSection5Title296(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonSection5Title296() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Title296(stack["id"])
}

func (c *current) onSection5Title1(attributes, content, id interface{}) (interface{}, error) {
	return types.NewSectionTitle(content.(types.InlineElements), append(attributes.([]interface{}), id))
}

func (p *parser) callonSection5Title1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Title1(stack["attributes"], stack["content"], stack["id"])
}

func (c *current) onSection5Block1(content interface{}) (interface{}, error) {
	return content, nil
}

func (p *parser) callonSection5Block1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Block1(stack["content"])
}

func (c *current) onTitleElements12() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElements12() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElements12()
}

func (c *current) onTitleElements29() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElements29() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElements29()
}

func (c *current) onTitleElements19() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElements19() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElements19()
}

func (c *current) onTitleElements15(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonTitleElements15() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElements15(stack["id"])
}

func (c *current) onTitleElements45() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElements45() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElements45()
}

func (c *current) onTitleElements1(elements interface{}) (interface{}, error) {
	// absorbs heading and trailing spaces
	// fmt.Printf("matching title elements: %v\n", elements)
	return types.NewInlineElements(elements.([]interface{}))
}

func (p *parser) callonTitleElements1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElements1(stack["elements"])
}

func (c *current) onTitleElement18() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement18() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement18()
}

func (c *current) onTitleElement8() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement8() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement8()
}

func (c *current) onTitleElement4(id interface{}) (interface{}, error) {
	return types.NewCrossReference(id.(string))
}

func (p *parser) callonTitleElement4() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement4(stack["id"])
}

func (c *current) onTitleElement49() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement49() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement49()
}

func (c *current) onTitleElement39() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement39() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement39()
}

func (c *current) onTitleElement57(attributes interface{}) (interface{}, error) {
	return attributes, nil
}

func (p *parser) callonTitleElement57() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement57(stack["attributes"])
}

func (c *current) onTitleElement33(path, attributes interface{}) (interface{}, error) {
	return types.NewImageMacro(path.(string), attributes.([]interface{}))
}

func (p *parser) callonTitleElement33() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement33(stack["path"], stack["attributes"])
}

func (c *current) onTitleElement31(image interface{}) (interface{}, error) {
	// here we can ignore the blank line in the returned element
	return types.NewInlineImage(image.(types.ImageMacro))
}

func (p *parser) callonTitleElement31() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement31(stack["image"])
}

func (c *current) onTitleElement97() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement97() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement97()
}

func (c *current) onTitleElement87() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement87() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement87()
}

func (c *current) onTitleElement105(attributes interface{}) (interface{}, error) {
	return attributes, nil
}

func (p *parser) callonTitleElement105() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement105(stack["attributes"])
}

func (c *current) onTitleElement75(url, attributes interface{}) (interface{}, error) {
	return types.NewLink(url.([]interface{}), attributes.([]interface{}))
}

func (p *parser) callonTitleElement75() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement75(stack["url"], stack["attributes"])
}

func (c *current) onTitleElement142() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement142() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement142()
}

func (c *current) onTitleElement132() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement132() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement132()
}

func (c *current) onTitleElement150(attributes interface{}) (interface{}, error) {
	return attributes, nil
}

func (p *parser) callonTitleElement150() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement150(stack["attributes"])
}

func (c *current) onTitleElement122(url, attributes interface{}) (interface{}, error) {
	return types.NewLink(url.([]interface{}), attributes.([]interface{}))
}

func (p *parser) callonTitleElement122() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement122(stack["url"], stack["attributes"])
}

func (c *current) onTitleElement186() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement186() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement186()
}

func (c *current) onTitleElement176() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement176() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement176()
}

func (c *current) onTitleElement167(url interface{}) (interface{}, error) {
	return types.NewLink(url.([]interface{}), nil)
}

func (p *parser) callonTitleElement167() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement167(stack["url"])
}

func (c *current) onTitleElement193(name interface{}) (interface{}, error) {
	return types.NewDocumentAttributeSubstitution(name.([]interface{}))
}

func (p *parser) callonTitleElement193() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement193(stack["name"])
}

func (c *current) onTitleElement212() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement212() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement212()
}

func (c *current) onTitleElement202() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement202() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement202()
}

func (c *current) onTitleElement1(element interface{}) (interface{}, error) {
	// fmt.Printf("matching title element: %v\n", element)
	return element, nil
}

func (p *parser) callonTitleElement1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement1(stack["element"])
}

func (c *current) onList9() (interface{}, error) {
	return map[string]interface{}{"layout": "horizontal"}, nil
}

func (p *parser) callonList9() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onList9()
}

func (c *current) onList25() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonList25() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onList25()
}

func (c *current) onList15() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonList15() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onList15()
}

func (c *current) onList11(id interface{}) (interface{}, error) {
	return map[string]interface{}{"ID": id.(string)}, nil
}

func (p *parser) callonList11() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onList11(stack["id"])
}

func (c *current) onList5(attribute interface{}) (interface{}, error) {
	return attribute, nil
}

func (p *parser) callonList5() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onList5(stack["attribute"])
}

func (c *current) onList1(attributes, elements interface{}) (interface{}, error) {
	return types.NewList(elements.([]interface{}), attributes.([]interface{}))
}

func (p *parser) callonList1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onList1(stack["attributes"], stack["elements"])
}

func (c *current) onListParagraph11() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraph11() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraph11()
}

func (c *current) onListParagraph15() (interface{}, error) {
	// numbering style: "....."
	return types.NewOrderedListItemPrefix(types.UpperRoman, 5)

}

func (p *parser) callonListParagraph15() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraph15()
}

func (c *current) onListParagraph17() (interface{}, error) {
	// numbering style: "...."
	return types.NewOrderedListItemPrefix(types.UpperAlpha, 4)

}

func (p *parser) callonListParagraph17() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraph17()
}

func (c *current) onListParagraph19() (interface{}, error) {
	// numbering style: "..."
	return types.NewOrderedListItemPrefix(types.LowerRoman, 3)

}

func (p *parser) callonListParagraph19() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraph19()
}

func (c *current) onListParagraph21() (interface{}, error) {
	// numbering style: ".."
	return types.NewOrderedListItemPrefix(types.LowerAlpha, 2)

}

func (p *parser) callonListParagraph21() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraph21()
}

func (c *current) onListParagraph23() (interface{}, error) {
	// numbering style: "."
	return types.NewOrderedListItemPrefix(types.Arabic, 1)
	// explicit numbering

}

func (p *parser) callonListParagraph23() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraph23()
}

func (c *current) onListParagraph25() (interface{}, error) {
	// numbering style: "1."
	return types.NewOrderedListItemPrefix(types.Arabic, 1)

}

func (p *parser) callonListParagraph25() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraph25()
}

func (c *current) onListParagraph30() (interface{}, error) {
	// numbering style: "a."
	return types.NewOrderedListItemPrefix(types.LowerAlpha, 1)

}

func (p *parser) callonListParagraph30() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraph30()
}

func (c *current) onListParagraph35() (interface{}, error) {
	// numbering style: "A."
	return types.NewOrderedListItemPrefix(types.UpperAlpha, 1)

}

func (p *parser) callonListParagraph35() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraph35()
}

func (c *current) onListParagraph40() (interface{}, error) {
	// numbering style: "i)"
	return types.NewOrderedListItemPrefix(types.LowerRoman, 1)

}

func (p *parser) callonListParagraph40() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraph40()
}

func (c *current) onListParagraph45() (interface{}, error) {
	// numbering style: "I)"
	return types.NewOrderedListItemPrefix(types.UpperRoman, 1)

}

func (p *parser) callonListParagraph45() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraph45()
}

func (c *current) onListParagraph53() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraph53() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraph53()
}

func (c *current) onListParagraph6(prefix interface{}) (interface{}, error) {
	return prefix, nil

}

func (p *parser) callonListParagraph6() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraph6(stack["prefix"])
}

func (c *current) onListParagraph61() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraph61() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraph61()
}

func (c *current) onListParagraph65() (interface{}, error) {
	// ignore whitespaces, only return the relevant "*"/"-" Word
	return types.NewUnorderedListItemPrefix(types.FiveAsterisks, 5)

}

func (p *parser) callonListParagraph65() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraph65()
}

func (c *current) onListParagraph67() (interface{}, error) {
	// ignore whitespaces, only return the relevant "*"/"-" Word
	return types.NewUnorderedListItemPrefix(types.FourAsterisks, 4)

}

func (p *parser) callonListParagraph67() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraph67()
}

func (c *current) onListParagraph69() (interface{}, error) {
	// ignore whitespaces, only return the relevant "*"/"-" Word
	return types.NewUnorderedListItemPrefix(types.ThreeAsterisks, 3)

}

func (p *parser) callonListParagraph69() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraph69()
}

func (c *current) onListParagraph71() (interface{}, error) {
	// ignore whitespaces, only return the relevant "*"/"-" Word
	return types.NewUnorderedListItemPrefix(types.TwoAsterisks, 2)

}

func (p *parser) callonListParagraph71() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraph71()
}

func (c *current) onListParagraph73() (interface{}, error) {
	// ignore whitespaces, only return the relevant "*"/"-" Word
	return types.NewUnorderedListItemPrefix(types.OneAsterisk, 1)

}

func (p *parser) callonListParagraph73() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraph73()
}

func (c *current) onListParagraph75() (interface{}, error) {
	// ignore whitespaces, only return the relevant "*"/"-" Word
	return types.NewUnorderedListItemPrefix(types.Dash, 1)

}

func (p *parser) callonListParagraph75() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraph75()
}

func (c *current) onListParagraph80() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraph80() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraph80()
}

func (c *current) onListParagraph56(prefix interface{}) (interface{}, error) {
	return prefix, nil
}

func (p *parser) callonListParagraph56() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraph56(stack["prefix"])
}

func (c *current) onListParagraph84(term interface{}) (interface{}, error) {
	return term, nil
}

func (p *parser) callonListParagraph84() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraph84(stack["term"])
}

func (c *current) onListParagraph99() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraph99() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraph99()
}

func (c *current) onListParagraph110() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraph110() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraph110()
}

func (c *current) onListParagraph104() (interface{}, error) {
	return types.NewListItemContinuation()
}

func (p *parser) callonListParagraph104() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraph104()
}

func (c *current) onListParagraph138() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraph138() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraph138()
}

func (c *current) onListParagraph128() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraph128() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraph128()
}

func (c *current) onListParagraph124(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonListParagraph124() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraph124(stack["id"])
}

func (c *current) onListParagraph122(id interface{}) (interface{}, error) {
	return id, nil
}

func (p *parser) callonListParagraph122() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraph122(stack["id"])
}

func (c *current) onListParagraph164() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraph164() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraph164()
}

func (c *current) onListParagraph154() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraph154() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraph154()
}

func (c *current) onListParagraph150(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonListParagraph150() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraph150(stack["id"])
}

func (c *current) onListParagraph184() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraph184() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraph184()
}

func (c *current) onListParagraph176(title interface{}) (interface{}, error) {
	return types.NewElementTitle(title.([]interface{}))
}

func (p *parser) callonListParagraph176() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraph176(stack["title"])
}

func (c *current) onListParagraph199() (interface{}, error) {
	return types.Tip, nil
}

func (p *parser) callonListParagraph199() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraph199()
}

func (c *current) onListParagraph201() (interface{}, error) {
	return types.Note, nil
}

func (p *parser) callonListParagraph201() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraph201()
}

func (c *current) onListParagraph203() (interface{}, error) {
	return types.Important, nil
}

func (p *parser) callonListParagraph203() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraph203()
}

func (c *current) onListParagraph205() (interface{}, error) {
	return types.Warning, nil
}

func (p *parser) callonListParagraph205() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraph205()
}

func (c *current) onListParagraph207() (interface{}, error) {
	return types.Caution, nil
}

func (p *parser) callonListParagraph207() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraph207()
}

func (c *current) onListParagraph194(k interface{}) (interface{}, error) {
	return k, nil
}

func (p *parser) callonListParagraph194() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraph194(stack["k"])
}

func (c *current) onListParagraph226() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraph226() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraph226()
}

func (c *current) onListParagraph238() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraph238() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraph238()
}

func (c *current) onListParagraph218(key interface{}) (interface{}, error) {
	// fmt.Printf("found attribute key: %v\n", key)
	return key, nil
}

func (p *parser) callonListParagraph218() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraph218(stack["key"])
}

func (c *current) onListParagraph247() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraph247() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraph247()
}

func (c *current) onListParagraph255() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraph255() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraph255()
}

func (c *current) onListParagraph265() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraph265() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraph265()
}

func (c *current) onListParagraph242(value interface{}) (interface{}, error) {
	// fmt.Printf("found attribute value: %v\n", value)
	return value, nil
}

func (p *parser) callonListParagraph242() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraph242(stack["value"])
}

func (c *current) onListParagraph215(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.([]interface{}), value.([]interface{}))
}

func (p *parser) callonListParagraph215() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraph215(stack["key"], stack["value"])
}

func (c *current) onListParagraph277() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraph277() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraph277()
}

func (c *current) onListParagraph289() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraph289() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraph289()
}

func (c *current) onListParagraph269(key interface{}) (interface{}, error) {
	// fmt.Printf("found attribute key: %v\n", key)
	return key, nil
}

func (p *parser) callonListParagraph269() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraph269(stack["key"])
}

func (c *current) onListParagraph267(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.([]interface{}), nil)
}

func (p *parser) callonListParagraph267() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraph267(stack["key"])
}

func (c *current) onListParagraph300() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraph300() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraph300()
}

func (c *current) onListParagraph311() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraph311() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraph311()
}

func (c *current) onListParagraph323() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraph323() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraph323()
}

func (c *current) onListParagraph303(key interface{}) (interface{}, error) {
	// fmt.Printf("found attribute key: %v\n", key)
	return key, nil
}

func (p *parser) callonListParagraph303() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraph303(stack["key"])
}

func (c *current) onListParagraph332() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraph332() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraph332()
}

func (c *current) onListParagraph340() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraph340() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraph340()
}

func (c *current) onListParagraph350() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraph350() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraph350()
}

func (c *current) onListParagraph327(value interface{}) (interface{}, error) {
	// fmt.Printf("found attribute value: %v\n", value)
	return value, nil
}

func (p *parser) callonListParagraph327() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraph327(stack["value"])
}

func (c *current) onListParagraph294(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.([]interface{}), value.([]interface{}))
}

func (p *parser) callonListParagraph294() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraph294(stack["key"], stack["value"])
}

func (c *current) onListParagraph358() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraph358() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraph358()
}

func (c *current) onListParagraph369() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraph369() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraph369()
}

func (c *current) onListParagraph381() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraph381() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraph381()
}

func (c *current) onListParagraph361(key interface{}) (interface{}, error) {
	// fmt.Printf("found attribute key: %v\n", key)
	return key, nil
}

func (p *parser) callonListParagraph361() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraph361(stack["key"])
}

func (c *current) onListParagraph352(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.([]interface{}), nil)
}

func (p *parser) callonListParagraph352() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraph352(stack["key"])
}

func (c *current) onListParagraph210(attribute, attributes interface{}) (interface{}, error) {
	return types.NewAttributeGroup(append([]interface{}{attribute}, attributes.([]interface{})...))
}

func (p *parser) callonListParagraph210() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraph210(stack["attribute"], stack["attributes"])
}

func (c *current) onListParagraph387() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraph387() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraph387()
}

func (c *current) onListParagraph118(attr interface{}) (interface{}, error) {
	return attr, nil // avoid returning something like `[]interface{}{attr, EOL}`
}

func (p *parser) callonListParagraph118() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraph118(stack["attr"])
}

func (c *current) onListParagraph1(lines interface{}) (interface{}, error) {
	return types.NewParagraph(lines.([]interface{}), nil)
}

func (p *parser) callonListParagraph1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraph1(stack["lines"])
}

func (c *current) onContinuedDocumentBlock9() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonContinuedDocumentBlock9() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onContinuedDocumentBlock9()
}

func (c *current) onContinuedDocumentBlock3() (interface{}, error) {
	return types.NewListItemContinuation()
}

func (p *parser) callonContinuedDocumentBlock3() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onContinuedDocumentBlock3()
}

func (c *current) onContinuedDocumentBlock1(element interface{}) (interface{}, error) {
	return element, nil
}

func (p *parser) callonContinuedDocumentBlock1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onContinuedDocumentBlock1(stack["element"])
}

func (c *current) onOrderedListItem25() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem25() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem25()
}

func (c *current) onOrderedListItem15() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem15() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem15()
}

func (c *current) onOrderedListItem11(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonOrderedListItem11() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem11(stack["id"])
}

func (c *current) onOrderedListItem9(id interface{}) (interface{}, error) {
	return id, nil
}

func (p *parser) callonOrderedListItem9() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem9(stack["id"])
}

func (c *current) onOrderedListItem51() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem51() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem51()
}

func (c *current) onOrderedListItem41() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem41() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem41()
}

func (c *current) onOrderedListItem37(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonOrderedListItem37() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem37(stack["id"])
}

func (c *current) onOrderedListItem71() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem71() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem71()
}

func (c *current) onOrderedListItem63(title interface{}) (interface{}, error) {
	return types.NewElementTitle(title.([]interface{}))
}

func (p *parser) callonOrderedListItem63() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem63(stack["title"])
}

func (c *current) onOrderedListItem86() (interface{}, error) {
	return types.Tip, nil
}

func (p *parser) callonOrderedListItem86() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem86()
}

func (c *current) onOrderedListItem88() (interface{}, error) {
	return types.Note, nil
}

func (p *parser) callonOrderedListItem88() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem88()
}

func (c *current) onOrderedListItem90() (interface{}, error) {
	return types.Important, nil
}

func (p *parser) callonOrderedListItem90() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem90()
}

func (c *current) onOrderedListItem92() (interface{}, error) {
	return types.Warning, nil
}

func (p *parser) callonOrderedListItem92() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem92()
}

func (c *current) onOrderedListItem94() (interface{}, error) {
	return types.Caution, nil
}

func (p *parser) callonOrderedListItem94() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem94()
}

func (c *current) onOrderedListItem81(k interface{}) (interface{}, error) {
	return k, nil
}

func (p *parser) callonOrderedListItem81() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem81(stack["k"])
}

func (c *current) onOrderedListItem113() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem113() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem113()
}

func (c *current) onOrderedListItem125() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem125() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem125()
}

func (c *current) onOrderedListItem105(key interface{}) (interface{}, error) {
	// fmt.Printf("found attribute key: %v\n", key)
	return key, nil
}

func (p *parser) callonOrderedListItem105() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem105(stack["key"])
}

func (c *current) onOrderedListItem134() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem134() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem134()
}

func (c *current) onOrderedListItem142() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem142() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem142()
}

func (c *current) onOrderedListItem152() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem152() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem152()
}

func (c *current) onOrderedListItem129(value interface{}) (interface{}, error) {
	// fmt.Printf("found attribute value: %v\n", value)
	return value, nil
}

func (p *parser) callonOrderedListItem129() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem129(stack["value"])
}

func (c *current) onOrderedListItem102(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.([]interface{}), value.([]interface{}))
}

func (p *parser) callonOrderedListItem102() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem102(stack["key"], stack["value"])
}

func (c *current) onOrderedListItem164() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem164() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem164()
}

func (c *current) onOrderedListItem176() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem176() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem176()
}

func (c *current) onOrderedListItem156(key interface{}) (interface{}, error) {
	// fmt.Printf("found attribute key: %v\n", key)
	return key, nil
}

func (p *parser) callonOrderedListItem156() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem156(stack["key"])
}

func (c *current) onOrderedListItem154(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.([]interface{}), nil)
}

func (p *parser) callonOrderedListItem154() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem154(stack["key"])
}

func (c *current) onOrderedListItem187() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem187() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem187()
}

func (c *current) onOrderedListItem198() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem198() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem198()
}

func (c *current) onOrderedListItem210() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem210() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem210()
}

func (c *current) onOrderedListItem190(key interface{}) (interface{}, error) {
	// fmt.Printf("found attribute key: %v\n", key)
	return key, nil
}

func (p *parser) callonOrderedListItem190() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem190(stack["key"])
}

func (c *current) onOrderedListItem219() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem219() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem219()
}

func (c *current) onOrderedListItem227() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem227() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem227()
}

func (c *current) onOrderedListItem237() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem237() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem237()
}

func (c *current) onOrderedListItem214(value interface{}) (interface{}, error) {
	// fmt.Printf("found attribute value: %v\n", value)
	return value, nil
}

func (p *parser) callonOrderedListItem214() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem214(stack["value"])
}

func (c *current) onOrderedListItem181(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.([]interface{}), value.([]interface{}))
}

func (p *parser) callonOrderedListItem181() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem181(stack["key"], stack["value"])
}

func (c *current) onOrderedListItem245() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem245() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem245()
}

func (c *current) onOrderedListItem256() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem256() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem256()
}

func (c *current) onOrderedListItem268() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem268() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem268()
}

func (c *current) onOrderedListItem248(key interface{}) (interface{}, error) {
	// fmt.Printf("found attribute key: %v\n", key)
	return key, nil
}

func (p *parser) callonOrderedListItem248() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem248(stack["key"])
}

func (c *current) onOrderedListItem239(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.([]interface{}), nil)
}

func (p *parser) callonOrderedListItem239() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem239(stack["key"])
}

func (c *current) onOrderedListItem97(attribute, attributes interface{}) (interface{}, error) {
	return types.NewAttributeGroup(append([]interface{}{attribute}, attributes.([]interface{})...))
}

func (p *parser) callonOrderedListItem97() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem97(stack["attribute"], stack["attributes"])
}

func (c *current) onOrderedListItem274() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem274() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem274()
}

func (c *current) onOrderedListItem5(attr interface{}) (interface{}, error) {
	return attr, nil // avoid returning something like `[]interface{}{attr, EOL}`
}

func (p *parser) callonOrderedListItem5() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem5(stack["attr"])
}

func (c *current) onOrderedListItem287() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem287() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem287()
}

func (c *current) onOrderedListItem291() (interface{}, error) {
	// numbering style: "....."
	return types.NewOrderedListItemPrefix(types.UpperRoman, 5)

}

func (p *parser) callonOrderedListItem291() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem291()
}

func (c *current) onOrderedListItem293() (interface{}, error) {
	// numbering style: "...."
	return types.NewOrderedListItemPrefix(types.UpperAlpha, 4)

}

func (p *parser) callonOrderedListItem293() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem293()
}

func (c *current) onOrderedListItem295() (interface{}, error) {
	// numbering style: "..."
	return types.NewOrderedListItemPrefix(types.LowerRoman, 3)

}

func (p *parser) callonOrderedListItem295() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem295()
}

func (c *current) onOrderedListItem297() (interface{}, error) {
	// numbering style: ".."
	return types.NewOrderedListItemPrefix(types.LowerAlpha, 2)

}

func (p *parser) callonOrderedListItem297() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem297()
}

func (c *current) onOrderedListItem299() (interface{}, error) {
	// numbering style: "."
	return types.NewOrderedListItemPrefix(types.Arabic, 1)
	// explicit numbering

}

func (p *parser) callonOrderedListItem299() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem299()
}

func (c *current) onOrderedListItem301() (interface{}, error) {
	// numbering style: "1."
	return types.NewOrderedListItemPrefix(types.Arabic, 1)

}

func (p *parser) callonOrderedListItem301() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem301()
}

func (c *current) onOrderedListItem306() (interface{}, error) {
	// numbering style: "a."
	return types.NewOrderedListItemPrefix(types.LowerAlpha, 1)

}

func (p *parser) callonOrderedListItem306() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem306()
}

func (c *current) onOrderedListItem311() (interface{}, error) {
	// numbering style: "A."
	return types.NewOrderedListItemPrefix(types.UpperAlpha, 1)

}

func (p *parser) callonOrderedListItem311() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem311()
}

func (c *current) onOrderedListItem316() (interface{}, error) {
	// numbering style: "i)"
	return types.NewOrderedListItemPrefix(types.LowerRoman, 1)

}

func (p *parser) callonOrderedListItem316() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem316()
}

func (c *current) onOrderedListItem321() (interface{}, error) {
	// numbering style: "I)"
	return types.NewOrderedListItemPrefix(types.UpperRoman, 1)

}

func (p *parser) callonOrderedListItem321() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem321()
}

func (c *current) onOrderedListItem329() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem329() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem329()
}

func (c *current) onOrderedListItem282(prefix interface{}) (interface{}, error) {
	return prefix, nil

}

func (p *parser) callonOrderedListItem282() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem282(stack["prefix"])
}

func (c *current) onOrderedListItem342() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem342() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem342()
}

func (c *current) onOrderedListItem334() (interface{}, error) {
	return types.NewBlankLine()
}

func (p *parser) callonOrderedListItem334() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem334()
}

func (c *current) onOrderedListItem1(attributes, prefix, content interface{}) (interface{}, error) {
	return types.NewOrderedListItem(prefix.(types.OrderedListItemPrefix), content.([]interface{}), attributes.([]interface{}))
}

func (p *parser) callonOrderedListItem1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem1(stack["attributes"], stack["prefix"], stack["content"])
}

func (c *current) onOrderedListItemContent1(elements interface{}) (interface{}, error) {
	// Another list or a literal paragraph immediately following a list item will be implicitly included in the list item
	return types.NewListItemContent(elements.([]interface{}))
}

func (p *parser) callonOrderedListItemContent1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItemContent1(stack["elements"])
}

func (c *current) onUnorderedListItem9() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonUnorderedListItem9() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onUnorderedListItem9()
}

func (c *current) onUnorderedListItem13() (interface{}, error) {
	// ignore whitespaces, only return the relevant "*"/"-" Word
	return types.NewUnorderedListItemPrefix(types.FiveAsterisks, 5)

}

func (p *parser) callonUnorderedListItem13() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onUnorderedListItem13()
}

func (c *current) onUnorderedListItem15() (interface{}, error) {
	// ignore whitespaces, only return the relevant "*"/"-" Word
	return types.NewUnorderedListItemPrefix(types.FourAsterisks, 4)

}

func (p *parser) callonUnorderedListItem15() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onUnorderedListItem15()
}

func (c *current) onUnorderedListItem17() (interface{}, error) {
	// ignore whitespaces, only return the relevant "*"/"-" Word
	return types.NewUnorderedListItemPrefix(types.ThreeAsterisks, 3)

}

func (p *parser) callonUnorderedListItem17() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onUnorderedListItem17()
}

func (c *current) onUnorderedListItem19() (interface{}, error) {
	// ignore whitespaces, only return the relevant "*"/"-" Word
	return types.NewUnorderedListItemPrefix(types.TwoAsterisks, 2)

}

func (p *parser) callonUnorderedListItem19() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onUnorderedListItem19()
}

func (c *current) onUnorderedListItem21() (interface{}, error) {
	// ignore whitespaces, only return the relevant "*"/"-" Word
	return types.NewUnorderedListItemPrefix(types.OneAsterisk, 1)

}

func (p *parser) callonUnorderedListItem21() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onUnorderedListItem21()
}

func (c *current) onUnorderedListItem23() (interface{}, error) {
	// ignore whitespaces, only return the relevant "*"/"-" Word
	return types.NewUnorderedListItemPrefix(types.Dash, 1)

}

func (p *parser) callonUnorderedListItem23() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onUnorderedListItem23()
}

func (c *current) onUnorderedListItem28() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonUnorderedListItem28() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onUnorderedListItem28()
}

func (c *current) onUnorderedListItem4(prefix interface{}) (interface{}, error) {
	return prefix, nil
}

func (p *parser) callonUnorderedListItem4() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onUnorderedListItem4(stack["prefix"])
}

func (c *current) onUnorderedListItem41() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonUnorderedListItem41() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onUnorderedListItem41()
}

func (c *current) onUnorderedListItem33() (interface{}, error) {
	return types.NewBlankLine()
}

func (p *parser) callonUnorderedListItem33() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onUnorderedListItem33()
}

func (c *current) onUnorderedListItem1(prefix, content interface{}) (interface{}, error) {
	return types.NewUnorderedListItem(prefix.(types.UnorderedListItemPrefix), content.([]interface{}))
}

func (p *parser) callonUnorderedListItem1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onUnorderedListItem1(stack["prefix"], stack["content"])
}

func (c *current) onUnorderedListItemContent1(elements interface{}) (interface{}, error) {
	// Another list or a literal paragraph immediately following a list item will be implicitly included in the list item
	return types.NewListItemContent(elements.([]interface{}))
}

func (p *parser) callonUnorderedListItemContent1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onUnorderedListItemContent1(stack["elements"])
}

func (c *current) onLabeledListItem5(term interface{}) (interface{}, error) {
	return term, nil
}

func (p *parser) callonLabeledListItem5() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onLabeledListItem5(stack["term"])
}

func (c *current) onLabeledListItem20() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonLabeledListItem20() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onLabeledListItem20()
}

func (c *current) onLabeledListItem2(term, description interface{}) (interface{}, error) {
	return types.NewLabeledListItem(term.([]interface{}), description.([]interface{}))
}

func (p *parser) callonLabeledListItem2() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onLabeledListItem2(stack["term"], stack["description"])
}

func (c *current) onLabeledListItem29(term interface{}) (interface{}, error) {
	return term, nil
}

func (p *parser) callonLabeledListItem29() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onLabeledListItem29(stack["term"])
}

func (c *current) onLabeledListItem44() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonLabeledListItem44() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onLabeledListItem44()
}

func (c *current) onLabeledListItem26(term interface{}) (interface{}, error) {
	// here, WS is optional since there is no description afterwards
	return types.NewLabeledListItem(term.([]interface{}), nil)
}

func (p *parser) callonLabeledListItem26() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onLabeledListItem26(stack["term"])
}

func (c *current) onLabeledListItemDescription1(elements interface{}) (interface{}, error) {
	// TODO: replace with (ListParagraph+ ContinuedDocumentBlock*) and use a single rule for all item contents ?
	return types.NewListItemContent(elements.([]interface{}))
}

func (p *parser) callonLabeledListItemDescription1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onLabeledListItemDescription1(stack["elements"])
}

func (c *current) onParagraph26() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph26() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph26()
}

func (c *current) onParagraph16() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph16() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph16()
}

func (c *current) onParagraph12(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonParagraph12() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph12(stack["id"])
}

func (c *current) onParagraph10(id interface{}) (interface{}, error) {
	return id, nil
}

func (p *parser) callonParagraph10() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph10(stack["id"])
}

func (c *current) onParagraph52() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph52() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph52()
}

func (c *current) onParagraph42() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph42() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph42()
}

func (c *current) onParagraph38(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonParagraph38() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph38(stack["id"])
}

func (c *current) onParagraph72() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph72() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph72()
}

func (c *current) onParagraph64(title interface{}) (interface{}, error) {
	return types.NewElementTitle(title.([]interface{}))
}

func (p *parser) callonParagraph64() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph64(stack["title"])
}

func (c *current) onParagraph87() (interface{}, error) {
	return types.Tip, nil
}

func (p *parser) callonParagraph87() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph87()
}

func (c *current) onParagraph89() (interface{}, error) {
	return types.Note, nil
}

func (p *parser) callonParagraph89() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph89()
}

func (c *current) onParagraph91() (interface{}, error) {
	return types.Important, nil
}

func (p *parser) callonParagraph91() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph91()
}

func (c *current) onParagraph93() (interface{}, error) {
	return types.Warning, nil
}

func (p *parser) callonParagraph93() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph93()
}

func (c *current) onParagraph95() (interface{}, error) {
	return types.Caution, nil
}

func (p *parser) callonParagraph95() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph95()
}

func (c *current) onParagraph82(k interface{}) (interface{}, error) {
	return k, nil
}

func (p *parser) callonParagraph82() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph82(stack["k"])
}

func (c *current) onParagraph114() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph114() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph114()
}

func (c *current) onParagraph126() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph126() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph126()
}

func (c *current) onParagraph106(key interface{}) (interface{}, error) {
	// fmt.Printf("found attribute key: %v\n", key)
	return key, nil
}

func (p *parser) callonParagraph106() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph106(stack["key"])
}

func (c *current) onParagraph135() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph135() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph135()
}

func (c *current) onParagraph143() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph143() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph143()
}

func (c *current) onParagraph153() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph153() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph153()
}

func (c *current) onParagraph130(value interface{}) (interface{}, error) {
	// fmt.Printf("found attribute value: %v\n", value)
	return value, nil
}

func (p *parser) callonParagraph130() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph130(stack["value"])
}

func (c *current) onParagraph103(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.([]interface{}), value.([]interface{}))
}

func (p *parser) callonParagraph103() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph103(stack["key"], stack["value"])
}

func (c *current) onParagraph165() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph165() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph165()
}

func (c *current) onParagraph177() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph177() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph177()
}

func (c *current) onParagraph157(key interface{}) (interface{}, error) {
	// fmt.Printf("found attribute key: %v\n", key)
	return key, nil
}

func (p *parser) callonParagraph157() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph157(stack["key"])
}

func (c *current) onParagraph155(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.([]interface{}), nil)
}

func (p *parser) callonParagraph155() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph155(stack["key"])
}

func (c *current) onParagraph188() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph188() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph188()
}

func (c *current) onParagraph199() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph199() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph199()
}

func (c *current) onParagraph211() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph211() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph211()
}

func (c *current) onParagraph191(key interface{}) (interface{}, error) {
	// fmt.Printf("found attribute key: %v\n", key)
	return key, nil
}

func (p *parser) callonParagraph191() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph191(stack["key"])
}

func (c *current) onParagraph220() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph220() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph220()
}

func (c *current) onParagraph228() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph228() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph228()
}

func (c *current) onParagraph238() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph238() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph238()
}

func (c *current) onParagraph215(value interface{}) (interface{}, error) {
	// fmt.Printf("found attribute value: %v\n", value)
	return value, nil
}

func (p *parser) callonParagraph215() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph215(stack["value"])
}

func (c *current) onParagraph182(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.([]interface{}), value.([]interface{}))
}

func (p *parser) callonParagraph182() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph182(stack["key"], stack["value"])
}

func (c *current) onParagraph246() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph246() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph246()
}

func (c *current) onParagraph257() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph257() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph257()
}

func (c *current) onParagraph269() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph269() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph269()
}

func (c *current) onParagraph249(key interface{}) (interface{}, error) {
	// fmt.Printf("found attribute key: %v\n", key)
	return key, nil
}

func (p *parser) callonParagraph249() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph249(stack["key"])
}

func (c *current) onParagraph240(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.([]interface{}), nil)
}

func (p *parser) callonParagraph240() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph240(stack["key"])
}

func (c *current) onParagraph98(attribute, attributes interface{}) (interface{}, error) {
	return types.NewAttributeGroup(append([]interface{}{attribute}, attributes.([]interface{})...))
}

func (p *parser) callonParagraph98() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph98(stack["attribute"], stack["attributes"])
}

func (c *current) onParagraph275() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph275() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph275()
}

func (c *current) onParagraph6(attr interface{}) (interface{}, error) {
	return attr, nil // avoid returning something like `[]interface{}{attr, EOL}`
}

func (p *parser) callonParagraph6() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph6(stack["attr"])
}

func (c *current) onParagraph289() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph289() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph289()
}

func (c *current) onParagraph297() (interface{}, error) {
	return types.Tip, nil
}

func (p *parser) callonParagraph297() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph297()
}

func (c *current) onParagraph299() (interface{}, error) {
	return types.Note, nil
}

func (p *parser) callonParagraph299() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph299()
}

func (c *current) onParagraph301() (interface{}, error) {
	return types.Important, nil
}

func (p *parser) callonParagraph301() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph301()
}

func (c *current) onParagraph303() (interface{}, error) {
	return types.Warning, nil
}

func (p *parser) callonParagraph303() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph303()
}

func (c *current) onParagraph305() (interface{}, error) {
	return types.Caution, nil
}

func (p *parser) callonParagraph305() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph305()
}

func (c *current) onParagraph2(attributes, t, lines interface{}) (interface{}, error) {

	return types.NewParagraph(lines.([]interface{}), append(attributes.([]interface{}), t.(types.AdmonitionKind)))

}

func (p *parser) callonParagraph2() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph2(stack["attributes"], stack["t"], stack["lines"])
}

func (c *current) onParagraph341() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph341() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph341()
}

func (c *current) onParagraph331() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph331() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph331()
}

func (c *current) onParagraph327(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonParagraph327() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph327(stack["id"])
}

func (c *current) onParagraph325(id interface{}) (interface{}, error) {
	return id, nil
}

func (p *parser) callonParagraph325() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph325(stack["id"])
}

func (c *current) onParagraph367() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph367() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph367()
}

func (c *current) onParagraph357() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph357() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph357()
}

func (c *current) onParagraph353(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonParagraph353() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph353(stack["id"])
}

func (c *current) onParagraph387() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph387() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph387()
}

func (c *current) onParagraph379(title interface{}) (interface{}, error) {
	return types.NewElementTitle(title.([]interface{}))
}

func (p *parser) callonParagraph379() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph379(stack["title"])
}

func (c *current) onParagraph402() (interface{}, error) {
	return types.Tip, nil
}

func (p *parser) callonParagraph402() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph402()
}

func (c *current) onParagraph404() (interface{}, error) {
	return types.Note, nil
}

func (p *parser) callonParagraph404() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph404()
}

func (c *current) onParagraph406() (interface{}, error) {
	return types.Important, nil
}

func (p *parser) callonParagraph406() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph406()
}

func (c *current) onParagraph408() (interface{}, error) {
	return types.Warning, nil
}

func (p *parser) callonParagraph408() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph408()
}

func (c *current) onParagraph410() (interface{}, error) {
	return types.Caution, nil
}

func (p *parser) callonParagraph410() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph410()
}

func (c *current) onParagraph397(k interface{}) (interface{}, error) {
	return k, nil
}

func (p *parser) callonParagraph397() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph397(stack["k"])
}

func (c *current) onParagraph429() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph429() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph429()
}

func (c *current) onParagraph441() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph441() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph441()
}

func (c *current) onParagraph421(key interface{}) (interface{}, error) {
	// fmt.Printf("found attribute key: %v\n", key)
	return key, nil
}

func (p *parser) callonParagraph421() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph421(stack["key"])
}

func (c *current) onParagraph450() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph450() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph450()
}

func (c *current) onParagraph458() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph458() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph458()
}

func (c *current) onParagraph468() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph468() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph468()
}

func (c *current) onParagraph445(value interface{}) (interface{}, error) {
	// fmt.Printf("found attribute value: %v\n", value)
	return value, nil
}

func (p *parser) callonParagraph445() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph445(stack["value"])
}

func (c *current) onParagraph418(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.([]interface{}), value.([]interface{}))
}

func (p *parser) callonParagraph418() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph418(stack["key"], stack["value"])
}

func (c *current) onParagraph480() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph480() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph480()
}

func (c *current) onParagraph492() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph492() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph492()
}

func (c *current) onParagraph472(key interface{}) (interface{}, error) {
	// fmt.Printf("found attribute key: %v\n", key)
	return key, nil
}

func (p *parser) callonParagraph472() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph472(stack["key"])
}

func (c *current) onParagraph470(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.([]interface{}), nil)
}

func (p *parser) callonParagraph470() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph470(stack["key"])
}

func (c *current) onParagraph503() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph503() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph503()
}

func (c *current) onParagraph514() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph514() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph514()
}

func (c *current) onParagraph526() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph526() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph526()
}

func (c *current) onParagraph506(key interface{}) (interface{}, error) {
	// fmt.Printf("found attribute key: %v\n", key)
	return key, nil
}

func (p *parser) callonParagraph506() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph506(stack["key"])
}

func (c *current) onParagraph535() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph535() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph535()
}

func (c *current) onParagraph543() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph543() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph543()
}

func (c *current) onParagraph553() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph553() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph553()
}

func (c *current) onParagraph530(value interface{}) (interface{}, error) {
	// fmt.Printf("found attribute value: %v\n", value)
	return value, nil
}

func (p *parser) callonParagraph530() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph530(stack["value"])
}

func (c *current) onParagraph497(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.([]interface{}), value.([]interface{}))
}

func (p *parser) callonParagraph497() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph497(stack["key"], stack["value"])
}

func (c *current) onParagraph561() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph561() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph561()
}

func (c *current) onParagraph572() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph572() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph572()
}

func (c *current) onParagraph584() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph584() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph584()
}

func (c *current) onParagraph564(key interface{}) (interface{}, error) {
	// fmt.Printf("found attribute key: %v\n", key)
	return key, nil
}

func (p *parser) callonParagraph564() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph564(stack["key"])
}

func (c *current) onParagraph555(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.([]interface{}), nil)
}

func (p *parser) callonParagraph555() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph555(stack["key"])
}

func (c *current) onParagraph413(attribute, attributes interface{}) (interface{}, error) {
	return types.NewAttributeGroup(append([]interface{}{attribute}, attributes.([]interface{})...))
}

func (p *parser) callonParagraph413() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph413(stack["attribute"], stack["attributes"])
}

func (c *current) onParagraph590() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph590() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph590()
}

func (c *current) onParagraph321(attr interface{}) (interface{}, error) {
	return attr, nil // avoid returning something like `[]interface{}{attr, EOL}`
}

func (p *parser) callonParagraph321() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph321(stack["attr"])
}

func (c *current) onParagraph604() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph604() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph604()
}

func (c *current) onParagraph317(attributes, lines interface{}) (interface{}, error) {

	return types.NewParagraph(lines.([]interface{}), attributes.([]interface{}))

}

func (p *parser) callonParagraph317() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph317(stack["attributes"], stack["lines"])
}

func (c *current) onInlineElements24() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElements24() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElements24()
}

func (c *current) onInlineElements41() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElements41() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElements41()
}

func (c *current) onInlineElements31() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElements31() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElements31()
}

func (c *current) onInlineElements27(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonInlineElements27() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElements27(stack["id"])
}

func (c *current) onInlineElements57() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElements57() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElements57()
}

func (c *current) onInlineElements1(elements interface{}) (interface{}, error) {
	// absorbs heading and trailing spaces
	// fmt.Printf("matching inline elements: %v\n", elements)
	return types.NewInlineElements(elements.([]interface{}))
}

func (p *parser) callonInlineElements1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElements1(stack["elements"])
}

func (c *current) onInlineElement18() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement18() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement18()
}

func (c *current) onInlineElement8() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement8() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement8()
}

func (c *current) onInlineElement4(id interface{}) (interface{}, error) {
	return types.NewCrossReference(id.(string))
}

func (p *parser) callonInlineElement4() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement4(stack["id"])
}

func (c *current) onInlineElement49() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement49() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement49()
}

func (c *current) onInlineElement39() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement39() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement39()
}

func (c *current) onInlineElement57(attributes interface{}) (interface{}, error) {
	return attributes, nil
}

func (p *parser) callonInlineElement57() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement57(stack["attributes"])
}

func (c *current) onInlineElement33(path, attributes interface{}) (interface{}, error) {
	return types.NewImageMacro(path.(string), attributes.([]interface{}))
}

func (p *parser) callonInlineElement33() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement33(stack["path"], stack["attributes"])
}

func (c *current) onInlineElement31(image interface{}) (interface{}, error) {
	// here we can ignore the blank line in the returned element
	return types.NewInlineImage(image.(types.ImageMacro))
}

func (p *parser) callonInlineElement31() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement31(stack["image"])
}

func (c *current) onInlineElement97() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement97() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement97()
}

func (c *current) onInlineElement87() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement87() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement87()
}

func (c *current) onInlineElement105(attributes interface{}) (interface{}, error) {
	return attributes, nil
}

func (p *parser) callonInlineElement105() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement105(stack["attributes"])
}

func (c *current) onInlineElement75(url, attributes interface{}) (interface{}, error) {
	return types.NewLink(url.([]interface{}), attributes.([]interface{}))
}

func (p *parser) callonInlineElement75() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement75(stack["url"], stack["attributes"])
}

func (c *current) onInlineElement142() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement142() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement142()
}

func (c *current) onInlineElement132() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement132() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement132()
}

func (c *current) onInlineElement150(attributes interface{}) (interface{}, error) {
	return attributes, nil
}

func (p *parser) callonInlineElement150() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement150(stack["attributes"])
}

func (c *current) onInlineElement122(url, attributes interface{}) (interface{}, error) {
	return types.NewLink(url.([]interface{}), attributes.([]interface{}))
}

func (p *parser) callonInlineElement122() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement122(stack["url"], stack["attributes"])
}

func (c *current) onInlineElement186() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement186() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement186()
}

func (c *current) onInlineElement176() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement176() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement176()
}

func (c *current) onInlineElement167(url interface{}) (interface{}, error) {
	return types.NewLink(url.([]interface{}), nil)
}

func (p *parser) callonInlineElement167() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement167(stack["url"])
}

func (c *current) onInlineElement193(name interface{}) (interface{}, error) {
	return types.NewDocumentAttributeSubstitution(name.([]interface{}))
}

func (p *parser) callonInlineElement193() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement193(stack["name"])
}

func (c *current) onInlineElement212() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement212() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement212()
}

func (c *current) onInlineElement202() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement202() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement202()
}

func (c *current) onInlineElement1(element interface{}) (interface{}, error) {
	// fmt.Printf("matching inline element: %v\n", element)
	return element, nil
}

func (p *parser) callonInlineElement1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement1(stack["element"])
}

func (c *current) onBoldText2(content interface{}) (interface{}, error) {
	// double punctuation must be evaluated first
	return types.NewQuotedText(types.Bold, content.([]interface{}))
}

func (p *parser) callonBoldText2() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBoldText2(stack["content"])
}

func (c *current) onBoldText10(content interface{}) (interface{}, error) {
	// unbalanced `**` vs `*` punctuation
	result := append([]interface{}{"*"}, content.([]interface{}))
	return types.NewQuotedText(types.Bold, result)
}

func (p *parser) callonBoldText10() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBoldText10(stack["content"])
}

func (c *current) onBoldText18(content interface{}) (interface{}, error) {
	// single punctuation
	return types.NewQuotedText(types.Bold, content.([]interface{}))
}

func (p *parser) callonBoldText18() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBoldText18(stack["content"])
}

func (c *current) onEscapedBoldText2(backslashes, content interface{}) (interface{}, error) {
	// double punctuation must be evaluated first
	return types.NewEscapedQuotedText(backslashes.([]interface{}), "**", content.([]interface{}))
}

func (p *parser) callonEscapedBoldText2() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onEscapedBoldText2(stack["backslashes"], stack["content"])
}

func (c *current) onEscapedBoldText13(backslashes, content interface{}) (interface{}, error) {
	// unbalanced `**` vs `*` punctuation
	result := append([]interface{}{"*"}, content.([]interface{}))
	return types.NewEscapedQuotedText(backslashes.([]interface{}), "*", result)
}

func (p *parser) callonEscapedBoldText13() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onEscapedBoldText13(stack["backslashes"], stack["content"])
}

func (c *current) onEscapedBoldText24(backslashes, content interface{}) (interface{}, error) {
	// simple punctuation must be evaluated last
	return types.NewEscapedQuotedText(backslashes.([]interface{}), "*", content.([]interface{}))
}

func (p *parser) callonEscapedBoldText24() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onEscapedBoldText24(stack["backslashes"], stack["content"])
}

func (c *current) onItalicText2(content interface{}) (interface{}, error) {
	return types.NewQuotedText(types.Italic, content.([]interface{}))
}

func (p *parser) callonItalicText2() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onItalicText2(stack["content"])
}

func (c *current) onItalicText10(content interface{}) (interface{}, error) {
	// unbalanced `__` vs `_` punctuation
	result := append([]interface{}{"_"}, content.([]interface{}))
	return types.NewQuotedText(types.Italic, result)
}

func (p *parser) callonItalicText10() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onItalicText10(stack["content"])
}

func (c *current) onItalicText18(content interface{}) (interface{}, error) {
	return types.NewQuotedText(types.Italic, content.([]interface{}))
}

func (p *parser) callonItalicText18() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onItalicText18(stack["content"])
}

func (c *current) onEscapedItalicText2(backslashes, content interface{}) (interface{}, error) {
	// double punctuation must be evaluated first
	return types.NewEscapedQuotedText(backslashes.([]interface{}), "__", content.([]interface{}))
}

func (p *parser) callonEscapedItalicText2() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onEscapedItalicText2(stack["backslashes"], stack["content"])
}

func (c *current) onEscapedItalicText13(backslashes, content interface{}) (interface{}, error) {
	// unbalanced `__` vs `_` punctuation
	result := append([]interface{}{"_"}, content.([]interface{}))
	return types.NewEscapedQuotedText(backslashes.([]interface{}), "_", result)
}

func (p *parser) callonEscapedItalicText13() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onEscapedItalicText13(stack["backslashes"], stack["content"])
}

func (c *current) onEscapedItalicText24(backslashes, content interface{}) (interface{}, error) {
	// simple punctuation must be evaluated last
	return types.NewEscapedQuotedText(backslashes.([]interface{}), "_", content.([]interface{}))
}

func (p *parser) callonEscapedItalicText24() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onEscapedItalicText24(stack["backslashes"], stack["content"])
}

func (c *current) onMonospaceText2(content interface{}) (interface{}, error) {
	// double punctuation must be evaluated first
	return types.NewQuotedText(types.Monospace, content.([]interface{}))
}

func (p *parser) callonMonospaceText2() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMonospaceText2(stack["content"])
}

func (c *current) onMonospaceText10(content interface{}) (interface{}, error) {
	// unbalanced "``" vs "`" punctuation
	result := append([]interface{}{"`"}, content.([]interface{}))
	return types.NewQuotedText(types.Monospace, result)
}

func (p *parser) callonMonospaceText10() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMonospaceText10(stack["content"])
}

func (c *current) onMonospaceText18(content interface{}) (interface{}, error) {
	// simple punctuation must be evaluated last
	return types.NewQuotedText(types.Monospace, content.([]interface{}))
}

func (p *parser) callonMonospaceText18() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMonospaceText18(stack["content"])
}

func (c *current) onEscapedMonospaceText2(backslashes, content interface{}) (interface{}, error) {
	// double punctuation must be evaluated first
	return types.NewEscapedQuotedText(backslashes.([]interface{}), "``", content.([]interface{}))
}

func (p *parser) callonEscapedMonospaceText2() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onEscapedMonospaceText2(stack["backslashes"], stack["content"])
}

func (c *current) onEscapedMonospaceText13(backslashes, content interface{}) (interface{}, error) {
	// unbalanced "``" vs "`" punctuation
	result := append([]interface{}{"`"}, content.([]interface{}))
	return types.NewEscapedQuotedText(backslashes.([]interface{}), "`", result)
}

func (p *parser) callonEscapedMonospaceText13() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onEscapedMonospaceText13(stack["backslashes"], stack["content"])
}

func (c *current) onEscapedMonospaceText24(backslashes, content interface{}) (interface{}, error) {
	// simple punctuation must be evaluated last
	return types.NewEscapedQuotedText(backslashes.([]interface{}), "`", content.([]interface{}))
}

func (p *parser) callonEscapedMonospaceText24() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onEscapedMonospaceText24(stack["backslashes"], stack["content"])
}

func (c *current) onQuotedTextContent8() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonQuotedTextContent8() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuotedTextContent8()
}

func (c *current) onQuotedTextContentElement12() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonQuotedTextContentElement12() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuotedTextContentElement12()
}

func (c *current) onQuotedTextContentElement31() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonQuotedTextContentElement31() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuotedTextContentElement31()
}

func (c *current) onQuotedTextContentElement21() (interface{}, error) {
	// can have "*", "_" or "`" within, maybe because the user inserted another quote, or made an error (extra or missing space, for example)
	return c.text, nil
}

func (p *parser) callonQuotedTextContentElement21() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuotedTextContentElement21()
}

func (c *current) onPassthrough2(content interface{}) (interface{}, error) {
	return types.NewPassthrough(types.TriplePlusPassthrough, content.([]interface{}))
}

func (p *parser) callonPassthrough2() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onPassthrough2(stack["content"])
}

func (c *current) onPassthrough12(content interface{}) (interface{}, error) {
	return types.NewPassthrough(types.SinglePlusPassthrough, content.([]interface{}))
}

func (p *parser) callonPassthrough12() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onPassthrough12(stack["content"])
}

func (c *current) onPassthroughMacro2(content interface{}) (interface{}, error) {
	return types.NewPassthrough(types.PassthroughMacro, content.([]interface{}))
}

func (p *parser) callonPassthroughMacro2() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onPassthroughMacro2(stack["content"])
}

func (c *current) onPassthroughMacro12(content interface{}) (interface{}, error) {
	return types.NewPassthrough(types.PassthroughMacro, content.([]interface{}))
}

func (p *parser) callonPassthroughMacro12() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onPassthroughMacro12(stack["content"])
}

func (c *current) onFencedBlock25() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonFencedBlock25() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFencedBlock25()
}

func (c *current) onFencedBlock15() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonFencedBlock15() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFencedBlock15()
}

func (c *current) onFencedBlock11(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonFencedBlock11() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFencedBlock11(stack["id"])
}

func (c *current) onFencedBlock9(id interface{}) (interface{}, error) {
	return id, nil
}

func (p *parser) callonFencedBlock9() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFencedBlock9(stack["id"])
}

func (c *current) onFencedBlock51() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonFencedBlock51() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFencedBlock51()
}

func (c *current) onFencedBlock41() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonFencedBlock41() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFencedBlock41()
}

func (c *current) onFencedBlock37(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonFencedBlock37() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFencedBlock37(stack["id"])
}

func (c *current) onFencedBlock71() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonFencedBlock71() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFencedBlock71()
}

func (c *current) onFencedBlock63(title interface{}) (interface{}, error) {
	return types.NewElementTitle(title.([]interface{}))
}

func (p *parser) callonFencedBlock63() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFencedBlock63(stack["title"])
}

func (c *current) onFencedBlock86() (interface{}, error) {
	return types.Tip, nil
}

func (p *parser) callonFencedBlock86() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFencedBlock86()
}

func (c *current) onFencedBlock88() (interface{}, error) {
	return types.Note, nil
}

func (p *parser) callonFencedBlock88() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFencedBlock88()
}

func (c *current) onFencedBlock90() (interface{}, error) {
	return types.Important, nil
}

func (p *parser) callonFencedBlock90() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFencedBlock90()
}

func (c *current) onFencedBlock92() (interface{}, error) {
	return types.Warning, nil
}

func (p *parser) callonFencedBlock92() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFencedBlock92()
}

func (c *current) onFencedBlock94() (interface{}, error) {
	return types.Caution, nil
}

func (p *parser) callonFencedBlock94() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFencedBlock94()
}

func (c *current) onFencedBlock81(k interface{}) (interface{}, error) {
	return k, nil
}

func (p *parser) callonFencedBlock81() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFencedBlock81(stack["k"])
}

func (c *current) onFencedBlock113() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonFencedBlock113() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFencedBlock113()
}

func (c *current) onFencedBlock125() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonFencedBlock125() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFencedBlock125()
}

func (c *current) onFencedBlock105(key interface{}) (interface{}, error) {
	// fmt.Printf("found attribute key: %v\n", key)
	return key, nil
}

func (p *parser) callonFencedBlock105() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFencedBlock105(stack["key"])
}

func (c *current) onFencedBlock134() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonFencedBlock134() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFencedBlock134()
}

func (c *current) onFencedBlock142() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonFencedBlock142() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFencedBlock142()
}

func (c *current) onFencedBlock152() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonFencedBlock152() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFencedBlock152()
}

func (c *current) onFencedBlock129(value interface{}) (interface{}, error) {
	// fmt.Printf("found attribute value: %v\n", value)
	return value, nil
}

func (p *parser) callonFencedBlock129() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFencedBlock129(stack["value"])
}

func (c *current) onFencedBlock102(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.([]interface{}), value.([]interface{}))
}

func (p *parser) callonFencedBlock102() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFencedBlock102(stack["key"], stack["value"])
}

func (c *current) onFencedBlock164() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonFencedBlock164() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFencedBlock164()
}

func (c *current) onFencedBlock176() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonFencedBlock176() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFencedBlock176()
}

func (c *current) onFencedBlock156(key interface{}) (interface{}, error) {
	// fmt.Printf("found attribute key: %v\n", key)
	return key, nil
}

func (p *parser) callonFencedBlock156() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFencedBlock156(stack["key"])
}

func (c *current) onFencedBlock154(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.([]interface{}), nil)
}

func (p *parser) callonFencedBlock154() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFencedBlock154(stack["key"])
}

func (c *current) onFencedBlock187() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonFencedBlock187() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFencedBlock187()
}

func (c *current) onFencedBlock198() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonFencedBlock198() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFencedBlock198()
}

func (c *current) onFencedBlock210() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonFencedBlock210() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFencedBlock210()
}

func (c *current) onFencedBlock190(key interface{}) (interface{}, error) {
	// fmt.Printf("found attribute key: %v\n", key)
	return key, nil
}

func (p *parser) callonFencedBlock190() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFencedBlock190(stack["key"])
}

func (c *current) onFencedBlock219() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonFencedBlock219() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFencedBlock219()
}

func (c *current) onFencedBlock227() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonFencedBlock227() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFencedBlock227()
}

func (c *current) onFencedBlock237() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonFencedBlock237() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFencedBlock237()
}

func (c *current) onFencedBlock214(value interface{}) (interface{}, error) {
	// fmt.Printf("found attribute value: %v\n", value)
	return value, nil
}

func (p *parser) callonFencedBlock214() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFencedBlock214(stack["value"])
}

func (c *current) onFencedBlock181(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.([]interface{}), value.([]interface{}))
}

func (p *parser) callonFencedBlock181() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFencedBlock181(stack["key"], stack["value"])
}

func (c *current) onFencedBlock245() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonFencedBlock245() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFencedBlock245()
}

func (c *current) onFencedBlock256() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonFencedBlock256() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFencedBlock256()
}

func (c *current) onFencedBlock268() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonFencedBlock268() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFencedBlock268()
}

func (c *current) onFencedBlock248(key interface{}) (interface{}, error) {
	// fmt.Printf("found attribute key: %v\n", key)
	return key, nil
}

func (p *parser) callonFencedBlock248() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFencedBlock248(stack["key"])
}

func (c *current) onFencedBlock239(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.([]interface{}), nil)
}

func (p *parser) callonFencedBlock239() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFencedBlock239(stack["key"])
}

func (c *current) onFencedBlock97(attribute, attributes interface{}) (interface{}, error) {
	return types.NewAttributeGroup(append([]interface{}{attribute}, attributes.([]interface{})...))
}

func (p *parser) callonFencedBlock97() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFencedBlock97(stack["attribute"], stack["attributes"])
}

func (c *current) onFencedBlock274() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonFencedBlock274() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFencedBlock274()
}

func (c *current) onFencedBlock5(attr interface{}) (interface{}, error) {
	return attr, nil // avoid returning something like `[]interface{}{attr, EOL}`
}

func (p *parser) callonFencedBlock5() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFencedBlock5(stack["attr"])
}

func (c *current) onFencedBlock285() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonFencedBlock285() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFencedBlock285()
}

func (c *current) onFencedBlock303() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonFencedBlock303() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFencedBlock303()
}

func (c *current) onFencedBlock295() (interface{}, error) {
	return types.NewBlankLine()
}

func (p *parser) callonFencedBlock295() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFencedBlock295()
}

func (c *current) onFencedBlock316() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonFencedBlock316() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFencedBlock316()
}

func (c *current) onFencedBlock1(attributes, content interface{}) (interface{}, error) {
	return types.NewDelimitedBlock(types.FencedBlock, content.([]interface{}), attributes.([]interface{}))
}

func (p *parser) callonFencedBlock1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFencedBlock1(stack["attributes"], stack["content"])
}

func (c *current) onListingBlock25() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListingBlock25() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListingBlock25()
}

func (c *current) onListingBlock15() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListingBlock15() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListingBlock15()
}

func (c *current) onListingBlock11(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonListingBlock11() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListingBlock11(stack["id"])
}

func (c *current) onListingBlock9(id interface{}) (interface{}, error) {
	return id, nil
}

func (p *parser) callonListingBlock9() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListingBlock9(stack["id"])
}

func (c *current) onListingBlock51() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListingBlock51() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListingBlock51()
}

func (c *current) onListingBlock41() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListingBlock41() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListingBlock41()
}

func (c *current) onListingBlock37(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonListingBlock37() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListingBlock37(stack["id"])
}

func (c *current) onListingBlock71() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListingBlock71() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListingBlock71()
}

func (c *current) onListingBlock63(title interface{}) (interface{}, error) {
	return types.NewElementTitle(title.([]interface{}))
}

func (p *parser) callonListingBlock63() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListingBlock63(stack["title"])
}

func (c *current) onListingBlock86() (interface{}, error) {
	return types.Tip, nil
}

func (p *parser) callonListingBlock86() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListingBlock86()
}

func (c *current) onListingBlock88() (interface{}, error) {
	return types.Note, nil
}

func (p *parser) callonListingBlock88() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListingBlock88()
}

func (c *current) onListingBlock90() (interface{}, error) {
	return types.Important, nil
}

func (p *parser) callonListingBlock90() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListingBlock90()
}

func (c *current) onListingBlock92() (interface{}, error) {
	return types.Warning, nil
}

func (p *parser) callonListingBlock92() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListingBlock92()
}

func (c *current) onListingBlock94() (interface{}, error) {
	return types.Caution, nil
}

func (p *parser) callonListingBlock94() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListingBlock94()
}

func (c *current) onListingBlock81(k interface{}) (interface{}, error) {
	return k, nil
}

func (p *parser) callonListingBlock81() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListingBlock81(stack["k"])
}

func (c *current) onListingBlock113() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListingBlock113() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListingBlock113()
}

func (c *current) onListingBlock125() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListingBlock125() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListingBlock125()
}

func (c *current) onListingBlock105(key interface{}) (interface{}, error) {
	// fmt.Printf("found attribute key: %v\n", key)
	return key, nil
}

func (p *parser) callonListingBlock105() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListingBlock105(stack["key"])
}

func (c *current) onListingBlock134() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListingBlock134() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListingBlock134()
}

func (c *current) onListingBlock142() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListingBlock142() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListingBlock142()
}

func (c *current) onListingBlock152() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListingBlock152() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListingBlock152()
}

func (c *current) onListingBlock129(value interface{}) (interface{}, error) {
	// fmt.Printf("found attribute value: %v\n", value)
	return value, nil
}

func (p *parser) callonListingBlock129() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListingBlock129(stack["value"])
}

func (c *current) onListingBlock102(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.([]interface{}), value.([]interface{}))
}

func (p *parser) callonListingBlock102() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListingBlock102(stack["key"], stack["value"])
}

func (c *current) onListingBlock164() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListingBlock164() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListingBlock164()
}

func (c *current) onListingBlock176() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListingBlock176() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListingBlock176()
}

func (c *current) onListingBlock156(key interface{}) (interface{}, error) {
	// fmt.Printf("found attribute key: %v\n", key)
	return key, nil
}

func (p *parser) callonListingBlock156() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListingBlock156(stack["key"])
}

func (c *current) onListingBlock154(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.([]interface{}), nil)
}

func (p *parser) callonListingBlock154() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListingBlock154(stack["key"])
}

func (c *current) onListingBlock187() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListingBlock187() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListingBlock187()
}

func (c *current) onListingBlock198() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListingBlock198() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListingBlock198()
}

func (c *current) onListingBlock210() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListingBlock210() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListingBlock210()
}

func (c *current) onListingBlock190(key interface{}) (interface{}, error) {
	// fmt.Printf("found attribute key: %v\n", key)
	return key, nil
}

func (p *parser) callonListingBlock190() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListingBlock190(stack["key"])
}

func (c *current) onListingBlock219() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListingBlock219() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListingBlock219()
}

func (c *current) onListingBlock227() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListingBlock227() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListingBlock227()
}

func (c *current) onListingBlock237() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListingBlock237() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListingBlock237()
}

func (c *current) onListingBlock214(value interface{}) (interface{}, error) {
	// fmt.Printf("found attribute value: %v\n", value)
	return value, nil
}

func (p *parser) callonListingBlock214() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListingBlock214(stack["value"])
}

func (c *current) onListingBlock181(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.([]interface{}), value.([]interface{}))
}

func (p *parser) callonListingBlock181() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListingBlock181(stack["key"], stack["value"])
}

func (c *current) onListingBlock245() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListingBlock245() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListingBlock245()
}

func (c *current) onListingBlock256() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListingBlock256() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListingBlock256()
}

func (c *current) onListingBlock268() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListingBlock268() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListingBlock268()
}

func (c *current) onListingBlock248(key interface{}) (interface{}, error) {
	// fmt.Printf("found attribute key: %v\n", key)
	return key, nil
}

func (p *parser) callonListingBlock248() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListingBlock248(stack["key"])
}

func (c *current) onListingBlock239(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.([]interface{}), nil)
}

func (p *parser) callonListingBlock239() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListingBlock239(stack["key"])
}

func (c *current) onListingBlock97(attribute, attributes interface{}) (interface{}, error) {
	return types.NewAttributeGroup(append([]interface{}{attribute}, attributes.([]interface{})...))
}

func (p *parser) callonListingBlock97() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListingBlock97(stack["attribute"], stack["attributes"])
}

func (c *current) onListingBlock274() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListingBlock274() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListingBlock274()
}

func (c *current) onListingBlock5(attr interface{}) (interface{}, error) {
	return attr, nil // avoid returning something like `[]interface{}{attr, EOL}`
}

func (p *parser) callonListingBlock5() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListingBlock5(stack["attr"])
}

func (c *current) onListingBlock285() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListingBlock285() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListingBlock285()
}

func (c *current) onListingBlock303() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListingBlock303() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListingBlock303()
}

func (c *current) onListingBlock295() (interface{}, error) {
	return types.NewBlankLine()
}

func (p *parser) callonListingBlock295() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListingBlock295()
}

func (c *current) onListingBlock316() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListingBlock316() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListingBlock316()
}

func (c *current) onListingBlock1(attributes, content interface{}) (interface{}, error) {
	return types.NewDelimitedBlock(types.ListingBlock, content.([]interface{}), attributes.([]interface{}))
}

func (p *parser) callonListingBlock1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListingBlock1(stack["attributes"], stack["content"])
}

func (c *current) onExampleBlock25() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonExampleBlock25() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onExampleBlock25()
}

func (c *current) onExampleBlock15() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonExampleBlock15() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onExampleBlock15()
}

func (c *current) onExampleBlock11(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonExampleBlock11() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onExampleBlock11(stack["id"])
}

func (c *current) onExampleBlock9(id interface{}) (interface{}, error) {
	return id, nil
}

func (p *parser) callonExampleBlock9() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onExampleBlock9(stack["id"])
}

func (c *current) onExampleBlock51() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonExampleBlock51() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onExampleBlock51()
}

func (c *current) onExampleBlock41() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonExampleBlock41() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onExampleBlock41()
}

func (c *current) onExampleBlock37(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonExampleBlock37() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onExampleBlock37(stack["id"])
}

func (c *current) onExampleBlock71() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonExampleBlock71() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onExampleBlock71()
}

func (c *current) onExampleBlock63(title interface{}) (interface{}, error) {
	return types.NewElementTitle(title.([]interface{}))
}

func (p *parser) callonExampleBlock63() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onExampleBlock63(stack["title"])
}

func (c *current) onExampleBlock86() (interface{}, error) {
	return types.Tip, nil
}

func (p *parser) callonExampleBlock86() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onExampleBlock86()
}

func (c *current) onExampleBlock88() (interface{}, error) {
	return types.Note, nil
}

func (p *parser) callonExampleBlock88() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onExampleBlock88()
}

func (c *current) onExampleBlock90() (interface{}, error) {
	return types.Important, nil
}

func (p *parser) callonExampleBlock90() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onExampleBlock90()
}

func (c *current) onExampleBlock92() (interface{}, error) {
	return types.Warning, nil
}

func (p *parser) callonExampleBlock92() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onExampleBlock92()
}

func (c *current) onExampleBlock94() (interface{}, error) {
	return types.Caution, nil
}

func (p *parser) callonExampleBlock94() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onExampleBlock94()
}

func (c *current) onExampleBlock81(k interface{}) (interface{}, error) {
	return k, nil
}

func (p *parser) callonExampleBlock81() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onExampleBlock81(stack["k"])
}

func (c *current) onExampleBlock113() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonExampleBlock113() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onExampleBlock113()
}

func (c *current) onExampleBlock125() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonExampleBlock125() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onExampleBlock125()
}

func (c *current) onExampleBlock105(key interface{}) (interface{}, error) {
	// fmt.Printf("found attribute key: %v\n", key)
	return key, nil
}

func (p *parser) callonExampleBlock105() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onExampleBlock105(stack["key"])
}

func (c *current) onExampleBlock134() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonExampleBlock134() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onExampleBlock134()
}

func (c *current) onExampleBlock142() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonExampleBlock142() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onExampleBlock142()
}

func (c *current) onExampleBlock152() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonExampleBlock152() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onExampleBlock152()
}

func (c *current) onExampleBlock129(value interface{}) (interface{}, error) {
	// fmt.Printf("found attribute value: %v\n", value)
	return value, nil
}

func (p *parser) callonExampleBlock129() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onExampleBlock129(stack["value"])
}

func (c *current) onExampleBlock102(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.([]interface{}), value.([]interface{}))
}

func (p *parser) callonExampleBlock102() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onExampleBlock102(stack["key"], stack["value"])
}

func (c *current) onExampleBlock164() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonExampleBlock164() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onExampleBlock164()
}

func (c *current) onExampleBlock176() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonExampleBlock176() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onExampleBlock176()
}

func (c *current) onExampleBlock156(key interface{}) (interface{}, error) {
	// fmt.Printf("found attribute key: %v\n", key)
	return key, nil
}

func (p *parser) callonExampleBlock156() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onExampleBlock156(stack["key"])
}

func (c *current) onExampleBlock154(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.([]interface{}), nil)
}

func (p *parser) callonExampleBlock154() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onExampleBlock154(stack["key"])
}

func (c *current) onExampleBlock187() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonExampleBlock187() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onExampleBlock187()
}

func (c *current) onExampleBlock198() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonExampleBlock198() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onExampleBlock198()
}

func (c *current) onExampleBlock210() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonExampleBlock210() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onExampleBlock210()
}

func (c *current) onExampleBlock190(key interface{}) (interface{}, error) {
	// fmt.Printf("found attribute key: %v\n", key)
	return key, nil
}

func (p *parser) callonExampleBlock190() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onExampleBlock190(stack["key"])
}

func (c *current) onExampleBlock219() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonExampleBlock219() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onExampleBlock219()
}

func (c *current) onExampleBlock227() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonExampleBlock227() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onExampleBlock227()
}

func (c *current) onExampleBlock237() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonExampleBlock237() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onExampleBlock237()
}

func (c *current) onExampleBlock214(value interface{}) (interface{}, error) {
	// fmt.Printf("found attribute value: %v\n", value)
	return value, nil
}

func (p *parser) callonExampleBlock214() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onExampleBlock214(stack["value"])
}

func (c *current) onExampleBlock181(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.([]interface{}), value.([]interface{}))
}

func (p *parser) callonExampleBlock181() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onExampleBlock181(stack["key"], stack["value"])
}

func (c *current) onExampleBlock245() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonExampleBlock245() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onExampleBlock245()
}

func (c *current) onExampleBlock256() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonExampleBlock256() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onExampleBlock256()
}

func (c *current) onExampleBlock268() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonExampleBlock268() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onExampleBlock268()
}

func (c *current) onExampleBlock248(key interface{}) (interface{}, error) {
	// fmt.Printf("found attribute key: %v\n", key)
	return key, nil
}

func (p *parser) callonExampleBlock248() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onExampleBlock248(stack["key"])
}

func (c *current) onExampleBlock239(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.([]interface{}), nil)
}

func (p *parser) callonExampleBlock239() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onExampleBlock239(stack["key"])
}

func (c *current) onExampleBlock97(attribute, attributes interface{}) (interface{}, error) {
	return types.NewAttributeGroup(append([]interface{}{attribute}, attributes.([]interface{})...))
}

func (p *parser) callonExampleBlock97() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onExampleBlock97(stack["attribute"], stack["attributes"])
}

func (c *current) onExampleBlock274() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonExampleBlock274() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onExampleBlock274()
}

func (c *current) onExampleBlock5(attr interface{}) (interface{}, error) {
	return attr, nil // avoid returning something like `[]interface{}{attr, EOL}`
}

func (p *parser) callonExampleBlock5() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onExampleBlock5(stack["attr"])
}

func (c *current) onExampleBlock285() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonExampleBlock285() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onExampleBlock285()
}

func (c *current) onExampleBlock303() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonExampleBlock303() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onExampleBlock303()
}

func (c *current) onExampleBlock295() (interface{}, error) {
	return types.NewBlankLine()
}

func (p *parser) callonExampleBlock295() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onExampleBlock295()
}

func (c *current) onExampleBlock316() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonExampleBlock316() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onExampleBlock316()
}

func (c *current) onExampleBlock1(attributes, content interface{}) (interface{}, error) {
	return types.NewDelimitedBlock(types.ExampleBlock, content.([]interface{}), attributes.([]interface{}))
}

func (p *parser) callonExampleBlock1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onExampleBlock1(stack["attributes"], stack["content"])
}

func (c *current) onBlockParagraph11() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonBlockParagraph11() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraph11()
}

func (c *current) onBlockParagraph15() (interface{}, error) {
	// numbering style: "....."
	return types.NewOrderedListItemPrefix(types.UpperRoman, 5)

}

func (p *parser) callonBlockParagraph15() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraph15()
}

func (c *current) onBlockParagraph17() (interface{}, error) {
	// numbering style: "...."
	return types.NewOrderedListItemPrefix(types.UpperAlpha, 4)

}

func (p *parser) callonBlockParagraph17() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraph17()
}

func (c *current) onBlockParagraph19() (interface{}, error) {
	// numbering style: "..."
	return types.NewOrderedListItemPrefix(types.LowerRoman, 3)

}

func (p *parser) callonBlockParagraph19() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraph19()
}

func (c *current) onBlockParagraph21() (interface{}, error) {
	// numbering style: ".."
	return types.NewOrderedListItemPrefix(types.LowerAlpha, 2)

}

func (p *parser) callonBlockParagraph21() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraph21()
}

func (c *current) onBlockParagraph23() (interface{}, error) {
	// numbering style: "."
	return types.NewOrderedListItemPrefix(types.Arabic, 1)
	// explicit numbering

}

func (p *parser) callonBlockParagraph23() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraph23()
}

func (c *current) onBlockParagraph25() (interface{}, error) {
	// numbering style: "1."
	return types.NewOrderedListItemPrefix(types.Arabic, 1)

}

func (p *parser) callonBlockParagraph25() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraph25()
}

func (c *current) onBlockParagraph30() (interface{}, error) {
	// numbering style: "a."
	return types.NewOrderedListItemPrefix(types.LowerAlpha, 1)

}

func (p *parser) callonBlockParagraph30() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraph30()
}

func (c *current) onBlockParagraph35() (interface{}, error) {
	// numbering style: "A."
	return types.NewOrderedListItemPrefix(types.UpperAlpha, 1)

}

func (p *parser) callonBlockParagraph35() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraph35()
}

func (c *current) onBlockParagraph40() (interface{}, error) {
	// numbering style: "i)"
	return types.NewOrderedListItemPrefix(types.LowerRoman, 1)

}

func (p *parser) callonBlockParagraph40() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraph40()
}

func (c *current) onBlockParagraph45() (interface{}, error) {
	// numbering style: "I)"
	return types.NewOrderedListItemPrefix(types.UpperRoman, 1)

}

func (p *parser) callonBlockParagraph45() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraph45()
}

func (c *current) onBlockParagraph53() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonBlockParagraph53() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraph53()
}

func (c *current) onBlockParagraph6(prefix interface{}) (interface{}, error) {
	return prefix, nil

}

func (p *parser) callonBlockParagraph6() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraph6(stack["prefix"])
}

func (c *current) onBlockParagraph61() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonBlockParagraph61() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraph61()
}

func (c *current) onBlockParagraph65() (interface{}, error) {
	// ignore whitespaces, only return the relevant "*"/"-" Word
	return types.NewUnorderedListItemPrefix(types.FiveAsterisks, 5)

}

func (p *parser) callonBlockParagraph65() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraph65()
}

func (c *current) onBlockParagraph67() (interface{}, error) {
	// ignore whitespaces, only return the relevant "*"/"-" Word
	return types.NewUnorderedListItemPrefix(types.FourAsterisks, 4)

}

func (p *parser) callonBlockParagraph67() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraph67()
}

func (c *current) onBlockParagraph69() (interface{}, error) {
	// ignore whitespaces, only return the relevant "*"/"-" Word
	return types.NewUnorderedListItemPrefix(types.ThreeAsterisks, 3)

}

func (p *parser) callonBlockParagraph69() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraph69()
}

func (c *current) onBlockParagraph71() (interface{}, error) {
	// ignore whitespaces, only return the relevant "*"/"-" Word
	return types.NewUnorderedListItemPrefix(types.TwoAsterisks, 2)

}

func (p *parser) callonBlockParagraph71() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraph71()
}

func (c *current) onBlockParagraph73() (interface{}, error) {
	// ignore whitespaces, only return the relevant "*"/"-" Word
	return types.NewUnorderedListItemPrefix(types.OneAsterisk, 1)

}

func (p *parser) callonBlockParagraph73() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraph73()
}

func (c *current) onBlockParagraph75() (interface{}, error) {
	// ignore whitespaces, only return the relevant "*"/"-" Word
	return types.NewUnorderedListItemPrefix(types.Dash, 1)

}

func (p *parser) callonBlockParagraph75() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraph75()
}

func (c *current) onBlockParagraph80() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonBlockParagraph80() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraph80()
}

func (c *current) onBlockParagraph56(prefix interface{}) (interface{}, error) {
	return prefix, nil
}

func (p *parser) callonBlockParagraph56() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraph56(stack["prefix"])
}

func (c *current) onBlockParagraph84(term interface{}) (interface{}, error) {
	return term, nil
}

func (p *parser) callonBlockParagraph84() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraph84(stack["term"])
}

func (c *current) onBlockParagraph99() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonBlockParagraph99() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraph99()
}

func (c *current) onBlockParagraph110() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonBlockParagraph110() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraph110()
}

func (c *current) onBlockParagraph104() (interface{}, error) {
	return types.NewListItemContinuation()
}

func (p *parser) callonBlockParagraph104() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraph104()
}

func (c *current) onBlockParagraph1(lines interface{}) (interface{}, error) {
	return types.NewParagraph(lines.([]interface{}), nil)
}

func (p *parser) callonBlockParagraph1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraph1(stack["lines"])
}

func (c *current) onWS3() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonWS3() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onWS3()
}

var (
	// errNoRule is returned when the grammar to parse has no rule.
	errNoRule = errors.New("grammar has no rule")

	// errInvalidEntrypoint is returned when the specified entrypoint rule
	// does not exit.
	errInvalidEntrypoint = errors.New("invalid entrypoint")

	// errInvalidEncoding is returned when the source is not properly
	// utf8-encoded.
	errInvalidEncoding = errors.New("invalid encoding")

	// errMaxExprCnt is used to signal that the maximum number of
	// expressions have been parsed.
	errMaxExprCnt = errors.New("max number of expresssions parsed")
)

// Option is a function that can set an option on the parser. It returns
// the previous setting as an Option.
type Option func(*parser) Option

// MaxExpressions creates an Option to stop parsing after the provided
// number of expressions have been parsed, if the value is 0 then the parser will
// parse for as many steps as needed (possibly an infinite number).
//
// The default for maxExprCnt is 0.
func MaxExpressions(maxExprCnt uint64) Option {
	return func(p *parser) Option {
		oldMaxExprCnt := p.maxExprCnt
		p.maxExprCnt = maxExprCnt
		return MaxExpressions(oldMaxExprCnt)
	}
}

// Entrypoint creates an Option to set the rule name to use as entrypoint.
// The rule name must have been specified in the -alternate-entrypoints
// if generating the parser with the -optimize-grammar flag, otherwise
// it may have been optimized out. Passing an empty string sets the
// entrypoint to the first rule in the grammar.
//
// The default is to start parsing at the first rule in the grammar.
func Entrypoint(ruleName string) Option {
	return func(p *parser) Option {
		oldEntrypoint := p.entrypoint
		p.entrypoint = ruleName
		if ruleName == "" {
			p.entrypoint = g.rules[0].name
		}
		return Entrypoint(oldEntrypoint)
	}
}

// Statistics adds a user provided Stats struct to the parser to allow
// the user to process the results after the parsing has finished.
// Also the key for the "no match" counter is set.
//
// Example usage:
//
//     input := "input"
//     stats := Stats{}
//     _, err := Parse("input-file", []byte(input), Statistics(&stats, "no match"))
//     if err != nil {
//         log.Panicln(err)
//     }
//     b, err := json.MarshalIndent(stats.ChoiceAltCnt, "", "  ")
//     if err != nil {
//         log.Panicln(err)
//     }
//     fmt.Println(string(b))
//
func Statistics(stats *Stats, choiceNoMatch string) Option {
	return func(p *parser) Option {
		oldStats := p.Stats
		p.Stats = stats
		oldChoiceNoMatch := p.choiceNoMatch
		p.choiceNoMatch = choiceNoMatch
		if p.Stats.ChoiceAltCnt == nil {
			p.Stats.ChoiceAltCnt = make(map[string]map[string]int)
		}
		return Statistics(oldStats, oldChoiceNoMatch)
	}
}

// Debug creates an Option to set the debug flag to b. When set to true,
// debugging information is printed to stdout while parsing.
//
// The default is false.
func Debug(b bool) Option {
	return func(p *parser) Option {
		old := p.debug
		p.debug = b
		return Debug(old)
	}
}

// Memoize creates an Option to set the memoize flag to b. When set to true,
// the parser will cache all results so each expression is evaluated only
// once. This guarantees linear parsing time even for pathological cases,
// at the expense of more memory and slower times for typical cases.
//
// The default is false.
func Memoize(b bool) Option {
	return func(p *parser) Option {
		old := p.memoize
		p.memoize = b
		return Memoize(old)
	}
}

// AllowInvalidUTF8 creates an Option to allow invalid UTF-8 bytes.
// Every invalid UTF-8 byte is treated as a utf8.RuneError (U+FFFD)
// by character class matchers and is matched by the any matcher.
// The returned matched value, c.text and c.offset are NOT affected.
//
// The default is false.
func AllowInvalidUTF8(b bool) Option {
	return func(p *parser) Option {
		old := p.allowInvalidUTF8
		p.allowInvalidUTF8 = b
		return AllowInvalidUTF8(old)
	}
}

// Recover creates an Option to set the recover flag to b. When set to
// true, this causes the parser to recover from panics and convert it
// to an error. Setting it to false can be useful while debugging to
// access the full stack trace.
//
// The default is true.
func Recover(b bool) Option {
	return func(p *parser) Option {
		old := p.recover
		p.recover = b
		return Recover(old)
	}
}

// GlobalStore creates an Option to set a key to a certain value in
// the globalStore.
func GlobalStore(key string, value interface{}) Option {
	return func(p *parser) Option {
		old := p.cur.globalStore[key]
		p.cur.globalStore[key] = value
		return GlobalStore(key, old)
	}
}

// InitState creates an Option to set a key to a certain value in
// the global "state" store.
func InitState(key string, value interface{}) Option {
	return func(p *parser) Option {
		old := p.cur.state[key]
		p.cur.state[key] = value
		return InitState(key, old)
	}
}

// ParseFile parses the file identified by filename.
func ParseFile(filename string, opts ...Option) (i interface{}, err error) {
	f, err := os.Open(filename)
	if err != nil {
		return nil, err
	}
	defer func() {
		if closeErr := f.Close(); closeErr != nil {
			err = closeErr
		}
	}()
	return ParseReader(filename, f, opts...)
}

// ParseReader parses the data from r using filename as information in the
// error messages.
func ParseReader(filename string, r io.Reader, opts ...Option) (interface{}, error) {
	b, err := ioutil.ReadAll(r)
	if err != nil {
		return nil, err
	}

	return Parse(filename, b, opts...)
}

// Parse parses the data from b using filename as information in the
// error messages.
func Parse(filename string, b []byte, opts ...Option) (interface{}, error) {
	return newParser(filename, b, opts...).parse(g)
}

// position records a position in the text.
type position struct {
	line, col, offset int
}

func (p position) String() string {
	return fmt.Sprintf("%d:%d [%d]", p.line, p.col, p.offset)
}

// savepoint stores all state required to go back to this point in the
// parser.
type savepoint struct {
	position
	rn rune
	w  int
}

type current struct {
	pos  position // start position of the match
	text []byte   // raw text of the match

	// state is a store for arbitrary key,value pairs that the user wants to be
	// tied to the backtracking of the parser.
	// This is always rolled back if a parsing rule fails.
	state storeDict

	// globalStore is a general store for the user to store arbitrary key-value
	// pairs that they need to manage and that they do not want tied to the
	// backtracking of the parser. This is only modified by the user and never
	// rolled back by the parser. It is always up to the user to keep this in a
	// consistent state.
	globalStore storeDict
}

type storeDict map[string]interface{}

// the AST types...

type grammar struct {
	pos   position
	rules []*rule
}

type rule struct {
	pos         position
	name        string
	displayName string
	expr        interface{}
}

type choiceExpr struct {
	pos          position
	alternatives []interface{}
}

type actionExpr struct {
	pos  position
	expr interface{}
	run  func(*parser) (interface{}, error)
}

type recoveryExpr struct {
	pos          position
	expr         interface{}
	recoverExpr  interface{}
	failureLabel []string
}

type seqExpr struct {
	pos   position
	exprs []interface{}
}

type throwExpr struct {
	pos   position
	label string
}

type labeledExpr struct {
	pos   position
	label string
	expr  interface{}
}

type expr struct {
	pos  position
	expr interface{}
}

type andExpr expr
type notExpr expr
type zeroOrOneExpr expr
type zeroOrMoreExpr expr
type oneOrMoreExpr expr

type ruleRefExpr struct {
	pos  position
	name string
}

type stateCodeExpr struct {
	pos position
	run func(*parser) error
}

type andCodeExpr struct {
	pos position
	run func(*parser) (bool, error)
}

type notCodeExpr struct {
	pos position
	run func(*parser) (bool, error)
}

type litMatcher struct {
	pos        position
	val        string
	ignoreCase bool
}

type charClassMatcher struct {
	pos             position
	val             string
	basicLatinChars [128]bool
	chars           []rune
	ranges          []rune
	classes         []*unicode.RangeTable
	ignoreCase      bool
	inverted        bool
}

type anyMatcher position

// errList cumulates the errors found by the parser.
type errList []error

func (e *errList) add(err error) {
	*e = append(*e, err)
}

func (e errList) err() error {
	if len(e) == 0 {
		return nil
	}
	e.dedupe()
	return e
}

func (e *errList) dedupe() {
	var cleaned []error
	set := make(map[string]bool)
	for _, err := range *e {
		if msg := err.Error(); !set[msg] {
			set[msg] = true
			cleaned = append(cleaned, err)
		}
	}
	*e = cleaned
}

func (e errList) Error() string {
	switch len(e) {
	case 0:
		return ""
	case 1:
		return e[0].Error()
	default:
		var buf bytes.Buffer

		for i, err := range e {
			if i > 0 {
				buf.WriteRune('\n')
			}
			buf.WriteString(err.Error())
		}
		return buf.String()
	}
}

// parserError wraps an error with a prefix indicating the rule in which
// the error occurred. The original error is stored in the Inner field.
type parserError struct {
	Inner    error
	pos      position
	prefix   string
	expected []string
}

// Error returns the error message.
func (p *parserError) Error() string {
	return p.prefix + ": " + p.Inner.Error()
}

// newParser creates a parser with the specified input source and options.
func newParser(filename string, b []byte, opts ...Option) *parser {
	stats := Stats{
		ChoiceAltCnt: make(map[string]map[string]int),
	}

	p := &parser{
		filename: filename,
		errs:     new(errList),
		data:     b,
		pt:       savepoint{position: position{line: 1}},
		recover:  true,
		cur: current{
			state:       make(storeDict),
			globalStore: make(storeDict),
		},
		maxFailPos:      position{col: 1, line: 1},
		maxFailExpected: make([]string, 0, 20),
		Stats:           &stats,
		// start rule is rule [0] unless an alternate entrypoint is specified
		entrypoint: g.rules[0].name,
		emptyState: make(storeDict),
	}
	p.setOptions(opts)

	if p.maxExprCnt == 0 {
		p.maxExprCnt = math.MaxUint64
	}

	return p
}

// setOptions applies the options to the parser.
func (p *parser) setOptions(opts []Option) {
	for _, opt := range opts {
		opt(p)
	}
}

type resultTuple struct {
	v   interface{}
	b   bool
	end savepoint
}

const choiceNoMatch = -1

// Stats stores some statistics, gathered during parsing
type Stats struct {
	// ExprCnt counts the number of expressions processed during parsing
	// This value is compared to the maximum number of expressions allowed
	// (set by the MaxExpressions option).
	ExprCnt uint64

	// ChoiceAltCnt is used to count for each ordered choice expression,
	// which alternative is used how may times.
	// These numbers allow to optimize the order of the ordered choice expression
	// to increase the performance of the parser
	//
	// The outer key of ChoiceAltCnt is composed of the name of the rule as well
	// as the line and the column of the ordered choice.
	// The inner key of ChoiceAltCnt is the number (one-based) of the matching alternative.
	// For each alternative the number of matches are counted. If an ordered choice does not
	// match, a special counter is incremented. The name of this counter is set with
	// the parser option Statistics.
	// For an alternative to be included in ChoiceAltCnt, it has to match at least once.
	ChoiceAltCnt map[string]map[string]int
}

type parser struct {
	filename string
	pt       savepoint
	cur      current

	data []byte
	errs *errList

	depth   int
	recover bool
	debug   bool

	memoize bool
	// memoization table for the packrat algorithm:
	// map[offset in source] map[expression or rule] {value, match}
	memo map[int]map[interface{}]resultTuple

	// rules table, maps the rule identifier to the rule node
	rules map[string]*rule
	// variables stack, map of label to value
	vstack []map[string]interface{}
	// rule stack, allows identification of the current rule in errors
	rstack []*rule

	// parse fail
	maxFailPos            position
	maxFailExpected       []string
	maxFailInvertExpected bool

	// max number of expressions to be parsed
	maxExprCnt uint64
	// entrypoint for the parser
	entrypoint string

	allowInvalidUTF8 bool

	*Stats

	choiceNoMatch string
	// recovery expression stack, keeps track of the currently available recovery expression, these are traversed in reverse
	recoveryStack []map[string]interface{}

	// emptyState contains an empty storeDict, which is used to optimize cloneState if global "state" store is not used.
	emptyState storeDict
}

// push a variable set on the vstack.
func (p *parser) pushV() {
	if cap(p.vstack) == len(p.vstack) {
		// create new empty slot in the stack
		p.vstack = append(p.vstack, nil)
	} else {
		// slice to 1 more
		p.vstack = p.vstack[:len(p.vstack)+1]
	}

	// get the last args set
	m := p.vstack[len(p.vstack)-1]
	if m != nil && len(m) == 0 {
		// empty map, all good
		return
	}

	m = make(map[string]interface{})
	p.vstack[len(p.vstack)-1] = m
}

// pop a variable set from the vstack.
func (p *parser) popV() {
	// if the map is not empty, clear it
	m := p.vstack[len(p.vstack)-1]
	if len(m) > 0 {
		// GC that map
		p.vstack[len(p.vstack)-1] = nil
	}
	p.vstack = p.vstack[:len(p.vstack)-1]
}

// push a recovery expression with its labels to the recoveryStack
func (p *parser) pushRecovery(labels []string, expr interface{}) {
	if cap(p.recoveryStack) == len(p.recoveryStack) {
		// create new empty slot in the stack
		p.recoveryStack = append(p.recoveryStack, nil)
	} else {
		// slice to 1 more
		p.recoveryStack = p.recoveryStack[:len(p.recoveryStack)+1]
	}

	m := make(map[string]interface{}, len(labels))
	for _, fl := range labels {
		m[fl] = expr
	}
	p.recoveryStack[len(p.recoveryStack)-1] = m
}

// pop a recovery expression from the recoveryStack
func (p *parser) popRecovery() {
	// GC that map
	p.recoveryStack[len(p.recoveryStack)-1] = nil

	p.recoveryStack = p.recoveryStack[:len(p.recoveryStack)-1]
}

func (p *parser) print(prefix, s string) string {
	if !p.debug {
		return s
	}

	fmt.Printf("%s %d:%d:%d: %s [%#U]\n",
		prefix, p.pt.line, p.pt.col, p.pt.offset, s, p.pt.rn)
	return s
}

func (p *parser) in(s string) string {
	p.depth++
	return p.print(strings.Repeat(" ", p.depth)+">", s)
}

func (p *parser) out(s string) string {
	p.depth--
	return p.print(strings.Repeat(" ", p.depth)+"<", s)
}

func (p *parser) addErr(err error) {
	p.addErrAt(err, p.pt.position, []string{})
}

func (p *parser) addErrAt(err error, pos position, expected []string) {
	var buf bytes.Buffer
	if p.filename != "" {
		buf.WriteString(p.filename)
	}
	if buf.Len() > 0 {
		buf.WriteString(":")
	}
	buf.WriteString(fmt.Sprintf("%d:%d (%d)", pos.line, pos.col, pos.offset))
	if len(p.rstack) > 0 {
		if buf.Len() > 0 {
			buf.WriteString(": ")
		}
		rule := p.rstack[len(p.rstack)-1]
		if rule.displayName != "" {
			buf.WriteString("rule " + rule.displayName)
		} else {
			buf.WriteString("rule " + rule.name)
		}
	}
	pe := &parserError{Inner: err, pos: pos, prefix: buf.String(), expected: expected}
	p.errs.add(pe)
}

func (p *parser) failAt(fail bool, pos position, want string) {
	// process fail if parsing fails and not inverted or parsing succeeds and invert is set
	if fail == p.maxFailInvertExpected {
		if pos.offset < p.maxFailPos.offset {
			return
		}

		if pos.offset > p.maxFailPos.offset {
			p.maxFailPos = pos
			p.maxFailExpected = p.maxFailExpected[:0]
		}

		if p.maxFailInvertExpected {
			want = "!" + want
		}
		p.maxFailExpected = append(p.maxFailExpected, want)
	}
}

// read advances the parser to the next rune.
func (p *parser) read() {
	p.pt.offset += p.pt.w
	rn, n := utf8.DecodeRune(p.data[p.pt.offset:])
	p.pt.rn = rn
	p.pt.w = n
	p.pt.col++
	if rn == '\n' {
		p.pt.line++
		p.pt.col = 0
	}

	if rn == utf8.RuneError && n == 1 { // see utf8.DecodeRune
		if !p.allowInvalidUTF8 {
			p.addErr(errInvalidEncoding)
		}
	}
}

// restore parser position to the savepoint pt.
func (p *parser) restore(pt savepoint) {
	if p.debug {
		defer p.out(p.in("restore"))
	}
	if pt.offset == p.pt.offset {
		return
	}
	p.pt = pt
}

// Cloner is implemented by any value that has a Clone method, which returns a
// copy of the value. This is mainly used for types which are not passed by
// value (e.g map, slice, chan) or structs that contain such types.
//
// This is used in conjunction with the global state feature to create proper
// copies of the state to allow the parser to properly restore the state in
// the case of backtracking.
type Cloner interface {
	Clone() interface{}
}

// clone and return parser current state.
func (p *parser) cloneState() storeDict {
	if p.debug {
		defer p.out(p.in("cloneState"))
	}

	if len(p.cur.state) == 0 {
		if len(p.emptyState) > 0 {
			p.emptyState = make(storeDict)
		}
		return p.emptyState
	}

	state := make(storeDict, len(p.cur.state))
	for k, v := range p.cur.state {
		if c, ok := v.(Cloner); ok {
			state[k] = c.Clone()
		} else {
			state[k] = v
		}
	}
	return state
}

// restore parser current state to the state storeDict.
// every restoreState should applied only one time for every cloned state
func (p *parser) restoreState(state storeDict) {
	if p.debug {
		defer p.out(p.in("restoreState"))
	}
	p.cur.state = state
}

// get the slice of bytes from the savepoint start to the current position.
func (p *parser) sliceFrom(start savepoint) []byte {
	return p.data[start.position.offset:p.pt.position.offset]
}

func (p *parser) getMemoized(node interface{}) (resultTuple, bool) {
	if len(p.memo) == 0 {
		return resultTuple{}, false
	}
	m := p.memo[p.pt.offset]
	if len(m) == 0 {
		return resultTuple{}, false
	}
	res, ok := m[node]
	return res, ok
}

func (p *parser) setMemoized(pt savepoint, node interface{}, tuple resultTuple) {
	if p.memo == nil {
		p.memo = make(map[int]map[interface{}]resultTuple)
	}
	m := p.memo[pt.offset]
	if m == nil {
		m = make(map[interface{}]resultTuple)
		p.memo[pt.offset] = m
	}
	m[node] = tuple
}

func (p *parser) buildRulesTable(g *grammar) {
	p.rules = make(map[string]*rule, len(g.rules))
	for _, r := range g.rules {
		p.rules[r.name] = r
	}
}

func (p *parser) parse(g *grammar) (val interface{}, err error) {
	if len(g.rules) == 0 {
		p.addErr(errNoRule)
		return nil, p.errs.err()
	}

	// TODO : not super critical but this could be generated
	p.buildRulesTable(g)

	if p.recover {
		// panic can be used in action code to stop parsing immediately
		// and return the panic as an error.
		defer func() {
			if e := recover(); e != nil {
				if p.debug {
					defer p.out(p.in("panic handler"))
				}
				val = nil
				switch e := e.(type) {
				case error:
					p.addErr(e)
				default:
					p.addErr(fmt.Errorf("%v", e))
				}
				err = p.errs.err()
			}
		}()
	}

	startRule, ok := p.rules[p.entrypoint]
	if !ok {
		p.addErr(errInvalidEntrypoint)
		return nil, p.errs.err()
	}

	p.read() // advance to first rune
	val, ok = p.parseRule(startRule)
	if !ok {
		if len(*p.errs) == 0 {
			// If parsing fails, but no errors have been recorded, the expected values
			// for the farthest parser position are returned as error.
			maxFailExpectedMap := make(map[string]struct{}, len(p.maxFailExpected))
			for _, v := range p.maxFailExpected {
				maxFailExpectedMap[v] = struct{}{}
			}
			expected := make([]string, 0, len(maxFailExpectedMap))
			eof := false
			if _, ok := maxFailExpectedMap["!."]; ok {
				delete(maxFailExpectedMap, "!.")
				eof = true
			}
			for k := range maxFailExpectedMap {
				expected = append(expected, k)
			}
			sort.Strings(expected)
			if eof {
				expected = append(expected, "EOF")
			}
			p.addErrAt(errors.New("no match found, expected: "+listJoin(expected, ", ", "or")), p.maxFailPos, expected)
		}

		return nil, p.errs.err()
	}
	return val, p.errs.err()
}

func listJoin(list []string, sep string, lastSep string) string {
	switch len(list) {
	case 0:
		return ""
	case 1:
		return list[0]
	default:
		return fmt.Sprintf("%s %s %s", strings.Join(list[:len(list)-1], sep), lastSep, list[len(list)-1])
	}
}

func (p *parser) parseRule(rule *rule) (interface{}, bool) {
	if p.debug {
		defer p.out(p.in("parseRule " + rule.name))
	}

	if p.memoize {
		res, ok := p.getMemoized(rule)
		if ok {
			p.restore(res.end)
			return res.v, res.b
		}
	}

	start := p.pt
	p.rstack = append(p.rstack, rule)
	p.pushV()
	val, ok := p.parseExpr(rule.expr)
	p.popV()
	p.rstack = p.rstack[:len(p.rstack)-1]
	if ok && p.debug {
		p.print(strings.Repeat(" ", p.depth)+"MATCH", string(p.sliceFrom(start)))
	}

	if p.memoize {
		p.setMemoized(start, rule, resultTuple{val, ok, p.pt})
	}
	return val, ok
}

func (p *parser) parseExpr(expr interface{}) (interface{}, bool) {
	var pt savepoint

	if p.memoize {
		res, ok := p.getMemoized(expr)
		if ok {
			p.restore(res.end)
			return res.v, res.b
		}
		pt = p.pt
	}

	p.ExprCnt++
	if p.ExprCnt > p.maxExprCnt {
		panic(errMaxExprCnt)
	}

	var val interface{}
	var ok bool
	switch expr := expr.(type) {
	case *actionExpr:
		val, ok = p.parseActionExpr(expr)
	case *andCodeExpr:
		val, ok = p.parseAndCodeExpr(expr)
	case *andExpr:
		val, ok = p.parseAndExpr(expr)
	case *anyMatcher:
		val, ok = p.parseAnyMatcher(expr)
	case *charClassMatcher:
		val, ok = p.parseCharClassMatcher(expr)
	case *choiceExpr:
		val, ok = p.parseChoiceExpr(expr)
	case *labeledExpr:
		val, ok = p.parseLabeledExpr(expr)
	case *litMatcher:
		val, ok = p.parseLitMatcher(expr)
	case *notCodeExpr:
		val, ok = p.parseNotCodeExpr(expr)
	case *notExpr:
		val, ok = p.parseNotExpr(expr)
	case *oneOrMoreExpr:
		val, ok = p.parseOneOrMoreExpr(expr)
	case *recoveryExpr:
		val, ok = p.parseRecoveryExpr(expr)
	case *ruleRefExpr:
		val, ok = p.parseRuleRefExpr(expr)
	case *seqExpr:
		val, ok = p.parseSeqExpr(expr)
	case *stateCodeExpr:
		val, ok = p.parseStateCodeExpr(expr)
	case *throwExpr:
		val, ok = p.parseThrowExpr(expr)
	case *zeroOrMoreExpr:
		val, ok = p.parseZeroOrMoreExpr(expr)
	case *zeroOrOneExpr:
		val, ok = p.parseZeroOrOneExpr(expr)
	default:
		panic(fmt.Sprintf("unknown expression type %T", expr))
	}
	if p.memoize {
		p.setMemoized(pt, expr, resultTuple{val, ok, p.pt})
	}
	return val, ok
}

func (p *parser) parseActionExpr(act *actionExpr) (interface{}, bool) {
	if p.debug {
		defer p.out(p.in("parseActionExpr"))
	}

	start := p.pt
	val, ok := p.parseExpr(act.expr)
	if ok {
		p.cur.pos = start.position
		p.cur.text = p.sliceFrom(start)
		state := p.cloneState()
		actVal, err := act.run(p)
		if err != nil {
			p.addErrAt(err, start.position, []string{})
		}
		p.restoreState(state)

		val = actVal
	}
	if ok && p.debug {
		p.print(strings.Repeat(" ", p.depth)+"MATCH", string(p.sliceFrom(start)))
	}
	return val, ok
}

func (p *parser) parseAndCodeExpr(and *andCodeExpr) (interface{}, bool) {
	if p.debug {
		defer p.out(p.in("parseAndCodeExpr"))
	}

	state := p.cloneState()

	ok, err := and.run(p)
	if err != nil {
		p.addErr(err)
	}
	p.restoreState(state)

	return nil, ok
}

func (p *parser) parseAndExpr(and *andExpr) (interface{}, bool) {
	if p.debug {
		defer p.out(p.in("parseAndExpr"))
	}

	pt := p.pt
	state := p.cloneState()
	p.pushV()
	_, ok := p.parseExpr(and.expr)
	p.popV()
	p.restoreState(state)
	p.restore(pt)

	return nil, ok
}

func (p *parser) parseAnyMatcher(any *anyMatcher) (interface{}, bool) {
	if p.debug {
		defer p.out(p.in("parseAnyMatcher"))
	}

	if p.pt.rn == utf8.RuneError && p.pt.w == 0 {
		// EOF - see utf8.DecodeRune
		p.failAt(false, p.pt.position, ".")
		return nil, false
	}
	start := p.pt
	p.read()
	p.failAt(true, start.position, ".")
	return p.sliceFrom(start), true
}

func (p *parser) parseCharClassMatcher(chr *charClassMatcher) (interface{}, bool) {
	if p.debug {
		defer p.out(p.in("parseCharClassMatcher"))
	}

	cur := p.pt.rn
	start := p.pt

	// can't match EOF
	if cur == utf8.RuneError && p.pt.w == 0 { // see utf8.DecodeRune
		p.failAt(false, start.position, chr.val)
		return nil, false
	}

	if chr.ignoreCase {
		cur = unicode.ToLower(cur)
	}

	// try to match in the list of available chars
	for _, rn := range chr.chars {
		if rn == cur {
			if chr.inverted {
				p.failAt(false, start.position, chr.val)
				return nil, false
			}
			p.read()
			p.failAt(true, start.position, chr.val)
			return p.sliceFrom(start), true
		}
	}

	// try to match in the list of ranges
	for i := 0; i < len(chr.ranges); i += 2 {
		if cur >= chr.ranges[i] && cur <= chr.ranges[i+1] {
			if chr.inverted {
				p.failAt(false, start.position, chr.val)
				return nil, false
			}
			p.read()
			p.failAt(true, start.position, chr.val)
			return p.sliceFrom(start), true
		}
	}

	// try to match in the list of Unicode classes
	for _, cl := range chr.classes {
		if unicode.Is(cl, cur) {
			if chr.inverted {
				p.failAt(false, start.position, chr.val)
				return nil, false
			}
			p.read()
			p.failAt(true, start.position, chr.val)
			return p.sliceFrom(start), true
		}
	}

	if chr.inverted {
		p.read()
		p.failAt(true, start.position, chr.val)
		return p.sliceFrom(start), true
	}
	p.failAt(false, start.position, chr.val)
	return nil, false
}

func (p *parser) incChoiceAltCnt(ch *choiceExpr, altI int) {
	choiceIdent := fmt.Sprintf("%s %d:%d", p.rstack[len(p.rstack)-1].name, ch.pos.line, ch.pos.col)
	m := p.ChoiceAltCnt[choiceIdent]
	if m == nil {
		m = make(map[string]int)
		p.ChoiceAltCnt[choiceIdent] = m
	}
	// We increment altI by 1, so the keys do not start at 0
	alt := strconv.Itoa(altI + 1)
	if altI == choiceNoMatch {
		alt = p.choiceNoMatch
	}
	m[alt]++
}

func (p *parser) parseChoiceExpr(ch *choiceExpr) (interface{}, bool) {
	if p.debug {
		defer p.out(p.in("parseChoiceExpr"))
	}

	for altI, alt := range ch.alternatives {
		// dummy assignment to prevent compile error if optimized
		_ = altI

		state := p.cloneState()

		p.pushV()
		val, ok := p.parseExpr(alt)
		p.popV()
		if ok {
			p.incChoiceAltCnt(ch, altI)
			return val, ok
		}
		p.restoreState(state)
	}
	p.incChoiceAltCnt(ch, choiceNoMatch)
	return nil, false
}

func (p *parser) parseLabeledExpr(lab *labeledExpr) (interface{}, bool) {
	if p.debug {
		defer p.out(p.in("parseLabeledExpr"))
	}

	p.pushV()
	val, ok := p.parseExpr(lab.expr)
	p.popV()
	if ok && lab.label != "" {
		m := p.vstack[len(p.vstack)-1]
		m[lab.label] = val
	}
	return val, ok
}

func (p *parser) parseLitMatcher(lit *litMatcher) (interface{}, bool) {
	if p.debug {
		defer p.out(p.in("parseLitMatcher"))
	}

	ignoreCase := ""
	if lit.ignoreCase {
		ignoreCase = "i"
	}
	val := fmt.Sprintf("%q%s", lit.val, ignoreCase)
	start := p.pt
	for _, want := range lit.val {
		cur := p.pt.rn
		if lit.ignoreCase {
			cur = unicode.ToLower(cur)
		}
		if cur != want {
			p.failAt(false, start.position, val)
			p.restore(start)
			return nil, false
		}
		p.read()
	}
	p.failAt(true, start.position, val)
	return p.sliceFrom(start), true
}

func (p *parser) parseNotCodeExpr(not *notCodeExpr) (interface{}, bool) {
	if p.debug {
		defer p.out(p.in("parseNotCodeExpr"))
	}

	state := p.cloneState()

	ok, err := not.run(p)
	if err != nil {
		p.addErr(err)
	}
	p.restoreState(state)

	return nil, !ok
}

func (p *parser) parseNotExpr(not *notExpr) (interface{}, bool) {
	if p.debug {
		defer p.out(p.in("parseNotExpr"))
	}

	pt := p.pt
	state := p.cloneState()
	p.pushV()
	p.maxFailInvertExpected = !p.maxFailInvertExpected
	_, ok := p.parseExpr(not.expr)
	p.maxFailInvertExpected = !p.maxFailInvertExpected
	p.popV()
	p.restoreState(state)
	p.restore(pt)

	return nil, !ok
}

func (p *parser) parseOneOrMoreExpr(expr *oneOrMoreExpr) (interface{}, bool) {
	if p.debug {
		defer p.out(p.in("parseOneOrMoreExpr"))
	}

	var vals []interface{}

	for {
		p.pushV()
		val, ok := p.parseExpr(expr.expr)
		p.popV()
		if !ok {
			if len(vals) == 0 {
				// did not match once, no match
				return nil, false
			}
			return vals, true
		}
		vals = append(vals, val)
	}
}

func (p *parser) parseRecoveryExpr(recover *recoveryExpr) (interface{}, bool) {
	if p.debug {
		defer p.out(p.in("parseRecoveryExpr (" + strings.Join(recover.failureLabel, ",") + ")"))
	}

	p.pushRecovery(recover.failureLabel, recover.recoverExpr)
	val, ok := p.parseExpr(recover.expr)
	p.popRecovery()

	return val, ok
}

func (p *parser) parseRuleRefExpr(ref *ruleRefExpr) (interface{}, bool) {
	if p.debug {
		defer p.out(p.in("parseRuleRefExpr " + ref.name))
	}

	if ref.name == "" {
		panic(fmt.Sprintf("%s: invalid rule: missing name", ref.pos))
	}

	rule := p.rules[ref.name]
	if rule == nil {
		p.addErr(fmt.Errorf("undefined rule: %s", ref.name))
		return nil, false
	}
	return p.parseRule(rule)
}

func (p *parser) parseSeqExpr(seq *seqExpr) (interface{}, bool) {
	if p.debug {
		defer p.out(p.in("parseSeqExpr"))
	}

	vals := make([]interface{}, 0, len(seq.exprs))

	pt := p.pt
	state := p.cloneState()
	for _, expr := range seq.exprs {
		val, ok := p.parseExpr(expr)
		if !ok {
			p.restoreState(state)
			p.restore(pt)
			return nil, false
		}
		vals = append(vals, val)
	}
	return vals, true
}

func (p *parser) parseStateCodeExpr(state *stateCodeExpr) (interface{}, bool) {
	if p.debug {
		defer p.out(p.in("parseStateCodeExpr"))
	}

	err := state.run(p)
	if err != nil {
		p.addErr(err)
	}
	return nil, true
}

func (p *parser) parseThrowExpr(expr *throwExpr) (interface{}, bool) {
	if p.debug {
		defer p.out(p.in("parseThrowExpr"))
	}

	for i := len(p.recoveryStack) - 1; i >= 0; i-- {
		if recoverExpr, ok := p.recoveryStack[i][expr.label]; ok {
			if val, ok := p.parseExpr(recoverExpr); ok {
				return val, ok
			}
		}
	}

	return nil, false
}

func (p *parser) parseZeroOrMoreExpr(expr *zeroOrMoreExpr) (interface{}, bool) {
	if p.debug {
		defer p.out(p.in("parseZeroOrMoreExpr"))
	}

	var vals []interface{}

	for {
		p.pushV()
		val, ok := p.parseExpr(expr.expr)
		p.popV()
		if !ok {
			return vals, true
		}
		vals = append(vals, val)
	}
}

func (p *parser) parseZeroOrOneExpr(expr *zeroOrOneExpr) (interface{}, bool) {
	if p.debug {
		defer p.out(p.in("parseZeroOrOneExpr"))
	}

	p.pushV()
	val, _ := p.parseExpr(expr.expr)
	p.popV()
	// whether it matched or not, consider it a match
	return val, true
}
