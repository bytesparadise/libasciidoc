// Code generated by pigeon; DO NOT EDIT.

package parser

import (
	"bytes"
	"errors"
	"fmt"
	"io"
	"io/ioutil"
	"math"
	"os"
	"sort"
	"strconv"
	"strings"
	"unicode"
	"unicode/utf8"

	"github.com/bytesparadise/libasciidoc/pkg/types"
)

// *****************************************************************************************
// This file is generated after its sibling `asciidoc-grammar.peg` file. DO NOT MODIFY !
// *****************************************************************************************

var g = &grammar{
	rules: []*rule{
		{
			name: "Document",
			pos:  position{line: 18, col: 1, offset: 504},
			expr: &actionExpr{
				pos: position{line: 18, col: 13, offset: 516},
				run: (*parser).callonDocument1,
				expr: &seqExpr{
					pos: position{line: 18, col: 13, offset: 516},
					exprs: []interface{}{
						&labeledExpr{
							pos:   position{line: 18, col: 13, offset: 516},
							label: "frontMatter",
							expr: &zeroOrOneExpr{
								pos: position{line: 18, col: 26, offset: 529},
								expr: &ruleRefExpr{
									pos:  position{line: 18, col: 26, offset: 529},
									name: "FrontMatter",
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 18, col: 40, offset: 543},
							label: "documentHeader",
							expr: &zeroOrOneExpr{
								pos: position{line: 18, col: 56, offset: 559},
								expr: &ruleRefExpr{
									pos:  position{line: 18, col: 56, offset: 559},
									name: "DocumentHeader",
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 18, col: 73, offset: 576},
							label: "blocks",
							expr: &zeroOrMoreExpr{
								pos: position{line: 18, col: 80, offset: 583},
								expr: &choiceExpr{
									pos: position{line: 18, col: 81, offset: 584},
									alternatives: []interface{}{
										&ruleRefExpr{
											pos:  position{line: 18, col: 81, offset: 584},
											name: "Section",
										},
										&ruleRefExpr{
											pos:  position{line: 18, col: 91, offset: 594},
											name: "DocumentBlock",
										},
									},
								},
							},
						},
						&notExpr{
							pos: position{line: 901, col: 8, offset: 37198},
							expr: &anyMatcher{
								line: 901, col: 9, offset: 37199,
							},
						},
					},
				},
			},
		},
		{
			name: "DocumentBlock",
			pos:  position{line: 22, col: 1, offset: 698},
			expr: &actionExpr{
				pos: position{line: 22, col: 18, offset: 715},
				run: (*parser).callonDocumentBlock1,
				expr: &seqExpr{
					pos: position{line: 22, col: 18, offset: 715},
					exprs: []interface{}{
						&notExpr{
							pos: position{line: 22, col: 18, offset: 715},
							expr: &notExpr{
								pos: position{line: 901, col: 8, offset: 37198},
								expr: &anyMatcher{
									line: 901, col: 9, offset: 37199,
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 23, col: 5, offset: 793},
							label: "block",
							expr: &choiceExpr{
								pos: position{line: 23, col: 12, offset: 800},
								alternatives: []interface{}{
									&actionExpr{
										pos: position{line: 864, col: 14, offset: 36495},
										run: (*parser).callonDocumentBlock8,
										expr: &seqExpr{
											pos: position{line: 864, col: 14, offset: 36495},
											exprs: []interface{}{
												&notExpr{
													pos: position{line: 864, col: 14, offset: 36495},
													expr: &notExpr{
														pos: position{line: 901, col: 8, offset: 37198},
														expr: &anyMatcher{
															line: 901, col: 9, offset: 37199,
														},
													},
												},
												&zeroOrMoreExpr{
													pos: position{line: 864, col: 19, offset: 36500},
													expr: &choiceExpr{
														pos: position{line: 895, col: 7, offset: 37107},
														alternatives: []interface{}{
															&litMatcher{
																pos:        position{line: 895, col: 7, offset: 37107},
																val:        " ",
																ignoreCase: false,
															},
															&actionExpr{
																pos: position{line: 895, col: 13, offset: 37113},
																run: (*parser).callonDocumentBlock16,
																expr: &litMatcher{
																	pos:        position{line: 895, col: 13, offset: 37113},
																	val:        "\t",
																	ignoreCase: false,
																},
															},
														},
													},
												},
												&choiceExpr{
													pos: position{line: 903, col: 8, offset: 37209},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 899, col: 12, offset: 37169},
															val:        "\r\n",
															ignoreCase: false,
														},
														&charClassMatcher{
															pos:        position{line: 899, col: 21, offset: 37178},
															val:        "[\\r\\n]",
															chars:      []rune{'\r', '\n'},
															ignoreCase: false,
															inverted:   false,
														},
														&notExpr{
															pos: position{line: 901, col: 8, offset: 37198},
															expr: &anyMatcher{
																line: 901, col: 9, offset: 37199,
															},
														},
													},
												},
											},
										},
									},
									&actionExpr{
										pos: position{line: 85, col: 45, offset: 3603},
										run: (*parser).callonDocumentBlock23,
										expr: &seqExpr{
											pos: position{line: 85, col: 45, offset: 3603},
											exprs: []interface{}{
												&litMatcher{
													pos:        position{line: 85, col: 45, offset: 3603},
													val:        ":",
													ignoreCase: false,
												},
												&labeledExpr{
													pos:   position{line: 85, col: 49, offset: 3607},
													label: "name",
													expr: &seqExpr{
														pos: position{line: 110, col: 18, offset: 4687},
														exprs: []interface{}{
															&charClassMatcher{
																pos:        position{line: 110, col: 19, offset: 4688},
																val:        "[_A-Za-z0-9]",
																chars:      []rune{'_'},
																ranges:     []rune{'A', 'Z', 'a', 'z', '0', '9'},
																ignoreCase: false,
																inverted:   false,
															},
															&zeroOrMoreExpr{
																pos: position{line: 110, col: 48, offset: 4717},
																expr: &charClassMatcher{
																	pos:        position{line: 110, col: 49, offset: 4718},
																	val:        "[-A-Za-z0-9]",
																	chars:      []rune{'-'},
																	ranges:     []rune{'A', 'Z', 'a', 'z', '0', '9'},
																	ignoreCase: false,
																	inverted:   false,
																},
															},
														},
													},
												},
												&litMatcher{
													pos:        position{line: 85, col: 70, offset: 3628},
													val:        ":",
													ignoreCase: false,
												},
												&zeroOrMoreExpr{
													pos: position{line: 85, col: 74, offset: 3632},
													expr: &choiceExpr{
														pos: position{line: 895, col: 7, offset: 37107},
														alternatives: []interface{}{
															&litMatcher{
																pos:        position{line: 895, col: 7, offset: 37107},
																val:        " ",
																ignoreCase: false,
															},
															&actionExpr{
																pos: position{line: 895, col: 13, offset: 37113},
																run: (*parser).callonDocumentBlock35,
																expr: &litMatcher{
																	pos:        position{line: 895, col: 13, offset: 37113},
																	val:        "\t",
																	ignoreCase: false,
																},
															},
														},
													},
												},
												&choiceExpr{
													pos: position{line: 903, col: 8, offset: 37209},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 899, col: 12, offset: 37169},
															val:        "\r\n",
															ignoreCase: false,
														},
														&charClassMatcher{
															pos:        position{line: 899, col: 21, offset: 37178},
															val:        "[\\r\\n]",
															chars:      []rune{'\r', '\n'},
															ignoreCase: false,
															inverted:   false,
														},
														&notExpr{
															pos: position{line: 901, col: 8, offset: 37198},
															expr: &anyMatcher{
																line: 901, col: 9, offset: 37199,
															},
														},
													},
												},
											},
										},
									},
									&actionExpr{
										pos: position{line: 89, col: 49, offset: 3769},
										run: (*parser).callonDocumentBlock42,
										expr: &seqExpr{
											pos: position{line: 89, col: 49, offset: 3769},
											exprs: []interface{}{
												&litMatcher{
													pos:        position{line: 89, col: 49, offset: 3769},
													val:        ":",
													ignoreCase: false,
												},
												&labeledExpr{
													pos:   position{line: 89, col: 53, offset: 3773},
													label: "name",
													expr: &seqExpr{
														pos: position{line: 110, col: 18, offset: 4687},
														exprs: []interface{}{
															&charClassMatcher{
																pos:        position{line: 110, col: 19, offset: 4688},
																val:        "[_A-Za-z0-9]",
																chars:      []rune{'_'},
																ranges:     []rune{'A', 'Z', 'a', 'z', '0', '9'},
																ignoreCase: false,
																inverted:   false,
															},
															&zeroOrMoreExpr{
																pos: position{line: 110, col: 48, offset: 4717},
																expr: &charClassMatcher{
																	pos:        position{line: 110, col: 49, offset: 4718},
																	val:        "[-A-Za-z0-9]",
																	chars:      []rune{'-'},
																	ranges:     []rune{'A', 'Z', 'a', 'z', '0', '9'},
																	ignoreCase: false,
																	inverted:   false,
																},
															},
														},
													},
												},
												&litMatcher{
													pos:        position{line: 89, col: 74, offset: 3794},
													val:        ":",
													ignoreCase: false,
												},
												&oneOrMoreExpr{
													pos: position{line: 89, col: 78, offset: 3798},
													expr: &choiceExpr{
														pos: position{line: 895, col: 7, offset: 37107},
														alternatives: []interface{}{
															&litMatcher{
																pos:        position{line: 895, col: 7, offset: 37107},
																val:        " ",
																ignoreCase: false,
															},
															&actionExpr{
																pos: position{line: 895, col: 13, offset: 37113},
																run: (*parser).callonDocumentBlock54,
																expr: &litMatcher{
																	pos:        position{line: 895, col: 13, offset: 37113},
																	val:        "\t",
																	ignoreCase: false,
																},
															},
														},
													},
												},
												&labeledExpr{
													pos:   position{line: 89, col: 82, offset: 3802},
													label: "value",
													expr: &zeroOrMoreExpr{
														pos: position{line: 89, col: 88, offset: 3808},
														expr: &seqExpr{
															pos: position{line: 89, col: 89, offset: 3809},
															exprs: []interface{}{
																&notExpr{
																	pos: position{line: 89, col: 89, offset: 3809},
																	expr: &choiceExpr{
																		pos: position{line: 899, col: 12, offset: 37169},
																		alternatives: []interface{}{
																			&litMatcher{
																				pos:        position{line: 899, col: 12, offset: 37169},
																				val:        "\r\n",
																				ignoreCase: false,
																			},
																			&charClassMatcher{
																				pos:        position{line: 899, col: 21, offset: 37178},
																				val:        "[\\r\\n]",
																				chars:      []rune{'\r', '\n'},
																				ignoreCase: false,
																				inverted:   false,
																			},
																		},
																	},
																},
																&anyMatcher{
																	line: 89, col: 98, offset: 3818,
																},
															},
														},
													},
												},
												&choiceExpr{
													pos: position{line: 903, col: 8, offset: 37209},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 899, col: 12, offset: 37169},
															val:        "\r\n",
															ignoreCase: false,
														},
														&charClassMatcher{
															pos:        position{line: 899, col: 21, offset: 37178},
															val:        "[\\r\\n]",
															chars:      []rune{'\r', '\n'},
															ignoreCase: false,
															inverted:   false,
														},
														&notExpr{
															pos: position{line: 901, col: 8, offset: 37198},
															expr: &anyMatcher{
																line: 901, col: 9, offset: 37199,
															},
														},
													},
												},
											},
										},
									},
									&actionExpr{
										pos: position{line: 95, col: 53, offset: 4100},
										run: (*parser).callonDocumentBlock69,
										expr: &seqExpr{
											pos: position{line: 95, col: 53, offset: 4100},
											exprs: []interface{}{
												&litMatcher{
													pos:        position{line: 95, col: 53, offset: 4100},
													val:        ":!",
													ignoreCase: false,
												},
												&labeledExpr{
													pos:   position{line: 95, col: 58, offset: 4105},
													label: "name",
													expr: &seqExpr{
														pos: position{line: 110, col: 18, offset: 4687},
														exprs: []interface{}{
															&charClassMatcher{
																pos:        position{line: 110, col: 19, offset: 4688},
																val:        "[_A-Za-z0-9]",
																chars:      []rune{'_'},
																ranges:     []rune{'A', 'Z', 'a', 'z', '0', '9'},
																ignoreCase: false,
																inverted:   false,
															},
															&zeroOrMoreExpr{
																pos: position{line: 110, col: 48, offset: 4717},
																expr: &charClassMatcher{
																	pos:        position{line: 110, col: 49, offset: 4718},
																	val:        "[-A-Za-z0-9]",
																	chars:      []rune{'-'},
																	ranges:     []rune{'A', 'Z', 'a', 'z', '0', '9'},
																	ignoreCase: false,
																	inverted:   false,
																},
															},
														},
													},
												},
												&litMatcher{
													pos:        position{line: 95, col: 79, offset: 4126},
													val:        ":",
													ignoreCase: false,
												},
												&zeroOrMoreExpr{
													pos: position{line: 95, col: 83, offset: 4130},
													expr: &choiceExpr{
														pos: position{line: 895, col: 7, offset: 37107},
														alternatives: []interface{}{
															&litMatcher{
																pos:        position{line: 895, col: 7, offset: 37107},
																val:        " ",
																ignoreCase: false,
															},
															&actionExpr{
																pos: position{line: 895, col: 13, offset: 37113},
																run: (*parser).callonDocumentBlock81,
																expr: &litMatcher{
																	pos:        position{line: 895, col: 13, offset: 37113},
																	val:        "\t",
																	ignoreCase: false,
																},
															},
														},
													},
												},
												&choiceExpr{
													pos: position{line: 903, col: 8, offset: 37209},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 899, col: 12, offset: 37169},
															val:        "\r\n",
															ignoreCase: false,
														},
														&charClassMatcher{
															pos:        position{line: 899, col: 21, offset: 37178},
															val:        "[\\r\\n]",
															chars:      []rune{'\r', '\n'},
															ignoreCase: false,
															inverted:   false,
														},
														&notExpr{
															pos: position{line: 901, col: 8, offset: 37198},
															expr: &anyMatcher{
																line: 901, col: 9, offset: 37199,
															},
														},
													},
												},
											},
										},
									},
									&actionExpr{
										pos: position{line: 99, col: 49, offset: 4256},
										run: (*parser).callonDocumentBlock88,
										expr: &seqExpr{
											pos: position{line: 99, col: 49, offset: 4256},
											exprs: []interface{}{
												&litMatcher{
													pos:        position{line: 99, col: 49, offset: 4256},
													val:        ":",
													ignoreCase: false,
												},
												&labeledExpr{
													pos:   position{line: 99, col: 53, offset: 4260},
													label: "name",
													expr: &seqExpr{
														pos: position{line: 110, col: 18, offset: 4687},
														exprs: []interface{}{
															&charClassMatcher{
																pos:        position{line: 110, col: 19, offset: 4688},
																val:        "[_A-Za-z0-9]",
																chars:      []rune{'_'},
																ranges:     []rune{'A', 'Z', 'a', 'z', '0', '9'},
																ignoreCase: false,
																inverted:   false,
															},
															&zeroOrMoreExpr{
																pos: position{line: 110, col: 48, offset: 4717},
																expr: &charClassMatcher{
																	pos:        position{line: 110, col: 49, offset: 4718},
																	val:        "[-A-Za-z0-9]",
																	chars:      []rune{'-'},
																	ranges:     []rune{'A', 'Z', 'a', 'z', '0', '9'},
																	ignoreCase: false,
																	inverted:   false,
																},
															},
														},
													},
												},
												&litMatcher{
													pos:        position{line: 99, col: 74, offset: 4281},
													val:        "!:",
													ignoreCase: false,
												},
												&zeroOrMoreExpr{
													pos: position{line: 99, col: 79, offset: 4286},
													expr: &choiceExpr{
														pos: position{line: 895, col: 7, offset: 37107},
														alternatives: []interface{}{
															&litMatcher{
																pos:        position{line: 895, col: 7, offset: 37107},
																val:        " ",
																ignoreCase: false,
															},
															&actionExpr{
																pos: position{line: 895, col: 13, offset: 37113},
																run: (*parser).callonDocumentBlock100,
																expr: &litMatcher{
																	pos:        position{line: 895, col: 13, offset: 37113},
																	val:        "\t",
																	ignoreCase: false,
																},
															},
														},
													},
												},
												&choiceExpr{
													pos: position{line: 903, col: 8, offset: 37209},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 899, col: 12, offset: 37169},
															val:        "\r\n",
															ignoreCase: false,
														},
														&charClassMatcher{
															pos:        position{line: 899, col: 21, offset: 37178},
															val:        "[\\r\\n]",
															chars:      []rune{'\r', '\n'},
															ignoreCase: false,
															inverted:   false,
														},
														&notExpr{
															pos: position{line: 901, col: 8, offset: 37198},
															expr: &anyMatcher{
																line: 901, col: 9, offset: 37199,
															},
														},
													},
												},
											},
										},
									},
									&seqExpr{
										pos: position{line: 115, col: 25, offset: 4886},
										exprs: []interface{}{
											&litMatcher{
												pos:        position{line: 115, col: 25, offset: 4886},
												val:        "toc::[]",
												ignoreCase: false,
											},
											&choiceExpr{
												pos: position{line: 899, col: 12, offset: 37169},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 899, col: 12, offset: 37169},
														val:        "\r\n",
														ignoreCase: false,
													},
													&charClassMatcher{
														pos:        position{line: 899, col: 21, offset: 37178},
														val:        "[\\r\\n]",
														chars:      []rune{'\r', '\n'},
														ignoreCase: false,
														inverted:   false,
													},
												},
											},
										},
									},
									&ruleRefExpr{
										pos:  position{line: 23, col: 103, offset: 891},
										name: "List",
									},
									&actionExpr{
										pos: position{line: 649, col: 15, offset: 27773},
										run: (*parser).callonDocumentBlock113,
										expr: &seqExpr{
											pos: position{line: 649, col: 15, offset: 27773},
											exprs: []interface{}{
												&labeledExpr{
													pos:   position{line: 649, col: 15, offset: 27773},
													label: "attributes",
													expr: &zeroOrMoreExpr{
														pos: position{line: 649, col: 26, offset: 27784},
														expr: &actionExpr{
															pos: position{line: 120, col: 21, offset: 5039},
															run: (*parser).callonDocumentBlock117,
															expr: &seqExpr{
																pos: position{line: 120, col: 21, offset: 5039},
																exprs: []interface{}{
																	&labeledExpr{
																		pos:   position{line: 120, col: 21, offset: 5039},
																		label: "attr",
																		expr: &choiceExpr{
																			pos: position{line: 120, col: 27, offset: 5045},
																			alternatives: []interface{}{
																				&actionExpr{
																					pos: position{line: 129, col: 14, offset: 5496},
																					run: (*parser).callonDocumentBlock121,
																					expr: &labeledExpr{
																						pos:   position{line: 129, col: 14, offset: 5496},
																						label: "id",
																						expr: &actionExpr{
																							pos: position{line: 135, col: 20, offset: 5626},
																							run: (*parser).callonDocumentBlock123,
																							expr: &seqExpr{
																								pos: position{line: 135, col: 20, offset: 5626},
																								exprs: []interface{}{
																									&litMatcher{
																										pos:        position{line: 135, col: 20, offset: 5626},
																										val:        "[[",
																										ignoreCase: false,
																									},
																									&labeledExpr{
																										pos:   position{line: 135, col: 25, offset: 5631},
																										label: "id",
																										expr: &actionExpr{
																											pos: position{line: 883, col: 7, offset: 36866},
																											run: (*parser).callonDocumentBlock127,
																											expr: &oneOrMoreExpr{
																												pos: position{line: 883, col: 7, offset: 36866},
																												expr: &seqExpr{
																													pos: position{line: 883, col: 8, offset: 36867},
																													exprs: []interface{}{
																														&notExpr{
																															pos: position{line: 883, col: 8, offset: 36867},
																															expr: &choiceExpr{
																																pos: position{line: 899, col: 12, offset: 37169},
																																alternatives: []interface{}{
																																	&litMatcher{
																																		pos:        position{line: 899, col: 12, offset: 37169},
																																		val:        "\r\n",
																																		ignoreCase: false,
																																	},
																																	&charClassMatcher{
																																		pos:        position{line: 899, col: 21, offset: 37178},
																																		val:        "[\\r\\n]",
																																		chars:      []rune{'\r', '\n'},
																																		ignoreCase: false,
																																		inverted:   false,
																																	},
																																},
																															},
																														},
																														&notExpr{
																															pos: position{line: 883, col: 17, offset: 36876},
																															expr: &choiceExpr{
																																pos: position{line: 895, col: 7, offset: 37107},
																																alternatives: []interface{}{
																																	&litMatcher{
																																		pos:        position{line: 895, col: 7, offset: 37107},
																																		val:        " ",
																																		ignoreCase: false,
																																	},
																																	&actionExpr{
																																		pos: position{line: 895, col: 13, offset: 37113},
																																		run: (*parser).callonDocumentBlock137,
																																		expr: &litMatcher{
																																			pos:        position{line: 895, col: 13, offset: 37113},
																																			val:        "\t",
																																			ignoreCase: false,
																																		},
																																	},
																																},
																															},
																														},
																														&notExpr{
																															pos: position{line: 883, col: 21, offset: 36880},
																															expr: &litMatcher{
																																pos:        position{line: 883, col: 22, offset: 36881},
																																val:        "[",
																																ignoreCase: false,
																															},
																														},
																														&notExpr{
																															pos: position{line: 883, col: 26, offset: 36885},
																															expr: &litMatcher{
																																pos:        position{line: 883, col: 27, offset: 36886},
																																val:        "]",
																																ignoreCase: false,
																															},
																														},
																														&notExpr{
																															pos: position{line: 883, col: 31, offset: 36890},
																															expr: &litMatcher{
																																pos:        position{line: 883, col: 32, offset: 36891},
																																val:        "<<",
																																ignoreCase: false,
																															},
																														},
																														&notExpr{
																															pos: position{line: 883, col: 37, offset: 36896},
																															expr: &litMatcher{
																																pos:        position{line: 883, col: 38, offset: 36897},
																																val:        ">>",
																																ignoreCase: false,
																															},
																														},
																														&anyMatcher{
																															line: 883, col: 42, offset: 36901,
																														},
																													},
																												},
																											},
																										},
																									},
																									&litMatcher{
																										pos:        position{line: 135, col: 33, offset: 5639},
																										val:        "]]",
																										ignoreCase: false,
																									},
																								},
																							},
																						},
																					},
																				},
																				&actionExpr{
																					pos: position{line: 131, col: 5, offset: 5542},
																					run: (*parser).callonDocumentBlock149,
																					expr: &seqExpr{
																						pos: position{line: 131, col: 5, offset: 5542},
																						exprs: []interface{}{
																							&litMatcher{
																								pos:        position{line: 131, col: 5, offset: 5542},
																								val:        "[#",
																								ignoreCase: false,
																							},
																							&labeledExpr{
																								pos:   position{line: 131, col: 10, offset: 5547},
																								label: "id",
																								expr: &actionExpr{
																									pos: position{line: 883, col: 7, offset: 36866},
																									run: (*parser).callonDocumentBlock153,
																									expr: &oneOrMoreExpr{
																										pos: position{line: 883, col: 7, offset: 36866},
																										expr: &seqExpr{
																											pos: position{line: 883, col: 8, offset: 36867},
																											exprs: []interface{}{
																												&notExpr{
																													pos: position{line: 883, col: 8, offset: 36867},
																													expr: &choiceExpr{
																														pos: position{line: 899, col: 12, offset: 37169},
																														alternatives: []interface{}{
																															&litMatcher{
																																pos:        position{line: 899, col: 12, offset: 37169},
																																val:        "\r\n",
																																ignoreCase: false,
																															},
																															&charClassMatcher{
																																pos:        position{line: 899, col: 21, offset: 37178},
																																val:        "[\\r\\n]",
																																chars:      []rune{'\r', '\n'},
																																ignoreCase: false,
																																inverted:   false,
																															},
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 883, col: 17, offset: 36876},
																													expr: &choiceExpr{
																														pos: position{line: 895, col: 7, offset: 37107},
																														alternatives: []interface{}{
																															&litMatcher{
																																pos:        position{line: 895, col: 7, offset: 37107},
																																val:        " ",
																																ignoreCase: false,
																															},
																															&actionExpr{
																																pos: position{line: 895, col: 13, offset: 37113},
																																run: (*parser).callonDocumentBlock163,
																																expr: &litMatcher{
																																	pos:        position{line: 895, col: 13, offset: 37113},
																																	val:        "\t",
																																	ignoreCase: false,
																																},
																															},
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 883, col: 21, offset: 36880},
																													expr: &litMatcher{
																														pos:        position{line: 883, col: 22, offset: 36881},
																														val:        "[",
																														ignoreCase: false,
																													},
																												},
																												&notExpr{
																													pos: position{line: 883, col: 26, offset: 36885},
																													expr: &litMatcher{
																														pos:        position{line: 883, col: 27, offset: 36886},
																														val:        "]",
																														ignoreCase: false,
																													},
																												},
																												&notExpr{
																													pos: position{line: 883, col: 31, offset: 36890},
																													expr: &litMatcher{
																														pos:        position{line: 883, col: 32, offset: 36891},
																														val:        "<<",
																														ignoreCase: false,
																													},
																												},
																												&notExpr{
																													pos: position{line: 883, col: 37, offset: 36896},
																													expr: &litMatcher{
																														pos:        position{line: 883, col: 38, offset: 36897},
																														val:        ">>",
																														ignoreCase: false,
																													},
																												},
																												&anyMatcher{
																													line: 883, col: 42, offset: 36901,
																												},
																											},
																										},
																									},
																								},
																							},
																							&litMatcher{
																								pos:        position{line: 131, col: 18, offset: 5555},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																					},
																				},
																				&actionExpr{
																					pos: position{line: 141, col: 17, offset: 5848},
																					run: (*parser).callonDocumentBlock175,
																					expr: &seqExpr{
																						pos: position{line: 141, col: 17, offset: 5848},
																						exprs: []interface{}{
																							&litMatcher{
																								pos:        position{line: 141, col: 17, offset: 5848},
																								val:        ".",
																								ignoreCase: false,
																							},
																							&notExpr{
																								pos: position{line: 141, col: 21, offset: 5852},
																								expr: &litMatcher{
																									pos:        position{line: 141, col: 22, offset: 5853},
																									val:        ".",
																									ignoreCase: false,
																								},
																							},
																							&notExpr{
																								pos: position{line: 141, col: 26, offset: 5857},
																								expr: &choiceExpr{
																									pos: position{line: 895, col: 7, offset: 37107},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 895, col: 7, offset: 37107},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 895, col: 13, offset: 37113},
																											run: (*parser).callonDocumentBlock183,
																											expr: &litMatcher{
																												pos:        position{line: 895, col: 13, offset: 37113},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																							&labeledExpr{
																								pos:   position{line: 141, col: 30, offset: 5861},
																								label: "title",
																								expr: &oneOrMoreExpr{
																									pos: position{line: 141, col: 36, offset: 5867},
																									expr: &seqExpr{
																										pos: position{line: 141, col: 37, offset: 5868},
																										exprs: []interface{}{
																											&notExpr{
																												pos: position{line: 141, col: 37, offset: 5868},
																												expr: &choiceExpr{
																													pos: position{line: 899, col: 12, offset: 37169},
																													alternatives: []interface{}{
																														&litMatcher{
																															pos:        position{line: 899, col: 12, offset: 37169},
																															val:        "\r\n",
																															ignoreCase: false,
																														},
																														&charClassMatcher{
																															pos:        position{line: 899, col: 21, offset: 37178},
																															val:        "[\\r\\n]",
																															chars:      []rune{'\r', '\n'},
																															ignoreCase: false,
																															inverted:   false,
																														},
																													},
																												},
																											},
																											&anyMatcher{
																												line: 141, col: 46, offset: 5877,
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																				&actionExpr{
																					pos: position{line: 147, col: 16, offset: 6051},
																					run: (*parser).callonDocumentBlock193,
																					expr: &seqExpr{
																						pos: position{line: 147, col: 16, offset: 6051},
																						exprs: []interface{}{
																							&litMatcher{
																								pos:        position{line: 147, col: 16, offset: 6051},
																								val:        "[.",
																								ignoreCase: false,
																							},
																							&notExpr{
																								pos: position{line: 147, col: 21, offset: 6056},
																								expr: &choiceExpr{
																									pos: position{line: 895, col: 7, offset: 37107},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 895, col: 7, offset: 37107},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 895, col: 13, offset: 37113},
																											run: (*parser).callonDocumentBlock199,
																											expr: &litMatcher{
																												pos:        position{line: 895, col: 13, offset: 37113},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																							&labeledExpr{
																								pos:   position{line: 147, col: 25, offset: 6060},
																								label: "role",
																								expr: &oneOrMoreExpr{
																									pos: position{line: 147, col: 30, offset: 6065},
																									expr: &seqExpr{
																										pos: position{line: 147, col: 31, offset: 6066},
																										exprs: []interface{}{
																											&notExpr{
																												pos: position{line: 147, col: 31, offset: 6066},
																												expr: &choiceExpr{
																													pos: position{line: 899, col: 12, offset: 37169},
																													alternatives: []interface{}{
																														&litMatcher{
																															pos:        position{line: 899, col: 12, offset: 37169},
																															val:        "\r\n",
																															ignoreCase: false,
																														},
																														&charClassMatcher{
																															pos:        position{line: 899, col: 21, offset: 37178},
																															val:        "[\\r\\n]",
																															chars:      []rune{'\r', '\n'},
																															ignoreCase: false,
																															inverted:   false,
																														},
																													},
																												},
																											},
																											&notExpr{
																												pos: position{line: 147, col: 40, offset: 6075},
																												expr: &litMatcher{
																													pos:        position{line: 147, col: 41, offset: 6076},
																													val:        "]",
																													ignoreCase: false,
																												},
																											},
																											&anyMatcher{
																												line: 147, col: 45, offset: 6080,
																											},
																										},
																									},
																								},
																							},
																							&litMatcher{
																								pos:        position{line: 147, col: 49, offset: 6084},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																					},
																				},
																				&actionExpr{
																					pos: position{line: 152, col: 30, offset: 6255},
																					run: (*parser).callonDocumentBlock212,
																					expr: &seqExpr{
																						pos: position{line: 152, col: 30, offset: 6255},
																						exprs: []interface{}{
																							&litMatcher{
																								pos:        position{line: 152, col: 30, offset: 6255},
																								val:        "[",
																								ignoreCase: false,
																							},
																							&labeledExpr{
																								pos:   position{line: 152, col: 34, offset: 6259},
																								label: "k",
																								expr: &choiceExpr{
																									pos: position{line: 470, col: 19, offset: 18925},
																									alternatives: []interface{}{
																										&actionExpr{
																											pos: position{line: 470, col: 19, offset: 18925},
																											run: (*parser).callonDocumentBlock217,
																											expr: &litMatcher{
																												pos:        position{line: 470, col: 19, offset: 18925},
																												val:        "TIP",
																												ignoreCase: false,
																											},
																										},
																										&actionExpr{
																											pos: position{line: 472, col: 5, offset: 18963},
																											run: (*parser).callonDocumentBlock219,
																											expr: &litMatcher{
																												pos:        position{line: 472, col: 5, offset: 18963},
																												val:        "NOTE",
																												ignoreCase: false,
																											},
																										},
																										&actionExpr{
																											pos: position{line: 474, col: 5, offset: 19003},
																											run: (*parser).callonDocumentBlock221,
																											expr: &litMatcher{
																												pos:        position{line: 474, col: 5, offset: 19003},
																												val:        "IMPORTANT",
																												ignoreCase: false,
																											},
																										},
																										&actionExpr{
																											pos: position{line: 476, col: 5, offset: 19053},
																											run: (*parser).callonDocumentBlock223,
																											expr: &litMatcher{
																												pos:        position{line: 476, col: 5, offset: 19053},
																												val:        "WARNING",
																												ignoreCase: false,
																											},
																										},
																										&actionExpr{
																											pos: position{line: 478, col: 5, offset: 19099},
																											run: (*parser).callonDocumentBlock225,
																											expr: &litMatcher{
																												pos:        position{line: 478, col: 5, offset: 19099},
																												val:        "CAUTION",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																							&litMatcher{
																								pos:        position{line: 152, col: 53, offset: 6278},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																					},
																				},
																				&actionExpr{
																					pos: position{line: 175, col: 21, offset: 7013},
																					run: (*parser).callonDocumentBlock228,
																					expr: &litMatcher{
																						pos:        position{line: 175, col: 21, offset: 7013},
																						val:        "[horizontal]",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 157, col: 19, offset: 6439},
																					run: (*parser).callonDocumentBlock230,
																					expr: &seqExpr{
																						pos: position{line: 157, col: 19, offset: 6439},
																						exprs: []interface{}{
																							&litMatcher{
																								pos:        position{line: 157, col: 19, offset: 6439},
																								val:        "[",
																								ignoreCase: false,
																							},
																							&notExpr{
																								pos: position{line: 157, col: 23, offset: 6443},
																								expr: &choiceExpr{
																									pos: position{line: 895, col: 7, offset: 37107},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 895, col: 7, offset: 37107},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 895, col: 13, offset: 37113},
																											run: (*parser).callonDocumentBlock236,
																											expr: &litMatcher{
																												pos:        position{line: 895, col: 13, offset: 37113},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																							&labeledExpr{
																								pos:   position{line: 157, col: 27, offset: 6447},
																								label: "attributes",
																								expr: &zeroOrMoreExpr{
																									pos: position{line: 157, col: 38, offset: 6458},
																									expr: &choiceExpr{
																										pos: position{line: 161, col: 21, offset: 6571},
																										alternatives: []interface{}{
																											&actionExpr{
																												pos: position{line: 161, col: 21, offset: 6571},
																												run: (*parser).callonDocumentBlock241,
																												expr: &seqExpr{
																													pos: position{line: 161, col: 21, offset: 6571},
																													exprs: []interface{}{
																														&labeledExpr{
																															pos:   position{line: 161, col: 21, offset: 6571},
																															label: "key",
																															expr: &actionExpr{
																																pos: position{line: 167, col: 17, offset: 6861},
																																run: (*parser).callonDocumentBlock244,
																																expr: &seqExpr{
																																	pos: position{line: 167, col: 17, offset: 6861},
																																	exprs: []interface{}{
																																		&notExpr{
																																			pos: position{line: 167, col: 17, offset: 6861},
																																			expr: &actionExpr{
																																				pos: position{line: 207, col: 14, offset: 8362},
																																				run: (*parser).callonDocumentBlock247,
																																				expr: &litMatcher{
																																					pos:        position{line: 207, col: 14, offset: 8362},
																																					val:        "verse",
																																					ignoreCase: false,
																																				},
																																			},
																																		},
																																		&labeledExpr{
																																			pos:   position{line: 167, col: 28, offset: 6872},
																																			label: "key",
																																			expr: &oneOrMoreExpr{
																																				pos: position{line: 167, col: 32, offset: 6876},
																																				expr: &seqExpr{
																																					pos: position{line: 167, col: 33, offset: 6877},
																																					exprs: []interface{}{
																																						&notExpr{
																																							pos: position{line: 167, col: 33, offset: 6877},
																																							expr: &litMatcher{
																																								pos:        position{line: 167, col: 34, offset: 6878},
																																								val:        "=",
																																								ignoreCase: false,
																																							},
																																						},
																																						&notExpr{
																																							pos: position{line: 167, col: 38, offset: 6882},
																																							expr: &litMatcher{
																																								pos:        position{line: 167, col: 39, offset: 6883},
																																								val:        ",",
																																								ignoreCase: false,
																																							},
																																						},
																																						&notExpr{
																																							pos: position{line: 167, col: 43, offset: 6887},
																																							expr: &litMatcher{
																																								pos:        position{line: 167, col: 44, offset: 6888},
																																								val:        "]",
																																								ignoreCase: false,
																																							},
																																						},
																																						&anyMatcher{
																																							line: 167, col: 48, offset: 6892,
																																						},
																																					},
																																				},
																																			},
																																		},
																																	},
																																},
																															},
																														},
																														&litMatcher{
																															pos:        position{line: 161, col: 40, offset: 6590},
																															val:        "=",
																															ignoreCase: false,
																														},
																														&labeledExpr{
																															pos:   position{line: 161, col: 44, offset: 6594},
																															label: "value",
																															expr: &actionExpr{
																																pos: position{line: 171, col: 19, offset: 6940},
																																run: (*parser).callonDocumentBlock261,
																																expr: &labeledExpr{
																																	pos:   position{line: 171, col: 19, offset: 6940},
																																	label: "value",
																																	expr: &zeroOrMoreExpr{
																																		pos: position{line: 171, col: 25, offset: 6946},
																																		expr: &seqExpr{
																																			pos: position{line: 171, col: 26, offset: 6947},
																																			exprs: []interface{}{
																																				&notExpr{
																																					pos: position{line: 171, col: 26, offset: 6947},
																																					expr: &litMatcher{
																																						pos:        position{line: 171, col: 27, offset: 6948},
																																						val:        "=",
																																						ignoreCase: false,
																																					},
																																				},
																																				&notExpr{
																																					pos: position{line: 171, col: 31, offset: 6952},
																																					expr: &litMatcher{
																																						pos:        position{line: 171, col: 32, offset: 6953},
																																						val:        ",",
																																						ignoreCase: false,
																																					},
																																				},
																																				&notExpr{
																																					pos: position{line: 171, col: 36, offset: 6957},
																																					expr: &litMatcher{
																																						pos:        position{line: 171, col: 37, offset: 6958},
																																						val:        "]",
																																						ignoreCase: false,
																																					},
																																				},
																																				&anyMatcher{
																																					line: 171, col: 41, offset: 6962,
																																				},
																																			},
																																		},
																																	},
																																},
																															},
																														},
																														&zeroOrOneExpr{
																															pos: position{line: 161, col: 67, offset: 6617},
																															expr: &litMatcher{
																																pos:        position{line: 161, col: 67, offset: 6617},
																																val:        ",",
																																ignoreCase: false,
																															},
																														},
																														&zeroOrMoreExpr{
																															pos: position{line: 161, col: 72, offset: 6622},
																															expr: &choiceExpr{
																																pos: position{line: 895, col: 7, offset: 37107},
																																alternatives: []interface{}{
																																	&litMatcher{
																																		pos:        position{line: 895, col: 7, offset: 37107},
																																		val:        " ",
																																		ignoreCase: false,
																																	},
																																	&actionExpr{
																																		pos: position{line: 895, col: 13, offset: 37113},
																																		run: (*parser).callonDocumentBlock277,
																																		expr: &litMatcher{
																																			pos:        position{line: 895, col: 13, offset: 37113},
																																			val:        "\t",
																																			ignoreCase: false,
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																											&actionExpr{
																												pos: position{line: 163, col: 5, offset: 6729},
																												run: (*parser).callonDocumentBlock279,
																												expr: &seqExpr{
																													pos: position{line: 163, col: 5, offset: 6729},
																													exprs: []interface{}{
																														&labeledExpr{
																															pos:   position{line: 163, col: 5, offset: 6729},
																															label: "key",
																															expr: &actionExpr{
																																pos: position{line: 167, col: 17, offset: 6861},
																																run: (*parser).callonDocumentBlock282,
																																expr: &seqExpr{
																																	pos: position{line: 167, col: 17, offset: 6861},
																																	exprs: []interface{}{
																																		&notExpr{
																																			pos: position{line: 167, col: 17, offset: 6861},
																																			expr: &actionExpr{
																																				pos: position{line: 207, col: 14, offset: 8362},
																																				run: (*parser).callonDocumentBlock285,
																																				expr: &litMatcher{
																																					pos:        position{line: 207, col: 14, offset: 8362},
																																					val:        "verse",
																																					ignoreCase: false,
																																				},
																																			},
																																		},
																																		&labeledExpr{
																																			pos:   position{line: 167, col: 28, offset: 6872},
																																			label: "key",
																																			expr: &oneOrMoreExpr{
																																				pos: position{line: 167, col: 32, offset: 6876},
																																				expr: &seqExpr{
																																					pos: position{line: 167, col: 33, offset: 6877},
																																					exprs: []interface{}{
																																						&notExpr{
																																							pos: position{line: 167, col: 33, offset: 6877},
																																							expr: &litMatcher{
																																								pos:        position{line: 167, col: 34, offset: 6878},
																																								val:        "=",
																																								ignoreCase: false,
																																							},
																																						},
																																						&notExpr{
																																							pos: position{line: 167, col: 38, offset: 6882},
																																							expr: &litMatcher{
																																								pos:        position{line: 167, col: 39, offset: 6883},
																																								val:        ",",
																																								ignoreCase: false,
																																							},
																																						},
																																						&notExpr{
																																							pos: position{line: 167, col: 43, offset: 6887},
																																							expr: &litMatcher{
																																								pos:        position{line: 167, col: 44, offset: 6888},
																																								val:        "]",
																																								ignoreCase: false,
																																							},
																																						},
																																						&anyMatcher{
																																							line: 167, col: 48, offset: 6892,
																																						},
																																					},
																																				},
																																			},
																																		},
																																	},
																																},
																															},
																														},
																														&zeroOrOneExpr{
																															pos: position{line: 163, col: 24, offset: 6748},
																															expr: &litMatcher{
																																pos:        position{line: 163, col: 24, offset: 6748},
																																val:        ",",
																																ignoreCase: false,
																															},
																														},
																														&zeroOrMoreExpr{
																															pos: position{line: 163, col: 29, offset: 6753},
																															expr: &choiceExpr{
																																pos: position{line: 895, col: 7, offset: 37107},
																																alternatives: []interface{}{
																																	&litMatcher{
																																		pos:        position{line: 895, col: 7, offset: 37107},
																																		val:        " ",
																																		ignoreCase: false,
																																	},
																																	&actionExpr{
																																		pos: position{line: 895, col: 13, offset: 37113},
																																		run: (*parser).callonDocumentBlock302,
																																		expr: &litMatcher{
																																			pos:        position{line: 895, col: 13, offset: 37113},
																																			val:        "\t",
																																			ignoreCase: false,
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&litMatcher{
																								pos:        position{line: 157, col: 59, offset: 6479},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&zeroOrMoreExpr{
																		pos: position{line: 120, col: 131, offset: 5149},
																		expr: &choiceExpr{
																			pos: position{line: 895, col: 7, offset: 37107},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 895, col: 7, offset: 37107},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 895, col: 13, offset: 37113},
																					run: (*parser).callonDocumentBlock308,
																					expr: &litMatcher{
																						pos:        position{line: 895, col: 13, offset: 37113},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&choiceExpr{
																		pos: position{line: 903, col: 8, offset: 37209},
																		alternatives: []interface{}{
																			&litMatcher{
																				pos:        position{line: 899, col: 12, offset: 37169},
																				val:        "\r\n",
																				ignoreCase: false,
																			},
																			&charClassMatcher{
																				pos:        position{line: 899, col: 21, offset: 37178},
																				val:        "[\\r\\n]",
																				chars:      []rune{'\r', '\n'},
																				ignoreCase: false,
																				inverted:   false,
																			},
																			&notExpr{
																				pos: position{line: 901, col: 8, offset: 37198},
																				expr: &anyMatcher{
																					line: 901, col: 9, offset: 37199,
																				},
																			},
																		},
																	},
																},
															},
														},
													},
												},
												&litMatcher{
													pos:        position{line: 649, col: 46, offset: 27804},
													val:        "image::",
													ignoreCase: false,
												},
												&labeledExpr{
													pos:   position{line: 649, col: 56, offset: 27814},
													label: "path",
													expr: &actionExpr{
														pos: position{line: 879, col: 8, offset: 36796},
														run: (*parser).callonDocumentBlock317,
														expr: &oneOrMoreExpr{
															pos: position{line: 879, col: 8, offset: 36796},
															expr: &seqExpr{
																pos: position{line: 879, col: 9, offset: 36797},
																exprs: []interface{}{
																	&notExpr{
																		pos: position{line: 879, col: 9, offset: 36797},
																		expr: &choiceExpr{
																			pos: position{line: 899, col: 12, offset: 37169},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 899, col: 12, offset: 37169},
																					val:        "\r\n",
																					ignoreCase: false,
																				},
																				&charClassMatcher{
																					pos:        position{line: 899, col: 21, offset: 37178},
																					val:        "[\\r\\n]",
																					chars:      []rune{'\r', '\n'},
																					ignoreCase: false,
																					inverted:   false,
																				},
																			},
																		},
																	},
																	&notExpr{
																		pos: position{line: 879, col: 18, offset: 36806},
																		expr: &choiceExpr{
																			pos: position{line: 895, col: 7, offset: 37107},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 895, col: 7, offset: 37107},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 895, col: 13, offset: 37113},
																					run: (*parser).callonDocumentBlock327,
																					expr: &litMatcher{
																						pos:        position{line: 895, col: 13, offset: 37113},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&notExpr{
																		pos: position{line: 879, col: 22, offset: 36810},
																		expr: &litMatcher{
																			pos:        position{line: 879, col: 23, offset: 36811},
																			val:        "[",
																			ignoreCase: false,
																		},
																	},
																	&notExpr{
																		pos: position{line: 879, col: 27, offset: 36815},
																		expr: &litMatcher{
																			pos:        position{line: 879, col: 28, offset: 36816},
																			val:        "]",
																			ignoreCase: false,
																		},
																	},
																	&anyMatcher{
																		line: 879, col: 32, offset: 36820,
																	},
																},
															},
														},
													},
												},
												&labeledExpr{
													pos:   position{line: 649, col: 67, offset: 27825},
													label: "inlineAttributes",
													expr: &choiceExpr{
														pos: position{line: 658, col: 20, offset: 28276},
														alternatives: []interface{}{
															&actionExpr{
																pos: position{line: 658, col: 20, offset: 28276},
																run: (*parser).callonDocumentBlock336,
																expr: &seqExpr{
																	pos: position{line: 658, col: 20, offset: 28276},
																	exprs: []interface{}{
																		&litMatcher{
																			pos:        position{line: 658, col: 20, offset: 28276},
																			val:        "[",
																			ignoreCase: false,
																		},
																		&labeledExpr{
																			pos:   position{line: 658, col: 24, offset: 28280},
																			label: "alt",
																			expr: &actionExpr{
																				pos: position{line: 675, col: 19, offset: 29128},
																				run: (*parser).callonDocumentBlock340,
																				expr: &seqExpr{
																					pos: position{line: 675, col: 19, offset: 29128},
																					exprs: []interface{}{
																						&labeledExpr{
																							pos:   position{line: 675, col: 19, offset: 29128},
																							label: "value",
																							expr: &oneOrMoreExpr{
																								pos: position{line: 675, col: 25, offset: 29134},
																								expr: &seqExpr{
																									pos: position{line: 675, col: 26, offset: 29135},
																									exprs: []interface{}{
																										&notExpr{
																											pos: position{line: 675, col: 26, offset: 29135},
																											expr: &litMatcher{
																												pos:        position{line: 675, col: 27, offset: 29136},
																												val:        ",",
																												ignoreCase: false,
																											},
																										},
																										&notExpr{
																											pos: position{line: 675, col: 31, offset: 29140},
																											expr: &litMatcher{
																												pos:        position{line: 675, col: 32, offset: 29141},
																												val:        "=",
																												ignoreCase: false,
																											},
																										},
																										&notExpr{
																											pos: position{line: 675, col: 36, offset: 29145},
																											expr: &litMatcher{
																												pos:        position{line: 675, col: 37, offset: 29146},
																												val:        "]",
																												ignoreCase: false,
																											},
																										},
																										&anyMatcher{
																											line: 675, col: 41, offset: 29150,
																										},
																									},
																								},
																							},
																						},
																						&choiceExpr{
																							pos: position{line: 675, col: 46, offset: 29155},
																							alternatives: []interface{}{
																								&litMatcher{
																									pos:        position{line: 675, col: 46, offset: 29155},
																									val:        ",",
																									ignoreCase: false,
																								},
																								&andExpr{
																									pos: position{line: 675, col: 52, offset: 29161},
																									expr: &litMatcher{
																										pos:        position{line: 675, col: 53, offset: 29162},
																										val:        "]",
																										ignoreCase: false,
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																		&labeledExpr{
																			pos:   position{line: 659, col: 9, offset: 28310},
																			label: "width",
																			expr: &actionExpr{
																				pos: position{line: 675, col: 19, offset: 29128},
																				run: (*parser).callonDocumentBlock357,
																				expr: &seqExpr{
																					pos: position{line: 675, col: 19, offset: 29128},
																					exprs: []interface{}{
																						&labeledExpr{
																							pos:   position{line: 675, col: 19, offset: 29128},
																							label: "value",
																							expr: &oneOrMoreExpr{
																								pos: position{line: 675, col: 25, offset: 29134},
																								expr: &seqExpr{
																									pos: position{line: 675, col: 26, offset: 29135},
																									exprs: []interface{}{
																										&notExpr{
																											pos: position{line: 675, col: 26, offset: 29135},
																											expr: &litMatcher{
																												pos:        position{line: 675, col: 27, offset: 29136},
																												val:        ",",
																												ignoreCase: false,
																											},
																										},
																										&notExpr{
																											pos: position{line: 675, col: 31, offset: 29140},
																											expr: &litMatcher{
																												pos:        position{line: 675, col: 32, offset: 29141},
																												val:        "=",
																												ignoreCase: false,
																											},
																										},
																										&notExpr{
																											pos: position{line: 675, col: 36, offset: 29145},
																											expr: &litMatcher{
																												pos:        position{line: 675, col: 37, offset: 29146},
																												val:        "]",
																												ignoreCase: false,
																											},
																										},
																										&anyMatcher{
																											line: 675, col: 41, offset: 29150,
																										},
																									},
																								},
																							},
																						},
																						&choiceExpr{
																							pos: position{line: 675, col: 46, offset: 29155},
																							alternatives: []interface{}{
																								&litMatcher{
																									pos:        position{line: 675, col: 46, offset: 29155},
																									val:        ",",
																									ignoreCase: false,
																								},
																								&andExpr{
																									pos: position{line: 675, col: 52, offset: 29161},
																									expr: &litMatcher{
																										pos:        position{line: 675, col: 53, offset: 29162},
																										val:        "]",
																										ignoreCase: false,
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																		&labeledExpr{
																			pos:   position{line: 660, col: 9, offset: 28342},
																			label: "height",
																			expr: &actionExpr{
																				pos: position{line: 675, col: 19, offset: 29128},
																				run: (*parser).callonDocumentBlock374,
																				expr: &seqExpr{
																					pos: position{line: 675, col: 19, offset: 29128},
																					exprs: []interface{}{
																						&labeledExpr{
																							pos:   position{line: 675, col: 19, offset: 29128},
																							label: "value",
																							expr: &oneOrMoreExpr{
																								pos: position{line: 675, col: 25, offset: 29134},
																								expr: &seqExpr{
																									pos: position{line: 675, col: 26, offset: 29135},
																									exprs: []interface{}{
																										&notExpr{
																											pos: position{line: 675, col: 26, offset: 29135},
																											expr: &litMatcher{
																												pos:        position{line: 675, col: 27, offset: 29136},
																												val:        ",",
																												ignoreCase: false,
																											},
																										},
																										&notExpr{
																											pos: position{line: 675, col: 31, offset: 29140},
																											expr: &litMatcher{
																												pos:        position{line: 675, col: 32, offset: 29141},
																												val:        "=",
																												ignoreCase: false,
																											},
																										},
																										&notExpr{
																											pos: position{line: 675, col: 36, offset: 29145},
																											expr: &litMatcher{
																												pos:        position{line: 675, col: 37, offset: 29146},
																												val:        "]",
																												ignoreCase: false,
																											},
																										},
																										&anyMatcher{
																											line: 675, col: 41, offset: 29150,
																										},
																									},
																								},
																							},
																						},
																						&choiceExpr{
																							pos: position{line: 675, col: 46, offset: 29155},
																							alternatives: []interface{}{
																								&litMatcher{
																									pos:        position{line: 675, col: 46, offset: 29155},
																									val:        ",",
																									ignoreCase: false,
																								},
																								&andExpr{
																									pos: position{line: 675, col: 52, offset: 29161},
																									expr: &litMatcher{
																										pos:        position{line: 675, col: 53, offset: 29162},
																										val:        "]",
																										ignoreCase: false,
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																		&labeledExpr{
																			pos:   position{line: 661, col: 9, offset: 28375},
																			label: "otherAttrs",
																			expr: &zeroOrMoreExpr{
																				pos: position{line: 661, col: 20, offset: 28386},
																				expr: &choiceExpr{
																					pos: position{line: 161, col: 21, offset: 6571},
																					alternatives: []interface{}{
																						&actionExpr{
																							pos: position{line: 161, col: 21, offset: 6571},
																							run: (*parser).callonDocumentBlock393,
																							expr: &seqExpr{
																								pos: position{line: 161, col: 21, offset: 6571},
																								exprs: []interface{}{
																									&labeledExpr{
																										pos:   position{line: 161, col: 21, offset: 6571},
																										label: "key",
																										expr: &actionExpr{
																											pos: position{line: 167, col: 17, offset: 6861},
																											run: (*parser).callonDocumentBlock396,
																											expr: &seqExpr{
																												pos: position{line: 167, col: 17, offset: 6861},
																												exprs: []interface{}{
																													&notExpr{
																														pos: position{line: 167, col: 17, offset: 6861},
																														expr: &actionExpr{
																															pos: position{line: 207, col: 14, offset: 8362},
																															run: (*parser).callonDocumentBlock399,
																															expr: &litMatcher{
																																pos:        position{line: 207, col: 14, offset: 8362},
																																val:        "verse",
																																ignoreCase: false,
																															},
																														},
																													},
																													&labeledExpr{
																														pos:   position{line: 167, col: 28, offset: 6872},
																														label: "key",
																														expr: &oneOrMoreExpr{
																															pos: position{line: 167, col: 32, offset: 6876},
																															expr: &seqExpr{
																																pos: position{line: 167, col: 33, offset: 6877},
																																exprs: []interface{}{
																																	&notExpr{
																																		pos: position{line: 167, col: 33, offset: 6877},
																																		expr: &litMatcher{
																																			pos:        position{line: 167, col: 34, offset: 6878},
																																			val:        "=",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 167, col: 38, offset: 6882},
																																		expr: &litMatcher{
																																			pos:        position{line: 167, col: 39, offset: 6883},
																																			val:        ",",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 167, col: 43, offset: 6887},
																																		expr: &litMatcher{
																																			pos:        position{line: 167, col: 44, offset: 6888},
																																			val:        "]",
																																			ignoreCase: false,
																																		},
																																	},
																																	&anyMatcher{
																																		line: 167, col: 48, offset: 6892,
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																									&litMatcher{
																										pos:        position{line: 161, col: 40, offset: 6590},
																										val:        "=",
																										ignoreCase: false,
																									},
																									&labeledExpr{
																										pos:   position{line: 161, col: 44, offset: 6594},
																										label: "value",
																										expr: &actionExpr{
																											pos: position{line: 171, col: 19, offset: 6940},
																											run: (*parser).callonDocumentBlock413,
																											expr: &labeledExpr{
																												pos:   position{line: 171, col: 19, offset: 6940},
																												label: "value",
																												expr: &zeroOrMoreExpr{
																													pos: position{line: 171, col: 25, offset: 6946},
																													expr: &seqExpr{
																														pos: position{line: 171, col: 26, offset: 6947},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 171, col: 26, offset: 6947},
																																expr: &litMatcher{
																																	pos:        position{line: 171, col: 27, offset: 6948},
																																	val:        "=",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 171, col: 31, offset: 6952},
																																expr: &litMatcher{
																																	pos:        position{line: 171, col: 32, offset: 6953},
																																	val:        ",",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 171, col: 36, offset: 6957},
																																expr: &litMatcher{
																																	pos:        position{line: 171, col: 37, offset: 6958},
																																	val:        "]",
																																	ignoreCase: false,
																																},
																															},
																															&anyMatcher{
																																line: 171, col: 41, offset: 6962,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																									&zeroOrOneExpr{
																										pos: position{line: 161, col: 67, offset: 6617},
																										expr: &litMatcher{
																											pos:        position{line: 161, col: 67, offset: 6617},
																											val:        ",",
																											ignoreCase: false,
																										},
																									},
																									&zeroOrMoreExpr{
																										pos: position{line: 161, col: 72, offset: 6622},
																										expr: &choiceExpr{
																											pos: position{line: 895, col: 7, offset: 37107},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 895, col: 7, offset: 37107},
																													val:        " ",
																													ignoreCase: false,
																												},
																												&actionExpr{
																													pos: position{line: 895, col: 13, offset: 37113},
																													run: (*parser).callonDocumentBlock429,
																													expr: &litMatcher{
																														pos:        position{line: 895, col: 13, offset: 37113},
																														val:        "\t",
																														ignoreCase: false,
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 163, col: 5, offset: 6729},
																							run: (*parser).callonDocumentBlock431,
																							expr: &seqExpr{
																								pos: position{line: 163, col: 5, offset: 6729},
																								exprs: []interface{}{
																									&labeledExpr{
																										pos:   position{line: 163, col: 5, offset: 6729},
																										label: "key",
																										expr: &actionExpr{
																											pos: position{line: 167, col: 17, offset: 6861},
																											run: (*parser).callonDocumentBlock434,
																											expr: &seqExpr{
																												pos: position{line: 167, col: 17, offset: 6861},
																												exprs: []interface{}{
																													&notExpr{
																														pos: position{line: 167, col: 17, offset: 6861},
																														expr: &actionExpr{
																															pos: position{line: 207, col: 14, offset: 8362},
																															run: (*parser).callonDocumentBlock437,
																															expr: &litMatcher{
																																pos:        position{line: 207, col: 14, offset: 8362},
																																val:        "verse",
																																ignoreCase: false,
																															},
																														},
																													},
																													&labeledExpr{
																														pos:   position{line: 167, col: 28, offset: 6872},
																														label: "key",
																														expr: &oneOrMoreExpr{
																															pos: position{line: 167, col: 32, offset: 6876},
																															expr: &seqExpr{
																																pos: position{line: 167, col: 33, offset: 6877},
																																exprs: []interface{}{
																																	&notExpr{
																																		pos: position{line: 167, col: 33, offset: 6877},
																																		expr: &litMatcher{
																																			pos:        position{line: 167, col: 34, offset: 6878},
																																			val:        "=",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 167, col: 38, offset: 6882},
																																		expr: &litMatcher{
																																			pos:        position{line: 167, col: 39, offset: 6883},
																																			val:        ",",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 167, col: 43, offset: 6887},
																																		expr: &litMatcher{
																																			pos:        position{line: 167, col: 44, offset: 6888},
																																			val:        "]",
																																			ignoreCase: false,
																																		},
																																	},
																																	&anyMatcher{
																																		line: 167, col: 48, offset: 6892,
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																									&zeroOrOneExpr{
																										pos: position{line: 163, col: 24, offset: 6748},
																										expr: &litMatcher{
																											pos:        position{line: 163, col: 24, offset: 6748},
																											val:        ",",
																											ignoreCase: false,
																										},
																									},
																									&zeroOrMoreExpr{
																										pos: position{line: 163, col: 29, offset: 6753},
																										expr: &choiceExpr{
																											pos: position{line: 895, col: 7, offset: 37107},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 895, col: 7, offset: 37107},
																													val:        " ",
																													ignoreCase: false,
																												},
																												&actionExpr{
																													pos: position{line: 895, col: 13, offset: 37113},
																													run: (*parser).callonDocumentBlock454,
																													expr: &litMatcher{
																														pos:        position{line: 895, col: 13, offset: 37113},
																														val:        "\t",
																														ignoreCase: false,
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																		&litMatcher{
																			pos:        position{line: 661, col: 40, offset: 28406},
																			val:        "]",
																			ignoreCase: false,
																		},
																	},
																},
															},
															&actionExpr{
																pos: position{line: 663, col: 9, offset: 28560},
																run: (*parser).callonDocumentBlock457,
																expr: &seqExpr{
																	pos: position{line: 663, col: 9, offset: 28560},
																	exprs: []interface{}{
																		&litMatcher{
																			pos:        position{line: 663, col: 9, offset: 28560},
																			val:        "[",
																			ignoreCase: false,
																		},
																		&labeledExpr{
																			pos:   position{line: 663, col: 13, offset: 28564},
																			label: "alt",
																			expr: &actionExpr{
																				pos: position{line: 675, col: 19, offset: 29128},
																				run: (*parser).callonDocumentBlock461,
																				expr: &seqExpr{
																					pos: position{line: 675, col: 19, offset: 29128},
																					exprs: []interface{}{
																						&labeledExpr{
																							pos:   position{line: 675, col: 19, offset: 29128},
																							label: "value",
																							expr: &oneOrMoreExpr{
																								pos: position{line: 675, col: 25, offset: 29134},
																								expr: &seqExpr{
																									pos: position{line: 675, col: 26, offset: 29135},
																									exprs: []interface{}{
																										&notExpr{
																											pos: position{line: 675, col: 26, offset: 29135},
																											expr: &litMatcher{
																												pos:        position{line: 675, col: 27, offset: 29136},
																												val:        ",",
																												ignoreCase: false,
																											},
																										},
																										&notExpr{
																											pos: position{line: 675, col: 31, offset: 29140},
																											expr: &litMatcher{
																												pos:        position{line: 675, col: 32, offset: 29141},
																												val:        "=",
																												ignoreCase: false,
																											},
																										},
																										&notExpr{
																											pos: position{line: 675, col: 36, offset: 29145},
																											expr: &litMatcher{
																												pos:        position{line: 675, col: 37, offset: 29146},
																												val:        "]",
																												ignoreCase: false,
																											},
																										},
																										&anyMatcher{
																											line: 675, col: 41, offset: 29150,
																										},
																									},
																								},
																							},
																						},
																						&choiceExpr{
																							pos: position{line: 675, col: 46, offset: 29155},
																							alternatives: []interface{}{
																								&litMatcher{
																									pos:        position{line: 675, col: 46, offset: 29155},
																									val:        ",",
																									ignoreCase: false,
																								},
																								&andExpr{
																									pos: position{line: 675, col: 52, offset: 29161},
																									expr: &litMatcher{
																										pos:        position{line: 675, col: 53, offset: 29162},
																										val:        "]",
																										ignoreCase: false,
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																		&labeledExpr{
																			pos:   position{line: 664, col: 9, offset: 28593},
																			label: "width",
																			expr: &actionExpr{
																				pos: position{line: 675, col: 19, offset: 29128},
																				run: (*parser).callonDocumentBlock478,
																				expr: &seqExpr{
																					pos: position{line: 675, col: 19, offset: 29128},
																					exprs: []interface{}{
																						&labeledExpr{
																							pos:   position{line: 675, col: 19, offset: 29128},
																							label: "value",
																							expr: &oneOrMoreExpr{
																								pos: position{line: 675, col: 25, offset: 29134},
																								expr: &seqExpr{
																									pos: position{line: 675, col: 26, offset: 29135},
																									exprs: []interface{}{
																										&notExpr{
																											pos: position{line: 675, col: 26, offset: 29135},
																											expr: &litMatcher{
																												pos:        position{line: 675, col: 27, offset: 29136},
																												val:        ",",
																												ignoreCase: false,
																											},
																										},
																										&notExpr{
																											pos: position{line: 675, col: 31, offset: 29140},
																											expr: &litMatcher{
																												pos:        position{line: 675, col: 32, offset: 29141},
																												val:        "=",
																												ignoreCase: false,
																											},
																										},
																										&notExpr{
																											pos: position{line: 675, col: 36, offset: 29145},
																											expr: &litMatcher{
																												pos:        position{line: 675, col: 37, offset: 29146},
																												val:        "]",
																												ignoreCase: false,
																											},
																										},
																										&anyMatcher{
																											line: 675, col: 41, offset: 29150,
																										},
																									},
																								},
																							},
																						},
																						&choiceExpr{
																							pos: position{line: 675, col: 46, offset: 29155},
																							alternatives: []interface{}{
																								&litMatcher{
																									pos:        position{line: 675, col: 46, offset: 29155},
																									val:        ",",
																									ignoreCase: false,
																								},
																								&andExpr{
																									pos: position{line: 675, col: 52, offset: 29161},
																									expr: &litMatcher{
																										pos:        position{line: 675, col: 53, offset: 29162},
																										val:        "]",
																										ignoreCase: false,
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																		&labeledExpr{
																			pos:   position{line: 665, col: 9, offset: 28625},
																			label: "otherAttrs",
																			expr: &zeroOrMoreExpr{
																				pos: position{line: 665, col: 20, offset: 28636},
																				expr: &choiceExpr{
																					pos: position{line: 161, col: 21, offset: 6571},
																					alternatives: []interface{}{
																						&actionExpr{
																							pos: position{line: 161, col: 21, offset: 6571},
																							run: (*parser).callonDocumentBlock497,
																							expr: &seqExpr{
																								pos: position{line: 161, col: 21, offset: 6571},
																								exprs: []interface{}{
																									&labeledExpr{
																										pos:   position{line: 161, col: 21, offset: 6571},
																										label: "key",
																										expr: &actionExpr{
																											pos: position{line: 167, col: 17, offset: 6861},
																											run: (*parser).callonDocumentBlock500,
																											expr: &seqExpr{
																												pos: position{line: 167, col: 17, offset: 6861},
																												exprs: []interface{}{
																													&notExpr{
																														pos: position{line: 167, col: 17, offset: 6861},
																														expr: &actionExpr{
																															pos: position{line: 207, col: 14, offset: 8362},
																															run: (*parser).callonDocumentBlock503,
																															expr: &litMatcher{
																																pos:        position{line: 207, col: 14, offset: 8362},
																																val:        "verse",
																																ignoreCase: false,
																															},
																														},
																													},
																													&labeledExpr{
																														pos:   position{line: 167, col: 28, offset: 6872},
																														label: "key",
																														expr: &oneOrMoreExpr{
																															pos: position{line: 167, col: 32, offset: 6876},
																															expr: &seqExpr{
																																pos: position{line: 167, col: 33, offset: 6877},
																																exprs: []interface{}{
																																	&notExpr{
																																		pos: position{line: 167, col: 33, offset: 6877},
																																		expr: &litMatcher{
																																			pos:        position{line: 167, col: 34, offset: 6878},
																																			val:        "=",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 167, col: 38, offset: 6882},
																																		expr: &litMatcher{
																																			pos:        position{line: 167, col: 39, offset: 6883},
																																			val:        ",",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 167, col: 43, offset: 6887},
																																		expr: &litMatcher{
																																			pos:        position{line: 167, col: 44, offset: 6888},
																																			val:        "]",
																																			ignoreCase: false,
																																		},
																																	},
																																	&anyMatcher{
																																		line: 167, col: 48, offset: 6892,
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																									&litMatcher{
																										pos:        position{line: 161, col: 40, offset: 6590},
																										val:        "=",
																										ignoreCase: false,
																									},
																									&labeledExpr{
																										pos:   position{line: 161, col: 44, offset: 6594},
																										label: "value",
																										expr: &actionExpr{
																											pos: position{line: 171, col: 19, offset: 6940},
																											run: (*parser).callonDocumentBlock517,
																											expr: &labeledExpr{
																												pos:   position{line: 171, col: 19, offset: 6940},
																												label: "value",
																												expr: &zeroOrMoreExpr{
																													pos: position{line: 171, col: 25, offset: 6946},
																													expr: &seqExpr{
																														pos: position{line: 171, col: 26, offset: 6947},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 171, col: 26, offset: 6947},
																																expr: &litMatcher{
																																	pos:        position{line: 171, col: 27, offset: 6948},
																																	val:        "=",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 171, col: 31, offset: 6952},
																																expr: &litMatcher{
																																	pos:        position{line: 171, col: 32, offset: 6953},
																																	val:        ",",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 171, col: 36, offset: 6957},
																																expr: &litMatcher{
																																	pos:        position{line: 171, col: 37, offset: 6958},
																																	val:        "]",
																																	ignoreCase: false,
																																},
																															},
																															&anyMatcher{
																																line: 171, col: 41, offset: 6962,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																									&zeroOrOneExpr{
																										pos: position{line: 161, col: 67, offset: 6617},
																										expr: &litMatcher{
																											pos:        position{line: 161, col: 67, offset: 6617},
																											val:        ",",
																											ignoreCase: false,
																										},
																									},
																									&zeroOrMoreExpr{
																										pos: position{line: 161, col: 72, offset: 6622},
																										expr: &choiceExpr{
																											pos: position{line: 895, col: 7, offset: 37107},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 895, col: 7, offset: 37107},
																													val:        " ",
																													ignoreCase: false,
																												},
																												&actionExpr{
																													pos: position{line: 895, col: 13, offset: 37113},
																													run: (*parser).callonDocumentBlock533,
																													expr: &litMatcher{
																														pos:        position{line: 895, col: 13, offset: 37113},
																														val:        "\t",
																														ignoreCase: false,
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 163, col: 5, offset: 6729},
																							run: (*parser).callonDocumentBlock535,
																							expr: &seqExpr{
																								pos: position{line: 163, col: 5, offset: 6729},
																								exprs: []interface{}{
																									&labeledExpr{
																										pos:   position{line: 163, col: 5, offset: 6729},
																										label: "key",
																										expr: &actionExpr{
																											pos: position{line: 167, col: 17, offset: 6861},
																											run: (*parser).callonDocumentBlock538,
																											expr: &seqExpr{
																												pos: position{line: 167, col: 17, offset: 6861},
																												exprs: []interface{}{
																													&notExpr{
																														pos: position{line: 167, col: 17, offset: 6861},
																														expr: &actionExpr{
																															pos: position{line: 207, col: 14, offset: 8362},
																															run: (*parser).callonDocumentBlock541,
																															expr: &litMatcher{
																																pos:        position{line: 207, col: 14, offset: 8362},
																																val:        "verse",
																																ignoreCase: false,
																															},
																														},
																													},
																													&labeledExpr{
																														pos:   position{line: 167, col: 28, offset: 6872},
																														label: "key",
																														expr: &oneOrMoreExpr{
																															pos: position{line: 167, col: 32, offset: 6876},
																															expr: &seqExpr{
																																pos: position{line: 167, col: 33, offset: 6877},
																																exprs: []interface{}{
																																	&notExpr{
																																		pos: position{line: 167, col: 33, offset: 6877},
																																		expr: &litMatcher{
																																			pos:        position{line: 167, col: 34, offset: 6878},
																																			val:        "=",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 167, col: 38, offset: 6882},
																																		expr: &litMatcher{
																																			pos:        position{line: 167, col: 39, offset: 6883},
																																			val:        ",",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 167, col: 43, offset: 6887},
																																		expr: &litMatcher{
																																			pos:        position{line: 167, col: 44, offset: 6888},
																																			val:        "]",
																																			ignoreCase: false,
																																		},
																																	},
																																	&anyMatcher{
																																		line: 167, col: 48, offset: 6892,
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																									&zeroOrOneExpr{
																										pos: position{line: 163, col: 24, offset: 6748},
																										expr: &litMatcher{
																											pos:        position{line: 163, col: 24, offset: 6748},
																											val:        ",",
																											ignoreCase: false,
																										},
																									},
																									&zeroOrMoreExpr{
																										pos: position{line: 163, col: 29, offset: 6753},
																										expr: &choiceExpr{
																											pos: position{line: 895, col: 7, offset: 37107},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 895, col: 7, offset: 37107},
																													val:        " ",
																													ignoreCase: false,
																												},
																												&actionExpr{
																													pos: position{line: 895, col: 13, offset: 37113},
																													run: (*parser).callonDocumentBlock558,
																													expr: &litMatcher{
																														pos:        position{line: 895, col: 13, offset: 37113},
																														val:        "\t",
																														ignoreCase: false,
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																		&litMatcher{
																			pos:        position{line: 665, col: 40, offset: 28656},
																			val:        "]",
																			ignoreCase: false,
																		},
																	},
																},
															},
															&actionExpr{
																pos: position{line: 667, col: 9, offset: 28791},
																run: (*parser).callonDocumentBlock561,
																expr: &seqExpr{
																	pos: position{line: 667, col: 9, offset: 28791},
																	exprs: []interface{}{
																		&litMatcher{
																			pos:        position{line: 667, col: 9, offset: 28791},
																			val:        "[",
																			ignoreCase: false,
																		},
																		&labeledExpr{
																			pos:   position{line: 667, col: 13, offset: 28795},
																			label: "alt",
																			expr: &actionExpr{
																				pos: position{line: 675, col: 19, offset: 29128},
																				run: (*parser).callonDocumentBlock565,
																				expr: &seqExpr{
																					pos: position{line: 675, col: 19, offset: 29128},
																					exprs: []interface{}{
																						&labeledExpr{
																							pos:   position{line: 675, col: 19, offset: 29128},
																							label: "value",
																							expr: &oneOrMoreExpr{
																								pos: position{line: 675, col: 25, offset: 29134},
																								expr: &seqExpr{
																									pos: position{line: 675, col: 26, offset: 29135},
																									exprs: []interface{}{
																										&notExpr{
																											pos: position{line: 675, col: 26, offset: 29135},
																											expr: &litMatcher{
																												pos:        position{line: 675, col: 27, offset: 29136},
																												val:        ",",
																												ignoreCase: false,
																											},
																										},
																										&notExpr{
																											pos: position{line: 675, col: 31, offset: 29140},
																											expr: &litMatcher{
																												pos:        position{line: 675, col: 32, offset: 29141},
																												val:        "=",
																												ignoreCase: false,
																											},
																										},
																										&notExpr{
																											pos: position{line: 675, col: 36, offset: 29145},
																											expr: &litMatcher{
																												pos:        position{line: 675, col: 37, offset: 29146},
																												val:        "]",
																												ignoreCase: false,
																											},
																										},
																										&anyMatcher{
																											line: 675, col: 41, offset: 29150,
																										},
																									},
																								},
																							},
																						},
																						&choiceExpr{
																							pos: position{line: 675, col: 46, offset: 29155},
																							alternatives: []interface{}{
																								&litMatcher{
																									pos:        position{line: 675, col: 46, offset: 29155},
																									val:        ",",
																									ignoreCase: false,
																								},
																								&andExpr{
																									pos: position{line: 675, col: 52, offset: 29161},
																									expr: &litMatcher{
																										pos:        position{line: 675, col: 53, offset: 29162},
																										val:        "]",
																										ignoreCase: false,
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																		&labeledExpr{
																			pos:   position{line: 668, col: 9, offset: 28825},
																			label: "otherAttrs",
																			expr: &zeroOrMoreExpr{
																				pos: position{line: 668, col: 20, offset: 28836},
																				expr: &choiceExpr{
																					pos: position{line: 161, col: 21, offset: 6571},
																					alternatives: []interface{}{
																						&actionExpr{
																							pos: position{line: 161, col: 21, offset: 6571},
																							run: (*parser).callonDocumentBlock584,
																							expr: &seqExpr{
																								pos: position{line: 161, col: 21, offset: 6571},
																								exprs: []interface{}{
																									&labeledExpr{
																										pos:   position{line: 161, col: 21, offset: 6571},
																										label: "key",
																										expr: &actionExpr{
																											pos: position{line: 167, col: 17, offset: 6861},
																											run: (*parser).callonDocumentBlock587,
																											expr: &seqExpr{
																												pos: position{line: 167, col: 17, offset: 6861},
																												exprs: []interface{}{
																													&notExpr{
																														pos: position{line: 167, col: 17, offset: 6861},
																														expr: &actionExpr{
																															pos: position{line: 207, col: 14, offset: 8362},
																															run: (*parser).callonDocumentBlock590,
																															expr: &litMatcher{
																																pos:        position{line: 207, col: 14, offset: 8362},
																																val:        "verse",
																																ignoreCase: false,
																															},
																														},
																													},
																													&labeledExpr{
																														pos:   position{line: 167, col: 28, offset: 6872},
																														label: "key",
																														expr: &oneOrMoreExpr{
																															pos: position{line: 167, col: 32, offset: 6876},
																															expr: &seqExpr{
																																pos: position{line: 167, col: 33, offset: 6877},
																																exprs: []interface{}{
																																	&notExpr{
																																		pos: position{line: 167, col: 33, offset: 6877},
																																		expr: &litMatcher{
																																			pos:        position{line: 167, col: 34, offset: 6878},
																																			val:        "=",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 167, col: 38, offset: 6882},
																																		expr: &litMatcher{
																																			pos:        position{line: 167, col: 39, offset: 6883},
																																			val:        ",",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 167, col: 43, offset: 6887},
																																		expr: &litMatcher{
																																			pos:        position{line: 167, col: 44, offset: 6888},
																																			val:        "]",
																																			ignoreCase: false,
																																		},
																																	},
																																	&anyMatcher{
																																		line: 167, col: 48, offset: 6892,
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																									&litMatcher{
																										pos:        position{line: 161, col: 40, offset: 6590},
																										val:        "=",
																										ignoreCase: false,
																									},
																									&labeledExpr{
																										pos:   position{line: 161, col: 44, offset: 6594},
																										label: "value",
																										expr: &actionExpr{
																											pos: position{line: 171, col: 19, offset: 6940},
																											run: (*parser).callonDocumentBlock604,
																											expr: &labeledExpr{
																												pos:   position{line: 171, col: 19, offset: 6940},
																												label: "value",
																												expr: &zeroOrMoreExpr{
																													pos: position{line: 171, col: 25, offset: 6946},
																													expr: &seqExpr{
																														pos: position{line: 171, col: 26, offset: 6947},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 171, col: 26, offset: 6947},
																																expr: &litMatcher{
																																	pos:        position{line: 171, col: 27, offset: 6948},
																																	val:        "=",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 171, col: 31, offset: 6952},
																																expr: &litMatcher{
																																	pos:        position{line: 171, col: 32, offset: 6953},
																																	val:        ",",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 171, col: 36, offset: 6957},
																																expr: &litMatcher{
																																	pos:        position{line: 171, col: 37, offset: 6958},
																																	val:        "]",
																																	ignoreCase: false,
																																},
																															},
																															&anyMatcher{
																																line: 171, col: 41, offset: 6962,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																									&zeroOrOneExpr{
																										pos: position{line: 161, col: 67, offset: 6617},
																										expr: &litMatcher{
																											pos:        position{line: 161, col: 67, offset: 6617},
																											val:        ",",
																											ignoreCase: false,
																										},
																									},
																									&zeroOrMoreExpr{
																										pos: position{line: 161, col: 72, offset: 6622},
																										expr: &choiceExpr{
																											pos: position{line: 895, col: 7, offset: 37107},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 895, col: 7, offset: 37107},
																													val:        " ",
																													ignoreCase: false,
																												},
																												&actionExpr{
																													pos: position{line: 895, col: 13, offset: 37113},
																													run: (*parser).callonDocumentBlock620,
																													expr: &litMatcher{
																														pos:        position{line: 895, col: 13, offset: 37113},
																														val:        "\t",
																														ignoreCase: false,
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 163, col: 5, offset: 6729},
																							run: (*parser).callonDocumentBlock622,
																							expr: &seqExpr{
																								pos: position{line: 163, col: 5, offset: 6729},
																								exprs: []interface{}{
																									&labeledExpr{
																										pos:   position{line: 163, col: 5, offset: 6729},
																										label: "key",
																										expr: &actionExpr{
																											pos: position{line: 167, col: 17, offset: 6861},
																											run: (*parser).callonDocumentBlock625,
																											expr: &seqExpr{
																												pos: position{line: 167, col: 17, offset: 6861},
																												exprs: []interface{}{
																													&notExpr{
																														pos: position{line: 167, col: 17, offset: 6861},
																														expr: &actionExpr{
																															pos: position{line: 207, col: 14, offset: 8362},
																															run: (*parser).callonDocumentBlock628,
																															expr: &litMatcher{
																																pos:        position{line: 207, col: 14, offset: 8362},
																																val:        "verse",
																																ignoreCase: false,
																															},
																														},
																													},
																													&labeledExpr{
																														pos:   position{line: 167, col: 28, offset: 6872},
																														label: "key",
																														expr: &oneOrMoreExpr{
																															pos: position{line: 167, col: 32, offset: 6876},
																															expr: &seqExpr{
																																pos: position{line: 167, col: 33, offset: 6877},
																																exprs: []interface{}{
																																	&notExpr{
																																		pos: position{line: 167, col: 33, offset: 6877},
																																		expr: &litMatcher{
																																			pos:        position{line: 167, col: 34, offset: 6878},
																																			val:        "=",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 167, col: 38, offset: 6882},
																																		expr: &litMatcher{
																																			pos:        position{line: 167, col: 39, offset: 6883},
																																			val:        ",",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 167, col: 43, offset: 6887},
																																		expr: &litMatcher{
																																			pos:        position{line: 167, col: 44, offset: 6888},
																																			val:        "]",
																																			ignoreCase: false,
																																		},
																																	},
																																	&anyMatcher{
																																		line: 167, col: 48, offset: 6892,
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																									&zeroOrOneExpr{
																										pos: position{line: 163, col: 24, offset: 6748},
																										expr: &litMatcher{
																											pos:        position{line: 163, col: 24, offset: 6748},
																											val:        ",",
																											ignoreCase: false,
																										},
																									},
																									&zeroOrMoreExpr{
																										pos: position{line: 163, col: 29, offset: 6753},
																										expr: &choiceExpr{
																											pos: position{line: 895, col: 7, offset: 37107},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 895, col: 7, offset: 37107},
																													val:        " ",
																													ignoreCase: false,
																												},
																												&actionExpr{
																													pos: position{line: 895, col: 13, offset: 37113},
																													run: (*parser).callonDocumentBlock645,
																													expr: &litMatcher{
																														pos:        position{line: 895, col: 13, offset: 37113},
																														val:        "\t",
																														ignoreCase: false,
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																		&litMatcher{
																			pos:        position{line: 668, col: 40, offset: 28856},
																			val:        "]",
																			ignoreCase: false,
																		},
																	},
																},
															},
															&actionExpr{
																pos: position{line: 670, col: 9, offset: 28973},
																run: (*parser).callonDocumentBlock648,
																expr: &seqExpr{
																	pos: position{line: 670, col: 9, offset: 28973},
																	exprs: []interface{}{
																		&litMatcher{
																			pos:        position{line: 670, col: 9, offset: 28973},
																			val:        "[",
																			ignoreCase: false,
																		},
																		&labeledExpr{
																			pos:   position{line: 670, col: 13, offset: 28977},
																			label: "otherAttrs",
																			expr: &zeroOrMoreExpr{
																				pos: position{line: 670, col: 24, offset: 28988},
																				expr: &choiceExpr{
																					pos: position{line: 161, col: 21, offset: 6571},
																					alternatives: []interface{}{
																						&actionExpr{
																							pos: position{line: 161, col: 21, offset: 6571},
																							run: (*parser).callonDocumentBlock654,
																							expr: &seqExpr{
																								pos: position{line: 161, col: 21, offset: 6571},
																								exprs: []interface{}{
																									&labeledExpr{
																										pos:   position{line: 161, col: 21, offset: 6571},
																										label: "key",
																										expr: &actionExpr{
																											pos: position{line: 167, col: 17, offset: 6861},
																											run: (*parser).callonDocumentBlock657,
																											expr: &seqExpr{
																												pos: position{line: 167, col: 17, offset: 6861},
																												exprs: []interface{}{
																													&notExpr{
																														pos: position{line: 167, col: 17, offset: 6861},
																														expr: &actionExpr{
																															pos: position{line: 207, col: 14, offset: 8362},
																															run: (*parser).callonDocumentBlock660,
																															expr: &litMatcher{
																																pos:        position{line: 207, col: 14, offset: 8362},
																																val:        "verse",
																																ignoreCase: false,
																															},
																														},
																													},
																													&labeledExpr{
																														pos:   position{line: 167, col: 28, offset: 6872},
																														label: "key",
																														expr: &oneOrMoreExpr{
																															pos: position{line: 167, col: 32, offset: 6876},
																															expr: &seqExpr{
																																pos: position{line: 167, col: 33, offset: 6877},
																																exprs: []interface{}{
																																	&notExpr{
																																		pos: position{line: 167, col: 33, offset: 6877},
																																		expr: &litMatcher{
																																			pos:        position{line: 167, col: 34, offset: 6878},
																																			val:        "=",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 167, col: 38, offset: 6882},
																																		expr: &litMatcher{
																																			pos:        position{line: 167, col: 39, offset: 6883},
																																			val:        ",",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 167, col: 43, offset: 6887},
																																		expr: &litMatcher{
																																			pos:        position{line: 167, col: 44, offset: 6888},
																																			val:        "]",
																																			ignoreCase: false,
																																		},
																																	},
																																	&anyMatcher{
																																		line: 167, col: 48, offset: 6892,
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																									&litMatcher{
																										pos:        position{line: 161, col: 40, offset: 6590},
																										val:        "=",
																										ignoreCase: false,
																									},
																									&labeledExpr{
																										pos:   position{line: 161, col: 44, offset: 6594},
																										label: "value",
																										expr: &actionExpr{
																											pos: position{line: 171, col: 19, offset: 6940},
																											run: (*parser).callonDocumentBlock674,
																											expr: &labeledExpr{
																												pos:   position{line: 171, col: 19, offset: 6940},
																												label: "value",
																												expr: &zeroOrMoreExpr{
																													pos: position{line: 171, col: 25, offset: 6946},
																													expr: &seqExpr{
																														pos: position{line: 171, col: 26, offset: 6947},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 171, col: 26, offset: 6947},
																																expr: &litMatcher{
																																	pos:        position{line: 171, col: 27, offset: 6948},
																																	val:        "=",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 171, col: 31, offset: 6952},
																																expr: &litMatcher{
																																	pos:        position{line: 171, col: 32, offset: 6953},
																																	val:        ",",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 171, col: 36, offset: 6957},
																																expr: &litMatcher{
																																	pos:        position{line: 171, col: 37, offset: 6958},
																																	val:        "]",
																																	ignoreCase: false,
																																},
																															},
																															&anyMatcher{
																																line: 171, col: 41, offset: 6962,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																									&zeroOrOneExpr{
																										pos: position{line: 161, col: 67, offset: 6617},
																										expr: &litMatcher{
																											pos:        position{line: 161, col: 67, offset: 6617},
																											val:        ",",
																											ignoreCase: false,
																										},
																									},
																									&zeroOrMoreExpr{
																										pos: position{line: 161, col: 72, offset: 6622},
																										expr: &choiceExpr{
																											pos: position{line: 895, col: 7, offset: 37107},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 895, col: 7, offset: 37107},
																													val:        " ",
																													ignoreCase: false,
																												},
																												&actionExpr{
																													pos: position{line: 895, col: 13, offset: 37113},
																													run: (*parser).callonDocumentBlock690,
																													expr: &litMatcher{
																														pos:        position{line: 895, col: 13, offset: 37113},
																														val:        "\t",
																														ignoreCase: false,
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 163, col: 5, offset: 6729},
																							run: (*parser).callonDocumentBlock692,
																							expr: &seqExpr{
																								pos: position{line: 163, col: 5, offset: 6729},
																								exprs: []interface{}{
																									&labeledExpr{
																										pos:   position{line: 163, col: 5, offset: 6729},
																										label: "key",
																										expr: &actionExpr{
																											pos: position{line: 167, col: 17, offset: 6861},
																											run: (*parser).callonDocumentBlock695,
																											expr: &seqExpr{
																												pos: position{line: 167, col: 17, offset: 6861},
																												exprs: []interface{}{
																													&notExpr{
																														pos: position{line: 167, col: 17, offset: 6861},
																														expr: &actionExpr{
																															pos: position{line: 207, col: 14, offset: 8362},
																															run: (*parser).callonDocumentBlock698,
																															expr: &litMatcher{
																																pos:        position{line: 207, col: 14, offset: 8362},
																																val:        "verse",
																																ignoreCase: false,
																															},
																														},
																													},
																													&labeledExpr{
																														pos:   position{line: 167, col: 28, offset: 6872},
																														label: "key",
																														expr: &oneOrMoreExpr{
																															pos: position{line: 167, col: 32, offset: 6876},
																															expr: &seqExpr{
																																pos: position{line: 167, col: 33, offset: 6877},
																																exprs: []interface{}{
																																	&notExpr{
																																		pos: position{line: 167, col: 33, offset: 6877},
																																		expr: &litMatcher{
																																			pos:        position{line: 167, col: 34, offset: 6878},
																																			val:        "=",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 167, col: 38, offset: 6882},
																																		expr: &litMatcher{
																																			pos:        position{line: 167, col: 39, offset: 6883},
																																			val:        ",",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 167, col: 43, offset: 6887},
																																		expr: &litMatcher{
																																			pos:        position{line: 167, col: 44, offset: 6888},
																																			val:        "]",
																																			ignoreCase: false,
																																		},
																																	},
																																	&anyMatcher{
																																		line: 167, col: 48, offset: 6892,
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																									&zeroOrOneExpr{
																										pos: position{line: 163, col: 24, offset: 6748},
																										expr: &litMatcher{
																											pos:        position{line: 163, col: 24, offset: 6748},
																											val:        ",",
																											ignoreCase: false,
																										},
																									},
																									&zeroOrMoreExpr{
																										pos: position{line: 163, col: 29, offset: 6753},
																										expr: &choiceExpr{
																											pos: position{line: 895, col: 7, offset: 37107},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 895, col: 7, offset: 37107},
																													val:        " ",
																													ignoreCase: false,
																												},
																												&actionExpr{
																													pos: position{line: 895, col: 13, offset: 37113},
																													run: (*parser).callonDocumentBlock715,
																													expr: &litMatcher{
																														pos:        position{line: 895, col: 13, offset: 37113},
																														val:        "\t",
																														ignoreCase: false,
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																		&litMatcher{
																			pos:        position{line: 670, col: 44, offset: 29008},
																			val:        "]",
																			ignoreCase: false,
																		},
																	},
																},
															},
														},
													},
												},
												&zeroOrMoreExpr{
													pos: position{line: 649, col: 102, offset: 27860},
													expr: &choiceExpr{
														pos: position{line: 895, col: 7, offset: 37107},
														alternatives: []interface{}{
															&litMatcher{
																pos:        position{line: 895, col: 7, offset: 37107},
																val:        " ",
																ignoreCase: false,
															},
															&actionExpr{
																pos: position{line: 895, col: 13, offset: 37113},
																run: (*parser).callonDocumentBlock721,
																expr: &litMatcher{
																	pos:        position{line: 895, col: 13, offset: 37113},
																	val:        "\t",
																	ignoreCase: false,
																},
															},
														},
													},
												},
												&choiceExpr{
													pos: position{line: 903, col: 8, offset: 37209},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 899, col: 12, offset: 37169},
															val:        "\r\n",
															ignoreCase: false,
														},
														&charClassMatcher{
															pos:        position{line: 899, col: 21, offset: 37178},
															val:        "[\\r\\n]",
															chars:      []rune{'\r', '\n'},
															ignoreCase: false,
															inverted:   false,
														},
														&notExpr{
															pos: position{line: 901, col: 8, offset: 37198},
															expr: &anyMatcher{
																line: 901, col: 9, offset: 37199,
															},
														},
													},
												},
											},
										},
									},
									&actionExpr{
										pos: position{line: 837, col: 24, offset: 35395},
										run: (*parser).callonDocumentBlock728,
										expr: &seqExpr{
											pos: position{line: 837, col: 24, offset: 35395},
											exprs: []interface{}{
												&labeledExpr{
													pos:   position{line: 837, col: 24, offset: 35395},
													label: "spaces",
													expr: &oneOrMoreExpr{
														pos: position{line: 837, col: 32, offset: 35403},
														expr: &choiceExpr{
															pos: position{line: 895, col: 7, offset: 37107},
															alternatives: []interface{}{
																&litMatcher{
																	pos:        position{line: 895, col: 7, offset: 37107},
																	val:        " ",
																	ignoreCase: false,
																},
																&actionExpr{
																	pos: position{line: 895, col: 13, offset: 37113},
																	run: (*parser).callonDocumentBlock734,
																	expr: &litMatcher{
																		pos:        position{line: 895, col: 13, offset: 37113},
																		val:        "\t",
																		ignoreCase: false,
																	},
																},
															},
														},
													},
												},
												&notExpr{
													pos: position{line: 837, col: 37, offset: 35408},
													expr: &choiceExpr{
														pos: position{line: 899, col: 12, offset: 37169},
														alternatives: []interface{}{
															&litMatcher{
																pos:        position{line: 899, col: 12, offset: 37169},
																val:        "\r\n",
																ignoreCase: false,
															},
															&charClassMatcher{
																pos:        position{line: 899, col: 21, offset: 37178},
																val:        "[\\r\\n]",
																chars:      []rune{'\r', '\n'},
																ignoreCase: false,
																inverted:   false,
															},
														},
													},
												},
												&labeledExpr{
													pos:   position{line: 837, col: 46, offset: 35417},
													label: "content",
													expr: &actionExpr{
														pos: position{line: 842, col: 24, offset: 35651},
														run: (*parser).callonDocumentBlock741,
														expr: &labeledExpr{
															pos:   position{line: 842, col: 24, offset: 35651},
															label: "content",
															expr: &oneOrMoreExpr{
																pos: position{line: 842, col: 32, offset: 35659},
																expr: &seqExpr{
																	pos: position{line: 842, col: 33, offset: 35660},
																	exprs: []interface{}{
																		&notExpr{
																			pos: position{line: 842, col: 33, offset: 35660},
																			expr: &seqExpr{
																				pos: position{line: 842, col: 35, offset: 35662},
																				exprs: []interface{}{
																					&choiceExpr{
																						pos: position{line: 899, col: 12, offset: 37169},
																						alternatives: []interface{}{
																							&litMatcher{
																								pos:        position{line: 899, col: 12, offset: 37169},
																								val:        "\r\n",
																								ignoreCase: false,
																							},
																							&charClassMatcher{
																								pos:        position{line: 899, col: 21, offset: 37178},
																								val:        "[\\r\\n]",
																								chars:      []rune{'\r', '\n'},
																								ignoreCase: false,
																								inverted:   false,
																							},
																						},
																					},
																					&actionExpr{
																						pos: position{line: 864, col: 14, offset: 36495},
																						run: (*parser).callonDocumentBlock750,
																						expr: &seqExpr{
																							pos: position{line: 864, col: 14, offset: 36495},
																							exprs: []interface{}{
																								&notExpr{
																									pos: position{line: 864, col: 14, offset: 36495},
																									expr: &notExpr{
																										pos: position{line: 901, col: 8, offset: 37198},
																										expr: &anyMatcher{
																											line: 901, col: 9, offset: 37199,
																										},
																									},
																								},
																								&zeroOrMoreExpr{
																									pos: position{line: 864, col: 19, offset: 36500},
																									expr: &choiceExpr{
																										pos: position{line: 895, col: 7, offset: 37107},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 895, col: 7, offset: 37107},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 895, col: 13, offset: 37113},
																												run: (*parser).callonDocumentBlock758,
																												expr: &litMatcher{
																													pos:        position{line: 895, col: 13, offset: 37113},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																								&choiceExpr{
																									pos: position{line: 903, col: 8, offset: 37209},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 899, col: 12, offset: 37169},
																											val:        "\r\n",
																											ignoreCase: false,
																										},
																										&charClassMatcher{
																											pos:        position{line: 899, col: 21, offset: 37178},
																											val:        "[\\r\\n]",
																											chars:      []rune{'\r', '\n'},
																											ignoreCase: false,
																											inverted:   false,
																										},
																										&notExpr{
																											pos: position{line: 901, col: 8, offset: 37198},
																											expr: &anyMatcher{
																												line: 901, col: 9, offset: 37199,
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																		&anyMatcher{
																			line: 842, col: 54, offset: 35681,
																		},
																	},
																},
															},
														},
													},
												},
												&choiceExpr{
													pos: position{line: 847, col: 22, offset: 35787},
													alternatives: []interface{}{
														&seqExpr{
															pos: position{line: 847, col: 22, offset: 35787},
															exprs: []interface{}{
																&choiceExpr{
																	pos: position{line: 899, col: 12, offset: 37169},
																	alternatives: []interface{}{
																		&litMatcher{
																			pos:        position{line: 899, col: 12, offset: 37169},
																			val:        "\r\n",
																			ignoreCase: false,
																		},
																		&charClassMatcher{
																			pos:        position{line: 899, col: 21, offset: 37178},
																			val:        "[\\r\\n]",
																			chars:      []rune{'\r', '\n'},
																			ignoreCase: false,
																			inverted:   false,
																		},
																	},
																},
																&actionExpr{
																	pos: position{line: 864, col: 14, offset: 36495},
																	run: (*parser).callonDocumentBlock771,
																	expr: &seqExpr{
																		pos: position{line: 864, col: 14, offset: 36495},
																		exprs: []interface{}{
																			&notExpr{
																				pos: position{line: 864, col: 14, offset: 36495},
																				expr: &notExpr{
																					pos: position{line: 901, col: 8, offset: 37198},
																					expr: &anyMatcher{
																						line: 901, col: 9, offset: 37199,
																					},
																				},
																			},
																			&zeroOrMoreExpr{
																				pos: position{line: 864, col: 19, offset: 36500},
																				expr: &choiceExpr{
																					pos: position{line: 895, col: 7, offset: 37107},
																					alternatives: []interface{}{
																						&litMatcher{
																							pos:        position{line: 895, col: 7, offset: 37107},
																							val:        " ",
																							ignoreCase: false,
																						},
																						&actionExpr{
																							pos: position{line: 895, col: 13, offset: 37113},
																							run: (*parser).callonDocumentBlock779,
																							expr: &litMatcher{
																								pos:        position{line: 895, col: 13, offset: 37113},
																								val:        "\t",
																								ignoreCase: false,
																							},
																						},
																					},
																				},
																			},
																			&choiceExpr{
																				pos: position{line: 903, col: 8, offset: 37209},
																				alternatives: []interface{}{
																					&litMatcher{
																						pos:        position{line: 899, col: 12, offset: 37169},
																						val:        "\r\n",
																						ignoreCase: false,
																					},
																					&charClassMatcher{
																						pos:        position{line: 899, col: 21, offset: 37178},
																						val:        "[\\r\\n]",
																						chars:      []rune{'\r', '\n'},
																						ignoreCase: false,
																						inverted:   false,
																					},
																					&notExpr{
																						pos: position{line: 901, col: 8, offset: 37198},
																						expr: &anyMatcher{
																							line: 901, col: 9, offset: 37199,
																						},
																					},
																				},
																			},
																		},
																	},
																},
															},
														},
														&litMatcher{
															pos:        position{line: 899, col: 12, offset: 37169},
															val:        "\r\n",
															ignoreCase: false,
														},
														&charClassMatcher{
															pos:        position{line: 899, col: 21, offset: 37178},
															val:        "[\\r\\n]",
															chars:      []rune{'\r', '\n'},
															ignoreCase: false,
															inverted:   false,
														},
														&notExpr{
															pos: position{line: 901, col: 8, offset: 37198},
															expr: &anyMatcher{
																line: 901, col: 9, offset: 37199,
															},
														},
													},
												},
											},
										},
									},
									&actionExpr{
										pos: position{line: 850, col: 39, offset: 35915},
										run: (*parser).callonDocumentBlock790,
										expr: &seqExpr{
											pos: position{line: 850, col: 39, offset: 35915},
											exprs: []interface{}{
												&litMatcher{
													pos:        position{line: 854, col: 26, offset: 36130},
													val:        "....",
													ignoreCase: false,
												},
												&zeroOrMoreExpr{
													pos: position{line: 850, col: 61, offset: 35937},
													expr: &choiceExpr{
														pos: position{line: 895, col: 7, offset: 37107},
														alternatives: []interface{}{
															&litMatcher{
																pos:        position{line: 895, col: 7, offset: 37107},
																val:        " ",
																ignoreCase: false,
															},
															&actionExpr{
																pos: position{line: 895, col: 13, offset: 37113},
																run: (*parser).callonDocumentBlock796,
																expr: &litMatcher{
																	pos:        position{line: 895, col: 13, offset: 37113},
																	val:        "\t",
																	ignoreCase: false,
																},
															},
														},
													},
												},
												&choiceExpr{
													pos: position{line: 899, col: 12, offset: 37169},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 899, col: 12, offset: 37169},
															val:        "\r\n",
															ignoreCase: false,
														},
														&charClassMatcher{
															pos:        position{line: 899, col: 21, offset: 37178},
															val:        "[\\r\\n]",
															chars:      []rune{'\r', '\n'},
															ignoreCase: false,
															inverted:   false,
														},
													},
												},
												&labeledExpr{
													pos:   position{line: 850, col: 73, offset: 35949},
													label: "content",
													expr: &zeroOrMoreExpr{
														pos: position{line: 850, col: 81, offset: 35957},
														expr: &seqExpr{
															pos: position{line: 850, col: 82, offset: 35958},
															exprs: []interface{}{
																&notExpr{
																	pos: position{line: 850, col: 82, offset: 35958},
																	expr: &litMatcher{
																		pos:        position{line: 854, col: 26, offset: 36130},
																		val:        "....",
																		ignoreCase: false,
																	},
																},
																&anyMatcher{
																	line: 850, col: 105, offset: 35981,
																},
															},
														},
													},
												},
												&choiceExpr{
													pos: position{line: 850, col: 110, offset: 35986},
													alternatives: []interface{}{
														&seqExpr{
															pos: position{line: 850, col: 111, offset: 35987},
															exprs: []interface{}{
																&litMatcher{
																	pos:        position{line: 854, col: 26, offset: 36130},
																	val:        "....",
																	ignoreCase: false,
																},
																&zeroOrMoreExpr{
																	pos: position{line: 850, col: 133, offset: 36009},
																	expr: &choiceExpr{
																		pos: position{line: 895, col: 7, offset: 37107},
																		alternatives: []interface{}{
																			&litMatcher{
																				pos:        position{line: 895, col: 7, offset: 37107},
																				val:        " ",
																				ignoreCase: false,
																			},
																			&actionExpr{
																				pos: position{line: 895, col: 13, offset: 37113},
																				run: (*parser).callonDocumentBlock813,
																				expr: &litMatcher{
																					pos:        position{line: 895, col: 13, offset: 37113},
																					val:        "\t",
																					ignoreCase: false,
																				},
																			},
																		},
																	},
																},
																&choiceExpr{
																	pos: position{line: 903, col: 8, offset: 37209},
																	alternatives: []interface{}{
																		&litMatcher{
																			pos:        position{line: 899, col: 12, offset: 37169},
																			val:        "\r\n",
																			ignoreCase: false,
																		},
																		&charClassMatcher{
																			pos:        position{line: 899, col: 21, offset: 37178},
																			val:        "[\\r\\n]",
																			chars:      []rune{'\r', '\n'},
																			ignoreCase: false,
																			inverted:   false,
																		},
																		&notExpr{
																			pos: position{line: 901, col: 8, offset: 37198},
																			expr: &anyMatcher{
																				line: 901, col: 9, offset: 37199,
																			},
																		},
																	},
																},
															},
														},
														&notExpr{
															pos: position{line: 901, col: 8, offset: 37198},
															expr: &anyMatcher{
																line: 901, col: 9, offset: 37199,
															},
														},
													},
												},
											},
										},
									},
									&actionExpr{
										pos: position{line: 857, col: 34, offset: 36225},
										run: (*parser).callonDocumentBlock822,
										expr: &seqExpr{
											pos: position{line: 857, col: 34, offset: 36225},
											exprs: []interface{}{
												&litMatcher{
													pos:        position{line: 857, col: 34, offset: 36225},
													val:        "[literal]",
													ignoreCase: false,
												},
												&zeroOrMoreExpr{
													pos: position{line: 857, col: 46, offset: 36237},
													expr: &choiceExpr{
														pos: position{line: 895, col: 7, offset: 37107},
														alternatives: []interface{}{
															&litMatcher{
																pos:        position{line: 895, col: 7, offset: 37107},
																val:        " ",
																ignoreCase: false,
															},
															&actionExpr{
																pos: position{line: 895, col: 13, offset: 37113},
																run: (*parser).callonDocumentBlock828,
																expr: &litMatcher{
																	pos:        position{line: 895, col: 13, offset: 37113},
																	val:        "\t",
																	ignoreCase: false,
																},
															},
														},
													},
												},
												&choiceExpr{
													pos: position{line: 899, col: 12, offset: 37169},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 899, col: 12, offset: 37169},
															val:        "\r\n",
															ignoreCase: false,
														},
														&charClassMatcher{
															pos:        position{line: 899, col: 21, offset: 37178},
															val:        "[\\r\\n]",
															chars:      []rune{'\r', '\n'},
															ignoreCase: false,
															inverted:   false,
														},
													},
												},
												&labeledExpr{
													pos:   position{line: 857, col: 58, offset: 36249},
													label: "content",
													expr: &actionExpr{
														pos: position{line: 842, col: 24, offset: 35651},
														run: (*parser).callonDocumentBlock834,
														expr: &labeledExpr{
															pos:   position{line: 842, col: 24, offset: 35651},
															label: "content",
															expr: &oneOrMoreExpr{
																pos: position{line: 842, col: 32, offset: 35659},
																expr: &seqExpr{
																	pos: position{line: 842, col: 33, offset: 35660},
																	exprs: []interface{}{
																		&notExpr{
																			pos: position{line: 842, col: 33, offset: 35660},
																			expr: &seqExpr{
																				pos: position{line: 842, col: 35, offset: 35662},
																				exprs: []interface{}{
																					&choiceExpr{
																						pos: position{line: 899, col: 12, offset: 37169},
																						alternatives: []interface{}{
																							&litMatcher{
																								pos:        position{line: 899, col: 12, offset: 37169},
																								val:        "\r\n",
																								ignoreCase: false,
																							},
																							&charClassMatcher{
																								pos:        position{line: 899, col: 21, offset: 37178},
																								val:        "[\\r\\n]",
																								chars:      []rune{'\r', '\n'},
																								ignoreCase: false,
																								inverted:   false,
																							},
																						},
																					},
																					&actionExpr{
																						pos: position{line: 864, col: 14, offset: 36495},
																						run: (*parser).callonDocumentBlock843,
																						expr: &seqExpr{
																							pos: position{line: 864, col: 14, offset: 36495},
																							exprs: []interface{}{
																								&notExpr{
																									pos: position{line: 864, col: 14, offset: 36495},
																									expr: &notExpr{
																										pos: position{line: 901, col: 8, offset: 37198},
																										expr: &anyMatcher{
																											line: 901, col: 9, offset: 37199,
																										},
																									},
																								},
																								&zeroOrMoreExpr{
																									pos: position{line: 864, col: 19, offset: 36500},
																									expr: &choiceExpr{
																										pos: position{line: 895, col: 7, offset: 37107},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 895, col: 7, offset: 37107},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 895, col: 13, offset: 37113},
																												run: (*parser).callonDocumentBlock851,
																												expr: &litMatcher{
																													pos:        position{line: 895, col: 13, offset: 37113},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																								&choiceExpr{
																									pos: position{line: 903, col: 8, offset: 37209},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 899, col: 12, offset: 37169},
																											val:        "\r\n",
																											ignoreCase: false,
																										},
																										&charClassMatcher{
																											pos:        position{line: 899, col: 21, offset: 37178},
																											val:        "[\\r\\n]",
																											chars:      []rune{'\r', '\n'},
																											ignoreCase: false,
																											inverted:   false,
																										},
																										&notExpr{
																											pos: position{line: 901, col: 8, offset: 37198},
																											expr: &anyMatcher{
																												line: 901, col: 9, offset: 37199,
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																		&anyMatcher{
																			line: 842, col: 54, offset: 35681,
																		},
																	},
																},
															},
														},
													},
												},
												&choiceExpr{
													pos: position{line: 847, col: 22, offset: 35787},
													alternatives: []interface{}{
														&seqExpr{
															pos: position{line: 847, col: 22, offset: 35787},
															exprs: []interface{}{
																&choiceExpr{
																	pos: position{line: 899, col: 12, offset: 37169},
																	alternatives: []interface{}{
																		&litMatcher{
																			pos:        position{line: 899, col: 12, offset: 37169},
																			val:        "\r\n",
																			ignoreCase: false,
																		},
																		&charClassMatcher{
																			pos:        position{line: 899, col: 21, offset: 37178},
																			val:        "[\\r\\n]",
																			chars:      []rune{'\r', '\n'},
																			ignoreCase: false,
																			inverted:   false,
																		},
																	},
																},
																&actionExpr{
																	pos: position{line: 864, col: 14, offset: 36495},
																	run: (*parser).callonDocumentBlock864,
																	expr: &seqExpr{
																		pos: position{line: 864, col: 14, offset: 36495},
																		exprs: []interface{}{
																			&notExpr{
																				pos: position{line: 864, col: 14, offset: 36495},
																				expr: &notExpr{
																					pos: position{line: 901, col: 8, offset: 37198},
																					expr: &anyMatcher{
																						line: 901, col: 9, offset: 37199,
																					},
																				},
																			},
																			&zeroOrMoreExpr{
																				pos: position{line: 864, col: 19, offset: 36500},
																				expr: &choiceExpr{
																					pos: position{line: 895, col: 7, offset: 37107},
																					alternatives: []interface{}{
																						&litMatcher{
																							pos:        position{line: 895, col: 7, offset: 37107},
																							val:        " ",
																							ignoreCase: false,
																						},
																						&actionExpr{
																							pos: position{line: 895, col: 13, offset: 37113},
																							run: (*parser).callonDocumentBlock872,
																							expr: &litMatcher{
																								pos:        position{line: 895, col: 13, offset: 37113},
																								val:        "\t",
																								ignoreCase: false,
																							},
																						},
																					},
																				},
																			},
																			&choiceExpr{
																				pos: position{line: 903, col: 8, offset: 37209},
																				alternatives: []interface{}{
																					&litMatcher{
																						pos:        position{line: 899, col: 12, offset: 37169},
																						val:        "\r\n",
																						ignoreCase: false,
																					},
																					&charClassMatcher{
																						pos:        position{line: 899, col: 21, offset: 37178},
																						val:        "[\\r\\n]",
																						chars:      []rune{'\r', '\n'},
																						ignoreCase: false,
																						inverted:   false,
																					},
																					&notExpr{
																						pos: position{line: 901, col: 8, offset: 37198},
																						expr: &anyMatcher{
																							line: 901, col: 9, offset: 37199,
																						},
																					},
																				},
																			},
																		},
																	},
																},
															},
														},
														&litMatcher{
															pos:        position{line: 899, col: 12, offset: 37169},
															val:        "\r\n",
															ignoreCase: false,
														},
														&charClassMatcher{
															pos:        position{line: 899, col: 21, offset: 37178},
															val:        "[\\r\\n]",
															chars:      []rune{'\r', '\n'},
															ignoreCase: false,
															inverted:   false,
														},
														&notExpr{
															pos: position{line: 901, col: 8, offset: 37198},
															expr: &anyMatcher{
																line: 901, col: 9, offset: 37199,
															},
														},
													},
												},
											},
										},
									},
									&ruleRefExpr{
										pos:  position{line: 23, col: 138, offset: 926},
										name: "DelimitedBlock",
									},
									&ruleRefExpr{
										pos:  position{line: 23, col: 155, offset: 943},
										name: "Table",
									},
									&ruleRefExpr{
										pos:  position{line: 23, col: 163, offset: 951},
										name: "Paragraph",
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "FrontMatter",
			pos:  position{line: 30, col: 1, offset: 1159},
			expr: &ruleRefExpr{
				pos:  position{line: 30, col: 16, offset: 1174},
				name: "YamlFrontMatter",
			},
		},
		{
			name: "FrontMatter",
			pos:  position{line: 32, col: 1, offset: 1192},
			expr: &actionExpr{
				pos: position{line: 32, col: 16, offset: 1207},
				run: (*parser).callonFrontMatter1,
				expr: &seqExpr{
					pos: position{line: 32, col: 16, offset: 1207},
					exprs: []interface{}{
						&litMatcher{
							pos:        position{line: 36, col: 26, offset: 1366},
							val:        "---",
							ignoreCase: false,
						},
						&choiceExpr{
							pos: position{line: 903, col: 8, offset: 37209},
							alternatives: []interface{}{
								&litMatcher{
									pos:        position{line: 899, col: 12, offset: 37169},
									val:        "\r\n",
									ignoreCase: false,
								},
								&charClassMatcher{
									pos:        position{line: 899, col: 21, offset: 37178},
									val:        "[\\r\\n]",
									chars:      []rune{'\r', '\n'},
									ignoreCase: false,
									inverted:   false,
								},
								&notExpr{
									pos: position{line: 901, col: 8, offset: 37198},
									expr: &anyMatcher{
										line: 901, col: 9, offset: 37199,
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 32, col: 37, offset: 1228},
							label: "content",
							expr: &actionExpr{
								pos: position{line: 38, col: 27, offset: 1403},
								run: (*parser).callonFrontMatter10,
								expr: &zeroOrMoreExpr{
									pos: position{line: 38, col: 27, offset: 1403},
									expr: &seqExpr{
										pos: position{line: 38, col: 28, offset: 1404},
										exprs: []interface{}{
											&notExpr{
												pos: position{line: 38, col: 28, offset: 1404},
												expr: &seqExpr{
													pos: position{line: 36, col: 26, offset: 1366},
													exprs: []interface{}{
														&litMatcher{
															pos:        position{line: 36, col: 26, offset: 1366},
															val:        "---",
															ignoreCase: false,
														},
														&choiceExpr{
															pos: position{line: 903, col: 8, offset: 37209},
															alternatives: []interface{}{
																&litMatcher{
																	pos:        position{line: 899, col: 12, offset: 37169},
																	val:        "\r\n",
																	ignoreCase: false,
																},
																&charClassMatcher{
																	pos:        position{line: 899, col: 21, offset: 37178},
																	val:        "[\\r\\n]",
																	chars:      []rune{'\r', '\n'},
																	ignoreCase: false,
																	inverted:   false,
																},
																&notExpr{
																	pos: position{line: 901, col: 8, offset: 37198},
																	expr: &anyMatcher{
																		line: 901, col: 9, offset: 37199,
																	},
																},
															},
														},
													},
												},
											},
											&anyMatcher{
												line: 38, col: 50, offset: 1426,
											},
										},
									},
								},
							},
						},
						&litMatcher{
							pos:        position{line: 36, col: 26, offset: 1366},
							val:        "---",
							ignoreCase: false,
						},
						&choiceExpr{
							pos: position{line: 903, col: 8, offset: 37209},
							alternatives: []interface{}{
								&litMatcher{
									pos:        position{line: 899, col: 12, offset: 37169},
									val:        "\r\n",
									ignoreCase: false,
								},
								&charClassMatcher{
									pos:        position{line: 899, col: 21, offset: 37178},
									val:        "[\\r\\n]",
									chars:      []rune{'\r', '\n'},
									ignoreCase: false,
									inverted:   false,
								},
								&notExpr{
									pos: position{line: 901, col: 8, offset: 37198},
									expr: &anyMatcher{
										line: 901, col: 9, offset: 37199,
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "DocumentHeader",
			pos:  position{line: 46, col: 1, offset: 1650},
			expr: &actionExpr{
				pos: position{line: 46, col: 19, offset: 1668},
				run: (*parser).callonDocumentHeader1,
				expr: &seqExpr{
					pos: position{line: 46, col: 19, offset: 1668},
					exprs: []interface{}{
						&labeledExpr{
							pos:   position{line: 46, col: 19, offset: 1668},
							label: "header",
							expr: &ruleRefExpr{
								pos:  position{line: 46, col: 27, offset: 1676},
								name: "Section0Title",
							},
						},
						&labeledExpr{
							pos:   position{line: 46, col: 42, offset: 1691},
							label: "authors",
							expr: &zeroOrOneExpr{
								pos: position{line: 46, col: 51, offset: 1700},
								expr: &choiceExpr{
									pos: position{line: 50, col: 20, offset: 1914},
									alternatives: []interface{}{
										&actionExpr{
											pos: position{line: 52, col: 30, offset: 2001},
											run: (*parser).callonDocumentHeader8,
											expr: &seqExpr{
												pos: position{line: 52, col: 30, offset: 2001},
												exprs: []interface{}{
													&zeroOrMoreExpr{
														pos: position{line: 52, col: 30, offset: 2001},
														expr: &choiceExpr{
															pos: position{line: 895, col: 7, offset: 37107},
															alternatives: []interface{}{
																&litMatcher{
																	pos:        position{line: 895, col: 7, offset: 37107},
																	val:        " ",
																	ignoreCase: false,
																},
																&actionExpr{
																	pos: position{line: 895, col: 13, offset: 37113},
																	run: (*parser).callonDocumentHeader13,
																	expr: &litMatcher{
																		pos:        position{line: 895, col: 13, offset: 37113},
																		val:        "\t",
																		ignoreCase: false,
																	},
																},
															},
														},
													},
													&notExpr{
														pos: position{line: 52, col: 34, offset: 2005},
														expr: &litMatcher{
															pos:        position{line: 52, col: 35, offset: 2006},
															val:        ":",
															ignoreCase: false,
														},
													},
													&labeledExpr{
														pos:   position{line: 52, col: 39, offset: 2010},
														label: "authors",
														expr: &oneOrMoreExpr{
															pos: position{line: 52, col: 48, offset: 2019},
															expr: &actionExpr{
																pos: position{line: 60, col: 19, offset: 2270},
																run: (*parser).callonDocumentHeader19,
																expr: &seqExpr{
																	pos: position{line: 60, col: 19, offset: 2270},
																	exprs: []interface{}{
																		&zeroOrMoreExpr{
																			pos: position{line: 60, col: 19, offset: 2270},
																			expr: &choiceExpr{
																				pos: position{line: 895, col: 7, offset: 37107},
																				alternatives: []interface{}{
																					&litMatcher{
																						pos:        position{line: 895, col: 7, offset: 37107},
																						val:        " ",
																						ignoreCase: false,
																					},
																					&actionExpr{
																						pos: position{line: 895, col: 13, offset: 37113},
																						run: (*parser).callonDocumentHeader24,
																						expr: &litMatcher{
																							pos:        position{line: 895, col: 13, offset: 37113},
																							val:        "\t",
																							ignoreCase: false,
																						},
																					},
																				},
																			},
																		},
																		&labeledExpr{
																			pos:   position{line: 60, col: 23, offset: 2274},
																			label: "namePart1",
																			expr: &seqExpr{
																				pos: position{line: 65, col: 27, offset: 2610},
																				exprs: []interface{}{
																					&notExpr{
																						pos: position{line: 65, col: 27, offset: 2610},
																						expr: &litMatcher{
																							pos:        position{line: 65, col: 28, offset: 2611},
																							val:        "<",
																							ignoreCase: false,
																						},
																					},
																					&notExpr{
																						pos: position{line: 65, col: 32, offset: 2615},
																						expr: &litMatcher{
																							pos:        position{line: 65, col: 33, offset: 2616},
																							val:        ";",
																							ignoreCase: false,
																						},
																					},
																					&oneOrMoreExpr{
																						pos: position{line: 65, col: 37, offset: 2620},
																						expr: &seqExpr{
																							pos: position{line: 65, col: 38, offset: 2621},
																							exprs: []interface{}{
																								&notExpr{
																									pos: position{line: 65, col: 38, offset: 2621},
																									expr: &choiceExpr{
																										pos: position{line: 899, col: 12, offset: 37169},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 899, col: 12, offset: 37169},
																												val:        "\r\n",
																												ignoreCase: false,
																											},
																											&charClassMatcher{
																												pos:        position{line: 899, col: 21, offset: 37178},
																												val:        "[\\r\\n]",
																												chars:      []rune{'\r', '\n'},
																												ignoreCase: false,
																												inverted:   false,
																											},
																										},
																									},
																								},
																								&notExpr{
																									pos: position{line: 65, col: 47, offset: 2630},
																									expr: &choiceExpr{
																										pos: position{line: 895, col: 7, offset: 37107},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 895, col: 7, offset: 37107},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 895, col: 13, offset: 37113},
																												run: (*parser).callonDocumentHeader41,
																												expr: &litMatcher{
																													pos:        position{line: 895, col: 13, offset: 37113},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																								&anyMatcher{
																									line: 65, col: 51, offset: 2634,
																								},
																							},
																						},
																					},
																					&zeroOrMoreExpr{
																						pos: position{line: 65, col: 55, offset: 2638},
																						expr: &choiceExpr{
																							pos: position{line: 895, col: 7, offset: 37107},
																							alternatives: []interface{}{
																								&litMatcher{
																									pos:        position{line: 895, col: 7, offset: 37107},
																									val:        " ",
																									ignoreCase: false,
																								},
																								&actionExpr{
																									pos: position{line: 895, col: 13, offset: 37113},
																									run: (*parser).callonDocumentHeader47,
																									expr: &litMatcher{
																										pos:        position{line: 895, col: 13, offset: 37113},
																										val:        "\t",
																										ignoreCase: false,
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																		&labeledExpr{
																			pos:   position{line: 60, col: 58, offset: 2309},
																			label: "namePart2",
																			expr: &zeroOrOneExpr{
																				pos: position{line: 60, col: 68, offset: 2319},
																				expr: &seqExpr{
																					pos: position{line: 65, col: 27, offset: 2610},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 65, col: 27, offset: 2610},
																							expr: &litMatcher{
																								pos:        position{line: 65, col: 28, offset: 2611},
																								val:        "<",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 65, col: 32, offset: 2615},
																							expr: &litMatcher{
																								pos:        position{line: 65, col: 33, offset: 2616},
																								val:        ";",
																								ignoreCase: false,
																							},
																						},
																						&oneOrMoreExpr{
																							pos: position{line: 65, col: 37, offset: 2620},
																							expr: &seqExpr{
																								pos: position{line: 65, col: 38, offset: 2621},
																								exprs: []interface{}{
																									&notExpr{
																										pos: position{line: 65, col: 38, offset: 2621},
																										expr: &choiceExpr{
																											pos: position{line: 899, col: 12, offset: 37169},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 899, col: 12, offset: 37169},
																													val:        "\r\n",
																													ignoreCase: false,
																												},
																												&charClassMatcher{
																													pos:        position{line: 899, col: 21, offset: 37178},
																													val:        "[\\r\\n]",
																													chars:      []rune{'\r', '\n'},
																													ignoreCase: false,
																													inverted:   false,
																												},
																											},
																										},
																									},
																									&notExpr{
																										pos: position{line: 65, col: 47, offset: 2630},
																										expr: &choiceExpr{
																											pos: position{line: 895, col: 7, offset: 37107},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 895, col: 7, offset: 37107},
																													val:        " ",
																													ignoreCase: false,
																												},
																												&actionExpr{
																													pos: position{line: 895, col: 13, offset: 37113},
																													run: (*parser).callonDocumentHeader65,
																													expr: &litMatcher{
																														pos:        position{line: 895, col: 13, offset: 37113},
																														val:        "\t",
																														ignoreCase: false,
																													},
																												},
																											},
																										},
																									},
																									&anyMatcher{
																										line: 65, col: 51, offset: 2634,
																									},
																								},
																							},
																						},
																						&zeroOrMoreExpr{
																							pos: position{line: 65, col: 55, offset: 2638},
																							expr: &choiceExpr{
																								pos: position{line: 895, col: 7, offset: 37107},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 895, col: 7, offset: 37107},
																										val:        " ",
																										ignoreCase: false,
																									},
																									&actionExpr{
																										pos: position{line: 895, col: 13, offset: 37113},
																										run: (*parser).callonDocumentHeader71,
																										expr: &litMatcher{
																											pos:        position{line: 895, col: 13, offset: 37113},
																											val:        "\t",
																											ignoreCase: false,
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																		&labeledExpr{
																			pos:   position{line: 60, col: 94, offset: 2345},
																			label: "namePart3",
																			expr: &zeroOrOneExpr{
																				pos: position{line: 60, col: 104, offset: 2355},
																				expr: &seqExpr{
																					pos: position{line: 65, col: 27, offset: 2610},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 65, col: 27, offset: 2610},
																							expr: &litMatcher{
																								pos:        position{line: 65, col: 28, offset: 2611},
																								val:        "<",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 65, col: 32, offset: 2615},
																							expr: &litMatcher{
																								pos:        position{line: 65, col: 33, offset: 2616},
																								val:        ";",
																								ignoreCase: false,
																							},
																						},
																						&oneOrMoreExpr{
																							pos: position{line: 65, col: 37, offset: 2620},
																							expr: &seqExpr{
																								pos: position{line: 65, col: 38, offset: 2621},
																								exprs: []interface{}{
																									&notExpr{
																										pos: position{line: 65, col: 38, offset: 2621},
																										expr: &choiceExpr{
																											pos: position{line: 899, col: 12, offset: 37169},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 899, col: 12, offset: 37169},
																													val:        "\r\n",
																													ignoreCase: false,
																												},
																												&charClassMatcher{
																													pos:        position{line: 899, col: 21, offset: 37178},
																													val:        "[\\r\\n]",
																													chars:      []rune{'\r', '\n'},
																													ignoreCase: false,
																													inverted:   false,
																												},
																											},
																										},
																									},
																									&notExpr{
																										pos: position{line: 65, col: 47, offset: 2630},
																										expr: &choiceExpr{
																											pos: position{line: 895, col: 7, offset: 37107},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 895, col: 7, offset: 37107},
																													val:        " ",
																													ignoreCase: false,
																												},
																												&actionExpr{
																													pos: position{line: 895, col: 13, offset: 37113},
																													run: (*parser).callonDocumentHeader89,
																													expr: &litMatcher{
																														pos:        position{line: 895, col: 13, offset: 37113},
																														val:        "\t",
																														ignoreCase: false,
																													},
																												},
																											},
																										},
																									},
																									&anyMatcher{
																										line: 65, col: 51, offset: 2634,
																									},
																								},
																							},
																						},
																						&zeroOrMoreExpr{
																							pos: position{line: 65, col: 55, offset: 2638},
																							expr: &choiceExpr{
																								pos: position{line: 895, col: 7, offset: 37107},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 895, col: 7, offset: 37107},
																										val:        " ",
																										ignoreCase: false,
																									},
																									&actionExpr{
																										pos: position{line: 895, col: 13, offset: 37113},
																										run: (*parser).callonDocumentHeader95,
																										expr: &litMatcher{
																											pos:        position{line: 895, col: 13, offset: 37113},
																											val:        "\t",
																											ignoreCase: false,
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																		&labeledExpr{
																			pos:   position{line: 60, col: 130, offset: 2381},
																			label: "email",
																			expr: &zeroOrOneExpr{
																				pos: position{line: 60, col: 136, offset: 2387},
																				expr: &seqExpr{
																					pos: position{line: 67, col: 24, offset: 2666},
																					exprs: []interface{}{
																						&litMatcher{
																							pos:        position{line: 67, col: 24, offset: 2666},
																							val:        "<",
																							ignoreCase: false,
																						},
																						&labeledExpr{
																							pos:   position{line: 67, col: 28, offset: 2670},
																							label: "email",
																							expr: &oneOrMoreExpr{
																								pos: position{line: 67, col: 34, offset: 2676},
																								expr: &seqExpr{
																									pos: position{line: 67, col: 35, offset: 2677},
																									exprs: []interface{}{
																										&notExpr{
																											pos: position{line: 67, col: 35, offset: 2677},
																											expr: &litMatcher{
																												pos:        position{line: 67, col: 36, offset: 2678},
																												val:        ">",
																												ignoreCase: false,
																											},
																										},
																										&notExpr{
																											pos: position{line: 67, col: 40, offset: 2682},
																											expr: &choiceExpr{
																												pos: position{line: 903, col: 8, offset: 37209},
																												alternatives: []interface{}{
																													&litMatcher{
																														pos:        position{line: 899, col: 12, offset: 37169},
																														val:        "\r\n",
																														ignoreCase: false,
																													},
																													&charClassMatcher{
																														pos:        position{line: 899, col: 21, offset: 37178},
																														val:        "[\\r\\n]",
																														chars:      []rune{'\r', '\n'},
																														ignoreCase: false,
																														inverted:   false,
																													},
																													&notExpr{
																														pos: position{line: 901, col: 8, offset: 37198},
																														expr: &anyMatcher{
																															line: 901, col: 9, offset: 37199,
																														},
																													},
																												},
																											},
																										},
																										&anyMatcher{
																											line: 67, col: 45, offset: 2687,
																										},
																									},
																								},
																							},
																						},
																						&litMatcher{
																							pos:        position{line: 67, col: 49, offset: 2691},
																							val:        ">",
																							ignoreCase: false,
																						},
																					},
																				},
																			},
																		},
																		&zeroOrMoreExpr{
																			pos: position{line: 60, col: 159, offset: 2410},
																			expr: &choiceExpr{
																				pos: position{line: 895, col: 7, offset: 37107},
																				alternatives: []interface{}{
																					&litMatcher{
																						pos:        position{line: 895, col: 7, offset: 37107},
																						val:        " ",
																						ignoreCase: false,
																					},
																					&actionExpr{
																						pos: position{line: 895, col: 13, offset: 37113},
																						run: (*parser).callonDocumentHeader117,
																						expr: &litMatcher{
																							pos:        position{line: 895, col: 13, offset: 37113},
																							val:        "\t",
																							ignoreCase: false,
																						},
																					},
																				},
																			},
																		},
																		&zeroOrOneExpr{
																			pos: position{line: 60, col: 163, offset: 2414},
																			expr: &litMatcher{
																				pos:        position{line: 60, col: 163, offset: 2414},
																				val:        ";",
																				ignoreCase: false,
																			},
																		},
																		&zeroOrMoreExpr{
																			pos: position{line: 60, col: 168, offset: 2419},
																			expr: &choiceExpr{
																				pos: position{line: 895, col: 7, offset: 37107},
																				alternatives: []interface{}{
																					&litMatcher{
																						pos:        position{line: 895, col: 7, offset: 37107},
																						val:        " ",
																						ignoreCase: false,
																					},
																					&actionExpr{
																						pos: position{line: 895, col: 13, offset: 37113},
																						run: (*parser).callonDocumentHeader124,
																						expr: &litMatcher{
																							pos:        position{line: 895, col: 13, offset: 37113},
																							val:        "\t",
																							ignoreCase: false,
																						},
																					},
																				},
																			},
																		},
																	},
																},
															},
														},
													},
													&choiceExpr{
														pos: position{line: 903, col: 8, offset: 37209},
														alternatives: []interface{}{
															&litMatcher{
																pos:        position{line: 899, col: 12, offset: 37169},
																val:        "\r\n",
																ignoreCase: false,
															},
															&charClassMatcher{
																pos:        position{line: 899, col: 21, offset: 37178},
																val:        "[\\r\\n]",
																chars:      []rune{'\r', '\n'},
																ignoreCase: false,
																inverted:   false,
															},
															&notExpr{
																pos: position{line: 901, col: 8, offset: 37198},
																expr: &anyMatcher{
																	line: 901, col: 9, offset: 37199,
																},
															},
														},
													},
												},
											},
										},
										&actionExpr{
											pos: position{line: 56, col: 33, offset: 2138},
											run: (*parser).callonDocumentHeader131,
											expr: &seqExpr{
												pos: position{line: 56, col: 33, offset: 2138},
												exprs: []interface{}{
													&zeroOrMoreExpr{
														pos: position{line: 56, col: 33, offset: 2138},
														expr: &choiceExpr{
															pos: position{line: 895, col: 7, offset: 37107},
															alternatives: []interface{}{
																&litMatcher{
																	pos:        position{line: 895, col: 7, offset: 37107},
																	val:        " ",
																	ignoreCase: false,
																},
																&actionExpr{
																	pos: position{line: 895, col: 13, offset: 37113},
																	run: (*parser).callonDocumentHeader136,
																	expr: &litMatcher{
																		pos:        position{line: 895, col: 13, offset: 37113},
																		val:        "\t",
																		ignoreCase: false,
																	},
																},
															},
														},
													},
													&litMatcher{
														pos:        position{line: 56, col: 37, offset: 2142},
														val:        ":author:",
														ignoreCase: false,
													},
													&labeledExpr{
														pos:   position{line: 56, col: 48, offset: 2153},
														label: "author",
														expr: &actionExpr{
															pos: position{line: 60, col: 19, offset: 2270},
															run: (*parser).callonDocumentHeader140,
															expr: &seqExpr{
																pos: position{line: 60, col: 19, offset: 2270},
																exprs: []interface{}{
																	&zeroOrMoreExpr{
																		pos: position{line: 60, col: 19, offset: 2270},
																		expr: &choiceExpr{
																			pos: position{line: 895, col: 7, offset: 37107},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 895, col: 7, offset: 37107},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 895, col: 13, offset: 37113},
																					run: (*parser).callonDocumentHeader145,
																					expr: &litMatcher{
																						pos:        position{line: 895, col: 13, offset: 37113},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 60, col: 23, offset: 2274},
																		label: "namePart1",
																		expr: &seqExpr{
																			pos: position{line: 65, col: 27, offset: 2610},
																			exprs: []interface{}{
																				&notExpr{
																					pos: position{line: 65, col: 27, offset: 2610},
																					expr: &litMatcher{
																						pos:        position{line: 65, col: 28, offset: 2611},
																						val:        "<",
																						ignoreCase: false,
																					},
																				},
																				&notExpr{
																					pos: position{line: 65, col: 32, offset: 2615},
																					expr: &litMatcher{
																						pos:        position{line: 65, col: 33, offset: 2616},
																						val:        ";",
																						ignoreCase: false,
																					},
																				},
																				&oneOrMoreExpr{
																					pos: position{line: 65, col: 37, offset: 2620},
																					expr: &seqExpr{
																						pos: position{line: 65, col: 38, offset: 2621},
																						exprs: []interface{}{
																							&notExpr{
																								pos: position{line: 65, col: 38, offset: 2621},
																								expr: &choiceExpr{
																									pos: position{line: 899, col: 12, offset: 37169},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 899, col: 12, offset: 37169},
																											val:        "\r\n",
																											ignoreCase: false,
																										},
																										&charClassMatcher{
																											pos:        position{line: 899, col: 21, offset: 37178},
																											val:        "[\\r\\n]",
																											chars:      []rune{'\r', '\n'},
																											ignoreCase: false,
																											inverted:   false,
																										},
																									},
																								},
																							},
																							&notExpr{
																								pos: position{line: 65, col: 47, offset: 2630},
																								expr: &choiceExpr{
																									pos: position{line: 895, col: 7, offset: 37107},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 895, col: 7, offset: 37107},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 895, col: 13, offset: 37113},
																											run: (*parser).callonDocumentHeader162,
																											expr: &litMatcher{
																												pos:        position{line: 895, col: 13, offset: 37113},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																							&anyMatcher{
																								line: 65, col: 51, offset: 2634,
																							},
																						},
																					},
																				},
																				&zeroOrMoreExpr{
																					pos: position{line: 65, col: 55, offset: 2638},
																					expr: &choiceExpr{
																						pos: position{line: 895, col: 7, offset: 37107},
																						alternatives: []interface{}{
																							&litMatcher{
																								pos:        position{line: 895, col: 7, offset: 37107},
																								val:        " ",
																								ignoreCase: false,
																							},
																							&actionExpr{
																								pos: position{line: 895, col: 13, offset: 37113},
																								run: (*parser).callonDocumentHeader168,
																								expr: &litMatcher{
																									pos:        position{line: 895, col: 13, offset: 37113},
																									val:        "\t",
																									ignoreCase: false,
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 60, col: 58, offset: 2309},
																		label: "namePart2",
																		expr: &zeroOrOneExpr{
																			pos: position{line: 60, col: 68, offset: 2319},
																			expr: &seqExpr{
																				pos: position{line: 65, col: 27, offset: 2610},
																				exprs: []interface{}{
																					&notExpr{
																						pos: position{line: 65, col: 27, offset: 2610},
																						expr: &litMatcher{
																							pos:        position{line: 65, col: 28, offset: 2611},
																							val:        "<",
																							ignoreCase: false,
																						},
																					},
																					&notExpr{
																						pos: position{line: 65, col: 32, offset: 2615},
																						expr: &litMatcher{
																							pos:        position{line: 65, col: 33, offset: 2616},
																							val:        ";",
																							ignoreCase: false,
																						},
																					},
																					&oneOrMoreExpr{
																						pos: position{line: 65, col: 37, offset: 2620},
																						expr: &seqExpr{
																							pos: position{line: 65, col: 38, offset: 2621},
																							exprs: []interface{}{
																								&notExpr{
																									pos: position{line: 65, col: 38, offset: 2621},
																									expr: &choiceExpr{
																										pos: position{line: 899, col: 12, offset: 37169},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 899, col: 12, offset: 37169},
																												val:        "\r\n",
																												ignoreCase: false,
																											},
																											&charClassMatcher{
																												pos:        position{line: 899, col: 21, offset: 37178},
																												val:        "[\\r\\n]",
																												chars:      []rune{'\r', '\n'},
																												ignoreCase: false,
																												inverted:   false,
																											},
																										},
																									},
																								},
																								&notExpr{
																									pos: position{line: 65, col: 47, offset: 2630},
																									expr: &choiceExpr{
																										pos: position{line: 895, col: 7, offset: 37107},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 895, col: 7, offset: 37107},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 895, col: 13, offset: 37113},
																												run: (*parser).callonDocumentHeader65,
																												expr: &litMatcher{
																													pos:        position{line: 895, col: 13, offset: 37113},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																								&anyMatcher{
																									line: 65, col: 51, offset: 2634,
																								},
																							},
																						},
																					},
																					&zeroOrMoreExpr{
																						pos: position{line: 65, col: 55, offset: 2638},
																						expr: &choiceExpr{
																							pos: position{line: 895, col: 7, offset: 37107},
																							alternatives: []interface{}{
																								&litMatcher{
																									pos:        position{line: 895, col: 7, offset: 37107},
																									val:        " ",
																									ignoreCase: false,
																								},
																								&actionExpr{
																									pos: position{line: 895, col: 13, offset: 37113},
																									run: (*parser).callonDocumentHeader71,
																									expr: &litMatcher{
																										pos:        position{line: 895, col: 13, offset: 37113},
																										val:        "\t",
																										ignoreCase: false,
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 60, col: 94, offset: 2345},
																		label: "namePart3",
																		expr: &zeroOrOneExpr{
																			pos: position{line: 60, col: 104, offset: 2355},
																			expr: &seqExpr{
																				pos: position{line: 65, col: 27, offset: 2610},
																				exprs: []interface{}{
																					&notExpr{
																						pos: position{line: 65, col: 27, offset: 2610},
																						expr: &litMatcher{
																							pos:        position{line: 65, col: 28, offset: 2611},
																							val:        "<",
																							ignoreCase: false,
																						},
																					},
																					&notExpr{
																						pos: position{line: 65, col: 32, offset: 2615},
																						expr: &litMatcher{
																							pos:        position{line: 65, col: 33, offset: 2616},
																							val:        ";",
																							ignoreCase: false,
																						},
																					},
																					&oneOrMoreExpr{
																						pos: position{line: 65, col: 37, offset: 2620},
																						expr: &seqExpr{
																							pos: position{line: 65, col: 38, offset: 2621},
																							exprs: []interface{}{
																								&notExpr{
																									pos: position{line: 65, col: 38, offset: 2621},
																									expr: &choiceExpr{
																										pos: position{line: 899, col: 12, offset: 37169},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 899, col: 12, offset: 37169},
																												val:        "\r\n",
																												ignoreCase: false,
																											},
																											&charClassMatcher{
																												pos:        position{line: 899, col: 21, offset: 37178},
																												val:        "[\\r\\n]",
																												chars:      []rune{'\r', '\n'},
																												ignoreCase: false,
																												inverted:   false,
																											},
																										},
																									},
																								},
																								&notExpr{
																									pos: position{line: 65, col: 47, offset: 2630},
																									expr: &choiceExpr{
																										pos: position{line: 895, col: 7, offset: 37107},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 895, col: 7, offset: 37107},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 895, col: 13, offset: 37113},
																												run: (*parser).callonDocumentHeader89,
																												expr: &litMatcher{
																													pos:        position{line: 895, col: 13, offset: 37113},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																								&anyMatcher{
																									line: 65, col: 51, offset: 2634,
																								},
																							},
																						},
																					},
																					&zeroOrMoreExpr{
																						pos: position{line: 65, col: 55, offset: 2638},
																						expr: &choiceExpr{
																							pos: position{line: 895, col: 7, offset: 37107},
																							alternatives: []interface{}{
																								&litMatcher{
																									pos:        position{line: 895, col: 7, offset: 37107},
																									val:        " ",
																									ignoreCase: false,
																								},
																								&actionExpr{
																									pos: position{line: 895, col: 13, offset: 37113},
																									run: (*parser).callonDocumentHeader95,
																									expr: &litMatcher{
																										pos:        position{line: 895, col: 13, offset: 37113},
																										val:        "\t",
																										ignoreCase: false,
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 60, col: 130, offset: 2381},
																		label: "email",
																		expr: &zeroOrOneExpr{
																			pos: position{line: 60, col: 136, offset: 2387},
																			expr: &seqExpr{
																				pos: position{line: 67, col: 24, offset: 2666},
																				exprs: []interface{}{
																					&litMatcher{
																						pos:        position{line: 67, col: 24, offset: 2666},
																						val:        "<",
																						ignoreCase: false,
																					},
																					&labeledExpr{
																						pos:   position{line: 67, col: 28, offset: 2670},
																						label: "email",
																						expr: &oneOrMoreExpr{
																							pos: position{line: 67, col: 34, offset: 2676},
																							expr: &seqExpr{
																								pos: position{line: 67, col: 35, offset: 2677},
																								exprs: []interface{}{
																									&notExpr{
																										pos: position{line: 67, col: 35, offset: 2677},
																										expr: &litMatcher{
																											pos:        position{line: 67, col: 36, offset: 2678},
																											val:        ">",
																											ignoreCase: false,
																										},
																									},
																									&notExpr{
																										pos: position{line: 67, col: 40, offset: 2682},
																										expr: &choiceExpr{
																											pos: position{line: 903, col: 8, offset: 37209},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 899, col: 12, offset: 37169},
																													val:        "\r\n",
																													ignoreCase: false,
																												},
																												&charClassMatcher{
																													pos:        position{line: 899, col: 21, offset: 37178},
																													val:        "[\\r\\n]",
																													chars:      []rune{'\r', '\n'},
																													ignoreCase: false,
																													inverted:   false,
																												},
																												&notExpr{
																													pos: position{line: 901, col: 8, offset: 37198},
																													expr: &anyMatcher{
																														line: 901, col: 9, offset: 37199,
																													},
																												},
																											},
																										},
																									},
																									&anyMatcher{
																										line: 67, col: 45, offset: 2687,
																									},
																								},
																							},
																						},
																					},
																					&litMatcher{
																						pos:        position{line: 67, col: 49, offset: 2691},
																						val:        ">",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&zeroOrMoreExpr{
																		pos: position{line: 60, col: 159, offset: 2410},
																		expr: &choiceExpr{
																			pos: position{line: 895, col: 7, offset: 37107},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 895, col: 7, offset: 37107},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 895, col: 13, offset: 37113},
																					run: (*parser).callonDocumentHeader238,
																					expr: &litMatcher{
																						pos:        position{line: 895, col: 13, offset: 37113},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&zeroOrOneExpr{
																		pos: position{line: 60, col: 163, offset: 2414},
																		expr: &litMatcher{
																			pos:        position{line: 60, col: 163, offset: 2414},
																			val:        ";",
																			ignoreCase: false,
																		},
																	},
																	&zeroOrMoreExpr{
																		pos: position{line: 60, col: 168, offset: 2419},
																		expr: &choiceExpr{
																			pos: position{line: 895, col: 7, offset: 37107},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 895, col: 7, offset: 37107},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 895, col: 13, offset: 37113},
																					run: (*parser).callonDocumentHeader245,
																					expr: &litMatcher{
																						pos:        position{line: 895, col: 13, offset: 37113},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																},
															},
														},
													},
												},
											},
										},
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 46, col: 69, offset: 1718},
							label: "revision",
							expr: &zeroOrOneExpr{
								pos: position{line: 46, col: 79, offset: 1728},
								expr: &actionExpr{
									pos: position{line: 71, col: 21, offset: 2847},
									run: (*parser).callonDocumentHeader249,
									expr: &seqExpr{
										pos: position{line: 71, col: 21, offset: 2847},
										exprs: []interface{}{
											&zeroOrMoreExpr{
												pos: position{line: 71, col: 21, offset: 2847},
												expr: &choiceExpr{
													pos: position{line: 895, col: 7, offset: 37107},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 895, col: 7, offset: 37107},
															val:        " ",
															ignoreCase: false,
														},
														&actionExpr{
															pos: position{line: 895, col: 13, offset: 37113},
															run: (*parser).callonDocumentHeader254,
															expr: &litMatcher{
																pos:        position{line: 895, col: 13, offset: 37113},
																val:        "\t",
																ignoreCase: false,
															},
														},
													},
												},
											},
											&notExpr{
												pos: position{line: 71, col: 25, offset: 2851},
												expr: &litMatcher{
													pos:        position{line: 71, col: 26, offset: 2852},
													val:        ":",
													ignoreCase: false,
												},
											},
											&labeledExpr{
												pos:   position{line: 71, col: 30, offset: 2856},
												label: "revnumber",
												expr: &zeroOrOneExpr{
													pos: position{line: 71, col: 40, offset: 2866},
													expr: &choiceExpr{
														pos: position{line: 76, col: 27, offset: 3169},
														alternatives: []interface{}{
															&seqExpr{
																pos: position{line: 76, col: 27, offset: 3169},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 76, col: 27, offset: 3169},
																		val:        "v",
																		ignoreCase: true,
																	},
																	&charClassMatcher{
																		pos:        position{line: 893, col: 10, offset: 37094},
																		val:        "[0-9]",
																		ranges:     []rune{'0', '9'},
																		ignoreCase: false,
																		inverted:   false,
																	},
																	&zeroOrMoreExpr{
																		pos: position{line: 76, col: 39, offset: 3181},
																		expr: &seqExpr{
																			pos: position{line: 76, col: 40, offset: 3182},
																			exprs: []interface{}{
																				&notExpr{
																					pos: position{line: 76, col: 40, offset: 3182},
																					expr: &choiceExpr{
																						pos: position{line: 903, col: 8, offset: 37209},
																						alternatives: []interface{}{
																							&litMatcher{
																								pos:        position{line: 899, col: 12, offset: 37169},
																								val:        "\r\n",
																								ignoreCase: false,
																							},
																							&charClassMatcher{
																								pos:        position{line: 899, col: 21, offset: 37178},
																								val:        "[\\r\\n]",
																								chars:      []rune{'\r', '\n'},
																								ignoreCase: false,
																								inverted:   false,
																							},
																							&notExpr{
																								pos: position{line: 901, col: 8, offset: 37198},
																								expr: &anyMatcher{
																									line: 901, col: 9, offset: 37199,
																								},
																							},
																						},
																					},
																				},
																				&notExpr{
																					pos: position{line: 76, col: 45, offset: 3187},
																					expr: &litMatcher{
																						pos:        position{line: 76, col: 46, offset: 3188},
																						val:        ",",
																						ignoreCase: false,
																					},
																				},
																				&notExpr{
																					pos: position{line: 76, col: 50, offset: 3192},
																					expr: &litMatcher{
																						pos:        position{line: 76, col: 51, offset: 3193},
																						val:        ":",
																						ignoreCase: false,
																					},
																				},
																				&anyMatcher{
																					line: 76, col: 55, offset: 3197,
																				},
																			},
																		},
																	},
																},
															},
															&seqExpr{
																pos: position{line: 76, col: 61, offset: 3203},
																exprs: []interface{}{
																	&zeroOrOneExpr{
																		pos: position{line: 76, col: 61, offset: 3203},
																		expr: &litMatcher{
																			pos:        position{line: 76, col: 61, offset: 3203},
																			val:        "v",
																			ignoreCase: true,
																		},
																	},
																	&charClassMatcher{
																		pos:        position{line: 893, col: 10, offset: 37094},
																		val:        "[0-9]",
																		ranges:     []rune{'0', '9'},
																		ignoreCase: false,
																		inverted:   false,
																	},
																	&zeroOrMoreExpr{
																		pos: position{line: 76, col: 74, offset: 3216},
																		expr: &seqExpr{
																			pos: position{line: 76, col: 75, offset: 3217},
																			exprs: []interface{}{
																				&notExpr{
																					pos: position{line: 76, col: 75, offset: 3217},
																					expr: &choiceExpr{
																						pos: position{line: 903, col: 8, offset: 37209},
																						alternatives: []interface{}{
																							&litMatcher{
																								pos:        position{line: 899, col: 12, offset: 37169},
																								val:        "\r\n",
																								ignoreCase: false,
																							},
																							&charClassMatcher{
																								pos:        position{line: 899, col: 21, offset: 37178},
																								val:        "[\\r\\n]",
																								chars:      []rune{'\r', '\n'},
																								ignoreCase: false,
																								inverted:   false,
																							},
																							&notExpr{
																								pos: position{line: 901, col: 8, offset: 37198},
																								expr: &anyMatcher{
																									line: 901, col: 9, offset: 37199,
																								},
																							},
																						},
																					},
																				},
																				&notExpr{
																					pos: position{line: 76, col: 80, offset: 3222},
																					expr: &litMatcher{
																						pos:        position{line: 76, col: 81, offset: 3223},
																						val:        ",",
																						ignoreCase: false,
																					},
																				},
																				&notExpr{
																					pos: position{line: 76, col: 85, offset: 3227},
																					expr: &litMatcher{
																						pos:        position{line: 76, col: 86, offset: 3228},
																						val:        ":",
																						ignoreCase: false,
																					},
																				},
																				&anyMatcher{
																					line: 76, col: 90, offset: 3232,
																				},
																			},
																		},
																	},
																	&zeroOrMoreExpr{
																		pos: position{line: 76, col: 94, offset: 3236},
																		expr: &choiceExpr{
																			pos: position{line: 895, col: 7, offset: 37107},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 895, col: 7, offset: 37107},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 895, col: 13, offset: 37113},
																					run: (*parser).callonDocumentHeader297,
																					expr: &litMatcher{
																						pos:        position{line: 895, col: 13, offset: 37113},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&andExpr{
																		pos: position{line: 76, col: 98, offset: 3240},
																		expr: &litMatcher{
																			pos:        position{line: 76, col: 99, offset: 3241},
																			val:        ",",
																			ignoreCase: false,
																		},
																	},
																},
															},
														},
													},
												},
											},
											&zeroOrOneExpr{
												pos: position{line: 71, col: 66, offset: 2892},
												expr: &litMatcher{
													pos:        position{line: 71, col: 66, offset: 2892},
													val:        ",",
													ignoreCase: false,
												},
											},
											&labeledExpr{
												pos:   position{line: 71, col: 71, offset: 2897},
												label: "revdate",
												expr: &zeroOrOneExpr{
													pos: position{line: 71, col: 79, offset: 2905},
													expr: &zeroOrMoreExpr{
														pos: position{line: 77, col: 25, offset: 3269},
														expr: &seqExpr{
															pos: position{line: 77, col: 26, offset: 3270},
															exprs: []interface{}{
																&notExpr{
																	pos: position{line: 77, col: 26, offset: 3270},
																	expr: &choiceExpr{
																		pos: position{line: 903, col: 8, offset: 37209},
																		alternatives: []interface{}{
																			&litMatcher{
																				pos:        position{line: 899, col: 12, offset: 37169},
																				val:        "\r\n",
																				ignoreCase: false,
																			},
																			&charClassMatcher{
																				pos:        position{line: 899, col: 21, offset: 37178},
																				val:        "[\\r\\n]",
																				chars:      []rune{'\r', '\n'},
																				ignoreCase: false,
																				inverted:   false,
																			},
																			&notExpr{
																				pos: position{line: 901, col: 8, offset: 37198},
																				expr: &anyMatcher{
																					line: 901, col: 9, offset: 37199,
																				},
																			},
																		},
																	},
																},
																&notExpr{
																	pos: position{line: 77, col: 31, offset: 3275},
																	expr: &litMatcher{
																		pos:        position{line: 77, col: 32, offset: 3276},
																		val:        ":",
																		ignoreCase: false,
																	},
																},
																&anyMatcher{
																	line: 77, col: 36, offset: 3280,
																},
															},
														},
													},
												},
											},
											&zeroOrOneExpr{
												pos: position{line: 71, col: 103, offset: 2929},
												expr: &litMatcher{
													pos:        position{line: 71, col: 103, offset: 2929},
													val:        ":",
													ignoreCase: false,
												},
											},
											&labeledExpr{
												pos:   position{line: 71, col: 108, offset: 2934},
												label: "revremark",
												expr: &zeroOrOneExpr{
													pos: position{line: 71, col: 118, offset: 2944},
													expr: &zeroOrMoreExpr{
														pos: position{line: 78, col: 27, offset: 3311},
														expr: &seqExpr{
															pos: position{line: 78, col: 28, offset: 3312},
															exprs: []interface{}{
																&notExpr{
																	pos: position{line: 78, col: 28, offset: 3312},
																	expr: &choiceExpr{
																		pos: position{line: 903, col: 8, offset: 37209},
																		alternatives: []interface{}{
																			&litMatcher{
																				pos:        position{line: 899, col: 12, offset: 37169},
																				val:        "\r\n",
																				ignoreCase: false,
																			},
																			&charClassMatcher{
																				pos:        position{line: 899, col: 21, offset: 37178},
																				val:        "[\\r\\n]",
																				chars:      []rune{'\r', '\n'},
																				ignoreCase: false,
																				inverted:   false,
																			},
																			&notExpr{
																				pos: position{line: 901, col: 8, offset: 37198},
																				expr: &anyMatcher{
																					line: 901, col: 9, offset: 37199,
																				},
																			},
																		},
																	},
																},
																&anyMatcher{
																	line: 78, col: 33, offset: 3317,
																},
															},
														},
													},
												},
											},
											&choiceExpr{
												pos: position{line: 903, col: 8, offset: 37209},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 899, col: 12, offset: 37169},
														val:        "\r\n",
														ignoreCase: false,
													},
													&charClassMatcher{
														pos:        position{line: 899, col: 21, offset: 37178},
														val:        "[\\r\\n]",
														chars:      []rune{'\r', '\n'},
														ignoreCase: false,
														inverted:   false,
													},
													&notExpr{
														pos: position{line: 901, col: 8, offset: 37198},
														expr: &anyMatcher{
															line: 901, col: 9, offset: 37199,
														},
													},
												},
											},
										},
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 46, col: 98, offset: 1747},
							label: "otherAttributes",
							expr: &zeroOrMoreExpr{
								pos: position{line: 46, col: 115, offset: 1764},
								expr: &choiceExpr{
									pos: position{line: 83, col: 33, offset: 3469},
									alternatives: []interface{}{
										&actionExpr{
											pos: position{line: 85, col: 45, offset: 3603},
											run: (*parser).callonDocumentHeader337,
											expr: &seqExpr{
												pos: position{line: 85, col: 45, offset: 3603},
												exprs: []interface{}{
													&litMatcher{
														pos:        position{line: 85, col: 45, offset: 3603},
														val:        ":",
														ignoreCase: false,
													},
													&labeledExpr{
														pos:   position{line: 85, col: 49, offset: 3607},
														label: "name",
														expr: &seqExpr{
															pos: position{line: 110, col: 18, offset: 4687},
															exprs: []interface{}{
																&charClassMatcher{
																	pos:        position{line: 110, col: 19, offset: 4688},
																	val:        "[_A-Za-z0-9]",
																	chars:      []rune{'_'},
																	ranges:     []rune{'A', 'Z', 'a', 'z', '0', '9'},
																	ignoreCase: false,
																	inverted:   false,
																},
																&zeroOrMoreExpr{
																	pos: position{line: 110, col: 48, offset: 4717},
																	expr: &charClassMatcher{
																		pos:        position{line: 110, col: 49, offset: 4718},
																		val:        "[-A-Za-z0-9]",
																		chars:      []rune{'-'},
																		ranges:     []rune{'A', 'Z', 'a', 'z', '0', '9'},
																		ignoreCase: false,
																		inverted:   false,
																	},
																},
															},
														},
													},
													&litMatcher{
														pos:        position{line: 85, col: 70, offset: 3628},
														val:        ":",
														ignoreCase: false,
													},
													&zeroOrMoreExpr{
														pos: position{line: 85, col: 74, offset: 3632},
														expr: &choiceExpr{
															pos: position{line: 895, col: 7, offset: 37107},
															alternatives: []interface{}{
																&litMatcher{
																	pos:        position{line: 895, col: 7, offset: 37107},
																	val:        " ",
																	ignoreCase: false,
																},
																&actionExpr{
																	pos: position{line: 895, col: 13, offset: 37113},
																	run: (*parser).callonDocumentHeader349,
																	expr: &litMatcher{
																		pos:        position{line: 895, col: 13, offset: 37113},
																		val:        "\t",
																		ignoreCase: false,
																	},
																},
															},
														},
													},
													&choiceExpr{
														pos: position{line: 903, col: 8, offset: 37209},
														alternatives: []interface{}{
															&litMatcher{
																pos:        position{line: 899, col: 12, offset: 37169},
																val:        "\r\n",
																ignoreCase: false,
															},
															&charClassMatcher{
																pos:        position{line: 899, col: 21, offset: 37178},
																val:        "[\\r\\n]",
																chars:      []rune{'\r', '\n'},
																ignoreCase: false,
																inverted:   false,
															},
															&notExpr{
																pos: position{line: 901, col: 8, offset: 37198},
																expr: &anyMatcher{
																	line: 901, col: 9, offset: 37199,
																},
															},
														},
													},
												},
											},
										},
										&actionExpr{
											pos: position{line: 89, col: 49, offset: 3769},
											run: (*parser).callonDocumentHeader356,
											expr: &seqExpr{
												pos: position{line: 89, col: 49, offset: 3769},
												exprs: []interface{}{
													&litMatcher{
														pos:        position{line: 89, col: 49, offset: 3769},
														val:        ":",
														ignoreCase: false,
													},
													&labeledExpr{
														pos:   position{line: 89, col: 53, offset: 3773},
														label: "name",
														expr: &seqExpr{
															pos: position{line: 110, col: 18, offset: 4687},
															exprs: []interface{}{
																&charClassMatcher{
																	pos:        position{line: 110, col: 19, offset: 4688},
																	val:        "[_A-Za-z0-9]",
																	chars:      []rune{'_'},
																	ranges:     []rune{'A', 'Z', 'a', 'z', '0', '9'},
																	ignoreCase: false,
																	inverted:   false,
																},
																&zeroOrMoreExpr{
																	pos: position{line: 110, col: 48, offset: 4717},
																	expr: &charClassMatcher{
																		pos:        position{line: 110, col: 49, offset: 4718},
																		val:        "[-A-Za-z0-9]",
																		chars:      []rune{'-'},
																		ranges:     []rune{'A', 'Z', 'a', 'z', '0', '9'},
																		ignoreCase: false,
																		inverted:   false,
																	},
																},
															},
														},
													},
													&litMatcher{
														pos:        position{line: 89, col: 74, offset: 3794},
														val:        ":",
														ignoreCase: false,
													},
													&oneOrMoreExpr{
														pos: position{line: 89, col: 78, offset: 3798},
														expr: &choiceExpr{
															pos: position{line: 895, col: 7, offset: 37107},
															alternatives: []interface{}{
																&litMatcher{
																	pos:        position{line: 895, col: 7, offset: 37107},
																	val:        " ",
																	ignoreCase: false,
																},
																&actionExpr{
																	pos: position{line: 895, col: 13, offset: 37113},
																	run: (*parser).callonDocumentHeader368,
																	expr: &litMatcher{
																		pos:        position{line: 895, col: 13, offset: 37113},
																		val:        "\t",
																		ignoreCase: false,
																	},
																},
															},
														},
													},
													&labeledExpr{
														pos:   position{line: 89, col: 82, offset: 3802},
														label: "value",
														expr: &zeroOrMoreExpr{
															pos: position{line: 89, col: 88, offset: 3808},
															expr: &seqExpr{
																pos: position{line: 89, col: 89, offset: 3809},
																exprs: []interface{}{
																	&notExpr{
																		pos: position{line: 89, col: 89, offset: 3809},
																		expr: &choiceExpr{
																			pos: position{line: 899, col: 12, offset: 37169},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 899, col: 12, offset: 37169},
																					val:        "\r\n",
																					ignoreCase: false,
																				},
																				&charClassMatcher{
																					pos:        position{line: 899, col: 21, offset: 37178},
																					val:        "[\\r\\n]",
																					chars:      []rune{'\r', '\n'},
																					ignoreCase: false,
																					inverted:   false,
																				},
																			},
																		},
																	},
																	&anyMatcher{
																		line: 89, col: 98, offset: 3818,
																	},
																},
															},
														},
													},
													&choiceExpr{
														pos: position{line: 903, col: 8, offset: 37209},
														alternatives: []interface{}{
															&litMatcher{
																pos:        position{line: 899, col: 12, offset: 37169},
																val:        "\r\n",
																ignoreCase: false,
															},
															&charClassMatcher{
																pos:        position{line: 899, col: 21, offset: 37178},
																val:        "[\\r\\n]",
																chars:      []rune{'\r', '\n'},
																ignoreCase: false,
																inverted:   false,
															},
															&notExpr{
																pos: position{line: 901, col: 8, offset: 37198},
																expr: &anyMatcher{
																	line: 901, col: 9, offset: 37199,
																},
															},
														},
													},
												},
											},
										},
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "Section",
			pos:  position{line: 222, col: 1, offset: 8651},
			expr: &actionExpr{
				pos: position{line: 222, col: 12, offset: 8662},
				run: (*parser).callonSection1,
				expr: &seqExpr{
					pos: position{line: 222, col: 12, offset: 8662},
					exprs: []interface{}{
						&notExpr{
							pos: position{line: 222, col: 12, offset: 8662},
							expr: &notExpr{
								pos: position{line: 901, col: 8, offset: 37198},
								expr: &anyMatcher{
									line: 901, col: 9, offset: 37199,
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 223, col: 5, offset: 8733},
							label: "section",
							expr: &choiceExpr{
								pos: position{line: 223, col: 14, offset: 8742},
								alternatives: []interface{}{
									&ruleRefExpr{
										pos:  position{line: 223, col: 14, offset: 8742},
										name: "Section0",
									},
									&ruleRefExpr{
										pos:  position{line: 223, col: 25, offset: 8753},
										name: "Section1",
									},
									&ruleRefExpr{
										pos:  position{line: 223, col: 36, offset: 8764},
										name: "Section2",
									},
									&ruleRefExpr{
										pos:  position{line: 223, col: 47, offset: 8775},
										name: "Section3",
									},
									&ruleRefExpr{
										pos:  position{line: 223, col: 58, offset: 8786},
										name: "Section4",
									},
									&ruleRefExpr{
										pos:  position{line: 223, col: 69, offset: 8797},
										name: "Section5",
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "Section0",
			pos:  position{line: 229, col: 1, offset: 8878},
			expr: &actionExpr{
				pos: position{line: 229, col: 13, offset: 8890},
				run: (*parser).callonSection01,
				expr: &seqExpr{
					pos: position{line: 229, col: 13, offset: 8890},
					exprs: []interface{}{
						&notExpr{
							pos: position{line: 229, col: 13, offset: 8890},
							expr: &notExpr{
								pos: position{line: 901, col: 8, offset: 37198},
								expr: &anyMatcher{
									line: 901, col: 9, offset: 37199,
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 230, col: 5, offset: 8961},
							label: "section",
							expr: &actionExpr{
								pos: position{line: 230, col: 14, offset: 8970},
								run: (*parser).callonSection07,
								expr: &seqExpr{
									pos: position{line: 230, col: 14, offset: 8970},
									exprs: []interface{}{
										&labeledExpr{
											pos:   position{line: 230, col: 14, offset: 8970},
											label: "header",
											expr: &ruleRefExpr{
												pos:  position{line: 230, col: 22, offset: 8978},
												name: "Section0Title",
											},
										},
										&labeledExpr{
											pos:   position{line: 230, col: 37, offset: 8993},
											label: "elements",
											expr: &zeroOrMoreExpr{
												pos: position{line: 230, col: 47, offset: 9003},
												expr: &ruleRefExpr{
													pos:  position{line: 230, col: 47, offset: 9003},
													name: "Section0Block",
												},
											},
										},
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "Section0Title",
			pos:  position{line: 238, col: 1, offset: 9187},
			expr: &actionExpr{
				pos: position{line: 238, col: 18, offset: 9204},
				run: (*parser).callonSection0Title1,
				expr: &seqExpr{
					pos: position{line: 238, col: 18, offset: 9204},
					exprs: []interface{}{
						&labeledExpr{
							pos:   position{line: 238, col: 18, offset: 9204},
							label: "attributes",
							expr: &zeroOrMoreExpr{
								pos: position{line: 238, col: 29, offset: 9215},
								expr: &actionExpr{
									pos: position{line: 120, col: 21, offset: 5039},
									run: (*parser).callonSection0Title5,
									expr: &seqExpr{
										pos: position{line: 120, col: 21, offset: 5039},
										exprs: []interface{}{
											&labeledExpr{
												pos:   position{line: 120, col: 21, offset: 5039},
												label: "attr",
												expr: &choiceExpr{
													pos: position{line: 120, col: 27, offset: 5045},
													alternatives: []interface{}{
														&actionExpr{
															pos: position{line: 129, col: 14, offset: 5496},
															run: (*parser).callonSection0Title9,
															expr: &labeledExpr{
																pos:   position{line: 129, col: 14, offset: 5496},
																label: "id",
																expr: &actionExpr{
																	pos: position{line: 135, col: 20, offset: 5626},
																	run: (*parser).callonSection0Title11,
																	expr: &seqExpr{
																		pos: position{line: 135, col: 20, offset: 5626},
																		exprs: []interface{}{
																			&litMatcher{
																				pos:        position{line: 135, col: 20, offset: 5626},
																				val:        "[[",
																				ignoreCase: false,
																			},
																			&labeledExpr{
																				pos:   position{line: 135, col: 25, offset: 5631},
																				label: "id",
																				expr: &actionExpr{
																					pos: position{line: 883, col: 7, offset: 36866},
																					run: (*parser).callonSection0Title15,
																					expr: &oneOrMoreExpr{
																						pos: position{line: 883, col: 7, offset: 36866},
																						expr: &seqExpr{
																							pos: position{line: 883, col: 8, offset: 36867},
																							exprs: []interface{}{
																								&notExpr{
																									pos: position{line: 883, col: 8, offset: 36867},
																									expr: &choiceExpr{
																										pos: position{line: 899, col: 12, offset: 37169},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 899, col: 12, offset: 37169},
																												val:        "\r\n",
																												ignoreCase: false,
																											},
																											&charClassMatcher{
																												pos:        position{line: 899, col: 21, offset: 37178},
																												val:        "[\\r\\n]",
																												chars:      []rune{'\r', '\n'},
																												ignoreCase: false,
																												inverted:   false,
																											},
																										},
																									},
																								},
																								&notExpr{
																									pos: position{line: 883, col: 17, offset: 36876},
																									expr: &choiceExpr{
																										pos: position{line: 895, col: 7, offset: 37107},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 895, col: 7, offset: 37107},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 895, col: 13, offset: 37113},
																												run: (*parser).callonSection0Title25,
																												expr: &litMatcher{
																													pos:        position{line: 895, col: 13, offset: 37113},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																								&notExpr{
																									pos: position{line: 883, col: 21, offset: 36880},
																									expr: &litMatcher{
																										pos:        position{line: 883, col: 22, offset: 36881},
																										val:        "[",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 883, col: 26, offset: 36885},
																									expr: &litMatcher{
																										pos:        position{line: 883, col: 27, offset: 36886},
																										val:        "]",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 883, col: 31, offset: 36890},
																									expr: &litMatcher{
																										pos:        position{line: 883, col: 32, offset: 36891},
																										val:        "<<",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 883, col: 37, offset: 36896},
																									expr: &litMatcher{
																										pos:        position{line: 883, col: 38, offset: 36897},
																										val:        ">>",
																										ignoreCase: false,
																									},
																								},
																								&anyMatcher{
																									line: 883, col: 42, offset: 36901,
																								},
																							},
																						},
																					},
																				},
																			},
																			&litMatcher{
																				pos:        position{line: 135, col: 33, offset: 5639},
																				val:        "]]",
																				ignoreCase: false,
																			},
																		},
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 131, col: 5, offset: 5542},
															run: (*parser).callonSection0Title37,
															expr: &seqExpr{
																pos: position{line: 131, col: 5, offset: 5542},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 131, col: 5, offset: 5542},
																		val:        "[#",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 131, col: 10, offset: 5547},
																		label: "id",
																		expr: &actionExpr{
																			pos: position{line: 883, col: 7, offset: 36866},
																			run: (*parser).callonSection0Title41,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 883, col: 7, offset: 36866},
																				expr: &seqExpr{
																					pos: position{line: 883, col: 8, offset: 36867},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 883, col: 8, offset: 36867},
																							expr: &choiceExpr{
																								pos: position{line: 899, col: 12, offset: 37169},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 899, col: 12, offset: 37169},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 899, col: 21, offset: 37178},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 883, col: 17, offset: 36876},
																							expr: &choiceExpr{
																								pos: position{line: 895, col: 7, offset: 37107},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 895, col: 7, offset: 37107},
																										val:        " ",
																										ignoreCase: false,
																									},
																									&actionExpr{
																										pos: position{line: 895, col: 13, offset: 37113},
																										run: (*parser).callonSection0Title51,
																										expr: &litMatcher{
																											pos:        position{line: 895, col: 13, offset: 37113},
																											val:        "\t",
																											ignoreCase: false,
																										},
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 883, col: 21, offset: 36880},
																							expr: &litMatcher{
																								pos:        position{line: 883, col: 22, offset: 36881},
																								val:        "[",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 883, col: 26, offset: 36885},
																							expr: &litMatcher{
																								pos:        position{line: 883, col: 27, offset: 36886},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 883, col: 31, offset: 36890},
																							expr: &litMatcher{
																								pos:        position{line: 883, col: 32, offset: 36891},
																								val:        "<<",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 883, col: 37, offset: 36896},
																							expr: &litMatcher{
																								pos:        position{line: 883, col: 38, offset: 36897},
																								val:        ">>",
																								ignoreCase: false,
																							},
																						},
																						&anyMatcher{
																							line: 883, col: 42, offset: 36901,
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 131, col: 18, offset: 5555},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 141, col: 17, offset: 5848},
															run: (*parser).callonSection0Title63,
															expr: &seqExpr{
																pos: position{line: 141, col: 17, offset: 5848},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 141, col: 17, offset: 5848},
																		val:        ".",
																		ignoreCase: false,
																	},
																	&notExpr{
																		pos: position{line: 141, col: 21, offset: 5852},
																		expr: &litMatcher{
																			pos:        position{line: 141, col: 22, offset: 5853},
																			val:        ".",
																			ignoreCase: false,
																		},
																	},
																	&notExpr{
																		pos: position{line: 141, col: 26, offset: 5857},
																		expr: &choiceExpr{
																			pos: position{line: 895, col: 7, offset: 37107},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 895, col: 7, offset: 37107},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 895, col: 13, offset: 37113},
																					run: (*parser).callonSection0Title71,
																					expr: &litMatcher{
																						pos:        position{line: 895, col: 13, offset: 37113},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 141, col: 30, offset: 5861},
																		label: "title",
																		expr: &oneOrMoreExpr{
																			pos: position{line: 141, col: 36, offset: 5867},
																			expr: &seqExpr{
																				pos: position{line: 141, col: 37, offset: 5868},
																				exprs: []interface{}{
																					&notExpr{
																						pos: position{line: 141, col: 37, offset: 5868},
																						expr: &choiceExpr{
																							pos: position{line: 899, col: 12, offset: 37169},
																							alternatives: []interface{}{
																								&litMatcher{
																									pos:        position{line: 899, col: 12, offset: 37169},
																									val:        "\r\n",
																									ignoreCase: false,
																								},
																								&charClassMatcher{
																									pos:        position{line: 899, col: 21, offset: 37178},
																									val:        "[\\r\\n]",
																									chars:      []rune{'\r', '\n'},
																									ignoreCase: false,
																									inverted:   false,
																								},
																							},
																						},
																					},
																					&anyMatcher{
																						line: 141, col: 46, offset: 5877,
																					},
																				},
																			},
																		},
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 147, col: 16, offset: 6051},
															run: (*parser).callonSection0Title81,
															expr: &seqExpr{
																pos: position{line: 147, col: 16, offset: 6051},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 147, col: 16, offset: 6051},
																		val:        "[.",
																		ignoreCase: false,
																	},
																	&notExpr{
																		pos: position{line: 147, col: 21, offset: 6056},
																		expr: &choiceExpr{
																			pos: position{line: 895, col: 7, offset: 37107},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 895, col: 7, offset: 37107},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 895, col: 13, offset: 37113},
																					run: (*parser).callonSection0Title87,
																					expr: &litMatcher{
																						pos:        position{line: 895, col: 13, offset: 37113},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 147, col: 25, offset: 6060},
																		label: "role",
																		expr: &oneOrMoreExpr{
																			pos: position{line: 147, col: 30, offset: 6065},
																			expr: &seqExpr{
																				pos: position{line: 147, col: 31, offset: 6066},
																				exprs: []interface{}{
																					&notExpr{
																						pos: position{line: 147, col: 31, offset: 6066},
																						expr: &choiceExpr{
																							pos: position{line: 899, col: 12, offset: 37169},
																							alternatives: []interface{}{
																								&litMatcher{
																									pos:        position{line: 899, col: 12, offset: 37169},
																									val:        "\r\n",
																									ignoreCase: false,
																								},
																								&charClassMatcher{
																									pos:        position{line: 899, col: 21, offset: 37178},
																									val:        "[\\r\\n]",
																									chars:      []rune{'\r', '\n'},
																									ignoreCase: false,
																									inverted:   false,
																								},
																							},
																						},
																					},
																					&notExpr{
																						pos: position{line: 147, col: 40, offset: 6075},
																						expr: &litMatcher{
																							pos:        position{line: 147, col: 41, offset: 6076},
																							val:        "]",
																							ignoreCase: false,
																						},
																					},
																					&anyMatcher{
																						line: 147, col: 45, offset: 6080,
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 147, col: 49, offset: 6084},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 152, col: 30, offset: 6255},
															run: (*parser).callonSection0Title100,
															expr: &seqExpr{
																pos: position{line: 152, col: 30, offset: 6255},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 152, col: 30, offset: 6255},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 152, col: 34, offset: 6259},
																		label: "k",
																		expr: &choiceExpr{
																			pos: position{line: 470, col: 19, offset: 18925},
																			alternatives: []interface{}{
																				&actionExpr{
																					pos: position{line: 470, col: 19, offset: 18925},
																					run: (*parser).callonSection0Title105,
																					expr: &litMatcher{
																						pos:        position{line: 470, col: 19, offset: 18925},
																						val:        "TIP",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 472, col: 5, offset: 18963},
																					run: (*parser).callonSection0Title107,
																					expr: &litMatcher{
																						pos:        position{line: 472, col: 5, offset: 18963},
																						val:        "NOTE",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 474, col: 5, offset: 19003},
																					run: (*parser).callonSection0Title109,
																					expr: &litMatcher{
																						pos:        position{line: 474, col: 5, offset: 19003},
																						val:        "IMPORTANT",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 476, col: 5, offset: 19053},
																					run: (*parser).callonSection0Title111,
																					expr: &litMatcher{
																						pos:        position{line: 476, col: 5, offset: 19053},
																						val:        "WARNING",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 478, col: 5, offset: 19099},
																					run: (*parser).callonSection0Title113,
																					expr: &litMatcher{
																						pos:        position{line: 478, col: 5, offset: 19099},
																						val:        "CAUTION",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 152, col: 53, offset: 6278},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 175, col: 21, offset: 7013},
															run: (*parser).callonSection0Title116,
															expr: &litMatcher{
																pos:        position{line: 175, col: 21, offset: 7013},
																val:        "[horizontal]",
																ignoreCase: false,
															},
														},
														&actionExpr{
															pos: position{line: 157, col: 19, offset: 6439},
															run: (*parser).callonSection0Title118,
															expr: &seqExpr{
																pos: position{line: 157, col: 19, offset: 6439},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 157, col: 19, offset: 6439},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&notExpr{
																		pos: position{line: 157, col: 23, offset: 6443},
																		expr: &choiceExpr{
																			pos: position{line: 895, col: 7, offset: 37107},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 895, col: 7, offset: 37107},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 895, col: 13, offset: 37113},
																					run: (*parser).callonSection0Title124,
																					expr: &litMatcher{
																						pos:        position{line: 895, col: 13, offset: 37113},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 157, col: 27, offset: 6447},
																		label: "attributes",
																		expr: &zeroOrMoreExpr{
																			pos: position{line: 157, col: 38, offset: 6458},
																			expr: &choiceExpr{
																				pos: position{line: 161, col: 21, offset: 6571},
																				alternatives: []interface{}{
																					&actionExpr{
																						pos: position{line: 161, col: 21, offset: 6571},
																						run: (*parser).callonSection0Title129,
																						expr: &seqExpr{
																							pos: position{line: 161, col: 21, offset: 6571},
																							exprs: []interface{}{
																								&labeledExpr{
																									pos:   position{line: 161, col: 21, offset: 6571},
																									label: "key",
																									expr: &actionExpr{
																										pos: position{line: 167, col: 17, offset: 6861},
																										run: (*parser).callonSection0Title132,
																										expr: &seqExpr{
																											pos: position{line: 167, col: 17, offset: 6861},
																											exprs: []interface{}{
																												&notExpr{
																													pos: position{line: 167, col: 17, offset: 6861},
																													expr: &actionExpr{
																														pos: position{line: 207, col: 14, offset: 8362},
																														run: (*parser).callonSection0Title135,
																														expr: &litMatcher{
																															pos:        position{line: 207, col: 14, offset: 8362},
																															val:        "verse",
																															ignoreCase: false,
																														},
																													},
																												},
																												&labeledExpr{
																													pos:   position{line: 167, col: 28, offset: 6872},
																													label: "key",
																													expr: &oneOrMoreExpr{
																														pos: position{line: 167, col: 32, offset: 6876},
																														expr: &seqExpr{
																															pos: position{line: 167, col: 33, offset: 6877},
																															exprs: []interface{}{
																																&notExpr{
																																	pos: position{line: 167, col: 33, offset: 6877},
																																	expr: &litMatcher{
																																		pos:        position{line: 167, col: 34, offset: 6878},
																																		val:        "=",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 167, col: 38, offset: 6882},
																																	expr: &litMatcher{
																																		pos:        position{line: 167, col: 39, offset: 6883},
																																		val:        ",",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 167, col: 43, offset: 6887},
																																	expr: &litMatcher{
																																		pos:        position{line: 167, col: 44, offset: 6888},
																																		val:        "]",
																																		ignoreCase: false,
																																	},
																																},
																																&anyMatcher{
																																	line: 167, col: 48, offset: 6892,
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&litMatcher{
																									pos:        position{line: 161, col: 40, offset: 6590},
																									val:        "=",
																									ignoreCase: false,
																								},
																								&labeledExpr{
																									pos:   position{line: 161, col: 44, offset: 6594},
																									label: "value",
																									expr: &actionExpr{
																										pos: position{line: 171, col: 19, offset: 6940},
																										run: (*parser).callonSection0Title149,
																										expr: &labeledExpr{
																											pos:   position{line: 171, col: 19, offset: 6940},
																											label: "value",
																											expr: &zeroOrMoreExpr{
																												pos: position{line: 171, col: 25, offset: 6946},
																												expr: &seqExpr{
																													pos: position{line: 171, col: 26, offset: 6947},
																													exprs: []interface{}{
																														&notExpr{
																															pos: position{line: 171, col: 26, offset: 6947},
																															expr: &litMatcher{
																																pos:        position{line: 171, col: 27, offset: 6948},
																																val:        "=",
																																ignoreCase: false,
																															},
																														},
																														&notExpr{
																															pos: position{line: 171, col: 31, offset: 6952},
																															expr: &litMatcher{
																																pos:        position{line: 171, col: 32, offset: 6953},
																																val:        ",",
																																ignoreCase: false,
																															},
																														},
																														&notExpr{
																															pos: position{line: 171, col: 36, offset: 6957},
																															expr: &litMatcher{
																																pos:        position{line: 171, col: 37, offset: 6958},
																																val:        "]",
																																ignoreCase: false,
																															},
																														},
																														&anyMatcher{
																															line: 171, col: 41, offset: 6962,
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&zeroOrOneExpr{
																									pos: position{line: 161, col: 67, offset: 6617},
																									expr: &litMatcher{
																										pos:        position{line: 161, col: 67, offset: 6617},
																										val:        ",",
																										ignoreCase: false,
																									},
																								},
																								&zeroOrMoreExpr{
																									pos: position{line: 161, col: 72, offset: 6622},
																									expr: &choiceExpr{
																										pos: position{line: 895, col: 7, offset: 37107},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 895, col: 7, offset: 37107},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 895, col: 13, offset: 37113},
																												run: (*parser).callonSection0Title165,
																												expr: &litMatcher{
																													pos:        position{line: 895, col: 13, offset: 37113},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																					&actionExpr{
																						pos: position{line: 163, col: 5, offset: 6729},
																						run: (*parser).callonSection0Title167,
																						expr: &seqExpr{
																							pos: position{line: 163, col: 5, offset: 6729},
																							exprs: []interface{}{
																								&labeledExpr{
																									pos:   position{line: 163, col: 5, offset: 6729},
																									label: "key",
																									expr: &actionExpr{
																										pos: position{line: 167, col: 17, offset: 6861},
																										run: (*parser).callonSection0Title170,
																										expr: &seqExpr{
																											pos: position{line: 167, col: 17, offset: 6861},
																											exprs: []interface{}{
																												&notExpr{
																													pos: position{line: 167, col: 17, offset: 6861},
																													expr: &actionExpr{
																														pos: position{line: 207, col: 14, offset: 8362},
																														run: (*parser).callonSection0Title173,
																														expr: &litMatcher{
																															pos:        position{line: 207, col: 14, offset: 8362},
																															val:        "verse",
																															ignoreCase: false,
																														},
																													},
																												},
																												&labeledExpr{
																													pos:   position{line: 167, col: 28, offset: 6872},
																													label: "key",
																													expr: &oneOrMoreExpr{
																														pos: position{line: 167, col: 32, offset: 6876},
																														expr: &seqExpr{
																															pos: position{line: 167, col: 33, offset: 6877},
																															exprs: []interface{}{
																																&notExpr{
																																	pos: position{line: 167, col: 33, offset: 6877},
																																	expr: &litMatcher{
																																		pos:        position{line: 167, col: 34, offset: 6878},
																																		val:        "=",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 167, col: 38, offset: 6882},
																																	expr: &litMatcher{
																																		pos:        position{line: 167, col: 39, offset: 6883},
																																		val:        ",",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 167, col: 43, offset: 6887},
																																	expr: &litMatcher{
																																		pos:        position{line: 167, col: 44, offset: 6888},
																																		val:        "]",
																																		ignoreCase: false,
																																	},
																																},
																																&anyMatcher{
																																	line: 167, col: 48, offset: 6892,
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&zeroOrOneExpr{
																									pos: position{line: 163, col: 24, offset: 6748},
																									expr: &litMatcher{
																										pos:        position{line: 163, col: 24, offset: 6748},
																										val:        ",",
																										ignoreCase: false,
																									},
																								},
																								&zeroOrMoreExpr{
																									pos: position{line: 163, col: 29, offset: 6753},
																									expr: &choiceExpr{
																										pos: position{line: 895, col: 7, offset: 37107},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 895, col: 7, offset: 37107},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 895, col: 13, offset: 37113},
																												run: (*parser).callonSection0Title190,
																												expr: &litMatcher{
																													pos:        position{line: 895, col: 13, offset: 37113},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 157, col: 59, offset: 6479},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
													},
												},
											},
											&zeroOrMoreExpr{
												pos: position{line: 120, col: 131, offset: 5149},
												expr: &choiceExpr{
													pos: position{line: 895, col: 7, offset: 37107},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 895, col: 7, offset: 37107},
															val:        " ",
															ignoreCase: false,
														},
														&actionExpr{
															pos: position{line: 895, col: 13, offset: 37113},
															run: (*parser).callonSection0Title196,
															expr: &litMatcher{
																pos:        position{line: 895, col: 13, offset: 37113},
																val:        "\t",
																ignoreCase: false,
															},
														},
													},
												},
											},
											&choiceExpr{
												pos: position{line: 903, col: 8, offset: 37209},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 899, col: 12, offset: 37169},
														val:        "\r\n",
														ignoreCase: false,
													},
													&charClassMatcher{
														pos:        position{line: 899, col: 21, offset: 37178},
														val:        "[\\r\\n]",
														chars:      []rune{'\r', '\n'},
														ignoreCase: false,
														inverted:   false,
													},
													&notExpr{
														pos: position{line: 901, col: 8, offset: 37198},
														expr: &anyMatcher{
															line: 901, col: 9, offset: 37199,
														},
													},
												},
											},
										},
									},
								},
							},
						},
						&litMatcher{
							pos:        position{line: 236, col: 24, offset: 9178},
							val:        "=",
							ignoreCase: false,
						},
						&oneOrMoreExpr{
							pos: position{line: 236, col: 28, offset: 9182},
							expr: &choiceExpr{
								pos: position{line: 895, col: 7, offset: 37107},
								alternatives: []interface{}{
									&litMatcher{
										pos:        position{line: 895, col: 7, offset: 37107},
										val:        " ",
										ignoreCase: false,
									},
									&actionExpr{
										pos: position{line: 895, col: 13, offset: 37113},
										run: (*parser).callonSection0Title207,
										expr: &litMatcher{
											pos:        position{line: 895, col: 13, offset: 37113},
											val:        "\t",
											ignoreCase: false,
										},
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 238, col: 69, offset: 9255},
							label: "content",
							expr: &ruleRefExpr{
								pos:  position{line: 238, col: 78, offset: 9264},
								name: "TitleElements",
							},
						},
						&zeroOrMoreExpr{
							pos: position{line: 238, col: 93, offset: 9279},
							expr: &choiceExpr{
								pos: position{line: 895, col: 7, offset: 37107},
								alternatives: []interface{}{
									&litMatcher{
										pos:        position{line: 895, col: 7, offset: 37107},
										val:        " ",
										ignoreCase: false,
									},
									&actionExpr{
										pos: position{line: 895, col: 13, offset: 37113},
										run: (*parser).callonSection0Title214,
										expr: &litMatcher{
											pos:        position{line: 895, col: 13, offset: 37113},
											val:        "\t",
											ignoreCase: false,
										},
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 238, col: 97, offset: 9283},
							label: "id",
							expr: &zeroOrOneExpr{
								pos: position{line: 238, col: 100, offset: 9286},
								expr: &actionExpr{
									pos: position{line: 135, col: 20, offset: 5626},
									run: (*parser).callonSection0Title218,
									expr: &seqExpr{
										pos: position{line: 135, col: 20, offset: 5626},
										exprs: []interface{}{
											&litMatcher{
												pos:        position{line: 135, col: 20, offset: 5626},
												val:        "[[",
												ignoreCase: false,
											},
											&labeledExpr{
												pos:   position{line: 135, col: 25, offset: 5631},
												label: "id",
												expr: &actionExpr{
													pos: position{line: 883, col: 7, offset: 36866},
													run: (*parser).callonSection0Title222,
													expr: &oneOrMoreExpr{
														pos: position{line: 883, col: 7, offset: 36866},
														expr: &seqExpr{
															pos: position{line: 883, col: 8, offset: 36867},
															exprs: []interface{}{
																&notExpr{
																	pos: position{line: 883, col: 8, offset: 36867},
																	expr: &choiceExpr{
																		pos: position{line: 899, col: 12, offset: 37169},
																		alternatives: []interface{}{
																			&litMatcher{
																				pos:        position{line: 899, col: 12, offset: 37169},
																				val:        "\r\n",
																				ignoreCase: false,
																			},
																			&charClassMatcher{
																				pos:        position{line: 899, col: 21, offset: 37178},
																				val:        "[\\r\\n]",
																				chars:      []rune{'\r', '\n'},
																				ignoreCase: false,
																				inverted:   false,
																			},
																		},
																	},
																},
																&notExpr{
																	pos: position{line: 883, col: 17, offset: 36876},
																	expr: &choiceExpr{
																		pos: position{line: 895, col: 7, offset: 37107},
																		alternatives: []interface{}{
																			&litMatcher{
																				pos:        position{line: 895, col: 7, offset: 37107},
																				val:        " ",
																				ignoreCase: false,
																			},
																			&actionExpr{
																				pos: position{line: 895, col: 13, offset: 37113},
																				run: (*parser).callonSection0Title232,
																				expr: &litMatcher{
																					pos:        position{line: 895, col: 13, offset: 37113},
																					val:        "\t",
																					ignoreCase: false,
																				},
																			},
																		},
																	},
																},
																&notExpr{
																	pos: position{line: 883, col: 21, offset: 36880},
																	expr: &litMatcher{
																		pos:        position{line: 883, col: 22, offset: 36881},
																		val:        "[",
																		ignoreCase: false,
																	},
																},
																&notExpr{
																	pos: position{line: 883, col: 26, offset: 36885},
																	expr: &litMatcher{
																		pos:        position{line: 883, col: 27, offset: 36886},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
																&notExpr{
																	pos: position{line: 883, col: 31, offset: 36890},
																	expr: &litMatcher{
																		pos:        position{line: 883, col: 32, offset: 36891},
																		val:        "<<",
																		ignoreCase: false,
																	},
																},
																&notExpr{
																	pos: position{line: 883, col: 37, offset: 36896},
																	expr: &litMatcher{
																		pos:        position{line: 883, col: 38, offset: 36897},
																		val:        ">>",
																		ignoreCase: false,
																	},
																},
																&anyMatcher{
																	line: 883, col: 42, offset: 36901,
																},
															},
														},
													},
												},
											},
											&litMatcher{
												pos:        position{line: 135, col: 33, offset: 5639},
												val:        "]]",
												ignoreCase: false,
											},
										},
									},
								},
							},
						},
						&zeroOrMoreExpr{
							pos: position{line: 238, col: 119, offset: 9305},
							expr: &choiceExpr{
								pos: position{line: 895, col: 7, offset: 37107},
								alternatives: []interface{}{
									&litMatcher{
										pos:        position{line: 895, col: 7, offset: 37107},
										val:        " ",
										ignoreCase: false,
									},
									&actionExpr{
										pos: position{line: 895, col: 13, offset: 37113},
										run: (*parser).callonSection0Title247,
										expr: &litMatcher{
											pos:        position{line: 895, col: 13, offset: 37113},
											val:        "\t",
											ignoreCase: false,
										},
									},
								},
							},
						},
						&choiceExpr{
							pos: position{line: 903, col: 8, offset: 37209},
							alternatives: []interface{}{
								&litMatcher{
									pos:        position{line: 899, col: 12, offset: 37169},
									val:        "\r\n",
									ignoreCase: false,
								},
								&charClassMatcher{
									pos:        position{line: 899, col: 21, offset: 37178},
									val:        "[\\r\\n]",
									chars:      []rune{'\r', '\n'},
									ignoreCase: false,
									inverted:   false,
								},
								&notExpr{
									pos: position{line: 901, col: 8, offset: 37198},
									expr: &anyMatcher{
										line: 901, col: 9, offset: 37199,
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "Section0Block",
			pos:  position{line: 242, col: 1, offset: 9424},
			expr: &actionExpr{
				pos: position{line: 242, col: 18, offset: 9441},
				run: (*parser).callonSection0Block1,
				expr: &seqExpr{
					pos: position{line: 242, col: 18, offset: 9441},
					exprs: []interface{}{
						&notExpr{
							pos: position{line: 242, col: 18, offset: 9441},
							expr: &ruleRefExpr{
								pos:  position{line: 242, col: 19, offset: 9442},
								name: "Section0",
							},
						},
						&labeledExpr{
							pos:   position{line: 242, col: 28, offset: 9451},
							label: "content",
							expr: &choiceExpr{
								pos: position{line: 242, col: 37, offset: 9460},
								alternatives: []interface{}{
									&ruleRefExpr{
										pos:  position{line: 242, col: 37, offset: 9460},
										name: "Section1",
									},
									&ruleRefExpr{
										pos:  position{line: 242, col: 48, offset: 9471},
										name: "Section2",
									},
									&ruleRefExpr{
										pos:  position{line: 242, col: 59, offset: 9482},
										name: "Section3",
									},
									&ruleRefExpr{
										pos:  position{line: 242, col: 70, offset: 9493},
										name: "Section4",
									},
									&ruleRefExpr{
										pos:  position{line: 242, col: 81, offset: 9504},
										name: "Section5",
									},
									&ruleRefExpr{
										pos:  position{line: 242, col: 92, offset: 9515},
										name: "DocumentBlock",
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "Section1",
			pos:  position{line: 246, col: 1, offset: 9559},
			expr: &actionExpr{
				pos: position{line: 246, col: 13, offset: 9571},
				run: (*parser).callonSection11,
				expr: &seqExpr{
					pos: position{line: 246, col: 13, offset: 9571},
					exprs: []interface{}{
						&notExpr{
							pos: position{line: 246, col: 13, offset: 9571},
							expr: &notExpr{
								pos: position{line: 901, col: 8, offset: 37198},
								expr: &anyMatcher{
									line: 901, col: 9, offset: 37199,
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 247, col: 5, offset: 9642},
							label: "section",
							expr: &actionExpr{
								pos: position{line: 247, col: 14, offset: 9651},
								run: (*parser).callonSection17,
								expr: &seqExpr{
									pos: position{line: 247, col: 14, offset: 9651},
									exprs: []interface{}{
										&labeledExpr{
											pos:   position{line: 247, col: 14, offset: 9651},
											label: "header",
											expr: &ruleRefExpr{
												pos:  position{line: 247, col: 22, offset: 9659},
												name: "Section1Title",
											},
										},
										&labeledExpr{
											pos:   position{line: 247, col: 37, offset: 9674},
											label: "elements",
											expr: &zeroOrMoreExpr{
												pos: position{line: 247, col: 47, offset: 9684},
												expr: &ruleRefExpr{
													pos:  position{line: 247, col: 47, offset: 9684},
													name: "Section1Block",
												},
											},
										},
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "Section1Title",
			pos:  position{line: 255, col: 1, offset: 9861},
			expr: &actionExpr{
				pos: position{line: 255, col: 18, offset: 9878},
				run: (*parser).callonSection1Title1,
				expr: &seqExpr{
					pos: position{line: 255, col: 18, offset: 9878},
					exprs: []interface{}{
						&labeledExpr{
							pos:   position{line: 255, col: 18, offset: 9878},
							label: "attributes",
							expr: &zeroOrMoreExpr{
								pos: position{line: 255, col: 29, offset: 9889},
								expr: &actionExpr{
									pos: position{line: 120, col: 21, offset: 5039},
									run: (*parser).callonSection1Title5,
									expr: &seqExpr{
										pos: position{line: 120, col: 21, offset: 5039},
										exprs: []interface{}{
											&labeledExpr{
												pos:   position{line: 120, col: 21, offset: 5039},
												label: "attr",
												expr: &choiceExpr{
													pos: position{line: 120, col: 27, offset: 5045},
													alternatives: []interface{}{
														&actionExpr{
															pos: position{line: 129, col: 14, offset: 5496},
															run: (*parser).callonSection1Title9,
															expr: &labeledExpr{
																pos:   position{line: 129, col: 14, offset: 5496},
																label: "id",
																expr: &actionExpr{
																	pos: position{line: 135, col: 20, offset: 5626},
																	run: (*parser).callonSection1Title11,
																	expr: &seqExpr{
																		pos: position{line: 135, col: 20, offset: 5626},
																		exprs: []interface{}{
																			&litMatcher{
																				pos:        position{line: 135, col: 20, offset: 5626},
																				val:        "[[",
																				ignoreCase: false,
																			},
																			&labeledExpr{
																				pos:   position{line: 135, col: 25, offset: 5631},
																				label: "id",
																				expr: &actionExpr{
																					pos: position{line: 883, col: 7, offset: 36866},
																					run: (*parser).callonSection1Title15,
																					expr: &oneOrMoreExpr{
																						pos: position{line: 883, col: 7, offset: 36866},
																						expr: &seqExpr{
																							pos: position{line: 883, col: 8, offset: 36867},
																							exprs: []interface{}{
																								&notExpr{
																									pos: position{line: 883, col: 8, offset: 36867},
																									expr: &choiceExpr{
																										pos: position{line: 899, col: 12, offset: 37169},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 899, col: 12, offset: 37169},
																												val:        "\r\n",
																												ignoreCase: false,
																											},
																											&charClassMatcher{
																												pos:        position{line: 899, col: 21, offset: 37178},
																												val:        "[\\r\\n]",
																												chars:      []rune{'\r', '\n'},
																												ignoreCase: false,
																												inverted:   false,
																											},
																										},
																									},
																								},
																								&notExpr{
																									pos: position{line: 883, col: 17, offset: 36876},
																									expr: &choiceExpr{
																										pos: position{line: 895, col: 7, offset: 37107},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 895, col: 7, offset: 37107},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 895, col: 13, offset: 37113},
																												run: (*parser).callonSection1Title25,
																												expr: &litMatcher{
																													pos:        position{line: 895, col: 13, offset: 37113},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																								&notExpr{
																									pos: position{line: 883, col: 21, offset: 36880},
																									expr: &litMatcher{
																										pos:        position{line: 883, col: 22, offset: 36881},
																										val:        "[",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 883, col: 26, offset: 36885},
																									expr: &litMatcher{
																										pos:        position{line: 883, col: 27, offset: 36886},
																										val:        "]",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 883, col: 31, offset: 36890},
																									expr: &litMatcher{
																										pos:        position{line: 883, col: 32, offset: 36891},
																										val:        "<<",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 883, col: 37, offset: 36896},
																									expr: &litMatcher{
																										pos:        position{line: 883, col: 38, offset: 36897},
																										val:        ">>",
																										ignoreCase: false,
																									},
																								},
																								&anyMatcher{
																									line: 883, col: 42, offset: 36901,
																								},
																							},
																						},
																					},
																				},
																			},
																			&litMatcher{
																				pos:        position{line: 135, col: 33, offset: 5639},
																				val:        "]]",
																				ignoreCase: false,
																			},
																		},
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 131, col: 5, offset: 5542},
															run: (*parser).callonSection1Title37,
															expr: &seqExpr{
																pos: position{line: 131, col: 5, offset: 5542},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 131, col: 5, offset: 5542},
																		val:        "[#",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 131, col: 10, offset: 5547},
																		label: "id",
																		expr: &actionExpr{
																			pos: position{line: 883, col: 7, offset: 36866},
																			run: (*parser).callonSection1Title41,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 883, col: 7, offset: 36866},
																				expr: &seqExpr{
																					pos: position{line: 883, col: 8, offset: 36867},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 883, col: 8, offset: 36867},
																							expr: &choiceExpr{
																								pos: position{line: 899, col: 12, offset: 37169},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 899, col: 12, offset: 37169},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 899, col: 21, offset: 37178},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 883, col: 17, offset: 36876},
																							expr: &choiceExpr{
																								pos: position{line: 895, col: 7, offset: 37107},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 895, col: 7, offset: 37107},
																										val:        " ",
																										ignoreCase: false,
																									},
																									&actionExpr{
																										pos: position{line: 895, col: 13, offset: 37113},
																										run: (*parser).callonSection1Title51,
																										expr: &litMatcher{
																											pos:        position{line: 895, col: 13, offset: 37113},
																											val:        "\t",
																											ignoreCase: false,
																										},
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 883, col: 21, offset: 36880},
																							expr: &litMatcher{
																								pos:        position{line: 883, col: 22, offset: 36881},
																								val:        "[",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 883, col: 26, offset: 36885},
																							expr: &litMatcher{
																								pos:        position{line: 883, col: 27, offset: 36886},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 883, col: 31, offset: 36890},
																							expr: &litMatcher{
																								pos:        position{line: 883, col: 32, offset: 36891},
																								val:        "<<",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 883, col: 37, offset: 36896},
																							expr: &litMatcher{
																								pos:        position{line: 883, col: 38, offset: 36897},
																								val:        ">>",
																								ignoreCase: false,
																							},
																						},
																						&anyMatcher{
																							line: 883, col: 42, offset: 36901,
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 131, col: 18, offset: 5555},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 141, col: 17, offset: 5848},
															run: (*parser).callonSection1Title63,
															expr: &seqExpr{
																pos: position{line: 141, col: 17, offset: 5848},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 141, col: 17, offset: 5848},
																		val:        ".",
																		ignoreCase: false,
																	},
																	&notExpr{
																		pos: position{line: 141, col: 21, offset: 5852},
																		expr: &litMatcher{
																			pos:        position{line: 141, col: 22, offset: 5853},
																			val:        ".",
																			ignoreCase: false,
																		},
																	},
																	&notExpr{
																		pos: position{line: 141, col: 26, offset: 5857},
																		expr: &choiceExpr{
																			pos: position{line: 895, col: 7, offset: 37107},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 895, col: 7, offset: 37107},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 895, col: 13, offset: 37113},
																					run: (*parser).callonSection1Title71,
																					expr: &litMatcher{
																						pos:        position{line: 895, col: 13, offset: 37113},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 141, col: 30, offset: 5861},
																		label: "title",
																		expr: &oneOrMoreExpr{
																			pos: position{line: 141, col: 36, offset: 5867},
																			expr: &seqExpr{
																				pos: position{line: 141, col: 37, offset: 5868},
																				exprs: []interface{}{
																					&notExpr{
																						pos: position{line: 141, col: 37, offset: 5868},
																						expr: &choiceExpr{
																							pos: position{line: 899, col: 12, offset: 37169},
																							alternatives: []interface{}{
																								&litMatcher{
																									pos:        position{line: 899, col: 12, offset: 37169},
																									val:        "\r\n",
																									ignoreCase: false,
																								},
																								&charClassMatcher{
																									pos:        position{line: 899, col: 21, offset: 37178},
																									val:        "[\\r\\n]",
																									chars:      []rune{'\r', '\n'},
																									ignoreCase: false,
																									inverted:   false,
																								},
																							},
																						},
																					},
																					&anyMatcher{
																						line: 141, col: 46, offset: 5877,
																					},
																				},
																			},
																		},
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 147, col: 16, offset: 6051},
															run: (*parser).callonSection1Title81,
															expr: &seqExpr{
																pos: position{line: 147, col: 16, offset: 6051},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 147, col: 16, offset: 6051},
																		val:        "[.",
																		ignoreCase: false,
																	},
																	&notExpr{
																		pos: position{line: 147, col: 21, offset: 6056},
																		expr: &choiceExpr{
																			pos: position{line: 895, col: 7, offset: 37107},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 895, col: 7, offset: 37107},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 895, col: 13, offset: 37113},
																					run: (*parser).callonSection1Title87,
																					expr: &litMatcher{
																						pos:        position{line: 895, col: 13, offset: 37113},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 147, col: 25, offset: 6060},
																		label: "role",
																		expr: &oneOrMoreExpr{
																			pos: position{line: 147, col: 30, offset: 6065},
																			expr: &seqExpr{
																				pos: position{line: 147, col: 31, offset: 6066},
																				exprs: []interface{}{
																					&notExpr{
																						pos: position{line: 147, col: 31, offset: 6066},
																						expr: &choiceExpr{
																							pos: position{line: 899, col: 12, offset: 37169},
																							alternatives: []interface{}{
																								&litMatcher{
																									pos:        position{line: 899, col: 12, offset: 37169},
																									val:        "\r\n",
																									ignoreCase: false,
																								},
																								&charClassMatcher{
																									pos:        position{line: 899, col: 21, offset: 37178},
																									val:        "[\\r\\n]",
																									chars:      []rune{'\r', '\n'},
																									ignoreCase: false,
																									inverted:   false,
																								},
																							},
																						},
																					},
																					&notExpr{
																						pos: position{line: 147, col: 40, offset: 6075},
																						expr: &litMatcher{
																							pos:        position{line: 147, col: 41, offset: 6076},
																							val:        "]",
																							ignoreCase: false,
																						},
																					},
																					&anyMatcher{
																						line: 147, col: 45, offset: 6080,
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 147, col: 49, offset: 6084},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 152, col: 30, offset: 6255},
															run: (*parser).callonSection1Title100,
															expr: &seqExpr{
																pos: position{line: 152, col: 30, offset: 6255},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 152, col: 30, offset: 6255},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 152, col: 34, offset: 6259},
																		label: "k",
																		expr: &choiceExpr{
																			pos: position{line: 470, col: 19, offset: 18925},
																			alternatives: []interface{}{
																				&actionExpr{
																					pos: position{line: 470, col: 19, offset: 18925},
																					run: (*parser).callonSection1Title105,
																					expr: &litMatcher{
																						pos:        position{line: 470, col: 19, offset: 18925},
																						val:        "TIP",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 472, col: 5, offset: 18963},
																					run: (*parser).callonSection1Title107,
																					expr: &litMatcher{
																						pos:        position{line: 472, col: 5, offset: 18963},
																						val:        "NOTE",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 474, col: 5, offset: 19003},
																					run: (*parser).callonSection1Title109,
																					expr: &litMatcher{
																						pos:        position{line: 474, col: 5, offset: 19003},
																						val:        "IMPORTANT",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 476, col: 5, offset: 19053},
																					run: (*parser).callonSection1Title111,
																					expr: &litMatcher{
																						pos:        position{line: 476, col: 5, offset: 19053},
																						val:        "WARNING",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 478, col: 5, offset: 19099},
																					run: (*parser).callonSection1Title113,
																					expr: &litMatcher{
																						pos:        position{line: 478, col: 5, offset: 19099},
																						val:        "CAUTION",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 152, col: 53, offset: 6278},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 175, col: 21, offset: 7013},
															run: (*parser).callonSection1Title116,
															expr: &litMatcher{
																pos:        position{line: 175, col: 21, offset: 7013},
																val:        "[horizontal]",
																ignoreCase: false,
															},
														},
														&actionExpr{
															pos: position{line: 157, col: 19, offset: 6439},
															run: (*parser).callonSection1Title118,
															expr: &seqExpr{
																pos: position{line: 157, col: 19, offset: 6439},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 157, col: 19, offset: 6439},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&notExpr{
																		pos: position{line: 157, col: 23, offset: 6443},
																		expr: &choiceExpr{
																			pos: position{line: 895, col: 7, offset: 37107},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 895, col: 7, offset: 37107},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 895, col: 13, offset: 37113},
																					run: (*parser).callonSection1Title124,
																					expr: &litMatcher{
																						pos:        position{line: 895, col: 13, offset: 37113},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 157, col: 27, offset: 6447},
																		label: "attributes",
																		expr: &zeroOrMoreExpr{
																			pos: position{line: 157, col: 38, offset: 6458},
																			expr: &choiceExpr{
																				pos: position{line: 161, col: 21, offset: 6571},
																				alternatives: []interface{}{
																					&actionExpr{
																						pos: position{line: 161, col: 21, offset: 6571},
																						run: (*parser).callonSection1Title129,
																						expr: &seqExpr{
																							pos: position{line: 161, col: 21, offset: 6571},
																							exprs: []interface{}{
																								&labeledExpr{
																									pos:   position{line: 161, col: 21, offset: 6571},
																									label: "key",
																									expr: &actionExpr{
																										pos: position{line: 167, col: 17, offset: 6861},
																										run: (*parser).callonSection1Title132,
																										expr: &seqExpr{
																											pos: position{line: 167, col: 17, offset: 6861},
																											exprs: []interface{}{
																												&notExpr{
																													pos: position{line: 167, col: 17, offset: 6861},
																													expr: &actionExpr{
																														pos: position{line: 207, col: 14, offset: 8362},
																														run: (*parser).callonSection1Title135,
																														expr: &litMatcher{
																															pos:        position{line: 207, col: 14, offset: 8362},
																															val:        "verse",
																															ignoreCase: false,
																														},
																													},
																												},
																												&labeledExpr{
																													pos:   position{line: 167, col: 28, offset: 6872},
																													label: "key",
																													expr: &oneOrMoreExpr{
																														pos: position{line: 167, col: 32, offset: 6876},
																														expr: &seqExpr{
																															pos: position{line: 167, col: 33, offset: 6877},
																															exprs: []interface{}{
																																&notExpr{
																																	pos: position{line: 167, col: 33, offset: 6877},
																																	expr: &litMatcher{
																																		pos:        position{line: 167, col: 34, offset: 6878},
																																		val:        "=",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 167, col: 38, offset: 6882},
																																	expr: &litMatcher{
																																		pos:        position{line: 167, col: 39, offset: 6883},
																																		val:        ",",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 167, col: 43, offset: 6887},
																																	expr: &litMatcher{
																																		pos:        position{line: 167, col: 44, offset: 6888},
																																		val:        "]",
																																		ignoreCase: false,
																																	},
																																},
																																&anyMatcher{
																																	line: 167, col: 48, offset: 6892,
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&litMatcher{
																									pos:        position{line: 161, col: 40, offset: 6590},
																									val:        "=",
																									ignoreCase: false,
																								},
																								&labeledExpr{
																									pos:   position{line: 161, col: 44, offset: 6594},
																									label: "value",
																									expr: &actionExpr{
																										pos: position{line: 171, col: 19, offset: 6940},
																										run: (*parser).callonSection1Title149,
																										expr: &labeledExpr{
																											pos:   position{line: 171, col: 19, offset: 6940},
																											label: "value",
																											expr: &zeroOrMoreExpr{
																												pos: position{line: 171, col: 25, offset: 6946},
																												expr: &seqExpr{
																													pos: position{line: 171, col: 26, offset: 6947},
																													exprs: []interface{}{
																														&notExpr{
																															pos: position{line: 171, col: 26, offset: 6947},
																															expr: &litMatcher{
																																pos:        position{line: 171, col: 27, offset: 6948},
																																val:        "=",
																																ignoreCase: false,
																															},
																														},
																														&notExpr{
																															pos: position{line: 171, col: 31, offset: 6952},
																															expr: &litMatcher{
																																pos:        position{line: 171, col: 32, offset: 6953},
																																val:        ",",
																																ignoreCase: false,
																															},
																														},
																														&notExpr{
																															pos: position{line: 171, col: 36, offset: 6957},
																															expr: &litMatcher{
																																pos:        position{line: 171, col: 37, offset: 6958},
																																val:        "]",
																																ignoreCase: false,
																															},
																														},
																														&anyMatcher{
																															line: 171, col: 41, offset: 6962,
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&zeroOrOneExpr{
																									pos: position{line: 161, col: 67, offset: 6617},
																									expr: &litMatcher{
																										pos:        position{line: 161, col: 67, offset: 6617},
																										val:        ",",
																										ignoreCase: false,
																									},
																								},
																								&zeroOrMoreExpr{
																									pos: position{line: 161, col: 72, offset: 6622},
																									expr: &choiceExpr{
																										pos: position{line: 895, col: 7, offset: 37107},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 895, col: 7, offset: 37107},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 895, col: 13, offset: 37113},
																												run: (*parser).callonSection1Title165,
																												expr: &litMatcher{
																													pos:        position{line: 895, col: 13, offset: 37113},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																					&actionExpr{
																						pos: position{line: 163, col: 5, offset: 6729},
																						run: (*parser).callonSection1Title167,
																						expr: &seqExpr{
																							pos: position{line: 163, col: 5, offset: 6729},
																							exprs: []interface{}{
																								&labeledExpr{
																									pos:   position{line: 163, col: 5, offset: 6729},
																									label: "key",
																									expr: &actionExpr{
																										pos: position{line: 167, col: 17, offset: 6861},
																										run: (*parser).callonSection1Title170,
																										expr: &seqExpr{
																											pos: position{line: 167, col: 17, offset: 6861},
																											exprs: []interface{}{
																												&notExpr{
																													pos: position{line: 167, col: 17, offset: 6861},
																													expr: &actionExpr{
																														pos: position{line: 207, col: 14, offset: 8362},
																														run: (*parser).callonSection1Title173,
																														expr: &litMatcher{
																															pos:        position{line: 207, col: 14, offset: 8362},
																															val:        "verse",
																															ignoreCase: false,
																														},
																													},
																												},
																												&labeledExpr{
																													pos:   position{line: 167, col: 28, offset: 6872},
																													label: "key",
																													expr: &oneOrMoreExpr{
																														pos: position{line: 167, col: 32, offset: 6876},
																														expr: &seqExpr{
																															pos: position{line: 167, col: 33, offset: 6877},
																															exprs: []interface{}{
																																&notExpr{
																																	pos: position{line: 167, col: 33, offset: 6877},
																																	expr: &litMatcher{
																																		pos:        position{line: 167, col: 34, offset: 6878},
																																		val:        "=",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 167, col: 38, offset: 6882},
																																	expr: &litMatcher{
																																		pos:        position{line: 167, col: 39, offset: 6883},
																																		val:        ",",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 167, col: 43, offset: 6887},
																																	expr: &litMatcher{
																																		pos:        position{line: 167, col: 44, offset: 6888},
																																		val:        "]",
																																		ignoreCase: false,
																																	},
																																},
																																&anyMatcher{
																																	line: 167, col: 48, offset: 6892,
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&zeroOrOneExpr{
																									pos: position{line: 163, col: 24, offset: 6748},
																									expr: &litMatcher{
																										pos:        position{line: 163, col: 24, offset: 6748},
																										val:        ",",
																										ignoreCase: false,
																									},
																								},
																								&zeroOrMoreExpr{
																									pos: position{line: 163, col: 29, offset: 6753},
																									expr: &choiceExpr{
																										pos: position{line: 895, col: 7, offset: 37107},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 895, col: 7, offset: 37107},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 895, col: 13, offset: 37113},
																												run: (*parser).callonSection1Title190,
																												expr: &litMatcher{
																													pos:        position{line: 895, col: 13, offset: 37113},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 157, col: 59, offset: 6479},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
													},
												},
											},
											&zeroOrMoreExpr{
												pos: position{line: 120, col: 131, offset: 5149},
												expr: &choiceExpr{
													pos: position{line: 895, col: 7, offset: 37107},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 895, col: 7, offset: 37107},
															val:        " ",
															ignoreCase: false,
														},
														&actionExpr{
															pos: position{line: 895, col: 13, offset: 37113},
															run: (*parser).callonSection1Title196,
															expr: &litMatcher{
																pos:        position{line: 895, col: 13, offset: 37113},
																val:        "\t",
																ignoreCase: false,
															},
														},
													},
												},
											},
											&choiceExpr{
												pos: position{line: 903, col: 8, offset: 37209},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 899, col: 12, offset: 37169},
														val:        "\r\n",
														ignoreCase: false,
													},
													&charClassMatcher{
														pos:        position{line: 899, col: 21, offset: 37178},
														val:        "[\\r\\n]",
														chars:      []rune{'\r', '\n'},
														ignoreCase: false,
														inverted:   false,
													},
													&notExpr{
														pos: position{line: 901, col: 8, offset: 37198},
														expr: &anyMatcher{
															line: 901, col: 9, offset: 37199,
														},
													},
												},
											},
										},
									},
								},
							},
						},
						&litMatcher{
							pos:        position{line: 253, col: 24, offset: 9851},
							val:        "==",
							ignoreCase: false,
						},
						&oneOrMoreExpr{
							pos: position{line: 253, col: 29, offset: 9856},
							expr: &choiceExpr{
								pos: position{line: 895, col: 7, offset: 37107},
								alternatives: []interface{}{
									&litMatcher{
										pos:        position{line: 895, col: 7, offset: 37107},
										val:        " ",
										ignoreCase: false,
									},
									&actionExpr{
										pos: position{line: 895, col: 13, offset: 37113},
										run: (*parser).callonSection1Title207,
										expr: &litMatcher{
											pos:        position{line: 895, col: 13, offset: 37113},
											val:        "\t",
											ignoreCase: false,
										},
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 255, col: 69, offset: 9929},
							label: "content",
							expr: &ruleRefExpr{
								pos:  position{line: 255, col: 78, offset: 9938},
								name: "TitleElements",
							},
						},
						&zeroOrMoreExpr{
							pos: position{line: 255, col: 93, offset: 9953},
							expr: &choiceExpr{
								pos: position{line: 895, col: 7, offset: 37107},
								alternatives: []interface{}{
									&litMatcher{
										pos:        position{line: 895, col: 7, offset: 37107},
										val:        " ",
										ignoreCase: false,
									},
									&actionExpr{
										pos: position{line: 895, col: 13, offset: 37113},
										run: (*parser).callonSection1Title214,
										expr: &litMatcher{
											pos:        position{line: 895, col: 13, offset: 37113},
											val:        "\t",
											ignoreCase: false,
										},
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 255, col: 97, offset: 9957},
							label: "id",
							expr: &zeroOrOneExpr{
								pos: position{line: 255, col: 100, offset: 9960},
								expr: &actionExpr{
									pos: position{line: 135, col: 20, offset: 5626},
									run: (*parser).callonSection1Title218,
									expr: &seqExpr{
										pos: position{line: 135, col: 20, offset: 5626},
										exprs: []interface{}{
											&litMatcher{
												pos:        position{line: 135, col: 20, offset: 5626},
												val:        "[[",
												ignoreCase: false,
											},
											&labeledExpr{
												pos:   position{line: 135, col: 25, offset: 5631},
												label: "id",
												expr: &actionExpr{
													pos: position{line: 883, col: 7, offset: 36866},
													run: (*parser).callonSection1Title222,
													expr: &oneOrMoreExpr{
														pos: position{line: 883, col: 7, offset: 36866},
														expr: &seqExpr{
															pos: position{line: 883, col: 8, offset: 36867},
															exprs: []interface{}{
																&notExpr{
																	pos: position{line: 883, col: 8, offset: 36867},
																	expr: &choiceExpr{
																		pos: position{line: 899, col: 12, offset: 37169},
																		alternatives: []interface{}{
																			&litMatcher{
																				pos:        position{line: 899, col: 12, offset: 37169},
																				val:        "\r\n",
																				ignoreCase: false,
																			},
																			&charClassMatcher{
																				pos:        position{line: 899, col: 21, offset: 37178},
																				val:        "[\\r\\n]",
																				chars:      []rune{'\r', '\n'},
																				ignoreCase: false,
																				inverted:   false,
																			},
																		},
																	},
																},
																&notExpr{
																	pos: position{line: 883, col: 17, offset: 36876},
																	expr: &choiceExpr{
																		pos: position{line: 895, col: 7, offset: 37107},
																		alternatives: []interface{}{
																			&litMatcher{
																				pos:        position{line: 895, col: 7, offset: 37107},
																				val:        " ",
																				ignoreCase: false,
																			},
																			&actionExpr{
																				pos: position{line: 895, col: 13, offset: 37113},
																				run: (*parser).callonSection1Title232,
																				expr: &litMatcher{
																					pos:        position{line: 895, col: 13, offset: 37113},
																					val:        "\t",
																					ignoreCase: false,
																				},
																			},
																		},
																	},
																},
																&notExpr{
																	pos: position{line: 883, col: 21, offset: 36880},
																	expr: &litMatcher{
																		pos:        position{line: 883, col: 22, offset: 36881},
																		val:        "[",
																		ignoreCase: false,
																	},
																},
																&notExpr{
																	pos: position{line: 883, col: 26, offset: 36885},
																	expr: &litMatcher{
																		pos:        position{line: 883, col: 27, offset: 36886},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
																&notExpr{
																	pos: position{line: 883, col: 31, offset: 36890},
																	expr: &litMatcher{
																		pos:        position{line: 883, col: 32, offset: 36891},
																		val:        "<<",
																		ignoreCase: false,
																	},
																},
																&notExpr{
																	pos: position{line: 883, col: 37, offset: 36896},
																	expr: &litMatcher{
																		pos:        position{line: 883, col: 38, offset: 36897},
																		val:        ">>",
																		ignoreCase: false,
																	},
																},
																&anyMatcher{
																	line: 883, col: 42, offset: 36901,
																},
															},
														},
													},
												},
											},
											&litMatcher{
												pos:        position{line: 135, col: 33, offset: 5639},
												val:        "]]",
												ignoreCase: false,
											},
										},
									},
								},
							},
						},
						&zeroOrMoreExpr{
							pos: position{line: 255, col: 119, offset: 9979},
							expr: &choiceExpr{
								pos: position{line: 895, col: 7, offset: 37107},
								alternatives: []interface{}{
									&litMatcher{
										pos:        position{line: 895, col: 7, offset: 37107},
										val:        " ",
										ignoreCase: false,
									},
									&actionExpr{
										pos: position{line: 895, col: 13, offset: 37113},
										run: (*parser).callonSection1Title247,
										expr: &litMatcher{
											pos:        position{line: 895, col: 13, offset: 37113},
											val:        "\t",
											ignoreCase: false,
										},
									},
								},
							},
						},
						&choiceExpr{
							pos: position{line: 903, col: 8, offset: 37209},
							alternatives: []interface{}{
								&litMatcher{
									pos:        position{line: 899, col: 12, offset: 37169},
									val:        "\r\n",
									ignoreCase: false,
								},
								&charClassMatcher{
									pos:        position{line: 899, col: 21, offset: 37178},
									val:        "[\\r\\n]",
									chars:      []rune{'\r', '\n'},
									ignoreCase: false,
									inverted:   false,
								},
								&notExpr{
									pos: position{line: 901, col: 8, offset: 37198},
									expr: &anyMatcher{
										line: 901, col: 9, offset: 37199,
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "Section1Block",
			pos:  position{line: 259, col: 1, offset: 10098},
			expr: &actionExpr{
				pos: position{line: 259, col: 18, offset: 10115},
				run: (*parser).callonSection1Block1,
				expr: &seqExpr{
					pos: position{line: 259, col: 18, offset: 10115},
					exprs: []interface{}{
						&notExpr{
							pos: position{line: 259, col: 18, offset: 10115},
							expr: &ruleRefExpr{
								pos:  position{line: 259, col: 19, offset: 10116},
								name: "Section1Title",
							},
						},
						&labeledExpr{
							pos:   position{line: 259, col: 33, offset: 10130},
							label: "content",
							expr: &choiceExpr{
								pos: position{line: 259, col: 42, offset: 10139},
								alternatives: []interface{}{
									&ruleRefExpr{
										pos:  position{line: 259, col: 42, offset: 10139},
										name: "Section2",
									},
									&ruleRefExpr{
										pos:  position{line: 259, col: 53, offset: 10150},
										name: "Section3",
									},
									&ruleRefExpr{
										pos:  position{line: 259, col: 64, offset: 10161},
										name: "Section4",
									},
									&ruleRefExpr{
										pos:  position{line: 259, col: 75, offset: 10172},
										name: "Section5",
									},
									&ruleRefExpr{
										pos:  position{line: 259, col: 86, offset: 10183},
										name: "DocumentBlock",
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "Section2",
			pos:  position{line: 263, col: 1, offset: 10227},
			expr: &actionExpr{
				pos: position{line: 263, col: 13, offset: 10239},
				run: (*parser).callonSection21,
				expr: &seqExpr{
					pos: position{line: 263, col: 13, offset: 10239},
					exprs: []interface{}{
						&notExpr{
							pos: position{line: 263, col: 13, offset: 10239},
							expr: &notExpr{
								pos: position{line: 901, col: 8, offset: 37198},
								expr: &anyMatcher{
									line: 901, col: 9, offset: 37199,
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 264, col: 5, offset: 10310},
							label: "section",
							expr: &actionExpr{
								pos: position{line: 264, col: 14, offset: 10319},
								run: (*parser).callonSection27,
								expr: &seqExpr{
									pos: position{line: 264, col: 14, offset: 10319},
									exprs: []interface{}{
										&labeledExpr{
											pos:   position{line: 264, col: 14, offset: 10319},
											label: "header",
											expr: &ruleRefExpr{
												pos:  position{line: 264, col: 22, offset: 10327},
												name: "Section2Title",
											},
										},
										&labeledExpr{
											pos:   position{line: 264, col: 37, offset: 10342},
											label: "elements",
											expr: &zeroOrOneExpr{
												pos: position{line: 264, col: 47, offset: 10352},
												expr: &ruleRefExpr{
													pos:  position{line: 264, col: 47, offset: 10352},
													name: "Section2Block",
												},
											},
										},
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "Section2Title",
			pos:  position{line: 272, col: 1, offset: 10539},
			expr: &actionExpr{
				pos: position{line: 272, col: 18, offset: 10556},
				run: (*parser).callonSection2Title1,
				expr: &seqExpr{
					pos: position{line: 272, col: 18, offset: 10556},
					exprs: []interface{}{
						&labeledExpr{
							pos:   position{line: 272, col: 18, offset: 10556},
							label: "attributes",
							expr: &zeroOrMoreExpr{
								pos: position{line: 272, col: 29, offset: 10567},
								expr: &actionExpr{
									pos: position{line: 120, col: 21, offset: 5039},
									run: (*parser).callonSection2Title5,
									expr: &seqExpr{
										pos: position{line: 120, col: 21, offset: 5039},
										exprs: []interface{}{
											&labeledExpr{
												pos:   position{line: 120, col: 21, offset: 5039},
												label: "attr",
												expr: &choiceExpr{
													pos: position{line: 120, col: 27, offset: 5045},
													alternatives: []interface{}{
														&actionExpr{
															pos: position{line: 129, col: 14, offset: 5496},
															run: (*parser).callonSection2Title9,
															expr: &labeledExpr{
																pos:   position{line: 129, col: 14, offset: 5496},
																label: "id",
																expr: &actionExpr{
																	pos: position{line: 135, col: 20, offset: 5626},
																	run: (*parser).callonSection2Title11,
																	expr: &seqExpr{
																		pos: position{line: 135, col: 20, offset: 5626},
																		exprs: []interface{}{
																			&litMatcher{
																				pos:        position{line: 135, col: 20, offset: 5626},
																				val:        "[[",
																				ignoreCase: false,
																			},
																			&labeledExpr{
																				pos:   position{line: 135, col: 25, offset: 5631},
																				label: "id",
																				expr: &actionExpr{
																					pos: position{line: 883, col: 7, offset: 36866},
																					run: (*parser).callonSection2Title15,
																					expr: &oneOrMoreExpr{
																						pos: position{line: 883, col: 7, offset: 36866},
																						expr: &seqExpr{
																							pos: position{line: 883, col: 8, offset: 36867},
																							exprs: []interface{}{
																								&notExpr{
																									pos: position{line: 883, col: 8, offset: 36867},
																									expr: &choiceExpr{
																										pos: position{line: 899, col: 12, offset: 37169},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 899, col: 12, offset: 37169},
																												val:        "\r\n",
																												ignoreCase: false,
																											},
																											&charClassMatcher{
																												pos:        position{line: 899, col: 21, offset: 37178},
																												val:        "[\\r\\n]",
																												chars:      []rune{'\r', '\n'},
																												ignoreCase: false,
																												inverted:   false,
																											},
																										},
																									},
																								},
																								&notExpr{
																									pos: position{line: 883, col: 17, offset: 36876},
																									expr: &choiceExpr{
																										pos: position{line: 895, col: 7, offset: 37107},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 895, col: 7, offset: 37107},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 895, col: 13, offset: 37113},
																												run: (*parser).callonSection2Title25,
																												expr: &litMatcher{
																													pos:        position{line: 895, col: 13, offset: 37113},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																								&notExpr{
																									pos: position{line: 883, col: 21, offset: 36880},
																									expr: &litMatcher{
																										pos:        position{line: 883, col: 22, offset: 36881},
																										val:        "[",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 883, col: 26, offset: 36885},
																									expr: &litMatcher{
																										pos:        position{line: 883, col: 27, offset: 36886},
																										val:        "]",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 883, col: 31, offset: 36890},
																									expr: &litMatcher{
																										pos:        position{line: 883, col: 32, offset: 36891},
																										val:        "<<",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 883, col: 37, offset: 36896},
																									expr: &litMatcher{
																										pos:        position{line: 883, col: 38, offset: 36897},
																										val:        ">>",
																										ignoreCase: false,
																									},
																								},
																								&anyMatcher{
																									line: 883, col: 42, offset: 36901,
																								},
																							},
																						},
																					},
																				},
																			},
																			&litMatcher{
																				pos:        position{line: 135, col: 33, offset: 5639},
																				val:        "]]",
																				ignoreCase: false,
																			},
																		},
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 131, col: 5, offset: 5542},
															run: (*parser).callonSection2Title37,
															expr: &seqExpr{
																pos: position{line: 131, col: 5, offset: 5542},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 131, col: 5, offset: 5542},
																		val:        "[#",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 131, col: 10, offset: 5547},
																		label: "id",
																		expr: &actionExpr{
																			pos: position{line: 883, col: 7, offset: 36866},
																			run: (*parser).callonSection2Title41,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 883, col: 7, offset: 36866},
																				expr: &seqExpr{
																					pos: position{line: 883, col: 8, offset: 36867},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 883, col: 8, offset: 36867},
																							expr: &choiceExpr{
																								pos: position{line: 899, col: 12, offset: 37169},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 899, col: 12, offset: 37169},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 899, col: 21, offset: 37178},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 883, col: 17, offset: 36876},
																							expr: &choiceExpr{
																								pos: position{line: 895, col: 7, offset: 37107},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 895, col: 7, offset: 37107},
																										val:        " ",
																										ignoreCase: false,
																									},
																									&actionExpr{
																										pos: position{line: 895, col: 13, offset: 37113},
																										run: (*parser).callonSection2Title51,
																										expr: &litMatcher{
																											pos:        position{line: 895, col: 13, offset: 37113},
																											val:        "\t",
																											ignoreCase: false,
																										},
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 883, col: 21, offset: 36880},
																							expr: &litMatcher{
																								pos:        position{line: 883, col: 22, offset: 36881},
																								val:        "[",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 883, col: 26, offset: 36885},
																							expr: &litMatcher{
																								pos:        position{line: 883, col: 27, offset: 36886},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 883, col: 31, offset: 36890},
																							expr: &litMatcher{
																								pos:        position{line: 883, col: 32, offset: 36891},
																								val:        "<<",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 883, col: 37, offset: 36896},
																							expr: &litMatcher{
																								pos:        position{line: 883, col: 38, offset: 36897},
																								val:        ">>",
																								ignoreCase: false,
																							},
																						},
																						&anyMatcher{
																							line: 883, col: 42, offset: 36901,
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 131, col: 18, offset: 5555},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 141, col: 17, offset: 5848},
															run: (*parser).callonSection2Title63,
															expr: &seqExpr{
																pos: position{line: 141, col: 17, offset: 5848},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 141, col: 17, offset: 5848},
																		val:        ".",
																		ignoreCase: false,
																	},
																	&notExpr{
																		pos: position{line: 141, col: 21, offset: 5852},
																		expr: &litMatcher{
																			pos:        position{line: 141, col: 22, offset: 5853},
																			val:        ".",
																			ignoreCase: false,
																		},
																	},
																	&notExpr{
																		pos: position{line: 141, col: 26, offset: 5857},
																		expr: &choiceExpr{
																			pos: position{line: 895, col: 7, offset: 37107},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 895, col: 7, offset: 37107},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 895, col: 13, offset: 37113},
																					run: (*parser).callonSection2Title71,
																					expr: &litMatcher{
																						pos:        position{line: 895, col: 13, offset: 37113},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 141, col: 30, offset: 5861},
																		label: "title",
																		expr: &oneOrMoreExpr{
																			pos: position{line: 141, col: 36, offset: 5867},
																			expr: &seqExpr{
																				pos: position{line: 141, col: 37, offset: 5868},
																				exprs: []interface{}{
																					&notExpr{
																						pos: position{line: 141, col: 37, offset: 5868},
																						expr: &choiceExpr{
																							pos: position{line: 899, col: 12, offset: 37169},
																							alternatives: []interface{}{
																								&litMatcher{
																									pos:        position{line: 899, col: 12, offset: 37169},
																									val:        "\r\n",
																									ignoreCase: false,
																								},
																								&charClassMatcher{
																									pos:        position{line: 899, col: 21, offset: 37178},
																									val:        "[\\r\\n]",
																									chars:      []rune{'\r', '\n'},
																									ignoreCase: false,
																									inverted:   false,
																								},
																							},
																						},
																					},
																					&anyMatcher{
																						line: 141, col: 46, offset: 5877,
																					},
																				},
																			},
																		},
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 147, col: 16, offset: 6051},
															run: (*parser).callonSection2Title81,
															expr: &seqExpr{
																pos: position{line: 147, col: 16, offset: 6051},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 147, col: 16, offset: 6051},
																		val:        "[.",
																		ignoreCase: false,
																	},
																	&notExpr{
																		pos: position{line: 147, col: 21, offset: 6056},
																		expr: &choiceExpr{
																			pos: position{line: 895, col: 7, offset: 37107},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 895, col: 7, offset: 37107},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 895, col: 13, offset: 37113},
																					run: (*parser).callonSection2Title87,
																					expr: &litMatcher{
																						pos:        position{line: 895, col: 13, offset: 37113},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 147, col: 25, offset: 6060},
																		label: "role",
																		expr: &oneOrMoreExpr{
																			pos: position{line: 147, col: 30, offset: 6065},
																			expr: &seqExpr{
																				pos: position{line: 147, col: 31, offset: 6066},
																				exprs: []interface{}{
																					&notExpr{
																						pos: position{line: 147, col: 31, offset: 6066},
																						expr: &choiceExpr{
																							pos: position{line: 899, col: 12, offset: 37169},
																							alternatives: []interface{}{
																								&litMatcher{
																									pos:        position{line: 899, col: 12, offset: 37169},
																									val:        "\r\n",
																									ignoreCase: false,
																								},
																								&charClassMatcher{
																									pos:        position{line: 899, col: 21, offset: 37178},
																									val:        "[\\r\\n]",
																									chars:      []rune{'\r', '\n'},
																									ignoreCase: false,
																									inverted:   false,
																								},
																							},
																						},
																					},
																					&notExpr{
																						pos: position{line: 147, col: 40, offset: 6075},
																						expr: &litMatcher{
																							pos:        position{line: 147, col: 41, offset: 6076},
																							val:        "]",
																							ignoreCase: false,
																						},
																					},
																					&anyMatcher{
																						line: 147, col: 45, offset: 6080,
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 147, col: 49, offset: 6084},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 152, col: 30, offset: 6255},
															run: (*parser).callonSection2Title100,
															expr: &seqExpr{
																pos: position{line: 152, col: 30, offset: 6255},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 152, col: 30, offset: 6255},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 152, col: 34, offset: 6259},
																		label: "k",
																		expr: &choiceExpr{
																			pos: position{line: 470, col: 19, offset: 18925},
																			alternatives: []interface{}{
																				&actionExpr{
																					pos: position{line: 470, col: 19, offset: 18925},
																					run: (*parser).callonSection2Title105,
																					expr: &litMatcher{
																						pos:        position{line: 470, col: 19, offset: 18925},
																						val:        "TIP",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 472, col: 5, offset: 18963},
																					run: (*parser).callonSection2Title107,
																					expr: &litMatcher{
																						pos:        position{line: 472, col: 5, offset: 18963},
																						val:        "NOTE",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 474, col: 5, offset: 19003},
																					run: (*parser).callonSection2Title109,
																					expr: &litMatcher{
																						pos:        position{line: 474, col: 5, offset: 19003},
																						val:        "IMPORTANT",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 476, col: 5, offset: 19053},
																					run: (*parser).callonSection2Title111,
																					expr: &litMatcher{
																						pos:        position{line: 476, col: 5, offset: 19053},
																						val:        "WARNING",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 478, col: 5, offset: 19099},
																					run: (*parser).callonSection2Title113,
																					expr: &litMatcher{
																						pos:        position{line: 478, col: 5, offset: 19099},
																						val:        "CAUTION",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 152, col: 53, offset: 6278},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 175, col: 21, offset: 7013},
															run: (*parser).callonSection2Title116,
															expr: &litMatcher{
																pos:        position{line: 175, col: 21, offset: 7013},
																val:        "[horizontal]",
																ignoreCase: false,
															},
														},
														&actionExpr{
															pos: position{line: 157, col: 19, offset: 6439},
															run: (*parser).callonSection2Title118,
															expr: &seqExpr{
																pos: position{line: 157, col: 19, offset: 6439},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 157, col: 19, offset: 6439},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&notExpr{
																		pos: position{line: 157, col: 23, offset: 6443},
																		expr: &choiceExpr{
																			pos: position{line: 895, col: 7, offset: 37107},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 895, col: 7, offset: 37107},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 895, col: 13, offset: 37113},
																					run: (*parser).callonSection2Title124,
																					expr: &litMatcher{
																						pos:        position{line: 895, col: 13, offset: 37113},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 157, col: 27, offset: 6447},
																		label: "attributes",
																		expr: &zeroOrMoreExpr{
																			pos: position{line: 157, col: 38, offset: 6458},
																			expr: &choiceExpr{
																				pos: position{line: 161, col: 21, offset: 6571},
																				alternatives: []interface{}{
																					&actionExpr{
																						pos: position{line: 161, col: 21, offset: 6571},
																						run: (*parser).callonSection2Title129,
																						expr: &seqExpr{
																							pos: position{line: 161, col: 21, offset: 6571},
																							exprs: []interface{}{
																								&labeledExpr{
																									pos:   position{line: 161, col: 21, offset: 6571},
																									label: "key",
																									expr: &actionExpr{
																										pos: position{line: 167, col: 17, offset: 6861},
																										run: (*parser).callonSection2Title132,
																										expr: &seqExpr{
																											pos: position{line: 167, col: 17, offset: 6861},
																											exprs: []interface{}{
																												&notExpr{
																													pos: position{line: 167, col: 17, offset: 6861},
																													expr: &actionExpr{
																														pos: position{line: 207, col: 14, offset: 8362},
																														run: (*parser).callonSection2Title135,
																														expr: &litMatcher{
																															pos:        position{line: 207, col: 14, offset: 8362},
																															val:        "verse",
																															ignoreCase: false,
																														},
																													},
																												},
																												&labeledExpr{
																													pos:   position{line: 167, col: 28, offset: 6872},
																													label: "key",
																													expr: &oneOrMoreExpr{
																														pos: position{line: 167, col: 32, offset: 6876},
																														expr: &seqExpr{
																															pos: position{line: 167, col: 33, offset: 6877},
																															exprs: []interface{}{
																																&notExpr{
																																	pos: position{line: 167, col: 33, offset: 6877},
																																	expr: &litMatcher{
																																		pos:        position{line: 167, col: 34, offset: 6878},
																																		val:        "=",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 167, col: 38, offset: 6882},
																																	expr: &litMatcher{
																																		pos:        position{line: 167, col: 39, offset: 6883},
																																		val:        ",",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 167, col: 43, offset: 6887},
																																	expr: &litMatcher{
																																		pos:        position{line: 167, col: 44, offset: 6888},
																																		val:        "]",
																																		ignoreCase: false,
																																	},
																																},
																																&anyMatcher{
																																	line: 167, col: 48, offset: 6892,
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&litMatcher{
																									pos:        position{line: 161, col: 40, offset: 6590},
																									val:        "=",
																									ignoreCase: false,
																								},
																								&labeledExpr{
																									pos:   position{line: 161, col: 44, offset: 6594},
																									label: "value",
																									expr: &actionExpr{
																										pos: position{line: 171, col: 19, offset: 6940},
																										run: (*parser).callonSection2Title149,
																										expr: &labeledExpr{
																											pos:   position{line: 171, col: 19, offset: 6940},
																											label: "value",
																											expr: &zeroOrMoreExpr{
																												pos: position{line: 171, col: 25, offset: 6946},
																												expr: &seqExpr{
																													pos: position{line: 171, col: 26, offset: 6947},
																													exprs: []interface{}{
																														&notExpr{
																															pos: position{line: 171, col: 26, offset: 6947},
																															expr: &litMatcher{
																																pos:        position{line: 171, col: 27, offset: 6948},
																																val:        "=",
																																ignoreCase: false,
																															},
																														},
																														&notExpr{
																															pos: position{line: 171, col: 31, offset: 6952},
																															expr: &litMatcher{
																																pos:        position{line: 171, col: 32, offset: 6953},
																																val:        ",",
																																ignoreCase: false,
																															},
																														},
																														&notExpr{
																															pos: position{line: 171, col: 36, offset: 6957},
																															expr: &litMatcher{
																																pos:        position{line: 171, col: 37, offset: 6958},
																																val:        "]",
																																ignoreCase: false,
																															},
																														},
																														&anyMatcher{
																															line: 171, col: 41, offset: 6962,
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&zeroOrOneExpr{
																									pos: position{line: 161, col: 67, offset: 6617},
																									expr: &litMatcher{
																										pos:        position{line: 161, col: 67, offset: 6617},
																										val:        ",",
																										ignoreCase: false,
																									},
																								},
																								&zeroOrMoreExpr{
																									pos: position{line: 161, col: 72, offset: 6622},
																									expr: &choiceExpr{
																										pos: position{line: 895, col: 7, offset: 37107},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 895, col: 7, offset: 37107},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 895, col: 13, offset: 37113},
																												run: (*parser).callonSection2Title165,
																												expr: &litMatcher{
																													pos:        position{line: 895, col: 13, offset: 37113},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																					&actionExpr{
																						pos: position{line: 163, col: 5, offset: 6729},
																						run: (*parser).callonSection2Title167,
																						expr: &seqExpr{
																							pos: position{line: 163, col: 5, offset: 6729},
																							exprs: []interface{}{
																								&labeledExpr{
																									pos:   position{line: 163, col: 5, offset: 6729},
																									label: "key",
																									expr: &actionExpr{
																										pos: position{line: 167, col: 17, offset: 6861},
																										run: (*parser).callonSection2Title170,
																										expr: &seqExpr{
																											pos: position{line: 167, col: 17, offset: 6861},
																											exprs: []interface{}{
																												&notExpr{
																													pos: position{line: 167, col: 17, offset: 6861},
																													expr: &actionExpr{
																														pos: position{line: 207, col: 14, offset: 8362},
																														run: (*parser).callonSection2Title173,
																														expr: &litMatcher{
																															pos:        position{line: 207, col: 14, offset: 8362},
																															val:        "verse",
																															ignoreCase: false,
																														},
																													},
																												},
																												&labeledExpr{
																													pos:   position{line: 167, col: 28, offset: 6872},
																													label: "key",
																													expr: &oneOrMoreExpr{
																														pos: position{line: 167, col: 32, offset: 6876},
																														expr: &seqExpr{
																															pos: position{line: 167, col: 33, offset: 6877},
																															exprs: []interface{}{
																																&notExpr{
																																	pos: position{line: 167, col: 33, offset: 6877},
																																	expr: &litMatcher{
																																		pos:        position{line: 167, col: 34, offset: 6878},
																																		val:        "=",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 167, col: 38, offset: 6882},
																																	expr: &litMatcher{
																																		pos:        position{line: 167, col: 39, offset: 6883},
																																		val:        ",",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 167, col: 43, offset: 6887},
																																	expr: &litMatcher{
																																		pos:        position{line: 167, col: 44, offset: 6888},
																																		val:        "]",
																																		ignoreCase: false,
																																	},
																																},
																																&anyMatcher{
																																	line: 167, col: 48, offset: 6892,
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&zeroOrOneExpr{
																									pos: position{line: 163, col: 24, offset: 6748},
																									expr: &litMatcher{
																										pos:        position{line: 163, col: 24, offset: 6748},
																										val:        ",",
																										ignoreCase: false,
																									},
																								},
																								&zeroOrMoreExpr{
																									pos: position{line: 163, col: 29, offset: 6753},
																									expr: &choiceExpr{
																										pos: position{line: 895, col: 7, offset: 37107},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 895, col: 7, offset: 37107},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 895, col: 13, offset: 37113},
																												run: (*parser).callonSection2Title190,
																												expr: &litMatcher{
																													pos:        position{line: 895, col: 13, offset: 37113},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 157, col: 59, offset: 6479},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
													},
												},
											},
											&zeroOrMoreExpr{
												pos: position{line: 120, col: 131, offset: 5149},
												expr: &choiceExpr{
													pos: position{line: 895, col: 7, offset: 37107},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 895, col: 7, offset: 37107},
															val:        " ",
															ignoreCase: false,
														},
														&actionExpr{
															pos: position{line: 895, col: 13, offset: 37113},
															run: (*parser).callonSection2Title196,
															expr: &litMatcher{
																pos:        position{line: 895, col: 13, offset: 37113},
																val:        "\t",
																ignoreCase: false,
															},
														},
													},
												},
											},
											&choiceExpr{
												pos: position{line: 903, col: 8, offset: 37209},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 899, col: 12, offset: 37169},
														val:        "\r\n",
														ignoreCase: false,
													},
													&charClassMatcher{
														pos:        position{line: 899, col: 21, offset: 37178},
														val:        "[\\r\\n]",
														chars:      []rune{'\r', '\n'},
														ignoreCase: false,
														inverted:   false,
													},
													&notExpr{
														pos: position{line: 901, col: 8, offset: 37198},
														expr: &anyMatcher{
															line: 901, col: 9, offset: 37199,
														},
													},
												},
											},
										},
									},
								},
							},
						},
						&litMatcher{
							pos:        position{line: 270, col: 24, offset: 10527},
							val:        "===",
							ignoreCase: false,
						},
						&oneOrMoreExpr{
							pos: position{line: 270, col: 30, offset: 10533},
							expr: &choiceExpr{
								pos: position{line: 895, col: 7, offset: 37107},
								alternatives: []interface{}{
									&litMatcher{
										pos:        position{line: 895, col: 7, offset: 37107},
										val:        " ",
										ignoreCase: false,
									},
									&actionExpr{
										pos: position{line: 895, col: 13, offset: 37113},
										run: (*parser).callonSection2Title207,
										expr: &litMatcher{
											pos:        position{line: 895, col: 13, offset: 37113},
											val:        "\t",
											ignoreCase: false,
										},
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 272, col: 69, offset: 10607},
							label: "content",
							expr: &ruleRefExpr{
								pos:  position{line: 272, col: 78, offset: 10616},
								name: "TitleElements",
							},
						},
						&zeroOrMoreExpr{
							pos: position{line: 272, col: 93, offset: 10631},
							expr: &choiceExpr{
								pos: position{line: 895, col: 7, offset: 37107},
								alternatives: []interface{}{
									&litMatcher{
										pos:        position{line: 895, col: 7, offset: 37107},
										val:        " ",
										ignoreCase: false,
									},
									&actionExpr{
										pos: position{line: 895, col: 13, offset: 37113},
										run: (*parser).callonSection2Title214,
										expr: &litMatcher{
											pos:        position{line: 895, col: 13, offset: 37113},
											val:        "\t",
											ignoreCase: false,
										},
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 272, col: 97, offset: 10635},
							label: "id",
							expr: &zeroOrOneExpr{
								pos: position{line: 272, col: 100, offset: 10638},
								expr: &actionExpr{
									pos: position{line: 135, col: 20, offset: 5626},
									run: (*parser).callonSection2Title218,
									expr: &seqExpr{
										pos: position{line: 135, col: 20, offset: 5626},
										exprs: []interface{}{
											&litMatcher{
												pos:        position{line: 135, col: 20, offset: 5626},
												val:        "[[",
												ignoreCase: false,
											},
											&labeledExpr{
												pos:   position{line: 135, col: 25, offset: 5631},
												label: "id",
												expr: &actionExpr{
													pos: position{line: 883, col: 7, offset: 36866},
													run: (*parser).callonSection2Title222,
													expr: &oneOrMoreExpr{
														pos: position{line: 883, col: 7, offset: 36866},
														expr: &seqExpr{
															pos: position{line: 883, col: 8, offset: 36867},
															exprs: []interface{}{
																&notExpr{
																	pos: position{line: 883, col: 8, offset: 36867},
																	expr: &choiceExpr{
																		pos: position{line: 899, col: 12, offset: 37169},
																		alternatives: []interface{}{
																			&litMatcher{
																				pos:        position{line: 899, col: 12, offset: 37169},
																				val:        "\r\n",
																				ignoreCase: false,
																			},
																			&charClassMatcher{
																				pos:        position{line: 899, col: 21, offset: 37178},
																				val:        "[\\r\\n]",
																				chars:      []rune{'\r', '\n'},
																				ignoreCase: false,
																				inverted:   false,
																			},
																		},
																	},
																},
																&notExpr{
																	pos: position{line: 883, col: 17, offset: 36876},
																	expr: &choiceExpr{
																		pos: position{line: 895, col: 7, offset: 37107},
																		alternatives: []interface{}{
																			&litMatcher{
																				pos:        position{line: 895, col: 7, offset: 37107},
																				val:        " ",
																				ignoreCase: false,
																			},
																			&actionExpr{
																				pos: position{line: 895, col: 13, offset: 37113},
																				run: (*parser).callonSection2Title232,
																				expr: &litMatcher{
																					pos:        position{line: 895, col: 13, offset: 37113},
																					val:        "\t",
																					ignoreCase: false,
																				},
																			},
																		},
																	},
																},
																&notExpr{
																	pos: position{line: 883, col: 21, offset: 36880},
																	expr: &litMatcher{
																		pos:        position{line: 883, col: 22, offset: 36881},
																		val:        "[",
																		ignoreCase: false,
																	},
																},
																&notExpr{
																	pos: position{line: 883, col: 26, offset: 36885},
																	expr: &litMatcher{
																		pos:        position{line: 883, col: 27, offset: 36886},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
																&notExpr{
																	pos: position{line: 883, col: 31, offset: 36890},
																	expr: &litMatcher{
																		pos:        position{line: 883, col: 32, offset: 36891},
																		val:        "<<",
																		ignoreCase: false,
																	},
																},
																&notExpr{
																	pos: position{line: 883, col: 37, offset: 36896},
																	expr: &litMatcher{
																		pos:        position{line: 883, col: 38, offset: 36897},
																		val:        ">>",
																		ignoreCase: false,
																	},
																},
																&anyMatcher{
																	line: 883, col: 42, offset: 36901,
																},
															},
														},
													},
												},
											},
											&litMatcher{
												pos:        position{line: 135, col: 33, offset: 5639},
												val:        "]]",
												ignoreCase: false,
											},
										},
									},
								},
							},
						},
						&zeroOrMoreExpr{
							pos: position{line: 272, col: 119, offset: 10657},
							expr: &choiceExpr{
								pos: position{line: 895, col: 7, offset: 37107},
								alternatives: []interface{}{
									&litMatcher{
										pos:        position{line: 895, col: 7, offset: 37107},
										val:        " ",
										ignoreCase: false,
									},
									&actionExpr{
										pos: position{line: 895, col: 13, offset: 37113},
										run: (*parser).callonSection2Title247,
										expr: &litMatcher{
											pos:        position{line: 895, col: 13, offset: 37113},
											val:        "\t",
											ignoreCase: false,
										},
									},
								},
							},
						},
						&choiceExpr{
							pos: position{line: 903, col: 8, offset: 37209},
							alternatives: []interface{}{
								&litMatcher{
									pos:        position{line: 899, col: 12, offset: 37169},
									val:        "\r\n",
									ignoreCase: false,
								},
								&charClassMatcher{
									pos:        position{line: 899, col: 21, offset: 37178},
									val:        "[\\r\\n]",
									chars:      []rune{'\r', '\n'},
									ignoreCase: false,
									inverted:   false,
								},
								&notExpr{
									pos: position{line: 901, col: 8, offset: 37198},
									expr: &anyMatcher{
										line: 901, col: 9, offset: 37199,
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "Section2Block",
			pos:  position{line: 276, col: 1, offset: 10775},
			expr: &actionExpr{
				pos: position{line: 276, col: 18, offset: 10792},
				run: (*parser).callonSection2Block1,
				expr: &seqExpr{
					pos: position{line: 276, col: 18, offset: 10792},
					exprs: []interface{}{
						&notExpr{
							pos: position{line: 276, col: 18, offset: 10792},
							expr: &ruleRefExpr{
								pos:  position{line: 276, col: 19, offset: 10793},
								name: "Section1Title",
							},
						},
						&notExpr{
							pos: position{line: 276, col: 33, offset: 10807},
							expr: &ruleRefExpr{
								pos:  position{line: 276, col: 34, offset: 10808},
								name: "Section2Title",
							},
						},
						&labeledExpr{
							pos:   position{line: 276, col: 48, offset: 10822},
							label: "content",
							expr: &zeroOrMoreExpr{
								pos: position{line: 276, col: 56, offset: 10830},
								expr: &choiceExpr{
									pos: position{line: 276, col: 57, offset: 10831},
									alternatives: []interface{}{
										&ruleRefExpr{
											pos:  position{line: 276, col: 57, offset: 10831},
											name: "Section3",
										},
										&ruleRefExpr{
											pos:  position{line: 276, col: 68, offset: 10842},
											name: "Section4",
										},
										&ruleRefExpr{
											pos:  position{line: 276, col: 79, offset: 10853},
											name: "Section5",
										},
										&ruleRefExpr{
											pos:  position{line: 276, col: 90, offset: 10864},
											name: "DocumentBlock",
										},
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "Section3",
			pos:  position{line: 280, col: 1, offset: 10909},
			expr: &actionExpr{
				pos: position{line: 280, col: 13, offset: 10921},
				run: (*parser).callonSection31,
				expr: &seqExpr{
					pos: position{line: 280, col: 13, offset: 10921},
					exprs: []interface{}{
						&notExpr{
							pos: position{line: 280, col: 13, offset: 10921},
							expr: &notExpr{
								pos: position{line: 901, col: 8, offset: 37198},
								expr: &anyMatcher{
									line: 901, col: 9, offset: 37199,
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 281, col: 5, offset: 10992},
							label: "section",
							expr: &actionExpr{
								pos: position{line: 281, col: 14, offset: 11001},
								run: (*parser).callonSection37,
								expr: &seqExpr{
									pos: position{line: 281, col: 14, offset: 11001},
									exprs: []interface{}{
										&labeledExpr{
											pos:   position{line: 281, col: 14, offset: 11001},
											label: "header",
											expr: &ruleRefExpr{
												pos:  position{line: 281, col: 22, offset: 11009},
												name: "Section3Title",
											},
										},
										&labeledExpr{
											pos:   position{line: 281, col: 37, offset: 11024},
											label: "elements",
											expr: &zeroOrOneExpr{
												pos: position{line: 281, col: 47, offset: 11034},
												expr: &ruleRefExpr{
													pos:  position{line: 281, col: 47, offset: 11034},
													name: "Section3Block",
												},
											},
										},
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "Section3Title",
			pos:  position{line: 289, col: 1, offset: 11222},
			expr: &actionExpr{
				pos: position{line: 289, col: 18, offset: 11239},
				run: (*parser).callonSection3Title1,
				expr: &seqExpr{
					pos: position{line: 289, col: 18, offset: 11239},
					exprs: []interface{}{
						&labeledExpr{
							pos:   position{line: 289, col: 18, offset: 11239},
							label: "attributes",
							expr: &zeroOrMoreExpr{
								pos: position{line: 289, col: 29, offset: 11250},
								expr: &actionExpr{
									pos: position{line: 120, col: 21, offset: 5039},
									run: (*parser).callonSection3Title5,
									expr: &seqExpr{
										pos: position{line: 120, col: 21, offset: 5039},
										exprs: []interface{}{
											&labeledExpr{
												pos:   position{line: 120, col: 21, offset: 5039},
												label: "attr",
												expr: &choiceExpr{
													pos: position{line: 120, col: 27, offset: 5045},
													alternatives: []interface{}{
														&actionExpr{
															pos: position{line: 129, col: 14, offset: 5496},
															run: (*parser).callonSection3Title9,
															expr: &labeledExpr{
																pos:   position{line: 129, col: 14, offset: 5496},
																label: "id",
																expr: &actionExpr{
																	pos: position{line: 135, col: 20, offset: 5626},
																	run: (*parser).callonSection3Title11,
																	expr: &seqExpr{
																		pos: position{line: 135, col: 20, offset: 5626},
																		exprs: []interface{}{
																			&litMatcher{
																				pos:        position{line: 135, col: 20, offset: 5626},
																				val:        "[[",
																				ignoreCase: false,
																			},
																			&labeledExpr{
																				pos:   position{line: 135, col: 25, offset: 5631},
																				label: "id",
																				expr: &actionExpr{
																					pos: position{line: 883, col: 7, offset: 36866},
																					run: (*parser).callonSection3Title15,
																					expr: &oneOrMoreExpr{
																						pos: position{line: 883, col: 7, offset: 36866},
																						expr: &seqExpr{
																							pos: position{line: 883, col: 8, offset: 36867},
																							exprs: []interface{}{
																								&notExpr{
																									pos: position{line: 883, col: 8, offset: 36867},
																									expr: &choiceExpr{
																										pos: position{line: 899, col: 12, offset: 37169},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 899, col: 12, offset: 37169},
																												val:        "\r\n",
																												ignoreCase: false,
																											},
																											&charClassMatcher{
																												pos:        position{line: 899, col: 21, offset: 37178},
																												val:        "[\\r\\n]",
																												chars:      []rune{'\r', '\n'},
																												ignoreCase: false,
																												inverted:   false,
																											},
																										},
																									},
																								},
																								&notExpr{
																									pos: position{line: 883, col: 17, offset: 36876},
																									expr: &choiceExpr{
																										pos: position{line: 895, col: 7, offset: 37107},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 895, col: 7, offset: 37107},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 895, col: 13, offset: 37113},
																												run: (*parser).callonSection3Title25,
																												expr: &litMatcher{
																													pos:        position{line: 895, col: 13, offset: 37113},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																								&notExpr{
																									pos: position{line: 883, col: 21, offset: 36880},
																									expr: &litMatcher{
																										pos:        position{line: 883, col: 22, offset: 36881},
																										val:        "[",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 883, col: 26, offset: 36885},
																									expr: &litMatcher{
																										pos:        position{line: 883, col: 27, offset: 36886},
																										val:        "]",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 883, col: 31, offset: 36890},
																									expr: &litMatcher{
																										pos:        position{line: 883, col: 32, offset: 36891},
																										val:        "<<",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 883, col: 37, offset: 36896},
																									expr: &litMatcher{
																										pos:        position{line: 883, col: 38, offset: 36897},
																										val:        ">>",
																										ignoreCase: false,
																									},
																								},
																								&anyMatcher{
																									line: 883, col: 42, offset: 36901,
																								},
																							},
																						},
																					},
																				},
																			},
																			&litMatcher{
																				pos:        position{line: 135, col: 33, offset: 5639},
																				val:        "]]",
																				ignoreCase: false,
																			},
																		},
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 131, col: 5, offset: 5542},
															run: (*parser).callonSection3Title37,
															expr: &seqExpr{
																pos: position{line: 131, col: 5, offset: 5542},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 131, col: 5, offset: 5542},
																		val:        "[#",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 131, col: 10, offset: 5547},
																		label: "id",
																		expr: &actionExpr{
																			pos: position{line: 883, col: 7, offset: 36866},
																			run: (*parser).callonSection3Title41,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 883, col: 7, offset: 36866},
																				expr: &seqExpr{
																					pos: position{line: 883, col: 8, offset: 36867},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 883, col: 8, offset: 36867},
																							expr: &choiceExpr{
																								pos: position{line: 899, col: 12, offset: 37169},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 899, col: 12, offset: 37169},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 899, col: 21, offset: 37178},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 883, col: 17, offset: 36876},
																							expr: &choiceExpr{
																								pos: position{line: 895, col: 7, offset: 37107},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 895, col: 7, offset: 37107},
																										val:        " ",
																										ignoreCase: false,
																									},
																									&actionExpr{
																										pos: position{line: 895, col: 13, offset: 37113},
																										run: (*parser).callonSection3Title51,
																										expr: &litMatcher{
																											pos:        position{line: 895, col: 13, offset: 37113},
																											val:        "\t",
																											ignoreCase: false,
																										},
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 883, col: 21, offset: 36880},
																							expr: &litMatcher{
																								pos:        position{line: 883, col: 22, offset: 36881},
																								val:        "[",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 883, col: 26, offset: 36885},
																							expr: &litMatcher{
																								pos:        position{line: 883, col: 27, offset: 36886},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 883, col: 31, offset: 36890},
																							expr: &litMatcher{
																								pos:        position{line: 883, col: 32, offset: 36891},
																								val:        "<<",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 883, col: 37, offset: 36896},
																							expr: &litMatcher{
																								pos:        position{line: 883, col: 38, offset: 36897},
																								val:        ">>",
																								ignoreCase: false,
																							},
																						},
																						&anyMatcher{
																							line: 883, col: 42, offset: 36901,
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 131, col: 18, offset: 5555},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 141, col: 17, offset: 5848},
															run: (*parser).callonSection3Title63,
															expr: &seqExpr{
																pos: position{line: 141, col: 17, offset: 5848},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 141, col: 17, offset: 5848},
																		val:        ".",
																		ignoreCase: false,
																	},
																	&notExpr{
																		pos: position{line: 141, col: 21, offset: 5852},
																		expr: &litMatcher{
																			pos:        position{line: 141, col: 22, offset: 5853},
																			val:        ".",
																			ignoreCase: false,
																		},
																	},
																	&notExpr{
																		pos: position{line: 141, col: 26, offset: 5857},
																		expr: &choiceExpr{
																			pos: position{line: 895, col: 7, offset: 37107},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 895, col: 7, offset: 37107},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 895, col: 13, offset: 37113},
																					run: (*parser).callonSection3Title71,
																					expr: &litMatcher{
																						pos:        position{line: 895, col: 13, offset: 37113},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 141, col: 30, offset: 5861},
																		label: "title",
																		expr: &oneOrMoreExpr{
																			pos: position{line: 141, col: 36, offset: 5867},
																			expr: &seqExpr{
																				pos: position{line: 141, col: 37, offset: 5868},
																				exprs: []interface{}{
																					&notExpr{
																						pos: position{line: 141, col: 37, offset: 5868},
																						expr: &choiceExpr{
																							pos: position{line: 899, col: 12, offset: 37169},
																							alternatives: []interface{}{
																								&litMatcher{
																									pos:        position{line: 899, col: 12, offset: 37169},
																									val:        "\r\n",
																									ignoreCase: false,
																								},
																								&charClassMatcher{
																									pos:        position{line: 899, col: 21, offset: 37178},
																									val:        "[\\r\\n]",
																									chars:      []rune{'\r', '\n'},
																									ignoreCase: false,
																									inverted:   false,
																								},
																							},
																						},
																					},
																					&anyMatcher{
																						line: 141, col: 46, offset: 5877,
																					},
																				},
																			},
																		},
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 147, col: 16, offset: 6051},
															run: (*parser).callonSection3Title81,
															expr: &seqExpr{
																pos: position{line: 147, col: 16, offset: 6051},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 147, col: 16, offset: 6051},
																		val:        "[.",
																		ignoreCase: false,
																	},
																	&notExpr{
																		pos: position{line: 147, col: 21, offset: 6056},
																		expr: &choiceExpr{
																			pos: position{line: 895, col: 7, offset: 37107},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 895, col: 7, offset: 37107},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 895, col: 13, offset: 37113},
																					run: (*parser).callonSection3Title87,
																					expr: &litMatcher{
																						pos:        position{line: 895, col: 13, offset: 37113},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 147, col: 25, offset: 6060},
																		label: "role",
																		expr: &oneOrMoreExpr{
																			pos: position{line: 147, col: 30, offset: 6065},
																			expr: &seqExpr{
																				pos: position{line: 147, col: 31, offset: 6066},
																				exprs: []interface{}{
																					&notExpr{
																						pos: position{line: 147, col: 31, offset: 6066},
																						expr: &choiceExpr{
																							pos: position{line: 899, col: 12, offset: 37169},
																							alternatives: []interface{}{
																								&litMatcher{
																									pos:        position{line: 899, col: 12, offset: 37169},
																									val:        "\r\n",
																									ignoreCase: false,
																								},
																								&charClassMatcher{
																									pos:        position{line: 899, col: 21, offset: 37178},
																									val:        "[\\r\\n]",
																									chars:      []rune{'\r', '\n'},
																									ignoreCase: false,
																									inverted:   false,
																								},
																							},
																						},
																					},
																					&notExpr{
																						pos: position{line: 147, col: 40, offset: 6075},
																						expr: &litMatcher{
																							pos:        position{line: 147, col: 41, offset: 6076},
																							val:        "]",
																							ignoreCase: false,
																						},
																					},
																					&anyMatcher{
																						line: 147, col: 45, offset: 6080,
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 147, col: 49, offset: 6084},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 152, col: 30, offset: 6255},
															run: (*parser).callonSection3Title100,
															expr: &seqExpr{
																pos: position{line: 152, col: 30, offset: 6255},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 152, col: 30, offset: 6255},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 152, col: 34, offset: 6259},
																		label: "k",
																		expr: &choiceExpr{
																			pos: position{line: 470, col: 19, offset: 18925},
																			alternatives: []interface{}{
																				&actionExpr{
																					pos: position{line: 470, col: 19, offset: 18925},
																					run: (*parser).callonSection3Title105,
																					expr: &litMatcher{
																						pos:        position{line: 470, col: 19, offset: 18925},
																						val:        "TIP",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 472, col: 5, offset: 18963},
																					run: (*parser).callonSection3Title107,
																					expr: &litMatcher{
																						pos:        position{line: 472, col: 5, offset: 18963},
																						val:        "NOTE",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 474, col: 5, offset: 19003},
																					run: (*parser).callonSection3Title109,
																					expr: &litMatcher{
																						pos:        position{line: 474, col: 5, offset: 19003},
																						val:        "IMPORTANT",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 476, col: 5, offset: 19053},
																					run: (*parser).callonSection3Title111,
																					expr: &litMatcher{
																						pos:        position{line: 476, col: 5, offset: 19053},
																						val:        "WARNING",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 478, col: 5, offset: 19099},
																					run: (*parser).callonSection3Title113,
																					expr: &litMatcher{
																						pos:        position{line: 478, col: 5, offset: 19099},
																						val:        "CAUTION",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 152, col: 53, offset: 6278},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 175, col: 21, offset: 7013},
															run: (*parser).callonSection3Title116,
															expr: &litMatcher{
																pos:        position{line: 175, col: 21, offset: 7013},
																val:        "[horizontal]",
																ignoreCase: false,
															},
														},
														&actionExpr{
															pos: position{line: 157, col: 19, offset: 6439},
															run: (*parser).callonSection3Title118,
															expr: &seqExpr{
																pos: position{line: 157, col: 19, offset: 6439},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 157, col: 19, offset: 6439},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&notExpr{
																		pos: position{line: 157, col: 23, offset: 6443},
																		expr: &choiceExpr{
																			pos: position{line: 895, col: 7, offset: 37107},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 895, col: 7, offset: 37107},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 895, col: 13, offset: 37113},
																					run: (*parser).callonSection3Title124,
																					expr: &litMatcher{
																						pos:        position{line: 895, col: 13, offset: 37113},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 157, col: 27, offset: 6447},
																		label: "attributes",
																		expr: &zeroOrMoreExpr{
																			pos: position{line: 157, col: 38, offset: 6458},
																			expr: &choiceExpr{
																				pos: position{line: 161, col: 21, offset: 6571},
																				alternatives: []interface{}{
																					&actionExpr{
																						pos: position{line: 161, col: 21, offset: 6571},
																						run: (*parser).callonSection3Title129,
																						expr: &seqExpr{
																							pos: position{line: 161, col: 21, offset: 6571},
																							exprs: []interface{}{
																								&labeledExpr{
																									pos:   position{line: 161, col: 21, offset: 6571},
																									label: "key",
																									expr: &actionExpr{
																										pos: position{line: 167, col: 17, offset: 6861},
																										run: (*parser).callonSection3Title132,
																										expr: &seqExpr{
																											pos: position{line: 167, col: 17, offset: 6861},
																											exprs: []interface{}{
																												&notExpr{
																													pos: position{line: 167, col: 17, offset: 6861},
																													expr: &actionExpr{
																														pos: position{line: 207, col: 14, offset: 8362},
																														run: (*parser).callonSection3Title135,
																														expr: &litMatcher{
																															pos:        position{line: 207, col: 14, offset: 8362},
																															val:        "verse",
																															ignoreCase: false,
																														},
																													},
																												},
																												&labeledExpr{
																													pos:   position{line: 167, col: 28, offset: 6872},
																													label: "key",
																													expr: &oneOrMoreExpr{
																														pos: position{line: 167, col: 32, offset: 6876},
																														expr: &seqExpr{
																															pos: position{line: 167, col: 33, offset: 6877},
																															exprs: []interface{}{
																																&notExpr{
																																	pos: position{line: 167, col: 33, offset: 6877},
																																	expr: &litMatcher{
																																		pos:        position{line: 167, col: 34, offset: 6878},
																																		val:        "=",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 167, col: 38, offset: 6882},
																																	expr: &litMatcher{
																																		pos:        position{line: 167, col: 39, offset: 6883},
																																		val:        ",",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 167, col: 43, offset: 6887},
																																	expr: &litMatcher{
																																		pos:        position{line: 167, col: 44, offset: 6888},
																																		val:        "]",
																																		ignoreCase: false,
																																	},
																																},
																																&anyMatcher{
																																	line: 167, col: 48, offset: 6892,
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&litMatcher{
																									pos:        position{line: 161, col: 40, offset: 6590},
																									val:        "=",
																									ignoreCase: false,
																								},
																								&labeledExpr{
																									pos:   position{line: 161, col: 44, offset: 6594},
																									label: "value",
																									expr: &actionExpr{
																										pos: position{line: 171, col: 19, offset: 6940},
																										run: (*parser).callonSection3Title149,
																										expr: &labeledExpr{
																											pos:   position{line: 171, col: 19, offset: 6940},
																											label: "value",
																											expr: &zeroOrMoreExpr{
																												pos: position{line: 171, col: 25, offset: 6946},
																												expr: &seqExpr{
																													pos: position{line: 171, col: 26, offset: 6947},
																													exprs: []interface{}{
																														&notExpr{
																															pos: position{line: 171, col: 26, offset: 6947},
																															expr: &litMatcher{
																																pos:        position{line: 171, col: 27, offset: 6948},
																																val:        "=",
																																ignoreCase: false,
																															},
																														},
																														&notExpr{
																															pos: position{line: 171, col: 31, offset: 6952},
																															expr: &litMatcher{
																																pos:        position{line: 171, col: 32, offset: 6953},
																																val:        ",",
																																ignoreCase: false,
																															},
																														},
																														&notExpr{
																															pos: position{line: 171, col: 36, offset: 6957},
																															expr: &litMatcher{
																																pos:        position{line: 171, col: 37, offset: 6958},
																																val:        "]",
																																ignoreCase: false,
																															},
																														},
																														&anyMatcher{
																															line: 171, col: 41, offset: 6962,
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&zeroOrOneExpr{
																									pos: position{line: 161, col: 67, offset: 6617},
																									expr: &litMatcher{
																										pos:        position{line: 161, col: 67, offset: 6617},
																										val:        ",",
																										ignoreCase: false,
																									},
																								},
																								&zeroOrMoreExpr{
																									pos: position{line: 161, col: 72, offset: 6622},
																									expr: &choiceExpr{
																										pos: position{line: 895, col: 7, offset: 37107},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 895, col: 7, offset: 37107},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 895, col: 13, offset: 37113},
																												run: (*parser).callonSection3Title165,
																												expr: &litMatcher{
																													pos:        position{line: 895, col: 13, offset: 37113},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																					&actionExpr{
																						pos: position{line: 163, col: 5, offset: 6729},
																						run: (*parser).callonSection3Title167,
																						expr: &seqExpr{
																							pos: position{line: 163, col: 5, offset: 6729},
																							exprs: []interface{}{
																								&labeledExpr{
																									pos:   position{line: 163, col: 5, offset: 6729},
																									label: "key",
																									expr: &actionExpr{
																										pos: position{line: 167, col: 17, offset: 6861},
																										run: (*parser).callonSection3Title170,
																										expr: &seqExpr{
																											pos: position{line: 167, col: 17, offset: 6861},
																											exprs: []interface{}{
																												&notExpr{
																													pos: position{line: 167, col: 17, offset: 6861},
																													expr: &actionExpr{
																														pos: position{line: 207, col: 14, offset: 8362},
																														run: (*parser).callonSection3Title173,
																														expr: &litMatcher{
																															pos:        position{line: 207, col: 14, offset: 8362},
																															val:        "verse",
																															ignoreCase: false,
																														},
																													},
																												},
																												&labeledExpr{
																													pos:   position{line: 167, col: 28, offset: 6872},
																													label: "key",
																													expr: &oneOrMoreExpr{
																														pos: position{line: 167, col: 32, offset: 6876},
																														expr: &seqExpr{
																															pos: position{line: 167, col: 33, offset: 6877},
																															exprs: []interface{}{
																																&notExpr{
																																	pos: position{line: 167, col: 33, offset: 6877},
																																	expr: &litMatcher{
																																		pos:        position{line: 167, col: 34, offset: 6878},
																																		val:        "=",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 167, col: 38, offset: 6882},
																																	expr: &litMatcher{
																																		pos:        position{line: 167, col: 39, offset: 6883},
																																		val:        ",",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 167, col: 43, offset: 6887},
																																	expr: &litMatcher{
																																		pos:        position{line: 167, col: 44, offset: 6888},
																																		val:        "]",
																																		ignoreCase: false,
																																	},
																																},
																																&anyMatcher{
																																	line: 167, col: 48, offset: 6892,
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&zeroOrOneExpr{
																									pos: position{line: 163, col: 24, offset: 6748},
																									expr: &litMatcher{
																										pos:        position{line: 163, col: 24, offset: 6748},
																										val:        ",",
																										ignoreCase: false,
																									},
																								},
																								&zeroOrMoreExpr{
																									pos: position{line: 163, col: 29, offset: 6753},
																									expr: &choiceExpr{
																										pos: position{line: 895, col: 7, offset: 37107},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 895, col: 7, offset: 37107},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 895, col: 13, offset: 37113},
																												run: (*parser).callonSection3Title190,
																												expr: &litMatcher{
																													pos:        position{line: 895, col: 13, offset: 37113},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 157, col: 59, offset: 6479},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
													},
												},
											},
											&zeroOrMoreExpr{
												pos: position{line: 120, col: 131, offset: 5149},
												expr: &choiceExpr{
													pos: position{line: 895, col: 7, offset: 37107},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 895, col: 7, offset: 37107},
															val:        " ",
															ignoreCase: false,
														},
														&actionExpr{
															pos: position{line: 895, col: 13, offset: 37113},
															run: (*parser).callonSection3Title196,
															expr: &litMatcher{
																pos:        position{line: 895, col: 13, offset: 37113},
																val:        "\t",
																ignoreCase: false,
															},
														},
													},
												},
											},
											&choiceExpr{
												pos: position{line: 903, col: 8, offset: 37209},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 899, col: 12, offset: 37169},
														val:        "\r\n",
														ignoreCase: false,
													},
													&charClassMatcher{
														pos:        position{line: 899, col: 21, offset: 37178},
														val:        "[\\r\\n]",
														chars:      []rune{'\r', '\n'},
														ignoreCase: false,
														inverted:   false,
													},
													&notExpr{
														pos: position{line: 901, col: 8, offset: 37198},
														expr: &anyMatcher{
															line: 901, col: 9, offset: 37199,
														},
													},
												},
											},
										},
									},
								},
							},
						},
						&litMatcher{
							pos:        position{line: 287, col: 24, offset: 11209},
							val:        "====",
							ignoreCase: false,
						},
						&oneOrMoreExpr{
							pos: position{line: 287, col: 31, offset: 11216},
							expr: &choiceExpr{
								pos: position{line: 895, col: 7, offset: 37107},
								alternatives: []interface{}{
									&litMatcher{
										pos:        position{line: 895, col: 7, offset: 37107},
										val:        " ",
										ignoreCase: false,
									},
									&actionExpr{
										pos: position{line: 895, col: 13, offset: 37113},
										run: (*parser).callonSection3Title207,
										expr: &litMatcher{
											pos:        position{line: 895, col: 13, offset: 37113},
											val:        "\t",
											ignoreCase: false,
										},
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 289, col: 69, offset: 11290},
							label: "content",
							expr: &ruleRefExpr{
								pos:  position{line: 289, col: 78, offset: 11299},
								name: "TitleElements",
							},
						},
						&zeroOrMoreExpr{
							pos: position{line: 289, col: 93, offset: 11314},
							expr: &choiceExpr{
								pos: position{line: 895, col: 7, offset: 37107},
								alternatives: []interface{}{
									&litMatcher{
										pos:        position{line: 895, col: 7, offset: 37107},
										val:        " ",
										ignoreCase: false,
									},
									&actionExpr{
										pos: position{line: 895, col: 13, offset: 37113},
										run: (*parser).callonSection3Title214,
										expr: &litMatcher{
											pos:        position{line: 895, col: 13, offset: 37113},
											val:        "\t",
											ignoreCase: false,
										},
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 289, col: 97, offset: 11318},
							label: "id",
							expr: &zeroOrOneExpr{
								pos: position{line: 289, col: 100, offset: 11321},
								expr: &actionExpr{
									pos: position{line: 135, col: 20, offset: 5626},
									run: (*parser).callonSection3Title218,
									expr: &seqExpr{
										pos: position{line: 135, col: 20, offset: 5626},
										exprs: []interface{}{
											&litMatcher{
												pos:        position{line: 135, col: 20, offset: 5626},
												val:        "[[",
												ignoreCase: false,
											},
											&labeledExpr{
												pos:   position{line: 135, col: 25, offset: 5631},
												label: "id",
												expr: &actionExpr{
													pos: position{line: 883, col: 7, offset: 36866},
													run: (*parser).callonSection3Title222,
													expr: &oneOrMoreExpr{
														pos: position{line: 883, col: 7, offset: 36866},
														expr: &seqExpr{
															pos: position{line: 883, col: 8, offset: 36867},
															exprs: []interface{}{
																&notExpr{
																	pos: position{line: 883, col: 8, offset: 36867},
																	expr: &choiceExpr{
																		pos: position{line: 899, col: 12, offset: 37169},
																		alternatives: []interface{}{
																			&litMatcher{
																				pos:        position{line: 899, col: 12, offset: 37169},
																				val:        "\r\n",
																				ignoreCase: false,
																			},
																			&charClassMatcher{
																				pos:        position{line: 899, col: 21, offset: 37178},
																				val:        "[\\r\\n]",
																				chars:      []rune{'\r', '\n'},
																				ignoreCase: false,
																				inverted:   false,
																			},
																		},
																	},
																},
																&notExpr{
																	pos: position{line: 883, col: 17, offset: 36876},
																	expr: &choiceExpr{
																		pos: position{line: 895, col: 7, offset: 37107},
																		alternatives: []interface{}{
																			&litMatcher{
																				pos:        position{line: 895, col: 7, offset: 37107},
																				val:        " ",
																				ignoreCase: false,
																			},
																			&actionExpr{
																				pos: position{line: 895, col: 13, offset: 37113},
																				run: (*parser).callonSection3Title232,
																				expr: &litMatcher{
																					pos:        position{line: 895, col: 13, offset: 37113},
																					val:        "\t",
																					ignoreCase: false,
																				},
																			},
																		},
																	},
																},
																&notExpr{
																	pos: position{line: 883, col: 21, offset: 36880},
																	expr: &litMatcher{
																		pos:        position{line: 883, col: 22, offset: 36881},
																		val:        "[",
																		ignoreCase: false,
																	},
																},
																&notExpr{
																	pos: position{line: 883, col: 26, offset: 36885},
																	expr: &litMatcher{
																		pos:        position{line: 883, col: 27, offset: 36886},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
																&notExpr{
																	pos: position{line: 883, col: 31, offset: 36890},
																	expr: &litMatcher{
																		pos:        position{line: 883, col: 32, offset: 36891},
																		val:        "<<",
																		ignoreCase: false,
																	},
																},
																&notExpr{
																	pos: position{line: 883, col: 37, offset: 36896},
																	expr: &litMatcher{
																		pos:        position{line: 883, col: 38, offset: 36897},
																		val:        ">>",
																		ignoreCase: false,
																	},
																},
																&anyMatcher{
																	line: 883, col: 42, offset: 36901,
																},
															},
														},
													},
												},
											},
											&litMatcher{
												pos:        position{line: 135, col: 33, offset: 5639},
												val:        "]]",
												ignoreCase: false,
											},
										},
									},
								},
							},
						},
						&choiceExpr{
							pos: position{line: 903, col: 8, offset: 37209},
							alternatives: []interface{}{
								&litMatcher{
									pos:        position{line: 899, col: 12, offset: 37169},
									val:        "\r\n",
									ignoreCase: false,
								},
								&charClassMatcher{
									pos:        position{line: 899, col: 21, offset: 37178},
									val:        "[\\r\\n]",
									chars:      []rune{'\r', '\n'},
									ignoreCase: false,
									inverted:   false,
								},
								&notExpr{
									pos: position{line: 901, col: 8, offset: 37198},
									expr: &anyMatcher{
										line: 901, col: 9, offset: 37199,
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "Section3Block",
			pos:  position{line: 293, col: 1, offset: 11454},
			expr: &actionExpr{
				pos: position{line: 293, col: 18, offset: 11471},
				run: (*parser).callonSection3Block1,
				expr: &seqExpr{
					pos: position{line: 293, col: 18, offset: 11471},
					exprs: []interface{}{
						&notExpr{
							pos: position{line: 293, col: 18, offset: 11471},
							expr: &ruleRefExpr{
								pos:  position{line: 293, col: 19, offset: 11472},
								name: "Section1Title",
							},
						},
						&notExpr{
							pos: position{line: 293, col: 33, offset: 11486},
							expr: &ruleRefExpr{
								pos:  position{line: 293, col: 34, offset: 11487},
								name: "Section2Title",
							},
						},
						&notExpr{
							pos: position{line: 293, col: 48, offset: 11501},
							expr: &ruleRefExpr{
								pos:  position{line: 293, col: 49, offset: 11502},
								name: "Section3Title",
							},
						},
						&labeledExpr{
							pos:   position{line: 293, col: 64, offset: 11517},
							label: "content",
							expr: &zeroOrMoreExpr{
								pos: position{line: 293, col: 72, offset: 11525},
								expr: &choiceExpr{
									pos: position{line: 293, col: 73, offset: 11526},
									alternatives: []interface{}{
										&ruleRefExpr{
											pos:  position{line: 293, col: 73, offset: 11526},
											name: "Section4",
										},
										&ruleRefExpr{
											pos:  position{line: 293, col: 84, offset: 11537},
											name: "Section5",
										},
										&ruleRefExpr{
											pos:  position{line: 293, col: 95, offset: 11548},
											name: "DocumentBlock",
										},
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "Section4",
			pos:  position{line: 297, col: 1, offset: 11593},
			expr: &actionExpr{
				pos: position{line: 297, col: 13, offset: 11605},
				run: (*parser).callonSection41,
				expr: &seqExpr{
					pos: position{line: 297, col: 13, offset: 11605},
					exprs: []interface{}{
						&notExpr{
							pos: position{line: 297, col: 13, offset: 11605},
							expr: &notExpr{
								pos: position{line: 901, col: 8, offset: 37198},
								expr: &anyMatcher{
									line: 901, col: 9, offset: 37199,
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 298, col: 5, offset: 11676},
							label: "section",
							expr: &actionExpr{
								pos: position{line: 298, col: 14, offset: 11685},
								run: (*parser).callonSection47,
								expr: &seqExpr{
									pos: position{line: 298, col: 14, offset: 11685},
									exprs: []interface{}{
										&labeledExpr{
											pos:   position{line: 298, col: 14, offset: 11685},
											label: "header",
											expr: &ruleRefExpr{
												pos:  position{line: 298, col: 22, offset: 11693},
												name: "Section4Title",
											},
										},
										&labeledExpr{
											pos:   position{line: 298, col: 37, offset: 11708},
											label: "elements",
											expr: &zeroOrOneExpr{
												pos: position{line: 298, col: 47, offset: 11718},
												expr: &ruleRefExpr{
													pos:  position{line: 298, col: 47, offset: 11718},
													name: "Section4Block",
												},
											},
										},
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "Section4Title",
			pos:  position{line: 306, col: 1, offset: 11907},
			expr: &actionExpr{
				pos: position{line: 306, col: 18, offset: 11924},
				run: (*parser).callonSection4Title1,
				expr: &seqExpr{
					pos: position{line: 306, col: 18, offset: 11924},
					exprs: []interface{}{
						&labeledExpr{
							pos:   position{line: 306, col: 18, offset: 11924},
							label: "attributes",
							expr: &zeroOrMoreExpr{
								pos: position{line: 306, col: 29, offset: 11935},
								expr: &actionExpr{
									pos: position{line: 120, col: 21, offset: 5039},
									run: (*parser).callonSection4Title5,
									expr: &seqExpr{
										pos: position{line: 120, col: 21, offset: 5039},
										exprs: []interface{}{
											&labeledExpr{
												pos:   position{line: 120, col: 21, offset: 5039},
												label: "attr",
												expr: &choiceExpr{
													pos: position{line: 120, col: 27, offset: 5045},
													alternatives: []interface{}{
														&actionExpr{
															pos: position{line: 129, col: 14, offset: 5496},
															run: (*parser).callonSection4Title9,
															expr: &labeledExpr{
																pos:   position{line: 129, col: 14, offset: 5496},
																label: "id",
																expr: &actionExpr{
																	pos: position{line: 135, col: 20, offset: 5626},
																	run: (*parser).callonSection4Title11,
																	expr: &seqExpr{
																		pos: position{line: 135, col: 20, offset: 5626},
																		exprs: []interface{}{
																			&litMatcher{
																				pos:        position{line: 135, col: 20, offset: 5626},
																				val:        "[[",
																				ignoreCase: false,
																			},
																			&labeledExpr{
																				pos:   position{line: 135, col: 25, offset: 5631},
																				label: "id",
																				expr: &actionExpr{
																					pos: position{line: 883, col: 7, offset: 36866},
																					run: (*parser).callonSection4Title15,
																					expr: &oneOrMoreExpr{
																						pos: position{line: 883, col: 7, offset: 36866},
																						expr: &seqExpr{
																							pos: position{line: 883, col: 8, offset: 36867},
																							exprs: []interface{}{
																								&notExpr{
																									pos: position{line: 883, col: 8, offset: 36867},
																									expr: &choiceExpr{
																										pos: position{line: 899, col: 12, offset: 37169},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 899, col: 12, offset: 37169},
																												val:        "\r\n",
																												ignoreCase: false,
																											},
																											&charClassMatcher{
																												pos:        position{line: 899, col: 21, offset: 37178},
																												val:        "[\\r\\n]",
																												chars:      []rune{'\r', '\n'},
																												ignoreCase: false,
																												inverted:   false,
																											},
																										},
																									},
																								},
																								&notExpr{
																									pos: position{line: 883, col: 17, offset: 36876},
																									expr: &choiceExpr{
																										pos: position{line: 895, col: 7, offset: 37107},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 895, col: 7, offset: 37107},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 895, col: 13, offset: 37113},
																												run: (*parser).callonSection4Title25,
																												expr: &litMatcher{
																													pos:        position{line: 895, col: 13, offset: 37113},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																								&notExpr{
																									pos: position{line: 883, col: 21, offset: 36880},
																									expr: &litMatcher{
																										pos:        position{line: 883, col: 22, offset: 36881},
																										val:        "[",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 883, col: 26, offset: 36885},
																									expr: &litMatcher{
																										pos:        position{line: 883, col: 27, offset: 36886},
																										val:        "]",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 883, col: 31, offset: 36890},
																									expr: &litMatcher{
																										pos:        position{line: 883, col: 32, offset: 36891},
																										val:        "<<",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 883, col: 37, offset: 36896},
																									expr: &litMatcher{
																										pos:        position{line: 883, col: 38, offset: 36897},
																										val:        ">>",
																										ignoreCase: false,
																									},
																								},
																								&anyMatcher{
																									line: 883, col: 42, offset: 36901,
																								},
																							},
																						},
																					},
																				},
																			},
																			&litMatcher{
																				pos:        position{line: 135, col: 33, offset: 5639},
																				val:        "]]",
																				ignoreCase: false,
																			},
																		},
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 131, col: 5, offset: 5542},
															run: (*parser).callonSection4Title37,
															expr: &seqExpr{
																pos: position{line: 131, col: 5, offset: 5542},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 131, col: 5, offset: 5542},
																		val:        "[#",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 131, col: 10, offset: 5547},
																		label: "id",
																		expr: &actionExpr{
																			pos: position{line: 883, col: 7, offset: 36866},
																			run: (*parser).callonSection4Title41,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 883, col: 7, offset: 36866},
																				expr: &seqExpr{
																					pos: position{line: 883, col: 8, offset: 36867},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 883, col: 8, offset: 36867},
																							expr: &choiceExpr{
																								pos: position{line: 899, col: 12, offset: 37169},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 899, col: 12, offset: 37169},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 899, col: 21, offset: 37178},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 883, col: 17, offset: 36876},
																							expr: &choiceExpr{
																								pos: position{line: 895, col: 7, offset: 37107},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 895, col: 7, offset: 37107},
																										val:        " ",
																										ignoreCase: false,
																									},
																									&actionExpr{
																										pos: position{line: 895, col: 13, offset: 37113},
																										run: (*parser).callonSection4Title51,
																										expr: &litMatcher{
																											pos:        position{line: 895, col: 13, offset: 37113},
																											val:        "\t",
																											ignoreCase: false,
																										},
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 883, col: 21, offset: 36880},
																							expr: &litMatcher{
																								pos:        position{line: 883, col: 22, offset: 36881},
																								val:        "[",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 883, col: 26, offset: 36885},
																							expr: &litMatcher{
																								pos:        position{line: 883, col: 27, offset: 36886},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 883, col: 31, offset: 36890},
																							expr: &litMatcher{
																								pos:        position{line: 883, col: 32, offset: 36891},
																								val:        "<<",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 883, col: 37, offset: 36896},
																							expr: &litMatcher{
																								pos:        position{line: 883, col: 38, offset: 36897},
																								val:        ">>",
																								ignoreCase: false,
																							},
																						},
																						&anyMatcher{
																							line: 883, col: 42, offset: 36901,
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 131, col: 18, offset: 5555},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 141, col: 17, offset: 5848},
															run: (*parser).callonSection4Title63,
															expr: &seqExpr{
																pos: position{line: 141, col: 17, offset: 5848},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 141, col: 17, offset: 5848},
																		val:        ".",
																		ignoreCase: false,
																	},
																	&notExpr{
																		pos: position{line: 141, col: 21, offset: 5852},
																		expr: &litMatcher{
																			pos:        position{line: 141, col: 22, offset: 5853},
																			val:        ".",
																			ignoreCase: false,
																		},
																	},
																	&notExpr{
																		pos: position{line: 141, col: 26, offset: 5857},
																		expr: &choiceExpr{
																			pos: position{line: 895, col: 7, offset: 37107},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 895, col: 7, offset: 37107},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 895, col: 13, offset: 37113},
																					run: (*parser).callonSection4Title71,
																					expr: &litMatcher{
																						pos:        position{line: 895, col: 13, offset: 37113},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 141, col: 30, offset: 5861},
																		label: "title",
																		expr: &oneOrMoreExpr{
																			pos: position{line: 141, col: 36, offset: 5867},
																			expr: &seqExpr{
																				pos: position{line: 141, col: 37, offset: 5868},
																				exprs: []interface{}{
																					&notExpr{
																						pos: position{line: 141, col: 37, offset: 5868},
																						expr: &choiceExpr{
																							pos: position{line: 899, col: 12, offset: 37169},
																							alternatives: []interface{}{
																								&litMatcher{
																									pos:        position{line: 899, col: 12, offset: 37169},
																									val:        "\r\n",
																									ignoreCase: false,
																								},
																								&charClassMatcher{
																									pos:        position{line: 899, col: 21, offset: 37178},
																									val:        "[\\r\\n]",
																									chars:      []rune{'\r', '\n'},
																									ignoreCase: false,
																									inverted:   false,
																								},
																							},
																						},
																					},
																					&anyMatcher{
																						line: 141, col: 46, offset: 5877,
																					},
																				},
																			},
																		},
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 147, col: 16, offset: 6051},
															run: (*parser).callonSection4Title81,
															expr: &seqExpr{
																pos: position{line: 147, col: 16, offset: 6051},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 147, col: 16, offset: 6051},
																		val:        "[.",
																		ignoreCase: false,
																	},
																	&notExpr{
																		pos: position{line: 147, col: 21, offset: 6056},
																		expr: &choiceExpr{
																			pos: position{line: 895, col: 7, offset: 37107},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 895, col: 7, offset: 37107},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 895, col: 13, offset: 37113},
																					run: (*parser).callonSection4Title87,
																					expr: &litMatcher{
																						pos:        position{line: 895, col: 13, offset: 37113},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 147, col: 25, offset: 6060},
																		label: "role",
																		expr: &oneOrMoreExpr{
																			pos: position{line: 147, col: 30, offset: 6065},
																			expr: &seqExpr{
																				pos: position{line: 147, col: 31, offset: 6066},
																				exprs: []interface{}{
																					&notExpr{
																						pos: position{line: 147, col: 31, offset: 6066},
																						expr: &choiceExpr{
																							pos: position{line: 899, col: 12, offset: 37169},
																							alternatives: []interface{}{
																								&litMatcher{
																									pos:        position{line: 899, col: 12, offset: 37169},
																									val:        "\r\n",
																									ignoreCase: false,
																								},
																								&charClassMatcher{
																									pos:        position{line: 899, col: 21, offset: 37178},
																									val:        "[\\r\\n]",
																									chars:      []rune{'\r', '\n'},
																									ignoreCase: false,
																									inverted:   false,
																								},
																							},
																						},
																					},
																					&notExpr{
																						pos: position{line: 147, col: 40, offset: 6075},
																						expr: &litMatcher{
																							pos:        position{line: 147, col: 41, offset: 6076},
																							val:        "]",
																							ignoreCase: false,
																						},
																					},
																					&anyMatcher{
																						line: 147, col: 45, offset: 6080,
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 147, col: 49, offset: 6084},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 152, col: 30, offset: 6255},
															run: (*parser).callonSection4Title100,
															expr: &seqExpr{
																pos: position{line: 152, col: 30, offset: 6255},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 152, col: 30, offset: 6255},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 152, col: 34, offset: 6259},
																		label: "k",
																		expr: &choiceExpr{
																			pos: position{line: 470, col: 19, offset: 18925},
																			alternatives: []interface{}{
																				&actionExpr{
																					pos: position{line: 470, col: 19, offset: 18925},
																					run: (*parser).callonSection4Title105,
																					expr: &litMatcher{
																						pos:        position{line: 470, col: 19, offset: 18925},
																						val:        "TIP",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 472, col: 5, offset: 18963},
																					run: (*parser).callonSection4Title107,
																					expr: &litMatcher{
																						pos:        position{line: 472, col: 5, offset: 18963},
																						val:        "NOTE",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 474, col: 5, offset: 19003},
																					run: (*parser).callonSection4Title109,
																					expr: &litMatcher{
																						pos:        position{line: 474, col: 5, offset: 19003},
																						val:        "IMPORTANT",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 476, col: 5, offset: 19053},
																					run: (*parser).callonSection4Title111,
																					expr: &litMatcher{
																						pos:        position{line: 476, col: 5, offset: 19053},
																						val:        "WARNING",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 478, col: 5, offset: 19099},
																					run: (*parser).callonSection4Title113,
																					expr: &litMatcher{
																						pos:        position{line: 478, col: 5, offset: 19099},
																						val:        "CAUTION",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 152, col: 53, offset: 6278},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 175, col: 21, offset: 7013},
															run: (*parser).callonSection4Title116,
															expr: &litMatcher{
																pos:        position{line: 175, col: 21, offset: 7013},
																val:        "[horizontal]",
																ignoreCase: false,
															},
														},
														&actionExpr{
															pos: position{line: 157, col: 19, offset: 6439},
															run: (*parser).callonSection4Title118,
															expr: &seqExpr{
																pos: position{line: 157, col: 19, offset: 6439},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 157, col: 19, offset: 6439},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&notExpr{
																		pos: position{line: 157, col: 23, offset: 6443},
																		expr: &choiceExpr{
																			pos: position{line: 895, col: 7, offset: 37107},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 895, col: 7, offset: 37107},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 895, col: 13, offset: 37113},
																					run: (*parser).callonSection4Title124,
																					expr: &litMatcher{
																						pos:        position{line: 895, col: 13, offset: 37113},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 157, col: 27, offset: 6447},
																		label: "attributes",
																		expr: &zeroOrMoreExpr{
																			pos: position{line: 157, col: 38, offset: 6458},
																			expr: &choiceExpr{
																				pos: position{line: 161, col: 21, offset: 6571},
																				alternatives: []interface{}{
																					&actionExpr{
																						pos: position{line: 161, col: 21, offset: 6571},
																						run: (*parser).callonSection4Title129,
																						expr: &seqExpr{
																							pos: position{line: 161, col: 21, offset: 6571},
																							exprs: []interface{}{
																								&labeledExpr{
																									pos:   position{line: 161, col: 21, offset: 6571},
																									label: "key",
																									expr: &actionExpr{
																										pos: position{line: 167, col: 17, offset: 6861},
																										run: (*parser).callonSection4Title132,
																										expr: &seqExpr{
																											pos: position{line: 167, col: 17, offset: 6861},
																											exprs: []interface{}{
																												&notExpr{
																													pos: position{line: 167, col: 17, offset: 6861},
																													expr: &actionExpr{
																														pos: position{line: 207, col: 14, offset: 8362},
																														run: (*parser).callonSection4Title135,
																														expr: &litMatcher{
																															pos:        position{line: 207, col: 14, offset: 8362},
																															val:        "verse",
																															ignoreCase: false,
																														},
																													},
																												},
																												&labeledExpr{
																													pos:   position{line: 167, col: 28, offset: 6872},
																													label: "key",
																													expr: &oneOrMoreExpr{
																														pos: position{line: 167, col: 32, offset: 6876},
																														expr: &seqExpr{
																															pos: position{line: 167, col: 33, offset: 6877},
																															exprs: []interface{}{
																																&notExpr{
																																	pos: position{line: 167, col: 33, offset: 6877},
																																	expr: &litMatcher{
																																		pos:        position{line: 167, col: 34, offset: 6878},
																																		val:        "=",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 167, col: 38, offset: 6882},
																																	expr: &litMatcher{
																																		pos:        position{line: 167, col: 39, offset: 6883},
																																		val:        ",",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 167, col: 43, offset: 6887},
																																	expr: &litMatcher{
																																		pos:        position{line: 167, col: 44, offset: 6888},
																																		val:        "]",
																																		ignoreCase: false,
																																	},
																																},
																																&anyMatcher{
																																	line: 167, col: 48, offset: 6892,
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&litMatcher{
																									pos:        position{line: 161, col: 40, offset: 6590},
																									val:        "=",
																									ignoreCase: false,
																								},
																								&labeledExpr{
																									pos:   position{line: 161, col: 44, offset: 6594},
																									label: "value",
																									expr: &actionExpr{
																										pos: position{line: 171, col: 19, offset: 6940},
																										run: (*parser).callonSection4Title149,
																										expr: &labeledExpr{
																											pos:   position{line: 171, col: 19, offset: 6940},
																											label: "value",
																											expr: &zeroOrMoreExpr{
																												pos: position{line: 171, col: 25, offset: 6946},
																												expr: &seqExpr{
																													pos: position{line: 171, col: 26, offset: 6947},
																													exprs: []interface{}{
																														&notExpr{
																															pos: position{line: 171, col: 26, offset: 6947},
																															expr: &litMatcher{
																																pos:        position{line: 171, col: 27, offset: 6948},
																																val:        "=",
																																ignoreCase: false,
																															},
																														},
																														&notExpr{
																															pos: position{line: 171, col: 31, offset: 6952},
																															expr: &litMatcher{
																																pos:        position{line: 171, col: 32, offset: 6953},
																																val:        ",",
																																ignoreCase: false,
																															},
																														},
																														&notExpr{
																															pos: position{line: 171, col: 36, offset: 6957},
																															expr: &litMatcher{
																																pos:        position{line: 171, col: 37, offset: 6958},
																																val:        "]",
																																ignoreCase: false,
																															},
																														},
																														&anyMatcher{
																															line: 171, col: 41, offset: 6962,
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&zeroOrOneExpr{
																									pos: position{line: 161, col: 67, offset: 6617},
																									expr: &litMatcher{
																										pos:        position{line: 161, col: 67, offset: 6617},
																										val:        ",",
																										ignoreCase: false,
																									},
																								},
																								&zeroOrMoreExpr{
																									pos: position{line: 161, col: 72, offset: 6622},
																									expr: &choiceExpr{
																										pos: position{line: 895, col: 7, offset: 37107},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 895, col: 7, offset: 37107},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 895, col: 13, offset: 37113},
																												run: (*parser).callonSection4Title165,
																												expr: &litMatcher{
																													pos:        position{line: 895, col: 13, offset: 37113},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																					&actionExpr{
																						pos: position{line: 163, col: 5, offset: 6729},
																						run: (*parser).callonSection4Title167,
																						expr: &seqExpr{
																							pos: position{line: 163, col: 5, offset: 6729},
																							exprs: []interface{}{
																								&labeledExpr{
																									pos:   position{line: 163, col: 5, offset: 6729},
																									label: "key",
																									expr: &actionExpr{
																										pos: position{line: 167, col: 17, offset: 6861},
																										run: (*parser).callonSection4Title170,
																										expr: &seqExpr{
																											pos: position{line: 167, col: 17, offset: 6861},
																											exprs: []interface{}{
																												&notExpr{
																													pos: position{line: 167, col: 17, offset: 6861},
																													expr: &actionExpr{
																														pos: position{line: 207, col: 14, offset: 8362},
																														run: (*parser).callonSection4Title173,
																														expr: &litMatcher{
																															pos:        position{line: 207, col: 14, offset: 8362},
																															val:        "verse",
																															ignoreCase: false,
																														},
																													},
																												},
																												&labeledExpr{
																													pos:   position{line: 167, col: 28, offset: 6872},
																													label: "key",
																													expr: &oneOrMoreExpr{
																														pos: position{line: 167, col: 32, offset: 6876},
																														expr: &seqExpr{
																															pos: position{line: 167, col: 33, offset: 6877},
																															exprs: []interface{}{
																																&notExpr{
																																	pos: position{line: 167, col: 33, offset: 6877},
																																	expr: &litMatcher{
																																		pos:        position{line: 167, col: 34, offset: 6878},
																																		val:        "=",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 167, col: 38, offset: 6882},
																																	expr: &litMatcher{
																																		pos:        position{line: 167, col: 39, offset: 6883},
																																		val:        ",",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 167, col: 43, offset: 6887},
																																	expr: &litMatcher{
																																		pos:        position{line: 167, col: 44, offset: 6888},
																																		val:        "]",
																																		ignoreCase: false,
																																	},
																																},
																																&anyMatcher{
																																	line: 167, col: 48, offset: 6892,
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&zeroOrOneExpr{
																									pos: position{line: 163, col: 24, offset: 6748},
																									expr: &litMatcher{
																										pos:        position{line: 163, col: 24, offset: 6748},
																										val:        ",",
																										ignoreCase: false,
																									},
																								},
																								&zeroOrMoreExpr{
																									pos: position{line: 163, col: 29, offset: 6753},
																									expr: &choiceExpr{
																										pos: position{line: 895, col: 7, offset: 37107},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 895, col: 7, offset: 37107},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 895, col: 13, offset: 37113},
																												run: (*parser).callonSection4Title190,
																												expr: &litMatcher{
																													pos:        position{line: 895, col: 13, offset: 37113},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 157, col: 59, offset: 6479},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
													},
												},
											},
											&zeroOrMoreExpr{
												pos: position{line: 120, col: 131, offset: 5149},
												expr: &choiceExpr{
													pos: position{line: 895, col: 7, offset: 37107},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 895, col: 7, offset: 37107},
															val:        " ",
															ignoreCase: false,
														},
														&actionExpr{
															pos: position{line: 895, col: 13, offset: 37113},
															run: (*parser).callonSection4Title196,
															expr: &litMatcher{
																pos:        position{line: 895, col: 13, offset: 37113},
																val:        "\t",
																ignoreCase: false,
															},
														},
													},
												},
											},
											&choiceExpr{
												pos: position{line: 903, col: 8, offset: 37209},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 899, col: 12, offset: 37169},
														val:        "\r\n",
														ignoreCase: false,
													},
													&charClassMatcher{
														pos:        position{line: 899, col: 21, offset: 37178},
														val:        "[\\r\\n]",
														chars:      []rune{'\r', '\n'},
														ignoreCase: false,
														inverted:   false,
													},
													&notExpr{
														pos: position{line: 901, col: 8, offset: 37198},
														expr: &anyMatcher{
															line: 901, col: 9, offset: 37199,
														},
													},
												},
											},
										},
									},
								},
							},
						},
						&litMatcher{
							pos:        position{line: 304, col: 24, offset: 11893},
							val:        "=====",
							ignoreCase: false,
						},
						&oneOrMoreExpr{
							pos: position{line: 304, col: 32, offset: 11901},
							expr: &choiceExpr{
								pos: position{line: 895, col: 7, offset: 37107},
								alternatives: []interface{}{
									&litMatcher{
										pos:        position{line: 895, col: 7, offset: 37107},
										val:        " ",
										ignoreCase: false,
									},
									&actionExpr{
										pos: position{line: 895, col: 13, offset: 37113},
										run: (*parser).callonSection4Title207,
										expr: &litMatcher{
											pos:        position{line: 895, col: 13, offset: 37113},
											val:        "\t",
											ignoreCase: false,
										},
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 306, col: 69, offset: 11975},
							label: "content",
							expr: &ruleRefExpr{
								pos:  position{line: 306, col: 78, offset: 11984},
								name: "TitleElements",
							},
						},
						&zeroOrMoreExpr{
							pos: position{line: 306, col: 93, offset: 11999},
							expr: &choiceExpr{
								pos: position{line: 895, col: 7, offset: 37107},
								alternatives: []interface{}{
									&litMatcher{
										pos:        position{line: 895, col: 7, offset: 37107},
										val:        " ",
										ignoreCase: false,
									},
									&actionExpr{
										pos: position{line: 895, col: 13, offset: 37113},
										run: (*parser).callonSection4Title214,
										expr: &litMatcher{
											pos:        position{line: 895, col: 13, offset: 37113},
											val:        "\t",
											ignoreCase: false,
										},
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 306, col: 97, offset: 12003},
							label: "id",
							expr: &zeroOrOneExpr{
								pos: position{line: 306, col: 100, offset: 12006},
								expr: &actionExpr{
									pos: position{line: 135, col: 20, offset: 5626},
									run: (*parser).callonSection4Title218,
									expr: &seqExpr{
										pos: position{line: 135, col: 20, offset: 5626},
										exprs: []interface{}{
											&litMatcher{
												pos:        position{line: 135, col: 20, offset: 5626},
												val:        "[[",
												ignoreCase: false,
											},
											&labeledExpr{
												pos:   position{line: 135, col: 25, offset: 5631},
												label: "id",
												expr: &actionExpr{
													pos: position{line: 883, col: 7, offset: 36866},
													run: (*parser).callonSection4Title222,
													expr: &oneOrMoreExpr{
														pos: position{line: 883, col: 7, offset: 36866},
														expr: &seqExpr{
															pos: position{line: 883, col: 8, offset: 36867},
															exprs: []interface{}{
																&notExpr{
																	pos: position{line: 883, col: 8, offset: 36867},
																	expr: &choiceExpr{
																		pos: position{line: 899, col: 12, offset: 37169},
																		alternatives: []interface{}{
																			&litMatcher{
																				pos:        position{line: 899, col: 12, offset: 37169},
																				val:        "\r\n",
																				ignoreCase: false,
																			},
																			&charClassMatcher{
																				pos:        position{line: 899, col: 21, offset: 37178},
																				val:        "[\\r\\n]",
																				chars:      []rune{'\r', '\n'},
																				ignoreCase: false,
																				inverted:   false,
																			},
																		},
																	},
																},
																&notExpr{
																	pos: position{line: 883, col: 17, offset: 36876},
																	expr: &choiceExpr{
																		pos: position{line: 895, col: 7, offset: 37107},
																		alternatives: []interface{}{
																			&litMatcher{
																				pos:        position{line: 895, col: 7, offset: 37107},
																				val:        " ",
																				ignoreCase: false,
																			},
																			&actionExpr{
																				pos: position{line: 895, col: 13, offset: 37113},
																				run: (*parser).callonSection4Title232,
																				expr: &litMatcher{
																					pos:        position{line: 895, col: 13, offset: 37113},
																					val:        "\t",
																					ignoreCase: false,
																				},
																			},
																		},
																	},
																},
																&notExpr{
																	pos: position{line: 883, col: 21, offset: 36880},
																	expr: &litMatcher{
																		pos:        position{line: 883, col: 22, offset: 36881},
																		val:        "[",
																		ignoreCase: false,
																	},
																},
																&notExpr{
																	pos: position{line: 883, col: 26, offset: 36885},
																	expr: &litMatcher{
																		pos:        position{line: 883, col: 27, offset: 36886},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
																&notExpr{
																	pos: position{line: 883, col: 31, offset: 36890},
																	expr: &litMatcher{
																		pos:        position{line: 883, col: 32, offset: 36891},
																		val:        "<<",
																		ignoreCase: false,
																	},
																},
																&notExpr{
																	pos: position{line: 883, col: 37, offset: 36896},
																	expr: &litMatcher{
																		pos:        position{line: 883, col: 38, offset: 36897},
																		val:        ">>",
																		ignoreCase: false,
																	},
																},
																&anyMatcher{
																	line: 883, col: 42, offset: 36901,
																},
															},
														},
													},
												},
											},
											&litMatcher{
												pos:        position{line: 135, col: 33, offset: 5639},
												val:        "]]",
												ignoreCase: false,
											},
										},
									},
								},
							},
						},
						&choiceExpr{
							pos: position{line: 903, col: 8, offset: 37209},
							alternatives: []interface{}{
								&litMatcher{
									pos:        position{line: 899, col: 12, offset: 37169},
									val:        "\r\n",
									ignoreCase: false,
								},
								&charClassMatcher{
									pos:        position{line: 899, col: 21, offset: 37178},
									val:        "[\\r\\n]",
									chars:      []rune{'\r', '\n'},
									ignoreCase: false,
									inverted:   false,
								},
								&notExpr{
									pos: position{line: 901, col: 8, offset: 37198},
									expr: &anyMatcher{
										line: 901, col: 9, offset: 37199,
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "Section4Block",
			pos:  position{line: 310, col: 1, offset: 12139},
			expr: &actionExpr{
				pos: position{line: 310, col: 18, offset: 12156},
				run: (*parser).callonSection4Block1,
				expr: &seqExpr{
					pos: position{line: 310, col: 18, offset: 12156},
					exprs: []interface{}{
						&notExpr{
							pos: position{line: 310, col: 18, offset: 12156},
							expr: &ruleRefExpr{
								pos:  position{line: 310, col: 19, offset: 12157},
								name: "Section1Title",
							},
						},
						&notExpr{
							pos: position{line: 310, col: 33, offset: 12171},
							expr: &ruleRefExpr{
								pos:  position{line: 310, col: 34, offset: 12172},
								name: "Section2Title",
							},
						},
						&notExpr{
							pos: position{line: 310, col: 48, offset: 12186},
							expr: &ruleRefExpr{
								pos:  position{line: 310, col: 49, offset: 12187},
								name: "Section3Title",
							},
						},
						&notExpr{
							pos: position{line: 310, col: 63, offset: 12201},
							expr: &ruleRefExpr{
								pos:  position{line: 310, col: 64, offset: 12202},
								name: "Section4Title",
							},
						},
						&labeledExpr{
							pos:   position{line: 310, col: 79, offset: 12217},
							label: "content",
							expr: &zeroOrMoreExpr{
								pos: position{line: 310, col: 87, offset: 12225},
								expr: &choiceExpr{
									pos: position{line: 310, col: 88, offset: 12226},
									alternatives: []interface{}{
										&ruleRefExpr{
											pos:  position{line: 310, col: 88, offset: 12226},
											name: "Section5",
										},
										&ruleRefExpr{
											pos:  position{line: 310, col: 99, offset: 12237},
											name: "DocumentBlock",
										},
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "Section5",
			pos:  position{line: 314, col: 1, offset: 12282},
			expr: &actionExpr{
				pos: position{line: 314, col: 13, offset: 12294},
				run: (*parser).callonSection51,
				expr: &seqExpr{
					pos: position{line: 314, col: 13, offset: 12294},
					exprs: []interface{}{
						&notExpr{
							pos: position{line: 314, col: 13, offset: 12294},
							expr: &notExpr{
								pos: position{line: 901, col: 8, offset: 37198},
								expr: &anyMatcher{
									line: 901, col: 9, offset: 37199,
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 315, col: 5, offset: 12365},
							label: "section",
							expr: &actionExpr{
								pos: position{line: 315, col: 14, offset: 12374},
								run: (*parser).callonSection57,
								expr: &seqExpr{
									pos: position{line: 315, col: 14, offset: 12374},
									exprs: []interface{}{
										&labeledExpr{
											pos:   position{line: 315, col: 14, offset: 12374},
											label: "header",
											expr: &ruleRefExpr{
												pos:  position{line: 315, col: 22, offset: 12382},
												name: "Section5Title",
											},
										},
										&labeledExpr{
											pos:   position{line: 315, col: 37, offset: 12397},
											label: "elements",
											expr: &zeroOrOneExpr{
												pos: position{line: 315, col: 47, offset: 12407},
												expr: &ruleRefExpr{
													pos:  position{line: 315, col: 47, offset: 12407},
													name: "Section5Block",
												},
											},
										},
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "Section5Title",
			pos:  position{line: 323, col: 1, offset: 12597},
			expr: &actionExpr{
				pos: position{line: 323, col: 18, offset: 12614},
				run: (*parser).callonSection5Title1,
				expr: &seqExpr{
					pos: position{line: 323, col: 18, offset: 12614},
					exprs: []interface{}{
						&labeledExpr{
							pos:   position{line: 323, col: 18, offset: 12614},
							label: "attributes",
							expr: &zeroOrMoreExpr{
								pos: position{line: 323, col: 29, offset: 12625},
								expr: &actionExpr{
									pos: position{line: 120, col: 21, offset: 5039},
									run: (*parser).callonSection5Title5,
									expr: &seqExpr{
										pos: position{line: 120, col: 21, offset: 5039},
										exprs: []interface{}{
											&labeledExpr{
												pos:   position{line: 120, col: 21, offset: 5039},
												label: "attr",
												expr: &choiceExpr{
													pos: position{line: 120, col: 27, offset: 5045},
													alternatives: []interface{}{
														&actionExpr{
															pos: position{line: 129, col: 14, offset: 5496},
															run: (*parser).callonSection5Title9,
															expr: &labeledExpr{
																pos:   position{line: 129, col: 14, offset: 5496},
																label: "id",
																expr: &actionExpr{
																	pos: position{line: 135, col: 20, offset: 5626},
																	run: (*parser).callonSection5Title11,
																	expr: &seqExpr{
																		pos: position{line: 135, col: 20, offset: 5626},
																		exprs: []interface{}{
																			&litMatcher{
																				pos:        position{line: 135, col: 20, offset: 5626},
																				val:        "[[",
																				ignoreCase: false,
																			},
																			&labeledExpr{
																				pos:   position{line: 135, col: 25, offset: 5631},
																				label: "id",
																				expr: &actionExpr{
																					pos: position{line: 883, col: 7, offset: 36866},
																					run: (*parser).callonSection5Title15,
																					expr: &oneOrMoreExpr{
																						pos: position{line: 883, col: 7, offset: 36866},
																						expr: &seqExpr{
																							pos: position{line: 883, col: 8, offset: 36867},
																							exprs: []interface{}{
																								&notExpr{
																									pos: position{line: 883, col: 8, offset: 36867},
																									expr: &choiceExpr{
																										pos: position{line: 899, col: 12, offset: 37169},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 899, col: 12, offset: 37169},
																												val:        "\r\n",
																												ignoreCase: false,
																											},
																											&charClassMatcher{
																												pos:        position{line: 899, col: 21, offset: 37178},
																												val:        "[\\r\\n]",
																												chars:      []rune{'\r', '\n'},
																												ignoreCase: false,
																												inverted:   false,
																											},
																										},
																									},
																								},
																								&notExpr{
																									pos: position{line: 883, col: 17, offset: 36876},
																									expr: &choiceExpr{
																										pos: position{line: 895, col: 7, offset: 37107},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 895, col: 7, offset: 37107},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 895, col: 13, offset: 37113},
																												run: (*parser).callonSection5Title25,
																												expr: &litMatcher{
																													pos:        position{line: 895, col: 13, offset: 37113},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																								&notExpr{
																									pos: position{line: 883, col: 21, offset: 36880},
																									expr: &litMatcher{
																										pos:        position{line: 883, col: 22, offset: 36881},
																										val:        "[",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 883, col: 26, offset: 36885},
																									expr: &litMatcher{
																										pos:        position{line: 883, col: 27, offset: 36886},
																										val:        "]",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 883, col: 31, offset: 36890},
																									expr: &litMatcher{
																										pos:        position{line: 883, col: 32, offset: 36891},
																										val:        "<<",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 883, col: 37, offset: 36896},
																									expr: &litMatcher{
																										pos:        position{line: 883, col: 38, offset: 36897},
																										val:        ">>",
																										ignoreCase: false,
																									},
																								},
																								&anyMatcher{
																									line: 883, col: 42, offset: 36901,
																								},
																							},
																						},
																					},
																				},
																			},
																			&litMatcher{
																				pos:        position{line: 135, col: 33, offset: 5639},
																				val:        "]]",
																				ignoreCase: false,
																			},
																		},
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 131, col: 5, offset: 5542},
															run: (*parser).callonSection5Title37,
															expr: &seqExpr{
																pos: position{line: 131, col: 5, offset: 5542},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 131, col: 5, offset: 5542},
																		val:        "[#",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 131, col: 10, offset: 5547},
																		label: "id",
																		expr: &actionExpr{
																			pos: position{line: 883, col: 7, offset: 36866},
																			run: (*parser).callonSection5Title41,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 883, col: 7, offset: 36866},
																				expr: &seqExpr{
																					pos: position{line: 883, col: 8, offset: 36867},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 883, col: 8, offset: 36867},
																							expr: &choiceExpr{
																								pos: position{line: 899, col: 12, offset: 37169},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 899, col: 12, offset: 37169},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 899, col: 21, offset: 37178},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 883, col: 17, offset: 36876},
																							expr: &choiceExpr{
																								pos: position{line: 895, col: 7, offset: 37107},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 895, col: 7, offset: 37107},
																										val:        " ",
																										ignoreCase: false,
																									},
																									&actionExpr{
																										pos: position{line: 895, col: 13, offset: 37113},
																										run: (*parser).callonSection5Title51,
																										expr: &litMatcher{
																											pos:        position{line: 895, col: 13, offset: 37113},
																											val:        "\t",
																											ignoreCase: false,
																										},
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 883, col: 21, offset: 36880},
																							expr: &litMatcher{
																								pos:        position{line: 883, col: 22, offset: 36881},
																								val:        "[",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 883, col: 26, offset: 36885},
																							expr: &litMatcher{
																								pos:        position{line: 883, col: 27, offset: 36886},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 883, col: 31, offset: 36890},
																							expr: &litMatcher{
																								pos:        position{line: 883, col: 32, offset: 36891},
																								val:        "<<",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 883, col: 37, offset: 36896},
																							expr: &litMatcher{
																								pos:        position{line: 883, col: 38, offset: 36897},
																								val:        ">>",
																								ignoreCase: false,
																							},
																						},
																						&anyMatcher{
																							line: 883, col: 42, offset: 36901,
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 131, col: 18, offset: 5555},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 141, col: 17, offset: 5848},
															run: (*parser).callonSection5Title63,
															expr: &seqExpr{
																pos: position{line: 141, col: 17, offset: 5848},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 141, col: 17, offset: 5848},
																		val:        ".",
																		ignoreCase: false,
																	},
																	&notExpr{
																		pos: position{line: 141, col: 21, offset: 5852},
																		expr: &litMatcher{
																			pos:        position{line: 141, col: 22, offset: 5853},
																			val:        ".",
																			ignoreCase: false,
																		},
																	},
																	&notExpr{
																		pos: position{line: 141, col: 26, offset: 5857},
																		expr: &choiceExpr{
																			pos: position{line: 895, col: 7, offset: 37107},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 895, col: 7, offset: 37107},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 895, col: 13, offset: 37113},
																					run: (*parser).callonSection5Title71,
																					expr: &litMatcher{
																						pos:        position{line: 895, col: 13, offset: 37113},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 141, col: 30, offset: 5861},
																		label: "title",
																		expr: &oneOrMoreExpr{
																			pos: position{line: 141, col: 36, offset: 5867},
																			expr: &seqExpr{
																				pos: position{line: 141, col: 37, offset: 5868},
																				exprs: []interface{}{
																					&notExpr{
																						pos: position{line: 141, col: 37, offset: 5868},
																						expr: &choiceExpr{
																							pos: position{line: 899, col: 12, offset: 37169},
																							alternatives: []interface{}{
																								&litMatcher{
																									pos:        position{line: 899, col: 12, offset: 37169},
																									val:        "\r\n",
																									ignoreCase: false,
																								},
																								&charClassMatcher{
																									pos:        position{line: 899, col: 21, offset: 37178},
																									val:        "[\\r\\n]",
																									chars:      []rune{'\r', '\n'},
																									ignoreCase: false,
																									inverted:   false,
																								},
																							},
																						},
																					},
																					&anyMatcher{
																						line: 141, col: 46, offset: 5877,
																					},
																				},
																			},
																		},
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 147, col: 16, offset: 6051},
															run: (*parser).callonSection5Title81,
															expr: &seqExpr{
																pos: position{line: 147, col: 16, offset: 6051},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 147, col: 16, offset: 6051},
																		val:        "[.",
																		ignoreCase: false,
																	},
																	&notExpr{
																		pos: position{line: 147, col: 21, offset: 6056},
																		expr: &choiceExpr{
																			pos: position{line: 895, col: 7, offset: 37107},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 895, col: 7, offset: 37107},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 895, col: 13, offset: 37113},
																					run: (*parser).callonSection5Title87,
																					expr: &litMatcher{
																						pos:        position{line: 895, col: 13, offset: 37113},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 147, col: 25, offset: 6060},
																		label: "role",
																		expr: &oneOrMoreExpr{
																			pos: position{line: 147, col: 30, offset: 6065},
																			expr: &seqExpr{
																				pos: position{line: 147, col: 31, offset: 6066},
																				exprs: []interface{}{
																					&notExpr{
																						pos: position{line: 147, col: 31, offset: 6066},
																						expr: &choiceExpr{
																							pos: position{line: 899, col: 12, offset: 37169},
																							alternatives: []interface{}{
																								&litMatcher{
																									pos:        position{line: 899, col: 12, offset: 37169},
																									val:        "\r\n",
																									ignoreCase: false,
																								},
																								&charClassMatcher{
																									pos:        position{line: 899, col: 21, offset: 37178},
																									val:        "[\\r\\n]",
																									chars:      []rune{'\r', '\n'},
																									ignoreCase: false,
																									inverted:   false,
																								},
																							},
																						},
																					},
																					&notExpr{
																						pos: position{line: 147, col: 40, offset: 6075},
																						expr: &litMatcher{
																							pos:        position{line: 147, col: 41, offset: 6076},
																							val:        "]",
																							ignoreCase: false,
																						},
																					},
																					&anyMatcher{
																						line: 147, col: 45, offset: 6080,
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 147, col: 49, offset: 6084},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 152, col: 30, offset: 6255},
															run: (*parser).callonSection5Title100,
															expr: &seqExpr{
																pos: position{line: 152, col: 30, offset: 6255},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 152, col: 30, offset: 6255},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 152, col: 34, offset: 6259},
																		label: "k",
																		expr: &choiceExpr{
																			pos: position{line: 470, col: 19, offset: 18925},
																			alternatives: []interface{}{
																				&actionExpr{
																					pos: position{line: 470, col: 19, offset: 18925},
																					run: (*parser).callonSection5Title105,
																					expr: &litMatcher{
																						pos:        position{line: 470, col: 19, offset: 18925},
																						val:        "TIP",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 472, col: 5, offset: 18963},
																					run: (*parser).callonSection5Title107,
																					expr: &litMatcher{
																						pos:        position{line: 472, col: 5, offset: 18963},
																						val:        "NOTE",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 474, col: 5, offset: 19003},
																					run: (*parser).callonSection5Title109,
																					expr: &litMatcher{
																						pos:        position{line: 474, col: 5, offset: 19003},
																						val:        "IMPORTANT",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 476, col: 5, offset: 19053},
																					run: (*parser).callonSection5Title111,
																					expr: &litMatcher{
																						pos:        position{line: 476, col: 5, offset: 19053},
																						val:        "WARNING",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 478, col: 5, offset: 19099},
																					run: (*parser).callonSection5Title113,
																					expr: &litMatcher{
																						pos:        position{line: 478, col: 5, offset: 19099},
																						val:        "CAUTION",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 152, col: 53, offset: 6278},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 175, col: 21, offset: 7013},
															run: (*parser).callonSection5Title116,
															expr: &litMatcher{
																pos:        position{line: 175, col: 21, offset: 7013},
																val:        "[horizontal]",
																ignoreCase: false,
															},
														},
														&actionExpr{
															pos: position{line: 157, col: 19, offset: 6439},
															run: (*parser).callonSection5Title118,
															expr: &seqExpr{
																pos: position{line: 157, col: 19, offset: 6439},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 157, col: 19, offset: 6439},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&notExpr{
																		pos: position{line: 157, col: 23, offset: 6443},
																		expr: &choiceExpr{
																			pos: position{line: 895, col: 7, offset: 37107},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 895, col: 7, offset: 37107},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 895, col: 13, offset: 37113},
																					run: (*parser).callonSection5Title124,
																					expr: &litMatcher{
																						pos:        position{line: 895, col: 13, offset: 37113},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 157, col: 27, offset: 6447},
																		label: "attributes",
																		expr: &zeroOrMoreExpr{
																			pos: position{line: 157, col: 38, offset: 6458},
																			expr: &choiceExpr{
																				pos: position{line: 161, col: 21, offset: 6571},
																				alternatives: []interface{}{
																					&actionExpr{
																						pos: position{line: 161, col: 21, offset: 6571},
																						run: (*parser).callonSection5Title129,
																						expr: &seqExpr{
																							pos: position{line: 161, col: 21, offset: 6571},
																							exprs: []interface{}{
																								&labeledExpr{
																									pos:   position{line: 161, col: 21, offset: 6571},
																									label: "key",
																									expr: &actionExpr{
																										pos: position{line: 167, col: 17, offset: 6861},
																										run: (*parser).callonSection5Title132,
																										expr: &seqExpr{
																											pos: position{line: 167, col: 17, offset: 6861},
																											exprs: []interface{}{
																												&notExpr{
																													pos: position{line: 167, col: 17, offset: 6861},
																													expr: &actionExpr{
																														pos: position{line: 207, col: 14, offset: 8362},
																														run: (*parser).callonSection5Title135,
																														expr: &litMatcher{
																															pos:        position{line: 207, col: 14, offset: 8362},
																															val:        "verse",
																															ignoreCase: false,
																														},
																													},
																												},
																												&labeledExpr{
																													pos:   position{line: 167, col: 28, offset: 6872},
																													label: "key",
																													expr: &oneOrMoreExpr{
																														pos: position{line: 167, col: 32, offset: 6876},
																														expr: &seqExpr{
																															pos: position{line: 167, col: 33, offset: 6877},
																															exprs: []interface{}{
																																&notExpr{
																																	pos: position{line: 167, col: 33, offset: 6877},
																																	expr: &litMatcher{
																																		pos:        position{line: 167, col: 34, offset: 6878},
																																		val:        "=",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 167, col: 38, offset: 6882},
																																	expr: &litMatcher{
																																		pos:        position{line: 167, col: 39, offset: 6883},
																																		val:        ",",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 167, col: 43, offset: 6887},
																																	expr: &litMatcher{
																																		pos:        position{line: 167, col: 44, offset: 6888},
																																		val:        "]",
																																		ignoreCase: false,
																																	},
																																},
																																&anyMatcher{
																																	line: 167, col: 48, offset: 6892,
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&litMatcher{
																									pos:        position{line: 161, col: 40, offset: 6590},
																									val:        "=",
																									ignoreCase: false,
																								},
																								&labeledExpr{
																									pos:   position{line: 161, col: 44, offset: 6594},
																									label: "value",
																									expr: &actionExpr{
																										pos: position{line: 171, col: 19, offset: 6940},
																										run: (*parser).callonSection5Title149,
																										expr: &labeledExpr{
																											pos:   position{line: 171, col: 19, offset: 6940},
																											label: "value",
																											expr: &zeroOrMoreExpr{
																												pos: position{line: 171, col: 25, offset: 6946},
																												expr: &seqExpr{
																													pos: position{line: 171, col: 26, offset: 6947},
																													exprs: []interface{}{
																														&notExpr{
																															pos: position{line: 171, col: 26, offset: 6947},
																															expr: &litMatcher{
																																pos:        position{line: 171, col: 27, offset: 6948},
																																val:        "=",
																																ignoreCase: false,
																															},
																														},
																														&notExpr{
																															pos: position{line: 171, col: 31, offset: 6952},
																															expr: &litMatcher{
																																pos:        position{line: 171, col: 32, offset: 6953},
																																val:        ",",
																																ignoreCase: false,
																															},
																														},
																														&notExpr{
																															pos: position{line: 171, col: 36, offset: 6957},
																															expr: &litMatcher{
																																pos:        position{line: 171, col: 37, offset: 6958},
																																val:        "]",
																																ignoreCase: false,
																															},
																														},
																														&anyMatcher{
																															line: 171, col: 41, offset: 6962,
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&zeroOrOneExpr{
																									pos: position{line: 161, col: 67, offset: 6617},
																									expr: &litMatcher{
																										pos:        position{line: 161, col: 67, offset: 6617},
																										val:        ",",
																										ignoreCase: false,
																									},
																								},
																								&zeroOrMoreExpr{
																									pos: position{line: 161, col: 72, offset: 6622},
																									expr: &choiceExpr{
																										pos: position{line: 895, col: 7, offset: 37107},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 895, col: 7, offset: 37107},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 895, col: 13, offset: 37113},
																												run: (*parser).callonSection5Title165,
																												expr: &litMatcher{
																													pos:        position{line: 895, col: 13, offset: 37113},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																					&actionExpr{
																						pos: position{line: 163, col: 5, offset: 6729},
																						run: (*parser).callonSection5Title167,
																						expr: &seqExpr{
																							pos: position{line: 163, col: 5, offset: 6729},
																							exprs: []interface{}{
																								&labeledExpr{
																									pos:   position{line: 163, col: 5, offset: 6729},
																									label: "key",
																									expr: &actionExpr{
																										pos: position{line: 167, col: 17, offset: 6861},
																										run: (*parser).callonSection5Title170,
																										expr: &seqExpr{
																											pos: position{line: 167, col: 17, offset: 6861},
																											exprs: []interface{}{
																												&notExpr{
																													pos: position{line: 167, col: 17, offset: 6861},
																													expr: &actionExpr{
																														pos: position{line: 207, col: 14, offset: 8362},
																														run: (*parser).callonSection5Title173,
																														expr: &litMatcher{
																															pos:        position{line: 207, col: 14, offset: 8362},
																															val:        "verse",
																															ignoreCase: false,
																														},
																													},
																												},
																												&labeledExpr{
																													pos:   position{line: 167, col: 28, offset: 6872},
																													label: "key",
																													expr: &oneOrMoreExpr{
																														pos: position{line: 167, col: 32, offset: 6876},
																														expr: &seqExpr{
																															pos: position{line: 167, col: 33, offset: 6877},
																															exprs: []interface{}{
																																&notExpr{
																																	pos: position{line: 167, col: 33, offset: 6877},
																																	expr: &litMatcher{
																																		pos:        position{line: 167, col: 34, offset: 6878},
																																		val:        "=",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 167, col: 38, offset: 6882},
																																	expr: &litMatcher{
																																		pos:        position{line: 167, col: 39, offset: 6883},
																																		val:        ",",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 167, col: 43, offset: 6887},
																																	expr: &litMatcher{
																																		pos:        position{line: 167, col: 44, offset: 6888},
																																		val:        "]",
																																		ignoreCase: false,
																																	},
																																},
																																&anyMatcher{
																																	line: 167, col: 48, offset: 6892,
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&zeroOrOneExpr{
																									pos: position{line: 163, col: 24, offset: 6748},
																									expr: &litMatcher{
																										pos:        position{line: 163, col: 24, offset: 6748},
																										val:        ",",
																										ignoreCase: false,
																									},
																								},
																								&zeroOrMoreExpr{
																									pos: position{line: 163, col: 29, offset: 6753},
																									expr: &choiceExpr{
																										pos: position{line: 895, col: 7, offset: 37107},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 895, col: 7, offset: 37107},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 895, col: 13, offset: 37113},
																												run: (*parser).callonSection5Title190,
																												expr: &litMatcher{
																													pos:        position{line: 895, col: 13, offset: 37113},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 157, col: 59, offset: 6479},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
													},
												},
											},
											&zeroOrMoreExpr{
												pos: position{line: 120, col: 131, offset: 5149},
												expr: &choiceExpr{
													pos: position{line: 895, col: 7, offset: 37107},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 895, col: 7, offset: 37107},
															val:        " ",
															ignoreCase: false,
														},
														&actionExpr{
															pos: position{line: 895, col: 13, offset: 37113},
															run: (*parser).callonSection5Title196,
															expr: &litMatcher{
																pos:        position{line: 895, col: 13, offset: 37113},
																val:        "\t",
																ignoreCase: false,
															},
														},
													},
												},
											},
											&choiceExpr{
												pos: position{line: 903, col: 8, offset: 37209},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 899, col: 12, offset: 37169},
														val:        "\r\n",
														ignoreCase: false,
													},
													&charClassMatcher{
														pos:        position{line: 899, col: 21, offset: 37178},
														val:        "[\\r\\n]",
														chars:      []rune{'\r', '\n'},
														ignoreCase: false,
														inverted:   false,
													},
													&notExpr{
														pos: position{line: 901, col: 8, offset: 37198},
														expr: &anyMatcher{
															line: 901, col: 9, offset: 37199,
														},
													},
												},
											},
										},
									},
								},
							},
						},
						&litMatcher{
							pos:        position{line: 321, col: 24, offset: 12582},
							val:        "======",
							ignoreCase: false,
						},
						&oneOrMoreExpr{
							pos: position{line: 321, col: 33, offset: 12591},
							expr: &choiceExpr{
								pos: position{line: 895, col: 7, offset: 37107},
								alternatives: []interface{}{
									&litMatcher{
										pos:        position{line: 895, col: 7, offset: 37107},
										val:        " ",
										ignoreCase: false,
									},
									&actionExpr{
										pos: position{line: 895, col: 13, offset: 37113},
										run: (*parser).callonSection5Title207,
										expr: &litMatcher{
											pos:        position{line: 895, col: 13, offset: 37113},
											val:        "\t",
											ignoreCase: false,
										},
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 323, col: 69, offset: 12665},
							label: "content",
							expr: &ruleRefExpr{
								pos:  position{line: 323, col: 78, offset: 12674},
								name: "TitleElements",
							},
						},
						&zeroOrMoreExpr{
							pos: position{line: 323, col: 93, offset: 12689},
							expr: &choiceExpr{
								pos: position{line: 895, col: 7, offset: 37107},
								alternatives: []interface{}{
									&litMatcher{
										pos:        position{line: 895, col: 7, offset: 37107},
										val:        " ",
										ignoreCase: false,
									},
									&actionExpr{
										pos: position{line: 895, col: 13, offset: 37113},
										run: (*parser).callonSection5Title214,
										expr: &litMatcher{
											pos:        position{line: 895, col: 13, offset: 37113},
											val:        "\t",
											ignoreCase: false,
										},
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 323, col: 97, offset: 12693},
							label: "id",
							expr: &zeroOrOneExpr{
								pos: position{line: 323, col: 100, offset: 12696},
								expr: &actionExpr{
									pos: position{line: 135, col: 20, offset: 5626},
									run: (*parser).callonSection5Title218,
									expr: &seqExpr{
										pos: position{line: 135, col: 20, offset: 5626},
										exprs: []interface{}{
											&litMatcher{
												pos:        position{line: 135, col: 20, offset: 5626},
												val:        "[[",
												ignoreCase: false,
											},
											&labeledExpr{
												pos:   position{line: 135, col: 25, offset: 5631},
												label: "id",
												expr: &actionExpr{
													pos: position{line: 883, col: 7, offset: 36866},
													run: (*parser).callonSection5Title222,
													expr: &oneOrMoreExpr{
														pos: position{line: 883, col: 7, offset: 36866},
														expr: &seqExpr{
															pos: position{line: 883, col: 8, offset: 36867},
															exprs: []interface{}{
																&notExpr{
																	pos: position{line: 883, col: 8, offset: 36867},
																	expr: &choiceExpr{
																		pos: position{line: 899, col: 12, offset: 37169},
																		alternatives: []interface{}{
																			&litMatcher{
																				pos:        position{line: 899, col: 12, offset: 37169},
																				val:        "\r\n",
																				ignoreCase: false,
																			},
																			&charClassMatcher{
																				pos:        position{line: 899, col: 21, offset: 37178},
																				val:        "[\\r\\n]",
																				chars:      []rune{'\r', '\n'},
																				ignoreCase: false,
																				inverted:   false,
																			},
																		},
																	},
																},
																&notExpr{
																	pos: position{line: 883, col: 17, offset: 36876},
																	expr: &choiceExpr{
																		pos: position{line: 895, col: 7, offset: 37107},
																		alternatives: []interface{}{
																			&litMatcher{
																				pos:        position{line: 895, col: 7, offset: 37107},
																				val:        " ",
																				ignoreCase: false,
																			},
																			&actionExpr{
																				pos: position{line: 895, col: 13, offset: 37113},
																				run: (*parser).callonSection5Title232,
																				expr: &litMatcher{
																					pos:        position{line: 895, col: 13, offset: 37113},
																					val:        "\t",
																					ignoreCase: false,
																				},
																			},
																		},
																	},
																},
																&notExpr{
																	pos: position{line: 883, col: 21, offset: 36880},
																	expr: &litMatcher{
																		pos:        position{line: 883, col: 22, offset: 36881},
																		val:        "[",
																		ignoreCase: false,
																	},
																},
																&notExpr{
																	pos: position{line: 883, col: 26, offset: 36885},
																	expr: &litMatcher{
																		pos:        position{line: 883, col: 27, offset: 36886},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
																&notExpr{
																	pos: position{line: 883, col: 31, offset: 36890},
																	expr: &litMatcher{
																		pos:        position{line: 883, col: 32, offset: 36891},
																		val:        "<<",
																		ignoreCase: false,
																	},
																},
																&notExpr{
																	pos: position{line: 883, col: 37, offset: 36896},
																	expr: &litMatcher{
																		pos:        position{line: 883, col: 38, offset: 36897},
																		val:        ">>",
																		ignoreCase: false,
																	},
																},
																&anyMatcher{
																	line: 883, col: 42, offset: 36901,
																},
															},
														},
													},
												},
											},
											&litMatcher{
												pos:        position{line: 135, col: 33, offset: 5639},
												val:        "]]",
												ignoreCase: false,
											},
										},
									},
								},
							},
						},
						&choiceExpr{
							pos: position{line: 903, col: 8, offset: 37209},
							alternatives: []interface{}{
								&litMatcher{
									pos:        position{line: 899, col: 12, offset: 37169},
									val:        "\r\n",
									ignoreCase: false,
								},
								&charClassMatcher{
									pos:        position{line: 899, col: 21, offset: 37178},
									val:        "[\\r\\n]",
									chars:      []rune{'\r', '\n'},
									ignoreCase: false,
									inverted:   false,
								},
								&notExpr{
									pos: position{line: 901, col: 8, offset: 37198},
									expr: &anyMatcher{
										line: 901, col: 9, offset: 37199,
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "Section5Block",
			pos:  position{line: 327, col: 1, offset: 12829},
			expr: &actionExpr{
				pos: position{line: 327, col: 18, offset: 12846},
				run: (*parser).callonSection5Block1,
				expr: &seqExpr{
					pos: position{line: 327, col: 18, offset: 12846},
					exprs: []interface{}{
						&notExpr{
							pos: position{line: 327, col: 18, offset: 12846},
							expr: &ruleRefExpr{
								pos:  position{line: 327, col: 19, offset: 12847},
								name: "Section1Title",
							},
						},
						&notExpr{
							pos: position{line: 327, col: 33, offset: 12861},
							expr: &ruleRefExpr{
								pos:  position{line: 327, col: 34, offset: 12862},
								name: "Section2Title",
							},
						},
						&notExpr{
							pos: position{line: 327, col: 48, offset: 12876},
							expr: &ruleRefExpr{
								pos:  position{line: 327, col: 49, offset: 12877},
								name: "Section3Title",
							},
						},
						&notExpr{
							pos: position{line: 327, col: 63, offset: 12891},
							expr: &ruleRefExpr{
								pos:  position{line: 327, col: 64, offset: 12892},
								name: "Section4Title",
							},
						},
						&notExpr{
							pos: position{line: 327, col: 78, offset: 12906},
							expr: &ruleRefExpr{
								pos:  position{line: 327, col: 79, offset: 12907},
								name: "Section5Title",
							},
						},
						&labeledExpr{
							pos:   position{line: 327, col: 93, offset: 12921},
							label: "content",
							expr: &zeroOrMoreExpr{
								pos: position{line: 327, col: 101, offset: 12929},
								expr: &ruleRefExpr{
									pos:  position{line: 327, col: 102, offset: 12930},
									name: "DocumentBlock",
								},
							},
						},
					},
				},
			},
		},
		{
			name: "TitleElements",
			pos:  position{line: 331, col: 1, offset: 12975},
			expr: &actionExpr{
				pos: position{line: 331, col: 18, offset: 12992},
				run: (*parser).callonTitleElements1,
				expr: &labeledExpr{
					pos:   position{line: 331, col: 18, offset: 12992},
					label: "elements",
					expr: &oneOrMoreExpr{
						pos: position{line: 331, col: 27, offset: 13001},
						expr: &seqExpr{
							pos: position{line: 331, col: 28, offset: 13002},
							exprs: []interface{}{
								&notExpr{
									pos: position{line: 331, col: 28, offset: 13002},
									expr: &choiceExpr{
										pos: position{line: 899, col: 12, offset: 37169},
										alternatives: []interface{}{
											&litMatcher{
												pos:        position{line: 899, col: 12, offset: 37169},
												val:        "\r\n",
												ignoreCase: false,
											},
											&charClassMatcher{
												pos:        position{line: 899, col: 21, offset: 37178},
												val:        "[\\r\\n]",
												chars:      []rune{'\r', '\n'},
												ignoreCase: false,
												inverted:   false,
											},
										},
									},
								},
								&zeroOrMoreExpr{
									pos: position{line: 331, col: 37, offset: 13011},
									expr: &choiceExpr{
										pos: position{line: 895, col: 7, offset: 37107},
										alternatives: []interface{}{
											&litMatcher{
												pos:        position{line: 895, col: 7, offset: 37107},
												val:        " ",
												ignoreCase: false,
											},
											&actionExpr{
												pos: position{line: 895, col: 13, offset: 37113},
												run: (*parser).callonTitleElements12,
												expr: &litMatcher{
													pos:        position{line: 895, col: 13, offset: 37113},
													val:        "\t",
													ignoreCase: false,
												},
											},
										},
									},
								},
								&notExpr{
									pos: position{line: 331, col: 41, offset: 13015},
									expr: &actionExpr{
										pos: position{line: 135, col: 20, offset: 5626},
										run: (*parser).callonTitleElements15,
										expr: &seqExpr{
											pos: position{line: 135, col: 20, offset: 5626},
											exprs: []interface{}{
												&litMatcher{
													pos:        position{line: 135, col: 20, offset: 5626},
													val:        "[[",
													ignoreCase: false,
												},
												&labeledExpr{
													pos:   position{line: 135, col: 25, offset: 5631},
													label: "id",
													expr: &actionExpr{
														pos: position{line: 883, col: 7, offset: 36866},
														run: (*parser).callonTitleElements19,
														expr: &oneOrMoreExpr{
															pos: position{line: 883, col: 7, offset: 36866},
															expr: &seqExpr{
																pos: position{line: 883, col: 8, offset: 36867},
																exprs: []interface{}{
																	&notExpr{
																		pos: position{line: 883, col: 8, offset: 36867},
																		expr: &choiceExpr{
																			pos: position{line: 899, col: 12, offset: 37169},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 899, col: 12, offset: 37169},
																					val:        "\r\n",
																					ignoreCase: false,
																				},
																				&charClassMatcher{
																					pos:        position{line: 899, col: 21, offset: 37178},
																					val:        "[\\r\\n]",
																					chars:      []rune{'\r', '\n'},
																					ignoreCase: false,
																					inverted:   false,
																				},
																			},
																		},
																	},
																	&notExpr{
																		pos: position{line: 883, col: 17, offset: 36876},
																		expr: &choiceExpr{
																			pos: position{line: 895, col: 7, offset: 37107},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 895, col: 7, offset: 37107},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 895, col: 13, offset: 37113},
																					run: (*parser).callonTitleElements29,
																					expr: &litMatcher{
																						pos:        position{line: 895, col: 13, offset: 37113},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&notExpr{
																		pos: position{line: 883, col: 21, offset: 36880},
																		expr: &litMatcher{
																			pos:        position{line: 883, col: 22, offset: 36881},
																			val:        "[",
																			ignoreCase: false,
																		},
																	},
																	&notExpr{
																		pos: position{line: 883, col: 26, offset: 36885},
																		expr: &litMatcher{
																			pos:        position{line: 883, col: 27, offset: 36886},
																			val:        "]",
																			ignoreCase: false,
																		},
																	},
																	&notExpr{
																		pos: position{line: 883, col: 31, offset: 36890},
																		expr: &litMatcher{
																			pos:        position{line: 883, col: 32, offset: 36891},
																			val:        "<<",
																			ignoreCase: false,
																		},
																	},
																	&notExpr{
																		pos: position{line: 883, col: 37, offset: 36896},
																		expr: &litMatcher{
																			pos:        position{line: 883, col: 38, offset: 36897},
																			val:        ">>",
																			ignoreCase: false,
																		},
																	},
																	&anyMatcher{
																		line: 883, col: 42, offset: 36901,
																	},
																},
															},
														},
													},
												},
												&litMatcher{
													pos:        position{line: 135, col: 33, offset: 5639},
													val:        "]]",
													ignoreCase: false,
												},
											},
										},
									},
								},
								&ruleRefExpr{
									pos:  position{line: 331, col: 58, offset: 13032},
									name: "TitleElement",
								},
								&zeroOrMoreExpr{
									pos: position{line: 331, col: 71, offset: 13045},
									expr: &choiceExpr{
										pos: position{line: 895, col: 7, offset: 37107},
										alternatives: []interface{}{
											&litMatcher{
												pos:        position{line: 895, col: 7, offset: 37107},
												val:        " ",
												ignoreCase: false,
											},
											&actionExpr{
												pos: position{line: 895, col: 13, offset: 37113},
												run: (*parser).callonTitleElements45,
												expr: &litMatcher{
													pos:        position{line: 895, col: 13, offset: 37113},
													val:        "\t",
													ignoreCase: false,
												},
											},
										},
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "TitleElement",
			pos:  position{line: 335, col: 1, offset: 13157},
			expr: &actionExpr{
				pos: position{line: 335, col: 17, offset: 13173},
				run: (*parser).callonTitleElement1,
				expr: &labeledExpr{
					pos:   position{line: 335, col: 17, offset: 13173},
					label: "element",
					expr: &choiceExpr{
						pos: position{line: 335, col: 26, offset: 13182},
						alternatives: []interface{}{
							&actionExpr{
								pos: position{line: 613, col: 19, offset: 26592},
								run: (*parser).callonTitleElement4,
								expr: &seqExpr{
									pos: position{line: 613, col: 19, offset: 26592},
									exprs: []interface{}{
										&litMatcher{
											pos:        position{line: 613, col: 19, offset: 26592},
											val:        "<<",
											ignoreCase: false,
										},
										&labeledExpr{
											pos:   position{line: 613, col: 24, offset: 26597},
											label: "id",
											expr: &actionExpr{
												pos: position{line: 883, col: 7, offset: 36866},
												run: (*parser).callonTitleElement8,
												expr: &oneOrMoreExpr{
													pos: position{line: 883, col: 7, offset: 36866},
													expr: &seqExpr{
														pos: position{line: 883, col: 8, offset: 36867},
														exprs: []interface{}{
															&notExpr{
																pos: position{line: 883, col: 8, offset: 36867},
																expr: &choiceExpr{
																	pos: position{line: 899, col: 12, offset: 37169},
																	alternatives: []interface{}{
																		&litMatcher{
																			pos:        position{line: 899, col: 12, offset: 37169},
																			val:        "\r\n",
																			ignoreCase: false,
																		},
																		&charClassMatcher{
																			pos:        position{line: 899, col: 21, offset: 37178},
																			val:        "[\\r\\n]",
																			chars:      []rune{'\r', '\n'},
																			ignoreCase: false,
																			inverted:   false,
																		},
																	},
																},
															},
															&notExpr{
																pos: position{line: 883, col: 17, offset: 36876},
																expr: &choiceExpr{
																	pos: position{line: 895, col: 7, offset: 37107},
																	alternatives: []interface{}{
																		&litMatcher{
																			pos:        position{line: 895, col: 7, offset: 37107},
																			val:        " ",
																			ignoreCase: false,
																		},
																		&actionExpr{
																			pos: position{line: 895, col: 13, offset: 37113},
																			run: (*parser).callonTitleElement18,
																			expr: &litMatcher{
																				pos:        position{line: 895, col: 13, offset: 37113},
																				val:        "\t",
																				ignoreCase: false,
																			},
																		},
																	},
																},
															},
															&notExpr{
																pos: position{line: 883, col: 21, offset: 36880},
																expr: &litMatcher{
																	pos:        position{line: 883, col: 22, offset: 36881},
																	val:        "[",
																	ignoreCase: false,
																},
															},
															&notExpr{
																pos: position{line: 883, col: 26, offset: 36885},
																expr: &litMatcher{
																	pos:        position{line: 883, col: 27, offset: 36886},
																	val:        "]",
																	ignoreCase: false,
																},
															},
															&notExpr{
																pos: position{line: 883, col: 31, offset: 36890},
																expr: &litMatcher{
																	pos:        position{line: 883, col: 32, offset: 36891},
																	val:        "<<",
																	ignoreCase: false,
																},
															},
															&notExpr{
																pos: position{line: 883, col: 37, offset: 36896},
																expr: &litMatcher{
																	pos:        position{line: 883, col: 38, offset: 36897},
																	val:        ">>",
																	ignoreCase: false,
																},
															},
															&anyMatcher{
																line: 883, col: 42, offset: 36901,
															},
														},
													},
												},
											},
										},
										&litMatcher{
											pos:        position{line: 613, col: 32, offset: 26605},
											val:        ">>",
											ignoreCase: false,
										},
									},
								},
							},
							&ruleRefExpr{
								pos:  position{line: 335, col: 43, offset: 13199},
								name: "Passthrough",
							},
							&actionExpr{
								pos: position{line: 653, col: 16, offset: 28006},
								run: (*parser).callonTitleElement31,
								expr: &seqExpr{
									pos: position{line: 653, col: 16, offset: 28006},
									exprs: []interface{}{
										&litMatcher{
											pos:        position{line: 653, col: 16, offset: 28006},
											val:        "image:",
											ignoreCase: false,
										},
										&notExpr{
											pos: position{line: 653, col: 25, offset: 28015},
											expr: &litMatcher{
												pos:        position{line: 653, col: 26, offset: 28016},
												val:        ":",
												ignoreCase: false,
											},
										},
										&labeledExpr{
											pos:   position{line: 653, col: 30, offset: 28020},
											label: "path",
											expr: &actionExpr{
												pos: position{line: 879, col: 8, offset: 36796},
												run: (*parser).callonTitleElement37,
												expr: &oneOrMoreExpr{
													pos: position{line: 879, col: 8, offset: 36796},
													expr: &seqExpr{
														pos: position{line: 879, col: 9, offset: 36797},
														exprs: []interface{}{
															&notExpr{
																pos: position{line: 879, col: 9, offset: 36797},
																expr: &choiceExpr{
																	pos: position{line: 899, col: 12, offset: 37169},
																	alternatives: []interface{}{
																		&litMatcher{
																			pos:        position{line: 899, col: 12, offset: 37169},
																			val:        "\r\n",
																			ignoreCase: false,
																		},
																		&charClassMatcher{
																			pos:        position{line: 899, col: 21, offset: 37178},
																			val:        "[\\r\\n]",
																			chars:      []rune{'\r', '\n'},
																			ignoreCase: false,
																			inverted:   false,
																		},
																	},
																},
															},
															&notExpr{
																pos: position{line: 879, col: 18, offset: 36806},
																expr: &choiceExpr{
																	pos: position{line: 895, col: 7, offset: 37107},
																	alternatives: []interface{}{
																		&litMatcher{
																			pos:        position{line: 895, col: 7, offset: 37107},
																			val:        " ",
																			ignoreCase: false,
																		},
																		&actionExpr{
																			pos: position{line: 895, col: 13, offset: 37113},
																			run: (*parser).callonTitleElement47,
																			expr: &litMatcher{
																				pos:        position{line: 895, col: 13, offset: 37113},
																				val:        "\t",
																				ignoreCase: false,
																			},
																		},
																	},
																},
															},
															&notExpr{
																pos: position{line: 879, col: 22, offset: 36810},
																expr: &litMatcher{
																	pos:        position{line: 879, col: 23, offset: 36811},
																	val:        "[",
																	ignoreCase: false,
																},
															},
															&notExpr{
																pos: position{line: 879, col: 27, offset: 36815},
																expr: &litMatcher{
																	pos:        position{line: 879, col: 28, offset: 36816},
																	val:        "]",
																	ignoreCase: false,
																},
															},
															&anyMatcher{
																line: 879, col: 32, offset: 36820,
															},
														},
													},
												},
											},
										},
										&labeledExpr{
											pos:   position{line: 653, col: 41, offset: 28031},
											label: "attributes",
											expr: &choiceExpr{
												pos: position{line: 658, col: 20, offset: 28276},
												alternatives: []interface{}{
													&actionExpr{
														pos: position{line: 658, col: 20, offset: 28276},
														run: (*parser).callonTitleElement56,
														expr: &seqExpr{
															pos: position{line: 658, col: 20, offset: 28276},
															exprs: []interface{}{
																&litMatcher{
																	pos:        position{line: 658, col: 20, offset: 28276},
																	val:        "[",
																	ignoreCase: false,
																},
																&labeledExpr{
																	pos:   position{line: 658, col: 24, offset: 28280},
																	label: "alt",
																	expr: &actionExpr{
																		pos: position{line: 675, col: 19, offset: 29128},
																		run: (*parser).callonTitleElement60,
																		expr: &seqExpr{
																			pos: position{line: 675, col: 19, offset: 29128},
																			exprs: []interface{}{
																				&labeledExpr{
																					pos:   position{line: 675, col: 19, offset: 29128},
																					label: "value",
																					expr: &oneOrMoreExpr{
																						pos: position{line: 675, col: 25, offset: 29134},
																						expr: &seqExpr{
																							pos: position{line: 675, col: 26, offset: 29135},
																							exprs: []interface{}{
																								&notExpr{
																									pos: position{line: 675, col: 26, offset: 29135},
																									expr: &litMatcher{
																										pos:        position{line: 675, col: 27, offset: 29136},
																										val:        ",",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 675, col: 31, offset: 29140},
																									expr: &litMatcher{
																										pos:        position{line: 675, col: 32, offset: 29141},
																										val:        "=",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 675, col: 36, offset: 29145},
																									expr: &litMatcher{
																										pos:        position{line: 675, col: 37, offset: 29146},
																										val:        "]",
																										ignoreCase: false,
																									},
																								},
																								&anyMatcher{
																									line: 675, col: 41, offset: 29150,
																								},
																							},
																						},
																					},
																				},
																				&choiceExpr{
																					pos: position{line: 675, col: 46, offset: 29155},
																					alternatives: []interface{}{
																						&litMatcher{
																							pos:        position{line: 675, col: 46, offset: 29155},
																							val:        ",",
																							ignoreCase: false,
																						},
																						&andExpr{
																							pos: position{line: 675, col: 52, offset: 29161},
																							expr: &litMatcher{
																								pos:        position{line: 675, col: 53, offset: 29162},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																},
																&labeledExpr{
																	pos:   position{line: 659, col: 9, offset: 28310},
																	label: "width",
																	expr: &actionExpr{
																		pos: position{line: 675, col: 19, offset: 29128},
																		run: (*parser).callonTitleElement77,
																		expr: &seqExpr{
																			pos: position{line: 675, col: 19, offset: 29128},
																			exprs: []interface{}{
																				&labeledExpr{
																					pos:   position{line: 675, col: 19, offset: 29128},
																					label: "value",
																					expr: &oneOrMoreExpr{
																						pos: position{line: 675, col: 25, offset: 29134},
																						expr: &seqExpr{
																							pos: position{line: 675, col: 26, offset: 29135},
																							exprs: []interface{}{
																								&notExpr{
																									pos: position{line: 675, col: 26, offset: 29135},
																									expr: &litMatcher{
																										pos:        position{line: 675, col: 27, offset: 29136},
																										val:        ",",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 675, col: 31, offset: 29140},
																									expr: &litMatcher{
																										pos:        position{line: 675, col: 32, offset: 29141},
																										val:        "=",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 675, col: 36, offset: 29145},
																									expr: &litMatcher{
																										pos:        position{line: 675, col: 37, offset: 29146},
																										val:        "]",
																										ignoreCase: false,
																									},
																								},
																								&anyMatcher{
																									line: 675, col: 41, offset: 29150,
																								},
																							},
																						},
																					},
																				},
																				&choiceExpr{
																					pos: position{line: 675, col: 46, offset: 29155},
																					alternatives: []interface{}{
																						&litMatcher{
																							pos:        position{line: 675, col: 46, offset: 29155},
																							val:        ",",
																							ignoreCase: false,
																						},
																						&andExpr{
																							pos: position{line: 675, col: 52, offset: 29161},
																							expr: &litMatcher{
																								pos:        position{line: 675, col: 53, offset: 29162},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																},
																&labeledExpr{
																	pos:   position{line: 660, col: 9, offset: 28342},
																	label: "height",
																	expr: &actionExpr{
																		pos: position{line: 675, col: 19, offset: 29128},
																		run: (*parser).callonTitleElement94,
																		expr: &seqExpr{
																			pos: position{line: 675, col: 19, offset: 29128},
																			exprs: []interface{}{
																				&labeledExpr{
																					pos:   position{line: 675, col: 19, offset: 29128},
																					label: "value",
																					expr: &oneOrMoreExpr{
																						pos: position{line: 675, col: 25, offset: 29134},
																						expr: &seqExpr{
																							pos: position{line: 675, col: 26, offset: 29135},
																							exprs: []interface{}{
																								&notExpr{
																									pos: position{line: 675, col: 26, offset: 29135},
																									expr: &litMatcher{
																										pos:        position{line: 675, col: 27, offset: 29136},
																										val:        ",",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 675, col: 31, offset: 29140},
																									expr: &litMatcher{
																										pos:        position{line: 675, col: 32, offset: 29141},
																										val:        "=",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 675, col: 36, offset: 29145},
																									expr: &litMatcher{
																										pos:        position{line: 675, col: 37, offset: 29146},
																										val:        "]",
																										ignoreCase: false,
																									},
																								},
																								&anyMatcher{
																									line: 675, col: 41, offset: 29150,
																								},
																							},
																						},
																					},
																				},
																				&choiceExpr{
																					pos: position{line: 675, col: 46, offset: 29155},
																					alternatives: []interface{}{
																						&litMatcher{
																							pos:        position{line: 675, col: 46, offset: 29155},
																							val:        ",",
																							ignoreCase: false,
																						},
																						&andExpr{
																							pos: position{line: 675, col: 52, offset: 29161},
																							expr: &litMatcher{
																								pos:        position{line: 675, col: 53, offset: 29162},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																},
																&labeledExpr{
																	pos:   position{line: 661, col: 9, offset: 28375},
																	label: "otherAttrs",
																	expr: &zeroOrMoreExpr{
																		pos: position{line: 661, col: 20, offset: 28386},
																		expr: &choiceExpr{
																			pos: position{line: 161, col: 21, offset: 6571},
																			alternatives: []interface{}{
																				&actionExpr{
																					pos: position{line: 161, col: 21, offset: 6571},
																					run: (*parser).callonTitleElement113,
																					expr: &seqExpr{
																						pos: position{line: 161, col: 21, offset: 6571},
																						exprs: []interface{}{
																							&labeledExpr{
																								pos:   position{line: 161, col: 21, offset: 6571},
																								label: "key",
																								expr: &actionExpr{
																									pos: position{line: 167, col: 17, offset: 6861},
																									run: (*parser).callonTitleElement116,
																									expr: &seqExpr{
																										pos: position{line: 167, col: 17, offset: 6861},
																										exprs: []interface{}{
																											&notExpr{
																												pos: position{line: 167, col: 17, offset: 6861},
																												expr: &actionExpr{
																													pos: position{line: 207, col: 14, offset: 8362},
																													run: (*parser).callonTitleElement119,
																													expr: &litMatcher{
																														pos:        position{line: 207, col: 14, offset: 8362},
																														val:        "verse",
																														ignoreCase: false,
																													},
																												},
																											},
																											&labeledExpr{
																												pos:   position{line: 167, col: 28, offset: 6872},
																												label: "key",
																												expr: &oneOrMoreExpr{
																													pos: position{line: 167, col: 32, offset: 6876},
																													expr: &seqExpr{
																														pos: position{line: 167, col: 33, offset: 6877},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 167, col: 33, offset: 6877},
																																expr: &litMatcher{
																																	pos:        position{line: 167, col: 34, offset: 6878},
																																	val:        "=",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 167, col: 38, offset: 6882},
																																expr: &litMatcher{
																																	pos:        position{line: 167, col: 39, offset: 6883},
																																	val:        ",",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 167, col: 43, offset: 6887},
																																expr: &litMatcher{
																																	pos:        position{line: 167, col: 44, offset: 6888},
																																	val:        "]",
																																	ignoreCase: false,
																																},
																															},
																															&anyMatcher{
																																line: 167, col: 48, offset: 6892,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&litMatcher{
																								pos:        position{line: 161, col: 40, offset: 6590},
																								val:        "=",
																								ignoreCase: false,
																							},
																							&labeledExpr{
																								pos:   position{line: 161, col: 44, offset: 6594},
																								label: "value",
																								expr: &actionExpr{
																									pos: position{line: 171, col: 19, offset: 6940},
																									run: (*parser).callonTitleElement133,
																									expr: &labeledExpr{
																										pos:   position{line: 171, col: 19, offset: 6940},
																										label: "value",
																										expr: &zeroOrMoreExpr{
																											pos: position{line: 171, col: 25, offset: 6946},
																											expr: &seqExpr{
																												pos: position{line: 171, col: 26, offset: 6947},
																												exprs: []interface{}{
																													&notExpr{
																														pos: position{line: 171, col: 26, offset: 6947},
																														expr: &litMatcher{
																															pos:        position{line: 171, col: 27, offset: 6948},
																															val:        "=",
																															ignoreCase: false,
																														},
																													},
																													&notExpr{
																														pos: position{line: 171, col: 31, offset: 6952},
																														expr: &litMatcher{
																															pos:        position{line: 171, col: 32, offset: 6953},
																															val:        ",",
																															ignoreCase: false,
																														},
																													},
																													&notExpr{
																														pos: position{line: 171, col: 36, offset: 6957},
																														expr: &litMatcher{
																															pos:        position{line: 171, col: 37, offset: 6958},
																															val:        "]",
																															ignoreCase: false,
																														},
																													},
																													&anyMatcher{
																														line: 171, col: 41, offset: 6962,
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&zeroOrOneExpr{
																								pos: position{line: 161, col: 67, offset: 6617},
																								expr: &litMatcher{
																									pos:        position{line: 161, col: 67, offset: 6617},
																									val:        ",",
																									ignoreCase: false,
																								},
																							},
																							&zeroOrMoreExpr{
																								pos: position{line: 161, col: 72, offset: 6622},
																								expr: &choiceExpr{
																									pos: position{line: 895, col: 7, offset: 37107},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 895, col: 7, offset: 37107},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 895, col: 13, offset: 37113},
																											run: (*parser).callonTitleElement149,
																											expr: &litMatcher{
																												pos:        position{line: 895, col: 13, offset: 37113},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																				&actionExpr{
																					pos: position{line: 163, col: 5, offset: 6729},
																					run: (*parser).callonTitleElement151,
																					expr: &seqExpr{
																						pos: position{line: 163, col: 5, offset: 6729},
																						exprs: []interface{}{
																							&labeledExpr{
																								pos:   position{line: 163, col: 5, offset: 6729},
																								label: "key",
																								expr: &actionExpr{
																									pos: position{line: 167, col: 17, offset: 6861},
																									run: (*parser).callonTitleElement154,
																									expr: &seqExpr{
																										pos: position{line: 167, col: 17, offset: 6861},
																										exprs: []interface{}{
																											&notExpr{
																												pos: position{line: 167, col: 17, offset: 6861},
																												expr: &actionExpr{
																													pos: position{line: 207, col: 14, offset: 8362},
																													run: (*parser).callonTitleElement157,
																													expr: &litMatcher{
																														pos:        position{line: 207, col: 14, offset: 8362},
																														val:        "verse",
																														ignoreCase: false,
																													},
																												},
																											},
																											&labeledExpr{
																												pos:   position{line: 167, col: 28, offset: 6872},
																												label: "key",
																												expr: &oneOrMoreExpr{
																													pos: position{line: 167, col: 32, offset: 6876},
																													expr: &seqExpr{
																														pos: position{line: 167, col: 33, offset: 6877},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 167, col: 33, offset: 6877},
																																expr: &litMatcher{
																																	pos:        position{line: 167, col: 34, offset: 6878},
																																	val:        "=",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 167, col: 38, offset: 6882},
																																expr: &litMatcher{
																																	pos:        position{line: 167, col: 39, offset: 6883},
																																	val:        ",",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 167, col: 43, offset: 6887},
																																expr: &litMatcher{
																																	pos:        position{line: 167, col: 44, offset: 6888},
																																	val:        "]",
																																	ignoreCase: false,
																																},
																															},
																															&anyMatcher{
																																line: 167, col: 48, offset: 6892,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&zeroOrOneExpr{
																								pos: position{line: 163, col: 24, offset: 6748},
																								expr: &litMatcher{
																									pos:        position{line: 163, col: 24, offset: 6748},
																									val:        ",",
																									ignoreCase: false,
																								},
																							},
																							&zeroOrMoreExpr{
																								pos: position{line: 163, col: 29, offset: 6753},
																								expr: &choiceExpr{
																									pos: position{line: 895, col: 7, offset: 37107},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 895, col: 7, offset: 37107},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 895, col: 13, offset: 37113},
																											run: (*parser).callonTitleElement174,
																											expr: &litMatcher{
																												pos:        position{line: 895, col: 13, offset: 37113},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																},
																&litMatcher{
																	pos:        position{line: 661, col: 40, offset: 28406},
																	val:        "]",
																	ignoreCase: false,
																},
															},
														},
													},
													&actionExpr{
														pos: position{line: 663, col: 9, offset: 28560},
														run: (*parser).callonTitleElement177,
														expr: &seqExpr{
															pos: position{line: 663, col: 9, offset: 28560},
															exprs: []interface{}{
																&litMatcher{
																	pos:        position{line: 663, col: 9, offset: 28560},
																	val:        "[",
																	ignoreCase: false,
																},
																&labeledExpr{
																	pos:   position{line: 663, col: 13, offset: 28564},
																	label: "alt",
																	expr: &actionExpr{
																		pos: position{line: 675, col: 19, offset: 29128},
																		run: (*parser).callonTitleElement181,
																		expr: &seqExpr{
																			pos: position{line: 675, col: 19, offset: 29128},
																			exprs: []interface{}{
																				&labeledExpr{
																					pos:   position{line: 675, col: 19, offset: 29128},
																					label: "value",
																					expr: &oneOrMoreExpr{
																						pos: position{line: 675, col: 25, offset: 29134},
																						expr: &seqExpr{
																							pos: position{line: 675, col: 26, offset: 29135},
																							exprs: []interface{}{
																								&notExpr{
																									pos: position{line: 675, col: 26, offset: 29135},
																									expr: &litMatcher{
																										pos:        position{line: 675, col: 27, offset: 29136},
																										val:        ",",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 675, col: 31, offset: 29140},
																									expr: &litMatcher{
																										pos:        position{line: 675, col: 32, offset: 29141},
																										val:        "=",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 675, col: 36, offset: 29145},
																									expr: &litMatcher{
																										pos:        position{line: 675, col: 37, offset: 29146},
																										val:        "]",
																										ignoreCase: false,
																									},
																								},
																								&anyMatcher{
																									line: 675, col: 41, offset: 29150,
																								},
																							},
																						},
																					},
																				},
																				&choiceExpr{
																					pos: position{line: 675, col: 46, offset: 29155},
																					alternatives: []interface{}{
																						&litMatcher{
																							pos:        position{line: 675, col: 46, offset: 29155},
																							val:        ",",
																							ignoreCase: false,
																						},
																						&andExpr{
																							pos: position{line: 675, col: 52, offset: 29161},
																							expr: &litMatcher{
																								pos:        position{line: 675, col: 53, offset: 29162},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																},
																&labeledExpr{
																	pos:   position{line: 664, col: 9, offset: 28593},
																	label: "width",
																	expr: &actionExpr{
																		pos: position{line: 675, col: 19, offset: 29128},
																		run: (*parser).callonTitleElement198,
																		expr: &seqExpr{
																			pos: position{line: 675, col: 19, offset: 29128},
																			exprs: []interface{}{
																				&labeledExpr{
																					pos:   position{line: 675, col: 19, offset: 29128},
																					label: "value",
																					expr: &oneOrMoreExpr{
																						pos: position{line: 675, col: 25, offset: 29134},
																						expr: &seqExpr{
																							pos: position{line: 675, col: 26, offset: 29135},
																							exprs: []interface{}{
																								&notExpr{
																									pos: position{line: 675, col: 26, offset: 29135},
																									expr: &litMatcher{
																										pos:        position{line: 675, col: 27, offset: 29136},
																										val:        ",",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 675, col: 31, offset: 29140},
																									expr: &litMatcher{
																										pos:        position{line: 675, col: 32, offset: 29141},
																										val:        "=",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 675, col: 36, offset: 29145},
																									expr: &litMatcher{
																										pos:        position{line: 675, col: 37, offset: 29146},
																										val:        "]",
																										ignoreCase: false,
																									},
																								},
																								&anyMatcher{
																									line: 675, col: 41, offset: 29150,
																								},
																							},
																						},
																					},
																				},
																				&choiceExpr{
																					pos: position{line: 675, col: 46, offset: 29155},
																					alternatives: []interface{}{
																						&litMatcher{
																							pos:        position{line: 675, col: 46, offset: 29155},
																							val:        ",",
																							ignoreCase: false,
																						},
																						&andExpr{
																							pos: position{line: 675, col: 52, offset: 29161},
																							expr: &litMatcher{
																								pos:        position{line: 675, col: 53, offset: 29162},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																},
																&labeledExpr{
																	pos:   position{line: 665, col: 9, offset: 28625},
																	label: "otherAttrs",
																	expr: &zeroOrMoreExpr{
																		pos: position{line: 665, col: 20, offset: 28636},
																		expr: &choiceExpr{
																			pos: position{line: 161, col: 21, offset: 6571},
																			alternatives: []interface{}{
																				&actionExpr{
																					pos: position{line: 161, col: 21, offset: 6571},
																					run: (*parser).callonTitleElement217,
																					expr: &seqExpr{
																						pos: position{line: 161, col: 21, offset: 6571},
																						exprs: []interface{}{
																							&labeledExpr{
																								pos:   position{line: 161, col: 21, offset: 6571},
																								label: "key",
																								expr: &actionExpr{
																									pos: position{line: 167, col: 17, offset: 6861},
																									run: (*parser).callonTitleElement220,
																									expr: &seqExpr{
																										pos: position{line: 167, col: 17, offset: 6861},
																										exprs: []interface{}{
																											&notExpr{
																												pos: position{line: 167, col: 17, offset: 6861},
																												expr: &actionExpr{
																													pos: position{line: 207, col: 14, offset: 8362},
																													run: (*parser).callonTitleElement223,
																													expr: &litMatcher{
																														pos:        position{line: 207, col: 14, offset: 8362},
																														val:        "verse",
																														ignoreCase: false,
																													},
																												},
																											},
																											&labeledExpr{
																												pos:   position{line: 167, col: 28, offset: 6872},
																												label: "key",
																												expr: &oneOrMoreExpr{
																													pos: position{line: 167, col: 32, offset: 6876},
																													expr: &seqExpr{
																														pos: position{line: 167, col: 33, offset: 6877},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 167, col: 33, offset: 6877},
																																expr: &litMatcher{
																																	pos:        position{line: 167, col: 34, offset: 6878},
																																	val:        "=",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 167, col: 38, offset: 6882},
																																expr: &litMatcher{
																																	pos:        position{line: 167, col: 39, offset: 6883},
																																	val:        ",",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 167, col: 43, offset: 6887},
																																expr: &litMatcher{
																																	pos:        position{line: 167, col: 44, offset: 6888},
																																	val:        "]",
																																	ignoreCase: false,
																																},
																															},
																															&anyMatcher{
																																line: 167, col: 48, offset: 6892,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&litMatcher{
																								pos:        position{line: 161, col: 40, offset: 6590},
																								val:        "=",
																								ignoreCase: false,
																							},
																							&labeledExpr{
																								pos:   position{line: 161, col: 44, offset: 6594},
																								label: "value",
																								expr: &actionExpr{
																									pos: position{line: 171, col: 19, offset: 6940},
																									run: (*parser).callonTitleElement237,
																									expr: &labeledExpr{
																										pos:   position{line: 171, col: 19, offset: 6940},
																										label: "value",
																										expr: &zeroOrMoreExpr{
																											pos: position{line: 171, col: 25, offset: 6946},
																											expr: &seqExpr{
																												pos: position{line: 171, col: 26, offset: 6947},
																												exprs: []interface{}{
																													&notExpr{
																														pos: position{line: 171, col: 26, offset: 6947},
																														expr: &litMatcher{
																															pos:        position{line: 171, col: 27, offset: 6948},
																															val:        "=",
																															ignoreCase: false,
																														},
																													},
																													&notExpr{
																														pos: position{line: 171, col: 31, offset: 6952},
																														expr: &litMatcher{
																															pos:        position{line: 171, col: 32, offset: 6953},
																															val:        ",",
																															ignoreCase: false,
																														},
																													},
																													&notExpr{
																														pos: position{line: 171, col: 36, offset: 6957},
																														expr: &litMatcher{
																															pos:        position{line: 171, col: 37, offset: 6958},
																															val:        "]",
																															ignoreCase: false,
																														},
																													},
																													&anyMatcher{
																														line: 171, col: 41, offset: 6962,
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&zeroOrOneExpr{
																								pos: position{line: 161, col: 67, offset: 6617},
																								expr: &litMatcher{
																									pos:        position{line: 161, col: 67, offset: 6617},
																									val:        ",",
																									ignoreCase: false,
																								},
																							},
																							&zeroOrMoreExpr{
																								pos: position{line: 161, col: 72, offset: 6622},
																								expr: &choiceExpr{
																									pos: position{line: 895, col: 7, offset: 37107},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 895, col: 7, offset: 37107},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 895, col: 13, offset: 37113},
																											run: (*parser).callonTitleElement253,
																											expr: &litMatcher{
																												pos:        position{line: 895, col: 13, offset: 37113},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																				&actionExpr{
																					pos: position{line: 163, col: 5, offset: 6729},
																					run: (*parser).callonTitleElement255,
																					expr: &seqExpr{
																						pos: position{line: 163, col: 5, offset: 6729},
																						exprs: []interface{}{
																							&labeledExpr{
																								pos:   position{line: 163, col: 5, offset: 6729},
																								label: "key",
																								expr: &actionExpr{
																									pos: position{line: 167, col: 17, offset: 6861},
																									run: (*parser).callonTitleElement258,
																									expr: &seqExpr{
																										pos: position{line: 167, col: 17, offset: 6861},
																										exprs: []interface{}{
																											&notExpr{
																												pos: position{line: 167, col: 17, offset: 6861},
																												expr: &actionExpr{
																													pos: position{line: 207, col: 14, offset: 8362},
																													run: (*parser).callonTitleElement261,
																													expr: &litMatcher{
																														pos:        position{line: 207, col: 14, offset: 8362},
																														val:        "verse",
																														ignoreCase: false,
																													},
																												},
																											},
																											&labeledExpr{
																												pos:   position{line: 167, col: 28, offset: 6872},
																												label: "key",
																												expr: &oneOrMoreExpr{
																													pos: position{line: 167, col: 32, offset: 6876},
																													expr: &seqExpr{
																														pos: position{line: 167, col: 33, offset: 6877},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 167, col: 33, offset: 6877},
																																expr: &litMatcher{
																																	pos:        position{line: 167, col: 34, offset: 6878},
																																	val:        "=",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 167, col: 38, offset: 6882},
																																expr: &litMatcher{
																																	pos:        position{line: 167, col: 39, offset: 6883},
																																	val:        ",",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 167, col: 43, offset: 6887},
																																expr: &litMatcher{
																																	pos:        position{line: 167, col: 44, offset: 6888},
																																	val:        "]",
																																	ignoreCase: false,
																																},
																															},
																															&anyMatcher{
																																line: 167, col: 48, offset: 6892,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&zeroOrOneExpr{
																								pos: position{line: 163, col: 24, offset: 6748},
																								expr: &litMatcher{
																									pos:        position{line: 163, col: 24, offset: 6748},
																									val:        ",",
																									ignoreCase: false,
																								},
																							},
																							&zeroOrMoreExpr{
																								pos: position{line: 163, col: 29, offset: 6753},
																								expr: &choiceExpr{
																									pos: position{line: 895, col: 7, offset: 37107},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 895, col: 7, offset: 37107},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 895, col: 13, offset: 37113},
																											run: (*parser).callonTitleElement278,
																											expr: &litMatcher{
																												pos:        position{line: 895, col: 13, offset: 37113},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																},
																&litMatcher{
																	pos:        position{line: 665, col: 40, offset: 28656},
																	val:        "]",
																	ignoreCase: false,
																},
															},
														},
													},
													&actionExpr{
														pos: position{line: 667, col: 9, offset: 28791},
														run: (*parser).callonTitleElement281,
														expr: &seqExpr{
															pos: position{line: 667, col: 9, offset: 28791},
															exprs: []interface{}{
																&litMatcher{
																	pos:        position{line: 667, col: 9, offset: 28791},
																	val:        "[",
																	ignoreCase: false,
																},
																&labeledExpr{
																	pos:   position{line: 667, col: 13, offset: 28795},
																	label: "alt",
																	expr: &actionExpr{
																		pos: position{line: 675, col: 19, offset: 29128},
																		run: (*parser).callonTitleElement285,
																		expr: &seqExpr{
																			pos: position{line: 675, col: 19, offset: 29128},
																			exprs: []interface{}{
																				&labeledExpr{
																					pos:   position{line: 675, col: 19, offset: 29128},
																					label: "value",
																					expr: &oneOrMoreExpr{
																						pos: position{line: 675, col: 25, offset: 29134},
																						expr: &seqExpr{
																							pos: position{line: 675, col: 26, offset: 29135},
																							exprs: []interface{}{
																								&notExpr{
																									pos: position{line: 675, col: 26, offset: 29135},
																									expr: &litMatcher{
																										pos:        position{line: 675, col: 27, offset: 29136},
																										val:        ",",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 675, col: 31, offset: 29140},
																									expr: &litMatcher{
																										pos:        position{line: 675, col: 32, offset: 29141},
																										val:        "=",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 675, col: 36, offset: 29145},
																									expr: &litMatcher{
																										pos:        position{line: 675, col: 37, offset: 29146},
																										val:        "]",
																										ignoreCase: false,
																									},
																								},
																								&anyMatcher{
																									line: 675, col: 41, offset: 29150,
																								},
																							},
																						},
																					},
																				},
																				&choiceExpr{
																					pos: position{line: 675, col: 46, offset: 29155},
																					alternatives: []interface{}{
																						&litMatcher{
																							pos:        position{line: 675, col: 46, offset: 29155},
																							val:        ",",
																							ignoreCase: false,
																						},
																						&andExpr{
																							pos: position{line: 675, col: 52, offset: 29161},
																							expr: &litMatcher{
																								pos:        position{line: 675, col: 53, offset: 29162},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																},
																&labeledExpr{
																	pos:   position{line: 668, col: 9, offset: 28825},
																	label: "otherAttrs",
																	expr: &zeroOrMoreExpr{
																		pos: position{line: 668, col: 20, offset: 28836},
																		expr: &choiceExpr{
																			pos: position{line: 161, col: 21, offset: 6571},
																			alternatives: []interface{}{
																				&actionExpr{
																					pos: position{line: 161, col: 21, offset: 6571},
																					run: (*parser).callonTitleElement304,
																					expr: &seqExpr{
																						pos: position{line: 161, col: 21, offset: 6571},
																						exprs: []interface{}{
																							&labeledExpr{
																								pos:   position{line: 161, col: 21, offset: 6571},
																								label: "key",
																								expr: &actionExpr{
																									pos: position{line: 167, col: 17, offset: 6861},
																									run: (*parser).callonTitleElement307,
																									expr: &seqExpr{
																										pos: position{line: 167, col: 17, offset: 6861},
																										exprs: []interface{}{
																											&notExpr{
																												pos: position{line: 167, col: 17, offset: 6861},
																												expr: &actionExpr{
																													pos: position{line: 207, col: 14, offset: 8362},
																													run: (*parser).callonTitleElement310,
																													expr: &litMatcher{
																														pos:        position{line: 207, col: 14, offset: 8362},
																														val:        "verse",
																														ignoreCase: false,
																													},
																												},
																											},
																											&labeledExpr{
																												pos:   position{line: 167, col: 28, offset: 6872},
																												label: "key",
																												expr: &oneOrMoreExpr{
																													pos: position{line: 167, col: 32, offset: 6876},
																													expr: &seqExpr{
																														pos: position{line: 167, col: 33, offset: 6877},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 167, col: 33, offset: 6877},
																																expr: &litMatcher{
																																	pos:        position{line: 167, col: 34, offset: 6878},
																																	val:        "=",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 167, col: 38, offset: 6882},
																																expr: &litMatcher{
																																	pos:        position{line: 167, col: 39, offset: 6883},
																																	val:        ",",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 167, col: 43, offset: 6887},
																																expr: &litMatcher{
																																	pos:        position{line: 167, col: 44, offset: 6888},
																																	val:        "]",
																																	ignoreCase: false,
																																},
																															},
																															&anyMatcher{
																																line: 167, col: 48, offset: 6892,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&litMatcher{
																								pos:        position{line: 161, col: 40, offset: 6590},
																								val:        "=",
																								ignoreCase: false,
																							},
																							&labeledExpr{
																								pos:   position{line: 161, col: 44, offset: 6594},
																								label: "value",
																								expr: &actionExpr{
																									pos: position{line: 171, col: 19, offset: 6940},
																									run: (*parser).callonTitleElement324,
																									expr: &labeledExpr{
																										pos:   position{line: 171, col: 19, offset: 6940},
																										label: "value",
																										expr: &zeroOrMoreExpr{
																											pos: position{line: 171, col: 25, offset: 6946},
																											expr: &seqExpr{
																												pos: position{line: 171, col: 26, offset: 6947},
																												exprs: []interface{}{
																													&notExpr{
																														pos: position{line: 171, col: 26, offset: 6947},
																														expr: &litMatcher{
																															pos:        position{line: 171, col: 27, offset: 6948},
																															val:        "=",
																															ignoreCase: false,
																														},
																													},
																													&notExpr{
																														pos: position{line: 171, col: 31, offset: 6952},
																														expr: &litMatcher{
																															pos:        position{line: 171, col: 32, offset: 6953},
																															val:        ",",
																															ignoreCase: false,
																														},
																													},
																													&notExpr{
																														pos: position{line: 171, col: 36, offset: 6957},
																														expr: &litMatcher{
																															pos:        position{line: 171, col: 37, offset: 6958},
																															val:        "]",
																															ignoreCase: false,
																														},
																													},
																													&anyMatcher{
																														line: 171, col: 41, offset: 6962,
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&zeroOrOneExpr{
																								pos: position{line: 161, col: 67, offset: 6617},
																								expr: &litMatcher{
																									pos:        position{line: 161, col: 67, offset: 6617},
																									val:        ",",
																									ignoreCase: false,
																								},
																							},
																							&zeroOrMoreExpr{
																								pos: position{line: 161, col: 72, offset: 6622},
																								expr: &choiceExpr{
																									pos: position{line: 895, col: 7, offset: 37107},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 895, col: 7, offset: 37107},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 895, col: 13, offset: 37113},
																											run: (*parser).callonTitleElement340,
																											expr: &litMatcher{
																												pos:        position{line: 895, col: 13, offset: 37113},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																				&actionExpr{
																					pos: position{line: 163, col: 5, offset: 6729},
																					run: (*parser).callonTitleElement342,
																					expr: &seqExpr{
																						pos: position{line: 163, col: 5, offset: 6729},
																						exprs: []interface{}{
																							&labeledExpr{
																								pos:   position{line: 163, col: 5, offset: 6729},
																								label: "key",
																								expr: &actionExpr{
																									pos: position{line: 167, col: 17, offset: 6861},
																									run: (*parser).callonTitleElement345,
																									expr: &seqExpr{
																										pos: position{line: 167, col: 17, offset: 6861},
																										exprs: []interface{}{
																											&notExpr{
																												pos: position{line: 167, col: 17, offset: 6861},
																												expr: &actionExpr{
																													pos: position{line: 207, col: 14, offset: 8362},
																													run: (*parser).callonTitleElement348,
																													expr: &litMatcher{
																														pos:        position{line: 207, col: 14, offset: 8362},
																														val:        "verse",
																														ignoreCase: false,
																													},
																												},
																											},
																											&labeledExpr{
																												pos:   position{line: 167, col: 28, offset: 6872},
																												label: "key",
																												expr: &oneOrMoreExpr{
																													pos: position{line: 167, col: 32, offset: 6876},
																													expr: &seqExpr{
																														pos: position{line: 167, col: 33, offset: 6877},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 167, col: 33, offset: 6877},
																																expr: &litMatcher{
																																	pos:        position{line: 167, col: 34, offset: 6878},
																																	val:        "=",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 167, col: 38, offset: 6882},
																																expr: &litMatcher{
																																	pos:        position{line: 167, col: 39, offset: 6883},
																																	val:        ",",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 167, col: 43, offset: 6887},
																																expr: &litMatcher{
																																	pos:        position{line: 167, col: 44, offset: 6888},
																																	val:        "]",
																																	ignoreCase: false,
																																},
																															},
																															&anyMatcher{
																																line: 167, col: 48, offset: 6892,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&zeroOrOneExpr{
																								pos: position{line: 163, col: 24, offset: 6748},
																								expr: &litMatcher{
																									pos:        position{line: 163, col: 24, offset: 6748},
																									val:        ",",
																									ignoreCase: false,
																								},
																							},
																							&zeroOrMoreExpr{
																								pos: position{line: 163, col: 29, offset: 6753},
																								expr: &choiceExpr{
																									pos: position{line: 895, col: 7, offset: 37107},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 895, col: 7, offset: 37107},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 895, col: 13, offset: 37113},
																											run: (*parser).callonTitleElement365,
																											expr: &litMatcher{
																												pos:        position{line: 895, col: 13, offset: 37113},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																},
																&litMatcher{
																	pos:        position{line: 668, col: 40, offset: 28856},
																	val:        "]",
																	ignoreCase: false,
																},
															},
														},
													},
													&actionExpr{
														pos: position{line: 670, col: 9, offset: 28973},
														run: (*parser).callonTitleElement368,
														expr: &seqExpr{
															pos: position{line: 670, col: 9, offset: 28973},
															exprs: []interface{}{
																&litMatcher{
																	pos:        position{line: 670, col: 9, offset: 28973},
																	val:        "[",
																	ignoreCase: false,
																},
																&labeledExpr{
																	pos:   position{line: 670, col: 13, offset: 28977},
																	label: "otherAttrs",
																	expr: &zeroOrMoreExpr{
																		pos: position{line: 670, col: 24, offset: 28988},
																		expr: &choiceExpr{
																			pos: position{line: 161, col: 21, offset: 6571},
																			alternatives: []interface{}{
																				&actionExpr{
																					pos: position{line: 161, col: 21, offset: 6571},
																					run: (*parser).callonTitleElement374,
																					expr: &seqExpr{
																						pos: position{line: 161, col: 21, offset: 6571},
																						exprs: []interface{}{
																							&labeledExpr{
																								pos:   position{line: 161, col: 21, offset: 6571},
																								label: "key",
																								expr: &actionExpr{
																									pos: position{line: 167, col: 17, offset: 6861},
																									run: (*parser).callonTitleElement377,
																									expr: &seqExpr{
																										pos: position{line: 167, col: 17, offset: 6861},
																										exprs: []interface{}{
																											&notExpr{
																												pos: position{line: 167, col: 17, offset: 6861},
																												expr: &actionExpr{
																													pos: position{line: 207, col: 14, offset: 8362},
																													run: (*parser).callonTitleElement380,
																													expr: &litMatcher{
																														pos:        position{line: 207, col: 14, offset: 8362},
																														val:        "verse",
																														ignoreCase: false,
																													},
																												},
																											},
																											&labeledExpr{
																												pos:   position{line: 167, col: 28, offset: 6872},
																												label: "key",
																												expr: &oneOrMoreExpr{
																													pos: position{line: 167, col: 32, offset: 6876},
																													expr: &seqExpr{
																														pos: position{line: 167, col: 33, offset: 6877},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 167, col: 33, offset: 6877},
																																expr: &litMatcher{
																																	pos:        position{line: 167, col: 34, offset: 6878},
																																	val:        "=",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 167, col: 38, offset: 6882},
																																expr: &litMatcher{
																																	pos:        position{line: 167, col: 39, offset: 6883},
																																	val:        ",",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 167, col: 43, offset: 6887},
																																expr: &litMatcher{
																																	pos:        position{line: 167, col: 44, offset: 6888},
																																	val:        "]",
																																	ignoreCase: false,
																																},
																															},
																															&anyMatcher{
																																line: 167, col: 48, offset: 6892,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&litMatcher{
																								pos:        position{line: 161, col: 40, offset: 6590},
																								val:        "=",
																								ignoreCase: false,
																							},
																							&labeledExpr{
																								pos:   position{line: 161, col: 44, offset: 6594},
																								label: "value",
																								expr: &actionExpr{
																									pos: position{line: 171, col: 19, offset: 6940},
																									run: (*parser).callonTitleElement394,
																									expr: &labeledExpr{
																										pos:   position{line: 171, col: 19, offset: 6940},
																										label: "value",
																										expr: &zeroOrMoreExpr{
																											pos: position{line: 171, col: 25, offset: 6946},
																											expr: &seqExpr{
																												pos: position{line: 171, col: 26, offset: 6947},
																												exprs: []interface{}{
																													&notExpr{
																														pos: position{line: 171, col: 26, offset: 6947},
																														expr: &litMatcher{
																															pos:        position{line: 171, col: 27, offset: 6948},
																															val:        "=",
																															ignoreCase: false,
																														},
																													},
																													&notExpr{
																														pos: position{line: 171, col: 31, offset: 6952},
																														expr: &litMatcher{
																															pos:        position{line: 171, col: 32, offset: 6953},
																															val:        ",",
																															ignoreCase: false,
																														},
																													},
																													&notExpr{
																														pos: position{line: 171, col: 36, offset: 6957},
																														expr: &litMatcher{
																															pos:        position{line: 171, col: 37, offset: 6958},
																															val:        "]",
																															ignoreCase: false,
																														},
																													},
																													&anyMatcher{
																														line: 171, col: 41, offset: 6962,
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&zeroOrOneExpr{
																								pos: position{line: 161, col: 67, offset: 6617},
																								expr: &litMatcher{
																									pos:        position{line: 161, col: 67, offset: 6617},
																									val:        ",",
																									ignoreCase: false,
																								},
																							},
																							&zeroOrMoreExpr{
																								pos: position{line: 161, col: 72, offset: 6622},
																								expr: &choiceExpr{
																									pos: position{line: 895, col: 7, offset: 37107},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 895, col: 7, offset: 37107},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 895, col: 13, offset: 37113},
																											run: (*parser).callonTitleElement410,
																											expr: &litMatcher{
																												pos:        position{line: 895, col: 13, offset: 37113},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																				&actionExpr{
																					pos: position{line: 163, col: 5, offset: 6729},
																					run: (*parser).callonTitleElement412,
																					expr: &seqExpr{
																						pos: position{line: 163, col: 5, offset: 6729},
																						exprs: []interface{}{
																							&labeledExpr{
																								pos:   position{line: 163, col: 5, offset: 6729},
																								label: "key",
																								expr: &actionExpr{
																									pos: position{line: 167, col: 17, offset: 6861},
																									run: (*parser).callonTitleElement415,
																									expr: &seqExpr{
																										pos: position{line: 167, col: 17, offset: 6861},
																										exprs: []interface{}{
																											&notExpr{
																												pos: position{line: 167, col: 17, offset: 6861},
																												expr: &actionExpr{
																													pos: position{line: 207, col: 14, offset: 8362},
																													run: (*parser).callonTitleElement418,
																													expr: &litMatcher{
																														pos:        position{line: 207, col: 14, offset: 8362},
																														val:        "verse",
																														ignoreCase: false,
																													},
																												},
																											},
																											&labeledExpr{
																												pos:   position{line: 167, col: 28, offset: 6872},
																												label: "key",
																												expr: &oneOrMoreExpr{
																													pos: position{line: 167, col: 32, offset: 6876},
																													expr: &seqExpr{
																														pos: position{line: 167, col: 33, offset: 6877},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 167, col: 33, offset: 6877},
																																expr: &litMatcher{
																																	pos:        position{line: 167, col: 34, offset: 6878},
																																	val:        "=",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 167, col: 38, offset: 6882},
																																expr: &litMatcher{
																																	pos:        position{line: 167, col: 39, offset: 6883},
																																	val:        ",",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 167, col: 43, offset: 6887},
																																expr: &litMatcher{
																																	pos:        position{line: 167, col: 44, offset: 6888},
																																	val:        "]",
																																	ignoreCase: false,
																																},
																															},
																															&anyMatcher{
																																line: 167, col: 48, offset: 6892,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&zeroOrOneExpr{
																								pos: position{line: 163, col: 24, offset: 6748},
																								expr: &litMatcher{
																									pos:        position{line: 163, col: 24, offset: 6748},
																									val:        ",",
																									ignoreCase: false,
																								},
																							},
																							&zeroOrMoreExpr{
																								pos: position{line: 163, col: 29, offset: 6753},
																								expr: &choiceExpr{
																									pos: position{line: 895, col: 7, offset: 37107},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 895, col: 7, offset: 37107},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 895, col: 13, offset: 37113},
																											run: (*parser).callonTitleElement435,
																											expr: &litMatcher{
																												pos:        position{line: 895, col: 13, offset: 37113},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																},
																&litMatcher{
																	pos:        position{line: 670, col: 44, offset: 29008},
																	val:        "]",
																	ignoreCase: false,
																},
															},
														},
													},
												},
											},
										},
									},
								},
							},
							&ruleRefExpr{
								pos:  position{line: 335, col: 71, offset: 13227},
								name: "QuotedText",
							},
							&actionExpr{
								pos: position{line: 620, col: 9, offset: 26772},
								run: (*parser).callonTitleElement439,
								expr: &labeledExpr{
									pos:   position{line: 620, col: 9, offset: 26772},
									label: "link",
									expr: &choiceExpr{
										pos: position{line: 620, col: 15, offset: 26778},
										alternatives: []interface{}{
											&actionExpr{
												pos: position{line: 631, col: 17, offset: 27148},
												run: (*parser).callonTitleElement442,
												expr: &seqExpr{
													pos: position{line: 631, col: 17, offset: 27148},
													exprs: []interface{}{
														&litMatcher{
															pos:        position{line: 631, col: 17, offset: 27148},
															val:        "link:",
															ignoreCase: false,
														},
														&labeledExpr{
															pos:   position{line: 631, col: 25, offset: 27156},
															label: "url",
															expr: &seqExpr{
																pos: position{line: 631, col: 30, offset: 27161},
																exprs: []interface{}{
																	&zeroOrOneExpr{
																		pos: position{line: 631, col: 30, offset: 27161},
																		expr: &choiceExpr{
																			pos: position{line: 891, col: 15, offset: 37027},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 891, col: 15, offset: 37027},
																					val:        "http://",
																					ignoreCase: false,
																				},
																				&litMatcher{
																					pos:        position{line: 891, col: 27, offset: 37039},
																					val:        "https://",
																					ignoreCase: false,
																				},
																				&litMatcher{
																					pos:        position{line: 891, col: 40, offset: 37052},
																					val:        "ftp://",
																					ignoreCase: false,
																				},
																				&litMatcher{
																					pos:        position{line: 891, col: 51, offset: 37063},
																					val:        "irc://",
																					ignoreCase: false,
																				},
																				&litMatcher{
																					pos:        position{line: 891, col: 62, offset: 37074},
																					val:        "mailto:",
																					ignoreCase: false,
																				},
																			},
																		},
																	},
																	&actionExpr{
																		pos: position{line: 879, col: 8, offset: 36796},
																		run: (*parser).callonTitleElement454,
																		expr: &oneOrMoreExpr{
																			pos: position{line: 879, col: 8, offset: 36796},
																			expr: &seqExpr{
																				pos: position{line: 879, col: 9, offset: 36797},
																				exprs: []interface{}{
																					&notExpr{
																						pos: position{line: 879, col: 9, offset: 36797},
																						expr: &choiceExpr{
																							pos: position{line: 899, col: 12, offset: 37169},
																							alternatives: []interface{}{
																								&litMatcher{
																									pos:        position{line: 899, col: 12, offset: 37169},
																									val:        "\r\n",
																									ignoreCase: false,
																								},
																								&charClassMatcher{
																									pos:        position{line: 899, col: 21, offset: 37178},
																									val:        "[\\r\\n]",
																									chars:      []rune{'\r', '\n'},
																									ignoreCase: false,
																									inverted:   false,
																								},
																							},
																						},
																					},
																					&notExpr{
																						pos: position{line: 879, col: 18, offset: 36806},
																						expr: &choiceExpr{
																							pos: position{line: 895, col: 7, offset: 37107},
																							alternatives: []interface{}{
																								&litMatcher{
																									pos:        position{line: 895, col: 7, offset: 37107},
																									val:        " ",
																									ignoreCase: false,
																								},
																								&actionExpr{
																									pos: position{line: 895, col: 13, offset: 37113},
																									run: (*parser).callonTitleElement464,
																									expr: &litMatcher{
																										pos:        position{line: 895, col: 13, offset: 37113},
																										val:        "\t",
																										ignoreCase: false,
																									},
																								},
																							},
																						},
																					},
																					&notExpr{
																						pos: position{line: 879, col: 22, offset: 36810},
																						expr: &litMatcher{
																							pos:        position{line: 879, col: 23, offset: 36811},
																							val:        "[",
																							ignoreCase: false,
																						},
																					},
																					&notExpr{
																						pos: position{line: 879, col: 27, offset: 36815},
																						expr: &litMatcher{
																							pos:        position{line: 879, col: 28, offset: 36816},
																							val:        "]",
																							ignoreCase: false,
																						},
																					},
																					&anyMatcher{
																						line: 879, col: 32, offset: 36820,
																					},
																				},
																			},
																		},
																	},
																},
															},
														},
														&labeledExpr{
															pos:   position{line: 631, col: 47, offset: 27178},
															label: "attributes",
															expr: &choiceExpr{
																pos: position{line: 635, col: 19, offset: 27313},
																alternatives: []interface{}{
																	&actionExpr{
																		pos: position{line: 635, col: 19, offset: 27313},
																		run: (*parser).callonTitleElement473,
																		expr: &seqExpr{
																			pos: position{line: 635, col: 19, offset: 27313},
																			exprs: []interface{}{
																				&litMatcher{
																					pos:        position{line: 635, col: 19, offset: 27313},
																					val:        "[",
																					ignoreCase: false,
																				},
																				&labeledExpr{
																					pos:   position{line: 635, col: 23, offset: 27317},
																					label: "text",
																					expr: &actionExpr{
																						pos: position{line: 642, col: 22, offset: 27609},
																						run: (*parser).callonTitleElement477,
																						expr: &labeledExpr{
																							pos:   position{line: 642, col: 22, offset: 27609},
																							label: "value",
																							expr: &oneOrMoreExpr{
																								pos: position{line: 642, col: 28, offset: 27615},
																								expr: &seqExpr{
																									pos: position{line: 642, col: 29, offset: 27616},
																									exprs: []interface{}{
																										&notExpr{
																											pos: position{line: 642, col: 29, offset: 27616},
																											expr: &litMatcher{
																												pos:        position{line: 642, col: 30, offset: 27617},
																												val:        ",",
																												ignoreCase: false,
																											},
																										},
																										&notExpr{
																											pos: position{line: 642, col: 34, offset: 27621},
																											expr: &litMatcher{
																												pos:        position{line: 642, col: 35, offset: 27622},
																												val:        "]",
																												ignoreCase: false,
																											},
																										},
																										&anyMatcher{
																											line: 642, col: 39, offset: 27626,
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																				&labeledExpr{
																					pos:   position{line: 636, col: 9, offset: 27350},
																					label: "otherAttrs",
																					expr: &zeroOrMoreExpr{
																						pos: position{line: 636, col: 20, offset: 27361},
																						expr: &choiceExpr{
																							pos: position{line: 161, col: 21, offset: 6571},
																							alternatives: []interface{}{
																								&actionExpr{
																									pos: position{line: 161, col: 21, offset: 6571},
																									run: (*parser).callonTitleElement489,
																									expr: &seqExpr{
																										pos: position{line: 161, col: 21, offset: 6571},
																										exprs: []interface{}{
																											&labeledExpr{
																												pos:   position{line: 161, col: 21, offset: 6571},
																												label: "key",
																												expr: &actionExpr{
																													pos: position{line: 167, col: 17, offset: 6861},
																													run: (*parser).callonTitleElement492,
																													expr: &seqExpr{
																														pos: position{line: 167, col: 17, offset: 6861},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 167, col: 17, offset: 6861},
																																expr: &actionExpr{
																																	pos: position{line: 207, col: 14, offset: 8362},
																																	run: (*parser).callonTitleElement495,
																																	expr: &litMatcher{
																																		pos:        position{line: 207, col: 14, offset: 8362},
																																		val:        "verse",
																																		ignoreCase: false,
																																	},
																																},
																															},
																															&labeledExpr{
																																pos:   position{line: 167, col: 28, offset: 6872},
																																label: "key",
																																expr: &oneOrMoreExpr{
																																	pos: position{line: 167, col: 32, offset: 6876},
																																	expr: &seqExpr{
																																		pos: position{line: 167, col: 33, offset: 6877},
																																		exprs: []interface{}{
																																			&notExpr{
																																				pos: position{line: 167, col: 33, offset: 6877},
																																				expr: &litMatcher{
																																					pos:        position{line: 167, col: 34, offset: 6878},
																																					val:        "=",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 167, col: 38, offset: 6882},
																																				expr: &litMatcher{
																																					pos:        position{line: 167, col: 39, offset: 6883},
																																					val:        ",",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 167, col: 43, offset: 6887},
																																				expr: &litMatcher{
																																					pos:        position{line: 167, col: 44, offset: 6888},
																																					val:        "]",
																																					ignoreCase: false,
																																				},
																																			},
																																			&anyMatcher{
																																				line: 167, col: 48, offset: 6892,
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																											&litMatcher{
																												pos:        position{line: 161, col: 40, offset: 6590},
																												val:        "=",
																												ignoreCase: false,
																											},
																											&labeledExpr{
																												pos:   position{line: 161, col: 44, offset: 6594},
																												label: "value",
																												expr: &actionExpr{
																													pos: position{line: 171, col: 19, offset: 6940},
																													run: (*parser).callonTitleElement509,
																													expr: &labeledExpr{
																														pos:   position{line: 171, col: 19, offset: 6940},
																														label: "value",
																														expr: &zeroOrMoreExpr{
																															pos: position{line: 171, col: 25, offset: 6946},
																															expr: &seqExpr{
																																pos: position{line: 171, col: 26, offset: 6947},
																																exprs: []interface{}{
																																	&notExpr{
																																		pos: position{line: 171, col: 26, offset: 6947},
																																		expr: &litMatcher{
																																			pos:        position{line: 171, col: 27, offset: 6948},
																																			val:        "=",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 171, col: 31, offset: 6952},
																																		expr: &litMatcher{
																																			pos:        position{line: 171, col: 32, offset: 6953},
																																			val:        ",",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 171, col: 36, offset: 6957},
																																		expr: &litMatcher{
																																			pos:        position{line: 171, col: 37, offset: 6958},
																																			val:        "]",
																																			ignoreCase: false,
																																		},
																																	},
																																	&anyMatcher{
																																		line: 171, col: 41, offset: 6962,
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																											&zeroOrOneExpr{
																												pos: position{line: 161, col: 67, offset: 6617},
																												expr: &litMatcher{
																													pos:        position{line: 161, col: 67, offset: 6617},
																													val:        ",",
																													ignoreCase: false,
																												},
																											},
																											&zeroOrMoreExpr{
																												pos: position{line: 161, col: 72, offset: 6622},
																												expr: &choiceExpr{
																													pos: position{line: 895, col: 7, offset: 37107},
																													alternatives: []interface{}{
																														&litMatcher{
																															pos:        position{line: 895, col: 7, offset: 37107},
																															val:        " ",
																															ignoreCase: false,
																														},
																														&actionExpr{
																															pos: position{line: 895, col: 13, offset: 37113},
																															run: (*parser).callonTitleElement525,
																															expr: &litMatcher{
																																pos:        position{line: 895, col: 13, offset: 37113},
																																val:        "\t",
																																ignoreCase: false,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&actionExpr{
																									pos: position{line: 163, col: 5, offset: 6729},
																									run: (*parser).callonTitleElement527,
																									expr: &seqExpr{
																										pos: position{line: 163, col: 5, offset: 6729},
																										exprs: []interface{}{
																											&labeledExpr{
																												pos:   position{line: 163, col: 5, offset: 6729},
																												label: "key",
																												expr: &actionExpr{
																													pos: position{line: 167, col: 17, offset: 6861},
																													run: (*parser).callonTitleElement530,
																													expr: &seqExpr{
																														pos: position{line: 167, col: 17, offset: 6861},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 167, col: 17, offset: 6861},
																																expr: &actionExpr{
																																	pos: position{line: 207, col: 14, offset: 8362},
																																	run: (*parser).callonTitleElement533,
																																	expr: &litMatcher{
																																		pos:        position{line: 207, col: 14, offset: 8362},
																																		val:        "verse",
																																		ignoreCase: false,
																																	},
																																},
																															},
																															&labeledExpr{
																																pos:   position{line: 167, col: 28, offset: 6872},
																																label: "key",
																																expr: &oneOrMoreExpr{
																																	pos: position{line: 167, col: 32, offset: 6876},
																																	expr: &seqExpr{
																																		pos: position{line: 167, col: 33, offset: 6877},
																																		exprs: []interface{}{
																																			&notExpr{
																																				pos: position{line: 167, col: 33, offset: 6877},
																																				expr: &litMatcher{
																																					pos:        position{line: 167, col: 34, offset: 6878},
																																					val:        "=",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 167, col: 38, offset: 6882},
																																				expr: &litMatcher{
																																					pos:        position{line: 167, col: 39, offset: 6883},
																																					val:        ",",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 167, col: 43, offset: 6887},
																																				expr: &litMatcher{
																																					pos:        position{line: 167, col: 44, offset: 6888},
																																					val:        "]",
																																					ignoreCase: false,
																																				},
																																			},
																																			&anyMatcher{
																																				line: 167, col: 48, offset: 6892,
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																											&zeroOrOneExpr{
																												pos: position{line: 163, col: 24, offset: 6748},
																												expr: &litMatcher{
																													pos:        position{line: 163, col: 24, offset: 6748},
																													val:        ",",
																													ignoreCase: false,
																												},
																											},
																											&zeroOrMoreExpr{
																												pos: position{line: 163, col: 29, offset: 6753},
																												expr: &choiceExpr{
																													pos: position{line: 895, col: 7, offset: 37107},
																													alternatives: []interface{}{
																														&litMatcher{
																															pos:        position{line: 895, col: 7, offset: 37107},
																															val:        " ",
																															ignoreCase: false,
																														},
																														&actionExpr{
																															pos: position{line: 895, col: 13, offset: 37113},
																															run: (*parser).callonTitleElement550,
																															expr: &litMatcher{
																																pos:        position{line: 895, col: 13, offset: 37113},
																																val:        "\t",
																																ignoreCase: false,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																				&litMatcher{
																					pos:        position{line: 636, col: 40, offset: 27381},
																					val:        "]",
																					ignoreCase: false,
																				},
																			},
																		},
																	},
																	&actionExpr{
																		pos: position{line: 638, col: 5, offset: 27476},
																		run: (*parser).callonTitleElement553,
																		expr: &seqExpr{
																			pos: position{line: 638, col: 5, offset: 27476},
																			exprs: []interface{}{
																				&litMatcher{
																					pos:        position{line: 638, col: 5, offset: 27476},
																					val:        "[",
																					ignoreCase: false,
																				},
																				&labeledExpr{
																					pos:   position{line: 638, col: 9, offset: 27480},
																					label: "otherAttrs",
																					expr: &zeroOrMoreExpr{
																						pos: position{line: 638, col: 20, offset: 27491},
																						expr: &choiceExpr{
																							pos: position{line: 161, col: 21, offset: 6571},
																							alternatives: []interface{}{
																								&actionExpr{
																									pos: position{line: 161, col: 21, offset: 6571},
																									run: (*parser).callonTitleElement559,
																									expr: &seqExpr{
																										pos: position{line: 161, col: 21, offset: 6571},
																										exprs: []interface{}{
																											&labeledExpr{
																												pos:   position{line: 161, col: 21, offset: 6571},
																												label: "key",
																												expr: &actionExpr{
																													pos: position{line: 167, col: 17, offset: 6861},
																													run: (*parser).callonTitleElement562,
																													expr: &seqExpr{
																														pos: position{line: 167, col: 17, offset: 6861},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 167, col: 17, offset: 6861},
																																expr: &actionExpr{
																																	pos: position{line: 207, col: 14, offset: 8362},
																																	run: (*parser).callonTitleElement565,
																																	expr: &litMatcher{
																																		pos:        position{line: 207, col: 14, offset: 8362},
																																		val:        "verse",
																																		ignoreCase: false,
																																	},
																																},
																															},
																															&labeledExpr{
																																pos:   position{line: 167, col: 28, offset: 6872},
																																label: "key",
																																expr: &oneOrMoreExpr{
																																	pos: position{line: 167, col: 32, offset: 6876},
																																	expr: &seqExpr{
																																		pos: position{line: 167, col: 33, offset: 6877},
																																		exprs: []interface{}{
																																			&notExpr{
																																				pos: position{line: 167, col: 33, offset: 6877},
																																				expr: &litMatcher{
																																					pos:        position{line: 167, col: 34, offset: 6878},
																																					val:        "=",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 167, col: 38, offset: 6882},
																																				expr: &litMatcher{
																																					pos:        position{line: 167, col: 39, offset: 6883},
																																					val:        ",",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 167, col: 43, offset: 6887},
																																				expr: &litMatcher{
																																					pos:        position{line: 167, col: 44, offset: 6888},
																																					val:        "]",
																																					ignoreCase: false,
																																				},
																																			},
																																			&anyMatcher{
																																				line: 167, col: 48, offset: 6892,
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																											&litMatcher{
																												pos:        position{line: 161, col: 40, offset: 6590},
																												val:        "=",
																												ignoreCase: false,
																											},
																											&labeledExpr{
																												pos:   position{line: 161, col: 44, offset: 6594},
																												label: "value",
																												expr: &actionExpr{
																													pos: position{line: 171, col: 19, offset: 6940},
																													run: (*parser).callonTitleElement579,
																													expr: &labeledExpr{
																														pos:   position{line: 171, col: 19, offset: 6940},
																														label: "value",
																														expr: &zeroOrMoreExpr{
																															pos: position{line: 171, col: 25, offset: 6946},
																															expr: &seqExpr{
																																pos: position{line: 171, col: 26, offset: 6947},
																																exprs: []interface{}{
																																	&notExpr{
																																		pos: position{line: 171, col: 26, offset: 6947},
																																		expr: &litMatcher{
																																			pos:        position{line: 171, col: 27, offset: 6948},
																																			val:        "=",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 171, col: 31, offset: 6952},
																																		expr: &litMatcher{
																																			pos:        position{line: 171, col: 32, offset: 6953},
																																			val:        ",",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 171, col: 36, offset: 6957},
																																		expr: &litMatcher{
																																			pos:        position{line: 171, col: 37, offset: 6958},
																																			val:        "]",
																																			ignoreCase: false,
																																		},
																																	},
																																	&anyMatcher{
																																		line: 171, col: 41, offset: 6962,
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																											&zeroOrOneExpr{
																												pos: position{line: 161, col: 67, offset: 6617},
																												expr: &litMatcher{
																													pos:        position{line: 161, col: 67, offset: 6617},
																													val:        ",",
																													ignoreCase: false,
																												},
																											},
																											&zeroOrMoreExpr{
																												pos: position{line: 161, col: 72, offset: 6622},
																												expr: &choiceExpr{
																													pos: position{line: 895, col: 7, offset: 37107},
																													alternatives: []interface{}{
																														&litMatcher{
																															pos:        position{line: 895, col: 7, offset: 37107},
																															val:        " ",
																															ignoreCase: false,
																														},
																														&actionExpr{
																															pos: position{line: 895, col: 13, offset: 37113},
																															run: (*parser).callonTitleElement595,
																															expr: &litMatcher{
																																pos:        position{line: 895, col: 13, offset: 37113},
																																val:        "\t",
																																ignoreCase: false,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&actionExpr{
																									pos: position{line: 163, col: 5, offset: 6729},
																									run: (*parser).callonTitleElement597,
																									expr: &seqExpr{
																										pos: position{line: 163, col: 5, offset: 6729},
																										exprs: []interface{}{
																											&labeledExpr{
																												pos:   position{line: 163, col: 5, offset: 6729},
																												label: "key",
																												expr: &actionExpr{
																													pos: position{line: 167, col: 17, offset: 6861},
																													run: (*parser).callonTitleElement600,
																													expr: &seqExpr{
																														pos: position{line: 167, col: 17, offset: 6861},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 167, col: 17, offset: 6861},
																																expr: &actionExpr{
																																	pos: position{line: 207, col: 14, offset: 8362},
																																	run: (*parser).callonTitleElement603,
																																	expr: &litMatcher{
																																		pos:        position{line: 207, col: 14, offset: 8362},
																																		val:        "verse",
																																		ignoreCase: false,
																																	},
																																},
																															},
																															&labeledExpr{
																																pos:   position{line: 167, col: 28, offset: 6872},
																																label: "key",
																																expr: &oneOrMoreExpr{
																																	pos: position{line: 167, col: 32, offset: 6876},
																																	expr: &seqExpr{
																																		pos: position{line: 167, col: 33, offset: 6877},
																																		exprs: []interface{}{
																																			&notExpr{
																																				pos: position{line: 167, col: 33, offset: 6877},
																																				expr: &litMatcher{
																																					pos:        position{line: 167, col: 34, offset: 6878},
																																					val:        "=",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 167, col: 38, offset: 6882},
																																				expr: &litMatcher{
																																					pos:        position{line: 167, col: 39, offset: 6883},
																																					val:        ",",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 167, col: 43, offset: 6887},
																																				expr: &litMatcher{
																																					pos:        position{line: 167, col: 44, offset: 6888},
																																					val:        "]",
																																					ignoreCase: false,
																																				},
																																			},
																																			&anyMatcher{
																																				line: 167, col: 48, offset: 6892,
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																											&zeroOrOneExpr{
																												pos: position{line: 163, col: 24, offset: 6748},
																												expr: &litMatcher{
																													pos:        position{line: 163, col: 24, offset: 6748},
																													val:        ",",
																													ignoreCase: false,
																												},
																											},
																											&zeroOrMoreExpr{
																												pos: position{line: 163, col: 29, offset: 6753},
																												expr: &choiceExpr{
																													pos: position{line: 895, col: 7, offset: 37107},
																													alternatives: []interface{}{
																														&litMatcher{
																															pos:        position{line: 895, col: 7, offset: 37107},
																															val:        " ",
																															ignoreCase: false,
																														},
																														&actionExpr{
																															pos: position{line: 895, col: 13, offset: 37113},
																															run: (*parser).callonTitleElement620,
																															expr: &litMatcher{
																																pos:        position{line: 895, col: 13, offset: 37113},
																																val:        "\t",
																																ignoreCase: false,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																				&litMatcher{
																					pos:        position{line: 638, col: 40, offset: 27511},
																					val:        "]",
																					ignoreCase: false,
																				},
																			},
																		},
																	},
																},
															},
														},
													},
												},
											},
											&actionExpr{
												pos: position{line: 624, col: 17, offset: 26849},
												run: (*parser).callonTitleElement623,
												expr: &seqExpr{
													pos: position{line: 624, col: 17, offset: 26849},
													exprs: []interface{}{
														&labeledExpr{
															pos:   position{line: 624, col: 17, offset: 26849},
															label: "url",
															expr: &seqExpr{
																pos: position{line: 624, col: 22, offset: 26854},
																exprs: []interface{}{
																	&choiceExpr{
																		pos: position{line: 891, col: 15, offset: 37027},
																		alternatives: []interface{}{
																			&litMatcher{
																				pos:        position{line: 891, col: 15, offset: 37027},
																				val:        "http://",
																				ignoreCase: false,
																			},
																			&litMatcher{
																				pos:        position{line: 891, col: 27, offset: 37039},
																				val:        "https://",
																				ignoreCase: false,
																			},
																			&litMatcher{
																				pos:        position{line: 891, col: 40, offset: 37052},
																				val:        "ftp://",
																				ignoreCase: false,
																			},
																			&litMatcher{
																				pos:        position{line: 891, col: 51, offset: 37063},
																				val:        "irc://",
																				ignoreCase: false,
																			},
																			&litMatcher{
																				pos:        position{line: 891, col: 62, offset: 37074},
																				val:        "mailto:",
																				ignoreCase: false,
																			},
																		},
																	},
																	&actionExpr{
																		pos: position{line: 879, col: 8, offset: 36796},
																		run: (*parser).callonTitleElement633,
																		expr: &oneOrMoreExpr{
																			pos: position{line: 879, col: 8, offset: 36796},
																			expr: &seqExpr{
																				pos: position{line: 879, col: 9, offset: 36797},
																				exprs: []interface{}{
																					&notExpr{
																						pos: position{line: 879, col: 9, offset: 36797},
																						expr: &choiceExpr{
																							pos: position{line: 899, col: 12, offset: 37169},
																							alternatives: []interface{}{
																								&litMatcher{
																									pos:        position{line: 899, col: 12, offset: 37169},
																									val:        "\r\n",
																									ignoreCase: false,
																								},
																								&charClassMatcher{
																									pos:        position{line: 899, col: 21, offset: 37178},
																									val:        "[\\r\\n]",
																									chars:      []rune{'\r', '\n'},
																									ignoreCase: false,
																									inverted:   false,
																								},
																							},
																						},
																					},
																					&notExpr{
																						pos: position{line: 879, col: 18, offset: 36806},
																						expr: &choiceExpr{
																							pos: position{line: 895, col: 7, offset: 37107},
																							alternatives: []interface{}{
																								&litMatcher{
																									pos:        position{line: 895, col: 7, offset: 37107},
																									val:        " ",
																									ignoreCase: false,
																								},
																								&actionExpr{
																									pos: position{line: 895, col: 13, offset: 37113},
																									run: (*parser).callonTitleElement643,
																									expr: &litMatcher{
																										pos:        position{line: 895, col: 13, offset: 37113},
																										val:        "\t",
																										ignoreCase: false,
																									},
																								},
																							},
																						},
																					},
																					&notExpr{
																						pos: position{line: 879, col: 22, offset: 36810},
																						expr: &litMatcher{
																							pos:        position{line: 879, col: 23, offset: 36811},
																							val:        "[",
																							ignoreCase: false,
																						},
																					},
																					&notExpr{
																						pos: position{line: 879, col: 27, offset: 36815},
																						expr: &litMatcher{
																							pos:        position{line: 879, col: 28, offset: 36816},
																							val:        "]",
																							ignoreCase: false,
																						},
																					},
																					&anyMatcher{
																						line: 879, col: 32, offset: 36820,
																					},
																				},
																			},
																		},
																	},
																},
															},
														},
														&labeledExpr{
															pos:   position{line: 624, col: 38, offset: 26870},
															label: "attributes",
															expr: &choiceExpr{
																pos: position{line: 635, col: 19, offset: 27313},
																alternatives: []interface{}{
																	&actionExpr{
																		pos: position{line: 635, col: 19, offset: 27313},
																		run: (*parser).callonTitleElement652,
																		expr: &seqExpr{
																			pos: position{line: 635, col: 19, offset: 27313},
																			exprs: []interface{}{
																				&litMatcher{
																					pos:        position{line: 635, col: 19, offset: 27313},
																					val:        "[",
																					ignoreCase: false,
																				},
																				&labeledExpr{
																					pos:   position{line: 635, col: 23, offset: 27317},
																					label: "text",
																					expr: &actionExpr{
																						pos: position{line: 642, col: 22, offset: 27609},
																						run: (*parser).callonTitleElement656,
																						expr: &labeledExpr{
																							pos:   position{line: 642, col: 22, offset: 27609},
																							label: "value",
																							expr: &oneOrMoreExpr{
																								pos: position{line: 642, col: 28, offset: 27615},
																								expr: &seqExpr{
																									pos: position{line: 642, col: 29, offset: 27616},
																									exprs: []interface{}{
																										&notExpr{
																											pos: position{line: 642, col: 29, offset: 27616},
																											expr: &litMatcher{
																												pos:        position{line: 642, col: 30, offset: 27617},
																												val:        ",",
																												ignoreCase: false,
																											},
																										},
																										&notExpr{
																											pos: position{line: 642, col: 34, offset: 27621},
																											expr: &litMatcher{
																												pos:        position{line: 642, col: 35, offset: 27622},
																												val:        "]",
																												ignoreCase: false,
																											},
																										},
																										&anyMatcher{
																											line: 642, col: 39, offset: 27626,
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																				&labeledExpr{
																					pos:   position{line: 636, col: 9, offset: 27350},
																					label: "otherAttrs",
																					expr: &zeroOrMoreExpr{
																						pos: position{line: 636, col: 20, offset: 27361},
																						expr: &choiceExpr{
																							pos: position{line: 161, col: 21, offset: 6571},
																							alternatives: []interface{}{
																								&actionExpr{
																									pos: position{line: 161, col: 21, offset: 6571},
																									run: (*parser).callonTitleElement668,
																									expr: &seqExpr{
																										pos: position{line: 161, col: 21, offset: 6571},
																										exprs: []interface{}{
																											&labeledExpr{
																												pos:   position{line: 161, col: 21, offset: 6571},
																												label: "key",
																												expr: &actionExpr{
																													pos: position{line: 167, col: 17, offset: 6861},
																													run: (*parser).callonTitleElement671,
																													expr: &seqExpr{
																														pos: position{line: 167, col: 17, offset: 6861},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 167, col: 17, offset: 6861},
																																expr: &actionExpr{
																																	pos: position{line: 207, col: 14, offset: 8362},
																																	run: (*parser).callonTitleElement674,
																																	expr: &litMatcher{
																																		pos:        position{line: 207, col: 14, offset: 8362},
																																		val:        "verse",
																																		ignoreCase: false,
																																	},
																																},
																															},
																															&labeledExpr{
																																pos:   position{line: 167, col: 28, offset: 6872},
																																label: "key",
																																expr: &oneOrMoreExpr{
																																	pos: position{line: 167, col: 32, offset: 6876},
																																	expr: &seqExpr{
																																		pos: position{line: 167, col: 33, offset: 6877},
																																		exprs: []interface{}{
																																			&notExpr{
																																				pos: position{line: 167, col: 33, offset: 6877},
																																				expr: &litMatcher{
																																					pos:        position{line: 167, col: 34, offset: 6878},
																																					val:        "=",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 167, col: 38, offset: 6882},
																																				expr: &litMatcher{
																																					pos:        position{line: 167, col: 39, offset: 6883},
																																					val:        ",",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 167, col: 43, offset: 6887},
																																				expr: &litMatcher{
																																					pos:        position{line: 167, col: 44, offset: 6888},
																																					val:        "]",
																																					ignoreCase: false,
																																				},
																																			},
																																			&anyMatcher{
																																				line: 167, col: 48, offset: 6892,
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																											&litMatcher{
																												pos:        position{line: 161, col: 40, offset: 6590},
																												val:        "=",
																												ignoreCase: false,
																											},
																											&labeledExpr{
																												pos:   position{line: 161, col: 44, offset: 6594},
																												label: "value",
																												expr: &actionExpr{
																													pos: position{line: 171, col: 19, offset: 6940},
																													run: (*parser).callonTitleElement688,
																													expr: &labeledExpr{
																														pos:   position{line: 171, col: 19, offset: 6940},
																														label: "value",
																														expr: &zeroOrMoreExpr{
																															pos: position{line: 171, col: 25, offset: 6946},
																															expr: &seqExpr{
																																pos: position{line: 171, col: 26, offset: 6947},
																																exprs: []interface{}{
																																	&notExpr{
																																		pos: position{line: 171, col: 26, offset: 6947},
																																		expr: &litMatcher{
																																			pos:        position{line: 171, col: 27, offset: 6948},
																																			val:        "=",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 171, col: 31, offset: 6952},
																																		expr: &litMatcher{
																																			pos:        position{line: 171, col: 32, offset: 6953},
																																			val:        ",",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 171, col: 36, offset: 6957},
																																		expr: &litMatcher{
																																			pos:        position{line: 171, col: 37, offset: 6958},
																																			val:        "]",
																																			ignoreCase: false,
																																		},
																																	},
																																	&anyMatcher{
																																		line: 171, col: 41, offset: 6962,
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																											&zeroOrOneExpr{
																												pos: position{line: 161, col: 67, offset: 6617},
																												expr: &litMatcher{
																													pos:        position{line: 161, col: 67, offset: 6617},
																													val:        ",",
																													ignoreCase: false,
																												},
																											},
																											&zeroOrMoreExpr{
																												pos: position{line: 161, col: 72, offset: 6622},
																												expr: &choiceExpr{
																													pos: position{line: 895, col: 7, offset: 37107},
																													alternatives: []interface{}{
																														&litMatcher{
																															pos:        position{line: 895, col: 7, offset: 37107},
																															val:        " ",
																															ignoreCase: false,
																														},
																														&actionExpr{
																															pos: position{line: 895, col: 13, offset: 37113},
																															run: (*parser).callonTitleElement704,
																															expr: &litMatcher{
																																pos:        position{line: 895, col: 13, offset: 37113},
																																val:        "\t",
																																ignoreCase: false,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&actionExpr{
																									pos: position{line: 163, col: 5, offset: 6729},
																									run: (*parser).callonTitleElement706,
																									expr: &seqExpr{
																										pos: position{line: 163, col: 5, offset: 6729},
																										exprs: []interface{}{
																											&labeledExpr{
																												pos:   position{line: 163, col: 5, offset: 6729},
																												label: "key",
																												expr: &actionExpr{
																													pos: position{line: 167, col: 17, offset: 6861},
																													run: (*parser).callonTitleElement709,
																													expr: &seqExpr{
																														pos: position{line: 167, col: 17, offset: 6861},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 167, col: 17, offset: 6861},
																																expr: &actionExpr{
																																	pos: position{line: 207, col: 14, offset: 8362},
																																	run: (*parser).callonTitleElement712,
																																	expr: &litMatcher{
																																		pos:        position{line: 207, col: 14, offset: 8362},
																																		val:        "verse",
																																		ignoreCase: false,
																																	},
																																},
																															},
																															&labeledExpr{
																																pos:   position{line: 167, col: 28, offset: 6872},
																																label: "key",
																																expr: &oneOrMoreExpr{
																																	pos: position{line: 167, col: 32, offset: 6876},
																																	expr: &seqExpr{
																																		pos: position{line: 167, col: 33, offset: 6877},
																																		exprs: []interface{}{
																																			&notExpr{
																																				pos: position{line: 167, col: 33, offset: 6877},
																																				expr: &litMatcher{
																																					pos:        position{line: 167, col: 34, offset: 6878},
																																					val:        "=",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 167, col: 38, offset: 6882},
																																				expr: &litMatcher{
																																					pos:        position{line: 167, col: 39, offset: 6883},
																																					val:        ",",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 167, col: 43, offset: 6887},
																																				expr: &litMatcher{
																																					pos:        position{line: 167, col: 44, offset: 6888},
																																					val:        "]",
																																					ignoreCase: false,
																																				},
																																			},
																																			&anyMatcher{
																																				line: 167, col: 48, offset: 6892,
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																											&zeroOrOneExpr{
																												pos: position{line: 163, col: 24, offset: 6748},
																												expr: &litMatcher{
																													pos:        position{line: 163, col: 24, offset: 6748},
																													val:        ",",
																													ignoreCase: false,
																												},
																											},
																											&zeroOrMoreExpr{
																												pos: position{line: 163, col: 29, offset: 6753},
																												expr: &choiceExpr{
																													pos: position{line: 895, col: 7, offset: 37107},
																													alternatives: []interface{}{
																														&litMatcher{
																															pos:        position{line: 895, col: 7, offset: 37107},
																															val:        " ",
																															ignoreCase: false,
																														},
																														&actionExpr{
																															pos: position{line: 895, col: 13, offset: 37113},
																															run: (*parser).callonTitleElement729,
																															expr: &litMatcher{
																																pos:        position{line: 895, col: 13, offset: 37113},
																																val:        "\t",
																																ignoreCase: false,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																				&litMatcher{
																					pos:        position{line: 636, col: 40, offset: 27381},
																					val:        "]",
																					ignoreCase: false,
																				},
																			},
																		},
																	},
																	&actionExpr{
																		pos: position{line: 638, col: 5, offset: 27476},
																		run: (*parser).callonTitleElement732,
																		expr: &seqExpr{
																			pos: position{line: 638, col: 5, offset: 27476},
																			exprs: []interface{}{
																				&litMatcher{
																					pos:        position{line: 638, col: 5, offset: 27476},
																					val:        "[",
																					ignoreCase: false,
																				},
																				&labeledExpr{
																					pos:   position{line: 638, col: 9, offset: 27480},
																					label: "otherAttrs",
																					expr: &zeroOrMoreExpr{
																						pos: position{line: 638, col: 20, offset: 27491},
																						expr: &choiceExpr{
																							pos: position{line: 161, col: 21, offset: 6571},
																							alternatives: []interface{}{
																								&actionExpr{
																									pos: position{line: 161, col: 21, offset: 6571},
																									run: (*parser).callonTitleElement738,
																									expr: &seqExpr{
																										pos: position{line: 161, col: 21, offset: 6571},
																										exprs: []interface{}{
																											&labeledExpr{
																												pos:   position{line: 161, col: 21, offset: 6571},
																												label: "key",
																												expr: &actionExpr{
																													pos: position{line: 167, col: 17, offset: 6861},
																													run: (*parser).callonTitleElement741,
																													expr: &seqExpr{
																														pos: position{line: 167, col: 17, offset: 6861},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 167, col: 17, offset: 6861},
																																expr: &actionExpr{
																																	pos: position{line: 207, col: 14, offset: 8362},
																																	run: (*parser).callonTitleElement744,
																																	expr: &litMatcher{
																																		pos:        position{line: 207, col: 14, offset: 8362},
																																		val:        "verse",
																																		ignoreCase: false,
																																	},
																																},
																															},
																															&labeledExpr{
																																pos:   position{line: 167, col: 28, offset: 6872},
																																label: "key",
																																expr: &oneOrMoreExpr{
																																	pos: position{line: 167, col: 32, offset: 6876},
																																	expr: &seqExpr{
																																		pos: position{line: 167, col: 33, offset: 6877},
																																		exprs: []interface{}{
																																			&notExpr{
																																				pos: position{line: 167, col: 33, offset: 6877},
																																				expr: &litMatcher{
																																					pos:        position{line: 167, col: 34, offset: 6878},
																																					val:        "=",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 167, col: 38, offset: 6882},
																																				expr: &litMatcher{
																																					pos:        position{line: 167, col: 39, offset: 6883},
																																					val:        ",",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 167, col: 43, offset: 6887},
																																				expr: &litMatcher{
																																					pos:        position{line: 167, col: 44, offset: 6888},
																																					val:        "]",
																																					ignoreCase: false,
																																				},
																																			},
																																			&anyMatcher{
																																				line: 167, col: 48, offset: 6892,
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																											&litMatcher{
																												pos:        position{line: 161, col: 40, offset: 6590},
																												val:        "=",
																												ignoreCase: false,
																											},
																											&labeledExpr{
																												pos:   position{line: 161, col: 44, offset: 6594},
																												label: "value",
																												expr: &actionExpr{
																													pos: position{line: 171, col: 19, offset: 6940},
																													run: (*parser).callonTitleElement758,
																													expr: &labeledExpr{
																														pos:   position{line: 171, col: 19, offset: 6940},
																														label: "value",
																														expr: &zeroOrMoreExpr{
																															pos: position{line: 171, col: 25, offset: 6946},
																															expr: &seqExpr{
																																pos: position{line: 171, col: 26, offset: 6947},
																																exprs: []interface{}{
																																	&notExpr{
																																		pos: position{line: 171, col: 26, offset: 6947},
																																		expr: &litMatcher{
																																			pos:        position{line: 171, col: 27, offset: 6948},
																																			val:        "=",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 171, col: 31, offset: 6952},
																																		expr: &litMatcher{
																																			pos:        position{line: 171, col: 32, offset: 6953},
																																			val:        ",",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 171, col: 36, offset: 6957},
																																		expr: &litMatcher{
																																			pos:        position{line: 171, col: 37, offset: 6958},
																																			val:        "]",
																																			ignoreCase: false,
																																		},
																																	},
																																	&anyMatcher{
																																		line: 171, col: 41, offset: 6962,
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																											&zeroOrOneExpr{
																												pos: position{line: 161, col: 67, offset: 6617},
																												expr: &litMatcher{
																													pos:        position{line: 161, col: 67, offset: 6617},
																													val:        ",",
																													ignoreCase: false,
																												},
																											},
																											&zeroOrMoreExpr{
																												pos: position{line: 161, col: 72, offset: 6622},
																												expr: &choiceExpr{
																													pos: position{line: 895, col: 7, offset: 37107},
																													alternatives: []interface{}{
																														&litMatcher{
																															pos:        position{line: 895, col: 7, offset: 37107},
																															val:        " ",
																															ignoreCase: false,
																														},
																														&actionExpr{
																															pos: position{line: 895, col: 13, offset: 37113},
																															run: (*parser).callonTitleElement774,
																															expr: &litMatcher{
																																pos:        position{line: 895, col: 13, offset: 37113},
																																val:        "\t",
																																ignoreCase: false,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&actionExpr{
																									pos: position{line: 163, col: 5, offset: 6729},
																									run: (*parser).callonTitleElement776,
																									expr: &seqExpr{
																										pos: position{line: 163, col: 5, offset: 6729},
																										exprs: []interface{}{
																											&labeledExpr{
																												pos:   position{line: 163, col: 5, offset: 6729},
																												label: "key",
																												expr: &actionExpr{
																													pos: position{line: 167, col: 17, offset: 6861},
																													run: (*parser).callonTitleElement779,
																													expr: &seqExpr{
																														pos: position{line: 167, col: 17, offset: 6861},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 167, col: 17, offset: 6861},
																																expr: &actionExpr{
																																	pos: position{line: 207, col: 14, offset: 8362},
																																	run: (*parser).callonTitleElement782,
																																	expr: &litMatcher{
																																		pos:        position{line: 207, col: 14, offset: 8362},
																																		val:        "verse",
																																		ignoreCase: false,
																																	},
																																},
																															},
																															&labeledExpr{
																																pos:   position{line: 167, col: 28, offset: 6872},
																																label: "key",
																																expr: &oneOrMoreExpr{
																																	pos: position{line: 167, col: 32, offset: 6876},
																																	expr: &seqExpr{
																																		pos: position{line: 167, col: 33, offset: 6877},
																																		exprs: []interface{}{
																																			&notExpr{
																																				pos: position{line: 167, col: 33, offset: 6877},
																																				expr: &litMatcher{
																																					pos:        position{line: 167, col: 34, offset: 6878},
																																					val:        "=",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 167, col: 38, offset: 6882},
																																				expr: &litMatcher{
																																					pos:        position{line: 167, col: 39, offset: 6883},
																																					val:        ",",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 167, col: 43, offset: 6887},
																																				expr: &litMatcher{
																																					pos:        position{line: 167, col: 44, offset: 6888},
																																					val:        "]",
																																					ignoreCase: false,
																																				},
																																			},
																																			&anyMatcher{
																																				line: 167, col: 48, offset: 6892,
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																											&zeroOrOneExpr{
																												pos: position{line: 163, col: 24, offset: 6748},
																												expr: &litMatcher{
																													pos:        position{line: 163, col: 24, offset: 6748},
																													val:        ",",
																													ignoreCase: false,
																												},
																											},
																											&zeroOrMoreExpr{
																												pos: position{line: 163, col: 29, offset: 6753},
																												expr: &choiceExpr{
																													pos: position{line: 895, col: 7, offset: 37107},
																													alternatives: []interface{}{
																														&litMatcher{
																															pos:        position{line: 895, col: 7, offset: 37107},
																															val:        " ",
																															ignoreCase: false,
																														},
																														&actionExpr{
																															pos: position{line: 895, col: 13, offset: 37113},
																															run: (*parser).callonTitleElement799,
																															expr: &litMatcher{
																																pos:        position{line: 895, col: 13, offset: 37113},
																																val:        "\t",
																																ignoreCase: false,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																				&litMatcher{
																					pos:        position{line: 638, col: 40, offset: 27511},
																					val:        "]",
																					ignoreCase: false,
																				},
																			},
																		},
																	},
																},
															},
														},
													},
												},
											},
											&actionExpr{
												pos: position{line: 626, col: 5, offset: 26988},
												run: (*parser).callonTitleElement802,
												expr: &labeledExpr{
													pos:   position{line: 626, col: 5, offset: 26988},
													label: "url",
													expr: &seqExpr{
														pos: position{line: 626, col: 10, offset: 26993},
														exprs: []interface{}{
															&choiceExpr{
																pos: position{line: 891, col: 15, offset: 37027},
																alternatives: []interface{}{
																	&litMatcher{
																		pos:        position{line: 891, col: 15, offset: 37027},
																		val:        "http://",
																		ignoreCase: false,
																	},
																	&litMatcher{
																		pos:        position{line: 891, col: 27, offset: 37039},
																		val:        "https://",
																		ignoreCase: false,
																	},
																	&litMatcher{
																		pos:        position{line: 891, col: 40, offset: 37052},
																		val:        "ftp://",
																		ignoreCase: false,
																	},
																	&litMatcher{
																		pos:        position{line: 891, col: 51, offset: 37063},
																		val:        "irc://",
																		ignoreCase: false,
																	},
																	&litMatcher{
																		pos:        position{line: 891, col: 62, offset: 37074},
																		val:        "mailto:",
																		ignoreCase: false,
																	},
																},
															},
															&actionExpr{
																pos: position{line: 879, col: 8, offset: 36796},
																run: (*parser).callonTitleElement811,
																expr: &oneOrMoreExpr{
																	pos: position{line: 879, col: 8, offset: 36796},
																	expr: &seqExpr{
																		pos: position{line: 879, col: 9, offset: 36797},
																		exprs: []interface{}{
																			&notExpr{
																				pos: position{line: 879, col: 9, offset: 36797},
																				expr: &choiceExpr{
																					pos: position{line: 899, col: 12, offset: 37169},
																					alternatives: []interface{}{
																						&litMatcher{
																							pos:        position{line: 899, col: 12, offset: 37169},
																							val:        "\r\n",
																							ignoreCase: false,
																						},
																						&charClassMatcher{
																							pos:        position{line: 899, col: 21, offset: 37178},
																							val:        "[\\r\\n]",
																							chars:      []rune{'\r', '\n'},
																							ignoreCase: false,
																							inverted:   false,
																						},
																					},
																				},
																			},
																			&notExpr{
																				pos: position{line: 879, col: 18, offset: 36806},
																				expr: &choiceExpr{
																					pos: position{line: 895, col: 7, offset: 37107},
																					alternatives: []interface{}{
																						&litMatcher{
																							pos:        position{line: 895, col: 7, offset: 37107},
																							val:        " ",
																							ignoreCase: false,
																						},
																						&actionExpr{
																							pos: position{line: 895, col: 13, offset: 37113},
																							run: (*parser).callonTitleElement821,
																							expr: &litMatcher{
																								pos:        position{line: 895, col: 13, offset: 37113},
																								val:        "\t",
																								ignoreCase: false,
																							},
																						},
																					},
																				},
																			},
																			&notExpr{
																				pos: position{line: 879, col: 22, offset: 36810},
																				expr: &litMatcher{
																					pos:        position{line: 879, col: 23, offset: 36811},
																					val:        "[",
																					ignoreCase: false,
																				},
																			},
																			&notExpr{
																				pos: position{line: 879, col: 27, offset: 36815},
																				expr: &litMatcher{
																					pos:        position{line: 879, col: 28, offset: 36816},
																					val:        "]",
																					ignoreCase: false,
																				},
																			},
																			&anyMatcher{
																				line: 879, col: 32, offset: 36820,
																			},
																		},
																	},
																},
															},
														},
													},
												},
											},
										},
									},
								},
							},
							&actionExpr{
								pos: position{line: 103, col: 34, offset: 4397},
								run: (*parser).callonTitleElement828,
								expr: &seqExpr{
									pos: position{line: 103, col: 34, offset: 4397},
									exprs: []interface{}{
										&litMatcher{
											pos:        position{line: 103, col: 34, offset: 4397},
											val:        "{",
											ignoreCase: false,
										},
										&labeledExpr{
											pos:   position{line: 103, col: 38, offset: 4401},
											label: "name",
											expr: &seqExpr{
												pos: position{line: 110, col: 18, offset: 4687},
												exprs: []interface{}{
													&charClassMatcher{
														pos:        position{line: 110, col: 19, offset: 4688},
														val:        "[_A-Za-z0-9]",
														chars:      []rune{'_'},
														ranges:     []rune{'A', 'Z', 'a', 'z', '0', '9'},
														ignoreCase: false,
														inverted:   false,
													},
													&zeroOrMoreExpr{
														pos: position{line: 110, col: 48, offset: 4717},
														expr: &charClassMatcher{
															pos:        position{line: 110, col: 49, offset: 4718},
															val:        "[-A-Za-z0-9]",
															chars:      []rune{'-'},
															ranges:     []rune{'A', 'Z', 'a', 'z', '0', '9'},
															ignoreCase: false,
															inverted:   false,
														},
													},
												},
											},
										},
										&litMatcher{
											pos:        position{line: 103, col: 59, offset: 4422},
											val:        "}",
											ignoreCase: false,
										},
									},
								},
							},
							&actionExpr{
								pos: position{line: 875, col: 9, offset: 36722},
								run: (*parser).callonTitleElement837,
								expr: &oneOrMoreExpr{
									pos: position{line: 875, col: 9, offset: 36722},
									expr: &seqExpr{
										pos: position{line: 875, col: 10, offset: 36723},
										exprs: []interface{}{
											&notExpr{
												pos: position{line: 875, col: 10, offset: 36723},
												expr: &choiceExpr{
													pos: position{line: 899, col: 12, offset: 37169},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 899, col: 12, offset: 37169},
															val:        "\r\n",
															ignoreCase: false,
														},
														&charClassMatcher{
															pos:        position{line: 899, col: 21, offset: 37178},
															val:        "[\\r\\n]",
															chars:      []rune{'\r', '\n'},
															ignoreCase: false,
															inverted:   false,
														},
													},
												},
											},
											&notExpr{
												pos: position{line: 875, col: 19, offset: 36732},
												expr: &choiceExpr{
													pos: position{line: 895, col: 7, offset: 37107},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 895, col: 7, offset: 37107},
															val:        " ",
															ignoreCase: false,
														},
														&actionExpr{
															pos: position{line: 895, col: 13, offset: 37113},
															run: (*parser).callonTitleElement847,
															expr: &litMatcher{
																pos:        position{line: 895, col: 13, offset: 37113},
																val:        "\t",
																ignoreCase: false,
															},
														},
													},
												},
											},
											&notExpr{
												pos: position{line: 875, col: 23, offset: 36736},
												expr: &charClassMatcher{
													pos:        position{line: 873, col: 16, offset: 36691},
													val:        "[()[]]",
													chars:      []rune{'(', ')', '[', ']'},
													ignoreCase: false,
													inverted:   false,
												},
											},
											&anyMatcher{
												line: 875, col: 36, offset: 36749,
											},
										},
									},
								},
							},
							&charClassMatcher{
								pos:        position{line: 873, col: 16, offset: 36691},
								val:        "[()[]]",
								chars:      []rune{'(', ')', '[', ']'},
								ignoreCase: false,
								inverted:   false,
							},
						},
					},
				},
			},
		},
		{
			name: "List",
			pos:  position{line: 343, col: 1, offset: 13430},
			expr: &actionExpr{
				pos: position{line: 343, col: 9, offset: 13438},
				run: (*parser).callonList1,
				expr: &seqExpr{
					pos: position{line: 343, col: 9, offset: 13438},
					exprs: []interface{}{
						&labeledExpr{
							pos:   position{line: 343, col: 9, offset: 13438},
							label: "attributes",
							expr: &zeroOrMoreExpr{
								pos: position{line: 343, col: 20, offset: 13449},
								expr: &actionExpr{
									pos: position{line: 120, col: 21, offset: 5039},
									run: (*parser).callonList5,
									expr: &seqExpr{
										pos: position{line: 120, col: 21, offset: 5039},
										exprs: []interface{}{
											&labeledExpr{
												pos:   position{line: 120, col: 21, offset: 5039},
												label: "attr",
												expr: &choiceExpr{
													pos: position{line: 120, col: 27, offset: 5045},
													alternatives: []interface{}{
														&actionExpr{
															pos: position{line: 129, col: 14, offset: 5496},
															run: (*parser).callonList9,
															expr: &labeledExpr{
																pos:   position{line: 129, col: 14, offset: 5496},
																label: "id",
																expr: &actionExpr{
																	pos: position{line: 135, col: 20, offset: 5626},
																	run: (*parser).callonList11,
																	expr: &seqExpr{
																		pos: position{line: 135, col: 20, offset: 5626},
																		exprs: []interface{}{
																			&litMatcher{
																				pos:        position{line: 135, col: 20, offset: 5626},
																				val:        "[[",
																				ignoreCase: false,
																			},
																			&labeledExpr{
																				pos:   position{line: 135, col: 25, offset: 5631},
																				label: "id",
																				expr: &actionExpr{
																					pos: position{line: 883, col: 7, offset: 36866},
																					run: (*parser).callonList15,
																					expr: &oneOrMoreExpr{
																						pos: position{line: 883, col: 7, offset: 36866},
																						expr: &seqExpr{
																							pos: position{line: 883, col: 8, offset: 36867},
																							exprs: []interface{}{
																								&notExpr{
																									pos: position{line: 883, col: 8, offset: 36867},
																									expr: &choiceExpr{
																										pos: position{line: 899, col: 12, offset: 37169},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 899, col: 12, offset: 37169},
																												val:        "\r\n",
																												ignoreCase: false,
																											},
																											&charClassMatcher{
																												pos:        position{line: 899, col: 21, offset: 37178},
																												val:        "[\\r\\n]",
																												chars:      []rune{'\r', '\n'},
																												ignoreCase: false,
																												inverted:   false,
																											},
																										},
																									},
																								},
																								&notExpr{
																									pos: position{line: 883, col: 17, offset: 36876},
																									expr: &choiceExpr{
																										pos: position{line: 895, col: 7, offset: 37107},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 895, col: 7, offset: 37107},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 895, col: 13, offset: 37113},
																												run: (*parser).callonList25,
																												expr: &litMatcher{
																													pos:        position{line: 895, col: 13, offset: 37113},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																								&notExpr{
																									pos: position{line: 883, col: 21, offset: 36880},
																									expr: &litMatcher{
																										pos:        position{line: 883, col: 22, offset: 36881},
																										val:        "[",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 883, col: 26, offset: 36885},
																									expr: &litMatcher{
																										pos:        position{line: 883, col: 27, offset: 36886},
																										val:        "]",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 883, col: 31, offset: 36890},
																									expr: &litMatcher{
																										pos:        position{line: 883, col: 32, offset: 36891},
																										val:        "<<",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 883, col: 37, offset: 36896},
																									expr: &litMatcher{
																										pos:        position{line: 883, col: 38, offset: 36897},
																										val:        ">>",
																										ignoreCase: false,
																									},
																								},
																								&anyMatcher{
																									line: 883, col: 42, offset: 36901,
																								},
																							},
																						},
																					},
																				},
																			},
																			&litMatcher{
																				pos:        position{line: 135, col: 33, offset: 5639},
																				val:        "]]",
																				ignoreCase: false,
																			},
																		},
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 131, col: 5, offset: 5542},
															run: (*parser).callonList37,
															expr: &seqExpr{
																pos: position{line: 131, col: 5, offset: 5542},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 131, col: 5, offset: 5542},
																		val:        "[#",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 131, col: 10, offset: 5547},
																		label: "id",
																		expr: &actionExpr{
																			pos: position{line: 883, col: 7, offset: 36866},
																			run: (*parser).callonList41,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 883, col: 7, offset: 36866},
																				expr: &seqExpr{
																					pos: position{line: 883, col: 8, offset: 36867},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 883, col: 8, offset: 36867},
																							expr: &choiceExpr{
																								pos: position{line: 899, col: 12, offset: 37169},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 899, col: 12, offset: 37169},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 899, col: 21, offset: 37178},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 883, col: 17, offset: 36876},
																							expr: &choiceExpr{
																								pos: position{line: 895, col: 7, offset: 37107},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 895, col: 7, offset: 37107},
																										val:        " ",
																										ignoreCase: false,
																									},
																									&actionExpr{
																										pos: position{line: 895, col: 13, offset: 37113},
																										run: (*parser).callonList51,
																										expr: &litMatcher{
																											pos:        position{line: 895, col: 13, offset: 37113},
																											val:        "\t",
																											ignoreCase: false,
																										},
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 883, col: 21, offset: 36880},
																							expr: &litMatcher{
																								pos:        position{line: 883, col: 22, offset: 36881},
																								val:        "[",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 883, col: 26, offset: 36885},
																							expr: &litMatcher{
																								pos:        position{line: 883, col: 27, offset: 36886},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 883, col: 31, offset: 36890},
																							expr: &litMatcher{
																								pos:        position{line: 883, col: 32, offset: 36891},
																								val:        "<<",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 883, col: 37, offset: 36896},
																							expr: &litMatcher{
																								pos:        position{line: 883, col: 38, offset: 36897},
																								val:        ">>",
																								ignoreCase: false,
																							},
																						},
																						&anyMatcher{
																							line: 883, col: 42, offset: 36901,
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 131, col: 18, offset: 5555},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 141, col: 17, offset: 5848},
															run: (*parser).callonList63,
															expr: &seqExpr{
																pos: position{line: 141, col: 17, offset: 5848},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 141, col: 17, offset: 5848},
																		val:        ".",
																		ignoreCase: false,
																	},
																	&notExpr{
																		pos: position{line: 141, col: 21, offset: 5852},
																		expr: &litMatcher{
																			pos:        position{line: 141, col: 22, offset: 5853},
																			val:        ".",
																			ignoreCase: false,
																		},
																	},
																	&notExpr{
																		pos: position{line: 141, col: 26, offset: 5857},
																		expr: &choiceExpr{
																			pos: position{line: 895, col: 7, offset: 37107},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 895, col: 7, offset: 37107},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 895, col: 13, offset: 37113},
																					run: (*parser).callonList71,
																					expr: &litMatcher{
																						pos:        position{line: 895, col: 13, offset: 37113},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 141, col: 30, offset: 5861},
																		label: "title",
																		expr: &oneOrMoreExpr{
																			pos: position{line: 141, col: 36, offset: 5867},
																			expr: &seqExpr{
																				pos: position{line: 141, col: 37, offset: 5868},
																				exprs: []interface{}{
																					&notExpr{
																						pos: position{line: 141, col: 37, offset: 5868},
																						expr: &choiceExpr{
																							pos: position{line: 899, col: 12, offset: 37169},
																							alternatives: []interface{}{
																								&litMatcher{
																									pos:        position{line: 899, col: 12, offset: 37169},
																									val:        "\r\n",
																									ignoreCase: false,
																								},
																								&charClassMatcher{
																									pos:        position{line: 899, col: 21, offset: 37178},
																									val:        "[\\r\\n]",
																									chars:      []rune{'\r', '\n'},
																									ignoreCase: false,
																									inverted:   false,
																								},
																							},
																						},
																					},
																					&anyMatcher{
																						line: 141, col: 46, offset: 5877,
																					},
																				},
																			},
																		},
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 147, col: 16, offset: 6051},
															run: (*parser).callonList81,
															expr: &seqExpr{
																pos: position{line: 147, col: 16, offset: 6051},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 147, col: 16, offset: 6051},
																		val:        "[.",
																		ignoreCase: false,
																	},
																	&notExpr{
																		pos: position{line: 147, col: 21, offset: 6056},
																		expr: &choiceExpr{
																			pos: position{line: 895, col: 7, offset: 37107},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 895, col: 7, offset: 37107},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 895, col: 13, offset: 37113},
																					run: (*parser).callonList87,
																					expr: &litMatcher{
																						pos:        position{line: 895, col: 13, offset: 37113},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 147, col: 25, offset: 6060},
																		label: "role",
																		expr: &oneOrMoreExpr{
																			pos: position{line: 147, col: 30, offset: 6065},
																			expr: &seqExpr{
																				pos: position{line: 147, col: 31, offset: 6066},
																				exprs: []interface{}{
																					&notExpr{
																						pos: position{line: 147, col: 31, offset: 6066},
																						expr: &choiceExpr{
																							pos: position{line: 899, col: 12, offset: 37169},
																							alternatives: []interface{}{
																								&litMatcher{
																									pos:        position{line: 899, col: 12, offset: 37169},
																									val:        "\r\n",
																									ignoreCase: false,
																								},
																								&charClassMatcher{
																									pos:        position{line: 899, col: 21, offset: 37178},
																									val:        "[\\r\\n]",
																									chars:      []rune{'\r', '\n'},
																									ignoreCase: false,
																									inverted:   false,
																								},
																							},
																						},
																					},
																					&notExpr{
																						pos: position{line: 147, col: 40, offset: 6075},
																						expr: &litMatcher{
																							pos:        position{line: 147, col: 41, offset: 6076},
																							val:        "]",
																							ignoreCase: false,
																						},
																					},
																					&anyMatcher{
																						line: 147, col: 45, offset: 6080,
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 147, col: 49, offset: 6084},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 152, col: 30, offset: 6255},
															run: (*parser).callonList100,
															expr: &seqExpr{
																pos: position{line: 152, col: 30, offset: 6255},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 152, col: 30, offset: 6255},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 152, col: 34, offset: 6259},
																		label: "k",
																		expr: &choiceExpr{
																			pos: position{line: 470, col: 19, offset: 18925},
																			alternatives: []interface{}{
																				&actionExpr{
																					pos: position{line: 470, col: 19, offset: 18925},
																					run: (*parser).callonList105,
																					expr: &litMatcher{
																						pos:        position{line: 470, col: 19, offset: 18925},
																						val:        "TIP",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 472, col: 5, offset: 18963},
																					run: (*parser).callonList107,
																					expr: &litMatcher{
																						pos:        position{line: 472, col: 5, offset: 18963},
																						val:        "NOTE",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 474, col: 5, offset: 19003},
																					run: (*parser).callonList109,
																					expr: &litMatcher{
																						pos:        position{line: 474, col: 5, offset: 19003},
																						val:        "IMPORTANT",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 476, col: 5, offset: 19053},
																					run: (*parser).callonList111,
																					expr: &litMatcher{
																						pos:        position{line: 476, col: 5, offset: 19053},
																						val:        "WARNING",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 478, col: 5, offset: 19099},
																					run: (*parser).callonList113,
																					expr: &litMatcher{
																						pos:        position{line: 478, col: 5, offset: 19099},
																						val:        "CAUTION",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 152, col: 53, offset: 6278},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 175, col: 21, offset: 7013},
															run: (*parser).callonList116,
															expr: &litMatcher{
																pos:        position{line: 175, col: 21, offset: 7013},
																val:        "[horizontal]",
																ignoreCase: false,
															},
														},
														&actionExpr{
															pos: position{line: 157, col: 19, offset: 6439},
															run: (*parser).callonList118,
															expr: &seqExpr{
																pos: position{line: 157, col: 19, offset: 6439},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 157, col: 19, offset: 6439},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&notExpr{
																		pos: position{line: 157, col: 23, offset: 6443},
																		expr: &choiceExpr{
																			pos: position{line: 895, col: 7, offset: 37107},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 895, col: 7, offset: 37107},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 895, col: 13, offset: 37113},
																					run: (*parser).callonList124,
																					expr: &litMatcher{
																						pos:        position{line: 895, col: 13, offset: 37113},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 157, col: 27, offset: 6447},
																		label: "attributes",
																		expr: &zeroOrMoreExpr{
																			pos: position{line: 157, col: 38, offset: 6458},
																			expr: &choiceExpr{
																				pos: position{line: 161, col: 21, offset: 6571},
																				alternatives: []interface{}{
																					&actionExpr{
																						pos: position{line: 161, col: 21, offset: 6571},
																						run: (*parser).callonList129,
																						expr: &seqExpr{
																							pos: position{line: 161, col: 21, offset: 6571},
																							exprs: []interface{}{
																								&labeledExpr{
																									pos:   position{line: 161, col: 21, offset: 6571},
																									label: "key",
																									expr: &actionExpr{
																										pos: position{line: 167, col: 17, offset: 6861},
																										run: (*parser).callonList132,
																										expr: &seqExpr{
																											pos: position{line: 167, col: 17, offset: 6861},
																											exprs: []interface{}{
																												&notExpr{
																													pos: position{line: 167, col: 17, offset: 6861},
																													expr: &actionExpr{
																														pos: position{line: 207, col: 14, offset: 8362},
																														run: (*parser).callonList135,
																														expr: &litMatcher{
																															pos:        position{line: 207, col: 14, offset: 8362},
																															val:        "verse",
																															ignoreCase: false,
																														},
																													},
																												},
																												&labeledExpr{
																													pos:   position{line: 167, col: 28, offset: 6872},
																													label: "key",
																													expr: &oneOrMoreExpr{
																														pos: position{line: 167, col: 32, offset: 6876},
																														expr: &seqExpr{
																															pos: position{line: 167, col: 33, offset: 6877},
																															exprs: []interface{}{
																																&notExpr{
																																	pos: position{line: 167, col: 33, offset: 6877},
																																	expr: &litMatcher{
																																		pos:        position{line: 167, col: 34, offset: 6878},
																																		val:        "=",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 167, col: 38, offset: 6882},
																																	expr: &litMatcher{
																																		pos:        position{line: 167, col: 39, offset: 6883},
																																		val:        ",",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 167, col: 43, offset: 6887},
																																	expr: &litMatcher{
																																		pos:        position{line: 167, col: 44, offset: 6888},
																																		val:        "]",
																																		ignoreCase: false,
																																	},
																																},
																																&anyMatcher{
																																	line: 167, col: 48, offset: 6892,
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&litMatcher{
																									pos:        position{line: 161, col: 40, offset: 6590},
																									val:        "=",
																									ignoreCase: false,
																								},
																								&labeledExpr{
																									pos:   position{line: 161, col: 44, offset: 6594},
																									label: "value",
																									expr: &actionExpr{
																										pos: position{line: 171, col: 19, offset: 6940},
																										run: (*parser).callonList149,
																										expr: &labeledExpr{
																											pos:   position{line: 171, col: 19, offset: 6940},
																											label: "value",
																											expr: &zeroOrMoreExpr{
																												pos: position{line: 171, col: 25, offset: 6946},
																												expr: &seqExpr{
																													pos: position{line: 171, col: 26, offset: 6947},
																													exprs: []interface{}{
																														&notExpr{
																															pos: position{line: 171, col: 26, offset: 6947},
																															expr: &litMatcher{
																																pos:        position{line: 171, col: 27, offset: 6948},
																																val:        "=",
																																ignoreCase: false,
																															},
																														},
																														&notExpr{
																															pos: position{line: 171, col: 31, offset: 6952},
																															expr: &litMatcher{
																																pos:        position{line: 171, col: 32, offset: 6953},
																																val:        ",",
																																ignoreCase: false,
																															},
																														},
																														&notExpr{
																															pos: position{line: 171, col: 36, offset: 6957},
																															expr: &litMatcher{
																																pos:        position{line: 171, col: 37, offset: 6958},
																																val:        "]",
																																ignoreCase: false,
																															},
																														},
																														&anyMatcher{
																															line: 171, col: 41, offset: 6962,
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&zeroOrOneExpr{
																									pos: position{line: 161, col: 67, offset: 6617},
																									expr: &litMatcher{
																										pos:        position{line: 161, col: 67, offset: 6617},
																										val:        ",",
																										ignoreCase: false,
																									},
																								},
																								&zeroOrMoreExpr{
																									pos: position{line: 161, col: 72, offset: 6622},
																									expr: &choiceExpr{
																										pos: position{line: 895, col: 7, offset: 37107},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 895, col: 7, offset: 37107},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 895, col: 13, offset: 37113},
																												run: (*parser).callonList165,
																												expr: &litMatcher{
																													pos:        position{line: 895, col: 13, offset: 37113},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																					&actionExpr{
																						pos: position{line: 163, col: 5, offset: 6729},
																						run: (*parser).callonList167,
																						expr: &seqExpr{
																							pos: position{line: 163, col: 5, offset: 6729},
																							exprs: []interface{}{
																								&labeledExpr{
																									pos:   position{line: 163, col: 5, offset: 6729},
																									label: "key",
																									expr: &actionExpr{
																										pos: position{line: 167, col: 17, offset: 6861},
																										run: (*parser).callonList170,
																										expr: &seqExpr{
																											pos: position{line: 167, col: 17, offset: 6861},
																											exprs: []interface{}{
																												&notExpr{
																													pos: position{line: 167, col: 17, offset: 6861},
																													expr: &actionExpr{
																														pos: position{line: 207, col: 14, offset: 8362},
																														run: (*parser).callonList173,
																														expr: &litMatcher{
																															pos:        position{line: 207, col: 14, offset: 8362},
																															val:        "verse",
																															ignoreCase: false,
																														},
																													},
																												},
																												&labeledExpr{
																													pos:   position{line: 167, col: 28, offset: 6872},
																													label: "key",
																													expr: &oneOrMoreExpr{
																														pos: position{line: 167, col: 32, offset: 6876},
																														expr: &seqExpr{
																															pos: position{line: 167, col: 33, offset: 6877},
																															exprs: []interface{}{
																																&notExpr{
																																	pos: position{line: 167, col: 33, offset: 6877},
																																	expr: &litMatcher{
																																		pos:        position{line: 167, col: 34, offset: 6878},
																																		val:        "=",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 167, col: 38, offset: 6882},
																																	expr: &litMatcher{
																																		pos:        position{line: 167, col: 39, offset: 6883},
																																		val:        ",",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 167, col: 43, offset: 6887},
																																	expr: &litMatcher{
																																		pos:        position{line: 167, col: 44, offset: 6888},
																																		val:        "]",
																																		ignoreCase: false,
																																	},
																																},
																																&anyMatcher{
																																	line: 167, col: 48, offset: 6892,
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&zeroOrOneExpr{
																									pos: position{line: 163, col: 24, offset: 6748},
																									expr: &litMatcher{
																										pos:        position{line: 163, col: 24, offset: 6748},
																										val:        ",",
																										ignoreCase: false,
																									},
																								},
																								&zeroOrMoreExpr{
																									pos: position{line: 163, col: 29, offset: 6753},
																									expr: &choiceExpr{
																										pos: position{line: 895, col: 7, offset: 37107},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 895, col: 7, offset: 37107},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 895, col: 13, offset: 37113},
																												run: (*parser).callonList190,
																												expr: &litMatcher{
																													pos:        position{line: 895, col: 13, offset: 37113},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 157, col: 59, offset: 6479},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
													},
												},
											},
											&zeroOrMoreExpr{
												pos: position{line: 120, col: 131, offset: 5149},
												expr: &choiceExpr{
													pos: position{line: 895, col: 7, offset: 37107},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 895, col: 7, offset: 37107},
															val:        " ",
															ignoreCase: false,
														},
														&actionExpr{
															pos: position{line: 895, col: 13, offset: 37113},
															run: (*parser).callonList196,
															expr: &litMatcher{
																pos:        position{line: 895, col: 13, offset: 37113},
																val:        "\t",
																ignoreCase: false,
															},
														},
													},
												},
											},
											&choiceExpr{
												pos: position{line: 903, col: 8, offset: 37209},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 899, col: 12, offset: 37169},
														val:        "\r\n",
														ignoreCase: false,
													},
													&charClassMatcher{
														pos:        position{line: 899, col: 21, offset: 37178},
														val:        "[\\r\\n]",
														chars:      []rune{'\r', '\n'},
														ignoreCase: false,
														inverted:   false,
													},
													&notExpr{
														pos: position{line: 901, col: 8, offset: 37198},
														expr: &anyMatcher{
															line: 901, col: 9, offset: 37199,
														},
													},
												},
											},
										},
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 345, col: 5, offset: 13542},
							label: "elements",
							expr: &ruleRefExpr{
								pos:  position{line: 345, col: 14, offset: 13551},
								name: "ListItems",
							},
						},
					},
				},
			},
		},
		{
			name: "ListItems",
			pos:  position{line: 349, col: 1, offset: 13645},
			expr: &oneOrMoreExpr{
				pos: position{line: 349, col: 14, offset: 13658},
				expr: &choiceExpr{
					pos: position{line: 349, col: 15, offset: 13659},
					alternatives: []interface{}{
						&ruleRefExpr{
							pos:  position{line: 349, col: 15, offset: 13659},
							name: "OrderedListItem",
						},
						&ruleRefExpr{
							pos:  position{line: 349, col: 33, offset: 13677},
							name: "UnorderedListItem",
						},
						&ruleRefExpr{
							pos:  position{line: 349, col: 53, offset: 13697},
							name: "LabeledListItem",
						},
					},
				},
			},
		},
		{
			name: "ListParagraph",
			pos:  position{line: 351, col: 1, offset: 13716},
			expr: &actionExpr{
				pos: position{line: 351, col: 18, offset: 13733},
				run: (*parser).callonListParagraph1,
				expr: &labeledExpr{
					pos:   position{line: 351, col: 18, offset: 13733},
					label: "lines",
					expr: &oneOrMoreExpr{
						pos: position{line: 351, col: 24, offset: 13739},
						expr: &ruleRefExpr{
							pos:  position{line: 351, col: 25, offset: 13740},
							name: "ListParagraphLine",
						},
					},
				},
			},
		},
		{
			name: "ListParagraphLine",
			pos:  position{line: 355, col: 1, offset: 13824},
			expr: &actionExpr{
				pos: position{line: 356, col: 5, offset: 13850},
				run: (*parser).callonListParagraphLine1,
				expr: &seqExpr{
					pos: position{line: 356, col: 5, offset: 13850},
					exprs: []interface{}{
						&notExpr{
							pos: position{line: 356, col: 5, offset: 13850},
							expr: &actionExpr{
								pos: position{line: 381, col: 26, offset: 14670},
								run: (*parser).callonListParagraphLine4,
								expr: &seqExpr{
									pos: position{line: 381, col: 26, offset: 14670},
									exprs: []interface{}{
										&zeroOrMoreExpr{
											pos: position{line: 381, col: 26, offset: 14670},
											expr: &choiceExpr{
												pos: position{line: 895, col: 7, offset: 37107},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 895, col: 7, offset: 37107},
														val:        " ",
														ignoreCase: false,
													},
													&actionExpr{
														pos: position{line: 895, col: 13, offset: 37113},
														run: (*parser).callonListParagraphLine9,
														expr: &litMatcher{
															pos:        position{line: 895, col: 13, offset: 37113},
															val:        "\t",
															ignoreCase: false,
														},
													},
												},
											},
										},
										&labeledExpr{
											pos:   position{line: 381, col: 30, offset: 14674},
											label: "prefix",
											expr: &choiceExpr{
												pos: position{line: 383, col: 5, offset: 14729},
												alternatives: []interface{}{
													&actionExpr{
														pos: position{line: 383, col: 5, offset: 14729},
														run: (*parser).callonListParagraphLine13,
														expr: &litMatcher{
															pos:        position{line: 383, col: 5, offset: 14729},
															val:        ".....",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 385, col: 9, offset: 14842},
														run: (*parser).callonListParagraphLine15,
														expr: &litMatcher{
															pos:        position{line: 385, col: 9, offset: 14842},
															val:        "....",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 387, col: 9, offset: 14953},
														run: (*parser).callonListParagraphLine17,
														expr: &litMatcher{
															pos:        position{line: 387, col: 9, offset: 14953},
															val:        "...",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 389, col: 9, offset: 15062},
														run: (*parser).callonListParagraphLine19,
														expr: &litMatcher{
															pos:        position{line: 389, col: 9, offset: 15062},
															val:        "..",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 391, col: 9, offset: 15169},
														run: (*parser).callonListParagraphLine21,
														expr: &litMatcher{
															pos:        position{line: 391, col: 9, offset: 15169},
															val:        ".",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 394, col: 9, offset: 15296},
														run: (*parser).callonListParagraphLine23,
														expr: &seqExpr{
															pos: position{line: 394, col: 9, offset: 15296},
															exprs: []interface{}{
																&oneOrMoreExpr{
																	pos: position{line: 394, col: 9, offset: 15296},
																	expr: &charClassMatcher{
																		pos:        position{line: 394, col: 10, offset: 15297},
																		val:        "[0-9]",
																		ranges:     []rune{'0', '9'},
																		ignoreCase: false,
																		inverted:   false,
																	},
																},
																&litMatcher{
																	pos:        position{line: 394, col: 18, offset: 15305},
																	val:        ".",
																	ignoreCase: false,
																},
															},
														},
													},
													&actionExpr{
														pos: position{line: 396, col: 9, offset: 15408},
														run: (*parser).callonListParagraphLine28,
														expr: &seqExpr{
															pos: position{line: 396, col: 9, offset: 15408},
															exprs: []interface{}{
																&oneOrMoreExpr{
																	pos: position{line: 396, col: 9, offset: 15408},
																	expr: &charClassMatcher{
																		pos:        position{line: 396, col: 10, offset: 15409},
																		val:        "[a-z]",
																		ranges:     []rune{'a', 'z'},
																		ignoreCase: false,
																		inverted:   false,
																	},
																},
																&litMatcher{
																	pos:        position{line: 396, col: 18, offset: 15417},
																	val:        ".",
																	ignoreCase: false,
																},
															},
														},
													},
													&actionExpr{
														pos: position{line: 398, col: 9, offset: 15523},
														run: (*parser).callonListParagraphLine33,
														expr: &seqExpr{
															pos: position{line: 398, col: 9, offset: 15523},
															exprs: []interface{}{
																&oneOrMoreExpr{
																	pos: position{line: 398, col: 9, offset: 15523},
																	expr: &charClassMatcher{
																		pos:        position{line: 398, col: 10, offset: 15524},
																		val:        "[A-Z]",
																		ranges:     []rune{'A', 'Z'},
																		ignoreCase: false,
																		inverted:   false,
																	},
																},
																&litMatcher{
																	pos:        position{line: 398, col: 18, offset: 15532},
																	val:        ".",
																	ignoreCase: false,
																},
															},
														},
													},
													&actionExpr{
														pos: position{line: 400, col: 9, offset: 15638},
														run: (*parser).callonListParagraphLine38,
														expr: &seqExpr{
															pos: position{line: 400, col: 9, offset: 15638},
															exprs: []interface{}{
																&oneOrMoreExpr{
																	pos: position{line: 400, col: 9, offset: 15638},
																	expr: &charClassMatcher{
																		pos:        position{line: 400, col: 10, offset: 15639},
																		val:        "[a-z]",
																		ranges:     []rune{'a', 'z'},
																		ignoreCase: false,
																		inverted:   false,
																	},
																},
																&litMatcher{
																	pos:        position{line: 400, col: 18, offset: 15647},
																	val:        ")",
																	ignoreCase: false,
																},
															},
														},
													},
													&actionExpr{
														pos: position{line: 402, col: 9, offset: 15753},
														run: (*parser).callonListParagraphLine43,
														expr: &seqExpr{
															pos: position{line: 402, col: 9, offset: 15753},
															exprs: []interface{}{
																&oneOrMoreExpr{
																	pos: position{line: 402, col: 9, offset: 15753},
																	expr: &charClassMatcher{
																		pos:        position{line: 402, col: 10, offset: 15754},
																		val:        "[A-Z]",
																		ranges:     []rune{'A', 'Z'},
																		ignoreCase: false,
																		inverted:   false,
																	},
																},
																&litMatcher{
																	pos:        position{line: 402, col: 18, offset: 15762},
																	val:        ")",
																	ignoreCase: false,
																},
															},
														},
													},
												},
											},
										},
										&oneOrMoreExpr{
											pos: position{line: 404, col: 8, offset: 15867},
											expr: &choiceExpr{
												pos: position{line: 895, col: 7, offset: 37107},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 895, col: 7, offset: 37107},
														val:        " ",
														ignoreCase: false,
													},
													&actionExpr{
														pos: position{line: 895, col: 13, offset: 37113},
														run: (*parser).callonListParagraphLine51,
														expr: &litMatcher{
															pos:        position{line: 895, col: 13, offset: 37113},
															val:        "\t",
															ignoreCase: false,
														},
													},
												},
											},
										},
									},
								},
							},
						},
						&notExpr{
							pos: position{line: 357, col: 5, offset: 13880},
							expr: &actionExpr{
								pos: position{line: 420, col: 5, offset: 16525},
								run: (*parser).callonListParagraphLine54,
								expr: &seqExpr{
									pos: position{line: 420, col: 5, offset: 16525},
									exprs: []interface{}{
										&zeroOrMoreExpr{
											pos: position{line: 420, col: 5, offset: 16525},
											expr: &choiceExpr{
												pos: position{line: 895, col: 7, offset: 37107},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 895, col: 7, offset: 37107},
														val:        " ",
														ignoreCase: false,
													},
													&actionExpr{
														pos: position{line: 895, col: 13, offset: 37113},
														run: (*parser).callonListParagraphLine59,
														expr: &litMatcher{
															pos:        position{line: 895, col: 13, offset: 37113},
															val:        "\t",
															ignoreCase: false,
														},
													},
												},
											},
										},
										&labeledExpr{
											pos:   position{line: 420, col: 9, offset: 16529},
											label: "prefix",
											expr: &choiceExpr{
												pos: position{line: 421, col: 9, offset: 16546},
												alternatives: []interface{}{
													&actionExpr{
														pos: position{line: 421, col: 9, offset: 16546},
														run: (*parser).callonListParagraphLine63,
														expr: &litMatcher{
															pos:        position{line: 421, col: 9, offset: 16546},
															val:        "*****",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 424, col: 11, offset: 16715},
														run: (*parser).callonListParagraphLine65,
														expr: &litMatcher{
															pos:        position{line: 424, col: 11, offset: 16715},
															val:        "****",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 427, col: 11, offset: 16884},
														run: (*parser).callonListParagraphLine67,
														expr: &litMatcher{
															pos:        position{line: 427, col: 11, offset: 16884},
															val:        "***",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 430, col: 11, offset: 17053},
														run: (*parser).callonListParagraphLine69,
														expr: &litMatcher{
															pos:        position{line: 430, col: 11, offset: 17053},
															val:        "**",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 433, col: 11, offset: 17219},
														run: (*parser).callonListParagraphLine71,
														expr: &litMatcher{
															pos:        position{line: 433, col: 11, offset: 17219},
															val:        "*",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 436, col: 11, offset: 17383},
														run: (*parser).callonListParagraphLine73,
														expr: &litMatcher{
															pos:        position{line: 436, col: 11, offset: 17383},
															val:        "-",
															ignoreCase: false,
														},
													},
												},
											},
										},
										&oneOrMoreExpr{
											pos: position{line: 438, col: 12, offset: 17530},
											expr: &choiceExpr{
												pos: position{line: 895, col: 7, offset: 37107},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 895, col: 7, offset: 37107},
														val:        " ",
														ignoreCase: false,
													},
													&actionExpr{
														pos: position{line: 895, col: 13, offset: 37113},
														run: (*parser).callonListParagraphLine78,
														expr: &litMatcher{
															pos:        position{line: 895, col: 13, offset: 37113},
															val:        "\t",
															ignoreCase: false,
														},
													},
												},
											},
										},
									},
								},
							},
						},
						&notExpr{
							pos: position{line: 358, col: 5, offset: 13912},
							expr: &seqExpr{
								pos: position{line: 358, col: 7, offset: 13914},
								exprs: []interface{}{
									&actionExpr{
										pos: position{line: 456, col: 24, offset: 18380},
										run: (*parser).callonListParagraphLine82,
										expr: &labeledExpr{
											pos:   position{line: 456, col: 24, offset: 18380},
											label: "term",
											expr: &zeroOrMoreExpr{
												pos: position{line: 456, col: 29, offset: 18385},
												expr: &seqExpr{
													pos: position{line: 456, col: 30, offset: 18386},
													exprs: []interface{}{
														&notExpr{
															pos: position{line: 456, col: 30, offset: 18386},
															expr: &choiceExpr{
																pos: position{line: 899, col: 12, offset: 37169},
																alternatives: []interface{}{
																	&litMatcher{
																		pos:        position{line: 899, col: 12, offset: 37169},
																		val:        "\r\n",
																		ignoreCase: false,
																	},
																	&charClassMatcher{
																		pos:        position{line: 899, col: 21, offset: 37178},
																		val:        "[\\r\\n]",
																		chars:      []rune{'\r', '\n'},
																		ignoreCase: false,
																		inverted:   false,
																	},
																},
															},
														},
														&notExpr{
															pos: position{line: 456, col: 39, offset: 18395},
															expr: &litMatcher{
																pos:        position{line: 456, col: 40, offset: 18396},
																val:        "::",
																ignoreCase: false,
															},
														},
														&anyMatcher{
															line: 456, col: 45, offset: 18401,
														},
													},
												},
											},
										},
									},
									&litMatcher{
										pos:        position{line: 461, col: 30, offset: 18521},
										val:        "::",
										ignoreCase: false,
									},
									&oneOrMoreExpr{
										pos: position{line: 461, col: 35, offset: 18526},
										expr: &choiceExpr{
											pos: position{line: 461, col: 36, offset: 18527},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 895, col: 7, offset: 37107},
													val:        " ",
													ignoreCase: false,
												},
												&actionExpr{
													pos: position{line: 895, col: 13, offset: 37113},
													run: (*parser).callonListParagraphLine97,
													expr: &litMatcher{
														pos:        position{line: 895, col: 13, offset: 37113},
														val:        "\t",
														ignoreCase: false,
													},
												},
												&litMatcher{
													pos:        position{line: 899, col: 12, offset: 37169},
													val:        "\r\n",
													ignoreCase: false,
												},
												&charClassMatcher{
													pos:        position{line: 899, col: 21, offset: 37178},
													val:        "[\\r\\n]",
													chars:      []rune{'\r', '\n'},
													ignoreCase: false,
													inverted:   false,
												},
											},
										},
									},
								},
							},
						},
						&notExpr{
							pos: position{line: 359, col: 5, offset: 13965},
							expr: &actionExpr{
								pos: position{line: 366, col: 25, offset: 14116},
								run: (*parser).callonListParagraphLine102,
								expr: &seqExpr{
									pos: position{line: 366, col: 25, offset: 14116},
									exprs: []interface{}{
										&litMatcher{
											pos:        position{line: 366, col: 25, offset: 14116},
											val:        "+",
											ignoreCase: false,
										},
										&zeroOrMoreExpr{
											pos: position{line: 366, col: 29, offset: 14120},
											expr: &choiceExpr{
												pos: position{line: 895, col: 7, offset: 37107},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 895, col: 7, offset: 37107},
														val:        " ",
														ignoreCase: false,
													},
													&actionExpr{
														pos: position{line: 895, col: 13, offset: 37113},
														run: (*parser).callonListParagraphLine108,
														expr: &litMatcher{
															pos:        position{line: 895, col: 13, offset: 37113},
															val:        "\t",
															ignoreCase: false,
														},
													},
												},
											},
										},
										&choiceExpr{
											pos: position{line: 903, col: 8, offset: 37209},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 899, col: 12, offset: 37169},
													val:        "\r\n",
													ignoreCase: false,
												},
												&charClassMatcher{
													pos:        position{line: 899, col: 21, offset: 37178},
													val:        "[\\r\\n]",
													chars:      []rune{'\r', '\n'},
													ignoreCase: false,
													inverted:   false,
												},
												&notExpr{
													pos: position{line: 901, col: 8, offset: 37198},
													expr: &anyMatcher{
														line: 901, col: 9, offset: 37199,
													},
												},
											},
										},
									},
								},
							},
						},
						&notExpr{
							pos: position{line: 360, col: 5, offset: 13994},
							expr: &actionExpr{
								pos: position{line: 120, col: 21, offset: 5039},
								run: (*parser).callonListParagraphLine116,
								expr: &seqExpr{
									pos: position{line: 120, col: 21, offset: 5039},
									exprs: []interface{}{
										&labeledExpr{
											pos:   position{line: 120, col: 21, offset: 5039},
											label: "attr",
											expr: &choiceExpr{
												pos: position{line: 120, col: 27, offset: 5045},
												alternatives: []interface{}{
													&actionExpr{
														pos: position{line: 129, col: 14, offset: 5496},
														run: (*parser).callonListParagraphLine120,
														expr: &labeledExpr{
															pos:   position{line: 129, col: 14, offset: 5496},
															label: "id",
															expr: &actionExpr{
																pos: position{line: 135, col: 20, offset: 5626},
																run: (*parser).callonListParagraphLine122,
																expr: &seqExpr{
																	pos: position{line: 135, col: 20, offset: 5626},
																	exprs: []interface{}{
																		&litMatcher{
																			pos:        position{line: 135, col: 20, offset: 5626},
																			val:        "[[",
																			ignoreCase: false,
																		},
																		&labeledExpr{
																			pos:   position{line: 135, col: 25, offset: 5631},
																			label: "id",
																			expr: &actionExpr{
																				pos: position{line: 883, col: 7, offset: 36866},
																				run: (*parser).callonListParagraphLine126,
																				expr: &oneOrMoreExpr{
																					pos: position{line: 883, col: 7, offset: 36866},
																					expr: &seqExpr{
																						pos: position{line: 883, col: 8, offset: 36867},
																						exprs: []interface{}{
																							&notExpr{
																								pos: position{line: 883, col: 8, offset: 36867},
																								expr: &choiceExpr{
																									pos: position{line: 899, col: 12, offset: 37169},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 899, col: 12, offset: 37169},
																											val:        "\r\n",
																											ignoreCase: false,
																										},
																										&charClassMatcher{
																											pos:        position{line: 899, col: 21, offset: 37178},
																											val:        "[\\r\\n]",
																											chars:      []rune{'\r', '\n'},
																											ignoreCase: false,
																											inverted:   false,
																										},
																									},
																								},
																							},
																							&notExpr{
																								pos: position{line: 883, col: 17, offset: 36876},
																								expr: &choiceExpr{
																									pos: position{line: 895, col: 7, offset: 37107},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 895, col: 7, offset: 37107},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 895, col: 13, offset: 37113},
																											run: (*parser).callonListParagraphLine136,
																											expr: &litMatcher{
																												pos:        position{line: 895, col: 13, offset: 37113},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																							&notExpr{
																								pos: position{line: 883, col: 21, offset: 36880},
																								expr: &litMatcher{
																									pos:        position{line: 883, col: 22, offset: 36881},
																									val:        "[",
																									ignoreCase: false,
																								},
																							},
																							&notExpr{
																								pos: position{line: 883, col: 26, offset: 36885},
																								expr: &litMatcher{
																									pos:        position{line: 883, col: 27, offset: 36886},
																									val:        "]",
																									ignoreCase: false,
																								},
																							},
																							&notExpr{
																								pos: position{line: 883, col: 31, offset: 36890},
																								expr: &litMatcher{
																									pos:        position{line: 883, col: 32, offset: 36891},
																									val:        "<<",
																									ignoreCase: false,
																								},
																							},
																							&notExpr{
																								pos: position{line: 883, col: 37, offset: 36896},
																								expr: &litMatcher{
																									pos:        position{line: 883, col: 38, offset: 36897},
																									val:        ">>",
																									ignoreCase: false,
																								},
																							},
																							&anyMatcher{
																								line: 883, col: 42, offset: 36901,
																							},
																						},
																					},
																				},
																			},
																		},
																		&litMatcher{
																			pos:        position{line: 135, col: 33, offset: 5639},
																			val:        "]]",
																			ignoreCase: false,
																		},
																	},
																},
															},
														},
													},
													&actionExpr{
														pos: position{line: 131, col: 5, offset: 5542},
														run: (*parser).callonListParagraphLine148,
														expr: &seqExpr{
															pos: position{line: 131, col: 5, offset: 5542},
															exprs: []interface{}{
																&litMatcher{
																	pos:        position{line: 131, col: 5, offset: 5542},
																	val:        "[#",
																	ignoreCase: false,
																},
																&labeledExpr{
																	pos:   position{line: 131, col: 10, offset: 5547},
																	label: "id",
																	expr: &actionExpr{
																		pos: position{line: 883, col: 7, offset: 36866},
																		run: (*parser).callonListParagraphLine152,
																		expr: &oneOrMoreExpr{
																			pos: position{line: 883, col: 7, offset: 36866},
																			expr: &seqExpr{
																				pos: position{line: 883, col: 8, offset: 36867},
																				exprs: []interface{}{
																					&notExpr{
																						pos: position{line: 883, col: 8, offset: 36867},
																						expr: &choiceExpr{
																							pos: position{line: 899, col: 12, offset: 37169},
																							alternatives: []interface{}{
																								&litMatcher{
																									pos:        position{line: 899, col: 12, offset: 37169},
																									val:        "\r\n",
																									ignoreCase: false,
																								},
																								&charClassMatcher{
																									pos:        position{line: 899, col: 21, offset: 37178},
																									val:        "[\\r\\n]",
																									chars:      []rune{'\r', '\n'},
																									ignoreCase: false,
																									inverted:   false,
																								},
																							},
																						},
																					},
																					&notExpr{
																						pos: position{line: 883, col: 17, offset: 36876},
																						expr: &choiceExpr{
																							pos: position{line: 895, col: 7, offset: 37107},
																							alternatives: []interface{}{
																								&litMatcher{
																									pos:        position{line: 895, col: 7, offset: 37107},
																									val:        " ",
																									ignoreCase: false,
																								},
																								&actionExpr{
																									pos: position{line: 895, col: 13, offset: 37113},
																									run: (*parser).callonListParagraphLine162,
																									expr: &litMatcher{
																										pos:        position{line: 895, col: 13, offset: 37113},
																										val:        "\t",
																										ignoreCase: false,
																									},
																								},
																							},
																						},
																					},
																					&notExpr{
																						pos: position{line: 883, col: 21, offset: 36880},
																						expr: &litMatcher{
																							pos:        position{line: 883, col: 22, offset: 36881},
																							val:        "[",
																							ignoreCase: false,
																						},
																					},
																					&notExpr{
																						pos: position{line: 883, col: 26, offset: 36885},
																						expr: &litMatcher{
																							pos:        position{line: 883, col: 27, offset: 36886},
																							val:        "]",
																							ignoreCase: false,
																						},
																					},
																					&notExpr{
																						pos: position{line: 883, col: 31, offset: 36890},
																						expr: &litMatcher{
																							pos:        position{line: 883, col: 32, offset: 36891},
																							val:        "<<",
																							ignoreCase: false,
																						},
																					},
																					&notExpr{
																						pos: position{line: 883, col: 37, offset: 36896},
																						expr: &litMatcher{
																							pos:        position{line: 883, col: 38, offset: 36897},
																							val:        ">>",
																							ignoreCase: false,
																						},
																					},
																					&anyMatcher{
																						line: 883, col: 42, offset: 36901,
																					},
																				},
																			},
																		},
																	},
																},
																&litMatcher{
																	pos:        position{line: 131, col: 18, offset: 5555},
																	val:        "]",
																	ignoreCase: false,
																},
															},
														},
													},
													&actionExpr{
														pos: position{line: 141, col: 17, offset: 5848},
														run: (*parser).callonListParagraphLine174,
														expr: &seqExpr{
															pos: position{line: 141, col: 17, offset: 5848},
															exprs: []interface{}{
																&litMatcher{
																	pos:        position{line: 141, col: 17, offset: 5848},
																	val:        ".",
																	ignoreCase: false,
																},
																&notExpr{
																	pos: position{line: 141, col: 21, offset: 5852},
																	expr: &litMatcher{
																		pos:        position{line: 141, col: 22, offset: 5853},
																		val:        ".",
																		ignoreCase: false,
																	},
																},
																&notExpr{
																	pos: position{line: 141, col: 26, offset: 5857},
																	expr: &choiceExpr{
																		pos: position{line: 895, col: 7, offset: 37107},
																		alternatives: []interface{}{
																			&litMatcher{
																				pos:        position{line: 895, col: 7, offset: 37107},
																				val:        " ",
																				ignoreCase: false,
																			},
																			&actionExpr{
																				pos: position{line: 895, col: 13, offset: 37113},
																				run: (*parser).callonListParagraphLine182,
																				expr: &litMatcher{
																					pos:        position{line: 895, col: 13, offset: 37113},
																					val:        "\t",
																					ignoreCase: false,
																				},
																			},
																		},
																	},
																},
																&labeledExpr{
																	pos:   position{line: 141, col: 30, offset: 5861},
																	label: "title",
																	expr: &oneOrMoreExpr{
																		pos: position{line: 141, col: 36, offset: 5867},
																		expr: &seqExpr{
																			pos: position{line: 141, col: 37, offset: 5868},
																			exprs: []interface{}{
																				&notExpr{
																					pos: position{line: 141, col: 37, offset: 5868},
																					expr: &choiceExpr{
																						pos: position{line: 899, col: 12, offset: 37169},
																						alternatives: []interface{}{
																							&litMatcher{
																								pos:        position{line: 899, col: 12, offset: 37169},
																								val:        "\r\n",
																								ignoreCase: false,
																							},
																							&charClassMatcher{
																								pos:        position{line: 899, col: 21, offset: 37178},
																								val:        "[\\r\\n]",
																								chars:      []rune{'\r', '\n'},
																								ignoreCase: false,
																								inverted:   false,
																							},
																						},
																					},
																				},
																				&anyMatcher{
																					line: 141, col: 46, offset: 5877,
																				},
																			},
																		},
																	},
																},
															},
														},
													},
													&actionExpr{
														pos: position{line: 147, col: 16, offset: 6051},
														run: (*parser).callonListParagraphLine192,
														expr: &seqExpr{
															pos: position{line: 147, col: 16, offset: 6051},
															exprs: []interface{}{
																&litMatcher{
																	pos:        position{line: 147, col: 16, offset: 6051},
																	val:        "[.",
																	ignoreCase: false,
																},
																&notExpr{
																	pos: position{line: 147, col: 21, offset: 6056},
																	expr: &choiceExpr{
																		pos: position{line: 895, col: 7, offset: 37107},
																		alternatives: []interface{}{
																			&litMatcher{
																				pos:        position{line: 895, col: 7, offset: 37107},
																				val:        " ",
																				ignoreCase: false,
																			},
																			&actionExpr{
																				pos: position{line: 895, col: 13, offset: 37113},
																				run: (*parser).callonListParagraphLine198,
																				expr: &litMatcher{
																					pos:        position{line: 895, col: 13, offset: 37113},
																					val:        "\t",
																					ignoreCase: false,
																				},
																			},
																		},
																	},
																},
																&labeledExpr{
																	pos:   position{line: 147, col: 25, offset: 6060},
																	label: "role",
																	expr: &oneOrMoreExpr{
																		pos: position{line: 147, col: 30, offset: 6065},
																		expr: &seqExpr{
																			pos: position{line: 147, col: 31, offset: 6066},
																			exprs: []interface{}{
																				&notExpr{
																					pos: position{line: 147, col: 31, offset: 6066},
																					expr: &choiceExpr{
																						pos: position{line: 899, col: 12, offset: 37169},
																						alternatives: []interface{}{
																							&litMatcher{
																								pos:        position{line: 899, col: 12, offset: 37169},
																								val:        "\r\n",
																								ignoreCase: false,
																							},
																							&charClassMatcher{
																								pos:        position{line: 899, col: 21, offset: 37178},
																								val:        "[\\r\\n]",
																								chars:      []rune{'\r', '\n'},
																								ignoreCase: false,
																								inverted:   false,
																							},
																						},
																					},
																				},
																				&notExpr{
																					pos: position{line: 147, col: 40, offset: 6075},
																					expr: &litMatcher{
																						pos:        position{line: 147, col: 41, offset: 6076},
																						val:        "]",
																						ignoreCase: false,
																					},
																				},
																				&anyMatcher{
																					line: 147, col: 45, offset: 6080,
																				},
																			},
																		},
																	},
																},
																&litMatcher{
																	pos:        position{line: 147, col: 49, offset: 6084},
																	val:        "]",
																	ignoreCase: false,
																},
															},
														},
													},
													&actionExpr{
														pos: position{line: 152, col: 30, offset: 6255},
														run: (*parser).callonListParagraphLine211,
														expr: &seqExpr{
															pos: position{line: 152, col: 30, offset: 6255},
															exprs: []interface{}{
																&litMatcher{
																	pos:        position{line: 152, col: 30, offset: 6255},
																	val:        "[",
																	ignoreCase: false,
																},
																&labeledExpr{
																	pos:   position{line: 152, col: 34, offset: 6259},
																	label: "k",
																	expr: &choiceExpr{
																		pos: position{line: 470, col: 19, offset: 18925},
																		alternatives: []interface{}{
																			&actionExpr{
																				pos: position{line: 470, col: 19, offset: 18925},
																				run: (*parser).callonListParagraphLine216,
																				expr: &litMatcher{
																					pos:        position{line: 470, col: 19, offset: 18925},
																					val:        "TIP",
																					ignoreCase: false,
																				},
																			},
																			&actionExpr{
																				pos: position{line: 472, col: 5, offset: 18963},
																				run: (*parser).callonListParagraphLine218,
																				expr: &litMatcher{
																					pos:        position{line: 472, col: 5, offset: 18963},
																					val:        "NOTE",
																					ignoreCase: false,
																				},
																			},
																			&actionExpr{
																				pos: position{line: 474, col: 5, offset: 19003},
																				run: (*parser).callonListParagraphLine220,
																				expr: &litMatcher{
																					pos:        position{line: 474, col: 5, offset: 19003},
																					val:        "IMPORTANT",
																					ignoreCase: false,
																				},
																			},
																			&actionExpr{
																				pos: position{line: 476, col: 5, offset: 19053},
																				run: (*parser).callonListParagraphLine222,
																				expr: &litMatcher{
																					pos:        position{line: 476, col: 5, offset: 19053},
																					val:        "WARNING",
																					ignoreCase: false,
																				},
																			},
																			&actionExpr{
																				pos: position{line: 478, col: 5, offset: 19099},
																				run: (*parser).callonListParagraphLine224,
																				expr: &litMatcher{
																					pos:        position{line: 478, col: 5, offset: 19099},
																					val:        "CAUTION",
																					ignoreCase: false,
																				},
																			},
																		},
																	},
																},
																&litMatcher{
																	pos:        position{line: 152, col: 53, offset: 6278},
																	val:        "]",
																	ignoreCase: false,
																},
															},
														},
													},
													&actionExpr{
														pos: position{line: 175, col: 21, offset: 7013},
														run: (*parser).callonListParagraphLine227,
														expr: &litMatcher{
															pos:        position{line: 175, col: 21, offset: 7013},
															val:        "[horizontal]",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 157, col: 19, offset: 6439},
														run: (*parser).callonListParagraphLine229,
														expr: &seqExpr{
															pos: position{line: 157, col: 19, offset: 6439},
															exprs: []interface{}{
																&litMatcher{
																	pos:        position{line: 157, col: 19, offset: 6439},
																	val:        "[",
																	ignoreCase: false,
																},
																&notExpr{
																	pos: position{line: 157, col: 23, offset: 6443},
																	expr: &choiceExpr{
																		pos: position{line: 895, col: 7, offset: 37107},
																		alternatives: []interface{}{
																			&litMatcher{
																				pos:        position{line: 895, col: 7, offset: 37107},
																				val:        " ",
																				ignoreCase: false,
																			},
																			&actionExpr{
																				pos: position{line: 895, col: 13, offset: 37113},
																				run: (*parser).callonListParagraphLine235,
																				expr: &litMatcher{
																					pos:        position{line: 895, col: 13, offset: 37113},
																					val:        "\t",
																					ignoreCase: false,
																				},
																			},
																		},
																	},
																},
																&labeledExpr{
																	pos:   position{line: 157, col: 27, offset: 6447},
																	label: "attributes",
																	expr: &zeroOrMoreExpr{
																		pos: position{line: 157, col: 38, offset: 6458},
																		expr: &choiceExpr{
																			pos: position{line: 161, col: 21, offset: 6571},
																			alternatives: []interface{}{
																				&actionExpr{
																					pos: position{line: 161, col: 21, offset: 6571},
																					run: (*parser).callonListParagraphLine240,
																					expr: &seqExpr{
																						pos: position{line: 161, col: 21, offset: 6571},
																						exprs: []interface{}{
																							&labeledExpr{
																								pos:   position{line: 161, col: 21, offset: 6571},
																								label: "key",
																								expr: &actionExpr{
																									pos: position{line: 167, col: 17, offset: 6861},
																									run: (*parser).callonListParagraphLine243,
																									expr: &seqExpr{
																										pos: position{line: 167, col: 17, offset: 6861},
																										exprs: []interface{}{
																											&notExpr{
																												pos: position{line: 167, col: 17, offset: 6861},
																												expr: &actionExpr{
																													pos: position{line: 207, col: 14, offset: 8362},
																													run: (*parser).callonListParagraphLine246,
																													expr: &litMatcher{
																														pos:        position{line: 207, col: 14, offset: 8362},
																														val:        "verse",
																														ignoreCase: false,
																													},
																												},
																											},
																											&labeledExpr{
																												pos:   position{line: 167, col: 28, offset: 6872},
																												label: "key",
																												expr: &oneOrMoreExpr{
																													pos: position{line: 167, col: 32, offset: 6876},
																													expr: &seqExpr{
																														pos: position{line: 167, col: 33, offset: 6877},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 167, col: 33, offset: 6877},
																																expr: &litMatcher{
																																	pos:        position{line: 167, col: 34, offset: 6878},
																																	val:        "=",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 167, col: 38, offset: 6882},
																																expr: &litMatcher{
																																	pos:        position{line: 167, col: 39, offset: 6883},
																																	val:        ",",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 167, col: 43, offset: 6887},
																																expr: &litMatcher{
																																	pos:        position{line: 167, col: 44, offset: 6888},
																																	val:        "]",
																																	ignoreCase: false,
																																},
																															},
																															&anyMatcher{
																																line: 167, col: 48, offset: 6892,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&litMatcher{
																								pos:        position{line: 161, col: 40, offset: 6590},
																								val:        "=",
																								ignoreCase: false,
																							},
																							&labeledExpr{
																								pos:   position{line: 161, col: 44, offset: 6594},
																								label: "value",
																								expr: &actionExpr{
																									pos: position{line: 171, col: 19, offset: 6940},
																									run: (*parser).callonListParagraphLine260,
																									expr: &labeledExpr{
																										pos:   position{line: 171, col: 19, offset: 6940},
																										label: "value",
																										expr: &zeroOrMoreExpr{
																											pos: position{line: 171, col: 25, offset: 6946},
																											expr: &seqExpr{
																												pos: position{line: 171, col: 26, offset: 6947},
																												exprs: []interface{}{
																													&notExpr{
																														pos: position{line: 171, col: 26, offset: 6947},
																														expr: &litMatcher{
																															pos:        position{line: 171, col: 27, offset: 6948},
																															val:        "=",
																															ignoreCase: false,
																														},
																													},
																													&notExpr{
																														pos: position{line: 171, col: 31, offset: 6952},
																														expr: &litMatcher{
																															pos:        position{line: 171, col: 32, offset: 6953},
																															val:        ",",
																															ignoreCase: false,
																														},
																													},
																													&notExpr{
																														pos: position{line: 171, col: 36, offset: 6957},
																														expr: &litMatcher{
																															pos:        position{line: 171, col: 37, offset: 6958},
																															val:        "]",
																															ignoreCase: false,
																														},
																													},
																													&anyMatcher{
																														line: 171, col: 41, offset: 6962,
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&zeroOrOneExpr{
																								pos: position{line: 161, col: 67, offset: 6617},
																								expr: &litMatcher{
																									pos:        position{line: 161, col: 67, offset: 6617},
																									val:        ",",
																									ignoreCase: false,
																								},
																							},
																							&zeroOrMoreExpr{
																								pos: position{line: 161, col: 72, offset: 6622},
																								expr: &choiceExpr{
																									pos: position{line: 895, col: 7, offset: 37107},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 895, col: 7, offset: 37107},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 895, col: 13, offset: 37113},
																											run: (*parser).callonListParagraphLine276,
																											expr: &litMatcher{
																												pos:        position{line: 895, col: 13, offset: 37113},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																				&actionExpr{
																					pos: position{line: 163, col: 5, offset: 6729},
																					run: (*parser).callonListParagraphLine278,
																					expr: &seqExpr{
																						pos: position{line: 163, col: 5, offset: 6729},
																						exprs: []interface{}{
																							&labeledExpr{
																								pos:   position{line: 163, col: 5, offset: 6729},
																								label: "key",
																								expr: &actionExpr{
																									pos: position{line: 167, col: 17, offset: 6861},
																									run: (*parser).callonListParagraphLine281,
																									expr: &seqExpr{
																										pos: position{line: 167, col: 17, offset: 6861},
																										exprs: []interface{}{
																											&notExpr{
																												pos: position{line: 167, col: 17, offset: 6861},
																												expr: &actionExpr{
																													pos: position{line: 207, col: 14, offset: 8362},
																													run: (*parser).callonListParagraphLine284,
																													expr: &litMatcher{
																														pos:        position{line: 207, col: 14, offset: 8362},
																														val:        "verse",
																														ignoreCase: false,
																													},
																												},
																											},
																											&labeledExpr{
																												pos:   position{line: 167, col: 28, offset: 6872},
																												label: "key",
																												expr: &oneOrMoreExpr{
																													pos: position{line: 167, col: 32, offset: 6876},
																													expr: &seqExpr{
																														pos: position{line: 167, col: 33, offset: 6877},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 167, col: 33, offset: 6877},
																																expr: &litMatcher{
																																	pos:        position{line: 167, col: 34, offset: 6878},
																																	val:        "=",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 167, col: 38, offset: 6882},
																																expr: &litMatcher{
																																	pos:        position{line: 167, col: 39, offset: 6883},
																																	val:        ",",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 167, col: 43, offset: 6887},
																																expr: &litMatcher{
																																	pos:        position{line: 167, col: 44, offset: 6888},
																																	val:        "]",
																																	ignoreCase: false,
																																},
																															},
																															&anyMatcher{
																																line: 167, col: 48, offset: 6892,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&zeroOrOneExpr{
																								pos: position{line: 163, col: 24, offset: 6748},
																								expr: &litMatcher{
																									pos:        position{line: 163, col: 24, offset: 6748},
																									val:        ",",
																									ignoreCase: false,
																								},
																							},
																							&zeroOrMoreExpr{
																								pos: position{line: 163, col: 29, offset: 6753},
																								expr: &choiceExpr{
																									pos: position{line: 895, col: 7, offset: 37107},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 895, col: 7, offset: 37107},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 895, col: 13, offset: 37113},
																											run: (*parser).callonListParagraphLine301,
																											expr: &litMatcher{
																												pos:        position{line: 895, col: 13, offset: 37113},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																},
																&litMatcher{
																	pos:        position{line: 157, col: 59, offset: 6479},
																	val:        "]",
																	ignoreCase: false,
																},
															},
														},
													},
												},
											},
										},
										&zeroOrMoreExpr{
											pos: position{line: 120, col: 131, offset: 5149},
											expr: &choiceExpr{
												pos: position{line: 895, col: 7, offset: 37107},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 895, col: 7, offset: 37107},
														val:        " ",
														ignoreCase: false,
													},
													&actionExpr{
														pos: position{line: 895, col: 13, offset: 37113},
														run: (*parser).callonListParagraphLine307,
														expr: &litMatcher{
															pos:        position{line: 895, col: 13, offset: 37113},
															val:        "\t",
															ignoreCase: false,
														},
													},
												},
											},
										},
										&choiceExpr{
											pos: position{line: 903, col: 8, offset: 37209},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 899, col: 12, offset: 37169},
													val:        "\r\n",
													ignoreCase: false,
												},
												&charClassMatcher{
													pos:        position{line: 899, col: 21, offset: 37178},
													val:        "[\\r\\n]",
													chars:      []rune{'\r', '\n'},
													ignoreCase: false,
													inverted:   false,
												},
												&notExpr{
													pos: position{line: 901, col: 8, offset: 37198},
													expr: &anyMatcher{
														line: 901, col: 9, offset: 37199,
													},
												},
											},
										},
									},
								},
							},
						},
						&notExpr{
							pos: position{line: 361, col: 5, offset: 14018},
							expr: &choiceExpr{
								pos: position{line: 684, col: 19, offset: 29648},
								alternatives: []interface{}{
									&litMatcher{
										pos:        position{line: 854, col: 26, offset: 36130},
										val:        "....",
										ignoreCase: false,
									},
									&litMatcher{
										pos:        position{line: 688, col: 25, offset: 29830},
										val:        "```",
										ignoreCase: false,
									},
									&litMatcher{
										pos:        position{line: 695, col: 26, offset: 30162},
										val:        "----",
										ignoreCase: false,
									},
									&litMatcher{
										pos:        position{line: 715, col: 26, offset: 30960},
										val:        "====",
										ignoreCase: false,
									},
									&litMatcher{
										pos:        position{line: 816, col: 26, offset: 34419},
										val:        "////",
										ignoreCase: false,
									},
									&litMatcher{
										pos:        position{line: 737, col: 24, offset: 31681},
										val:        "____",
										ignoreCase: false,
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 362, col: 5, offset: 14040},
							label: "line",
							expr: &ruleRefExpr{
								pos:  position{line: 362, col: 11, offset: 14046},
								name: "InlineElements",
							},
						},
					},
				},
			},
		},
		{
			name: "ContinuedDocumentBlock",
			pos:  position{line: 370, col: 1, offset: 14176},
			expr: &actionExpr{
				pos: position{line: 370, col: 27, offset: 14202},
				run: (*parser).callonContinuedDocumentBlock1,
				expr: &seqExpr{
					pos: position{line: 370, col: 27, offset: 14202},
					exprs: []interface{}{
						&actionExpr{
							pos: position{line: 366, col: 25, offset: 14116},
							run: (*parser).callonContinuedDocumentBlock3,
							expr: &seqExpr{
								pos: position{line: 366, col: 25, offset: 14116},
								exprs: []interface{}{
									&litMatcher{
										pos:        position{line: 366, col: 25, offset: 14116},
										val:        "+",
										ignoreCase: false,
									},
									&zeroOrMoreExpr{
										pos: position{line: 366, col: 29, offset: 14120},
										expr: &choiceExpr{
											pos: position{line: 895, col: 7, offset: 37107},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 895, col: 7, offset: 37107},
													val:        " ",
													ignoreCase: false,
												},
												&actionExpr{
													pos: position{line: 895, col: 13, offset: 37113},
													run: (*parser).callonContinuedDocumentBlock9,
													expr: &litMatcher{
														pos:        position{line: 895, col: 13, offset: 37113},
														val:        "\t",
														ignoreCase: false,
													},
												},
											},
										},
									},
									&choiceExpr{
										pos: position{line: 903, col: 8, offset: 37209},
										alternatives: []interface{}{
											&litMatcher{
												pos:        position{line: 899, col: 12, offset: 37169},
												val:        "\r\n",
												ignoreCase: false,
											},
											&charClassMatcher{
												pos:        position{line: 899, col: 21, offset: 37178},
												val:        "[\\r\\n]",
												chars:      []rune{'\r', '\n'},
												ignoreCase: false,
												inverted:   false,
											},
											&notExpr{
												pos: position{line: 901, col: 8, offset: 37198},
												expr: &anyMatcher{
													line: 901, col: 9, offset: 37199,
												},
											},
										},
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 370, col: 48, offset: 14223},
							label: "element",
							expr: &ruleRefExpr{
								pos:  position{line: 370, col: 56, offset: 14231},
								name: "DocumentBlock",
							},
						},
					},
				},
			},
		},
		{
			name: "OrderedListItem",
			pos:  position{line: 377, col: 1, offset: 14388},
			expr: &actionExpr{
				pos: position{line: 377, col: 20, offset: 14407},
				run: (*parser).callonOrderedListItem1,
				expr: &seqExpr{
					pos: position{line: 377, col: 20, offset: 14407},
					exprs: []interface{}{
						&labeledExpr{
							pos:   position{line: 377, col: 20, offset: 14407},
							label: "attributes",
							expr: &zeroOrMoreExpr{
								pos: position{line: 377, col: 31, offset: 14418},
								expr: &actionExpr{
									pos: position{line: 120, col: 21, offset: 5039},
									run: (*parser).callonOrderedListItem5,
									expr: &seqExpr{
										pos: position{line: 120, col: 21, offset: 5039},
										exprs: []interface{}{
											&labeledExpr{
												pos:   position{line: 120, col: 21, offset: 5039},
												label: "attr",
												expr: &choiceExpr{
													pos: position{line: 120, col: 27, offset: 5045},
													alternatives: []interface{}{
														&actionExpr{
															pos: position{line: 129, col: 14, offset: 5496},
															run: (*parser).callonOrderedListItem9,
															expr: &labeledExpr{
																pos:   position{line: 129, col: 14, offset: 5496},
																label: "id",
																expr: &actionExpr{
																	pos: position{line: 135, col: 20, offset: 5626},
																	run: (*parser).callonOrderedListItem11,
																	expr: &seqExpr{
																		pos: position{line: 135, col: 20, offset: 5626},
																		exprs: []interface{}{
																			&litMatcher{
																				pos:        position{line: 135, col: 20, offset: 5626},
																				val:        "[[",
																				ignoreCase: false,
																			},
																			&labeledExpr{
																				pos:   position{line: 135, col: 25, offset: 5631},
																				label: "id",
																				expr: &actionExpr{
																					pos: position{line: 883, col: 7, offset: 36866},
																					run: (*parser).callonOrderedListItem15,
																					expr: &oneOrMoreExpr{
																						pos: position{line: 883, col: 7, offset: 36866},
																						expr: &seqExpr{
																							pos: position{line: 883, col: 8, offset: 36867},
																							exprs: []interface{}{
																								&notExpr{
																									pos: position{line: 883, col: 8, offset: 36867},
																									expr: &choiceExpr{
																										pos: position{line: 899, col: 12, offset: 37169},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 899, col: 12, offset: 37169},
																												val:        "\r\n",
																												ignoreCase: false,
																											},
																											&charClassMatcher{
																												pos:        position{line: 899, col: 21, offset: 37178},
																												val:        "[\\r\\n]",
																												chars:      []rune{'\r', '\n'},
																												ignoreCase: false,
																												inverted:   false,
																											},
																										},
																									},
																								},
																								&notExpr{
																									pos: position{line: 883, col: 17, offset: 36876},
																									expr: &choiceExpr{
																										pos: position{line: 895, col: 7, offset: 37107},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 895, col: 7, offset: 37107},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 895, col: 13, offset: 37113},
																												run: (*parser).callonOrderedListItem25,
																												expr: &litMatcher{
																													pos:        position{line: 895, col: 13, offset: 37113},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																								&notExpr{
																									pos: position{line: 883, col: 21, offset: 36880},
																									expr: &litMatcher{
																										pos:        position{line: 883, col: 22, offset: 36881},
																										val:        "[",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 883, col: 26, offset: 36885},
																									expr: &litMatcher{
																										pos:        position{line: 883, col: 27, offset: 36886},
																										val:        "]",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 883, col: 31, offset: 36890},
																									expr: &litMatcher{
																										pos:        position{line: 883, col: 32, offset: 36891},
																										val:        "<<",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 883, col: 37, offset: 36896},
																									expr: &litMatcher{
																										pos:        position{line: 883, col: 38, offset: 36897},
																										val:        ">>",
																										ignoreCase: false,
																									},
																								},
																								&anyMatcher{
																									line: 883, col: 42, offset: 36901,
																								},
																							},
																						},
																					},
																				},
																			},
																			&litMatcher{
																				pos:        position{line: 135, col: 33, offset: 5639},
																				val:        "]]",
																				ignoreCase: false,
																			},
																		},
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 131, col: 5, offset: 5542},
															run: (*parser).callonOrderedListItem37,
															expr: &seqExpr{
																pos: position{line: 131, col: 5, offset: 5542},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 131, col: 5, offset: 5542},
																		val:        "[#",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 131, col: 10, offset: 5547},
																		label: "id",
																		expr: &actionExpr{
																			pos: position{line: 883, col: 7, offset: 36866},
																			run: (*parser).callonOrderedListItem41,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 883, col: 7, offset: 36866},
																				expr: &seqExpr{
																					pos: position{line: 883, col: 8, offset: 36867},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 883, col: 8, offset: 36867},
																							expr: &choiceExpr{
																								pos: position{line: 899, col: 12, offset: 37169},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 899, col: 12, offset: 37169},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 899, col: 21, offset: 37178},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 883, col: 17, offset: 36876},
																							expr: &choiceExpr{
																								pos: position{line: 895, col: 7, offset: 37107},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 895, col: 7, offset: 37107},
																										val:        " ",
																										ignoreCase: false,
																									},
																									&actionExpr{
																										pos: position{line: 895, col: 13, offset: 37113},
																										run: (*parser).callonOrderedListItem51,
																										expr: &litMatcher{
																											pos:        position{line: 895, col: 13, offset: 37113},
																											val:        "\t",
																											ignoreCase: false,
																										},
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 883, col: 21, offset: 36880},
																							expr: &litMatcher{
																								pos:        position{line: 883, col: 22, offset: 36881},
																								val:        "[",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 883, col: 26, offset: 36885},
																							expr: &litMatcher{
																								pos:        position{line: 883, col: 27, offset: 36886},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 883, col: 31, offset: 36890},
																							expr: &litMatcher{
																								pos:        position{line: 883, col: 32, offset: 36891},
																								val:        "<<",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 883, col: 37, offset: 36896},
																							expr: &litMatcher{
																								pos:        position{line: 883, col: 38, offset: 36897},
																								val:        ">>",
																								ignoreCase: false,
																							},
																						},
																						&anyMatcher{
																							line: 883, col: 42, offset: 36901,
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 131, col: 18, offset: 5555},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 141, col: 17, offset: 5848},
															run: (*parser).callonOrderedListItem63,
															expr: &seqExpr{
																pos: position{line: 141, col: 17, offset: 5848},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 141, col: 17, offset: 5848},
																		val:        ".",
																		ignoreCase: false,
																	},
																	&notExpr{
																		pos: position{line: 141, col: 21, offset: 5852},
																		expr: &litMatcher{
																			pos:        position{line: 141, col: 22, offset: 5853},
																			val:        ".",
																			ignoreCase: false,
																		},
																	},
																	&notExpr{
																		pos: position{line: 141, col: 26, offset: 5857},
																		expr: &choiceExpr{
																			pos: position{line: 895, col: 7, offset: 37107},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 895, col: 7, offset: 37107},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 895, col: 13, offset: 37113},
																					run: (*parser).callonOrderedListItem71,
																					expr: &litMatcher{
																						pos:        position{line: 895, col: 13, offset: 37113},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 141, col: 30, offset: 5861},
																		label: "title",
																		expr: &oneOrMoreExpr{
																			pos: position{line: 141, col: 36, offset: 5867},
																			expr: &seqExpr{
																				pos: position{line: 141, col: 37, offset: 5868},
																				exprs: []interface{}{
																					&notExpr{
																						pos: position{line: 141, col: 37, offset: 5868},
																						expr: &choiceExpr{
																							pos: position{line: 899, col: 12, offset: 37169},
																							alternatives: []interface{}{
																								&litMatcher{
																									pos:        position{line: 899, col: 12, offset: 37169},
																									val:        "\r\n",
																									ignoreCase: false,
																								},
																								&charClassMatcher{
																									pos:        position{line: 899, col: 21, offset: 37178},
																									val:        "[\\r\\n]",
																									chars:      []rune{'\r', '\n'},
																									ignoreCase: false,
																									inverted:   false,
																								},
																							},
																						},
																					},
																					&anyMatcher{
																						line: 141, col: 46, offset: 5877,
																					},
																				},
																			},
																		},
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 147, col: 16, offset: 6051},
															run: (*parser).callonOrderedListItem81,
															expr: &seqExpr{
																pos: position{line: 147, col: 16, offset: 6051},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 147, col: 16, offset: 6051},
																		val:        "[.",
																		ignoreCase: false,
																	},
																	&notExpr{
																		pos: position{line: 147, col: 21, offset: 6056},
																		expr: &choiceExpr{
																			pos: position{line: 895, col: 7, offset: 37107},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 895, col: 7, offset: 37107},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 895, col: 13, offset: 37113},
																					run: (*parser).callonOrderedListItem87,
																					expr: &litMatcher{
																						pos:        position{line: 895, col: 13, offset: 37113},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 147, col: 25, offset: 6060},
																		label: "role",
																		expr: &oneOrMoreExpr{
																			pos: position{line: 147, col: 30, offset: 6065},
																			expr: &seqExpr{
																				pos: position{line: 147, col: 31, offset: 6066},
																				exprs: []interface{}{
																					&notExpr{
																						pos: position{line: 147, col: 31, offset: 6066},
																						expr: &choiceExpr{
																							pos: position{line: 899, col: 12, offset: 37169},
																							alternatives: []interface{}{
																								&litMatcher{
																									pos:        position{line: 899, col: 12, offset: 37169},
																									val:        "\r\n",
																									ignoreCase: false,
																								},
																								&charClassMatcher{
																									pos:        position{line: 899, col: 21, offset: 37178},
																									val:        "[\\r\\n]",
																									chars:      []rune{'\r', '\n'},
																									ignoreCase: false,
																									inverted:   false,
																								},
																							},
																						},
																					},
																					&notExpr{
																						pos: position{line: 147, col: 40, offset: 6075},
																						expr: &litMatcher{
																							pos:        position{line: 147, col: 41, offset: 6076},
																							val:        "]",
																							ignoreCase: false,
																						},
																					},
																					&anyMatcher{
																						line: 147, col: 45, offset: 6080,
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 147, col: 49, offset: 6084},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 152, col: 30, offset: 6255},
															run: (*parser).callonOrderedListItem100,
															expr: &seqExpr{
																pos: position{line: 152, col: 30, offset: 6255},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 152, col: 30, offset: 6255},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 152, col: 34, offset: 6259},
																		label: "k",
																		expr: &choiceExpr{
																			pos: position{line: 470, col: 19, offset: 18925},
																			alternatives: []interface{}{
																				&actionExpr{
																					pos: position{line: 470, col: 19, offset: 18925},
																					run: (*parser).callonOrderedListItem105,
																					expr: &litMatcher{
																						pos:        position{line: 470, col: 19, offset: 18925},
																						val:        "TIP",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 472, col: 5, offset: 18963},
																					run: (*parser).callonOrderedListItem107,
																					expr: &litMatcher{
																						pos:        position{line: 472, col: 5, offset: 18963},
																						val:        "NOTE",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 474, col: 5, offset: 19003},
																					run: (*parser).callonOrderedListItem109,
																					expr: &litMatcher{
																						pos:        position{line: 474, col: 5, offset: 19003},
																						val:        "IMPORTANT",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 476, col: 5, offset: 19053},
																					run: (*parser).callonOrderedListItem111,
																					expr: &litMatcher{
																						pos:        position{line: 476, col: 5, offset: 19053},
																						val:        "WARNING",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 478, col: 5, offset: 19099},
																					run: (*parser).callonOrderedListItem113,
																					expr: &litMatcher{
																						pos:        position{line: 478, col: 5, offset: 19099},
																						val:        "CAUTION",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 152, col: 53, offset: 6278},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 175, col: 21, offset: 7013},
															run: (*parser).callonOrderedListItem116,
															expr: &litMatcher{
																pos:        position{line: 175, col: 21, offset: 7013},
																val:        "[horizontal]",
																ignoreCase: false,
															},
														},
														&actionExpr{
															pos: position{line: 157, col: 19, offset: 6439},
															run: (*parser).callonOrderedListItem118,
															expr: &seqExpr{
																pos: position{line: 157, col: 19, offset: 6439},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 157, col: 19, offset: 6439},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&notExpr{
																		pos: position{line: 157, col: 23, offset: 6443},
																		expr: &choiceExpr{
																			pos: position{line: 895, col: 7, offset: 37107},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 895, col: 7, offset: 37107},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 895, col: 13, offset: 37113},
																					run: (*parser).callonOrderedListItem124,
																					expr: &litMatcher{
																						pos:        position{line: 895, col: 13, offset: 37113},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 157, col: 27, offset: 6447},
																		label: "attributes",
																		expr: &zeroOrMoreExpr{
																			pos: position{line: 157, col: 38, offset: 6458},
																			expr: &choiceExpr{
																				pos: position{line: 161, col: 21, offset: 6571},
																				alternatives: []interface{}{
																					&actionExpr{
																						pos: position{line: 161, col: 21, offset: 6571},
																						run: (*parser).callonOrderedListItem129,
																						expr: &seqExpr{
																							pos: position{line: 161, col: 21, offset: 6571},
																							exprs: []interface{}{
																								&labeledExpr{
																									pos:   position{line: 161, col: 21, offset: 6571},
																									label: "key",
																									expr: &actionExpr{
																										pos: position{line: 167, col: 17, offset: 6861},
																										run: (*parser).callonOrderedListItem132,
																										expr: &seqExpr{
																											pos: position{line: 167, col: 17, offset: 6861},
																											exprs: []interface{}{
																												&notExpr{
																													pos: position{line: 167, col: 17, offset: 6861},
																													expr: &actionExpr{
																														pos: position{line: 207, col: 14, offset: 8362},
																														run: (*parser).callonOrderedListItem135,
																														expr: &litMatcher{
																															pos:        position{line: 207, col: 14, offset: 8362},
																															val:        "verse",
																															ignoreCase: false,
																														},
																													},
																												},
																												&labeledExpr{
																													pos:   position{line: 167, col: 28, offset: 6872},
																													label: "key",
																													expr: &oneOrMoreExpr{
																														pos: position{line: 167, col: 32, offset: 6876},
																														expr: &seqExpr{
																															pos: position{line: 167, col: 33, offset: 6877},
																															exprs: []interface{}{
																																&notExpr{
																																	pos: position{line: 167, col: 33, offset: 6877},
																																	expr: &litMatcher{
																																		pos:        position{line: 167, col: 34, offset: 6878},
																																		val:        "=",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 167, col: 38, offset: 6882},
																																	expr: &litMatcher{
																																		pos:        position{line: 167, col: 39, offset: 6883},
																																		val:        ",",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 167, col: 43, offset: 6887},
																																	expr: &litMatcher{
																																		pos:        position{line: 167, col: 44, offset: 6888},
																																		val:        "]",
																																		ignoreCase: false,
																																	},
																																},
																																&anyMatcher{
																																	line: 167, col: 48, offset: 6892,
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&litMatcher{
																									pos:        position{line: 161, col: 40, offset: 6590},
																									val:        "=",
																									ignoreCase: false,
																								},
																								&labeledExpr{
																									pos:   position{line: 161, col: 44, offset: 6594},
																									label: "value",
																									expr: &actionExpr{
																										pos: position{line: 171, col: 19, offset: 6940},
																										run: (*parser).callonOrderedListItem149,
																										expr: &labeledExpr{
																											pos:   position{line: 171, col: 19, offset: 6940},
																											label: "value",
																											expr: &zeroOrMoreExpr{
																												pos: position{line: 171, col: 25, offset: 6946},
																												expr: &seqExpr{
																													pos: position{line: 171, col: 26, offset: 6947},
																													exprs: []interface{}{
																														&notExpr{
																															pos: position{line: 171, col: 26, offset: 6947},
																															expr: &litMatcher{
																																pos:        position{line: 171, col: 27, offset: 6948},
																																val:        "=",
																																ignoreCase: false,
																															},
																														},
																														&notExpr{
																															pos: position{line: 171, col: 31, offset: 6952},
																															expr: &litMatcher{
																																pos:        position{line: 171, col: 32, offset: 6953},
																																val:        ",",
																																ignoreCase: false,
																															},
																														},
																														&notExpr{
																															pos: position{line: 171, col: 36, offset: 6957},
																															expr: &litMatcher{
																																pos:        position{line: 171, col: 37, offset: 6958},
																																val:        "]",
																																ignoreCase: false,
																															},
																														},
																														&anyMatcher{
																															line: 171, col: 41, offset: 6962,
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&zeroOrOneExpr{
																									pos: position{line: 161, col: 67, offset: 6617},
																									expr: &litMatcher{
																										pos:        position{line: 161, col: 67, offset: 6617},
																										val:        ",",
																										ignoreCase: false,
																									},
																								},
																								&zeroOrMoreExpr{
																									pos: position{line: 161, col: 72, offset: 6622},
																									expr: &choiceExpr{
																										pos: position{line: 895, col: 7, offset: 37107},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 895, col: 7, offset: 37107},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 895, col: 13, offset: 37113},
																												run: (*parser).callonOrderedListItem165,
																												expr: &litMatcher{
																													pos:        position{line: 895, col: 13, offset: 37113},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																					&actionExpr{
																						pos: position{line: 163, col: 5, offset: 6729},
																						run: (*parser).callonOrderedListItem167,
																						expr: &seqExpr{
																							pos: position{line: 163, col: 5, offset: 6729},
																							exprs: []interface{}{
																								&labeledExpr{
																									pos:   position{line: 163, col: 5, offset: 6729},
																									label: "key",
																									expr: &actionExpr{
																										pos: position{line: 167, col: 17, offset: 6861},
																										run: (*parser).callonOrderedListItem170,
																										expr: &seqExpr{
																											pos: position{line: 167, col: 17, offset: 6861},
																											exprs: []interface{}{
																												&notExpr{
																													pos: position{line: 167, col: 17, offset: 6861},
																													expr: &actionExpr{
																														pos: position{line: 207, col: 14, offset: 8362},
																														run: (*parser).callonOrderedListItem173,
																														expr: &litMatcher{
																															pos:        position{line: 207, col: 14, offset: 8362},
																															val:        "verse",
																															ignoreCase: false,
																														},
																													},
																												},
																												&labeledExpr{
																													pos:   position{line: 167, col: 28, offset: 6872},
																													label: "key",
																													expr: &oneOrMoreExpr{
																														pos: position{line: 167, col: 32, offset: 6876},
																														expr: &seqExpr{
																															pos: position{line: 167, col: 33, offset: 6877},
																															exprs: []interface{}{
																																&notExpr{
																																	pos: position{line: 167, col: 33, offset: 6877},
																																	expr: &litMatcher{
																																		pos:        position{line: 167, col: 34, offset: 6878},
																																		val:        "=",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 167, col: 38, offset: 6882},
																																	expr: &litMatcher{
																																		pos:        position{line: 167, col: 39, offset: 6883},
																																		val:        ",",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 167, col: 43, offset: 6887},
																																	expr: &litMatcher{
																																		pos:        position{line: 167, col: 44, offset: 6888},
																																		val:        "]",
																																		ignoreCase: false,
																																	},
																																},
																																&anyMatcher{
																																	line: 167, col: 48, offset: 6892,
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&zeroOrOneExpr{
																									pos: position{line: 163, col: 24, offset: 6748},
																									expr: &litMatcher{
																										pos:        position{line: 163, col: 24, offset: 6748},
																										val:        ",",
																										ignoreCase: false,
																									},
																								},
																								&zeroOrMoreExpr{
																									pos: position{line: 163, col: 29, offset: 6753},
																									expr: &choiceExpr{
																										pos: position{line: 895, col: 7, offset: 37107},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 895, col: 7, offset: 37107},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 895, col: 13, offset: 37113},
																												run: (*parser).callonOrderedListItem190,
																												expr: &litMatcher{
																													pos:        position{line: 895, col: 13, offset: 37113},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 157, col: 59, offset: 6479},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
													},
												},
											},
											&zeroOrMoreExpr{
												pos: position{line: 120, col: 131, offset: 5149},
												expr: &choiceExpr{
													pos: position{line: 895, col: 7, offset: 37107},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 895, col: 7, offset: 37107},
															val:        " ",
															ignoreCase: false,
														},
														&actionExpr{
															pos: position{line: 895, col: 13, offset: 37113},
															run: (*parser).callonOrderedListItem196,
															expr: &litMatcher{
																pos:        position{line: 895, col: 13, offset: 37113},
																val:        "\t",
																ignoreCase: false,
															},
														},
													},
												},
											},
											&choiceExpr{
												pos: position{line: 903, col: 8, offset: 37209},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 899, col: 12, offset: 37169},
														val:        "\r\n",
														ignoreCase: false,
													},
													&charClassMatcher{
														pos:        position{line: 899, col: 21, offset: 37178},
														val:        "[\\r\\n]",
														chars:      []rune{'\r', '\n'},
														ignoreCase: false,
														inverted:   false,
													},
													&notExpr{
														pos: position{line: 901, col: 8, offset: 37198},
														expr: &anyMatcher{
															line: 901, col: 9, offset: 37199,
														},
													},
												},
											},
										},
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 377, col: 51, offset: 14438},
							label: "prefix",
							expr: &actionExpr{
								pos: position{line: 381, col: 26, offset: 14670},
								run: (*parser).callonOrderedListItem204,
								expr: &seqExpr{
									pos: position{line: 381, col: 26, offset: 14670},
									exprs: []interface{}{
										&zeroOrMoreExpr{
											pos: position{line: 381, col: 26, offset: 14670},
											expr: &choiceExpr{
												pos: position{line: 895, col: 7, offset: 37107},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 895, col: 7, offset: 37107},
														val:        " ",
														ignoreCase: false,
													},
													&actionExpr{
														pos: position{line: 895, col: 13, offset: 37113},
														run: (*parser).callonOrderedListItem209,
														expr: &litMatcher{
															pos:        position{line: 895, col: 13, offset: 37113},
															val:        "\t",
															ignoreCase: false,
														},
													},
												},
											},
										},
										&labeledExpr{
											pos:   position{line: 381, col: 30, offset: 14674},
											label: "prefix",
											expr: &choiceExpr{
												pos: position{line: 383, col: 5, offset: 14729},
												alternatives: []interface{}{
													&actionExpr{
														pos: position{line: 383, col: 5, offset: 14729},
														run: (*parser).callonOrderedListItem213,
														expr: &litMatcher{
															pos:        position{line: 383, col: 5, offset: 14729},
															val:        ".....",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 385, col: 9, offset: 14842},
														run: (*parser).callonOrderedListItem215,
														expr: &litMatcher{
															pos:        position{line: 385, col: 9, offset: 14842},
															val:        "....",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 387, col: 9, offset: 14953},
														run: (*parser).callonOrderedListItem217,
														expr: &litMatcher{
															pos:        position{line: 387, col: 9, offset: 14953},
															val:        "...",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 389, col: 9, offset: 15062},
														run: (*parser).callonOrderedListItem219,
														expr: &litMatcher{
															pos:        position{line: 389, col: 9, offset: 15062},
															val:        "..",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 391, col: 9, offset: 15169},
														run: (*parser).callonOrderedListItem221,
														expr: &litMatcher{
															pos:        position{line: 391, col: 9, offset: 15169},
															val:        ".",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 394, col: 9, offset: 15296},
														run: (*parser).callonOrderedListItem223,
														expr: &seqExpr{
															pos: position{line: 394, col: 9, offset: 15296},
															exprs: []interface{}{
																&oneOrMoreExpr{
																	pos: position{line: 394, col: 9, offset: 15296},
																	expr: &charClassMatcher{
																		pos:        position{line: 394, col: 10, offset: 15297},
																		val:        "[0-9]",
																		ranges:     []rune{'0', '9'},
																		ignoreCase: false,
																		inverted:   false,
																	},
																},
																&litMatcher{
																	pos:        position{line: 394, col: 18, offset: 15305},
																	val:        ".",
																	ignoreCase: false,
																},
															},
														},
													},
													&actionExpr{
														pos: position{line: 396, col: 9, offset: 15408},
														run: (*parser).callonOrderedListItem228,
														expr: &seqExpr{
															pos: position{line: 396, col: 9, offset: 15408},
															exprs: []interface{}{
																&oneOrMoreExpr{
																	pos: position{line: 396, col: 9, offset: 15408},
																	expr: &charClassMatcher{
																		pos:        position{line: 396, col: 10, offset: 15409},
																		val:        "[a-z]",
																		ranges:     []rune{'a', 'z'},
																		ignoreCase: false,
																		inverted:   false,
																	},
																},
																&litMatcher{
																	pos:        position{line: 396, col: 18, offset: 15417},
																	val:        ".",
																	ignoreCase: false,
																},
															},
														},
													},
													&actionExpr{
														pos: position{line: 398, col: 9, offset: 15523},
														run: (*parser).callonOrderedListItem233,
														expr: &seqExpr{
															pos: position{line: 398, col: 9, offset: 15523},
															exprs: []interface{}{
																&oneOrMoreExpr{
																	pos: position{line: 398, col: 9, offset: 15523},
																	expr: &charClassMatcher{
																		pos:        position{line: 398, col: 10, offset: 15524},
																		val:        "[A-Z]",
																		ranges:     []rune{'A', 'Z'},
																		ignoreCase: false,
																		inverted:   false,
																	},
																},
																&litMatcher{
																	pos:        position{line: 398, col: 18, offset: 15532},
																	val:        ".",
																	ignoreCase: false,
																},
															},
														},
													},
													&actionExpr{
														pos: position{line: 400, col: 9, offset: 15638},
														run: (*parser).callonOrderedListItem238,
														expr: &seqExpr{
															pos: position{line: 400, col: 9, offset: 15638},
															exprs: []interface{}{
																&oneOrMoreExpr{
																	pos: position{line: 400, col: 9, offset: 15638},
																	expr: &charClassMatcher{
																		pos:        position{line: 400, col: 10, offset: 15639},
																		val:        "[a-z]",
																		ranges:     []rune{'a', 'z'},
																		ignoreCase: false,
																		inverted:   false,
																	},
																},
																&litMatcher{
																	pos:        position{line: 400, col: 18, offset: 15647},
																	val:        ")",
																	ignoreCase: false,
																},
															},
														},
													},
													&actionExpr{
														pos: position{line: 402, col: 9, offset: 15753},
														run: (*parser).callonOrderedListItem243,
														expr: &seqExpr{
															pos: position{line: 402, col: 9, offset: 15753},
															exprs: []interface{}{
																&oneOrMoreExpr{
																	pos: position{line: 402, col: 9, offset: 15753},
																	expr: &charClassMatcher{
																		pos:        position{line: 402, col: 10, offset: 15754},
																		val:        "[A-Z]",
																		ranges:     []rune{'A', 'Z'},
																		ignoreCase: false,
																		inverted:   false,
																	},
																},
																&litMatcher{
																	pos:        position{line: 402, col: 18, offset: 15762},
																	val:        ")",
																	ignoreCase: false,
																},
															},
														},
													},
												},
											},
										},
										&oneOrMoreExpr{
											pos: position{line: 404, col: 8, offset: 15867},
											expr: &choiceExpr{
												pos: position{line: 895, col: 7, offset: 37107},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 895, col: 7, offset: 37107},
														val:        " ",
														ignoreCase: false,
													},
													&actionExpr{
														pos: position{line: 895, col: 13, offset: 37113},
														run: (*parser).callonOrderedListItem251,
														expr: &litMatcher{
															pos:        position{line: 895, col: 13, offset: 37113},
															val:        "\t",
															ignoreCase: false,
														},
													},
												},
											},
										},
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 377, col: 82, offset: 14469},
							label: "content",
							expr: &ruleRefExpr{
								pos:  position{line: 377, col: 91, offset: 14478},
								name: "OrderedListItemContent",
							},
						},
						&zeroOrMoreExpr{
							pos: position{line: 377, col: 115, offset: 14502},
							expr: &actionExpr{
								pos: position{line: 864, col: 14, offset: 36495},
								run: (*parser).callonOrderedListItem256,
								expr: &seqExpr{
									pos: position{line: 864, col: 14, offset: 36495},
									exprs: []interface{}{
										&notExpr{
											pos: position{line: 864, col: 14, offset: 36495},
											expr: &notExpr{
												pos: position{line: 901, col: 8, offset: 37198},
												expr: &anyMatcher{
													line: 901, col: 9, offset: 37199,
												},
											},
										},
										&zeroOrMoreExpr{
											pos: position{line: 864, col: 19, offset: 36500},
											expr: &choiceExpr{
												pos: position{line: 895, col: 7, offset: 37107},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 895, col: 7, offset: 37107},
														val:        " ",
														ignoreCase: false,
													},
													&actionExpr{
														pos: position{line: 895, col: 13, offset: 37113},
														run: (*parser).callonOrderedListItem264,
														expr: &litMatcher{
															pos:        position{line: 895, col: 13, offset: 37113},
															val:        "\t",
															ignoreCase: false,
														},
													},
												},
											},
										},
										&choiceExpr{
											pos: position{line: 903, col: 8, offset: 37209},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 899, col: 12, offset: 37169},
													val:        "\r\n",
													ignoreCase: false,
												},
												&charClassMatcher{
													pos:        position{line: 899, col: 21, offset: 37178},
													val:        "[\\r\\n]",
													chars:      []rune{'\r', '\n'},
													ignoreCase: false,
													inverted:   false,
												},
												&notExpr{
													pos: position{line: 901, col: 8, offset: 37198},
													expr: &anyMatcher{
														line: 901, col: 9, offset: 37199,
													},
												},
											},
										},
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "OrderedListItemContent",
			pos:  position{line: 408, col: 1, offset: 15907},
			expr: &actionExpr{
				pos: position{line: 408, col: 27, offset: 15933},
				run: (*parser).callonOrderedListItemContent1,
				expr: &labeledExpr{
					pos:   position{line: 408, col: 27, offset: 15933},
					label: "elements",
					expr: &seqExpr{
						pos: position{line: 408, col: 37, offset: 15943},
						exprs: []interface{}{
							&oneOrMoreExpr{
								pos: position{line: 408, col: 37, offset: 15943},
								expr: &ruleRefExpr{
									pos:  position{line: 408, col: 37, offset: 15943},
									name: "ListParagraph",
								},
							},
							&zeroOrMoreExpr{
								pos: position{line: 408, col: 52, offset: 15958},
								expr: &ruleRefExpr{
									pos:  position{line: 408, col: 52, offset: 15958},
									name: "ContinuedDocumentBlock",
								},
							},
						},
					},
				},
			},
		},
		{
			name: "UnorderedListItem",
			pos:  position{line: 415, col: 1, offset: 16285},
			expr: &actionExpr{
				pos: position{line: 415, col: 22, offset: 16306},
				run: (*parser).callonUnorderedListItem1,
				expr: &seqExpr{
					pos: position{line: 415, col: 22, offset: 16306},
					exprs: []interface{}{
						&labeledExpr{
							pos:   position{line: 415, col: 22, offset: 16306},
							label: "prefix",
							expr: &actionExpr{
								pos: position{line: 420, col: 5, offset: 16525},
								run: (*parser).callonUnorderedListItem4,
								expr: &seqExpr{
									pos: position{line: 420, col: 5, offset: 16525},
									exprs: []interface{}{
										&zeroOrMoreExpr{
											pos: position{line: 420, col: 5, offset: 16525},
											expr: &choiceExpr{
												pos: position{line: 895, col: 7, offset: 37107},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 895, col: 7, offset: 37107},
														val:        " ",
														ignoreCase: false,
													},
													&actionExpr{
														pos: position{line: 895, col: 13, offset: 37113},
														run: (*parser).callonUnorderedListItem9,
														expr: &litMatcher{
															pos:        position{line: 895, col: 13, offset: 37113},
															val:        "\t",
															ignoreCase: false,
														},
													},
												},
											},
										},
										&labeledExpr{
											pos:   position{line: 420, col: 9, offset: 16529},
											label: "prefix",
											expr: &choiceExpr{
												pos: position{line: 421, col: 9, offset: 16546},
												alternatives: []interface{}{
													&actionExpr{
														pos: position{line: 421, col: 9, offset: 16546},
														run: (*parser).callonUnorderedListItem13,
														expr: &litMatcher{
															pos:        position{line: 421, col: 9, offset: 16546},
															val:        "*****",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 424, col: 11, offset: 16715},
														run: (*parser).callonUnorderedListItem15,
														expr: &litMatcher{
															pos:        position{line: 424, col: 11, offset: 16715},
															val:        "****",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 427, col: 11, offset: 16884},
														run: (*parser).callonUnorderedListItem17,
														expr: &litMatcher{
															pos:        position{line: 427, col: 11, offset: 16884},
															val:        "***",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 430, col: 11, offset: 17053},
														run: (*parser).callonUnorderedListItem19,
														expr: &litMatcher{
															pos:        position{line: 430, col: 11, offset: 17053},
															val:        "**",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 433, col: 11, offset: 17219},
														run: (*parser).callonUnorderedListItem21,
														expr: &litMatcher{
															pos:        position{line: 433, col: 11, offset: 17219},
															val:        "*",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 436, col: 11, offset: 17383},
														run: (*parser).callonUnorderedListItem23,
														expr: &litMatcher{
															pos:        position{line: 436, col: 11, offset: 17383},
															val:        "-",
															ignoreCase: false,
														},
													},
												},
											},
										},
										&oneOrMoreExpr{
											pos: position{line: 438, col: 12, offset: 17530},
											expr: &choiceExpr{
												pos: position{line: 895, col: 7, offset: 37107},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 895, col: 7, offset: 37107},
														val:        " ",
														ignoreCase: false,
													},
													&actionExpr{
														pos: position{line: 895, col: 13, offset: 37113},
														run: (*parser).callonUnorderedListItem28,
														expr: &litMatcher{
															pos:        position{line: 895, col: 13, offset: 37113},
															val:        "\t",
															ignoreCase: false,
														},
													},
												},
											},
										},
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 415, col: 55, offset: 16339},
							label: "content",
							expr: &ruleRefExpr{
								pos:  position{line: 415, col: 64, offset: 16348},
								name: "UnorderedListItemContent",
							},
						},
						&zeroOrMoreExpr{
							pos: position{line: 415, col: 90, offset: 16374},
							expr: &actionExpr{
								pos: position{line: 864, col: 14, offset: 36495},
								run: (*parser).callonUnorderedListItem33,
								expr: &seqExpr{
									pos: position{line: 864, col: 14, offset: 36495},
									exprs: []interface{}{
										&notExpr{
											pos: position{line: 864, col: 14, offset: 36495},
											expr: &notExpr{
												pos: position{line: 901, col: 8, offset: 37198},
												expr: &anyMatcher{
													line: 901, col: 9, offset: 37199,
												},
											},
										},
										&zeroOrMoreExpr{
											pos: position{line: 864, col: 19, offset: 36500},
											expr: &choiceExpr{
												pos: position{line: 895, col: 7, offset: 37107},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 895, col: 7, offset: 37107},
														val:        " ",
														ignoreCase: false,
													},
													&actionExpr{
														pos: position{line: 895, col: 13, offset: 37113},
														run: (*parser).callonUnorderedListItem41,
														expr: &litMatcher{
															pos:        position{line: 895, col: 13, offset: 37113},
															val:        "\t",
															ignoreCase: false,
														},
													},
												},
											},
										},
										&choiceExpr{
											pos: position{line: 903, col: 8, offset: 37209},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 899, col: 12, offset: 37169},
													val:        "\r\n",
													ignoreCase: false,
												},
												&charClassMatcher{
													pos:        position{line: 899, col: 21, offset: 37178},
													val:        "[\\r\\n]",
													chars:      []rune{'\r', '\n'},
													ignoreCase: false,
													inverted:   false,
												},
												&notExpr{
													pos: position{line: 901, col: 8, offset: 37198},
													expr: &anyMatcher{
														line: 901, col: 9, offset: 37199,
													},
												},
											},
										},
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "UnorderedListItemContent",
			pos:  position{line: 442, col: 1, offset: 17579},
			expr: &actionExpr{
				pos: position{line: 442, col: 29, offset: 17607},
				run: (*parser).callonUnorderedListItemContent1,
				expr: &labeledExpr{
					pos:   position{line: 442, col: 29, offset: 17607},
					label: "elements",
					expr: &seqExpr{
						pos: position{line: 442, col: 39, offset: 17617},
						exprs: []interface{}{
							&oneOrMoreExpr{
								pos: position{line: 442, col: 39, offset: 17617},
								expr: &ruleRefExpr{
									pos:  position{line: 442, col: 39, offset: 17617},
									name: "ListParagraph",
								},
							},
							&zeroOrMoreExpr{
								pos: position{line: 442, col: 54, offset: 17632},
								expr: &ruleRefExpr{
									pos:  position{line: 442, col: 54, offset: 17632},
									name: "ContinuedDocumentBlock",
								},
							},
						},
					},
				},
			},
		},
		{
			name: "LabeledListItem",
			pos:  position{line: 449, col: 1, offset: 17957},
			expr: &choiceExpr{
				pos: position{line: 450, col: 5, offset: 17981},
				alternatives: []interface{}{
					&actionExpr{
						pos: position{line: 450, col: 5, offset: 17981},
						run: (*parser).callonLabeledListItem2,
						expr: &seqExpr{
							pos: position{line: 450, col: 5, offset: 17981},
							exprs: []interface{}{
								&labeledExpr{
									pos:   position{line: 450, col: 5, offset: 17981},
									label: "term",
									expr: &actionExpr{
										pos: position{line: 456, col: 24, offset: 18380},
										run: (*parser).callonLabeledListItem5,
										expr: &labeledExpr{
											pos:   position{line: 456, col: 24, offset: 18380},
											label: "term",
											expr: &zeroOrMoreExpr{
												pos: position{line: 456, col: 29, offset: 18385},
												expr: &seqExpr{
													pos: position{line: 456, col: 30, offset: 18386},
													exprs: []interface{}{
														&notExpr{
															pos: position{line: 456, col: 30, offset: 18386},
															expr: &choiceExpr{
																pos: position{line: 899, col: 12, offset: 37169},
																alternatives: []interface{}{
																	&litMatcher{
																		pos:        position{line: 899, col: 12, offset: 37169},
																		val:        "\r\n",
																		ignoreCase: false,
																	},
																	&charClassMatcher{
																		pos:        position{line: 899, col: 21, offset: 37178},
																		val:        "[\\r\\n]",
																		chars:      []rune{'\r', '\n'},
																		ignoreCase: false,
																		inverted:   false,
																	},
																},
															},
														},
														&notExpr{
															pos: position{line: 456, col: 39, offset: 18395},
															expr: &litMatcher{
																pos:        position{line: 456, col: 40, offset: 18396},
																val:        "::",
																ignoreCase: false,
															},
														},
														&anyMatcher{
															line: 456, col: 45, offset: 18401,
														},
													},
												},
											},
										},
									},
								},
								&litMatcher{
									pos:        position{line: 461, col: 30, offset: 18521},
									val:        "::",
									ignoreCase: false,
								},
								&oneOrMoreExpr{
									pos: position{line: 461, col: 35, offset: 18526},
									expr: &choiceExpr{
										pos: position{line: 461, col: 36, offset: 18527},
										alternatives: []interface{}{
											&litMatcher{
												pos:        position{line: 895, col: 7, offset: 37107},
												val:        " ",
												ignoreCase: false,
											},
											&actionExpr{
												pos: position{line: 895, col: 13, offset: 37113},
												run: (*parser).callonLabeledListItem20,
												expr: &litMatcher{
													pos:        position{line: 895, col: 13, offset: 37113},
													val:        "\t",
													ignoreCase: false,
												},
											},
											&litMatcher{
												pos:        position{line: 899, col: 12, offset: 37169},
												val:        "\r\n",
												ignoreCase: false,
											},
											&charClassMatcher{
												pos:        position{line: 899, col: 21, offset: 37178},
												val:        "[\\r\\n]",
												chars:      []rune{'\r', '\n'},
												ignoreCase: false,
												inverted:   false,
											},
										},
									},
								},
								&labeledExpr{
									pos:   position{line: 450, col: 57, offset: 18033},
									label: "description",
									expr: &ruleRefExpr{
										pos:  position{line: 450, col: 70, offset: 18046},
										name: "LabeledListItemDescription",
									},
								},
							},
						},
					},
					&actionExpr{
						pos: position{line: 452, col: 10, offset: 18176},
						run: (*parser).callonLabeledListItem26,
						expr: &seqExpr{
							pos: position{line: 452, col: 10, offset: 18176},
							exprs: []interface{}{
								&labeledExpr{
									pos:   position{line: 452, col: 10, offset: 18176},
									label: "term",
									expr: &actionExpr{
										pos: position{line: 456, col: 24, offset: 18380},
										run: (*parser).callonLabeledListItem29,
										expr: &labeledExpr{
											pos:   position{line: 456, col: 24, offset: 18380},
											label: "term",
											expr: &zeroOrMoreExpr{
												pos: position{line: 456, col: 29, offset: 18385},
												expr: &seqExpr{
													pos: position{line: 456, col: 30, offset: 18386},
													exprs: []interface{}{
														&notExpr{
															pos: position{line: 456, col: 30, offset: 18386},
															expr: &choiceExpr{
																pos: position{line: 899, col: 12, offset: 37169},
																alternatives: []interface{}{
																	&litMatcher{
																		pos:        position{line: 899, col: 12, offset: 37169},
																		val:        "\r\n",
																		ignoreCase: false,
																	},
																	&charClassMatcher{
																		pos:        position{line: 899, col: 21, offset: 37178},
																		val:        "[\\r\\n]",
																		chars:      []rune{'\r', '\n'},
																		ignoreCase: false,
																		inverted:   false,
																	},
																},
															},
														},
														&notExpr{
															pos: position{line: 456, col: 39, offset: 18395},
															expr: &litMatcher{
																pos:        position{line: 456, col: 40, offset: 18396},
																val:        "::",
																ignoreCase: false,
															},
														},
														&anyMatcher{
															line: 456, col: 45, offset: 18401,
														},
													},
												},
											},
										},
									},
								},
								&litMatcher{
									pos:        position{line: 452, col: 37, offset: 18203},
									val:        "::",
									ignoreCase: false,
								},
								&zeroOrMoreExpr{
									pos: position{line: 452, col: 42, offset: 18208},
									expr: &choiceExpr{
										pos: position{line: 895, col: 7, offset: 37107},
										alternatives: []interface{}{
											&litMatcher{
												pos:        position{line: 895, col: 7, offset: 37107},
												val:        " ",
												ignoreCase: false,
											},
											&actionExpr{
												pos: position{line: 895, col: 13, offset: 37113},
												run: (*parser).callonLabeledListItem44,
												expr: &litMatcher{
													pos:        position{line: 895, col: 13, offset: 37113},
													val:        "\t",
													ignoreCase: false,
												},
											},
										},
									},
								},
								&choiceExpr{
									pos: position{line: 903, col: 8, offset: 37209},
									alternatives: []interface{}{
										&litMatcher{
											pos:        position{line: 899, col: 12, offset: 37169},
											val:        "\r\n",
											ignoreCase: false,
										},
										&charClassMatcher{
											pos:        position{line: 899, col: 21, offset: 37178},
											val:        "[\\r\\n]",
											chars:      []rune{'\r', '\n'},
											ignoreCase: false,
											inverted:   false,
										},
										&notExpr{
											pos: position{line: 901, col: 8, offset: 37198},
											expr: &anyMatcher{
												line: 901, col: 9, offset: 37199,
											},
										},
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "LabeledListItemDescription",
			pos:  position{line: 463, col: 1, offset: 18543},
			expr: &actionExpr{
				pos: position{line: 463, col: 31, offset: 18573},
				run: (*parser).callonLabeledListItemDescription1,
				expr: &labeledExpr{
					pos:   position{line: 463, col: 31, offset: 18573},
					label: "elements",
					expr: &zeroOrMoreExpr{
						pos: position{line: 463, col: 40, offset: 18582},
						expr: &choiceExpr{
							pos: position{line: 463, col: 41, offset: 18583},
							alternatives: []interface{}{
								&ruleRefExpr{
									pos:  position{line: 463, col: 41, offset: 18583},
									name: "ListParagraph",
								},
								&ruleRefExpr{
									pos:  position{line: 463, col: 57, offset: 18599},
									name: "ContinuedDocumentBlock",
								},
							},
						},
					},
				},
			},
		},
		{
			name: "Paragraph",
			pos:  position{line: 487, col: 1, offset: 19402},
			expr: &choiceExpr{
				pos: position{line: 489, col: 5, offset: 19449},
				alternatives: []interface{}{
					&actionExpr{
						pos: position{line: 489, col: 5, offset: 19449},
						run: (*parser).callonParagraph2,
						expr: &seqExpr{
							pos: position{line: 489, col: 5, offset: 19449},
							exprs: []interface{}{
								&labeledExpr{
									pos:   position{line: 489, col: 5, offset: 19449},
									label: "attributes",
									expr: &zeroOrMoreExpr{
										pos: position{line: 489, col: 16, offset: 19460},
										expr: &choiceExpr{
											pos: position{line: 497, col: 23, offset: 19938},
											alternatives: []interface{}{
												&actionExpr{
													pos: position{line: 125, col: 24, offset: 5347},
													run: (*parser).callonParagraph7,
													expr: &seqExpr{
														pos: position{line: 125, col: 24, offset: 5347},
														exprs: []interface{}{
															&labeledExpr{
																pos:   position{line: 125, col: 24, offset: 5347},
																label: "attr",
																expr: &choiceExpr{
																	pos: position{line: 125, col: 30, offset: 5353},
																	alternatives: []interface{}{
																		&actionExpr{
																			pos: position{line: 179, col: 20, offset: 7116},
																			run: (*parser).callonParagraph11,
																			expr: &seqExpr{
																				pos: position{line: 179, col: 20, offset: 7116},
																				exprs: []interface{}{
																					&litMatcher{
																						pos:        position{line: 179, col: 20, offset: 7116},
																						val:        "[",
																						ignoreCase: false,
																					},
																					&labeledExpr{
																						pos:   position{line: 179, col: 24, offset: 7120},
																						label: "kind",
																						expr: &actionExpr{
																							pos: position{line: 191, col: 14, offset: 7626},
																							run: (*parser).callonParagraph15,
																							expr: &seqExpr{
																								pos: position{line: 191, col: 14, offset: 7626},
																								exprs: []interface{}{
																									&notExpr{
																										pos: position{line: 191, col: 14, offset: 7626},
																										expr: &actionExpr{
																											pos: position{line: 207, col: 14, offset: 8362},
																											run: (*parser).callonParagraph18,
																											expr: &litMatcher{
																												pos:        position{line: 207, col: 14, offset: 8362},
																												val:        "verse",
																												ignoreCase: false,
																											},
																										},
																									},
																									&zeroOrMoreExpr{
																										pos: position{line: 191, col: 25, offset: 7637},
																										expr: &seqExpr{
																											pos: position{line: 191, col: 26, offset: 7638},
																											exprs: []interface{}{
																												&notExpr{
																													pos: position{line: 191, col: 26, offset: 7638},
																													expr: &choiceExpr{
																														pos: position{line: 903, col: 8, offset: 37209},
																														alternatives: []interface{}{
																															&litMatcher{
																																pos:        position{line: 899, col: 12, offset: 37169},
																																val:        "\r\n",
																																ignoreCase: false,
																															},
																															&charClassMatcher{
																																pos:        position{line: 899, col: 21, offset: 37178},
																																val:        "[\\r\\n]",
																																chars:      []rune{'\r', '\n'},
																																ignoreCase: false,
																																inverted:   false,
																															},
																															&notExpr{
																																pos: position{line: 901, col: 8, offset: 37198},
																																expr: &anyMatcher{
																																	line: 901, col: 9, offset: 37199,
																																},
																															},
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 191, col: 31, offset: 7643},
																													expr: &choiceExpr{
																														pos: position{line: 895, col: 7, offset: 37107},
																														alternatives: []interface{}{
																															&litMatcher{
																																pos:        position{line: 895, col: 7, offset: 37107},
																																val:        " ",
																																ignoreCase: false,
																															},
																															&actionExpr{
																																pos: position{line: 895, col: 13, offset: 37113},
																																run: (*parser).callonParagraph31,
																																expr: &litMatcher{
																																	pos:        position{line: 895, col: 13, offset: 37113},
																																	val:        "\t",
																																	ignoreCase: false,
																																},
																															},
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 191, col: 35, offset: 7647},
																													expr: &litMatcher{
																														pos:        position{line: 191, col: 36, offset: 7648},
																														val:        ",",
																														ignoreCase: false,
																													},
																												},
																												&notExpr{
																													pos: position{line: 191, col: 40, offset: 7652},
																													expr: &litMatcher{
																														pos:        position{line: 191, col: 41, offset: 7653},
																														val:        "]",
																														ignoreCase: false,
																													},
																												},
																												&notExpr{
																													pos: position{line: 191, col: 45, offset: 7657},
																													expr: &litMatcher{
																														pos:        position{line: 191, col: 46, offset: 7658},
																														val:        "#",
																														ignoreCase: false,
																													},
																												},
																												&notExpr{
																													pos: position{line: 191, col: 50, offset: 7662},
																													expr: &litMatcher{
																														pos:        position{line: 191, col: 51, offset: 7663},
																														val:        "=",
																														ignoreCase: false,
																													},
																												},
																												&notExpr{
																													pos: position{line: 191, col: 55, offset: 7667},
																													expr: &choiceExpr{
																														pos: position{line: 470, col: 19, offset: 18925},
																														alternatives: []interface{}{
																															&actionExpr{
																																pos: position{line: 470, col: 19, offset: 18925},
																																run: (*parser).callonParagraph43,
																																expr: &litMatcher{
																																	pos:        position{line: 470, col: 19, offset: 18925},
																																	val:        "TIP",
																																	ignoreCase: false,
																																},
																															},
																															&actionExpr{
																																pos: position{line: 472, col: 5, offset: 18963},
																																run: (*parser).callonParagraph45,
																																expr: &litMatcher{
																																	pos:        position{line: 472, col: 5, offset: 18963},
																																	val:        "NOTE",
																																	ignoreCase: false,
																																},
																															},
																															&actionExpr{
																																pos: position{line: 474, col: 5, offset: 19003},
																																run: (*parser).callonParagraph47,
																																expr: &litMatcher{
																																	pos:        position{line: 474, col: 5, offset: 19003},
																																	val:        "IMPORTANT",
																																	ignoreCase: false,
																																},
																															},
																															&actionExpr{
																																pos: position{line: 476, col: 5, offset: 19053},
																																run: (*parser).callonParagraph49,
																																expr: &litMatcher{
																																	pos:        position{line: 476, col: 5, offset: 19053},
																																	val:        "WARNING",
																																	ignoreCase: false,
																																},
																															},
																															&actionExpr{
																																pos: position{line: 478, col: 5, offset: 19099},
																																run: (*parser).callonParagraph51,
																																expr: &litMatcher{
																																	pos:        position{line: 478, col: 5, offset: 19099},
																																	val:        "CAUTION",
																																	ignoreCase: false,
																																},
																															},
																														},
																													},
																												},
																												&anyMatcher{
																													line: 191, col: 71, offset: 7683,
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																					&zeroOrMoreExpr{
																						pos: position{line: 179, col: 41, offset: 7137},
																						expr: &choiceExpr{
																							pos: position{line: 895, col: 7, offset: 37107},
																							alternatives: []interface{}{
																								&litMatcher{
																									pos:        position{line: 895, col: 7, offset: 37107},
																									val:        " ",
																									ignoreCase: false,
																								},
																								&actionExpr{
																									pos: position{line: 895, col: 13, offset: 37113},
																									run: (*parser).callonParagraph57,
																									expr: &litMatcher{
																										pos:        position{line: 895, col: 13, offset: 37113},
																										val:        "\t",
																										ignoreCase: false,
																									},
																								},
																							},
																						},
																					},
																					&litMatcher{
																						pos:        position{line: 179, col: 45, offset: 7141},
																						val:        ",",
																						ignoreCase: false,
																					},
																					&labeledExpr{
																						pos:   position{line: 179, col: 49, offset: 7145},
																						label: "author",
																						expr: &actionExpr{
																							pos: position{line: 211, col: 16, offset: 8421},
																							run: (*parser).callonParagraph61,
																							expr: &zeroOrMoreExpr{
																								pos: position{line: 211, col: 16, offset: 8421},
																								expr: &seqExpr{
																									pos: position{line: 211, col: 17, offset: 8422},
																									exprs: []interface{}{
																										&notExpr{
																											pos: position{line: 211, col: 17, offset: 8422},
																											expr: &choiceExpr{
																												pos: position{line: 903, col: 8, offset: 37209},
																												alternatives: []interface{}{
																													&litMatcher{
																														pos:        position{line: 899, col: 12, offset: 37169},
																														val:        "\r\n",
																														ignoreCase: false,
																													},
																													&charClassMatcher{
																														pos:        position{line: 899, col: 21, offset: 37178},
																														val:        "[\\r\\n]",
																														chars:      []rune{'\r', '\n'},
																														ignoreCase: false,
																														inverted:   false,
																													},
																													&notExpr{
																														pos: position{line: 901, col: 8, offset: 37198},
																														expr: &anyMatcher{
																															line: 901, col: 9, offset: 37199,
																														},
																													},
																												},
																											},
																										},
																										&notExpr{
																											pos: position{line: 211, col: 22, offset: 8427},
																											expr: &litMatcher{
																												pos:        position{line: 211, col: 23, offset: 8428},
																												val:        ",",
																												ignoreCase: false,
																											},
																										},
																										&notExpr{
																											pos: position{line: 211, col: 27, offset: 8432},
																											expr: &litMatcher{
																												pos:        position{line: 211, col: 28, offset: 8433},
																												val:        "]",
																												ignoreCase: false,
																											},
																										},
																										&anyMatcher{
																											line: 211, col: 32, offset: 8437,
																										},
																									},
																								},
																							},
																						},
																					},
																					&litMatcher{
																						pos:        position{line: 179, col: 70, offset: 7166},
																						val:        ",",
																						ignoreCase: false,
																					},
																					&labeledExpr{
																						pos:   position{line: 179, col: 74, offset: 7170},
																						label: "title",
																						expr: &actionExpr{
																							pos: position{line: 215, col: 15, offset: 8491},
																							run: (*parser).callonParagraph77,
																							expr: &zeroOrMoreExpr{
																								pos: position{line: 215, col: 15, offset: 8491},
																								expr: &seqExpr{
																									pos: position{line: 215, col: 16, offset: 8492},
																									exprs: []interface{}{
																										&notExpr{
																											pos: position{line: 215, col: 16, offset: 8492},
																											expr: &choiceExpr{
																												pos: position{line: 903, col: 8, offset: 37209},
																												alternatives: []interface{}{
																													&litMatcher{
																														pos:        position{line: 899, col: 12, offset: 37169},
																														val:        "\r\n",
																														ignoreCase: false,
																													},
																													&charClassMatcher{
																														pos:        position{line: 899, col: 21, offset: 37178},
																														val:        "[\\r\\n]",
																														chars:      []rune{'\r', '\n'},
																														ignoreCase: false,
																														inverted:   false,
																													},
																													&notExpr{
																														pos: position{line: 901, col: 8, offset: 37198},
																														expr: &anyMatcher{
																															line: 901, col: 9, offset: 37199,
																														},
																													},
																												},
																											},
																										},
																										&notExpr{
																											pos: position{line: 215, col: 21, offset: 8497},
																											expr: &litMatcher{
																												pos:        position{line: 215, col: 22, offset: 8498},
																												val:        ",",
																												ignoreCase: false,
																											},
																										},
																										&notExpr{
																											pos: position{line: 215, col: 26, offset: 8502},
																											expr: &litMatcher{
																												pos:        position{line: 215, col: 27, offset: 8503},
																												val:        "]",
																												ignoreCase: false,
																											},
																										},
																										&anyMatcher{
																											line: 215, col: 31, offset: 8507,
																										},
																									},
																								},
																							},
																						},
																					},
																					&litMatcher{
																						pos:        position{line: 179, col: 93, offset: 7189},
																						val:        "]",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																		&actionExpr{
																			pos: position{line: 183, col: 5, offset: 7332},
																			run: (*parser).callonParagraph92,
																			expr: &seqExpr{
																				pos: position{line: 183, col: 5, offset: 7332},
																				exprs: []interface{}{
																					&litMatcher{
																						pos:        position{line: 183, col: 5, offset: 7332},
																						val:        "[",
																						ignoreCase: false,
																					},
																					&labeledExpr{
																						pos:   position{line: 183, col: 9, offset: 7336},
																						label: "kind",
																						expr: &actionExpr{
																							pos: position{line: 191, col: 14, offset: 7626},
																							run: (*parser).callonParagraph96,
																							expr: &seqExpr{
																								pos: position{line: 191, col: 14, offset: 7626},
																								exprs: []interface{}{
																									&notExpr{
																										pos: position{line: 191, col: 14, offset: 7626},
																										expr: &actionExpr{
																											pos: position{line: 207, col: 14, offset: 8362},
																											run: (*parser).callonParagraph99,
																											expr: &litMatcher{
																												pos:        position{line: 207, col: 14, offset: 8362},
																												val:        "verse",
																												ignoreCase: false,
																											},
																										},
																									},
																									&zeroOrMoreExpr{
																										pos: position{line: 191, col: 25, offset: 7637},
																										expr: &seqExpr{
																											pos: position{line: 191, col: 26, offset: 7638},
																											exprs: []interface{}{
																												&notExpr{
																													pos: position{line: 191, col: 26, offset: 7638},
																													expr: &choiceExpr{
																														pos: position{line: 903, col: 8, offset: 37209},
																														alternatives: []interface{}{
																															&litMatcher{
																																pos:        position{line: 899, col: 12, offset: 37169},
																																val:        "\r\n",
																																ignoreCase: false,
																															},
																															&charClassMatcher{
																																pos:        position{line: 899, col: 21, offset: 37178},
																																val:        "[\\r\\n]",
																																chars:      []rune{'\r', '\n'},
																																ignoreCase: false,
																																inverted:   false,
																															},
																															&notExpr{
																																pos: position{line: 901, col: 8, offset: 37198},
																																expr: &anyMatcher{
																																	line: 901, col: 9, offset: 37199,
																																},
																															},
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 191, col: 31, offset: 7643},
																													expr: &choiceExpr{
																														pos: position{line: 895, col: 7, offset: 37107},
																														alternatives: []interface{}{
																															&litMatcher{
																																pos:        position{line: 895, col: 7, offset: 37107},
																																val:        " ",
																																ignoreCase: false,
																															},
																															&actionExpr{
																																pos: position{line: 895, col: 13, offset: 37113},
																																run: (*parser).callonParagraph112,
																																expr: &litMatcher{
																																	pos:        position{line: 895, col: 13, offset: 37113},
																																	val:        "\t",
																																	ignoreCase: false,
																																},
																															},
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 191, col: 35, offset: 7647},
																													expr: &litMatcher{
																														pos:        position{line: 191, col: 36, offset: 7648},
																														val:        ",",
																														ignoreCase: false,
																													},
																												},
																												&notExpr{
																													pos: position{line: 191, col: 40, offset: 7652},
																													expr: &litMatcher{
																														pos:        position{line: 191, col: 41, offset: 7653},
																														val:        "]",
																														ignoreCase: false,
																													},
																												},
																												&notExpr{
																													pos: position{line: 191, col: 45, offset: 7657},
																													expr: &litMatcher{
																														pos:        position{line: 191, col: 46, offset: 7658},
																														val:        "#",
																														ignoreCase: false,
																													},
																												},
																												&notExpr{
																													pos: position{line: 191, col: 50, offset: 7662},
																													expr: &litMatcher{
																														pos:        position{line: 191, col: 51, offset: 7663},
																														val:        "=",
																														ignoreCase: false,
																													},
																												},
																												&notExpr{
																													pos: position{line: 191, col: 55, offset: 7667},
																													expr: &choiceExpr{
																														pos: position{line: 470, col: 19, offset: 18925},
																														alternatives: []interface{}{
																															&actionExpr{
																																pos: position{line: 470, col: 19, offset: 18925},
																																run: (*parser).callonParagraph124,
																																expr: &litMatcher{
																																	pos:        position{line: 470, col: 19, offset: 18925},
																																	val:        "TIP",
																																	ignoreCase: false,
																																},
																															},
																															&actionExpr{
																																pos: position{line: 472, col: 5, offset: 18963},
																																run: (*parser).callonParagraph126,
																																expr: &litMatcher{
																																	pos:        position{line: 472, col: 5, offset: 18963},
																																	val:        "NOTE",
																																	ignoreCase: false,
																																},
																															},
																															&actionExpr{
																																pos: position{line: 474, col: 5, offset: 19003},
																																run: (*parser).callonParagraph128,
																																expr: &litMatcher{
																																	pos:        position{line: 474, col: 5, offset: 19003},
																																	val:        "IMPORTANT",
																																	ignoreCase: false,
																																},
																															},
																															&actionExpr{
																																pos: position{line: 476, col: 5, offset: 19053},
																																run: (*parser).callonParagraph130,
																																expr: &litMatcher{
																																	pos:        position{line: 476, col: 5, offset: 19053},
																																	val:        "WARNING",
																																	ignoreCase: false,
																																},
																															},
																															&actionExpr{
																																pos: position{line: 478, col: 5, offset: 19099},
																																run: (*parser).callonParagraph132,
																																expr: &litMatcher{
																																	pos:        position{line: 478, col: 5, offset: 19099},
																																	val:        "CAUTION",
																																	ignoreCase: false,
																																},
																															},
																														},
																													},
																												},
																												&anyMatcher{
																													line: 191, col: 71, offset: 7683,
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																					&zeroOrMoreExpr{
																						pos: position{line: 183, col: 26, offset: 7353},
																						expr: &choiceExpr{
																							pos: position{line: 895, col: 7, offset: 37107},
																							alternatives: []interface{}{
																								&litMatcher{
																									pos:        position{line: 895, col: 7, offset: 37107},
																									val:        " ",
																									ignoreCase: false,
																								},
																								&actionExpr{
																									pos: position{line: 895, col: 13, offset: 37113},
																									run: (*parser).callonParagraph138,
																									expr: &litMatcher{
																										pos:        position{line: 895, col: 13, offset: 37113},
																										val:        "\t",
																										ignoreCase: false,
																									},
																								},
																							},
																						},
																					},
																					&litMatcher{
																						pos:        position{line: 183, col: 30, offset: 7357},
																						val:        ",",
																						ignoreCase: false,
																					},
																					&labeledExpr{
																						pos:   position{line: 183, col: 34, offset: 7361},
																						label: "author",
																						expr: &actionExpr{
																							pos: position{line: 211, col: 16, offset: 8421},
																							run: (*parser).callonParagraph142,
																							expr: &zeroOrMoreExpr{
																								pos: position{line: 211, col: 16, offset: 8421},
																								expr: &seqExpr{
																									pos: position{line: 211, col: 17, offset: 8422},
																									exprs: []interface{}{
																										&notExpr{
																											pos: position{line: 211, col: 17, offset: 8422},
																											expr: &choiceExpr{
																												pos: position{line: 903, col: 8, offset: 37209},
																												alternatives: []interface{}{
																													&litMatcher{
																														pos:        position{line: 899, col: 12, offset: 37169},
																														val:        "\r\n",
																														ignoreCase: false,
																													},
																													&charClassMatcher{
																														pos:        position{line: 899, col: 21, offset: 37178},
																														val:        "[\\r\\n]",
																														chars:      []rune{'\r', '\n'},
																														ignoreCase: false,
																														inverted:   false,
																													},
																													&notExpr{
																														pos: position{line: 901, col: 8, offset: 37198},
																														expr: &anyMatcher{
																															line: 901, col: 9, offset: 37199,
																														},
																													},
																												},
																											},
																										},
																										&notExpr{
																											pos: position{line: 211, col: 22, offset: 8427},
																											expr: &litMatcher{
																												pos:        position{line: 211, col: 23, offset: 8428},
																												val:        ",",
																												ignoreCase: false,
																											},
																										},
																										&notExpr{
																											pos: position{line: 211, col: 27, offset: 8432},
																											expr: &litMatcher{
																												pos:        position{line: 211, col: 28, offset: 8433},
																												val:        "]",
																												ignoreCase: false,
																											},
																										},
																										&anyMatcher{
																											line: 211, col: 32, offset: 8437,
																										},
																									},
																								},
																							},
																						},
																					},
																					&litMatcher{
																						pos:        position{line: 183, col: 55, offset: 7382},
																						val:        "]",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																		&actionExpr{
																			pos: position{line: 187, col: 5, offset: 7513},
																			run: (*parser).callonParagraph157,
																			expr: &seqExpr{
																				pos: position{line: 187, col: 5, offset: 7513},
																				exprs: []interface{}{
																					&litMatcher{
																						pos:        position{line: 187, col: 5, offset: 7513},
																						val:        "[",
																						ignoreCase: false,
																					},
																					&labeledExpr{
																						pos:   position{line: 187, col: 9, offset: 7517},
																						label: "kind",
																						expr: &actionExpr{
																							pos: position{line: 191, col: 14, offset: 7626},
																							run: (*parser).callonParagraph161,
																							expr: &seqExpr{
																								pos: position{line: 191, col: 14, offset: 7626},
																								exprs: []interface{}{
																									&notExpr{
																										pos: position{line: 191, col: 14, offset: 7626},
																										expr: &actionExpr{
																											pos: position{line: 207, col: 14, offset: 8362},
																											run: (*parser).callonParagraph164,
																											expr: &litMatcher{
																												pos:        position{line: 207, col: 14, offset: 8362},
																												val:        "verse",
																												ignoreCase: false,
																											},
																										},
																									},
																									&zeroOrMoreExpr{
																										pos: position{line: 191, col: 25, offset: 7637},
																										expr: &seqExpr{
																											pos: position{line: 191, col: 26, offset: 7638},
																											exprs: []interface{}{
																												&notExpr{
																													pos: position{line: 191, col: 26, offset: 7638},
																													expr: &choiceExpr{
																														pos: position{line: 903, col: 8, offset: 37209},
																														alternatives: []interface{}{
																															&litMatcher{
																																pos:        position{line: 899, col: 12, offset: 37169},
																																val:        "\r\n",
																																ignoreCase: false,
																															},
																															&charClassMatcher{
																																pos:        position{line: 899, col: 21, offset: 37178},
																																val:        "[\\r\\n]",
																																chars:      []rune{'\r', '\n'},
																																ignoreCase: false,
																																inverted:   false,
																															},
																															&notExpr{
																																pos: position{line: 901, col: 8, offset: 37198},
																																expr: &anyMatcher{
																																	line: 901, col: 9, offset: 37199,
																																},
																															},
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 191, col: 31, offset: 7643},
																													expr: &choiceExpr{
																														pos: position{line: 895, col: 7, offset: 37107},
																														alternatives: []interface{}{
																															&litMatcher{
																																pos:        position{line: 895, col: 7, offset: 37107},
																																val:        " ",
																																ignoreCase: false,
																															},
																															&actionExpr{
																																pos: position{line: 895, col: 13, offset: 37113},
																																run: (*parser).callonParagraph177,
																																expr: &litMatcher{
																																	pos:        position{line: 895, col: 13, offset: 37113},
																																	val:        "\t",
																																	ignoreCase: false,
																																},
																															},
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 191, col: 35, offset: 7647},
																													expr: &litMatcher{
																														pos:        position{line: 191, col: 36, offset: 7648},
																														val:        ",",
																														ignoreCase: false,
																													},
																												},
																												&notExpr{
																													pos: position{line: 191, col: 40, offset: 7652},
																													expr: &litMatcher{
																														pos:        position{line: 191, col: 41, offset: 7653},
																														val:        "]",
																														ignoreCase: false,
																													},
																												},
																												&notExpr{
																													pos: position{line: 191, col: 45, offset: 7657},
																													expr: &litMatcher{
																														pos:        position{line: 191, col: 46, offset: 7658},
																														val:        "#",
																														ignoreCase: false,
																													},
																												},
																												&notExpr{
																													pos: position{line: 191, col: 50, offset: 7662},
																													expr: &litMatcher{
																														pos:        position{line: 191, col: 51, offset: 7663},
																														val:        "=",
																														ignoreCase: false,
																													},
																												},
																												&notExpr{
																													pos: position{line: 191, col: 55, offset: 7667},
																													expr: &choiceExpr{
																														pos: position{line: 470, col: 19, offset: 18925},
																														alternatives: []interface{}{
																															&actionExpr{
																																pos: position{line: 470, col: 19, offset: 18925},
																																run: (*parser).callonParagraph189,
																																expr: &litMatcher{
																																	pos:        position{line: 470, col: 19, offset: 18925},
																																	val:        "TIP",
																																	ignoreCase: false,
																																},
																															},
																															&actionExpr{
																																pos: position{line: 472, col: 5, offset: 18963},
																																run: (*parser).callonParagraph191,
																																expr: &litMatcher{
																																	pos:        position{line: 472, col: 5, offset: 18963},
																																	val:        "NOTE",
																																	ignoreCase: false,
																																},
																															},
																															&actionExpr{
																																pos: position{line: 474, col: 5, offset: 19003},
																																run: (*parser).callonParagraph193,
																																expr: &litMatcher{
																																	pos:        position{line: 474, col: 5, offset: 19003},
																																	val:        "IMPORTANT",
																																	ignoreCase: false,
																																},
																															},
																															&actionExpr{
																																pos: position{line: 476, col: 5, offset: 19053},
																																run: (*parser).callonParagraph195,
																																expr: &litMatcher{
																																	pos:        position{line: 476, col: 5, offset: 19053},
																																	val:        "WARNING",
																																	ignoreCase: false,
																																},
																															},
																															&actionExpr{
																																pos: position{line: 478, col: 5, offset: 19099},
																																run: (*parser).callonParagraph197,
																																expr: &litMatcher{
																																	pos:        position{line: 478, col: 5, offset: 19099},
																																	val:        "CAUTION",
																																	ignoreCase: false,
																																},
																															},
																														},
																													},
																												},
																												&anyMatcher{
																													line: 191, col: 71, offset: 7683,
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																					&zeroOrMoreExpr{
																						pos: position{line: 187, col: 26, offset: 7534},
																						expr: &choiceExpr{
																							pos: position{line: 895, col: 7, offset: 37107},
																							alternatives: []interface{}{
																								&litMatcher{
																									pos:        position{line: 895, col: 7, offset: 37107},
																									val:        " ",
																									ignoreCase: false,
																								},
																								&actionExpr{
																									pos: position{line: 895, col: 13, offset: 37113},
																									run: (*parser).callonParagraph203,
																									expr: &litMatcher{
																										pos:        position{line: 895, col: 13, offset: 37113},
																										val:        "\t",
																										ignoreCase: false,
																									},
																								},
																							},
																						},
																					},
																					&litMatcher{
																						pos:        position{line: 187, col: 30, offset: 7538},
																						val:        "]",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																		&actionExpr{
																			pos: position{line: 195, col: 20, offset: 7852},
																			run: (*parser).callonParagraph206,
																			expr: &seqExpr{
																				pos: position{line: 195, col: 20, offset: 7852},
																				exprs: []interface{}{
																					&litMatcher{
																						pos:        position{line: 195, col: 20, offset: 7852},
																						val:        "[",
																						ignoreCase: false,
																					},
																					&labeledExpr{
																						pos:   position{line: 195, col: 24, offset: 7856},
																						label: "kind",
																						expr: &actionExpr{
																							pos: position{line: 207, col: 14, offset: 8362},
																							run: (*parser).callonParagraph210,
																							expr: &litMatcher{
																								pos:        position{line: 207, col: 14, offset: 8362},
																								val:        "verse",
																								ignoreCase: false,
																							},
																						},
																					},
																					&zeroOrMoreExpr{
																						pos: position{line: 195, col: 41, offset: 7873},
																						expr: &choiceExpr{
																							pos: position{line: 895, col: 7, offset: 37107},
																							alternatives: []interface{}{
																								&litMatcher{
																									pos:        position{line: 895, col: 7, offset: 37107},
																									val:        " ",
																									ignoreCase: false,
																								},
																								&actionExpr{
																									pos: position{line: 895, col: 13, offset: 37113},
																									run: (*parser).callonParagraph215,
																									expr: &litMatcher{
																										pos:        position{line: 895, col: 13, offset: 37113},
																										val:        "\t",
																										ignoreCase: false,
																									},
																								},
																							},
																						},
																					},
																					&litMatcher{
																						pos:        position{line: 195, col: 45, offset: 7877},
																						val:        ",",
																						ignoreCase: false,
																					},
																					&labeledExpr{
																						pos:   position{line: 195, col: 49, offset: 7881},
																						label: "author",
																						expr: &actionExpr{
																							pos: position{line: 211, col: 16, offset: 8421},
																							run: (*parser).callonParagraph219,
																							expr: &zeroOrMoreExpr{
																								pos: position{line: 211, col: 16, offset: 8421},
																								expr: &seqExpr{
																									pos: position{line: 211, col: 17, offset: 8422},
																									exprs: []interface{}{
																										&notExpr{
																											pos: position{line: 211, col: 17, offset: 8422},
																											expr: &choiceExpr{
																												pos: position{line: 903, col: 8, offset: 37209},
																												alternatives: []interface{}{
																													&litMatcher{
																														pos:        position{line: 899, col: 12, offset: 37169},
																														val:        "\r\n",
																														ignoreCase: false,
																													},
																													&charClassMatcher{
																														pos:        position{line: 899, col: 21, offset: 37178},
																														val:        "[\\r\\n]",
																														chars:      []rune{'\r', '\n'},
																														ignoreCase: false,
																														inverted:   false,
																													},
																													&notExpr{
																														pos: position{line: 901, col: 8, offset: 37198},
																														expr: &anyMatcher{
																															line: 901, col: 9, offset: 37199,
																														},
																													},
																												},
																											},
																										},
																										&notExpr{
																											pos: position{line: 211, col: 22, offset: 8427},
																											expr: &litMatcher{
																												pos:        position{line: 211, col: 23, offset: 8428},
																												val:        ",",
																												ignoreCase: false,
																											},
																										},
																										&notExpr{
																											pos: position{line: 211, col: 27, offset: 8432},
																											expr: &litMatcher{
																												pos:        position{line: 211, col: 28, offset: 8433},
																												val:        "]",
																												ignoreCase: false,
																											},
																										},
																										&anyMatcher{
																											line: 211, col: 32, offset: 8437,
																										},
																									},
																								},
																							},
																						},
																					},
																					&litMatcher{
																						pos:        position{line: 195, col: 70, offset: 7902},
																						val:        ",",
																						ignoreCase: false,
																					},
																					&labeledExpr{
																						pos:   position{line: 195, col: 74, offset: 7906},
																						label: "title",
																						expr: &actionExpr{
																							pos: position{line: 215, col: 15, offset: 8491},
																							run: (*parser).callonParagraph235,
																							expr: &zeroOrMoreExpr{
																								pos: position{line: 215, col: 15, offset: 8491},
																								expr: &seqExpr{
																									pos: position{line: 215, col: 16, offset: 8492},
																									exprs: []interface{}{
																										&notExpr{
																											pos: position{line: 215, col: 16, offset: 8492},
																											expr: &choiceExpr{
																												pos: position{line: 903, col: 8, offset: 37209},
																												alternatives: []interface{}{
																													&litMatcher{
																														pos:        position{line: 899, col: 12, offset: 37169},
																														val:        "\r\n",
																														ignoreCase: false,
																													},
																													&charClassMatcher{
																														pos:        position{line: 899, col: 21, offset: 37178},
																														val:        "[\\r\\n]",
																														chars:      []rune{'\r', '\n'},
																														ignoreCase: false,
																														inverted:   false,
																													},
																													&notExpr{
																														pos: position{line: 901, col: 8, offset: 37198},
																														expr: &anyMatcher{
																															line: 901, col: 9, offset: 37199,
																														},
																													},
																												},
																											},
																										},
																										&notExpr{
																											pos: position{line: 215, col: 21, offset: 8497},
																											expr: &litMatcher{
																												pos:        position{line: 215, col: 22, offset: 8498},
																												val:        ",",
																												ignoreCase: false,
																											},
																										},
																										&notExpr{
																											pos: position{line: 215, col: 26, offset: 8502},
																											expr: &litMatcher{
																												pos:        position{line: 215, col: 27, offset: 8503},
																												val:        "]",
																												ignoreCase: false,
																											},
																										},
																										&anyMatcher{
																											line: 215, col: 31, offset: 8507,
																										},
																									},
																								},
																							},
																						},
																					},
																					&litMatcher{
																						pos:        position{line: 195, col: 93, offset: 7925},
																						val:        "]",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																		&actionExpr{
																			pos: position{line: 199, col: 5, offset: 8068},
																			run: (*parser).callonParagraph250,
																			expr: &seqExpr{
																				pos: position{line: 199, col: 5, offset: 8068},
																				exprs: []interface{}{
																					&litMatcher{
																						pos:        position{line: 199, col: 5, offset: 8068},
																						val:        "[",
																						ignoreCase: false,
																					},
																					&labeledExpr{
																						pos:   position{line: 199, col: 9, offset: 8072},
																						label: "kind",
																						expr: &actionExpr{
																							pos: position{line: 207, col: 14, offset: 8362},
																							run: (*parser).callonParagraph254,
																							expr: &litMatcher{
																								pos:        position{line: 207, col: 14, offset: 8362},
																								val:        "verse",
																								ignoreCase: false,
																							},
																						},
																					},
																					&zeroOrMoreExpr{
																						pos: position{line: 199, col: 26, offset: 8089},
																						expr: &choiceExpr{
																							pos: position{line: 895, col: 7, offset: 37107},
																							alternatives: []interface{}{
																								&litMatcher{
																									pos:        position{line: 895, col: 7, offset: 37107},
																									val:        " ",
																									ignoreCase: false,
																								},
																								&actionExpr{
																									pos: position{line: 895, col: 13, offset: 37113},
																									run: (*parser).callonParagraph259,
																									expr: &litMatcher{
																										pos:        position{line: 895, col: 13, offset: 37113},
																										val:        "\t",
																										ignoreCase: false,
																									},
																								},
																							},
																						},
																					},
																					&litMatcher{
																						pos:        position{line: 199, col: 30, offset: 8093},
																						val:        ",",
																						ignoreCase: false,
																					},
																					&labeledExpr{
																						pos:   position{line: 199, col: 34, offset: 8097},
																						label: "author",
																						expr: &actionExpr{
																							pos: position{line: 211, col: 16, offset: 8421},
																							run: (*parser).callonParagraph263,
																							expr: &zeroOrMoreExpr{
																								pos: position{line: 211, col: 16, offset: 8421},
																								expr: &seqExpr{
																									pos: position{line: 211, col: 17, offset: 8422},
																									exprs: []interface{}{
																										&notExpr{
																											pos: position{line: 211, col: 17, offset: 8422},
																											expr: &choiceExpr{
																												pos: position{line: 903, col: 8, offset: 37209},
																												alternatives: []interface{}{
																													&litMatcher{
																														pos:        position{line: 899, col: 12, offset: 37169},
																														val:        "\r\n",
																														ignoreCase: false,
																													},
																													&charClassMatcher{
																														pos:        position{line: 899, col: 21, offset: 37178},
																														val:        "[\\r\\n]",
																														chars:      []rune{'\r', '\n'},
																														ignoreCase: false,
																														inverted:   false,
																													},
																													&notExpr{
																														pos: position{line: 901, col: 8, offset: 37198},
																														expr: &anyMatcher{
																															line: 901, col: 9, offset: 37199,
																														},
																													},
																												},
																											},
																										},
																										&notExpr{
																											pos: position{line: 211, col: 22, offset: 8427},
																											expr: &litMatcher{
																												pos:        position{line: 211, col: 23, offset: 8428},
																												val:        ",",
																												ignoreCase: false,
																											},
																										},
																										&notExpr{
																											pos: position{line: 211, col: 27, offset: 8432},
																											expr: &litMatcher{
																												pos:        position{line: 211, col: 28, offset: 8433},
																												val:        "]",
																												ignoreCase: false,
																											},
																										},
																										&anyMatcher{
																											line: 211, col: 32, offset: 8437,
																										},
																									},
																								},
																							},
																						},
																					},
																					&litMatcher{
																						pos:        position{line: 199, col: 55, offset: 8118},
																						val:        "]",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																		&actionExpr{
																			pos: position{line: 203, col: 5, offset: 8249},
																			run: (*parser).callonParagraph278,
																			expr: &seqExpr{
																				pos: position{line: 203, col: 5, offset: 8249},
																				exprs: []interface{}{
																					&litMatcher{
																						pos:        position{line: 203, col: 5, offset: 8249},
																						val:        "[",
																						ignoreCase: false,
																					},
																					&labeledExpr{
																						pos:   position{line: 203, col: 9, offset: 8253},
																						label: "kind",
																						expr: &actionExpr{
																							pos: position{line: 207, col: 14, offset: 8362},
																							run: (*parser).callonParagraph282,
																							expr: &litMatcher{
																								pos:        position{line: 207, col: 14, offset: 8362},
																								val:        "verse",
																								ignoreCase: false,
																							},
																						},
																					},
																					&zeroOrMoreExpr{
																						pos: position{line: 203, col: 26, offset: 8270},
																						expr: &choiceExpr{
																							pos: position{line: 895, col: 7, offset: 37107},
																							alternatives: []interface{}{
																								&litMatcher{
																									pos:        position{line: 895, col: 7, offset: 37107},
																									val:        " ",
																									ignoreCase: false,
																								},
																								&actionExpr{
																									pos: position{line: 895, col: 13, offset: 37113},
																									run: (*parser).callonParagraph287,
																									expr: &litMatcher{
																										pos:        position{line: 895, col: 13, offset: 37113},
																										val:        "\t",
																										ignoreCase: false,
																									},
																								},
																							},
																						},
																					},
																					&litMatcher{
																						pos:        position{line: 203, col: 30, offset: 8274},
																						val:        "]",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																},
															},
															&zeroOrMoreExpr{
																pos: position{line: 125, col: 65, offset: 5388},
																expr: &choiceExpr{
																	pos: position{line: 895, col: 7, offset: 37107},
																	alternatives: []interface{}{
																		&litMatcher{
																			pos:        position{line: 895, col: 7, offset: 37107},
																			val:        " ",
																			ignoreCase: false,
																		},
																		&actionExpr{
																			pos: position{line: 895, col: 13, offset: 37113},
																			run: (*parser).callonParagraph293,
																			expr: &litMatcher{
																				pos:        position{line: 895, col: 13, offset: 37113},
																				val:        "\t",
																				ignoreCase: false,
																			},
																		},
																	},
																},
															},
															&choiceExpr{
																pos: position{line: 903, col: 8, offset: 37209},
																alternatives: []interface{}{
																	&litMatcher{
																		pos:        position{line: 899, col: 12, offset: 37169},
																		val:        "\r\n",
																		ignoreCase: false,
																	},
																	&charClassMatcher{
																		pos:        position{line: 899, col: 21, offset: 37178},
																		val:        "[\\r\\n]",
																		chars:      []rune{'\r', '\n'},
																		ignoreCase: false,
																		inverted:   false,
																	},
																	&notExpr{
																		pos: position{line: 901, col: 8, offset: 37198},
																		expr: &anyMatcher{
																			line: 901, col: 9, offset: 37199,
																		},
																	},
																},
															},
														},
													},
												},
												&actionExpr{
													pos: position{line: 120, col: 21, offset: 5039},
													run: (*parser).callonParagraph300,
													expr: &seqExpr{
														pos: position{line: 120, col: 21, offset: 5039},
														exprs: []interface{}{
															&labeledExpr{
																pos:   position{line: 120, col: 21, offset: 5039},
																label: "attr",
																expr: &choiceExpr{
																	pos: position{line: 120, col: 27, offset: 5045},
																	alternatives: []interface{}{
																		&actionExpr{
																			pos: position{line: 129, col: 14, offset: 5496},
																			run: (*parser).callonParagraph304,
																			expr: &labeledExpr{
																				pos:   position{line: 129, col: 14, offset: 5496},
																				label: "id",
																				expr: &actionExpr{
																					pos: position{line: 135, col: 20, offset: 5626},
																					run: (*parser).callonParagraph306,
																					expr: &seqExpr{
																						pos: position{line: 135, col: 20, offset: 5626},
																						exprs: []interface{}{
																							&litMatcher{
																								pos:        position{line: 135, col: 20, offset: 5626},
																								val:        "[[",
																								ignoreCase: false,
																							},
																							&labeledExpr{
																								pos:   position{line: 135, col: 25, offset: 5631},
																								label: "id",
																								expr: &actionExpr{
																									pos: position{line: 883, col: 7, offset: 36866},
																									run: (*parser).callonParagraph310,
																									expr: &oneOrMoreExpr{
																										pos: position{line: 883, col: 7, offset: 36866},
																										expr: &seqExpr{
																											pos: position{line: 883, col: 8, offset: 36867},
																											exprs: []interface{}{
																												&notExpr{
																													pos: position{line: 883, col: 8, offset: 36867},
																													expr: &choiceExpr{
																														pos: position{line: 899, col: 12, offset: 37169},
																														alternatives: []interface{}{
																															&litMatcher{
																																pos:        position{line: 899, col: 12, offset: 37169},
																																val:        "\r\n",
																																ignoreCase: false,
																															},
																															&charClassMatcher{
																																pos:        position{line: 899, col: 21, offset: 37178},
																																val:        "[\\r\\n]",
																																chars:      []rune{'\r', '\n'},
																																ignoreCase: false,
																																inverted:   false,
																															},
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 883, col: 17, offset: 36876},
																													expr: &choiceExpr{
																														pos: position{line: 895, col: 7, offset: 37107},
																														alternatives: []interface{}{
																															&litMatcher{
																																pos:        position{line: 895, col: 7, offset: 37107},
																																val:        " ",
																																ignoreCase: false,
																															},
																															&actionExpr{
																																pos: position{line: 895, col: 13, offset: 37113},
																																run: (*parser).callonParagraph320,
																																expr: &litMatcher{
																																	pos:        position{line: 895, col: 13, offset: 37113},
																																	val:        "\t",
																																	ignoreCase: false,
																																},
																															},
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 883, col: 21, offset: 36880},
																													expr: &litMatcher{
																														pos:        position{line: 883, col: 22, offset: 36881},
																														val:        "[",
																														ignoreCase: false,
																													},
																												},
																												&notExpr{
																													pos: position{line: 883, col: 26, offset: 36885},
																													expr: &litMatcher{
																														pos:        position{line: 883, col: 27, offset: 36886},
																														val:        "]",
																														ignoreCase: false,
																													},
																												},
																												&notExpr{
																													pos: position{line: 883, col: 31, offset: 36890},
																													expr: &litMatcher{
																														pos:        position{line: 883, col: 32, offset: 36891},
																														val:        "<<",
																														ignoreCase: false,
																													},
																												},
																												&notExpr{
																													pos: position{line: 883, col: 37, offset: 36896},
																													expr: &litMatcher{
																														pos:        position{line: 883, col: 38, offset: 36897},
																														val:        ">>",
																														ignoreCase: false,
																													},
																												},
																												&anyMatcher{
																													line: 883, col: 42, offset: 36901,
																												},
																											},
																										},
																									},
																								},
																							},
																							&litMatcher{
																								pos:        position{line: 135, col: 33, offset: 5639},
																								val:        "]]",
																								ignoreCase: false,
																							},
																						},
																					},
																				},
																			},
																		},
																		&actionExpr{
																			pos: position{line: 131, col: 5, offset: 5542},
																			run: (*parser).callonParagraph332,
																			expr: &seqExpr{
																				pos: position{line: 131, col: 5, offset: 5542},
																				exprs: []interface{}{
																					&litMatcher{
																						pos:        position{line: 131, col: 5, offset: 5542},
																						val:        "[#",
																						ignoreCase: false,
																					},
																					&labeledExpr{
																						pos:   position{line: 131, col: 10, offset: 5547},
																						label: "id",
																						expr: &actionExpr{
																							pos: position{line: 883, col: 7, offset: 36866},
																							run: (*parser).callonParagraph336,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 883, col: 7, offset: 36866},
																								expr: &seqExpr{
																									pos: position{line: 883, col: 8, offset: 36867},
																									exprs: []interface{}{
																										&notExpr{
																											pos: position{line: 883, col: 8, offset: 36867},
																											expr: &choiceExpr{
																												pos: position{line: 899, col: 12, offset: 37169},
																												alternatives: []interface{}{
																													&litMatcher{
																														pos:        position{line: 899, col: 12, offset: 37169},
																														val:        "\r\n",
																														ignoreCase: false,
																													},
																													&charClassMatcher{
																														pos:        position{line: 899, col: 21, offset: 37178},
																														val:        "[\\r\\n]",
																														chars:      []rune{'\r', '\n'},
																														ignoreCase: false,
																														inverted:   false,
																													},
																												},
																											},
																										},
																										&notExpr{
																											pos: position{line: 883, col: 17, offset: 36876},
																											expr: &choiceExpr{
																												pos: position{line: 895, col: 7, offset: 37107},
																												alternatives: []interface{}{
																													&litMatcher{
																														pos:        position{line: 895, col: 7, offset: 37107},
																														val:        " ",
																														ignoreCase: false,
																													},
																													&actionExpr{
																														pos: position{line: 895, col: 13, offset: 37113},
																														run: (*parser).callonParagraph346,
																														expr: &litMatcher{
																															pos:        position{line: 895, col: 13, offset: 37113},
																															val:        "\t",
																															ignoreCase: false,
																														},
																													},
																												},
																											},
																										},
																										&notExpr{
																											pos: position{line: 883, col: 21, offset: 36880},
																											expr: &litMatcher{
																												pos:        position{line: 883, col: 22, offset: 36881},
																												val:        "[",
																												ignoreCase: false,
																											},
																										},
																										&notExpr{
																											pos: position{line: 883, col: 26, offset: 36885},
																											expr: &litMatcher{
																												pos:        position{line: 883, col: 27, offset: 36886},
																												val:        "]",
																												ignoreCase: false,
																											},
																										},
																										&notExpr{
																											pos: position{line: 883, col: 31, offset: 36890},
																											expr: &litMatcher{
																												pos:        position{line: 883, col: 32, offset: 36891},
																												val:        "<<",
																												ignoreCase: false,
																											},
																										},
																										&notExpr{
																											pos: position{line: 883, col: 37, offset: 36896},
																											expr: &litMatcher{
																												pos:        position{line: 883, col: 38, offset: 36897},
																												val:        ">>",
																												ignoreCase: false,
																											},
																										},
																										&anyMatcher{
																											line: 883, col: 42, offset: 36901,
																										},
																									},
																								},
																							},
																						},
																					},
																					&litMatcher{
																						pos:        position{line: 131, col: 18, offset: 5555},
																						val:        "]",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																		&actionExpr{
																			pos: position{line: 141, col: 17, offset: 5848},
																			run: (*parser).callonParagraph358,
																			expr: &seqExpr{
																				pos: position{line: 141, col: 17, offset: 5848},
																				exprs: []interface{}{
																					&litMatcher{
																						pos:        position{line: 141, col: 17, offset: 5848},
																						val:        ".",
																						ignoreCase: false,
																					},
																					&notExpr{
																						pos: position{line: 141, col: 21, offset: 5852},
																						expr: &litMatcher{
																							pos:        position{line: 141, col: 22, offset: 5853},
																							val:        ".",
																							ignoreCase: false,
																						},
																					},
																					&notExpr{
																						pos: position{line: 141, col: 26, offset: 5857},
																						expr: &choiceExpr{
																							pos: position{line: 895, col: 7, offset: 37107},
																							alternatives: []interface{}{
																								&litMatcher{
																									pos:        position{line: 895, col: 7, offset: 37107},
																									val:        " ",
																									ignoreCase: false,
																								},
																								&actionExpr{
																									pos: position{line: 895, col: 13, offset: 37113},
																									run: (*parser).callonParagraph366,
																									expr: &litMatcher{
																										pos:        position{line: 895, col: 13, offset: 37113},
																										val:        "\t",
																										ignoreCase: false,
																									},
																								},
																							},
																						},
																					},
																					&labeledExpr{
																						pos:   position{line: 141, col: 30, offset: 5861},
																						label: "title",
																						expr: &oneOrMoreExpr{
																							pos: position{line: 141, col: 36, offset: 5867},
																							expr: &seqExpr{
																								pos: position{line: 141, col: 37, offset: 5868},
																								exprs: []interface{}{
																									&notExpr{
																										pos: position{line: 141, col: 37, offset: 5868},
																										expr: &choiceExpr{
																											pos: position{line: 899, col: 12, offset: 37169},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 899, col: 12, offset: 37169},
																													val:        "\r\n",
																													ignoreCase: false,
																												},
																												&charClassMatcher{
																													pos:        position{line: 899, col: 21, offset: 37178},
																													val:        "[\\r\\n]",
																													chars:      []rune{'\r', '\n'},
																													ignoreCase: false,
																													inverted:   false,
																												},
																											},
																										},
																									},
																									&anyMatcher{
																										line: 141, col: 46, offset: 5877,
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																		&actionExpr{
																			pos: position{line: 147, col: 16, offset: 6051},
																			run: (*parser).callonParagraph376,
																			expr: &seqExpr{
																				pos: position{line: 147, col: 16, offset: 6051},
																				exprs: []interface{}{
																					&litMatcher{
																						pos:        position{line: 147, col: 16, offset: 6051},
																						val:        "[.",
																						ignoreCase: false,
																					},
																					&notExpr{
																						pos: position{line: 147, col: 21, offset: 6056},
																						expr: &choiceExpr{
																							pos: position{line: 895, col: 7, offset: 37107},
																							alternatives: []interface{}{
																								&litMatcher{
																									pos:        position{line: 895, col: 7, offset: 37107},
																									val:        " ",
																									ignoreCase: false,
																								},
																								&actionExpr{
																									pos: position{line: 895, col: 13, offset: 37113},
																									run: (*parser).callonParagraph382,
																									expr: &litMatcher{
																										pos:        position{line: 895, col: 13, offset: 37113},
																										val:        "\t",
																										ignoreCase: false,
																									},
																								},
																							},
																						},
																					},
																					&labeledExpr{
																						pos:   position{line: 147, col: 25, offset: 6060},
																						label: "role",
																						expr: &oneOrMoreExpr{
																							pos: position{line: 147, col: 30, offset: 6065},
																							expr: &seqExpr{
																								pos: position{line: 147, col: 31, offset: 6066},
																								exprs: []interface{}{
																									&notExpr{
																										pos: position{line: 147, col: 31, offset: 6066},
																										expr: &choiceExpr{
																											pos: position{line: 899, col: 12, offset: 37169},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 899, col: 12, offset: 37169},
																													val:        "\r\n",
																													ignoreCase: false,
																												},
																												&charClassMatcher{
																													pos:        position{line: 899, col: 21, offset: 37178},
																													val:        "[\\r\\n]",
																													chars:      []rune{'\r', '\n'},
																													ignoreCase: false,
																													inverted:   false,
																												},
																											},
																										},
																									},
																									&notExpr{
																										pos: position{line: 147, col: 40, offset: 6075},
																										expr: &litMatcher{
																											pos:        position{line: 147, col: 41, offset: 6076},
																											val:        "]",
																											ignoreCase: false,
																										},
																									},
																									&anyMatcher{
																										line: 147, col: 45, offset: 6080,
																									},
																								},
																							},
																						},
																					},
																					&litMatcher{
																						pos:        position{line: 147, col: 49, offset: 6084},
																						val:        "]",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																		&actionExpr{
																			pos: position{line: 152, col: 30, offset: 6255},
																			run: (*parser).callonParagraph395,
																			expr: &seqExpr{
																				pos: position{line: 152, col: 30, offset: 6255},
																				exprs: []interface{}{
																					&litMatcher{
																						pos:        position{line: 152, col: 30, offset: 6255},
																						val:        "[",
																						ignoreCase: false,
																					},
																					&labeledExpr{
																						pos:   position{line: 152, col: 34, offset: 6259},
																						label: "k",
																						expr: &choiceExpr{
																							pos: position{line: 470, col: 19, offset: 18925},
																							alternatives: []interface{}{
																								&actionExpr{
																									pos: position{line: 470, col: 19, offset: 18925},
																									run: (*parser).callonParagraph400,
																									expr: &litMatcher{
																										pos:        position{line: 470, col: 19, offset: 18925},
																										val:        "TIP",
																										ignoreCase: false,
																									},
																								},
																								&actionExpr{
																									pos: position{line: 472, col: 5, offset: 18963},
																									run: (*parser).callonParagraph402,
																									expr: &litMatcher{
																										pos:        position{line: 472, col: 5, offset: 18963},
																										val:        "NOTE",
																										ignoreCase: false,
																									},
																								},
																								&actionExpr{
																									pos: position{line: 474, col: 5, offset: 19003},
																									run: (*parser).callonParagraph404,
																									expr: &litMatcher{
																										pos:        position{line: 474, col: 5, offset: 19003},
																										val:        "IMPORTANT",
																										ignoreCase: false,
																									},
																								},
																								&actionExpr{
																									pos: position{line: 476, col: 5, offset: 19053},
																									run: (*parser).callonParagraph406,
																									expr: &litMatcher{
																										pos:        position{line: 476, col: 5, offset: 19053},
																										val:        "WARNING",
																										ignoreCase: false,
																									},
																								},
																								&actionExpr{
																									pos: position{line: 478, col: 5, offset: 19099},
																									run: (*parser).callonParagraph408,
																									expr: &litMatcher{
																										pos:        position{line: 478, col: 5, offset: 19099},
																										val:        "CAUTION",
																										ignoreCase: false,
																									},
																								},
																							},
																						},
																					},
																					&litMatcher{
																						pos:        position{line: 152, col: 53, offset: 6278},
																						val:        "]",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																		&actionExpr{
																			pos: position{line: 175, col: 21, offset: 7013},
																			run: (*parser).callonParagraph411,
																			expr: &litMatcher{
																				pos:        position{line: 175, col: 21, offset: 7013},
																				val:        "[horizontal]",
																				ignoreCase: false,
																			},
																		},
																		&actionExpr{
																			pos: position{line: 157, col: 19, offset: 6439},
																			run: (*parser).callonParagraph413,
																			expr: &seqExpr{
																				pos: position{line: 157, col: 19, offset: 6439},
																				exprs: []interface{}{
																					&litMatcher{
																						pos:        position{line: 157, col: 19, offset: 6439},
																						val:        "[",
																						ignoreCase: false,
																					},
																					&notExpr{
																						pos: position{line: 157, col: 23, offset: 6443},
																						expr: &choiceExpr{
																							pos: position{line: 895, col: 7, offset: 37107},
																							alternatives: []interface{}{
																								&litMatcher{
																									pos:        position{line: 895, col: 7, offset: 37107},
																									val:        " ",
																									ignoreCase: false,
																								},
																								&actionExpr{
																									pos: position{line: 895, col: 13, offset: 37113},
																									run: (*parser).callonParagraph419,
																									expr: &litMatcher{
																										pos:        position{line: 895, col: 13, offset: 37113},
																										val:        "\t",
																										ignoreCase: false,
																									},
																								},
																							},
																						},
																					},
																					&labeledExpr{
																						pos:   position{line: 157, col: 27, offset: 6447},
																						label: "attributes",
																						expr: &zeroOrMoreExpr{
																							pos: position{line: 157, col: 38, offset: 6458},
																							expr: &choiceExpr{
																								pos: position{line: 161, col: 21, offset: 6571},
																								alternatives: []interface{}{
																									&actionExpr{
																										pos: position{line: 161, col: 21, offset: 6571},
																										run: (*parser).callonParagraph424,
																										expr: &seqExpr{
																											pos: position{line: 161, col: 21, offset: 6571},
																											exprs: []interface{}{
																												&labeledExpr{
																													pos:   position{line: 161, col: 21, offset: 6571},
																													label: "key",
																													expr: &actionExpr{
																														pos: position{line: 167, col: 17, offset: 6861},
																														run: (*parser).callonParagraph427,
																														expr: &seqExpr{
																															pos: position{line: 167, col: 17, offset: 6861},
																															exprs: []interface{}{
																																&notExpr{
																																	pos: position{line: 167, col: 17, offset: 6861},
																																	expr: &actionExpr{
																																		pos: position{line: 207, col: 14, offset: 8362},
																																		run: (*parser).callonParagraph430,
																																		expr: &litMatcher{
																																			pos:        position{line: 207, col: 14, offset: 8362},
																																			val:        "verse",
																																			ignoreCase: false,
																																		},
																																	},
																																},
																																&labeledExpr{
																																	pos:   position{line: 167, col: 28, offset: 6872},
																																	label: "key",
																																	expr: &oneOrMoreExpr{
																																		pos: position{line: 167, col: 32, offset: 6876},
																																		expr: &seqExpr{
																																			pos: position{line: 167, col: 33, offset: 6877},
																																			exprs: []interface{}{
																																				&notExpr{
																																					pos: position{line: 167, col: 33, offset: 6877},
																																					expr: &litMatcher{
																																						pos:        position{line: 167, col: 34, offset: 6878},
																																						val:        "=",
																																						ignoreCase: false,
																																					},
																																				},
																																				&notExpr{
																																					pos: position{line: 167, col: 38, offset: 6882},
																																					expr: &litMatcher{
																																						pos:        position{line: 167, col: 39, offset: 6883},
																																						val:        ",",
																																						ignoreCase: false,
																																					},
																																				},
																																				&notExpr{
																																					pos: position{line: 167, col: 43, offset: 6887},
																																					expr: &litMatcher{
																																						pos:        position{line: 167, col: 44, offset: 6888},
																																						val:        "]",
																																						ignoreCase: false,
																																					},
																																				},
																																				&anyMatcher{
																																					line: 167, col: 48, offset: 6892,
																																				},
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																												&litMatcher{
																													pos:        position{line: 161, col: 40, offset: 6590},
																													val:        "=",
																													ignoreCase: false,
																												},
																												&labeledExpr{
																													pos:   position{line: 161, col: 44, offset: 6594},
																													label: "value",
																													expr: &actionExpr{
																														pos: position{line: 171, col: 19, offset: 6940},
																														run: (*parser).callonParagraph444,
																														expr: &labeledExpr{
																															pos:   position{line: 171, col: 19, offset: 6940},
																															label: "value",
																															expr: &zeroOrMoreExpr{
																																pos: position{line: 171, col: 25, offset: 6946},
																																expr: &seqExpr{
																																	pos: position{line: 171, col: 26, offset: 6947},
																																	exprs: []interface{}{
																																		&notExpr{
																																			pos: position{line: 171, col: 26, offset: 6947},
																																			expr: &litMatcher{
																																				pos:        position{line: 171, col: 27, offset: 6948},
																																				val:        "=",
																																				ignoreCase: false,
																																			},
																																		},
																																		&notExpr{
																																			pos: position{line: 171, col: 31, offset: 6952},
																																			expr: &litMatcher{
																																				pos:        position{line: 171, col: 32, offset: 6953},
																																				val:        ",",
																																				ignoreCase: false,
																																			},
																																		},
																																		&notExpr{
																																			pos: position{line: 171, col: 36, offset: 6957},
																																			expr: &litMatcher{
																																				pos:        position{line: 171, col: 37, offset: 6958},
																																				val:        "]",
																																				ignoreCase: false,
																																			},
																																		},
																																		&anyMatcher{
																																			line: 171, col: 41, offset: 6962,
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																												&zeroOrOneExpr{
																													pos: position{line: 161, col: 67, offset: 6617},
																													expr: &litMatcher{
																														pos:        position{line: 161, col: 67, offset: 6617},
																														val:        ",",
																														ignoreCase: false,
																													},
																												},
																												&zeroOrMoreExpr{
																													pos: position{line: 161, col: 72, offset: 6622},
																													expr: &choiceExpr{
																														pos: position{line: 895, col: 7, offset: 37107},
																														alternatives: []interface{}{
																															&litMatcher{
																																pos:        position{line: 895, col: 7, offset: 37107},
																																val:        " ",
																																ignoreCase: false,
																															},
																															&actionExpr{
																																pos: position{line: 895, col: 13, offset: 37113},
																																run: (*parser).callonParagraph460,
																																expr: &litMatcher{
																																	pos:        position{line: 895, col: 13, offset: 37113},
																																	val:        "\t",
																																	ignoreCase: false,
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																									&actionExpr{
																										pos: position{line: 163, col: 5, offset: 6729},
																										run: (*parser).callonParagraph462,
																										expr: &seqExpr{
																											pos: position{line: 163, col: 5, offset: 6729},
																											exprs: []interface{}{
																												&labeledExpr{
																													pos:   position{line: 163, col: 5, offset: 6729},
																													label: "key",
																													expr: &actionExpr{
																														pos: position{line: 167, col: 17, offset: 6861},
																														run: (*parser).callonParagraph465,
																														expr: &seqExpr{
																															pos: position{line: 167, col: 17, offset: 6861},
																															exprs: []interface{}{
																																&notExpr{
																																	pos: position{line: 167, col: 17, offset: 6861},
																																	expr: &actionExpr{
																																		pos: position{line: 207, col: 14, offset: 8362},
																																		run: (*parser).callonParagraph468,
																																		expr: &litMatcher{
																																			pos:        position{line: 207, col: 14, offset: 8362},
																																			val:        "verse",
																																			ignoreCase: false,
																																		},
																																	},
																																},
																																&labeledExpr{
																																	pos:   position{line: 167, col: 28, offset: 6872},
																																	label: "key",
																																	expr: &oneOrMoreExpr{
																																		pos: position{line: 167, col: 32, offset: 6876},
																																		expr: &seqExpr{
																																			pos: position{line: 167, col: 33, offset: 6877},
																																			exprs: []interface{}{
																																				&notExpr{
																																					pos: position{line: 167, col: 33, offset: 6877},
																																					expr: &litMatcher{
																																						pos:        position{line: 167, col: 34, offset: 6878},
																																						val:        "=",
																																						ignoreCase: false,
																																					},
																																				},
																																				&notExpr{
																																					pos: position{line: 167, col: 38, offset: 6882},
																																					expr: &litMatcher{
																																						pos:        position{line: 167, col: 39, offset: 6883},
																																						val:        ",",
																																						ignoreCase: false,
																																					},
																																				},
																																				&notExpr{
																																					pos: position{line: 167, col: 43, offset: 6887},
																																					expr: &litMatcher{
																																						pos:        position{line: 167, col: 44, offset: 6888},
																																						val:        "]",
																																						ignoreCase: false,
																																					},
																																				},
																																				&anyMatcher{
																																					line: 167, col: 48, offset: 6892,
																																				},
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																												&zeroOrOneExpr{
																													pos: position{line: 163, col: 24, offset: 6748},
																													expr: &litMatcher{
																														pos:        position{line: 163, col: 24, offset: 6748},
																														val:        ",",
																														ignoreCase: false,
																													},
																												},
																												&zeroOrMoreExpr{
																													pos: position{line: 163, col: 29, offset: 6753},
																													expr: &choiceExpr{
																														pos: position{line: 895, col: 7, offset: 37107},
																														alternatives: []interface{}{
																															&litMatcher{
																																pos:        position{line: 895, col: 7, offset: 37107},
																																val:        " ",
																																ignoreCase: false,
																															},
																															&actionExpr{
																																pos: position{line: 895, col: 13, offset: 37113},
																																run: (*parser).callonParagraph485,
																																expr: &litMatcher{
																																	pos:        position{line: 895, col: 13, offset: 37113},
																																	val:        "\t",
																																	ignoreCase: false,
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																					&litMatcher{
																						pos:        position{line: 157, col: 59, offset: 6479},
																						val:        "]",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																},
															},
															&zeroOrMoreExpr{
																pos: position{line: 120, col: 131, offset: 5149},
																expr: &choiceExpr{
																	pos: position{line: 895, col: 7, offset: 37107},
																	alternatives: []interface{}{
																		&litMatcher{
																			pos:        position{line: 895, col: 7, offset: 37107},
																			val:        " ",
																			ignoreCase: false,
																		},
																		&actionExpr{
																			pos: position{line: 895, col: 13, offset: 37113},
																			run: (*parser).callonParagraph491,
																			expr: &litMatcher{
																				pos:        position{line: 895, col: 13, offset: 37113},
																				val:        "\t",
																				ignoreCase: false,
																			},
																		},
																	},
																},
															},
															&choiceExpr{
																pos: position{line: 903, col: 8, offset: 37209},
																alternatives: []interface{}{
																	&litMatcher{
																		pos:        position{line: 899, col: 12, offset: 37169},
																		val:        "\r\n",
																		ignoreCase: false,
																	},
																	&charClassMatcher{
																		pos:        position{line: 899, col: 21, offset: 37178},
																		val:        "[\\r\\n]",
																		chars:      []rune{'\r', '\n'},
																		ignoreCase: false,
																		inverted:   false,
																	},
																	&notExpr{
																		pos: position{line: 901, col: 8, offset: 37198},
																		expr: &anyMatcher{
																			line: 901, col: 9, offset: 37199,
																		},
																	},
																},
															},
														},
													},
												},
											},
										},
									},
								},
								&notExpr{
									pos: position{line: 489, col: 38, offset: 19482},
									expr: &seqExpr{
										pos: position{line: 489, col: 40, offset: 19484},
										exprs: []interface{}{
											&oneOrMoreExpr{
												pos: position{line: 489, col: 40, offset: 19484},
												expr: &litMatcher{
													pos:        position{line: 489, col: 40, offset: 19484},
													val:        "=",
													ignoreCase: false,
												},
											},
											&oneOrMoreExpr{
												pos: position{line: 489, col: 45, offset: 19489},
												expr: &choiceExpr{
													pos: position{line: 895, col: 7, offset: 37107},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 895, col: 7, offset: 37107},
															val:        " ",
															ignoreCase: false,
														},
														&actionExpr{
															pos: position{line: 895, col: 13, offset: 37113},
															run: (*parser).callonParagraph505,
															expr: &litMatcher{
																pos:        position{line: 895, col: 13, offset: 37113},
																val:        "\t",
																ignoreCase: false,
															},
														},
													},
												},
											},
											&notExpr{
												pos: position{line: 489, col: 49, offset: 19493},
												expr: &choiceExpr{
													pos: position{line: 899, col: 12, offset: 37169},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 899, col: 12, offset: 37169},
															val:        "\r\n",
															ignoreCase: false,
														},
														&charClassMatcher{
															pos:        position{line: 899, col: 21, offset: 37178},
															val:        "[\\r\\n]",
															chars:      []rune{'\r', '\n'},
															ignoreCase: false,
															inverted:   false,
														},
													},
												},
											},
										},
									},
								},
								&labeledExpr{
									pos:   position{line: 489, col: 59, offset: 19503},
									label: "t",
									expr: &choiceExpr{
										pos: position{line: 470, col: 19, offset: 18925},
										alternatives: []interface{}{
											&actionExpr{
												pos: position{line: 470, col: 19, offset: 18925},
												run: (*parser).callonParagraph513,
												expr: &litMatcher{
													pos:        position{line: 470, col: 19, offset: 18925},
													val:        "TIP",
													ignoreCase: false,
												},
											},
											&actionExpr{
												pos: position{line: 472, col: 5, offset: 18963},
												run: (*parser).callonParagraph515,
												expr: &litMatcher{
													pos:        position{line: 472, col: 5, offset: 18963},
													val:        "NOTE",
													ignoreCase: false,
												},
											},
											&actionExpr{
												pos: position{line: 474, col: 5, offset: 19003},
												run: (*parser).callonParagraph517,
												expr: &litMatcher{
													pos:        position{line: 474, col: 5, offset: 19003},
													val:        "IMPORTANT",
													ignoreCase: false,
												},
											},
											&actionExpr{
												pos: position{line: 476, col: 5, offset: 19053},
												run: (*parser).callonParagraph519,
												expr: &litMatcher{
													pos:        position{line: 476, col: 5, offset: 19053},
													val:        "WARNING",
													ignoreCase: false,
												},
											},
											&actionExpr{
												pos: position{line: 478, col: 5, offset: 19099},
												run: (*parser).callonParagraph521,
												expr: &litMatcher{
													pos:        position{line: 478, col: 5, offset: 19099},
													val:        "CAUTION",
													ignoreCase: false,
												},
											},
										},
									},
								},
								&litMatcher{
									pos:        position{line: 489, col: 78, offset: 19522},
									val:        ": ",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 489, col: 83, offset: 19527},
									label: "lines",
									expr: &oneOrMoreExpr{
										pos: position{line: 489, col: 89, offset: 19533},
										expr: &ruleRefExpr{
											pos:  position{line: 489, col: 90, offset: 19534},
											name: "InlineElements",
										},
									},
								},
							},
						},
					},
					&actionExpr{
						pos: position{line: 493, col: 5, offset: 19742},
						run: (*parser).callonParagraph527,
						expr: &seqExpr{
							pos: position{line: 493, col: 5, offset: 19742},
							exprs: []interface{}{
								&labeledExpr{
									pos:   position{line: 493, col: 5, offset: 19742},
									label: "attributes",
									expr: &zeroOrMoreExpr{
										pos: position{line: 493, col: 16, offset: 19753},
										expr: &choiceExpr{
											pos: position{line: 497, col: 23, offset: 19938},
											alternatives: []interface{}{
												&actionExpr{
													pos: position{line: 125, col: 24, offset: 5347},
													run: (*parser).callonParagraph532,
													expr: &seqExpr{
														pos: position{line: 125, col: 24, offset: 5347},
														exprs: []interface{}{
															&labeledExpr{
																pos:   position{line: 125, col: 24, offset: 5347},
																label: "attr",
																expr: &choiceExpr{
																	pos: position{line: 125, col: 30, offset: 5353},
																	alternatives: []interface{}{
																		&actionExpr{
																			pos: position{line: 179, col: 20, offset: 7116},
																			run: (*parser).callonParagraph536,
																			expr: &seqExpr{
																				pos: position{line: 179, col: 20, offset: 7116},
																				exprs: []interface{}{
																					&litMatcher{
																						pos:        position{line: 179, col: 20, offset: 7116},
																						val:        "[",
																						ignoreCase: false,
																					},
																					&labeledExpr{
																						pos:   position{line: 179, col: 24, offset: 7120},
																						label: "kind",
																						expr: &actionExpr{
																							pos: position{line: 191, col: 14, offset: 7626},
																							run: (*parser).callonParagraph540,
																							expr: &seqExpr{
																								pos: position{line: 191, col: 14, offset: 7626},
																								exprs: []interface{}{
																									&notExpr{
																										pos: position{line: 191, col: 14, offset: 7626},
																										expr: &actionExpr{
																											pos: position{line: 207, col: 14, offset: 8362},
																											run: (*parser).callonParagraph543,
																											expr: &litMatcher{
																												pos:        position{line: 207, col: 14, offset: 8362},
																												val:        "verse",
																												ignoreCase: false,
																											},
																										},
																									},
																									&zeroOrMoreExpr{
																										pos: position{line: 191, col: 25, offset: 7637},
																										expr: &seqExpr{
																											pos: position{line: 191, col: 26, offset: 7638},
																											exprs: []interface{}{
																												&notExpr{
																													pos: position{line: 191, col: 26, offset: 7638},
																													expr: &choiceExpr{
																														pos: position{line: 903, col: 8, offset: 37209},
																														alternatives: []interface{}{
																															&litMatcher{
																																pos:        position{line: 899, col: 12, offset: 37169},
																																val:        "\r\n",
																																ignoreCase: false,
																															},
																															&charClassMatcher{
																																pos:        position{line: 899, col: 21, offset: 37178},
																																val:        "[\\r\\n]",
																																chars:      []rune{'\r', '\n'},
																																ignoreCase: false,
																																inverted:   false,
																															},
																															&notExpr{
																																pos: position{line: 901, col: 8, offset: 37198},
																																expr: &anyMatcher{
																																	line: 901, col: 9, offset: 37199,
																																},
																															},
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 191, col: 31, offset: 7643},
																													expr: &choiceExpr{
																														pos: position{line: 895, col: 7, offset: 37107},
																														alternatives: []interface{}{
																															&litMatcher{
																																pos:        position{line: 895, col: 7, offset: 37107},
																																val:        " ",
																																ignoreCase: false,
																															},
																															&actionExpr{
																																pos: position{line: 895, col: 13, offset: 37113},
																																run: (*parser).callonParagraph556,
																																expr: &litMatcher{
																																	pos:        position{line: 895, col: 13, offset: 37113},
																																	val:        "\t",
																																	ignoreCase: false,
																																},
																															},
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 191, col: 35, offset: 7647},
																													expr: &litMatcher{
																														pos:        position{line: 191, col: 36, offset: 7648},
																														val:        ",",
																														ignoreCase: false,
																													},
																												},
																												&notExpr{
																													pos: position{line: 191, col: 40, offset: 7652},
																													expr: &litMatcher{
																														pos:        position{line: 191, col: 41, offset: 7653},
																														val:        "]",
																														ignoreCase: false,
																													},
																												},
																												&notExpr{
																													pos: position{line: 191, col: 45, offset: 7657},
																													expr: &litMatcher{
																														pos:        position{line: 191, col: 46, offset: 7658},
																														val:        "#",
																														ignoreCase: false,
																													},
																												},
																												&notExpr{
																													pos: position{line: 191, col: 50, offset: 7662},
																													expr: &litMatcher{
																														pos:        position{line: 191, col: 51, offset: 7663},
																														val:        "=",
																														ignoreCase: false,
																													},
																												},
																												&notExpr{
																													pos: position{line: 191, col: 55, offset: 7667},
																													expr: &choiceExpr{
																														pos: position{line: 470, col: 19, offset: 18925},
																														alternatives: []interface{}{
																															&actionExpr{
																																pos: position{line: 470, col: 19, offset: 18925},
																																run: (*parser).callonParagraph568,
																																expr: &litMatcher{
																																	pos:        position{line: 470, col: 19, offset: 18925},
																																	val:        "TIP",
																																	ignoreCase: false,
																																},
																															},
																															&actionExpr{
																																pos: position{line: 472, col: 5, offset: 18963},
																																run: (*parser).callonParagraph570,
																																expr: &litMatcher{
																																	pos:        position{line: 472, col: 5, offset: 18963},
																																	val:        "NOTE",
																																	ignoreCase: false,
																																},
																															},
																															&actionExpr{
																																pos: position{line: 474, col: 5, offset: 19003},
																																run: (*parser).callonParagraph572,
																																expr: &litMatcher{
																																	pos:        position{line: 474, col: 5, offset: 19003},
																																	val:        "IMPORTANT",
																																	ignoreCase: false,
																																},
																															},
																															&actionExpr{
																																pos: position{line: 476, col: 5, offset: 19053},
																																run: (*parser).callonParagraph574,
																																expr: &litMatcher{
																																	pos:        position{line: 476, col: 5, offset: 19053},
																																	val:        "WARNING",
																																	ignoreCase: false,
																																},
																															},
																															&actionExpr{
																																pos: position{line: 478, col: 5, offset: 19099},
																																run: (*parser).callonParagraph576,
																																expr: &litMatcher{
																																	pos:        position{line: 478, col: 5, offset: 19099},
																																	val:        "CAUTION",
																																	ignoreCase: false,
																																},
																															},
																														},
																													},
																												},
																												&anyMatcher{
																													line: 191, col: 71, offset: 7683,
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																					&zeroOrMoreExpr{
																						pos: position{line: 179, col: 41, offset: 7137},
																						expr: &choiceExpr{
																							pos: position{line: 895, col: 7, offset: 37107},
																							alternatives: []interface{}{
																								&litMatcher{
																									pos:        position{line: 895, col: 7, offset: 37107},
																									val:        " ",
																									ignoreCase: false,
																								},
																								&actionExpr{
																									pos: position{line: 895, col: 13, offset: 37113},
																									run: (*parser).callonParagraph582,
																									expr: &litMatcher{
																										pos:        position{line: 895, col: 13, offset: 37113},
																										val:        "\t",
																										ignoreCase: false,
																									},
																								},
																							},
																						},
																					},
																					&litMatcher{
																						pos:        position{line: 179, col: 45, offset: 7141},
																						val:        ",",
																						ignoreCase: false,
																					},
																					&labeledExpr{
																						pos:   position{line: 179, col: 49, offset: 7145},
																						label: "author",
																						expr: &actionExpr{
																							pos: position{line: 211, col: 16, offset: 8421},
																							run: (*parser).callonParagraph586,
																							expr: &zeroOrMoreExpr{
																								pos: position{line: 211, col: 16, offset: 8421},
																								expr: &seqExpr{
																									pos: position{line: 211, col: 17, offset: 8422},
																									exprs: []interface{}{
																										&notExpr{
																											pos: position{line: 211, col: 17, offset: 8422},
																											expr: &choiceExpr{
																												pos: position{line: 903, col: 8, offset: 37209},
																												alternatives: []interface{}{
																													&litMatcher{
																														pos:        position{line: 899, col: 12, offset: 37169},
																														val:        "\r\n",
																														ignoreCase: false,
																													},
																													&charClassMatcher{
																														pos:        position{line: 899, col: 21, offset: 37178},
																														val:        "[\\r\\n]",
																														chars:      []rune{'\r', '\n'},
																														ignoreCase: false,
																														inverted:   false,
																													},
																													&notExpr{
																														pos: position{line: 901, col: 8, offset: 37198},
																														expr: &anyMatcher{
																															line: 901, col: 9, offset: 37199,
																														},
																													},
																												},
																											},
																										},
																										&notExpr{
																											pos: position{line: 211, col: 22, offset: 8427},
																											expr: &litMatcher{
																												pos:        position{line: 211, col: 23, offset: 8428},
																												val:        ",",
																												ignoreCase: false,
																											},
																										},
																										&notExpr{
																											pos: position{line: 211, col: 27, offset: 8432},
																											expr: &litMatcher{
																												pos:        position{line: 211, col: 28, offset: 8433},
																												val:        "]",
																												ignoreCase: false,
																											},
																										},
																										&anyMatcher{
																											line: 211, col: 32, offset: 8437,
																										},
																									},
																								},
																							},
																						},
																					},
																					&litMatcher{
																						pos:        position{line: 179, col: 70, offset: 7166},
																						val:        ",",
																						ignoreCase: false,
																					},
																					&labeledExpr{
																						pos:   position{line: 179, col: 74, offset: 7170},
																						label: "title",
																						expr: &actionExpr{
																							pos: position{line: 215, col: 15, offset: 8491},
																							run: (*parser).callonParagraph602,
																							expr: &zeroOrMoreExpr{
																								pos: position{line: 215, col: 15, offset: 8491},
																								expr: &seqExpr{
																									pos: position{line: 215, col: 16, offset: 8492},
																									exprs: []interface{}{
																										&notExpr{
																											pos: position{line: 215, col: 16, offset: 8492},
																											expr: &choiceExpr{
																												pos: position{line: 903, col: 8, offset: 37209},
																												alternatives: []interface{}{
																													&litMatcher{
																														pos:        position{line: 899, col: 12, offset: 37169},
																														val:        "\r\n",
																														ignoreCase: false,
																													},
																													&charClassMatcher{
																														pos:        position{line: 899, col: 21, offset: 37178},
																														val:        "[\\r\\n]",
																														chars:      []rune{'\r', '\n'},
																														ignoreCase: false,
																														inverted:   false,
																													},
																													&notExpr{
																														pos: position{line: 901, col: 8, offset: 37198},
																														expr: &anyMatcher{
																															line: 901, col: 9, offset: 37199,
																														},
																													},
																												},
																											},
																										},
																										&notExpr{
																											pos: position{line: 215, col: 21, offset: 8497},
																											expr: &litMatcher{
																												pos:        position{line: 215, col: 22, offset: 8498},
																												val:        ",",
																												ignoreCase: false,
																											},
																										},
																										&notExpr{
																											pos: position{line: 215, col: 26, offset: 8502},
																											expr: &litMatcher{
																												pos:        position{line: 215, col: 27, offset: 8503},
																												val:        "]",
																												ignoreCase: false,
																											},
																										},
																										&anyMatcher{
																											line: 215, col: 31, offset: 8507,
																										},
																									},
																								},
																							},
																						},
																					},
																					&litMatcher{
																						pos:        position{line: 179, col: 93, offset: 7189},
																						val:        "]",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																		&actionExpr{
																			pos: position{line: 183, col: 5, offset: 7332},
																			run: (*parser).callonParagraph617,
																			expr: &seqExpr{
																				pos: position{line: 183, col: 5, offset: 7332},
																				exprs: []interface{}{
																					&litMatcher{
																						pos:        position{line: 183, col: 5, offset: 7332},
																						val:        "[",
																						ignoreCase: false,
																					},
																					&labeledExpr{
																						pos:   position{line: 183, col: 9, offset: 7336},
																						label: "kind",
																						expr: &actionExpr{
																							pos: position{line: 191, col: 14, offset: 7626},
																							run: (*parser).callonParagraph621,
																							expr: &seqExpr{
																								pos: position{line: 191, col: 14, offset: 7626},
																								exprs: []interface{}{
																									&notExpr{
																										pos: position{line: 191, col: 14, offset: 7626},
																										expr: &actionExpr{
																											pos: position{line: 207, col: 14, offset: 8362},
																											run: (*parser).callonParagraph624,
																											expr: &litMatcher{
																												pos:        position{line: 207, col: 14, offset: 8362},
																												val:        "verse",
																												ignoreCase: false,
																											},
																										},
																									},
																									&zeroOrMoreExpr{
																										pos: position{line: 191, col: 25, offset: 7637},
																										expr: &seqExpr{
																											pos: position{line: 191, col: 26, offset: 7638},
																											exprs: []interface{}{
																												&notExpr{
																													pos: position{line: 191, col: 26, offset: 7638},
																													expr: &choiceExpr{
																														pos: position{line: 903, col: 8, offset: 37209},
																														alternatives: []interface{}{
																															&litMatcher{
																																pos:        position{line: 899, col: 12, offset: 37169},
																																val:        "\r\n",
																																ignoreCase: false,
																															},
																															&charClassMatcher{
																																pos:        position{line: 899, col: 21, offset: 37178},
																																val:        "[\\r\\n]",
																																chars:      []rune{'\r', '\n'},
																																ignoreCase: false,
																																inverted:   false,
																															},
																															&notExpr{
																																pos: position{line: 901, col: 8, offset: 37198},
																																expr: &anyMatcher{
																																	line: 901, col: 9, offset: 37199,
																																},
																															},
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 191, col: 31, offset: 7643},
																													expr: &choiceExpr{
																														pos: position{line: 895, col: 7, offset: 37107},
																														alternatives: []interface{}{
																															&litMatcher{
																																pos:        position{line: 895, col: 7, offset: 37107},
																																val:        " ",
																																ignoreCase: false,
																															},
																															&actionExpr{
																																pos: position{line: 895, col: 13, offset: 37113},
																																run: (*parser).callonParagraph637,
																																expr: &litMatcher{
																																	pos:        position{line: 895, col: 13, offset: 37113},
																																	val:        "\t",
																																	ignoreCase: false,
																																},
																															},
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 191, col: 35, offset: 7647},
																													expr: &litMatcher{
																														pos:        position{line: 191, col: 36, offset: 7648},
																														val:        ",",
																														ignoreCase: false,
																													},
																												},
																												&notExpr{
																													pos: position{line: 191, col: 40, offset: 7652},
																													expr: &litMatcher{
																														pos:        position{line: 191, col: 41, offset: 7653},
																														val:        "]",
																														ignoreCase: false,
																													},
																												},
																												&notExpr{
																													pos: position{line: 191, col: 45, offset: 7657},
																													expr: &litMatcher{
																														pos:        position{line: 191, col: 46, offset: 7658},
																														val:        "#",
																														ignoreCase: false,
																													},
																												},
																												&notExpr{
																													pos: position{line: 191, col: 50, offset: 7662},
																													expr: &litMatcher{
																														pos:        position{line: 191, col: 51, offset: 7663},
																														val:        "=",
																														ignoreCase: false,
																													},
																												},
																												&notExpr{
																													pos: position{line: 191, col: 55, offset: 7667},
																													expr: &choiceExpr{
																														pos: position{line: 470, col: 19, offset: 18925},
																														alternatives: []interface{}{
																															&actionExpr{
																																pos: position{line: 470, col: 19, offset: 18925},
																																run: (*parser).callonParagraph649,
																																expr: &litMatcher{
																																	pos:        position{line: 470, col: 19, offset: 18925},
																																	val:        "TIP",
																																	ignoreCase: false,
																																},
																															},
																															&actionExpr{
																																pos: position{line: 472, col: 5, offset: 18963},
																																run: (*parser).callonParagraph651,
																																expr: &litMatcher{
																																	pos:        position{line: 472, col: 5, offset: 18963},
																																	val:        "NOTE",
																																	ignoreCase: false,
																																},
																															},
																															&actionExpr{
																																pos: position{line: 474, col: 5, offset: 19003},
																																run: (*parser).callonParagraph653,
																																expr: &litMatcher{
																																	pos:        position{line: 474, col: 5, offset: 19003},
																																	val:        "IMPORTANT",
																																	ignoreCase: false,
																																},
																															},
																															&actionExpr{
																																pos: position{line: 476, col: 5, offset: 19053},
																																run: (*parser).callonParagraph655,
																																expr: &litMatcher{
																																	pos:        position{line: 476, col: 5, offset: 19053},
																																	val:        "WARNING",
																																	ignoreCase: false,
																																},
																															},
																															&actionExpr{
																																pos: position{line: 478, col: 5, offset: 19099},
																																run: (*parser).callonParagraph657,
																																expr: &litMatcher{
																																	pos:        position{line: 478, col: 5, offset: 19099},
																																	val:        "CAUTION",
																																	ignoreCase: false,
																																},
																															},
																														},
																													},
																												},
																												&anyMatcher{
																													line: 191, col: 71, offset: 7683,
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																					&zeroOrMoreExpr{
																						pos: position{line: 183, col: 26, offset: 7353},
																						expr: &choiceExpr{
																							pos: position{line: 895, col: 7, offset: 37107},
																							alternatives: []interface{}{
																								&litMatcher{
																									pos:        position{line: 895, col: 7, offset: 37107},
																									val:        " ",
																									ignoreCase: false,
																								},
																								&actionExpr{
																									pos: position{line: 895, col: 13, offset: 37113},
																									run: (*parser).callonParagraph663,
																									expr: &litMatcher{
																										pos:        position{line: 895, col: 13, offset: 37113},
																										val:        "\t",
																										ignoreCase: false,
																									},
																								},
																							},
																						},
																					},
																					&litMatcher{
																						pos:        position{line: 183, col: 30, offset: 7357},
																						val:        ",",
																						ignoreCase: false,
																					},
																					&labeledExpr{
																						pos:   position{line: 183, col: 34, offset: 7361},
																						label: "author",
																						expr: &actionExpr{
																							pos: position{line: 211, col: 16, offset: 8421},
																							run: (*parser).callonParagraph667,
																							expr: &zeroOrMoreExpr{
																								pos: position{line: 211, col: 16, offset: 8421},
																								expr: &seqExpr{
																									pos: position{line: 211, col: 17, offset: 8422},
																									exprs: []interface{}{
																										&notExpr{
																											pos: position{line: 211, col: 17, offset: 8422},
																											expr: &choiceExpr{
																												pos: position{line: 903, col: 8, offset: 37209},
																												alternatives: []interface{}{
																													&litMatcher{
																														pos:        position{line: 899, col: 12, offset: 37169},
																														val:        "\r\n",
																														ignoreCase: false,
																													},
																													&charClassMatcher{
																														pos:        position{line: 899, col: 21, offset: 37178},
																														val:        "[\\r\\n]",
																														chars:      []rune{'\r', '\n'},
																														ignoreCase: false,
																														inverted:   false,
																													},
																													&notExpr{
																														pos: position{line: 901, col: 8, offset: 37198},
																														expr: &anyMatcher{
																															line: 901, col: 9, offset: 37199,
																														},
																													},
																												},
																											},
																										},
																										&notExpr{
																											pos: position{line: 211, col: 22, offset: 8427},
																											expr: &litMatcher{
																												pos:        position{line: 211, col: 23, offset: 8428},
																												val:        ",",
																												ignoreCase: false,
																											},
																										},
																										&notExpr{
																											pos: position{line: 211, col: 27, offset: 8432},
																											expr: &litMatcher{
																												pos:        position{line: 211, col: 28, offset: 8433},
																												val:        "]",
																												ignoreCase: false,
																											},
																										},
																										&anyMatcher{
																											line: 211, col: 32, offset: 8437,
																										},
																									},
																								},
																							},
																						},
																					},
																					&litMatcher{
																						pos:        position{line: 183, col: 55, offset: 7382},
																						val:        "]",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																		&actionExpr{
																			pos: position{line: 187, col: 5, offset: 7513},
																			run: (*parser).callonParagraph682,
																			expr: &seqExpr{
																				pos: position{line: 187, col: 5, offset: 7513},
																				exprs: []interface{}{
																					&litMatcher{
																						pos:        position{line: 187, col: 5, offset: 7513},
																						val:        "[",
																						ignoreCase: false,
																					},
																					&labeledExpr{
																						pos:   position{line: 187, col: 9, offset: 7517},
																						label: "kind",
																						expr: &actionExpr{
																							pos: position{line: 191, col: 14, offset: 7626},
																							run: (*parser).callonParagraph686,
																							expr: &seqExpr{
																								pos: position{line: 191, col: 14, offset: 7626},
																								exprs: []interface{}{
																									&notExpr{
																										pos: position{line: 191, col: 14, offset: 7626},
																										expr: &actionExpr{
																											pos: position{line: 207, col: 14, offset: 8362},
																											run: (*parser).callonParagraph689,
																											expr: &litMatcher{
																												pos:        position{line: 207, col: 14, offset: 8362},
																												val:        "verse",
																												ignoreCase: false,
																											},
																										},
																									},
																									&zeroOrMoreExpr{
																										pos: position{line: 191, col: 25, offset: 7637},
																										expr: &seqExpr{
																											pos: position{line: 191, col: 26, offset: 7638},
																											exprs: []interface{}{
																												&notExpr{
																													pos: position{line: 191, col: 26, offset: 7638},
																													expr: &choiceExpr{
																														pos: position{line: 903, col: 8, offset: 37209},
																														alternatives: []interface{}{
																															&litMatcher{
																																pos:        position{line: 899, col: 12, offset: 37169},
																																val:        "\r\n",
																																ignoreCase: false,
																															},
																															&charClassMatcher{
																																pos:        position{line: 899, col: 21, offset: 37178},
																																val:        "[\\r\\n]",
																																chars:      []rune{'\r', '\n'},
																																ignoreCase: false,
																																inverted:   false,
																															},
																															&notExpr{
																																pos: position{line: 901, col: 8, offset: 37198},
																																expr: &anyMatcher{
																																	line: 901, col: 9, offset: 37199,
																																},
																															},
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 191, col: 31, offset: 7643},
																													expr: &choiceExpr{
																														pos: position{line: 895, col: 7, offset: 37107},
																														alternatives: []interface{}{
																															&litMatcher{
																																pos:        position{line: 895, col: 7, offset: 37107},
																																val:        " ",
																																ignoreCase: false,
																															},
																															&actionExpr{
																																pos: position{line: 895, col: 13, offset: 37113},
																																run: (*parser).callonParagraph702,
																																expr: &litMatcher{
																																	pos:        position{line: 895, col: 13, offset: 37113},
																																	val:        "\t",
																																	ignoreCase: false,
																																},
																															},
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 191, col: 35, offset: 7647},
																													expr: &litMatcher{
																														pos:        position{line: 191, col: 36, offset: 7648},
																														val:        ",",
																														ignoreCase: false,
																													},
																												},
																												&notExpr{
																													pos: position{line: 191, col: 40, offset: 7652},
																													expr: &litMatcher{
																														pos:        position{line: 191, col: 41, offset: 7653},
																														val:        "]",
																														ignoreCase: false,
																													},
																												},
																												&notExpr{
																													pos: position{line: 191, col: 45, offset: 7657},
																													expr: &litMatcher{
																														pos:        position{line: 191, col: 46, offset: 7658},
																														val:        "#",
																														ignoreCase: false,
																													},
																												},
																												&notExpr{
																													pos: position{line: 191, col: 50, offset: 7662},
																													expr: &litMatcher{
																														pos:        position{line: 191, col: 51, offset: 7663},
																														val:        "=",
																														ignoreCase: false,
																													},
																												},
																												&notExpr{
																													pos: position{line: 191, col: 55, offset: 7667},
																													expr: &choiceExpr{
																														pos: position{line: 470, col: 19, offset: 18925},
																														alternatives: []interface{}{
																															&actionExpr{
																																pos: position{line: 470, col: 19, offset: 18925},
																																run: (*parser).callonParagraph714,
																																expr: &litMatcher{
																																	pos:        position{line: 470, col: 19, offset: 18925},
																																	val:        "TIP",
																																	ignoreCase: false,
																																},
																															},
																															&actionExpr{
																																pos: position{line: 472, col: 5, offset: 18963},
																																run: (*parser).callonParagraph716,
																																expr: &litMatcher{
																																	pos:        position{line: 472, col: 5, offset: 18963},
																																	val:        "NOTE",
																																	ignoreCase: false,
																																},
																															},
																															&actionExpr{
																																pos: position{line: 474, col: 5, offset: 19003},
																																run: (*parser).callonParagraph718,
																																expr: &litMatcher{
																																	pos:        position{line: 474, col: 5, offset: 19003},
																																	val:        "IMPORTANT",
																																	ignoreCase: false,
																																},
																															},
																															&actionExpr{
																																pos: position{line: 476, col: 5, offset: 19053},
																																run: (*parser).callonParagraph720,
																																expr: &litMatcher{
																																	pos:        position{line: 476, col: 5, offset: 19053},
																																	val:        "WARNING",
																																	ignoreCase: false,
																																},
																															},
																															&actionExpr{
																																pos: position{line: 478, col: 5, offset: 19099},
																																run: (*parser).callonParagraph722,
																																expr: &litMatcher{
																																	pos:        position{line: 478, col: 5, offset: 19099},
																																	val:        "CAUTION",
																																	ignoreCase: false,
																																},
																															},
																														},
																													},
																												},
																												&anyMatcher{
																													line: 191, col: 71, offset: 7683,
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																					&zeroOrMoreExpr{
																						pos: position{line: 187, col: 26, offset: 7534},
																						expr: &choiceExpr{
																							pos: position{line: 895, col: 7, offset: 37107},
																							alternatives: []interface{}{
																								&litMatcher{
																									pos:        position{line: 895, col: 7, offset: 37107},
																									val:        " ",
																									ignoreCase: false,
																								},
																								&actionExpr{
																									pos: position{line: 895, col: 13, offset: 37113},
																									run: (*parser).callonParagraph728,
																									expr: &litMatcher{
																										pos:        position{line: 895, col: 13, offset: 37113},
																										val:        "\t",
																										ignoreCase: false,
																									},
																								},
																							},
																						},
																					},
																					&litMatcher{
																						pos:        position{line: 187, col: 30, offset: 7538},
																						val:        "]",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																		&actionExpr{
																			pos: position{line: 195, col: 20, offset: 7852},
																			run: (*parser).callonParagraph731,
																			expr: &seqExpr{
																				pos: position{line: 195, col: 20, offset: 7852},
																				exprs: []interface{}{
																					&litMatcher{
																						pos:        position{line: 195, col: 20, offset: 7852},
																						val:        "[",
																						ignoreCase: false,
																					},
																					&labeledExpr{
																						pos:   position{line: 195, col: 24, offset: 7856},
																						label: "kind",
																						expr: &actionExpr{
																							pos: position{line: 207, col: 14, offset: 8362},
																							run: (*parser).callonParagraph735,
																							expr: &litMatcher{
																								pos:        position{line: 207, col: 14, offset: 8362},
																								val:        "verse",
																								ignoreCase: false,
																							},
																						},
																					},
																					&zeroOrMoreExpr{
																						pos: position{line: 195, col: 41, offset: 7873},
																						expr: &choiceExpr{
																							pos: position{line: 895, col: 7, offset: 37107},
																							alternatives: []interface{}{
																								&litMatcher{
																									pos:        position{line: 895, col: 7, offset: 37107},
																									val:        " ",
																									ignoreCase: false,
																								},
																								&actionExpr{
																									pos: position{line: 895, col: 13, offset: 37113},
																									run: (*parser).callonParagraph740,
																									expr: &litMatcher{
																										pos:        position{line: 895, col: 13, offset: 37113},
																										val:        "\t",
																										ignoreCase: false,
																									},
																								},
																							},
																						},
																					},
																					&litMatcher{
																						pos:        position{line: 195, col: 45, offset: 7877},
																						val:        ",",
																						ignoreCase: false,
																					},
																					&labeledExpr{
																						pos:   position{line: 195, col: 49, offset: 7881},
																						label: "author",
																						expr: &actionExpr{
																							pos: position{line: 211, col: 16, offset: 8421},
																							run: (*parser).callonParagraph744,
																							expr: &zeroOrMoreExpr{
																								pos: position{line: 211, col: 16, offset: 8421},
																								expr: &seqExpr{
																									pos: position{line: 211, col: 17, offset: 8422},
																									exprs: []interface{}{
																										&notExpr{
																											pos: position{line: 211, col: 17, offset: 8422},
																											expr: &choiceExpr{
																												pos: position{line: 903, col: 8, offset: 37209},
																												alternatives: []interface{}{
																													&litMatcher{
																														pos:        position{line: 899, col: 12, offset: 37169},
																														val:        "\r\n",
																														ignoreCase: false,
																													},
																													&charClassMatcher{
																														pos:        position{line: 899, col: 21, offset: 37178},
																														val:        "[\\r\\n]",
																														chars:      []rune{'\r', '\n'},
																														ignoreCase: false,
																														inverted:   false,
																													},
																													&notExpr{
																														pos: position{line: 901, col: 8, offset: 37198},
																														expr: &anyMatcher{
																															line: 901, col: 9, offset: 37199,
																														},
																													},
																												},
																											},
																										},
																										&notExpr{
																											pos: position{line: 211, col: 22, offset: 8427},
																											expr: &litMatcher{
																												pos:        position{line: 211, col: 23, offset: 8428},
																												val:        ",",
																												ignoreCase: false,
																											},
																										},
																										&notExpr{
																											pos: position{line: 211, col: 27, offset: 8432},
																											expr: &litMatcher{
																												pos:        position{line: 211, col: 28, offset: 8433},
																												val:        "]",
																												ignoreCase: false,
																											},
																										},
																										&anyMatcher{
																											line: 211, col: 32, offset: 8437,
																										},
																									},
																								},
																							},
																						},
																					},
																					&litMatcher{
																						pos:        position{line: 195, col: 70, offset: 7902},
																						val:        ",",
																						ignoreCase: false,
																					},
																					&labeledExpr{
																						pos:   position{line: 195, col: 74, offset: 7906},
																						label: "title",
																						expr: &actionExpr{
																							pos: position{line: 215, col: 15, offset: 8491},
																							run: (*parser).callonParagraph760,
																							expr: &zeroOrMoreExpr{
																								pos: position{line: 215, col: 15, offset: 8491},
																								expr: &seqExpr{
																									pos: position{line: 215, col: 16, offset: 8492},
																									exprs: []interface{}{
																										&notExpr{
																											pos: position{line: 215, col: 16, offset: 8492},
																											expr: &choiceExpr{
																												pos: position{line: 903, col: 8, offset: 37209},
																												alternatives: []interface{}{
																													&litMatcher{
																														pos:        position{line: 899, col: 12, offset: 37169},
																														val:        "\r\n",
																														ignoreCase: false,
																													},
																													&charClassMatcher{
																														pos:        position{line: 899, col: 21, offset: 37178},
																														val:        "[\\r\\n]",
																														chars:      []rune{'\r', '\n'},
																														ignoreCase: false,
																														inverted:   false,
																													},
																													&notExpr{
																														pos: position{line: 901, col: 8, offset: 37198},
																														expr: &anyMatcher{
																															line: 901, col: 9, offset: 37199,
																														},
																													},
																												},
																											},
																										},
																										&notExpr{
																											pos: position{line: 215, col: 21, offset: 8497},
																											expr: &litMatcher{
																												pos:        position{line: 215, col: 22, offset: 8498},
																												val:        ",",
																												ignoreCase: false,
																											},
																										},
																										&notExpr{
																											pos: position{line: 215, col: 26, offset: 8502},
																											expr: &litMatcher{
																												pos:        position{line: 215, col: 27, offset: 8503},
																												val:        "]",
																												ignoreCase: false,
																											},
																										},
																										&anyMatcher{
																											line: 215, col: 31, offset: 8507,
																										},
																									},
																								},
																							},
																						},
																					},
																					&litMatcher{
																						pos:        position{line: 195, col: 93, offset: 7925},
																						val:        "]",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																		&actionExpr{
																			pos: position{line: 199, col: 5, offset: 8068},
																			run: (*parser).callonParagraph775,
																			expr: &seqExpr{
																				pos: position{line: 199, col: 5, offset: 8068},
																				exprs: []interface{}{
																					&litMatcher{
																						pos:        position{line: 199, col: 5, offset: 8068},
																						val:        "[",
																						ignoreCase: false,
																					},
																					&labeledExpr{
																						pos:   position{line: 199, col: 9, offset: 8072},
																						label: "kind",
																						expr: &actionExpr{
																							pos: position{line: 207, col: 14, offset: 8362},
																							run: (*parser).callonParagraph779,
																							expr: &litMatcher{
																								pos:        position{line: 207, col: 14, offset: 8362},
																								val:        "verse",
																								ignoreCase: false,
																							},
																						},
																					},
																					&zeroOrMoreExpr{
																						pos: position{line: 199, col: 26, offset: 8089},
																						expr: &choiceExpr{
																							pos: position{line: 895, col: 7, offset: 37107},
																							alternatives: []interface{}{
																								&litMatcher{
																									pos:        position{line: 895, col: 7, offset: 37107},
																									val:        " ",
																									ignoreCase: false,
																								},
																								&actionExpr{
																									pos: position{line: 895, col: 13, offset: 37113},
																									run: (*parser).callonParagraph784,
																									expr: &litMatcher{
																										pos:        position{line: 895, col: 13, offset: 37113},
																										val:        "\t",
																										ignoreCase: false,
																									},
																								},
																							},
																						},
																					},
																					&litMatcher{
																						pos:        position{line: 199, col: 30, offset: 8093},
																						val:        ",",
																						ignoreCase: false,
																					},
																					&labeledExpr{
																						pos:   position{line: 199, col: 34, offset: 8097},
																						label: "author",
																						expr: &actionExpr{
																							pos: position{line: 211, col: 16, offset: 8421},
																							run: (*parser).callonParagraph788,
																							expr: &zeroOrMoreExpr{
																								pos: position{line: 211, col: 16, offset: 8421},
																								expr: &seqExpr{
																									pos: position{line: 211, col: 17, offset: 8422},
																									exprs: []interface{}{
																										&notExpr{
																											pos: position{line: 211, col: 17, offset: 8422},
																											expr: &choiceExpr{
																												pos: position{line: 903, col: 8, offset: 37209},
																												alternatives: []interface{}{
																													&litMatcher{
																														pos:        position{line: 899, col: 12, offset: 37169},
																														val:        "\r\n",
																														ignoreCase: false,
																													},
																													&charClassMatcher{
																														pos:        position{line: 899, col: 21, offset: 37178},
																														val:        "[\\r\\n]",
																														chars:      []rune{'\r', '\n'},
																														ignoreCase: false,
																														inverted:   false,
																													},
																													&notExpr{
																														pos: position{line: 901, col: 8, offset: 37198},
																														expr: &anyMatcher{
																															line: 901, col: 9, offset: 37199,
																														},
																													},
																												},
																											},
																										},
																										&notExpr{
																											pos: position{line: 211, col: 22, offset: 8427},
																											expr: &litMatcher{
																												pos:        position{line: 211, col: 23, offset: 8428},
																												val:        ",",
																												ignoreCase: false,
																											},
																										},
																										&notExpr{
																											pos: position{line: 211, col: 27, offset: 8432},
																											expr: &litMatcher{
																												pos:        position{line: 211, col: 28, offset: 8433},
																												val:        "]",
																												ignoreCase: false,
																											},
																										},
																										&anyMatcher{
																											line: 211, col: 32, offset: 8437,
																										},
																									},
																								},
																							},
																						},
																					},
																					&litMatcher{
																						pos:        position{line: 199, col: 55, offset: 8118},
																						val:        "]",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																		&actionExpr{
																			pos: position{line: 203, col: 5, offset: 8249},
																			run: (*parser).callonParagraph803,
																			expr: &seqExpr{
																				pos: position{line: 203, col: 5, offset: 8249},
																				exprs: []interface{}{
																					&litMatcher{
																						pos:        position{line: 203, col: 5, offset: 8249},
																						val:        "[",
																						ignoreCase: false,
																					},
																					&labeledExpr{
																						pos:   position{line: 203, col: 9, offset: 8253},
																						label: "kind",
																						expr: &actionExpr{
																							pos: position{line: 207, col: 14, offset: 8362},
																							run: (*parser).callonParagraph807,
																							expr: &litMatcher{
																								pos:        position{line: 207, col: 14, offset: 8362},
																								val:        "verse",
																								ignoreCase: false,
																							},
																						},
																					},
																					&zeroOrMoreExpr{
																						pos: position{line: 203, col: 26, offset: 8270},
																						expr: &choiceExpr{
																							pos: position{line: 895, col: 7, offset: 37107},
																							alternatives: []interface{}{
																								&litMatcher{
																									pos:        position{line: 895, col: 7, offset: 37107},
																									val:        " ",
																									ignoreCase: false,
																								},
																								&actionExpr{
																									pos: position{line: 895, col: 13, offset: 37113},
																									run: (*parser).callonParagraph812,
																									expr: &litMatcher{
																										pos:        position{line: 895, col: 13, offset: 37113},
																										val:        "\t",
																										ignoreCase: false,
																									},
																								},
																							},
																						},
																					},
																					&litMatcher{
																						pos:        position{line: 203, col: 30, offset: 8274},
																						val:        "]",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																},
															},
															&zeroOrMoreExpr{
																pos: position{line: 125, col: 65, offset: 5388},
																expr: &choiceExpr{
																	pos: position{line: 895, col: 7, offset: 37107},
																	alternatives: []interface{}{
																		&litMatcher{
																			pos:        position{line: 895, col: 7, offset: 37107},
																			val:        " ",
																			ignoreCase: false,
																		},
																		&actionExpr{
																			pos: position{line: 895, col: 13, offset: 37113},
																			run: (*parser).callonParagraph818,
																			expr: &litMatcher{
																				pos:        position{line: 895, col: 13, offset: 37113},
																				val:        "\t",
																				ignoreCase: false,
																			},
																		},
																	},
																},
															},
															&choiceExpr{
																pos: position{line: 903, col: 8, offset: 37209},
																alternatives: []interface{}{
																	&litMatcher{
																		pos:        position{line: 899, col: 12, offset: 37169},
																		val:        "\r\n",
																		ignoreCase: false,
																	},
																	&charClassMatcher{
																		pos:        position{line: 899, col: 21, offset: 37178},
																		val:        "[\\r\\n]",
																		chars:      []rune{'\r', '\n'},
																		ignoreCase: false,
																		inverted:   false,
																	},
																	&notExpr{
																		pos: position{line: 901, col: 8, offset: 37198},
																		expr: &anyMatcher{
																			line: 901, col: 9, offset: 37199,
																		},
																	},
																},
															},
														},
													},
												},
												&actionExpr{
													pos: position{line: 120, col: 21, offset: 5039},
													run: (*parser).callonParagraph825,
													expr: &seqExpr{
														pos: position{line: 120, col: 21, offset: 5039},
														exprs: []interface{}{
															&labeledExpr{
																pos:   position{line: 120, col: 21, offset: 5039},
																label: "attr",
																expr: &choiceExpr{
																	pos: position{line: 120, col: 27, offset: 5045},
																	alternatives: []interface{}{
																		&actionExpr{
																			pos: position{line: 129, col: 14, offset: 5496},
																			run: (*parser).callonParagraph829,
																			expr: &labeledExpr{
																				pos:   position{line: 129, col: 14, offset: 5496},
																				label: "id",
																				expr: &actionExpr{
																					pos: position{line: 135, col: 20, offset: 5626},
																					run: (*parser).callonParagraph831,
																					expr: &seqExpr{
																						pos: position{line: 135, col: 20, offset: 5626},
																						exprs: []interface{}{
																							&litMatcher{
																								pos:        position{line: 135, col: 20, offset: 5626},
																								val:        "[[",
																								ignoreCase: false,
																							},
																							&labeledExpr{
																								pos:   position{line: 135, col: 25, offset: 5631},
																								label: "id",
																								expr: &actionExpr{
																									pos: position{line: 883, col: 7, offset: 36866},
																									run: (*parser).callonParagraph835,
																									expr: &oneOrMoreExpr{
																										pos: position{line: 883, col: 7, offset: 36866},
																										expr: &seqExpr{
																											pos: position{line: 883, col: 8, offset: 36867},
																											exprs: []interface{}{
																												&notExpr{
																													pos: position{line: 883, col: 8, offset: 36867},
																													expr: &choiceExpr{
																														pos: position{line: 899, col: 12, offset: 37169},
																														alternatives: []interface{}{
																															&litMatcher{
																																pos:        position{line: 899, col: 12, offset: 37169},
																																val:        "\r\n",
																																ignoreCase: false,
																															},
																															&charClassMatcher{
																																pos:        position{line: 899, col: 21, offset: 37178},
																																val:        "[\\r\\n]",
																																chars:      []rune{'\r', '\n'},
																																ignoreCase: false,
																																inverted:   false,
																															},
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 883, col: 17, offset: 36876},
																													expr: &choiceExpr{
																														pos: position{line: 895, col: 7, offset: 37107},
																														alternatives: []interface{}{
																															&litMatcher{
																																pos:        position{line: 895, col: 7, offset: 37107},
																																val:        " ",
																																ignoreCase: false,
																															},
																															&actionExpr{
																																pos: position{line: 895, col: 13, offset: 37113},
																																run: (*parser).callonParagraph845,
																																expr: &litMatcher{
																																	pos:        position{line: 895, col: 13, offset: 37113},
																																	val:        "\t",
																																	ignoreCase: false,
																																},
																															},
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 883, col: 21, offset: 36880},
																													expr: &litMatcher{
																														pos:        position{line: 883, col: 22, offset: 36881},
																														val:        "[",
																														ignoreCase: false,
																													},
																												},
																												&notExpr{
																													pos: position{line: 883, col: 26, offset: 36885},
																													expr: &litMatcher{
																														pos:        position{line: 883, col: 27, offset: 36886},
																														val:        "]",
																														ignoreCase: false,
																													},
																												},
																												&notExpr{
																													pos: position{line: 883, col: 31, offset: 36890},
																													expr: &litMatcher{
																														pos:        position{line: 883, col: 32, offset: 36891},
																														val:        "<<",
																														ignoreCase: false,
																													},
																												},
																												&notExpr{
																													pos: position{line: 883, col: 37, offset: 36896},
																													expr: &litMatcher{
																														pos:        position{line: 883, col: 38, offset: 36897},
																														val:        ">>",
																														ignoreCase: false,
																													},
																												},
																												&anyMatcher{
																													line: 883, col: 42, offset: 36901,
																												},
																											},
																										},
																									},
																								},
																							},
																							&litMatcher{
																								pos:        position{line: 135, col: 33, offset: 5639},
																								val:        "]]",
																								ignoreCase: false,
																							},
																						},
																					},
																				},
																			},
																		},
																		&actionExpr{
																			pos: position{line: 131, col: 5, offset: 5542},
																			run: (*parser).callonParagraph857,
																			expr: &seqExpr{
																				pos: position{line: 131, col: 5, offset: 5542},
																				exprs: []interface{}{
																					&litMatcher{
																						pos:        position{line: 131, col: 5, offset: 5542},
																						val:        "[#",
																						ignoreCase: false,
																					},
																					&labeledExpr{
																						pos:   position{line: 131, col: 10, offset: 5547},
																						label: "id",
																						expr: &actionExpr{
																							pos: position{line: 883, col: 7, offset: 36866},
																							run: (*parser).callonParagraph861,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 883, col: 7, offset: 36866},
																								expr: &seqExpr{
																									pos: position{line: 883, col: 8, offset: 36867},
																									exprs: []interface{}{
																										&notExpr{
																											pos: position{line: 883, col: 8, offset: 36867},
																											expr: &choiceExpr{
																												pos: position{line: 899, col: 12, offset: 37169},
																												alternatives: []interface{}{
																													&litMatcher{
																														pos:        position{line: 899, col: 12, offset: 37169},
																														val:        "\r\n",
																														ignoreCase: false,
																													},
																													&charClassMatcher{
																														pos:        position{line: 899, col: 21, offset: 37178},
																														val:        "[\\r\\n]",
																														chars:      []rune{'\r', '\n'},
																														ignoreCase: false,
																														inverted:   false,
																													},
																												},
																											},
																										},
																										&notExpr{
																											pos: position{line: 883, col: 17, offset: 36876},
																											expr: &choiceExpr{
																												pos: position{line: 895, col: 7, offset: 37107},
																												alternatives: []interface{}{
																													&litMatcher{
																														pos:        position{line: 895, col: 7, offset: 37107},
																														val:        " ",
																														ignoreCase: false,
																													},
																													&actionExpr{
																														pos: position{line: 895, col: 13, offset: 37113},
																														run: (*parser).callonParagraph871,
																														expr: &litMatcher{
																															pos:        position{line: 895, col: 13, offset: 37113},
																															val:        "\t",
																															ignoreCase: false,
																														},
																													},
																												},
																											},
																										},
																										&notExpr{
																											pos: position{line: 883, col: 21, offset: 36880},
																											expr: &litMatcher{
																												pos:        position{line: 883, col: 22, offset: 36881},
																												val:        "[",
																												ignoreCase: false,
																											},
																										},
																										&notExpr{
																											pos: position{line: 883, col: 26, offset: 36885},
																											expr: &litMatcher{
																												pos:        position{line: 883, col: 27, offset: 36886},
																												val:        "]",
																												ignoreCase: false,
																											},
																										},
																										&notExpr{
																											pos: position{line: 883, col: 31, offset: 36890},
																											expr: &litMatcher{
																												pos:        position{line: 883, col: 32, offset: 36891},
																												val:        "<<",
																												ignoreCase: false,
																											},
																										},
																										&notExpr{
																											pos: position{line: 883, col: 37, offset: 36896},
																											expr: &litMatcher{
																												pos:        position{line: 883, col: 38, offset: 36897},
																												val:        ">>",
																												ignoreCase: false,
																											},
																										},
																										&anyMatcher{
																											line: 883, col: 42, offset: 36901,
																										},
																									},
																								},
																							},
																						},
																					},
																					&litMatcher{
																						pos:        position{line: 131, col: 18, offset: 5555},
																						val:        "]",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																		&actionExpr{
																			pos: position{line: 141, col: 17, offset: 5848},
																			run: (*parser).callonParagraph883,
																			expr: &seqExpr{
																				pos: position{line: 141, col: 17, offset: 5848},
																				exprs: []interface{}{
																					&litMatcher{
																						pos:        position{line: 141, col: 17, offset: 5848},
																						val:        ".",
																						ignoreCase: false,
																					},
																					&notExpr{
																						pos: position{line: 141, col: 21, offset: 5852},
																						expr: &litMatcher{
																							pos:        position{line: 141, col: 22, offset: 5853},
																							val:        ".",
																							ignoreCase: false,
																						},
																					},
																					&notExpr{
																						pos: position{line: 141, col: 26, offset: 5857},
																						expr: &choiceExpr{
																							pos: position{line: 895, col: 7, offset: 37107},
																							alternatives: []interface{}{
																								&litMatcher{
																									pos:        position{line: 895, col: 7, offset: 37107},
																									val:        " ",
																									ignoreCase: false,
																								},
																								&actionExpr{
																									pos: position{line: 895, col: 13, offset: 37113},
																									run: (*parser).callonParagraph891,
																									expr: &litMatcher{
																										pos:        position{line: 895, col: 13, offset: 37113},
																										val:        "\t",
																										ignoreCase: false,
																									},
																								},
																							},
																						},
																					},
																					&labeledExpr{
																						pos:   position{line: 141, col: 30, offset: 5861},
																						label: "title",
																						expr: &oneOrMoreExpr{
																							pos: position{line: 141, col: 36, offset: 5867},
																							expr: &seqExpr{
																								pos: position{line: 141, col: 37, offset: 5868},
																								exprs: []interface{}{
																									&notExpr{
																										pos: position{line: 141, col: 37, offset: 5868},
																										expr: &choiceExpr{
																											pos: position{line: 899, col: 12, offset: 37169},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 899, col: 12, offset: 37169},
																													val:        "\r\n",
																													ignoreCase: false,
																												},
																												&charClassMatcher{
																													pos:        position{line: 899, col: 21, offset: 37178},
																													val:        "[\\r\\n]",
																													chars:      []rune{'\r', '\n'},
																													ignoreCase: false,
																													inverted:   false,
																												},
																											},
																										},
																									},
																									&anyMatcher{
																										line: 141, col: 46, offset: 5877,
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																		&actionExpr{
																			pos: position{line: 147, col: 16, offset: 6051},
																			run: (*parser).callonParagraph901,
																			expr: &seqExpr{
																				pos: position{line: 147, col: 16, offset: 6051},
																				exprs: []interface{}{
																					&litMatcher{
																						pos:        position{line: 147, col: 16, offset: 6051},
																						val:        "[.",
																						ignoreCase: false,
																					},
																					&notExpr{
																						pos: position{line: 147, col: 21, offset: 6056},
																						expr: &choiceExpr{
																							pos: position{line: 895, col: 7, offset: 37107},
																							alternatives: []interface{}{
																								&litMatcher{
																									pos:        position{line: 895, col: 7, offset: 37107},
																									val:        " ",
																									ignoreCase: false,
																								},
																								&actionExpr{
																									pos: position{line: 895, col: 13, offset: 37113},
																									run: (*parser).callonParagraph907,
																									expr: &litMatcher{
																										pos:        position{line: 895, col: 13, offset: 37113},
																										val:        "\t",
																										ignoreCase: false,
																									},
																								},
																							},
																						},
																					},
																					&labeledExpr{
																						pos:   position{line: 147, col: 25, offset: 6060},
																						label: "role",
																						expr: &oneOrMoreExpr{
																							pos: position{line: 147, col: 30, offset: 6065},
																							expr: &seqExpr{
																								pos: position{line: 147, col: 31, offset: 6066},
																								exprs: []interface{}{
																									&notExpr{
																										pos: position{line: 147, col: 31, offset: 6066},
																										expr: &choiceExpr{
																											pos: position{line: 899, col: 12, offset: 37169},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 899, col: 12, offset: 37169},
																													val:        "\r\n",
																													ignoreCase: false,
																												},
																												&charClassMatcher{
																													pos:        position{line: 899, col: 21, offset: 37178},
																													val:        "[\\r\\n]",
																													chars:      []rune{'\r', '\n'},
																													ignoreCase: false,
																													inverted:   false,
																												},
																											},
																										},
																									},
																									&notExpr{
																										pos: position{line: 147, col: 40, offset: 6075},
																										expr: &litMatcher{
																											pos:        position{line: 147, col: 41, offset: 6076},
																											val:        "]",
																											ignoreCase: false,
																										},
																									},
																									&anyMatcher{
																										line: 147, col: 45, offset: 6080,
																									},
																								},
																							},
																						},
																					},
																					&litMatcher{
																						pos:        position{line: 147, col: 49, offset: 6084},
																						val:        "]",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																		&actionExpr{
																			pos: position{line: 152, col: 30, offset: 6255},
																			run: (*parser).callonParagraph920,
																			expr: &seqExpr{
																				pos: position{line: 152, col: 30, offset: 6255},
																				exprs: []interface{}{
																					&litMatcher{
																						pos:        position{line: 152, col: 30, offset: 6255},
																						val:        "[",
																						ignoreCase: false,
																					},
																					&labeledExpr{
																						pos:   position{line: 152, col: 34, offset: 6259},
																						label: "k",
																						expr: &choiceExpr{
																							pos: position{line: 470, col: 19, offset: 18925},
																							alternatives: []interface{}{
																								&actionExpr{
																									pos: position{line: 470, col: 19, offset: 18925},
																									run: (*parser).callonParagraph925,
																									expr: &litMatcher{
																										pos:        position{line: 470, col: 19, offset: 18925},
																										val:        "TIP",
																										ignoreCase: false,
																									},
																								},
																								&actionExpr{
																									pos: position{line: 472, col: 5, offset: 18963},
																									run: (*parser).callonParagraph927,
																									expr: &litMatcher{
																										pos:        position{line: 472, col: 5, offset: 18963},
																										val:        "NOTE",
																										ignoreCase: false,
																									},
																								},
																								&actionExpr{
																									pos: position{line: 474, col: 5, offset: 19003},
																									run: (*parser).callonParagraph929,
																									expr: &litMatcher{
																										pos:        position{line: 474, col: 5, offset: 19003},
																										val:        "IMPORTANT",
																										ignoreCase: false,
																									},
																								},
																								&actionExpr{
																									pos: position{line: 476, col: 5, offset: 19053},
																									run: (*parser).callonParagraph931,
																									expr: &litMatcher{
																										pos:        position{line: 476, col: 5, offset: 19053},
																										val:        "WARNING",
																										ignoreCase: false,
																									},
																								},
																								&actionExpr{
																									pos: position{line: 478, col: 5, offset: 19099},
																									run: (*parser).callonParagraph933,
																									expr: &litMatcher{
																										pos:        position{line: 478, col: 5, offset: 19099},
																										val:        "CAUTION",
																										ignoreCase: false,
																									},
																								},
																							},
																						},
																					},
																					&litMatcher{
																						pos:        position{line: 152, col: 53, offset: 6278},
																						val:        "]",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																		&actionExpr{
																			pos: position{line: 175, col: 21, offset: 7013},
																			run: (*parser).callonParagraph936,
																			expr: &litMatcher{
																				pos:        position{line: 175, col: 21, offset: 7013},
																				val:        "[horizontal]",
																				ignoreCase: false,
																			},
																		},
																		&actionExpr{
																			pos: position{line: 157, col: 19, offset: 6439},
																			run: (*parser).callonParagraph938,
																			expr: &seqExpr{
																				pos: position{line: 157, col: 19, offset: 6439},
																				exprs: []interface{}{
																					&litMatcher{
																						pos:        position{line: 157, col: 19, offset: 6439},
																						val:        "[",
																						ignoreCase: false,
																					},
																					&notExpr{
																						pos: position{line: 157, col: 23, offset: 6443},
																						expr: &choiceExpr{
																							pos: position{line: 895, col: 7, offset: 37107},
																							alternatives: []interface{}{
																								&litMatcher{
																									pos:        position{line: 895, col: 7, offset: 37107},
																									val:        " ",
																									ignoreCase: false,
																								},
																								&actionExpr{
																									pos: position{line: 895, col: 13, offset: 37113},
																									run: (*parser).callonParagraph944,
																									expr: &litMatcher{
																										pos:        position{line: 895, col: 13, offset: 37113},
																										val:        "\t",
																										ignoreCase: false,
																									},
																								},
																							},
																						},
																					},
																					&labeledExpr{
																						pos:   position{line: 157, col: 27, offset: 6447},
																						label: "attributes",
																						expr: &zeroOrMoreExpr{
																							pos: position{line: 157, col: 38, offset: 6458},
																							expr: &choiceExpr{
																								pos: position{line: 161, col: 21, offset: 6571},
																								alternatives: []interface{}{
																									&actionExpr{
																										pos: position{line: 161, col: 21, offset: 6571},
																										run: (*parser).callonParagraph949,
																										expr: &seqExpr{
																											pos: position{line: 161, col: 21, offset: 6571},
																											exprs: []interface{}{
																												&labeledExpr{
																													pos:   position{line: 161, col: 21, offset: 6571},
																													label: "key",
																													expr: &actionExpr{
																														pos: position{line: 167, col: 17, offset: 6861},
																														run: (*parser).callonParagraph952,
																														expr: &seqExpr{
																															pos: position{line: 167, col: 17, offset: 6861},
																															exprs: []interface{}{
																																&notExpr{
																																	pos: position{line: 167, col: 17, offset: 6861},
																																	expr: &actionExpr{
																																		pos: position{line: 207, col: 14, offset: 8362},
																																		run: (*parser).callonParagraph955,
																																		expr: &litMatcher{
																																			pos:        position{line: 207, col: 14, offset: 8362},
																																			val:        "verse",
																																			ignoreCase: false,
																																		},
																																	},
																																},
																																&labeledExpr{
																																	pos:   position{line: 167, col: 28, offset: 6872},
																																	label: "key",
																																	expr: &oneOrMoreExpr{
																																		pos: position{line: 167, col: 32, offset: 6876},
																																		expr: &seqExpr{
																																			pos: position{line: 167, col: 33, offset: 6877},
																																			exprs: []interface{}{
																																				&notExpr{
																																					pos: position{line: 167, col: 33, offset: 6877},
																																					expr: &litMatcher{
																																						pos:        position{line: 167, col: 34, offset: 6878},
																																						val:        "=",
																																						ignoreCase: false,
																																					},
																																				},
																																				&notExpr{
																																					pos: position{line: 167, col: 38, offset: 6882},
																																					expr: &litMatcher{
																																						pos:        position{line: 167, col: 39, offset: 6883},
																																						val:        ",",
																																						ignoreCase: false,
																																					},
																																				},
																																				&notExpr{
																																					pos: position{line: 167, col: 43, offset: 6887},
																																					expr: &litMatcher{
																																						pos:        position{line: 167, col: 44, offset: 6888},
																																						val:        "]",
																																						ignoreCase: false,
																																					},
																																				},
																																				&anyMatcher{
																																					line: 167, col: 48, offset: 6892,
																																				},
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																												&litMatcher{
																													pos:        position{line: 161, col: 40, offset: 6590},
																													val:        "=",
																													ignoreCase: false,
																												},
																												&labeledExpr{
																													pos:   position{line: 161, col: 44, offset: 6594},
																													label: "value",
																													expr: &actionExpr{
																														pos: position{line: 171, col: 19, offset: 6940},
																														run: (*parser).callonParagraph969,
																														expr: &labeledExpr{
																															pos:   position{line: 171, col: 19, offset: 6940},
																															label: "value",
																															expr: &zeroOrMoreExpr{
																																pos: position{line: 171, col: 25, offset: 6946},
																																expr: &seqExpr{
																																	pos: position{line: 171, col: 26, offset: 6947},
																																	exprs: []interface{}{
																																		&notExpr{
																																			pos: position{line: 171, col: 26, offset: 6947},
																																			expr: &litMatcher{
																																				pos:        position{line: 171, col: 27, offset: 6948},
																																				val:        "=",
																																				ignoreCase: false,
																																			},
																																		},
																																		&notExpr{
																																			pos: position{line: 171, col: 31, offset: 6952},
																																			expr: &litMatcher{
																																				pos:        position{line: 171, col: 32, offset: 6953},
																																				val:        ",",
																																				ignoreCase: false,
																																			},
																																		},
																																		&notExpr{
																																			pos: position{line: 171, col: 36, offset: 6957},
																																			expr: &litMatcher{
																																				pos:        position{line: 171, col: 37, offset: 6958},
																																				val:        "]",
																																				ignoreCase: false,
																																			},
																																		},
																																		&anyMatcher{
																																			line: 171, col: 41, offset: 6962,
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																												&zeroOrOneExpr{
																													pos: position{line: 161, col: 67, offset: 6617},
																													expr: &litMatcher{
																														pos:        position{line: 161, col: 67, offset: 6617},
																														val:        ",",
																														ignoreCase: false,
																													},
																												},
																												&zeroOrMoreExpr{
																													pos: position{line: 161, col: 72, offset: 6622},
																													expr: &choiceExpr{
																														pos: position{line: 895, col: 7, offset: 37107},
																														alternatives: []interface{}{
																															&litMatcher{
																																pos:        position{line: 895, col: 7, offset: 37107},
																																val:        " ",
																																ignoreCase: false,
																															},
																															&actionExpr{
																																pos: position{line: 895, col: 13, offset: 37113},
																																run: (*parser).callonParagraph985,
																																expr: &litMatcher{
																																	pos:        position{line: 895, col: 13, offset: 37113},
																																	val:        "\t",
																																	ignoreCase: false,
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																									&actionExpr{
																										pos: position{line: 163, col: 5, offset: 6729},
																										run: (*parser).callonParagraph987,
																										expr: &seqExpr{
																											pos: position{line: 163, col: 5, offset: 6729},
																											exprs: []interface{}{
																												&labeledExpr{
																													pos:   position{line: 163, col: 5, offset: 6729},
																													label: "key",
																													expr: &actionExpr{
																														pos: position{line: 167, col: 17, offset: 6861},
																														run: (*parser).callonParagraph990,
																														expr: &seqExpr{
																															pos: position{line: 167, col: 17, offset: 6861},
																															exprs: []interface{}{
																																&notExpr{
																																	pos: position{line: 167, col: 17, offset: 6861},
																																	expr: &actionExpr{
																																		pos: position{line: 207, col: 14, offset: 8362},
																																		run: (*parser).callonParagraph993,
																																		expr: &litMatcher{
																																			pos:        position{line: 207, col: 14, offset: 8362},
																																			val:        "verse",
																																			ignoreCase: false,
																																		},
																																	},
																																},
																																&labeledExpr{
																																	pos:   position{line: 167, col: 28, offset: 6872},
																																	label: "key",
																																	expr: &oneOrMoreExpr{
																																		pos: position{line: 167, col: 32, offset: 6876},
																																		expr: &seqExpr{
																																			pos: position{line: 167, col: 33, offset: 6877},
																																			exprs: []interface{}{
																																				&notExpr{
																																					pos: position{line: 167, col: 33, offset: 6877},
																																					expr: &litMatcher{
																																						pos:        position{line: 167, col: 34, offset: 6878},
																																						val:        "=",
																																						ignoreCase: false,
																																					},
																																				},
																																				&notExpr{
																																					pos: position{line: 167, col: 38, offset: 6882},
																																					expr: &litMatcher{
																																						pos:        position{line: 167, col: 39, offset: 6883},
																																						val:        ",",
																																						ignoreCase: false,
																																					},
																																				},
																																				&notExpr{
																																					pos: position{line: 167, col: 43, offset: 6887},
																																					expr: &litMatcher{
																																						pos:        position{line: 167, col: 44, offset: 6888},
																																						val:        "]",
																																						ignoreCase: false,
																																					},
																																				},
																																				&anyMatcher{
																																					line: 167, col: 48, offset: 6892,
																																				},
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																												&zeroOrOneExpr{
																													pos: position{line: 163, col: 24, offset: 6748},
																													expr: &litMatcher{
																														pos:        position{line: 163, col: 24, offset: 6748},
																														val:        ",",
																														ignoreCase: false,
																													},
																												},
																												&zeroOrMoreExpr{
																													pos: position{line: 163, col: 29, offset: 6753},
																													expr: &choiceExpr{
																														pos: position{line: 895, col: 7, offset: 37107},
																														alternatives: []interface{}{
																															&litMatcher{
																																pos:        position{line: 895, col: 7, offset: 37107},
																																val:        " ",
																																ignoreCase: false,
																															},
																															&actionExpr{
																																pos: position{line: 895, col: 13, offset: 37113},
																																run: (*parser).callonParagraph1010,
																																expr: &litMatcher{
																																	pos:        position{line: 895, col: 13, offset: 37113},
																																	val:        "\t",
																																	ignoreCase: false,
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																					&litMatcher{
																						pos:        position{line: 157, col: 59, offset: 6479},
																						val:        "]",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																},
															},
															&zeroOrMoreExpr{
																pos: position{line: 120, col: 131, offset: 5149},
																expr: &choiceExpr{
																	pos: position{line: 895, col: 7, offset: 37107},
																	alternatives: []interface{}{
																		&litMatcher{
																			pos:        position{line: 895, col: 7, offset: 37107},
																			val:        " ",
																			ignoreCase: false,
																		},
																		&actionExpr{
																			pos: position{line: 895, col: 13, offset: 37113},
																			run: (*parser).callonParagraph1016,
																			expr: &litMatcher{
																				pos:        position{line: 895, col: 13, offset: 37113},
																				val:        "\t",
																				ignoreCase: false,
																			},
																		},
																	},
																},
															},
															&choiceExpr{
																pos: position{line: 903, col: 8, offset: 37209},
																alternatives: []interface{}{
																	&litMatcher{
																		pos:        position{line: 899, col: 12, offset: 37169},
																		val:        "\r\n",
																		ignoreCase: false,
																	},
																	&charClassMatcher{
																		pos:        position{line: 899, col: 21, offset: 37178},
																		val:        "[\\r\\n]",
																		chars:      []rune{'\r', '\n'},
																		ignoreCase: false,
																		inverted:   false,
																	},
																	&notExpr{
																		pos: position{line: 901, col: 8, offset: 37198},
																		expr: &anyMatcher{
																			line: 901, col: 9, offset: 37199,
																		},
																	},
																},
															},
														},
													},
												},
											},
										},
									},
								},
								&notExpr{
									pos: position{line: 493, col: 38, offset: 19775},
									expr: &seqExpr{
										pos: position{line: 493, col: 40, offset: 19777},
										exprs: []interface{}{
											&oneOrMoreExpr{
												pos: position{line: 493, col: 40, offset: 19777},
												expr: &litMatcher{
													pos:        position{line: 493, col: 40, offset: 19777},
													val:        "=",
													ignoreCase: false,
												},
											},
											&oneOrMoreExpr{
												pos: position{line: 493, col: 45, offset: 19782},
												expr: &choiceExpr{
													pos: position{line: 895, col: 7, offset: 37107},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 895, col: 7, offset: 37107},
															val:        " ",
															ignoreCase: false,
														},
														&actionExpr{
															pos: position{line: 895, col: 13, offset: 37113},
															run: (*parser).callonParagraph1030,
															expr: &litMatcher{
																pos:        position{line: 895, col: 13, offset: 37113},
																val:        "\t",
																ignoreCase: false,
															},
														},
													},
												},
											},
											&notExpr{
												pos: position{line: 493, col: 49, offset: 19786},
												expr: &choiceExpr{
													pos: position{line: 899, col: 12, offset: 37169},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 899, col: 12, offset: 37169},
															val:        "\r\n",
															ignoreCase: false,
														},
														&charClassMatcher{
															pos:        position{line: 899, col: 21, offset: 37178},
															val:        "[\\r\\n]",
															chars:      []rune{'\r', '\n'},
															ignoreCase: false,
															inverted:   false,
														},
													},
												},
											},
										},
									},
								},
								&labeledExpr{
									pos:   position{line: 493, col: 59, offset: 19796},
									label: "lines",
									expr: &oneOrMoreExpr{
										pos: position{line: 493, col: 65, offset: 19802},
										expr: &ruleRefExpr{
											pos:  position{line: 493, col: 66, offset: 19803},
											name: "InlineElements",
										},
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "InlineElements",
			pos:  position{line: 499, col: 1, offset: 20012},
			expr: &choiceExpr{
				pos: position{line: 500, col: 5, offset: 20035},
				alternatives: []interface{}{
					&actionExpr{
						pos: position{line: 500, col: 5, offset: 20035},
						run: (*parser).callonInlineElements2,
						expr: &labeledExpr{
							pos:   position{line: 500, col: 5, offset: 20035},
							label: "comment",
							expr: &actionExpr{
								pos: position{line: 826, col: 22, offset: 34816},
								run: (*parser).callonInlineElements4,
								expr: &seqExpr{
									pos: position{line: 826, col: 22, offset: 34816},
									exprs: []interface{}{
										&notExpr{
											pos: position{line: 826, col: 22, offset: 34816},
											expr: &litMatcher{
												pos:        position{line: 816, col: 26, offset: 34419},
												val:        "////",
												ignoreCase: false,
											},
										},
										&litMatcher{
											pos:        position{line: 826, col: 45, offset: 34839},
											val:        "//",
											ignoreCase: false,
										},
										&labeledExpr{
											pos:   position{line: 826, col: 50, offset: 34844},
											label: "content",
											expr: &zeroOrMoreExpr{
												pos: position{line: 826, col: 58, offset: 34852},
												expr: &seqExpr{
													pos: position{line: 826, col: 59, offset: 34853},
													exprs: []interface{}{
														&notExpr{
															pos: position{line: 826, col: 59, offset: 34853},
															expr: &choiceExpr{
																pos: position{line: 903, col: 8, offset: 37209},
																alternatives: []interface{}{
																	&litMatcher{
																		pos:        position{line: 899, col: 12, offset: 37169},
																		val:        "\r\n",
																		ignoreCase: false,
																	},
																	&charClassMatcher{
																		pos:        position{line: 899, col: 21, offset: 37178},
																		val:        "[\\r\\n]",
																		chars:      []rune{'\r', '\n'},
																		ignoreCase: false,
																		inverted:   false,
																	},
																	&notExpr{
																		pos: position{line: 901, col: 8, offset: 37198},
																		expr: &anyMatcher{
																			line: 901, col: 9, offset: 37199,
																		},
																	},
																},
															},
														},
														&anyMatcher{
															line: 826, col: 64, offset: 34858,
														},
													},
												},
											},
										},
										&choiceExpr{
											pos: position{line: 903, col: 8, offset: 37209},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 899, col: 12, offset: 37169},
													val:        "\r\n",
													ignoreCase: false,
												},
												&charClassMatcher{
													pos:        position{line: 899, col: 21, offset: 37178},
													val:        "[\\r\\n]",
													chars:      []rune{'\r', '\n'},
													ignoreCase: false,
													inverted:   false,
												},
												&notExpr{
													pos: position{line: 901, col: 8, offset: 37198},
													expr: &anyMatcher{
														line: 901, col: 9, offset: 37199,
													},
												},
											},
										},
									},
								},
							},
						},
					},
					&actionExpr{
						pos: position{line: 502, col: 9, offset: 20136},
						run: (*parser).callonInlineElements24,
						expr: &seqExpr{
							pos: position{line: 502, col: 9, offset: 20136},
							exprs: []interface{}{
								&notExpr{
									pos: position{line: 502, col: 9, offset: 20136},
									expr: &notExpr{
										pos: position{line: 901, col: 8, offset: 37198},
										expr: &anyMatcher{
											line: 901, col: 9, offset: 37199,
										},
									},
								},
								&notExpr{
									pos: position{line: 502, col: 14, offset: 20141},
									expr: &choiceExpr{
										pos: position{line: 684, col: 19, offset: 29648},
										alternatives: []interface{}{
											&litMatcher{
												pos:        position{line: 854, col: 26, offset: 36130},
												val:        "....",
												ignoreCase: false,
											},
											&litMatcher{
												pos:        position{line: 688, col: 25, offset: 29830},
												val:        "```",
												ignoreCase: false,
											},
											&litMatcher{
												pos:        position{line: 695, col: 26, offset: 30162},
												val:        "----",
												ignoreCase: false,
											},
											&litMatcher{
												pos:        position{line: 715, col: 26, offset: 30960},
												val:        "====",
												ignoreCase: false,
											},
											&litMatcher{
												pos:        position{line: 816, col: 26, offset: 34419},
												val:        "////",
												ignoreCase: false,
											},
											&litMatcher{
												pos:        position{line: 737, col: 24, offset: 31681},
												val:        "____",
												ignoreCase: false,
											},
										},
									},
								},
								&labeledExpr{
									pos:   position{line: 502, col: 30, offset: 20157},
									label: "elements",
									expr: &oneOrMoreExpr{
										pos: position{line: 502, col: 39, offset: 20166},
										expr: &seqExpr{
											pos: position{line: 502, col: 40, offset: 20167},
											exprs: []interface{}{
												&notExpr{
													pos: position{line: 502, col: 40, offset: 20167},
													expr: &choiceExpr{
														pos: position{line: 903, col: 8, offset: 37209},
														alternatives: []interface{}{
															&litMatcher{
																pos:        position{line: 899, col: 12, offset: 37169},
																val:        "\r\n",
																ignoreCase: false,
															},
															&charClassMatcher{
																pos:        position{line: 899, col: 21, offset: 37178},
																val:        "[\\r\\n]",
																chars:      []rune{'\r', '\n'},
																ignoreCase: false,
																inverted:   false,
															},
															&notExpr{
																pos: position{line: 901, col: 8, offset: 37198},
																expr: &anyMatcher{
																	line: 901, col: 9, offset: 37199,
																},
															},
														},
													},
												},
												&zeroOrMoreExpr{
													pos: position{line: 502, col: 45, offset: 20172},
													expr: &choiceExpr{
														pos: position{line: 895, col: 7, offset: 37107},
														alternatives: []interface{}{
															&litMatcher{
																pos:        position{line: 895, col: 7, offset: 37107},
																val:        " ",
																ignoreCase: false,
															},
															&actionExpr{
																pos: position{line: 895, col: 13, offset: 37113},
																run: (*parser).callonInlineElements49,
																expr: &litMatcher{
																	pos:        position{line: 895, col: 13, offset: 37113},
																	val:        "\t",
																	ignoreCase: false,
																},
															},
														},
													},
												},
												&notExpr{
													pos: position{line: 502, col: 49, offset: 20176},
													expr: &actionExpr{
														pos: position{line: 135, col: 20, offset: 5626},
														run: (*parser).callonInlineElements52,
														expr: &seqExpr{
															pos: position{line: 135, col: 20, offset: 5626},
															exprs: []interface{}{
																&litMatcher{
																	pos:        position{line: 135, col: 20, offset: 5626},
																	val:        "[[",
																	ignoreCase: false,
																},
																&labeledExpr{
																	pos:   position{line: 135, col: 25, offset: 5631},
																	label: "id",
																	expr: &actionExpr{
																		pos: position{line: 883, col: 7, offset: 36866},
																		run: (*parser).callonInlineElements56,
																		expr: &oneOrMoreExpr{
																			pos: position{line: 883, col: 7, offset: 36866},
																			expr: &seqExpr{
																				pos: position{line: 883, col: 8, offset: 36867},
																				exprs: []interface{}{
																					&notExpr{
																						pos: position{line: 883, col: 8, offset: 36867},
																						expr: &choiceExpr{
																							pos: position{line: 899, col: 12, offset: 37169},
																							alternatives: []interface{}{
																								&litMatcher{
																									pos:        position{line: 899, col: 12, offset: 37169},
																									val:        "\r\n",
																									ignoreCase: false,
																								},
																								&charClassMatcher{
																									pos:        position{line: 899, col: 21, offset: 37178},
																									val:        "[\\r\\n]",
																									chars:      []rune{'\r', '\n'},
																									ignoreCase: false,
																									inverted:   false,
																								},
																							},
																						},
																					},
																					&notExpr{
																						pos: position{line: 883, col: 17, offset: 36876},
																						expr: &choiceExpr{
																							pos: position{line: 895, col: 7, offset: 37107},
																							alternatives: []interface{}{
																								&litMatcher{
																									pos:        position{line: 895, col: 7, offset: 37107},
																									val:        " ",
																									ignoreCase: false,
																								},
																								&actionExpr{
																									pos: position{line: 895, col: 13, offset: 37113},
																									run: (*parser).callonInlineElements66,
																									expr: &litMatcher{
																										pos:        position{line: 895, col: 13, offset: 37113},
																										val:        "\t",
																										ignoreCase: false,
																									},
																								},
																							},
																						},
																					},
																					&notExpr{
																						pos: position{line: 883, col: 21, offset: 36880},
																						expr: &litMatcher{
																							pos:        position{line: 883, col: 22, offset: 36881},
																							val:        "[",
																							ignoreCase: false,
																						},
																					},
																					&notExpr{
																						pos: position{line: 883, col: 26, offset: 36885},
																						expr: &litMatcher{
																							pos:        position{line: 883, col: 27, offset: 36886},
																							val:        "]",
																							ignoreCase: false,
																						},
																					},
																					&notExpr{
																						pos: position{line: 883, col: 31, offset: 36890},
																						expr: &litMatcher{
																							pos:        position{line: 883, col: 32, offset: 36891},
																							val:        "<<",
																							ignoreCase: false,
																						},
																					},
																					&notExpr{
																						pos: position{line: 883, col: 37, offset: 36896},
																						expr: &litMatcher{
																							pos:        position{line: 883, col: 38, offset: 36897},
																							val:        ">>",
																							ignoreCase: false,
																						},
																					},
																					&anyMatcher{
																						line: 883, col: 42, offset: 36901,
																					},
																				},
																			},
																		},
																	},
																},
																&litMatcher{
																	pos:        position{line: 135, col: 33, offset: 5639},
																	val:        "]]",
																	ignoreCase: false,
																},
															},
														},
													},
												},
												&ruleRefExpr{
													pos:  position{line: 502, col: 66, offset: 20193},
													name: "InlineElement",
												},
												&zeroOrMoreExpr{
													pos: position{line: 502, col: 80, offset: 20207},
													expr: &choiceExpr{
														pos: position{line: 895, col: 7, offset: 37107},
														alternatives: []interface{}{
															&litMatcher{
																pos:        position{line: 895, col: 7, offset: 37107},
																val:        " ",
																ignoreCase: false,
															},
															&actionExpr{
																pos: position{line: 895, col: 13, offset: 37113},
																run: (*parser).callonInlineElements82,
																expr: &litMatcher{
																	pos:        position{line: 895, col: 13, offset: 37113},
																	val:        "\t",
																	ignoreCase: false,
																},
															},
														},
													},
												},
											},
										},
									},
								},
								&choiceExpr{
									pos: position{line: 903, col: 8, offset: 37209},
									alternatives: []interface{}{
										&litMatcher{
											pos:        position{line: 899, col: 12, offset: 37169},
											val:        "\r\n",
											ignoreCase: false,
										},
										&charClassMatcher{
											pos:        position{line: 899, col: 21, offset: 37178},
											val:        "[\\r\\n]",
											chars:      []rune{'\r', '\n'},
											ignoreCase: false,
											inverted:   false,
										},
										&notExpr{
											pos: position{line: 901, col: 8, offset: 37198},
											expr: &anyMatcher{
												line: 901, col: 9, offset: 37199,
											},
										},
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "InlineElement",
			pos:  position{line: 506, col: 1, offset: 20331},
			expr: &actionExpr{
				pos: position{line: 506, col: 18, offset: 20348},
				run: (*parser).callonInlineElement1,
				expr: &labeledExpr{
					pos:   position{line: 506, col: 18, offset: 20348},
					label: "element",
					expr: &choiceExpr{
						pos: position{line: 506, col: 27, offset: 20357},
						alternatives: []interface{}{
							&ruleRefExpr{
								pos:  position{line: 506, col: 27, offset: 20357},
								name: "QuotedText",
							},
							&actionExpr{
								pos: position{line: 613, col: 19, offset: 26592},
								run: (*parser).callonInlineElement5,
								expr: &seqExpr{
									pos: position{line: 613, col: 19, offset: 26592},
									exprs: []interface{}{
										&litMatcher{
											pos:        position{line: 613, col: 19, offset: 26592},
											val:        "<<",
											ignoreCase: false,
										},
										&labeledExpr{
											pos:   position{line: 613, col: 24, offset: 26597},
											label: "id",
											expr: &actionExpr{
												pos: position{line: 883, col: 7, offset: 36866},
												run: (*parser).callonInlineElement9,
												expr: &oneOrMoreExpr{
													pos: position{line: 883, col: 7, offset: 36866},
													expr: &seqExpr{
														pos: position{line: 883, col: 8, offset: 36867},
														exprs: []interface{}{
															&notExpr{
																pos: position{line: 883, col: 8, offset: 36867},
																expr: &choiceExpr{
																	pos: position{line: 899, col: 12, offset: 37169},
																	alternatives: []interface{}{
																		&litMatcher{
																			pos:        position{line: 899, col: 12, offset: 37169},
																			val:        "\r\n",
																			ignoreCase: false,
																		},
																		&charClassMatcher{
																			pos:        position{line: 899, col: 21, offset: 37178},
																			val:        "[\\r\\n]",
																			chars:      []rune{'\r', '\n'},
																			ignoreCase: false,
																			inverted:   false,
																		},
																	},
																},
															},
															&notExpr{
																pos: position{line: 883, col: 17, offset: 36876},
																expr: &choiceExpr{
																	pos: position{line: 895, col: 7, offset: 37107},
																	alternatives: []interface{}{
																		&litMatcher{
																			pos:        position{line: 895, col: 7, offset: 37107},
																			val:        " ",
																			ignoreCase: false,
																		},
																		&actionExpr{
																			pos: position{line: 895, col: 13, offset: 37113},
																			run: (*parser).callonInlineElement19,
																			expr: &litMatcher{
																				pos:        position{line: 895, col: 13, offset: 37113},
																				val:        "\t",
																				ignoreCase: false,
																			},
																		},
																	},
																},
															},
															&notExpr{
																pos: position{line: 883, col: 21, offset: 36880},
																expr: &litMatcher{
																	pos:        position{line: 883, col: 22, offset: 36881},
																	val:        "[",
																	ignoreCase: false,
																},
															},
															&notExpr{
																pos: position{line: 883, col: 26, offset: 36885},
																expr: &litMatcher{
																	pos:        position{line: 883, col: 27, offset: 36886},
																	val:        "]",
																	ignoreCase: false,
																},
															},
															&notExpr{
																pos: position{line: 883, col: 31, offset: 36890},
																expr: &litMatcher{
																	pos:        position{line: 883, col: 32, offset: 36891},
																	val:        "<<",
																	ignoreCase: false,
																},
															},
															&notExpr{
																pos: position{line: 883, col: 37, offset: 36896},
																expr: &litMatcher{
																	pos:        position{line: 883, col: 38, offset: 36897},
																	val:        ">>",
																	ignoreCase: false,
																},
															},
															&anyMatcher{
																line: 883, col: 42, offset: 36901,
															},
														},
													},
												},
											},
										},
										&litMatcher{
											pos:        position{line: 613, col: 32, offset: 26605},
											val:        ">>",
											ignoreCase: false,
										},
									},
								},
							},
							&ruleRefExpr{
								pos:  position{line: 506, col: 57, offset: 20387},
								name: "Passthrough",
							},
							&actionExpr{
								pos: position{line: 653, col: 16, offset: 28006},
								run: (*parser).callonInlineElement32,
								expr: &seqExpr{
									pos: position{line: 653, col: 16, offset: 28006},
									exprs: []interface{}{
										&litMatcher{
											pos:        position{line: 653, col: 16, offset: 28006},
											val:        "image:",
											ignoreCase: false,
										},
										&notExpr{
											pos: position{line: 653, col: 25, offset: 28015},
											expr: &litMatcher{
												pos:        position{line: 653, col: 26, offset: 28016},
												val:        ":",
												ignoreCase: false,
											},
										},
										&labeledExpr{
											pos:   position{line: 653, col: 30, offset: 28020},
											label: "path",
											expr: &actionExpr{
												pos: position{line: 879, col: 8, offset: 36796},
												run: (*parser).callonInlineElement38,
												expr: &oneOrMoreExpr{
													pos: position{line: 879, col: 8, offset: 36796},
													expr: &seqExpr{
														pos: position{line: 879, col: 9, offset: 36797},
														exprs: []interface{}{
															&notExpr{
																pos: position{line: 879, col: 9, offset: 36797},
																expr: &choiceExpr{
																	pos: position{line: 899, col: 12, offset: 37169},
																	alternatives: []interface{}{
																		&litMatcher{
																			pos:        position{line: 899, col: 12, offset: 37169},
																			val:        "\r\n",
																			ignoreCase: false,
																		},
																		&charClassMatcher{
																			pos:        position{line: 899, col: 21, offset: 37178},
																			val:        "[\\r\\n]",
																			chars:      []rune{'\r', '\n'},
																			ignoreCase: false,
																			inverted:   false,
																		},
																	},
																},
															},
															&notExpr{
																pos: position{line: 879, col: 18, offset: 36806},
																expr: &choiceExpr{
																	pos: position{line: 895, col: 7, offset: 37107},
																	alternatives: []interface{}{
																		&litMatcher{
																			pos:        position{line: 895, col: 7, offset: 37107},
																			val:        " ",
																			ignoreCase: false,
																		},
																		&actionExpr{
																			pos: position{line: 895, col: 13, offset: 37113},
																			run: (*parser).callonInlineElement48,
																			expr: &litMatcher{
																				pos:        position{line: 895, col: 13, offset: 37113},
																				val:        "\t",
																				ignoreCase: false,
																			},
																		},
																	},
																},
															},
															&notExpr{
																pos: position{line: 879, col: 22, offset: 36810},
																expr: &litMatcher{
																	pos:        position{line: 879, col: 23, offset: 36811},
																	val:        "[",
																	ignoreCase: false,
																},
															},
															&notExpr{
																pos: position{line: 879, col: 27, offset: 36815},
																expr: &litMatcher{
																	pos:        position{line: 879, col: 28, offset: 36816},
																	val:        "]",
																	ignoreCase: false,
																},
															},
															&anyMatcher{
																line: 879, col: 32, offset: 36820,
															},
														},
													},
												},
											},
										},
										&labeledExpr{
											pos:   position{line: 653, col: 41, offset: 28031},
											label: "attributes",
											expr: &choiceExpr{
												pos: position{line: 658, col: 20, offset: 28276},
												alternatives: []interface{}{
													&actionExpr{
														pos: position{line: 658, col: 20, offset: 28276},
														run: (*parser).callonInlineElement57,
														expr: &seqExpr{
															pos: position{line: 658, col: 20, offset: 28276},
															exprs: []interface{}{
																&litMatcher{
																	pos:        position{line: 658, col: 20, offset: 28276},
																	val:        "[",
																	ignoreCase: false,
																},
																&labeledExpr{
																	pos:   position{line: 658, col: 24, offset: 28280},
																	label: "alt",
																	expr: &actionExpr{
																		pos: position{line: 675, col: 19, offset: 29128},
																		run: (*parser).callonInlineElement61,
																		expr: &seqExpr{
																			pos: position{line: 675, col: 19, offset: 29128},
																			exprs: []interface{}{
																				&labeledExpr{
																					pos:   position{line: 675, col: 19, offset: 29128},
																					label: "value",
																					expr: &oneOrMoreExpr{
																						pos: position{line: 675, col: 25, offset: 29134},
																						expr: &seqExpr{
																							pos: position{line: 675, col: 26, offset: 29135},
																							exprs: []interface{}{
																								&notExpr{
																									pos: position{line: 675, col: 26, offset: 29135},
																									expr: &litMatcher{
																										pos:        position{line: 675, col: 27, offset: 29136},
																										val:        ",",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 675, col: 31, offset: 29140},
																									expr: &litMatcher{
																										pos:        position{line: 675, col: 32, offset: 29141},
																										val:        "=",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 675, col: 36, offset: 29145},
																									expr: &litMatcher{
																										pos:        position{line: 675, col: 37, offset: 29146},
																										val:        "]",
																										ignoreCase: false,
																									},
																								},
																								&anyMatcher{
																									line: 675, col: 41, offset: 29150,
																								},
																							},
																						},
																					},
																				},
																				&choiceExpr{
																					pos: position{line: 675, col: 46, offset: 29155},
																					alternatives: []interface{}{
																						&litMatcher{
																							pos:        position{line: 675, col: 46, offset: 29155},
																							val:        ",",
																							ignoreCase: false,
																						},
																						&andExpr{
																							pos: position{line: 675, col: 52, offset: 29161},
																							expr: &litMatcher{
																								pos:        position{line: 675, col: 53, offset: 29162},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																},
																&labeledExpr{
																	pos:   position{line: 659, col: 9, offset: 28310},
																	label: "width",
																	expr: &actionExpr{
																		pos: position{line: 675, col: 19, offset: 29128},
																		run: (*parser).callonInlineElement78,
																		expr: &seqExpr{
																			pos: position{line: 675, col: 19, offset: 29128},
																			exprs: []interface{}{
																				&labeledExpr{
																					pos:   position{line: 675, col: 19, offset: 29128},
																					label: "value",
																					expr: &oneOrMoreExpr{
																						pos: position{line: 675, col: 25, offset: 29134},
																						expr: &seqExpr{
																							pos: position{line: 675, col: 26, offset: 29135},
																							exprs: []interface{}{
																								&notExpr{
																									pos: position{line: 675, col: 26, offset: 29135},
																									expr: &litMatcher{
																										pos:        position{line: 675, col: 27, offset: 29136},
																										val:        ",",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 675, col: 31, offset: 29140},
																									expr: &litMatcher{
																										pos:        position{line: 675, col: 32, offset: 29141},
																										val:        "=",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 675, col: 36, offset: 29145},
																									expr: &litMatcher{
																										pos:        position{line: 675, col: 37, offset: 29146},
																										val:        "]",
																										ignoreCase: false,
																									},
																								},
																								&anyMatcher{
																									line: 675, col: 41, offset: 29150,
																								},
																							},
																						},
																					},
																				},
																				&choiceExpr{
																					pos: position{line: 675, col: 46, offset: 29155},
																					alternatives: []interface{}{
																						&litMatcher{
																							pos:        position{line: 675, col: 46, offset: 29155},
																							val:        ",",
																							ignoreCase: false,
																						},
																						&andExpr{
																							pos: position{line: 675, col: 52, offset: 29161},
																							expr: &litMatcher{
																								pos:        position{line: 675, col: 53, offset: 29162},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																},
																&labeledExpr{
																	pos:   position{line: 660, col: 9, offset: 28342},
																	label: "height",
																	expr: &actionExpr{
																		pos: position{line: 675, col: 19, offset: 29128},
																		run: (*parser).callonInlineElement95,
																		expr: &seqExpr{
																			pos: position{line: 675, col: 19, offset: 29128},
																			exprs: []interface{}{
																				&labeledExpr{
																					pos:   position{line: 675, col: 19, offset: 29128},
																					label: "value",
																					expr: &oneOrMoreExpr{
																						pos: position{line: 675, col: 25, offset: 29134},
																						expr: &seqExpr{
																							pos: position{line: 675, col: 26, offset: 29135},
																							exprs: []interface{}{
																								&notExpr{
																									pos: position{line: 675, col: 26, offset: 29135},
																									expr: &litMatcher{
																										pos:        position{line: 675, col: 27, offset: 29136},
																										val:        ",",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 675, col: 31, offset: 29140},
																									expr: &litMatcher{
																										pos:        position{line: 675, col: 32, offset: 29141},
																										val:        "=",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 675, col: 36, offset: 29145},
																									expr: &litMatcher{
																										pos:        position{line: 675, col: 37, offset: 29146},
																										val:        "]",
																										ignoreCase: false,
																									},
																								},
																								&anyMatcher{
																									line: 675, col: 41, offset: 29150,
																								},
																							},
																						},
																					},
																				},
																				&choiceExpr{
																					pos: position{line: 675, col: 46, offset: 29155},
																					alternatives: []interface{}{
																						&litMatcher{
																							pos:        position{line: 675, col: 46, offset: 29155},
																							val:        ",",
																							ignoreCase: false,
																						},
																						&andExpr{
																							pos: position{line: 675, col: 52, offset: 29161},
																							expr: &litMatcher{
																								pos:        position{line: 675, col: 53, offset: 29162},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																},
																&labeledExpr{
																	pos:   position{line: 661, col: 9, offset: 28375},
																	label: "otherAttrs",
																	expr: &zeroOrMoreExpr{
																		pos: position{line: 661, col: 20, offset: 28386},
																		expr: &choiceExpr{
																			pos: position{line: 161, col: 21, offset: 6571},
																			alternatives: []interface{}{
																				&actionExpr{
																					pos: position{line: 161, col: 21, offset: 6571},
																					run: (*parser).callonInlineElement114,
																					expr: &seqExpr{
																						pos: position{line: 161, col: 21, offset: 6571},
																						exprs: []interface{}{
																							&labeledExpr{
																								pos:   position{line: 161, col: 21, offset: 6571},
																								label: "key",
																								expr: &actionExpr{
																									pos: position{line: 167, col: 17, offset: 6861},
																									run: (*parser).callonInlineElement117,
																									expr: &seqExpr{
																										pos: position{line: 167, col: 17, offset: 6861},
																										exprs: []interface{}{
																											&notExpr{
																												pos: position{line: 167, col: 17, offset: 6861},
																												expr: &actionExpr{
																													pos: position{line: 207, col: 14, offset: 8362},
																													run: (*parser).callonInlineElement120,
																													expr: &litMatcher{
																														pos:        position{line: 207, col: 14, offset: 8362},
																														val:        "verse",
																														ignoreCase: false,
																													},
																												},
																											},
																											&labeledExpr{
																												pos:   position{line: 167, col: 28, offset: 6872},
																												label: "key",
																												expr: &oneOrMoreExpr{
																													pos: position{line: 167, col: 32, offset: 6876},
																													expr: &seqExpr{
																														pos: position{line: 167, col: 33, offset: 6877},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 167, col: 33, offset: 6877},
																																expr: &litMatcher{
																																	pos:        position{line: 167, col: 34, offset: 6878},
																																	val:        "=",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 167, col: 38, offset: 6882},
																																expr: &litMatcher{
																																	pos:        position{line: 167, col: 39, offset: 6883},
																																	val:        ",",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 167, col: 43, offset: 6887},
																																expr: &litMatcher{
																																	pos:        position{line: 167, col: 44, offset: 6888},
																																	val:        "]",
																																	ignoreCase: false,
																																},
																															},
																															&anyMatcher{
																																line: 167, col: 48, offset: 6892,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&litMatcher{
																								pos:        position{line: 161, col: 40, offset: 6590},
																								val:        "=",
																								ignoreCase: false,
																							},
																							&labeledExpr{
																								pos:   position{line: 161, col: 44, offset: 6594},
																								label: "value",
																								expr: &actionExpr{
																									pos: position{line: 171, col: 19, offset: 6940},
																									run: (*parser).callonInlineElement134,
																									expr: &labeledExpr{
																										pos:   position{line: 171, col: 19, offset: 6940},
																										label: "value",
																										expr: &zeroOrMoreExpr{
																											pos: position{line: 171, col: 25, offset: 6946},
																											expr: &seqExpr{
																												pos: position{line: 171, col: 26, offset: 6947},
																												exprs: []interface{}{
																													&notExpr{
																														pos: position{line: 171, col: 26, offset: 6947},
																														expr: &litMatcher{
																															pos:        position{line: 171, col: 27, offset: 6948},
																															val:        "=",
																															ignoreCase: false,
																														},
																													},
																													&notExpr{
																														pos: position{line: 171, col: 31, offset: 6952},
																														expr: &litMatcher{
																															pos:        position{line: 171, col: 32, offset: 6953},
																															val:        ",",
																															ignoreCase: false,
																														},
																													},
																													&notExpr{
																														pos: position{line: 171, col: 36, offset: 6957},
																														expr: &litMatcher{
																															pos:        position{line: 171, col: 37, offset: 6958},
																															val:        "]",
																															ignoreCase: false,
																														},
																													},
																													&anyMatcher{
																														line: 171, col: 41, offset: 6962,
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&zeroOrOneExpr{
																								pos: position{line: 161, col: 67, offset: 6617},
																								expr: &litMatcher{
																									pos:        position{line: 161, col: 67, offset: 6617},
																									val:        ",",
																									ignoreCase: false,
																								},
																							},
																							&zeroOrMoreExpr{
																								pos: position{line: 161, col: 72, offset: 6622},
																								expr: &choiceExpr{
																									pos: position{line: 895, col: 7, offset: 37107},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 895, col: 7, offset: 37107},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 895, col: 13, offset: 37113},
																											run: (*parser).callonInlineElement150,
																											expr: &litMatcher{
																												pos:        position{line: 895, col: 13, offset: 37113},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																				&actionExpr{
																					pos: position{line: 163, col: 5, offset: 6729},
																					run: (*parser).callonInlineElement152,
																					expr: &seqExpr{
																						pos: position{line: 163, col: 5, offset: 6729},
																						exprs: []interface{}{
																							&labeledExpr{
																								pos:   position{line: 163, col: 5, offset: 6729},
																								label: "key",
																								expr: &actionExpr{
																									pos: position{line: 167, col: 17, offset: 6861},
																									run: (*parser).callonInlineElement155,
																									expr: &seqExpr{
																										pos: position{line: 167, col: 17, offset: 6861},
																										exprs: []interface{}{
																											&notExpr{
																												pos: position{line: 167, col: 17, offset: 6861},
																												expr: &actionExpr{
																													pos: position{line: 207, col: 14, offset: 8362},
																													run: (*parser).callonInlineElement158,
																													expr: &litMatcher{
																														pos:        position{line: 207, col: 14, offset: 8362},
																														val:        "verse",
																														ignoreCase: false,
																													},
																												},
																											},
																											&labeledExpr{
																												pos:   position{line: 167, col: 28, offset: 6872},
																												label: "key",
																												expr: &oneOrMoreExpr{
																													pos: position{line: 167, col: 32, offset: 6876},
																													expr: &seqExpr{
																														pos: position{line: 167, col: 33, offset: 6877},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 167, col: 33, offset: 6877},
																																expr: &litMatcher{
																																	pos:        position{line: 167, col: 34, offset: 6878},
																																	val:        "=",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 167, col: 38, offset: 6882},
																																expr: &litMatcher{
																																	pos:        position{line: 167, col: 39, offset: 6883},
																																	val:        ",",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 167, col: 43, offset: 6887},
																																expr: &litMatcher{
																																	pos:        position{line: 167, col: 44, offset: 6888},
																																	val:        "]",
																																	ignoreCase: false,
																																},
																															},
																															&anyMatcher{
																																line: 167, col: 48, offset: 6892,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&zeroOrOneExpr{
																								pos: position{line: 163, col: 24, offset: 6748},
																								expr: &litMatcher{
																									pos:        position{line: 163, col: 24, offset: 6748},
																									val:        ",",
																									ignoreCase: false,
																								},
																							},
																							&zeroOrMoreExpr{
																								pos: position{line: 163, col: 29, offset: 6753},
																								expr: &choiceExpr{
																									pos: position{line: 895, col: 7, offset: 37107},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 895, col: 7, offset: 37107},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 895, col: 13, offset: 37113},
																											run: (*parser).callonInlineElement175,
																											expr: &litMatcher{
																												pos:        position{line: 895, col: 13, offset: 37113},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																},
																&litMatcher{
																	pos:        position{line: 661, col: 40, offset: 28406},
																	val:        "]",
																	ignoreCase: false,
																},
															},
														},
													},
													&actionExpr{
														pos: position{line: 663, col: 9, offset: 28560},
														run: (*parser).callonInlineElement178,
														expr: &seqExpr{
															pos: position{line: 663, col: 9, offset: 28560},
															exprs: []interface{}{
																&litMatcher{
																	pos:        position{line: 663, col: 9, offset: 28560},
																	val:        "[",
																	ignoreCase: false,
																},
																&labeledExpr{
																	pos:   position{line: 663, col: 13, offset: 28564},
																	label: "alt",
																	expr: &actionExpr{
																		pos: position{line: 675, col: 19, offset: 29128},
																		run: (*parser).callonInlineElement182,
																		expr: &seqExpr{
																			pos: position{line: 675, col: 19, offset: 29128},
																			exprs: []interface{}{
																				&labeledExpr{
																					pos:   position{line: 675, col: 19, offset: 29128},
																					label: "value",
																					expr: &oneOrMoreExpr{
																						pos: position{line: 675, col: 25, offset: 29134},
																						expr: &seqExpr{
																							pos: position{line: 675, col: 26, offset: 29135},
																							exprs: []interface{}{
																								&notExpr{
																									pos: position{line: 675, col: 26, offset: 29135},
																									expr: &litMatcher{
																										pos:        position{line: 675, col: 27, offset: 29136},
																										val:        ",",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 675, col: 31, offset: 29140},
																									expr: &litMatcher{
																										pos:        position{line: 675, col: 32, offset: 29141},
																										val:        "=",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 675, col: 36, offset: 29145},
																									expr: &litMatcher{
																										pos:        position{line: 675, col: 37, offset: 29146},
																										val:        "]",
																										ignoreCase: false,
																									},
																								},
																								&anyMatcher{
																									line: 675, col: 41, offset: 29150,
																								},
																							},
																						},
																					},
																				},
																				&choiceExpr{
																					pos: position{line: 675, col: 46, offset: 29155},
																					alternatives: []interface{}{
																						&litMatcher{
																							pos:        position{line: 675, col: 46, offset: 29155},
																							val:        ",",
																							ignoreCase: false,
																						},
																						&andExpr{
																							pos: position{line: 675, col: 52, offset: 29161},
																							expr: &litMatcher{
																								pos:        position{line: 675, col: 53, offset: 29162},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																},
																&labeledExpr{
																	pos:   position{line: 664, col: 9, offset: 28593},
																	label: "width",
																	expr: &actionExpr{
																		pos: position{line: 675, col: 19, offset: 29128},
																		run: (*parser).callonInlineElement199,
																		expr: &seqExpr{
																			pos: position{line: 675, col: 19, offset: 29128},
																			exprs: []interface{}{
																				&labeledExpr{
																					pos:   position{line: 675, col: 19, offset: 29128},
																					label: "value",
																					expr: &oneOrMoreExpr{
																						pos: position{line: 675, col: 25, offset: 29134},
																						expr: &seqExpr{
																							pos: position{line: 675, col: 26, offset: 29135},
																							exprs: []interface{}{
																								&notExpr{
																									pos: position{line: 675, col: 26, offset: 29135},
																									expr: &litMatcher{
																										pos:        position{line: 675, col: 27, offset: 29136},
																										val:        ",",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 675, col: 31, offset: 29140},
																									expr: &litMatcher{
																										pos:        position{line: 675, col: 32, offset: 29141},
																										val:        "=",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 675, col: 36, offset: 29145},
																									expr: &litMatcher{
																										pos:        position{line: 675, col: 37, offset: 29146},
																										val:        "]",
																										ignoreCase: false,
																									},
																								},
																								&anyMatcher{
																									line: 675, col: 41, offset: 29150,
																								},
																							},
																						},
																					},
																				},
																				&choiceExpr{
																					pos: position{line: 675, col: 46, offset: 29155},
																					alternatives: []interface{}{
																						&litMatcher{
																							pos:        position{line: 675, col: 46, offset: 29155},
																							val:        ",",
																							ignoreCase: false,
																						},
																						&andExpr{
																							pos: position{line: 675, col: 52, offset: 29161},
																							expr: &litMatcher{
																								pos:        position{line: 675, col: 53, offset: 29162},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																},
																&labeledExpr{
																	pos:   position{line: 665, col: 9, offset: 28625},
																	label: "otherAttrs",
																	expr: &zeroOrMoreExpr{
																		pos: position{line: 665, col: 20, offset: 28636},
																		expr: &choiceExpr{
																			pos: position{line: 161, col: 21, offset: 6571},
																			alternatives: []interface{}{
																				&actionExpr{
																					pos: position{line: 161, col: 21, offset: 6571},
																					run: (*parser).callonInlineElement218,
																					expr: &seqExpr{
																						pos: position{line: 161, col: 21, offset: 6571},
																						exprs: []interface{}{
																							&labeledExpr{
																								pos:   position{line: 161, col: 21, offset: 6571},
																								label: "key",
																								expr: &actionExpr{
																									pos: position{line: 167, col: 17, offset: 6861},
																									run: (*parser).callonInlineElement221,
																									expr: &seqExpr{
																										pos: position{line: 167, col: 17, offset: 6861},
																										exprs: []interface{}{
																											&notExpr{
																												pos: position{line: 167, col: 17, offset: 6861},
																												expr: &actionExpr{
																													pos: position{line: 207, col: 14, offset: 8362},
																													run: (*parser).callonInlineElement224,
																													expr: &litMatcher{
																														pos:        position{line: 207, col: 14, offset: 8362},
																														val:        "verse",
																														ignoreCase: false,
																													},
																												},
																											},
																											&labeledExpr{
																												pos:   position{line: 167, col: 28, offset: 6872},
																												label: "key",
																												expr: &oneOrMoreExpr{
																													pos: position{line: 167, col: 32, offset: 6876},
																													expr: &seqExpr{
																														pos: position{line: 167, col: 33, offset: 6877},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 167, col: 33, offset: 6877},
																																expr: &litMatcher{
																																	pos:        position{line: 167, col: 34, offset: 6878},
																																	val:        "=",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 167, col: 38, offset: 6882},
																																expr: &litMatcher{
																																	pos:        position{line: 167, col: 39, offset: 6883},
																																	val:        ",",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 167, col: 43, offset: 6887},
																																expr: &litMatcher{
																																	pos:        position{line: 167, col: 44, offset: 6888},
																																	val:        "]",
																																	ignoreCase: false,
																																},
																															},
																															&anyMatcher{
																																line: 167, col: 48, offset: 6892,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&litMatcher{
																								pos:        position{line: 161, col: 40, offset: 6590},
																								val:        "=",
																								ignoreCase: false,
																							},
																							&labeledExpr{
																								pos:   position{line: 161, col: 44, offset: 6594},
																								label: "value",
																								expr: &actionExpr{
																									pos: position{line: 171, col: 19, offset: 6940},
																									run: (*parser).callonInlineElement238,
																									expr: &labeledExpr{
																										pos:   position{line: 171, col: 19, offset: 6940},
																										label: "value",
																										expr: &zeroOrMoreExpr{
																											pos: position{line: 171, col: 25, offset: 6946},
																											expr: &seqExpr{
																												pos: position{line: 171, col: 26, offset: 6947},
																												exprs: []interface{}{
																													&notExpr{
																														pos: position{line: 171, col: 26, offset: 6947},
																														expr: &litMatcher{
																															pos:        position{line: 171, col: 27, offset: 6948},
																															val:        "=",
																															ignoreCase: false,
																														},
																													},
																													&notExpr{
																														pos: position{line: 171, col: 31, offset: 6952},
																														expr: &litMatcher{
																															pos:        position{line: 171, col: 32, offset: 6953},
																															val:        ",",
																															ignoreCase: false,
																														},
																													},
																													&notExpr{
																														pos: position{line: 171, col: 36, offset: 6957},
																														expr: &litMatcher{
																															pos:        position{line: 171, col: 37, offset: 6958},
																															val:        "]",
																															ignoreCase: false,
																														},
																													},
																													&anyMatcher{
																														line: 171, col: 41, offset: 6962,
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&zeroOrOneExpr{
																								pos: position{line: 161, col: 67, offset: 6617},
																								expr: &litMatcher{
																									pos:        position{line: 161, col: 67, offset: 6617},
																									val:        ",",
																									ignoreCase: false,
																								},
																							},
																							&zeroOrMoreExpr{
																								pos: position{line: 161, col: 72, offset: 6622},
																								expr: &choiceExpr{
																									pos: position{line: 895, col: 7, offset: 37107},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 895, col: 7, offset: 37107},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 895, col: 13, offset: 37113},
																											run: (*parser).callonInlineElement254,
																											expr: &litMatcher{
																												pos:        position{line: 895, col: 13, offset: 37113},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																				&actionExpr{
																					pos: position{line: 163, col: 5, offset: 6729},
																					run: (*parser).callonInlineElement256,
																					expr: &seqExpr{
																						pos: position{line: 163, col: 5, offset: 6729},
																						exprs: []interface{}{
																							&labeledExpr{
																								pos:   position{line: 163, col: 5, offset: 6729},
																								label: "key",
																								expr: &actionExpr{
																									pos: position{line: 167, col: 17, offset: 6861},
																									run: (*parser).callonInlineElement259,
																									expr: &seqExpr{
																										pos: position{line: 167, col: 17, offset: 6861},
																										exprs: []interface{}{
																											&notExpr{
																												pos: position{line: 167, col: 17, offset: 6861},
																												expr: &actionExpr{
																													pos: position{line: 207, col: 14, offset: 8362},
																													run: (*parser).callonInlineElement262,
																													expr: &litMatcher{
																														pos:        position{line: 207, col: 14, offset: 8362},
																														val:        "verse",
																														ignoreCase: false,
																													},
																												},
																											},
																											&labeledExpr{
																												pos:   position{line: 167, col: 28, offset: 6872},
																												label: "key",
																												expr: &oneOrMoreExpr{
																													pos: position{line: 167, col: 32, offset: 6876},
																													expr: &seqExpr{
																														pos: position{line: 167, col: 33, offset: 6877},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 167, col: 33, offset: 6877},
																																expr: &litMatcher{
																																	pos:        position{line: 167, col: 34, offset: 6878},
																																	val:        "=",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 167, col: 38, offset: 6882},
																																expr: &litMatcher{
																																	pos:        position{line: 167, col: 39, offset: 6883},
																																	val:        ",",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 167, col: 43, offset: 6887},
																																expr: &litMatcher{
																																	pos:        position{line: 167, col: 44, offset: 6888},
																																	val:        "]",
																																	ignoreCase: false,
																																},
																															},
																															&anyMatcher{
																																line: 167, col: 48, offset: 6892,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&zeroOrOneExpr{
																								pos: position{line: 163, col: 24, offset: 6748},
																								expr: &litMatcher{
																									pos:        position{line: 163, col: 24, offset: 6748},
																									val:        ",",
																									ignoreCase: false,
																								},
																							},
																							&zeroOrMoreExpr{
																								pos: position{line: 163, col: 29, offset: 6753},
																								expr: &choiceExpr{
																									pos: position{line: 895, col: 7, offset: 37107},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 895, col: 7, offset: 37107},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 895, col: 13, offset: 37113},
																											run: (*parser).callonInlineElement279,
																											expr: &litMatcher{
																												pos:        position{line: 895, col: 13, offset: 37113},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																},
																&litMatcher{
																	pos:        position{line: 665, col: 40, offset: 28656},
																	val:        "]",
																	ignoreCase: false,
																},
															},
														},
													},
													&actionExpr{
														pos: position{line: 667, col: 9, offset: 28791},
														run: (*parser).callonInlineElement282,
														expr: &seqExpr{
															pos: position{line: 667, col: 9, offset: 28791},
															exprs: []interface{}{
																&litMatcher{
																	pos:        position{line: 667, col: 9, offset: 28791},
																	val:        "[",
																	ignoreCase: false,
																},
																&labeledExpr{
																	pos:   position{line: 667, col: 13, offset: 28795},
																	label: "alt",
																	expr: &actionExpr{
																		pos: position{line: 675, col: 19, offset: 29128},
																		run: (*parser).callonInlineElement286,
																		expr: &seqExpr{
																			pos: position{line: 675, col: 19, offset: 29128},
																			exprs: []interface{}{
																				&labeledExpr{
																					pos:   position{line: 675, col: 19, offset: 29128},
																					label: "value",
																					expr: &oneOrMoreExpr{
																						pos: position{line: 675, col: 25, offset: 29134},
																						expr: &seqExpr{
																							pos: position{line: 675, col: 26, offset: 29135},
																							exprs: []interface{}{
																								&notExpr{
																									pos: position{line: 675, col: 26, offset: 29135},
																									expr: &litMatcher{
																										pos:        position{line: 675, col: 27, offset: 29136},
																										val:        ",",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 675, col: 31, offset: 29140},
																									expr: &litMatcher{
																										pos:        position{line: 675, col: 32, offset: 29141},
																										val:        "=",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 675, col: 36, offset: 29145},
																									expr: &litMatcher{
																										pos:        position{line: 675, col: 37, offset: 29146},
																										val:        "]",
																										ignoreCase: false,
																									},
																								},
																								&anyMatcher{
																									line: 675, col: 41, offset: 29150,
																								},
																							},
																						},
																					},
																				},
																				&choiceExpr{
																					pos: position{line: 675, col: 46, offset: 29155},
																					alternatives: []interface{}{
																						&litMatcher{
																							pos:        position{line: 675, col: 46, offset: 29155},
																							val:        ",",
																							ignoreCase: false,
																						},
																						&andExpr{
																							pos: position{line: 675, col: 52, offset: 29161},
																							expr: &litMatcher{
																								pos:        position{line: 675, col: 53, offset: 29162},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																},
																&labeledExpr{
																	pos:   position{line: 668, col: 9, offset: 28825},
																	label: "otherAttrs",
																	expr: &zeroOrMoreExpr{
																		pos: position{line: 668, col: 20, offset: 28836},
																		expr: &choiceExpr{
																			pos: position{line: 161, col: 21, offset: 6571},
																			alternatives: []interface{}{
																				&actionExpr{
																					pos: position{line: 161, col: 21, offset: 6571},
																					run: (*parser).callonInlineElement305,
																					expr: &seqExpr{
																						pos: position{line: 161, col: 21, offset: 6571},
																						exprs: []interface{}{
																							&labeledExpr{
																								pos:   position{line: 161, col: 21, offset: 6571},
																								label: "key",
																								expr: &actionExpr{
																									pos: position{line: 167, col: 17, offset: 6861},
																									run: (*parser).callonInlineElement308,
																									expr: &seqExpr{
																										pos: position{line: 167, col: 17, offset: 6861},
																										exprs: []interface{}{
																											&notExpr{
																												pos: position{line: 167, col: 17, offset: 6861},
																												expr: &actionExpr{
																													pos: position{line: 207, col: 14, offset: 8362},
																													run: (*parser).callonInlineElement311,
																													expr: &litMatcher{
																														pos:        position{line: 207, col: 14, offset: 8362},
																														val:        "verse",
																														ignoreCase: false,
																													},
																												},
																											},
																											&labeledExpr{
																												pos:   position{line: 167, col: 28, offset: 6872},
																												label: "key",
																												expr: &oneOrMoreExpr{
																													pos: position{line: 167, col: 32, offset: 6876},
																													expr: &seqExpr{
																														pos: position{line: 167, col: 33, offset: 6877},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 167, col: 33, offset: 6877},
																																expr: &litMatcher{
																																	pos:        position{line: 167, col: 34, offset: 6878},
																																	val:        "=",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 167, col: 38, offset: 6882},
																																expr: &litMatcher{
																																	pos:        position{line: 167, col: 39, offset: 6883},
																																	val:        ",",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 167, col: 43, offset: 6887},
																																expr: &litMatcher{
																																	pos:        position{line: 167, col: 44, offset: 6888},
																																	val:        "]",
																																	ignoreCase: false,
																																},
																															},
																															&anyMatcher{
																																line: 167, col: 48, offset: 6892,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&litMatcher{
																								pos:        position{line: 161, col: 40, offset: 6590},
																								val:        "=",
																								ignoreCase: false,
																							},
																							&labeledExpr{
																								pos:   position{line: 161, col: 44, offset: 6594},
																								label: "value",
																								expr: &actionExpr{
																									pos: position{line: 171, col: 19, offset: 6940},
																									run: (*parser).callonInlineElement325,
																									expr: &labeledExpr{
																										pos:   position{line: 171, col: 19, offset: 6940},
																										label: "value",
																										expr: &zeroOrMoreExpr{
																											pos: position{line: 171, col: 25, offset: 6946},
																											expr: &seqExpr{
																												pos: position{line: 171, col: 26, offset: 6947},
																												exprs: []interface{}{
																													&notExpr{
																														pos: position{line: 171, col: 26, offset: 6947},
																														expr: &litMatcher{
																															pos:        position{line: 171, col: 27, offset: 6948},
																															val:        "=",
																															ignoreCase: false,
																														},
																													},
																													&notExpr{
																														pos: position{line: 171, col: 31, offset: 6952},
																														expr: &litMatcher{
																															pos:        position{line: 171, col: 32, offset: 6953},
																															val:        ",",
																															ignoreCase: false,
																														},
																													},
																													&notExpr{
																														pos: position{line: 171, col: 36, offset: 6957},
																														expr: &litMatcher{
																															pos:        position{line: 171, col: 37, offset: 6958},
																															val:        "]",
																															ignoreCase: false,
																														},
																													},
																													&anyMatcher{
																														line: 171, col: 41, offset: 6962,
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&zeroOrOneExpr{
																								pos: position{line: 161, col: 67, offset: 6617},
																								expr: &litMatcher{
																									pos:        position{line: 161, col: 67, offset: 6617},
																									val:        ",",
																									ignoreCase: false,
																								},
																							},
																							&zeroOrMoreExpr{
																								pos: position{line: 161, col: 72, offset: 6622},
																								expr: &choiceExpr{
																									pos: position{line: 895, col: 7, offset: 37107},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 895, col: 7, offset: 37107},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 895, col: 13, offset: 37113},
																											run: (*parser).callonInlineElement341,
																											expr: &litMatcher{
																												pos:        position{line: 895, col: 13, offset: 37113},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																				&actionExpr{
																					pos: position{line: 163, col: 5, offset: 6729},
																					run: (*parser).callonInlineElement343,
																					expr: &seqExpr{
																						pos: position{line: 163, col: 5, offset: 6729},
																						exprs: []interface{}{
																							&labeledExpr{
																								pos:   position{line: 163, col: 5, offset: 6729},
																								label: "key",
																								expr: &actionExpr{
																									pos: position{line: 167, col: 17, offset: 6861},
																									run: (*parser).callonInlineElement346,
																									expr: &seqExpr{
																										pos: position{line: 167, col: 17, offset: 6861},
																										exprs: []interface{}{
																											&notExpr{
																												pos: position{line: 167, col: 17, offset: 6861},
																												expr: &actionExpr{
																													pos: position{line: 207, col: 14, offset: 8362},
																													run: (*parser).callonInlineElement349,
																													expr: &litMatcher{
																														pos:        position{line: 207, col: 14, offset: 8362},
																														val:        "verse",
																														ignoreCase: false,
																													},
																												},
																											},
																											&labeledExpr{
																												pos:   position{line: 167, col: 28, offset: 6872},
																												label: "key",
																												expr: &oneOrMoreExpr{
																													pos: position{line: 167, col: 32, offset: 6876},
																													expr: &seqExpr{
																														pos: position{line: 167, col: 33, offset: 6877},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 167, col: 33, offset: 6877},
																																expr: &litMatcher{
																																	pos:        position{line: 167, col: 34, offset: 6878},
																																	val:        "=",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 167, col: 38, offset: 6882},
																																expr: &litMatcher{
																																	pos:        position{line: 167, col: 39, offset: 6883},
																																	val:        ",",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 167, col: 43, offset: 6887},
																																expr: &litMatcher{
																																	pos:        position{line: 167, col: 44, offset: 6888},
																																	val:        "]",
																																	ignoreCase: false,
																																},
																															},
																															&anyMatcher{
																																line: 167, col: 48, offset: 6892,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&zeroOrOneExpr{
																								pos: position{line: 163, col: 24, offset: 6748},
																								expr: &litMatcher{
																									pos:        position{line: 163, col: 24, offset: 6748},
																									val:        ",",
																									ignoreCase: false,
																								},
																							},
																							&zeroOrMoreExpr{
																								pos: position{line: 163, col: 29, offset: 6753},
																								expr: &choiceExpr{
																									pos: position{line: 895, col: 7, offset: 37107},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 895, col: 7, offset: 37107},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 895, col: 13, offset: 37113},
																											run: (*parser).callonInlineElement366,
																											expr: &litMatcher{
																												pos:        position{line: 895, col: 13, offset: 37113},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																},
																&litMatcher{
																	pos:        position{line: 668, col: 40, offset: 28856},
																	val:        "]",
																	ignoreCase: false,
																},
															},
														},
													},
													&actionExpr{
														pos: position{line: 670, col: 9, offset: 28973},
														run: (*parser).callonInlineElement369,
														expr: &seqExpr{
															pos: position{line: 670, col: 9, offset: 28973},
															exprs: []interface{}{
																&litMatcher{
																	pos:        position{line: 670, col: 9, offset: 28973},
																	val:        "[",
																	ignoreCase: false,
																},
																&labeledExpr{
																	pos:   position{line: 670, col: 13, offset: 28977},
																	label: "otherAttrs",
																	expr: &zeroOrMoreExpr{
																		pos: position{line: 670, col: 24, offset: 28988},
																		expr: &choiceExpr{
																			pos: position{line: 161, col: 21, offset: 6571},
																			alternatives: []interface{}{
																				&actionExpr{
																					pos: position{line: 161, col: 21, offset: 6571},
																					run: (*parser).callonInlineElement375,
																					expr: &seqExpr{
																						pos: position{line: 161, col: 21, offset: 6571},
																						exprs: []interface{}{
																							&labeledExpr{
																								pos:   position{line: 161, col: 21, offset: 6571},
																								label: "key",
																								expr: &actionExpr{
																									pos: position{line: 167, col: 17, offset: 6861},
																									run: (*parser).callonInlineElement378,
																									expr: &seqExpr{
																										pos: position{line: 167, col: 17, offset: 6861},
																										exprs: []interface{}{
																											&notExpr{
																												pos: position{line: 167, col: 17, offset: 6861},
																												expr: &actionExpr{
																													pos: position{line: 207, col: 14, offset: 8362},
																													run: (*parser).callonInlineElement381,
																													expr: &litMatcher{
																														pos:        position{line: 207, col: 14, offset: 8362},
																														val:        "verse",
																														ignoreCase: false,
																													},
																												},
																											},
																											&labeledExpr{
																												pos:   position{line: 167, col: 28, offset: 6872},
																												label: "key",
																												expr: &oneOrMoreExpr{
																													pos: position{line: 167, col: 32, offset: 6876},
																													expr: &seqExpr{
																														pos: position{line: 167, col: 33, offset: 6877},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 167, col: 33, offset: 6877},
																																expr: &litMatcher{
																																	pos:        position{line: 167, col: 34, offset: 6878},
																																	val:        "=",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 167, col: 38, offset: 6882},
																																expr: &litMatcher{
																																	pos:        position{line: 167, col: 39, offset: 6883},
																																	val:        ",",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 167, col: 43, offset: 6887},
																																expr: &litMatcher{
																																	pos:        position{line: 167, col: 44, offset: 6888},
																																	val:        "]",
																																	ignoreCase: false,
																																},
																															},
																															&anyMatcher{
																																line: 167, col: 48, offset: 6892,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&litMatcher{
																								pos:        position{line: 161, col: 40, offset: 6590},
																								val:        "=",
																								ignoreCase: false,
																							},
																							&labeledExpr{
																								pos:   position{line: 161, col: 44, offset: 6594},
																								label: "value",
																								expr: &actionExpr{
																									pos: position{line: 171, col: 19, offset: 6940},
																									run: (*parser).callonInlineElement395,
																									expr: &labeledExpr{
																										pos:   position{line: 171, col: 19, offset: 6940},
																										label: "value",
																										expr: &zeroOrMoreExpr{
																											pos: position{line: 171, col: 25, offset: 6946},
																											expr: &seqExpr{
																												pos: position{line: 171, col: 26, offset: 6947},
																												exprs: []interface{}{
																													&notExpr{
																														pos: position{line: 171, col: 26, offset: 6947},
																														expr: &litMatcher{
																															pos:        position{line: 171, col: 27, offset: 6948},
																															val:        "=",
																															ignoreCase: false,
																														},
																													},
																													&notExpr{
																														pos: position{line: 171, col: 31, offset: 6952},
																														expr: &litMatcher{
																															pos:        position{line: 171, col: 32, offset: 6953},
																															val:        ",",
																															ignoreCase: false,
																														},
																													},
																													&notExpr{
																														pos: position{line: 171, col: 36, offset: 6957},
																														expr: &litMatcher{
																															pos:        position{line: 171, col: 37, offset: 6958},
																															val:        "]",
																															ignoreCase: false,
																														},
																													},
																													&anyMatcher{
																														line: 171, col: 41, offset: 6962,
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&zeroOrOneExpr{
																								pos: position{line: 161, col: 67, offset: 6617},
																								expr: &litMatcher{
																									pos:        position{line: 161, col: 67, offset: 6617},
																									val:        ",",
																									ignoreCase: false,
																								},
																							},
																							&zeroOrMoreExpr{
																								pos: position{line: 161, col: 72, offset: 6622},
																								expr: &choiceExpr{
																									pos: position{line: 895, col: 7, offset: 37107},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 895, col: 7, offset: 37107},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 895, col: 13, offset: 37113},
																											run: (*parser).callonInlineElement411,
																											expr: &litMatcher{
																												pos:        position{line: 895, col: 13, offset: 37113},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																				&actionExpr{
																					pos: position{line: 163, col: 5, offset: 6729},
																					run: (*parser).callonInlineElement413,
																					expr: &seqExpr{
																						pos: position{line: 163, col: 5, offset: 6729},
																						exprs: []interface{}{
																							&labeledExpr{
																								pos:   position{line: 163, col: 5, offset: 6729},
																								label: "key",
																								expr: &actionExpr{
																									pos: position{line: 167, col: 17, offset: 6861},
																									run: (*parser).callonInlineElement416,
																									expr: &seqExpr{
																										pos: position{line: 167, col: 17, offset: 6861},
																										exprs: []interface{}{
																											&notExpr{
																												pos: position{line: 167, col: 17, offset: 6861},
																												expr: &actionExpr{
																													pos: position{line: 207, col: 14, offset: 8362},
																													run: (*parser).callonInlineElement419,
																													expr: &litMatcher{
																														pos:        position{line: 207, col: 14, offset: 8362},
																														val:        "verse",
																														ignoreCase: false,
																													},
																												},
																											},
																											&labeledExpr{
																												pos:   position{line: 167, col: 28, offset: 6872},
																												label: "key",
																												expr: &oneOrMoreExpr{
																													pos: position{line: 167, col: 32, offset: 6876},
																													expr: &seqExpr{
																														pos: position{line: 167, col: 33, offset: 6877},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 167, col: 33, offset: 6877},
																																expr: &litMatcher{
																																	pos:        position{line: 167, col: 34, offset: 6878},
																																	val:        "=",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 167, col: 38, offset: 6882},
																																expr: &litMatcher{
																																	pos:        position{line: 167, col: 39, offset: 6883},
																																	val:        ",",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 167, col: 43, offset: 6887},
																																expr: &litMatcher{
																																	pos:        position{line: 167, col: 44, offset: 6888},
																																	val:        "]",
																																	ignoreCase: false,
																																},
																															},
																															&anyMatcher{
																																line: 167, col: 48, offset: 6892,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&zeroOrOneExpr{
																								pos: position{line: 163, col: 24, offset: 6748},
																								expr: &litMatcher{
																									pos:        position{line: 163, col: 24, offset: 6748},
																									val:        ",",
																									ignoreCase: false,
																								},
																							},
																							&zeroOrMoreExpr{
																								pos: position{line: 163, col: 29, offset: 6753},
																								expr: &choiceExpr{
																									pos: position{line: 895, col: 7, offset: 37107},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 895, col: 7, offset: 37107},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 895, col: 13, offset: 37113},
																											run: (*parser).callonInlineElement436,
																											expr: &litMatcher{
																												pos:        position{line: 895, col: 13, offset: 37113},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																},
																&litMatcher{
																	pos:        position{line: 670, col: 44, offset: 29008},
																	val:        "]",
																	ignoreCase: false,
																},
															},
														},
													},
												},
											},
										},
									},
								},
							},
							&actionExpr{
								pos: position{line: 620, col: 9, offset: 26772},
								run: (*parser).callonInlineElement439,
								expr: &labeledExpr{
									pos:   position{line: 620, col: 9, offset: 26772},
									label: "link",
									expr: &choiceExpr{
										pos: position{line: 620, col: 15, offset: 26778},
										alternatives: []interface{}{
											&actionExpr{
												pos: position{line: 631, col: 17, offset: 27148},
												run: (*parser).callonInlineElement442,
												expr: &seqExpr{
													pos: position{line: 631, col: 17, offset: 27148},
													exprs: []interface{}{
														&litMatcher{
															pos:        position{line: 631, col: 17, offset: 27148},
															val:        "link:",
															ignoreCase: false,
														},
														&labeledExpr{
															pos:   position{line: 631, col: 25, offset: 27156},
															label: "url",
															expr: &seqExpr{
																pos: position{line: 631, col: 30, offset: 27161},
																exprs: []interface{}{
																	&zeroOrOneExpr{
																		pos: position{line: 631, col: 30, offset: 27161},
																		expr: &choiceExpr{
																			pos: position{line: 891, col: 15, offset: 37027},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 891, col: 15, offset: 37027},
																					val:        "http://",
																					ignoreCase: false,
																				},
																				&litMatcher{
																					pos:        position{line: 891, col: 27, offset: 37039},
																					val:        "https://",
																					ignoreCase: false,
																				},
																				&litMatcher{
																					pos:        position{line: 891, col: 40, offset: 37052},
																					val:        "ftp://",
																					ignoreCase: false,
																				},
																				&litMatcher{
																					pos:        position{line: 891, col: 51, offset: 37063},
																					val:        "irc://",
																					ignoreCase: false,
																				},
																				&litMatcher{
																					pos:        position{line: 891, col: 62, offset: 37074},
																					val:        "mailto:",
																					ignoreCase: false,
																				},
																			},
																		},
																	},
																	&actionExpr{
																		pos: position{line: 879, col: 8, offset: 36796},
																		run: (*parser).callonInlineElement454,
																		expr: &oneOrMoreExpr{
																			pos: position{line: 879, col: 8, offset: 36796},
																			expr: &seqExpr{
																				pos: position{line: 879, col: 9, offset: 36797},
																				exprs: []interface{}{
																					&notExpr{
																						pos: position{line: 879, col: 9, offset: 36797},
																						expr: &choiceExpr{
																							pos: position{line: 899, col: 12, offset: 37169},
																							alternatives: []interface{}{
																								&litMatcher{
																									pos:        position{line: 899, col: 12, offset: 37169},
																									val:        "\r\n",
																									ignoreCase: false,
																								},
																								&charClassMatcher{
																									pos:        position{line: 899, col: 21, offset: 37178},
																									val:        "[\\r\\n]",
																									chars:      []rune{'\r', '\n'},
																									ignoreCase: false,
																									inverted:   false,
																								},
																							},
																						},
																					},
																					&notExpr{
																						pos: position{line: 879, col: 18, offset: 36806},
																						expr: &choiceExpr{
																							pos: position{line: 895, col: 7, offset: 37107},
																							alternatives: []interface{}{
																								&litMatcher{
																									pos:        position{line: 895, col: 7, offset: 37107},
																									val:        " ",
																									ignoreCase: false,
																								},
																								&actionExpr{
																									pos: position{line: 895, col: 13, offset: 37113},
																									run: (*parser).callonInlineElement464,
																									expr: &litMatcher{
																										pos:        position{line: 895, col: 13, offset: 37113},
																										val:        "\t",
																										ignoreCase: false,
																									},
																								},
																							},
																						},
																					},
																					&notExpr{
																						pos: position{line: 879, col: 22, offset: 36810},
																						expr: &litMatcher{
																							pos:        position{line: 879, col: 23, offset: 36811},
																							val:        "[",
																							ignoreCase: false,
																						},
																					},
																					&notExpr{
																						pos: position{line: 879, col: 27, offset: 36815},
																						expr: &litMatcher{
																							pos:        position{line: 879, col: 28, offset: 36816},
																							val:        "]",
																							ignoreCase: false,
																						},
																					},
																					&anyMatcher{
																						line: 879, col: 32, offset: 36820,
																					},
																				},
																			},
																		},
																	},
																},
															},
														},
														&labeledExpr{
															pos:   position{line: 631, col: 47, offset: 27178},
															label: "attributes",
															expr: &choiceExpr{
																pos: position{line: 635, col: 19, offset: 27313},
																alternatives: []interface{}{
																	&actionExpr{
																		pos: position{line: 635, col: 19, offset: 27313},
																		run: (*parser).callonInlineElement473,
																		expr: &seqExpr{
																			pos: position{line: 635, col: 19, offset: 27313},
																			exprs: []interface{}{
																				&litMatcher{
																					pos:        position{line: 635, col: 19, offset: 27313},
																					val:        "[",
																					ignoreCase: false,
																				},
																				&labeledExpr{
																					pos:   position{line: 635, col: 23, offset: 27317},
																					label: "text",
																					expr: &actionExpr{
																						pos: position{line: 642, col: 22, offset: 27609},
																						run: (*parser).callonInlineElement477,
																						expr: &labeledExpr{
																							pos:   position{line: 642, col: 22, offset: 27609},
																							label: "value",
																							expr: &oneOrMoreExpr{
																								pos: position{line: 642, col: 28, offset: 27615},
																								expr: &seqExpr{
																									pos: position{line: 642, col: 29, offset: 27616},
																									exprs: []interface{}{
																										&notExpr{
																											pos: position{line: 642, col: 29, offset: 27616},
																											expr: &litMatcher{
																												pos:        position{line: 642, col: 30, offset: 27617},
																												val:        ",",
																												ignoreCase: false,
																											},
																										},
																										&notExpr{
																											pos: position{line: 642, col: 34, offset: 27621},
																											expr: &litMatcher{
																												pos:        position{line: 642, col: 35, offset: 27622},
																												val:        "]",
																												ignoreCase: false,
																											},
																										},
																										&anyMatcher{
																											line: 642, col: 39, offset: 27626,
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																				&labeledExpr{
																					pos:   position{line: 636, col: 9, offset: 27350},
																					label: "otherAttrs",
																					expr: &zeroOrMoreExpr{
																						pos: position{line: 636, col: 20, offset: 27361},
																						expr: &choiceExpr{
																							pos: position{line: 161, col: 21, offset: 6571},
																							alternatives: []interface{}{
																								&actionExpr{
																									pos: position{line: 161, col: 21, offset: 6571},
																									run: (*parser).callonInlineElement489,
																									expr: &seqExpr{
																										pos: position{line: 161, col: 21, offset: 6571},
																										exprs: []interface{}{
																											&labeledExpr{
																												pos:   position{line: 161, col: 21, offset: 6571},
																												label: "key",
																												expr: &actionExpr{
																													pos: position{line: 167, col: 17, offset: 6861},
																													run: (*parser).callonInlineElement492,
																													expr: &seqExpr{
																														pos: position{line: 167, col: 17, offset: 6861},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 167, col: 17, offset: 6861},
																																expr: &actionExpr{
																																	pos: position{line: 207, col: 14, offset: 8362},
																																	run: (*parser).callonInlineElement495,
																																	expr: &litMatcher{
																																		pos:        position{line: 207, col: 14, offset: 8362},
																																		val:        "verse",
																																		ignoreCase: false,
																																	},
																																},
																															},
																															&labeledExpr{
																																pos:   position{line: 167, col: 28, offset: 6872},
																																label: "key",
																																expr: &oneOrMoreExpr{
																																	pos: position{line: 167, col: 32, offset: 6876},
																																	expr: &seqExpr{
																																		pos: position{line: 167, col: 33, offset: 6877},
																																		exprs: []interface{}{
																																			&notExpr{
																																				pos: position{line: 167, col: 33, offset: 6877},
																																				expr: &litMatcher{
																																					pos:        position{line: 167, col: 34, offset: 6878},
																																					val:        "=",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 167, col: 38, offset: 6882},
																																				expr: &litMatcher{
																																					pos:        position{line: 167, col: 39, offset: 6883},
																																					val:        ",",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 167, col: 43, offset: 6887},
																																				expr: &litMatcher{
																																					pos:        position{line: 167, col: 44, offset: 6888},
																																					val:        "]",
																																					ignoreCase: false,
																																				},
																																			},
																																			&anyMatcher{
																																				line: 167, col: 48, offset: 6892,
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																											&litMatcher{
																												pos:        position{line: 161, col: 40, offset: 6590},
																												val:        "=",
																												ignoreCase: false,
																											},
																											&labeledExpr{
																												pos:   position{line: 161, col: 44, offset: 6594},
																												label: "value",
																												expr: &actionExpr{
																													pos: position{line: 171, col: 19, offset: 6940},
																													run: (*parser).callonInlineElement509,
																													expr: &labeledExpr{
																														pos:   position{line: 171, col: 19, offset: 6940},
																														label: "value",
																														expr: &zeroOrMoreExpr{
																															pos: position{line: 171, col: 25, offset: 6946},
																															expr: &seqExpr{
																																pos: position{line: 171, col: 26, offset: 6947},
																																exprs: []interface{}{
																																	&notExpr{
																																		pos: position{line: 171, col: 26, offset: 6947},
																																		expr: &litMatcher{
																																			pos:        position{line: 171, col: 27, offset: 6948},
																																			val:        "=",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 171, col: 31, offset: 6952},
																																		expr: &litMatcher{
																																			pos:        position{line: 171, col: 32, offset: 6953},
																																			val:        ",",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 171, col: 36, offset: 6957},
																																		expr: &litMatcher{
																																			pos:        position{line: 171, col: 37, offset: 6958},
																																			val:        "]",
																																			ignoreCase: false,
																																		},
																																	},
																																	&anyMatcher{
																																		line: 171, col: 41, offset: 6962,
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																											&zeroOrOneExpr{
																												pos: position{line: 161, col: 67, offset: 6617},
																												expr: &litMatcher{
																													pos:        position{line: 161, col: 67, offset: 6617},
																													val:        ",",
																													ignoreCase: false,
																												},
																											},
																											&zeroOrMoreExpr{
																												pos: position{line: 161, col: 72, offset: 6622},
																												expr: &choiceExpr{
																													pos: position{line: 895, col: 7, offset: 37107},
																													alternatives: []interface{}{
																														&litMatcher{
																															pos:        position{line: 895, col: 7, offset: 37107},
																															val:        " ",
																															ignoreCase: false,
																														},
																														&actionExpr{
																															pos: position{line: 895, col: 13, offset: 37113},
																															run: (*parser).callonInlineElement525,
																															expr: &litMatcher{
																																pos:        position{line: 895, col: 13, offset: 37113},
																																val:        "\t",
																																ignoreCase: false,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&actionExpr{
																									pos: position{line: 163, col: 5, offset: 6729},
																									run: (*parser).callonInlineElement527,
																									expr: &seqExpr{
																										pos: position{line: 163, col: 5, offset: 6729},
																										exprs: []interface{}{
																											&labeledExpr{
																												pos:   position{line: 163, col: 5, offset: 6729},
																												label: "key",
																												expr: &actionExpr{
																													pos: position{line: 167, col: 17, offset: 6861},
																													run: (*parser).callonInlineElement530,
																													expr: &seqExpr{
																														pos: position{line: 167, col: 17, offset: 6861},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 167, col: 17, offset: 6861},
																																expr: &actionExpr{
																																	pos: position{line: 207, col: 14, offset: 8362},
																																	run: (*parser).callonInlineElement533,
																																	expr: &litMatcher{
																																		pos:        position{line: 207, col: 14, offset: 8362},
																																		val:        "verse",
																																		ignoreCase: false,
																																	},
																																},
																															},
																															&labeledExpr{
																																pos:   position{line: 167, col: 28, offset: 6872},
																																label: "key",
																																expr: &oneOrMoreExpr{
																																	pos: position{line: 167, col: 32, offset: 6876},
																																	expr: &seqExpr{
																																		pos: position{line: 167, col: 33, offset: 6877},
																																		exprs: []interface{}{
																																			&notExpr{
																																				pos: position{line: 167, col: 33, offset: 6877},
																																				expr: &litMatcher{
																																					pos:        position{line: 167, col: 34, offset: 6878},
																																					val:        "=",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 167, col: 38, offset: 6882},
																																				expr: &litMatcher{
																																					pos:        position{line: 167, col: 39, offset: 6883},
																																					val:        ",",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 167, col: 43, offset: 6887},
																																				expr: &litMatcher{
																																					pos:        position{line: 167, col: 44, offset: 6888},
																																					val:        "]",
																																					ignoreCase: false,
																																				},
																																			},
																																			&anyMatcher{
																																				line: 167, col: 48, offset: 6892,
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																											&zeroOrOneExpr{
																												pos: position{line: 163, col: 24, offset: 6748},
																												expr: &litMatcher{
																													pos:        position{line: 163, col: 24, offset: 6748},
																													val:        ",",
																													ignoreCase: false,
																												},
																											},
																											&zeroOrMoreExpr{
																												pos: position{line: 163, col: 29, offset: 6753},
																												expr: &choiceExpr{
																													pos: position{line: 895, col: 7, offset: 37107},
																													alternatives: []interface{}{
																														&litMatcher{
																															pos:        position{line: 895, col: 7, offset: 37107},
																															val:        " ",
																															ignoreCase: false,
																														},
																														&actionExpr{
																															pos: position{line: 895, col: 13, offset: 37113},
																															run: (*parser).callonInlineElement550,
																															expr: &litMatcher{
																																pos:        position{line: 895, col: 13, offset: 37113},
																																val:        "\t",
																																ignoreCase: false,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																				&litMatcher{
																					pos:        position{line: 636, col: 40, offset: 27381},
																					val:        "]",
																					ignoreCase: false,
																				},
																			},
																		},
																	},
																	&actionExpr{
																		pos: position{line: 638, col: 5, offset: 27476},
																		run: (*parser).callonInlineElement553,
																		expr: &seqExpr{
																			pos: position{line: 638, col: 5, offset: 27476},
																			exprs: []interface{}{
																				&litMatcher{
																					pos:        position{line: 638, col: 5, offset: 27476},
																					val:        "[",
																					ignoreCase: false,
																				},
																				&labeledExpr{
																					pos:   position{line: 638, col: 9, offset: 27480},
																					label: "otherAttrs",
																					expr: &zeroOrMoreExpr{
																						pos: position{line: 638, col: 20, offset: 27491},
																						expr: &choiceExpr{
																							pos: position{line: 161, col: 21, offset: 6571},
																							alternatives: []interface{}{
																								&actionExpr{
																									pos: position{line: 161, col: 21, offset: 6571},
																									run: (*parser).callonInlineElement559,
																									expr: &seqExpr{
																										pos: position{line: 161, col: 21, offset: 6571},
																										exprs: []interface{}{
																											&labeledExpr{
																												pos:   position{line: 161, col: 21, offset: 6571},
																												label: "key",
																												expr: &actionExpr{
																													pos: position{line: 167, col: 17, offset: 6861},
																													run: (*parser).callonInlineElement562,
																													expr: &seqExpr{
																														pos: position{line: 167, col: 17, offset: 6861},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 167, col: 17, offset: 6861},
																																expr: &actionExpr{
																																	pos: position{line: 207, col: 14, offset: 8362},
																																	run: (*parser).callonInlineElement565,
																																	expr: &litMatcher{
																																		pos:        position{line: 207, col: 14, offset: 8362},
																																		val:        "verse",
																																		ignoreCase: false,
																																	},
																																},
																															},
																															&labeledExpr{
																																pos:   position{line: 167, col: 28, offset: 6872},
																																label: "key",
																																expr: &oneOrMoreExpr{
																																	pos: position{line: 167, col: 32, offset: 6876},
																																	expr: &seqExpr{
																																		pos: position{line: 167, col: 33, offset: 6877},
																																		exprs: []interface{}{
																																			&notExpr{
																																				pos: position{line: 167, col: 33, offset: 6877},
																																				expr: &litMatcher{
																																					pos:        position{line: 167, col: 34, offset: 6878},
																																					val:        "=",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 167, col: 38, offset: 6882},
																																				expr: &litMatcher{
																																					pos:        position{line: 167, col: 39, offset: 6883},
																																					val:        ",",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 167, col: 43, offset: 6887},
																																				expr: &litMatcher{
																																					pos:        position{line: 167, col: 44, offset: 6888},
																																					val:        "]",
																																					ignoreCase: false,
																																				},
																																			},
																																			&anyMatcher{
																																				line: 167, col: 48, offset: 6892,
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																											&litMatcher{
																												pos:        position{line: 161, col: 40, offset: 6590},
																												val:        "=",
																												ignoreCase: false,
																											},
																											&labeledExpr{
																												pos:   position{line: 161, col: 44, offset: 6594},
																												label: "value",
																												expr: &actionExpr{
																													pos: position{line: 171, col: 19, offset: 6940},
																													run: (*parser).callonInlineElement579,
																													expr: &labeledExpr{
																														pos:   position{line: 171, col: 19, offset: 6940},
																														label: "value",
																														expr: &zeroOrMoreExpr{
																															pos: position{line: 171, col: 25, offset: 6946},
																															expr: &seqExpr{
																																pos: position{line: 171, col: 26, offset: 6947},
																																exprs: []interface{}{
																																	&notExpr{
																																		pos: position{line: 171, col: 26, offset: 6947},
																																		expr: &litMatcher{
																																			pos:        position{line: 171, col: 27, offset: 6948},
																																			val:        "=",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 171, col: 31, offset: 6952},
																																		expr: &litMatcher{
																																			pos:        position{line: 171, col: 32, offset: 6953},
																																			val:        ",",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 171, col: 36, offset: 6957},
																																		expr: &litMatcher{
																																			pos:        position{line: 171, col: 37, offset: 6958},
																																			val:        "]",
																																			ignoreCase: false,
																																		},
																																	},
																																	&anyMatcher{
																																		line: 171, col: 41, offset: 6962,
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																											&zeroOrOneExpr{
																												pos: position{line: 161, col: 67, offset: 6617},
																												expr: &litMatcher{
																													pos:        position{line: 161, col: 67, offset: 6617},
																													val:        ",",
																													ignoreCase: false,
																												},
																											},
																											&zeroOrMoreExpr{
																												pos: position{line: 161, col: 72, offset: 6622},
																												expr: &choiceExpr{
																													pos: position{line: 895, col: 7, offset: 37107},
																													alternatives: []interface{}{
																														&litMatcher{
																															pos:        position{line: 895, col: 7, offset: 37107},
																															val:        " ",
																															ignoreCase: false,
																														},
																														&actionExpr{
																															pos: position{line: 895, col: 13, offset: 37113},
																															run: (*parser).callonInlineElement595,
																															expr: &litMatcher{
																																pos:        position{line: 895, col: 13, offset: 37113},
																																val:        "\t",
																																ignoreCase: false,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&actionExpr{
																									pos: position{line: 163, col: 5, offset: 6729},
																									run: (*parser).callonInlineElement597,
																									expr: &seqExpr{
																										pos: position{line: 163, col: 5, offset: 6729},
																										exprs: []interface{}{
																											&labeledExpr{
																												pos:   position{line: 163, col: 5, offset: 6729},
																												label: "key",
																												expr: &actionExpr{
																													pos: position{line: 167, col: 17, offset: 6861},
																													run: (*parser).callonInlineElement600,
																													expr: &seqExpr{
																														pos: position{line: 167, col: 17, offset: 6861},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 167, col: 17, offset: 6861},
																																expr: &actionExpr{
																																	pos: position{line: 207, col: 14, offset: 8362},
																																	run: (*parser).callonInlineElement603,
																																	expr: &litMatcher{
																																		pos:        position{line: 207, col: 14, offset: 8362},
																																		val:        "verse",
																																		ignoreCase: false,
																																	},
																																},
																															},
																															&labeledExpr{
																																pos:   position{line: 167, col: 28, offset: 6872},
																																label: "key",
																																expr: &oneOrMoreExpr{
																																	pos: position{line: 167, col: 32, offset: 6876},
																																	expr: &seqExpr{
																																		pos: position{line: 167, col: 33, offset: 6877},
																																		exprs: []interface{}{
																																			&notExpr{
																																				pos: position{line: 167, col: 33, offset: 6877},
																																				expr: &litMatcher{
																																					pos:        position{line: 167, col: 34, offset: 6878},
																																					val:        "=",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 167, col: 38, offset: 6882},
																																				expr: &litMatcher{
																																					pos:        position{line: 167, col: 39, offset: 6883},
																																					val:        ",",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 167, col: 43, offset: 6887},
																																				expr: &litMatcher{
																																					pos:        position{line: 167, col: 44, offset: 6888},
																																					val:        "]",
																																					ignoreCase: false,
																																				},
																																			},
																																			&anyMatcher{
																																				line: 167, col: 48, offset: 6892,
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																											&zeroOrOneExpr{
																												pos: position{line: 163, col: 24, offset: 6748},
																												expr: &litMatcher{
																													pos:        position{line: 163, col: 24, offset: 6748},
																													val:        ",",
																													ignoreCase: false,
																												},
																											},
																											&zeroOrMoreExpr{
																												pos: position{line: 163, col: 29, offset: 6753},
																												expr: &choiceExpr{
																													pos: position{line: 895, col: 7, offset: 37107},
																													alternatives: []interface{}{
																														&litMatcher{
																															pos:        position{line: 895, col: 7, offset: 37107},
																															val:        " ",
																															ignoreCase: false,
																														},
																														&actionExpr{
																															pos: position{line: 895, col: 13, offset: 37113},
																															run: (*parser).callonInlineElement620,
																															expr: &litMatcher{
																																pos:        position{line: 895, col: 13, offset: 37113},
																																val:        "\t",
																																ignoreCase: false,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																				&litMatcher{
																					pos:        position{line: 638, col: 40, offset: 27511},
																					val:        "]",
																					ignoreCase: false,
																				},
																			},
																		},
																	},
																},
															},
														},
													},
												},
											},
											&actionExpr{
												pos: position{line: 624, col: 17, offset: 26849},
												run: (*parser).callonInlineElement623,
												expr: &seqExpr{
													pos: position{line: 624, col: 17, offset: 26849},
													exprs: []interface{}{
														&labeledExpr{
															pos:   position{line: 624, col: 17, offset: 26849},
															label: "url",
															expr: &seqExpr{
																pos: position{line: 624, col: 22, offset: 26854},
																exprs: []interface{}{
																	&choiceExpr{
																		pos: position{line: 891, col: 15, offset: 37027},
																		alternatives: []interface{}{
																			&litMatcher{
																				pos:        position{line: 891, col: 15, offset: 37027},
																				val:        "http://",
																				ignoreCase: false,
																			},
																			&litMatcher{
																				pos:        position{line: 891, col: 27, offset: 37039},
																				val:        "https://",
																				ignoreCase: false,
																			},
																			&litMatcher{
																				pos:        position{line: 891, col: 40, offset: 37052},
																				val:        "ftp://",
																				ignoreCase: false,
																			},
																			&litMatcher{
																				pos:        position{line: 891, col: 51, offset: 37063},
																				val:        "irc://",
																				ignoreCase: false,
																			},
																			&litMatcher{
																				pos:        position{line: 891, col: 62, offset: 37074},
																				val:        "mailto:",
																				ignoreCase: false,
																			},
																		},
																	},
																	&actionExpr{
																		pos: position{line: 879, col: 8, offset: 36796},
																		run: (*parser).callonInlineElement633,
																		expr: &oneOrMoreExpr{
																			pos: position{line: 879, col: 8, offset: 36796},
																			expr: &seqExpr{
																				pos: position{line: 879, col: 9, offset: 36797},
																				exprs: []interface{}{
																					&notExpr{
																						pos: position{line: 879, col: 9, offset: 36797},
																						expr: &choiceExpr{
																							pos: position{line: 899, col: 12, offset: 37169},
																							alternatives: []interface{}{
																								&litMatcher{
																									pos:        position{line: 899, col: 12, offset: 37169},
																									val:        "\r\n",
																									ignoreCase: false,
																								},
																								&charClassMatcher{
																									pos:        position{line: 899, col: 21, offset: 37178},
																									val:        "[\\r\\n]",
																									chars:      []rune{'\r', '\n'},
																									ignoreCase: false,
																									inverted:   false,
																								},
																							},
																						},
																					},
																					&notExpr{
																						pos: position{line: 879, col: 18, offset: 36806},
																						expr: &choiceExpr{
																							pos: position{line: 895, col: 7, offset: 37107},
																							alternatives: []interface{}{
																								&litMatcher{
																									pos:        position{line: 895, col: 7, offset: 37107},
																									val:        " ",
																									ignoreCase: false,
																								},
																								&actionExpr{
																									pos: position{line: 895, col: 13, offset: 37113},
																									run: (*parser).callonInlineElement643,
																									expr: &litMatcher{
																										pos:        position{line: 895, col: 13, offset: 37113},
																										val:        "\t",
																										ignoreCase: false,
																									},
																								},
																							},
																						},
																					},
																					&notExpr{
																						pos: position{line: 879, col: 22, offset: 36810},
																						expr: &litMatcher{
																							pos:        position{line: 879, col: 23, offset: 36811},
																							val:        "[",
																							ignoreCase: false,
																						},
																					},
																					&notExpr{
																						pos: position{line: 879, col: 27, offset: 36815},
																						expr: &litMatcher{
																							pos:        position{line: 879, col: 28, offset: 36816},
																							val:        "]",
																							ignoreCase: false,
																						},
																					},
																					&anyMatcher{
																						line: 879, col: 32, offset: 36820,
																					},
																				},
																			},
																		},
																	},
																},
															},
														},
														&labeledExpr{
															pos:   position{line: 624, col: 38, offset: 26870},
															label: "attributes",
															expr: &choiceExpr{
																pos: position{line: 635, col: 19, offset: 27313},
																alternatives: []interface{}{
																	&actionExpr{
																		pos: position{line: 635, col: 19, offset: 27313},
																		run: (*parser).callonInlineElement652,
																		expr: &seqExpr{
																			pos: position{line: 635, col: 19, offset: 27313},
																			exprs: []interface{}{
																				&litMatcher{
																					pos:        position{line: 635, col: 19, offset: 27313},
																					val:        "[",
																					ignoreCase: false,
																				},
																				&labeledExpr{
																					pos:   position{line: 635, col: 23, offset: 27317},
																					label: "text",
																					expr: &actionExpr{
																						pos: position{line: 642, col: 22, offset: 27609},
																						run: (*parser).callonInlineElement656,
																						expr: &labeledExpr{
																							pos:   position{line: 642, col: 22, offset: 27609},
																							label: "value",
																							expr: &oneOrMoreExpr{
																								pos: position{line: 642, col: 28, offset: 27615},
																								expr: &seqExpr{
																									pos: position{line: 642, col: 29, offset: 27616},
																									exprs: []interface{}{
																										&notExpr{
																											pos: position{line: 642, col: 29, offset: 27616},
																											expr: &litMatcher{
																												pos:        position{line: 642, col: 30, offset: 27617},
																												val:        ",",
																												ignoreCase: false,
																											},
																										},
																										&notExpr{
																											pos: position{line: 642, col: 34, offset: 27621},
																											expr: &litMatcher{
																												pos:        position{line: 642, col: 35, offset: 27622},
																												val:        "]",
																												ignoreCase: false,
																											},
																										},
																										&anyMatcher{
																											line: 642, col: 39, offset: 27626,
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																				&labeledExpr{
																					pos:   position{line: 636, col: 9, offset: 27350},
																					label: "otherAttrs",
																					expr: &zeroOrMoreExpr{
																						pos: position{line: 636, col: 20, offset: 27361},
																						expr: &choiceExpr{
																							pos: position{line: 161, col: 21, offset: 6571},
																							alternatives: []interface{}{
																								&actionExpr{
																									pos: position{line: 161, col: 21, offset: 6571},
																									run: (*parser).callonInlineElement668,
																									expr: &seqExpr{
																										pos: position{line: 161, col: 21, offset: 6571},
																										exprs: []interface{}{
																											&labeledExpr{
																												pos:   position{line: 161, col: 21, offset: 6571},
																												label: "key",
																												expr: &actionExpr{
																													pos: position{line: 167, col: 17, offset: 6861},
																													run: (*parser).callonInlineElement671,
																													expr: &seqExpr{
																														pos: position{line: 167, col: 17, offset: 6861},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 167, col: 17, offset: 6861},
																																expr: &actionExpr{
																																	pos: position{line: 207, col: 14, offset: 8362},
																																	run: (*parser).callonInlineElement674,
																																	expr: &litMatcher{
																																		pos:        position{line: 207, col: 14, offset: 8362},
																																		val:        "verse",
																																		ignoreCase: false,
																																	},
																																},
																															},
																															&labeledExpr{
																																pos:   position{line: 167, col: 28, offset: 6872},
																																label: "key",
																																expr: &oneOrMoreExpr{
																																	pos: position{line: 167, col: 32, offset: 6876},
																																	expr: &seqExpr{
																																		pos: position{line: 167, col: 33, offset: 6877},
																																		exprs: []interface{}{
																																			&notExpr{
																																				pos: position{line: 167, col: 33, offset: 6877},
																																				expr: &litMatcher{
																																					pos:        position{line: 167, col: 34, offset: 6878},
																																					val:        "=",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 167, col: 38, offset: 6882},
																																				expr: &litMatcher{
																																					pos:        position{line: 167, col: 39, offset: 6883},
																																					val:        ",",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 167, col: 43, offset: 6887},
																																				expr: &litMatcher{
																																					pos:        position{line: 167, col: 44, offset: 6888},
																																					val:        "]",
																																					ignoreCase: false,
																																				},
																																			},
																																			&anyMatcher{
																																				line: 167, col: 48, offset: 6892,
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																											&litMatcher{
																												pos:        position{line: 161, col: 40, offset: 6590},
																												val:        "=",
																												ignoreCase: false,
																											},
																											&labeledExpr{
																												pos:   position{line: 161, col: 44, offset: 6594},
																												label: "value",
																												expr: &actionExpr{
																													pos: position{line: 171, col: 19, offset: 6940},
																													run: (*parser).callonInlineElement688,
																													expr: &labeledExpr{
																														pos:   position{line: 171, col: 19, offset: 6940},
																														label: "value",
																														expr: &zeroOrMoreExpr{
																															pos: position{line: 171, col: 25, offset: 6946},
																															expr: &seqExpr{
																																pos: position{line: 171, col: 26, offset: 6947},
																																exprs: []interface{}{
																																	&notExpr{
																																		pos: position{line: 171, col: 26, offset: 6947},
																																		expr: &litMatcher{
																																			pos:        position{line: 171, col: 27, offset: 6948},
																																			val:        "=",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 171, col: 31, offset: 6952},
																																		expr: &litMatcher{
																																			pos:        position{line: 171, col: 32, offset: 6953},
																																			val:        ",",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 171, col: 36, offset: 6957},
																																		expr: &litMatcher{
																																			pos:        position{line: 171, col: 37, offset: 6958},
																																			val:        "]",
																																			ignoreCase: false,
																																		},
																																	},
																																	&anyMatcher{
																																		line: 171, col: 41, offset: 6962,
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																											&zeroOrOneExpr{
																												pos: position{line: 161, col: 67, offset: 6617},
																												expr: &litMatcher{
																													pos:        position{line: 161, col: 67, offset: 6617},
																													val:        ",",
																													ignoreCase: false,
																												},
																											},
																											&zeroOrMoreExpr{
																												pos: position{line: 161, col: 72, offset: 6622},
																												expr: &choiceExpr{
																													pos: position{line: 895, col: 7, offset: 37107},
																													alternatives: []interface{}{
																														&litMatcher{
																															pos:        position{line: 895, col: 7, offset: 37107},
																															val:        " ",
																															ignoreCase: false,
																														},
																														&actionExpr{
																															pos: position{line: 895, col: 13, offset: 37113},
																															run: (*parser).callonInlineElement704,
																															expr: &litMatcher{
																																pos:        position{line: 895, col: 13, offset: 37113},
																																val:        "\t",
																																ignoreCase: false,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&actionExpr{
																									pos: position{line: 163, col: 5, offset: 6729},
																									run: (*parser).callonInlineElement706,
																									expr: &seqExpr{
																										pos: position{line: 163, col: 5, offset: 6729},
																										exprs: []interface{}{
																											&labeledExpr{
																												pos:   position{line: 163, col: 5, offset: 6729},
																												label: "key",
																												expr: &actionExpr{
																													pos: position{line: 167, col: 17, offset: 6861},
																													run: (*parser).callonInlineElement709,
																													expr: &seqExpr{
																														pos: position{line: 167, col: 17, offset: 6861},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 167, col: 17, offset: 6861},
																																expr: &actionExpr{
																																	pos: position{line: 207, col: 14, offset: 8362},
																																	run: (*parser).callonInlineElement712,
																																	expr: &litMatcher{
																																		pos:        position{line: 207, col: 14, offset: 8362},
																																		val:        "verse",
																																		ignoreCase: false,
																																	},
																																},
																															},
																															&labeledExpr{
																																pos:   position{line: 167, col: 28, offset: 6872},
																																label: "key",
																																expr: &oneOrMoreExpr{
																																	pos: position{line: 167, col: 32, offset: 6876},
																																	expr: &seqExpr{
																																		pos: position{line: 167, col: 33, offset: 6877},
																																		exprs: []interface{}{
																																			&notExpr{
																																				pos: position{line: 167, col: 33, offset: 6877},
																																				expr: &litMatcher{
																																					pos:        position{line: 167, col: 34, offset: 6878},
																																					val:        "=",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 167, col: 38, offset: 6882},
																																				expr: &litMatcher{
																																					pos:        position{line: 167, col: 39, offset: 6883},
																																					val:        ",",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 167, col: 43, offset: 6887},
																																				expr: &litMatcher{
																																					pos:        position{line: 167, col: 44, offset: 6888},
																																					val:        "]",
																																					ignoreCase: false,
																																				},
																																			},
																																			&anyMatcher{
																																				line: 167, col: 48, offset: 6892,
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																											&zeroOrOneExpr{
																												pos: position{line: 163, col: 24, offset: 6748},
																												expr: &litMatcher{
																													pos:        position{line: 163, col: 24, offset: 6748},
																													val:        ",",
																													ignoreCase: false,
																												},
																											},
																											&zeroOrMoreExpr{
																												pos: position{line: 163, col: 29, offset: 6753},
																												expr: &choiceExpr{
																													pos: position{line: 895, col: 7, offset: 37107},
																													alternatives: []interface{}{
																														&litMatcher{
																															pos:        position{line: 895, col: 7, offset: 37107},
																															val:        " ",
																															ignoreCase: false,
																														},
																														&actionExpr{
																															pos: position{line: 895, col: 13, offset: 37113},
																															run: (*parser).callonInlineElement729,
																															expr: &litMatcher{
																																pos:        position{line: 895, col: 13, offset: 37113},
																																val:        "\t",
																																ignoreCase: false,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																				&litMatcher{
																					pos:        position{line: 636, col: 40, offset: 27381},
																					val:        "]",
																					ignoreCase: false,
																				},
																			},
																		},
																	},
																	&actionExpr{
																		pos: position{line: 638, col: 5, offset: 27476},
																		run: (*parser).callonInlineElement732,
																		expr: &seqExpr{
																			pos: position{line: 638, col: 5, offset: 27476},
																			exprs: []interface{}{
																				&litMatcher{
																					pos:        position{line: 638, col: 5, offset: 27476},
																					val:        "[",
																					ignoreCase: false,
																				},
																				&labeledExpr{
																					pos:   position{line: 638, col: 9, offset: 27480},
																					label: "otherAttrs",
																					expr: &zeroOrMoreExpr{
																						pos: position{line: 638, col: 20, offset: 27491},
																						expr: &choiceExpr{
																							pos: position{line: 161, col: 21, offset: 6571},
																							alternatives: []interface{}{
																								&actionExpr{
																									pos: position{line: 161, col: 21, offset: 6571},
																									run: (*parser).callonInlineElement738,
																									expr: &seqExpr{
																										pos: position{line: 161, col: 21, offset: 6571},
																										exprs: []interface{}{
																											&labeledExpr{
																												pos:   position{line: 161, col: 21, offset: 6571},
																												label: "key",
																												expr: &actionExpr{
																													pos: position{line: 167, col: 17, offset: 6861},
																													run: (*parser).callonInlineElement741,
																													expr: &seqExpr{
																														pos: position{line: 167, col: 17, offset: 6861},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 167, col: 17, offset: 6861},
																																expr: &actionExpr{
																																	pos: position{line: 207, col: 14, offset: 8362},
																																	run: (*parser).callonInlineElement744,
																																	expr: &litMatcher{
																																		pos:        position{line: 207, col: 14, offset: 8362},
																																		val:        "verse",
																																		ignoreCase: false,
																																	},
																																},
																															},
																															&labeledExpr{
																																pos:   position{line: 167, col: 28, offset: 6872},
																																label: "key",
																																expr: &oneOrMoreExpr{
																																	pos: position{line: 167, col: 32, offset: 6876},
																																	expr: &seqExpr{
																																		pos: position{line: 167, col: 33, offset: 6877},
																																		exprs: []interface{}{
																																			&notExpr{
																																				pos: position{line: 167, col: 33, offset: 6877},
																																				expr: &litMatcher{
																																					pos:        position{line: 167, col: 34, offset: 6878},
																																					val:        "=",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 167, col: 38, offset: 6882},
																																				expr: &litMatcher{
																																					pos:        position{line: 167, col: 39, offset: 6883},
																																					val:        ",",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 167, col: 43, offset: 6887},
																																				expr: &litMatcher{
																																					pos:        position{line: 167, col: 44, offset: 6888},
																																					val:        "]",
																																					ignoreCase: false,
																																				},
																																			},
																																			&anyMatcher{
																																				line: 167, col: 48, offset: 6892,
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																											&litMatcher{
																												pos:        position{line: 161, col: 40, offset: 6590},
																												val:        "=",
																												ignoreCase: false,
																											},
																											&labeledExpr{
																												pos:   position{line: 161, col: 44, offset: 6594},
																												label: "value",
																												expr: &actionExpr{
																													pos: position{line: 171, col: 19, offset: 6940},
																													run: (*parser).callonInlineElement758,
																													expr: &labeledExpr{
																														pos:   position{line: 171, col: 19, offset: 6940},
																														label: "value",
																														expr: &zeroOrMoreExpr{
																															pos: position{line: 171, col: 25, offset: 6946},
																															expr: &seqExpr{
																																pos: position{line: 171, col: 26, offset: 6947},
																																exprs: []interface{}{
																																	&notExpr{
																																		pos: position{line: 171, col: 26, offset: 6947},
																																		expr: &litMatcher{
																																			pos:        position{line: 171, col: 27, offset: 6948},
																																			val:        "=",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 171, col: 31, offset: 6952},
																																		expr: &litMatcher{
																																			pos:        position{line: 171, col: 32, offset: 6953},
																																			val:        ",",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 171, col: 36, offset: 6957},
																																		expr: &litMatcher{
																																			pos:        position{line: 171, col: 37, offset: 6958},
																																			val:        "]",
																																			ignoreCase: false,
																																		},
																																	},
																																	&anyMatcher{
																																		line: 171, col: 41, offset: 6962,
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																											&zeroOrOneExpr{
																												pos: position{line: 161, col: 67, offset: 6617},
																												expr: &litMatcher{
																													pos:        position{line: 161, col: 67, offset: 6617},
																													val:        ",",
																													ignoreCase: false,
																												},
																											},
																											&zeroOrMoreExpr{
																												pos: position{line: 161, col: 72, offset: 6622},
																												expr: &choiceExpr{
																													pos: position{line: 895, col: 7, offset: 37107},
																													alternatives: []interface{}{
																														&litMatcher{
																															pos:        position{line: 895, col: 7, offset: 37107},
																															val:        " ",
																															ignoreCase: false,
																														},
																														&actionExpr{
																															pos: position{line: 895, col: 13, offset: 37113},
																															run: (*parser).callonInlineElement774,
																															expr: &litMatcher{
																																pos:        position{line: 895, col: 13, offset: 37113},
																																val:        "\t",
																																ignoreCase: false,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&actionExpr{
																									pos: position{line: 163, col: 5, offset: 6729},
																									run: (*parser).callonInlineElement776,
																									expr: &seqExpr{
																										pos: position{line: 163, col: 5, offset: 6729},
																										exprs: []interface{}{
																											&labeledExpr{
																												pos:   position{line: 163, col: 5, offset: 6729},
																												label: "key",
																												expr: &actionExpr{
																													pos: position{line: 167, col: 17, offset: 6861},
																													run: (*parser).callonInlineElement779,
																													expr: &seqExpr{
																														pos: position{line: 167, col: 17, offset: 6861},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 167, col: 17, offset: 6861},
																																expr: &actionExpr{
																																	pos: position{line: 207, col: 14, offset: 8362},
																																	run: (*parser).callonInlineElement782,
																																	expr: &litMatcher{
																																		pos:        position{line: 207, col: 14, offset: 8362},
																																		val:        "verse",
																																		ignoreCase: false,
																																	},
																																},
																															},
																															&labeledExpr{
																																pos:   position{line: 167, col: 28, offset: 6872},
																																label: "key",
																																expr: &oneOrMoreExpr{
																																	pos: position{line: 167, col: 32, offset: 6876},
																																	expr: &seqExpr{
																																		pos: position{line: 167, col: 33, offset: 6877},
																																		exprs: []interface{}{
																																			&notExpr{
																																				pos: position{line: 167, col: 33, offset: 6877},
																																				expr: &litMatcher{
																																					pos:        position{line: 167, col: 34, offset: 6878},
																																					val:        "=",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 167, col: 38, offset: 6882},
																																				expr: &litMatcher{
																																					pos:        position{line: 167, col: 39, offset: 6883},
																																					val:        ",",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 167, col: 43, offset: 6887},
																																				expr: &litMatcher{
																																					pos:        position{line: 167, col: 44, offset: 6888},
																																					val:        "]",
																																					ignoreCase: false,
																																				},
																																			},
																																			&anyMatcher{
																																				line: 167, col: 48, offset: 6892,
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																											&zeroOrOneExpr{
																												pos: position{line: 163, col: 24, offset: 6748},
																												expr: &litMatcher{
																													pos:        position{line: 163, col: 24, offset: 6748},
																													val:        ",",
																													ignoreCase: false,
																												},
																											},
																											&zeroOrMoreExpr{
																												pos: position{line: 163, col: 29, offset: 6753},
																												expr: &choiceExpr{
																													pos: position{line: 895, col: 7, offset: 37107},
																													alternatives: []interface{}{
																														&litMatcher{
																															pos:        position{line: 895, col: 7, offset: 37107},
																															val:        " ",
																															ignoreCase: false,
																														},
																														&actionExpr{
																															pos: position{line: 895, col: 13, offset: 37113},
																															run: (*parser).callonInlineElement799,
																															expr: &litMatcher{
																																pos:        position{line: 895, col: 13, offset: 37113},
																																val:        "\t",
																																ignoreCase: false,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																				&litMatcher{
																					pos:        position{line: 638, col: 40, offset: 27511},
																					val:        "]",
																					ignoreCase: false,
																				},
																			},
																		},
																	},
																},
															},
														},
													},
												},
											},
											&actionExpr{
												pos: position{line: 626, col: 5, offset: 26988},
												run: (*parser).callonInlineElement802,
												expr: &labeledExpr{
													pos:   position{line: 626, col: 5, offset: 26988},
													label: "url",
													expr: &seqExpr{
														pos: position{line: 626, col: 10, offset: 26993},
														exprs: []interface{}{
															&choiceExpr{
																pos: position{line: 891, col: 15, offset: 37027},
																alternatives: []interface{}{
																	&litMatcher{
																		pos:        position{line: 891, col: 15, offset: 37027},
																		val:        "http://",
																		ignoreCase: false,
																	},
																	&litMatcher{
																		pos:        position{line: 891, col: 27, offset: 37039},
																		val:        "https://",
																		ignoreCase: false,
																	},
																	&litMatcher{
																		pos:        position{line: 891, col: 40, offset: 37052},
																		val:        "ftp://",
																		ignoreCase: false,
																	},
																	&litMatcher{
																		pos:        position{line: 891, col: 51, offset: 37063},
																		val:        "irc://",
																		ignoreCase: false,
																	},
																	&litMatcher{
																		pos:        position{line: 891, col: 62, offset: 37074},
																		val:        "mailto:",
																		ignoreCase: false,
																	},
																},
															},
															&actionExpr{
																pos: position{line: 879, col: 8, offset: 36796},
																run: (*parser).callonInlineElement811,
																expr: &oneOrMoreExpr{
																	pos: position{line: 879, col: 8, offset: 36796},
																	expr: &seqExpr{
																		pos: position{line: 879, col: 9, offset: 36797},
																		exprs: []interface{}{
																			&notExpr{
																				pos: position{line: 879, col: 9, offset: 36797},
																				expr: &choiceExpr{
																					pos: position{line: 899, col: 12, offset: 37169},
																					alternatives: []interface{}{
																						&litMatcher{
																							pos:        position{line: 899, col: 12, offset: 37169},
																							val:        "\r\n",
																							ignoreCase: false,
																						},
																						&charClassMatcher{
																							pos:        position{line: 899, col: 21, offset: 37178},
																							val:        "[\\r\\n]",
																							chars:      []rune{'\r', '\n'},
																							ignoreCase: false,
																							inverted:   false,
																						},
																					},
																				},
																			},
																			&notExpr{
																				pos: position{line: 879, col: 18, offset: 36806},
																				expr: &choiceExpr{
																					pos: position{line: 895, col: 7, offset: 37107},
																					alternatives: []interface{}{
																						&litMatcher{
																							pos:        position{line: 895, col: 7, offset: 37107},
																							val:        " ",
																							ignoreCase: false,
																						},
																						&actionExpr{
																							pos: position{line: 895, col: 13, offset: 37113},
																							run: (*parser).callonInlineElement821,
																							expr: &litMatcher{
																								pos:        position{line: 895, col: 13, offset: 37113},
																								val:        "\t",
																								ignoreCase: false,
																							},
																						},
																					},
																				},
																			},
																			&notExpr{
																				pos: position{line: 879, col: 22, offset: 36810},
																				expr: &litMatcher{
																					pos:        position{line: 879, col: 23, offset: 36811},
																					val:        "[",
																					ignoreCase: false,
																				},
																			},
																			&notExpr{
																				pos: position{line: 879, col: 27, offset: 36815},
																				expr: &litMatcher{
																					pos:        position{line: 879, col: 28, offset: 36816},
																					val:        "]",
																					ignoreCase: false,
																				},
																			},
																			&anyMatcher{
																				line: 879, col: 32, offset: 36820,
																			},
																		},
																	},
																},
															},
														},
													},
												},
											},
										},
									},
								},
							},
							&actionExpr{
								pos: position{line: 103, col: 34, offset: 4397},
								run: (*parser).callonInlineElement828,
								expr: &seqExpr{
									pos: position{line: 103, col: 34, offset: 4397},
									exprs: []interface{}{
										&litMatcher{
											pos:        position{line: 103, col: 34, offset: 4397},
											val:        "{",
											ignoreCase: false,
										},
										&labeledExpr{
											pos:   position{line: 103, col: 38, offset: 4401},
											label: "name",
											expr: &seqExpr{
												pos: position{line: 110, col: 18, offset: 4687},
												exprs: []interface{}{
													&charClassMatcher{
														pos:        position{line: 110, col: 19, offset: 4688},
														val:        "[_A-Za-z0-9]",
														chars:      []rune{'_'},
														ranges:     []rune{'A', 'Z', 'a', 'z', '0', '9'},
														ignoreCase: false,
														inverted:   false,
													},
													&zeroOrMoreExpr{
														pos: position{line: 110, col: 48, offset: 4717},
														expr: &charClassMatcher{
															pos:        position{line: 110, col: 49, offset: 4718},
															val:        "[-A-Za-z0-9]",
															chars:      []rune{'-'},
															ranges:     []rune{'A', 'Z', 'a', 'z', '0', '9'},
															ignoreCase: false,
															inverted:   false,
														},
													},
												},
											},
										},
										&litMatcher{
											pos:        position{line: 103, col: 59, offset: 4422},
											val:        "}",
											ignoreCase: false,
										},
									},
								},
							},
							&actionExpr{
								pos: position{line: 875, col: 9, offset: 36722},
								run: (*parser).callonInlineElement837,
								expr: &oneOrMoreExpr{
									pos: position{line: 875, col: 9, offset: 36722},
									expr: &seqExpr{
										pos: position{line: 875, col: 10, offset: 36723},
										exprs: []interface{}{
											&notExpr{
												pos: position{line: 875, col: 10, offset: 36723},
												expr: &choiceExpr{
													pos: position{line: 899, col: 12, offset: 37169},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 899, col: 12, offset: 37169},
															val:        "\r\n",
															ignoreCase: false,
														},
														&charClassMatcher{
															pos:        position{line: 899, col: 21, offset: 37178},
															val:        "[\\r\\n]",
															chars:      []rune{'\r', '\n'},
															ignoreCase: false,
															inverted:   false,
														},
													},
												},
											},
											&notExpr{
												pos: position{line: 875, col: 19, offset: 36732},
												expr: &choiceExpr{
													pos: position{line: 895, col: 7, offset: 37107},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 895, col: 7, offset: 37107},
															val:        " ",
															ignoreCase: false,
														},
														&actionExpr{
															pos: position{line: 895, col: 13, offset: 37113},
															run: (*parser).callonInlineElement847,
															expr: &litMatcher{
																pos:        position{line: 895, col: 13, offset: 37113},
																val:        "\t",
																ignoreCase: false,
															},
														},
													},
												},
											},
											&notExpr{
												pos: position{line: 875, col: 23, offset: 36736},
												expr: &charClassMatcher{
													pos:        position{line: 873, col: 16, offset: 36691},
													val:        "[()[]]",
													chars:      []rune{'(', ')', '[', ']'},
													ignoreCase: false,
													inverted:   false,
												},
											},
											&anyMatcher{
												line: 875, col: 36, offset: 36749,
											},
										},
									},
								},
							},
							&charClassMatcher{
								pos:        position{line: 873, col: 16, offset: 36691},
								val:        "[()[]]",
								chars:      []rune{'(', ')', '[', ']'},
								ignoreCase: false,
								inverted:   false,
							},
						},
					},
				},
			},
		},
		{
			name: "QuotedText",
			pos:  position{line: 513, col: 1, offset: 20742},
			expr: &choiceExpr{
				pos: position{line: 513, col: 15, offset: 20756},
				alternatives: []interface{}{
					&ruleRefExpr{
						pos:  position{line: 513, col: 15, offset: 20756},
						name: "BoldText",
					},
					&ruleRefExpr{
						pos:  position{line: 513, col: 26, offset: 20767},
						name: "ItalicText",
					},
					&ruleRefExpr{
						pos:  position{line: 513, col: 39, offset: 20780},
						name: "MonospaceText",
					},
					&ruleRefExpr{
						pos:  position{line: 514, col: 13, offset: 20808},
						name: "EscapedBoldText",
					},
					&ruleRefExpr{
						pos:  position{line: 514, col: 31, offset: 20826},
						name: "EscapedItalicText",
					},
					&ruleRefExpr{
						pos:  position{line: 514, col: 51, offset: 20846},
						name: "EscapedMonospaceText",
					},
				},
			},
		},
		{
			name: "BoldText",
			pos:  position{line: 516, col: 1, offset: 20868},
			expr: &choiceExpr{
				pos: position{line: 517, col: 5, offset: 20885},
				alternatives: []interface{}{
					&actionExpr{
						pos: position{line: 517, col: 5, offset: 20885},
						run: (*parser).callonBoldText2,
						expr: &seqExpr{
							pos: position{line: 517, col: 5, offset: 20885},
							exprs: []interface{}{
								&notExpr{
									pos: position{line: 517, col: 5, offset: 20885},
									expr: &litMatcher{
										pos:        position{line: 517, col: 6, offset: 20886},
										val:        "\\\\",
										ignoreCase: false,
									},
								},
								&litMatcher{
									pos:        position{line: 517, col: 11, offset: 20891},
									val:        "**",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 517, col: 16, offset: 20896},
									label: "content",
									expr: &ruleRefExpr{
										pos:  position{line: 517, col: 25, offset: 20905},
										name: "QuotedTextContent",
									},
								},
								&litMatcher{
									pos:        position{line: 517, col: 44, offset: 20924},
									val:        "**",
									ignoreCase: false,
								},
							},
						},
					},
					&actionExpr{
						pos: position{line: 519, col: 9, offset: 21057},
						run: (*parser).callonBoldText10,
						expr: &seqExpr{
							pos: position{line: 519, col: 9, offset: 21057},
							exprs: []interface{}{
								&notExpr{
									pos: position{line: 519, col: 9, offset: 21057},
									expr: &litMatcher{
										pos:        position{line: 519, col: 10, offset: 21058},
										val:        "\\\\",
										ignoreCase: false,
									},
								},
								&litMatcher{
									pos:        position{line: 519, col: 15, offset: 21063},
									val:        "**",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 519, col: 20, offset: 21068},
									label: "content",
									expr: &ruleRefExpr{
										pos:  position{line: 519, col: 29, offset: 21077},
										name: "QuotedTextContent",
									},
								},
								&litMatcher{
									pos:        position{line: 519, col: 48, offset: 21096},
									val:        "*",
									ignoreCase: false,
								},
							},
						},
					},
					&actionExpr{
						pos: position{line: 522, col: 9, offset: 21273},
						run: (*parser).callonBoldText18,
						expr: &seqExpr{
							pos: position{line: 522, col: 9, offset: 21273},
							exprs: []interface{}{
								&notExpr{
									pos: position{line: 522, col: 9, offset: 21273},
									expr: &litMatcher{
										pos:        position{line: 522, col: 10, offset: 21274},
										val:        "\\",
										ignoreCase: false,
									},
								},
								&litMatcher{
									pos:        position{line: 522, col: 14, offset: 21278},
									val:        "*",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 522, col: 18, offset: 21282},
									label: "content",
									expr: &ruleRefExpr{
										pos:  position{line: 522, col: 27, offset: 21291},
										name: "QuotedTextContent",
									},
								},
								&litMatcher{
									pos:        position{line: 522, col: 46, offset: 21310},
									val:        "*",
									ignoreCase: false,
								},
								&notExpr{
									pos: position{line: 522, col: 50, offset: 21314},
									expr: &charClassMatcher{
										pos:        position{line: 871, col: 13, offset: 36663},
										val:        "[a-zA-Z0-9]",
										ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
										ignoreCase: false,
										inverted:   false,
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "EscapedBoldText",
			pos:  position{line: 526, col: 1, offset: 21508},
			expr: &choiceExpr{
				pos: position{line: 527, col: 5, offset: 21532},
				alternatives: []interface{}{
					&actionExpr{
						pos: position{line: 527, col: 5, offset: 21532},
						run: (*parser).callonEscapedBoldText2,
						expr: &seqExpr{
							pos: position{line: 527, col: 5, offset: 21532},
							exprs: []interface{}{
								&labeledExpr{
									pos:   position{line: 527, col: 5, offset: 21532},
									label: "backslashes",
									expr: &seqExpr{
										pos: position{line: 527, col: 18, offset: 21545},
										exprs: []interface{}{
											&litMatcher{
												pos:        position{line: 527, col: 18, offset: 21545},
												val:        "\\\\",
												ignoreCase: false,
											},
											&zeroOrMoreExpr{
												pos: position{line: 527, col: 23, offset: 21550},
												expr: &litMatcher{
													pos:        position{line: 527, col: 23, offset: 21550},
													val:        "\\",
													ignoreCase: false,
												},
											},
										},
									},
								},
								&litMatcher{
									pos:        position{line: 527, col: 29, offset: 21556},
									val:        "**",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 527, col: 34, offset: 21561},
									label: "content",
									expr: &ruleRefExpr{
										pos:  position{line: 527, col: 43, offset: 21570},
										name: "QuotedTextContent",
									},
								},
								&litMatcher{
									pos:        position{line: 527, col: 62, offset: 21589},
									val:        "**",
									ignoreCase: false,
								},
							},
						},
					},
					&actionExpr{
						pos: position{line: 529, col: 9, offset: 21752},
						run: (*parser).callonEscapedBoldText13,
						expr: &seqExpr{
							pos: position{line: 529, col: 9, offset: 21752},
							exprs: []interface{}{
								&labeledExpr{
									pos:   position{line: 529, col: 9, offset: 21752},
									label: "backslashes",
									expr: &seqExpr{
										pos: position{line: 529, col: 22, offset: 21765},
										exprs: []interface{}{
											&litMatcher{
												pos:        position{line: 529, col: 22, offset: 21765},
												val:        "\\",
												ignoreCase: false,
											},
											&zeroOrMoreExpr{
												pos: position{line: 529, col: 26, offset: 21769},
												expr: &litMatcher{
													pos:        position{line: 529, col: 26, offset: 21769},
													val:        "\\",
													ignoreCase: false,
												},
											},
										},
									},
								},
								&litMatcher{
									pos:        position{line: 529, col: 32, offset: 21775},
									val:        "**",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 529, col: 37, offset: 21780},
									label: "content",
									expr: &ruleRefExpr{
										pos:  position{line: 529, col: 46, offset: 21789},
										name: "QuotedTextContent",
									},
								},
								&litMatcher{
									pos:        position{line: 529, col: 65, offset: 21808},
									val:        "*",
									ignoreCase: false,
								},
							},
						},
					},
					&actionExpr{
						pos: position{line: 532, col: 9, offset: 22014},
						run: (*parser).callonEscapedBoldText24,
						expr: &seqExpr{
							pos: position{line: 532, col: 9, offset: 22014},
							exprs: []interface{}{
								&labeledExpr{
									pos:   position{line: 532, col: 9, offset: 22014},
									label: "backslashes",
									expr: &seqExpr{
										pos: position{line: 532, col: 22, offset: 22027},
										exprs: []interface{}{
											&litMatcher{
												pos:        position{line: 532, col: 22, offset: 22027},
												val:        "\\",
												ignoreCase: false,
											},
											&zeroOrMoreExpr{
												pos: position{line: 532, col: 26, offset: 22031},
												expr: &litMatcher{
													pos:        position{line: 532, col: 26, offset: 22031},
													val:        "\\",
													ignoreCase: false,
												},
											},
										},
									},
								},
								&litMatcher{
									pos:        position{line: 532, col: 32, offset: 22037},
									val:        "*",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 532, col: 36, offset: 22041},
									label: "content",
									expr: &ruleRefExpr{
										pos:  position{line: 532, col: 45, offset: 22050},
										name: "QuotedTextContent",
									},
								},
								&litMatcher{
									pos:        position{line: 532, col: 64, offset: 22069},
									val:        "*",
									ignoreCase: false,
								},
							},
						},
					},
				},
			},
		},
		{
			name: "ItalicText",
			pos:  position{line: 536, col: 1, offset: 22229},
			expr: &choiceExpr{
				pos: position{line: 537, col: 5, offset: 22248},
				alternatives: []interface{}{
					&actionExpr{
						pos: position{line: 537, col: 5, offset: 22248},
						run: (*parser).callonItalicText2,
						expr: &seqExpr{
							pos: position{line: 537, col: 5, offset: 22248},
							exprs: []interface{}{
								&notExpr{
									pos: position{line: 537, col: 5, offset: 22248},
									expr: &litMatcher{
										pos:        position{line: 537, col: 6, offset: 22249},
										val:        "\\\\",
										ignoreCase: false,
									},
								},
								&litMatcher{
									pos:        position{line: 537, col: 11, offset: 22254},
									val:        "__",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 537, col: 16, offset: 22259},
									label: "content",
									expr: &ruleRefExpr{
										pos:  position{line: 537, col: 25, offset: 22268},
										name: "QuotedTextContent",
									},
								},
								&litMatcher{
									pos:        position{line: 537, col: 44, offset: 22287},
									val:        "__",
									ignoreCase: false,
								},
							},
						},
					},
					&actionExpr{
						pos: position{line: 539, col: 9, offset: 22376},
						run: (*parser).callonItalicText10,
						expr: &seqExpr{
							pos: position{line: 539, col: 9, offset: 22376},
							exprs: []interface{}{
								&notExpr{
									pos: position{line: 539, col: 9, offset: 22376},
									expr: &litMatcher{
										pos:        position{line: 539, col: 10, offset: 22377},
										val:        "\\\\",
										ignoreCase: false,
									},
								},
								&litMatcher{
									pos:        position{line: 539, col: 15, offset: 22382},
									val:        "__",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 539, col: 20, offset: 22387},
									label: "content",
									expr: &ruleRefExpr{
										pos:  position{line: 539, col: 29, offset: 22396},
										name: "QuotedTextContent",
									},
								},
								&litMatcher{
									pos:        position{line: 539, col: 48, offset: 22415},
									val:        "_",
									ignoreCase: false,
								},
							},
						},
					},
					&actionExpr{
						pos: position{line: 542, col: 9, offset: 22594},
						run: (*parser).callonItalicText18,
						expr: &seqExpr{
							pos: position{line: 542, col: 9, offset: 22594},
							exprs: []interface{}{
								&notExpr{
									pos: position{line: 542, col: 9, offset: 22594},
									expr: &litMatcher{
										pos:        position{line: 542, col: 10, offset: 22595},
										val:        "\\",
										ignoreCase: false,
									},
								},
								&litMatcher{
									pos:        position{line: 542, col: 14, offset: 22599},
									val:        "_",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 542, col: 18, offset: 22603},
									label: "content",
									expr: &ruleRefExpr{
										pos:  position{line: 542, col: 27, offset: 22612},
										name: "QuotedTextContent",
									},
								},
								&litMatcher{
									pos:        position{line: 542, col: 46, offset: 22631},
									val:        "_",
									ignoreCase: false,
								},
								&notExpr{
									pos: position{line: 542, col: 50, offset: 22635},
									expr: &charClassMatcher{
										pos:        position{line: 871, col: 13, offset: 36663},
										val:        "[a-zA-Z0-9]",
										ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
										ignoreCase: false,
										inverted:   false,
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "EscapedItalicText",
			pos:  position{line: 546, col: 1, offset: 22830},
			expr: &choiceExpr{
				pos: position{line: 547, col: 5, offset: 22856},
				alternatives: []interface{}{
					&actionExpr{
						pos: position{line: 547, col: 5, offset: 22856},
						run: (*parser).callonEscapedItalicText2,
						expr: &seqExpr{
							pos: position{line: 547, col: 5, offset: 22856},
							exprs: []interface{}{
								&labeledExpr{
									pos:   position{line: 547, col: 5, offset: 22856},
									label: "backslashes",
									expr: &seqExpr{
										pos: position{line: 547, col: 18, offset: 22869},
										exprs: []interface{}{
											&litMatcher{
												pos:        position{line: 547, col: 18, offset: 22869},
												val:        "\\\\",
												ignoreCase: false,
											},
											&zeroOrMoreExpr{
												pos: position{line: 547, col: 23, offset: 22874},
												expr: &litMatcher{
													pos:        position{line: 547, col: 23, offset: 22874},
													val:        "\\",
													ignoreCase: false,
												},
											},
										},
									},
								},
								&litMatcher{
									pos:        position{line: 547, col: 29, offset: 22880},
									val:        "__",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 547, col: 34, offset: 22885},
									label: "content",
									expr: &ruleRefExpr{
										pos:  position{line: 547, col: 43, offset: 22894},
										name: "QuotedTextContent",
									},
								},
								&litMatcher{
									pos:        position{line: 547, col: 62, offset: 22913},
									val:        "__",
									ignoreCase: false,
								},
							},
						},
					},
					&actionExpr{
						pos: position{line: 549, col: 9, offset: 23076},
						run: (*parser).callonEscapedItalicText13,
						expr: &seqExpr{
							pos: position{line: 549, col: 9, offset: 23076},
							exprs: []interface{}{
								&labeledExpr{
									pos:   position{line: 549, col: 9, offset: 23076},
									label: "backslashes",
									expr: &seqExpr{
										pos: position{line: 549, col: 22, offset: 23089},
										exprs: []interface{}{
											&litMatcher{
												pos:        position{line: 549, col: 22, offset: 23089},
												val:        "\\",
												ignoreCase: false,
											},
											&zeroOrMoreExpr{
												pos: position{line: 549, col: 26, offset: 23093},
												expr: &litMatcher{
													pos:        position{line: 549, col: 26, offset: 23093},
													val:        "\\",
													ignoreCase: false,
												},
											},
										},
									},
								},
								&litMatcher{
									pos:        position{line: 549, col: 32, offset: 23099},
									val:        "__",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 549, col: 37, offset: 23104},
									label: "content",
									expr: &ruleRefExpr{
										pos:  position{line: 549, col: 46, offset: 23113},
										name: "QuotedTextContent",
									},
								},
								&litMatcher{
									pos:        position{line: 549, col: 65, offset: 23132},
									val:        "_",
									ignoreCase: false,
								},
							},
						},
					},
					&actionExpr{
						pos: position{line: 552, col: 9, offset: 23338},
						run: (*parser).callonEscapedItalicText24,
						expr: &seqExpr{
							pos: position{line: 552, col: 9, offset: 23338},
							exprs: []interface{}{
								&labeledExpr{
									pos:   position{line: 552, col: 9, offset: 23338},
									label: "backslashes",
									expr: &seqExpr{
										pos: position{line: 552, col: 22, offset: 23351},
										exprs: []interface{}{
											&litMatcher{
												pos:        position{line: 552, col: 22, offset: 23351},
												val:        "\\",
												ignoreCase: false,
											},
											&zeroOrMoreExpr{
												pos: position{line: 552, col: 26, offset: 23355},
												expr: &litMatcher{
													pos:        position{line: 552, col: 26, offset: 23355},
													val:        "\\",
													ignoreCase: false,
												},
											},
										},
									},
								},
								&litMatcher{
									pos:        position{line: 552, col: 32, offset: 23361},
									val:        "_",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 552, col: 36, offset: 23365},
									label: "content",
									expr: &ruleRefExpr{
										pos:  position{line: 552, col: 45, offset: 23374},
										name: "QuotedTextContent",
									},
								},
								&litMatcher{
									pos:        position{line: 552, col: 64, offset: 23393},
									val:        "_",
									ignoreCase: false,
								},
							},
						},
					},
				},
			},
		},
		{
			name: "MonospaceText",
			pos:  position{line: 556, col: 1, offset: 23553},
			expr: &choiceExpr{
				pos: position{line: 557, col: 5, offset: 23575},
				alternatives: []interface{}{
					&actionExpr{
						pos: position{line: 557, col: 5, offset: 23575},
						run: (*parser).callonMonospaceText2,
						expr: &seqExpr{
							pos: position{line: 557, col: 5, offset: 23575},
							exprs: []interface{}{
								&notExpr{
									pos: position{line: 557, col: 5, offset: 23575},
									expr: &litMatcher{
										pos:        position{line: 557, col: 6, offset: 23576},
										val:        "\\\\",
										ignoreCase: false,
									},
								},
								&litMatcher{
									pos:        position{line: 557, col: 11, offset: 23581},
									val:        "``",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 557, col: 16, offset: 23586},
									label: "content",
									expr: &ruleRefExpr{
										pos:  position{line: 557, col: 25, offset: 23595},
										name: "QuotedTextContent",
									},
								},
								&litMatcher{
									pos:        position{line: 557, col: 44, offset: 23614},
									val:        "``",
									ignoreCase: false,
								},
							},
						},
					},
					&actionExpr{
						pos: position{line: 559, col: 9, offset: 23752},
						run: (*parser).callonMonospaceText10,
						expr: &seqExpr{
							pos: position{line: 559, col: 9, offset: 23752},
							exprs: []interface{}{
								&notExpr{
									pos: position{line: 559, col: 9, offset: 23752},
									expr: &litMatcher{
										pos:        position{line: 559, col: 10, offset: 23753},
										val:        "\\\\",
										ignoreCase: false,
									},
								},
								&litMatcher{
									pos:        position{line: 559, col: 15, offset: 23758},
									val:        "``",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 559, col: 20, offset: 23763},
									label: "content",
									expr: &ruleRefExpr{
										pos:  position{line: 559, col: 29, offset: 23772},
										name: "QuotedTextContent",
									},
								},
								&litMatcher{
									pos:        position{line: 559, col: 48, offset: 23791},
									val:        "`",
									ignoreCase: false,
								},
							},
						},
					},
					&actionExpr{
						pos: position{line: 562, col: 9, offset: 23973},
						run: (*parser).callonMonospaceText18,
						expr: &seqExpr{
							pos: position{line: 562, col: 9, offset: 23973},
							exprs: []interface{}{
								&notExpr{
									pos: position{line: 562, col: 9, offset: 23973},
									expr: &litMatcher{
										pos:        position{line: 562, col: 10, offset: 23974},
										val:        "\\",
										ignoreCase: false,
									},
								},
								&litMatcher{
									pos:        position{line: 562, col: 14, offset: 23978},
									val:        "`",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 562, col: 18, offset: 23982},
									label: "content",
									expr: &ruleRefExpr{
										pos:  position{line: 562, col: 27, offset: 23991},
										name: "QuotedTextContent",
									},
								},
								&litMatcher{
									pos:        position{line: 562, col: 46, offset: 24010},
									val:        "`",
									ignoreCase: false,
								},
								&notExpr{
									pos: position{line: 562, col: 50, offset: 24014},
									expr: &charClassMatcher{
										pos:        position{line: 871, col: 13, offset: 36663},
										val:        "[a-zA-Z0-9]",
										ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
										ignoreCase: false,
										inverted:   false,
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "EscapedMonospaceText",
			pos:  position{line: 566, col: 1, offset: 24212},
			expr: &choiceExpr{
				pos: position{line: 567, col: 5, offset: 24241},
				alternatives: []interface{}{
					&actionExpr{
						pos: position{line: 567, col: 5, offset: 24241},
						run: (*parser).callonEscapedMonospaceText2,
						expr: &seqExpr{
							pos: position{line: 567, col: 5, offset: 24241},
							exprs: []interface{}{
								&labeledExpr{
									pos:   position{line: 567, col: 5, offset: 24241},
									label: "backslashes",
									expr: &seqExpr{
										pos: position{line: 567, col: 18, offset: 24254},
										exprs: []interface{}{
											&litMatcher{
												pos:        position{line: 567, col: 18, offset: 24254},
												val:        "\\\\",
												ignoreCase: false,
											},
											&zeroOrMoreExpr{
												pos: position{line: 567, col: 23, offset: 24259},
												expr: &litMatcher{
													pos:        position{line: 567, col: 23, offset: 24259},
													val:        "\\",
													ignoreCase: false,
												},
											},
										},
									},
								},
								&litMatcher{
									pos:        position{line: 567, col: 29, offset: 24265},
									val:        "``",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 567, col: 34, offset: 24270},
									label: "content",
									expr: &ruleRefExpr{
										pos:  position{line: 567, col: 43, offset: 24279},
										name: "QuotedTextContent",
									},
								},
								&litMatcher{
									pos:        position{line: 567, col: 62, offset: 24298},
									val:        "``",
									ignoreCase: false,
								},
							},
						},
					},
					&actionExpr{
						pos: position{line: 569, col: 9, offset: 24461},
						run: (*parser).callonEscapedMonospaceText13,
						expr: &seqExpr{
							pos: position{line: 569, col: 9, offset: 24461},
							exprs: []interface{}{
								&labeledExpr{
									pos:   position{line: 569, col: 9, offset: 24461},
									label: "backslashes",
									expr: &seqExpr{
										pos: position{line: 569, col: 22, offset: 24474},
										exprs: []interface{}{
											&litMatcher{
												pos:        position{line: 569, col: 22, offset: 24474},
												val:        "\\",
												ignoreCase: false,
											},
											&zeroOrMoreExpr{
												pos: position{line: 569, col: 26, offset: 24478},
												expr: &litMatcher{
													pos:        position{line: 569, col: 26, offset: 24478},
													val:        "\\",
													ignoreCase: false,
												},
											},
										},
									},
								},
								&litMatcher{
									pos:        position{line: 569, col: 32, offset: 24484},
									val:        "``",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 569, col: 37, offset: 24489},
									label: "content",
									expr: &ruleRefExpr{
										pos:  position{line: 569, col: 46, offset: 24498},
										name: "QuotedTextContent",
									},
								},
								&litMatcher{
									pos:        position{line: 569, col: 65, offset: 24517},
									val:        "`",
									ignoreCase: false,
								},
							},
						},
					},
					&actionExpr{
						pos: position{line: 572, col: 9, offset: 24723},
						run: (*parser).callonEscapedMonospaceText24,
						expr: &seqExpr{
							pos: position{line: 572, col: 9, offset: 24723},
							exprs: []interface{}{
								&labeledExpr{
									pos:   position{line: 572, col: 9, offset: 24723},
									label: "backslashes",
									expr: &seqExpr{
										pos: position{line: 572, col: 22, offset: 24736},
										exprs: []interface{}{
											&litMatcher{
												pos:        position{line: 572, col: 22, offset: 24736},
												val:        "\\",
												ignoreCase: false,
											},
											&zeroOrMoreExpr{
												pos: position{line: 572, col: 26, offset: 24740},
												expr: &litMatcher{
													pos:        position{line: 572, col: 26, offset: 24740},
													val:        "\\",
													ignoreCase: false,
												},
											},
										},
									},
								},
								&litMatcher{
									pos:        position{line: 572, col: 32, offset: 24746},
									val:        "`",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 572, col: 36, offset: 24750},
									label: "content",
									expr: &ruleRefExpr{
										pos:  position{line: 572, col: 45, offset: 24759},
										name: "QuotedTextContent",
									},
								},
								&litMatcher{
									pos:        position{line: 572, col: 64, offset: 24778},
									val:        "`",
									ignoreCase: false,
								},
							},
						},
					},
				},
			},
		},
		{
			name: "QuotedTextContent",
			pos:  position{line: 576, col: 1, offset: 24938},
			expr: &seqExpr{
				pos: position{line: 576, col: 22, offset: 24959},
				exprs: []interface{}{
					&ruleRefExpr{
						pos:  position{line: 576, col: 22, offset: 24959},
						name: "QuotedTextContentElement",
					},
					&zeroOrMoreExpr{
						pos: position{line: 576, col: 47, offset: 24984},
						expr: &seqExpr{
							pos: position{line: 576, col: 48, offset: 24985},
							exprs: []interface{}{
								&oneOrMoreExpr{
									pos: position{line: 576, col: 48, offset: 24985},
									expr: &choiceExpr{
										pos: position{line: 895, col: 7, offset: 37107},
										alternatives: []interface{}{
											&litMatcher{
												pos:        position{line: 895, col: 7, offset: 37107},
												val:        " ",
												ignoreCase: false,
											},
											&actionExpr{
												pos: position{line: 895, col: 13, offset: 37113},
												run: (*parser).callonQuotedTextContent8,
												expr: &litMatcher{
													pos:        position{line: 895, col: 13, offset: 37113},
													val:        "\t",
													ignoreCase: false,
												},
											},
										},
									},
								},
								&ruleRefExpr{
									pos:  position{line: 576, col: 52, offset: 24989},
									name: "QuotedTextContentElement",
								},
							},
						},
					},
				},
			},
		},
		{
			name: "QuotedTextContentElement",
			pos:  position{line: 578, col: 1, offset: 25017},
			expr: &choiceExpr{
				pos: position{line: 578, col: 29, offset: 25045},
				alternatives: []interface{}{
					&ruleRefExpr{
						pos:  position{line: 578, col: 29, offset: 25045},
						name: "QuotedText",
					},
					&oneOrMoreExpr{
						pos: position{line: 580, col: 19, offset: 25222},
						expr: &seqExpr{
							pos: position{line: 580, col: 20, offset: 25223},
							exprs: []interface{}{
								&notExpr{
									pos: position{line: 580, col: 20, offset: 25223},
									expr: &choiceExpr{
										pos: position{line: 899, col: 12, offset: 37169},
										alternatives: []interface{}{
											&litMatcher{
												pos:        position{line: 899, col: 12, offset: 37169},
												val:        "\r\n",
												ignoreCase: false,
											},
											&charClassMatcher{
												pos:        position{line: 899, col: 21, offset: 37178},
												val:        "[\\r\\n]",
												chars:      []rune{'\r', '\n'},
												ignoreCase: false,
												inverted:   false,
											},
										},
									},
								},
								&notExpr{
									pos: position{line: 580, col: 29, offset: 25232},
									expr: &choiceExpr{
										pos: position{line: 895, col: 7, offset: 37107},
										alternatives: []interface{}{
											&litMatcher{
												pos:        position{line: 895, col: 7, offset: 37107},
												val:        " ",
												ignoreCase: false,
											},
											&actionExpr{
												pos: position{line: 895, col: 13, offset: 37113},
												run: (*parser).callonQuotedTextContentElement12,
												expr: &litMatcher{
													pos:        position{line: 895, col: 13, offset: 37113},
													val:        "\t",
													ignoreCase: false,
												},
											},
										},
									},
								},
								&notExpr{
									pos: position{line: 580, col: 33, offset: 25236},
									expr: &litMatcher{
										pos:        position{line: 580, col: 34, offset: 25237},
										val:        "*",
										ignoreCase: false,
									},
								},
								&notExpr{
									pos: position{line: 580, col: 38, offset: 25241},
									expr: &litMatcher{
										pos:        position{line: 580, col: 39, offset: 25242},
										val:        "_",
										ignoreCase: false,
									},
								},
								&notExpr{
									pos: position{line: 580, col: 43, offset: 25246},
									expr: &litMatcher{
										pos:        position{line: 580, col: 44, offset: 25247},
										val:        "`",
										ignoreCase: false,
									},
								},
								&anyMatcher{
									line: 580, col: 48, offset: 25251,
								},
							},
						},
					},
					&actionExpr{
						pos: position{line: 582, col: 29, offset: 25322},
						run: (*parser).callonQuotedTextContentElement21,
						expr: &oneOrMoreExpr{
							pos: position{line: 582, col: 29, offset: 25322},
							expr: &seqExpr{
								pos: position{line: 582, col: 30, offset: 25323},
								exprs: []interface{}{
									&notExpr{
										pos: position{line: 582, col: 30, offset: 25323},
										expr: &choiceExpr{
											pos: position{line: 899, col: 12, offset: 37169},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 899, col: 12, offset: 37169},
													val:        "\r\n",
													ignoreCase: false,
												},
												&charClassMatcher{
													pos:        position{line: 899, col: 21, offset: 37178},
													val:        "[\\r\\n]",
													chars:      []rune{'\r', '\n'},
													ignoreCase: false,
													inverted:   false,
												},
											},
										},
									},
									&notExpr{
										pos: position{line: 582, col: 39, offset: 25332},
										expr: &choiceExpr{
											pos: position{line: 895, col: 7, offset: 37107},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 895, col: 7, offset: 37107},
													val:        " ",
													ignoreCase: false,
												},
												&actionExpr{
													pos: position{line: 895, col: 13, offset: 37113},
													run: (*parser).callonQuotedTextContentElement31,
													expr: &litMatcher{
														pos:        position{line: 895, col: 13, offset: 37113},
														val:        "\t",
														ignoreCase: false,
													},
												},
											},
										},
									},
									&anyMatcher{
										line: 582, col: 44, offset: 25337,
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "Passthrough",
			pos:  position{line: 592, col: 1, offset: 25736},
			expr: &choiceExpr{
				pos: position{line: 592, col: 16, offset: 25751},
				alternatives: []interface{}{
					&actionExpr{
						pos: position{line: 598, col: 26, offset: 25993},
						run: (*parser).callonPassthrough2,
						expr: &seqExpr{
							pos: position{line: 598, col: 26, offset: 25993},
							exprs: []interface{}{
								&litMatcher{
									pos:        position{line: 598, col: 26, offset: 25993},
									val:        "+++",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 598, col: 32, offset: 25999},
									label: "content",
									expr: &zeroOrMoreExpr{
										pos: position{line: 598, col: 40, offset: 26007},
										expr: &seqExpr{
											pos: position{line: 598, col: 41, offset: 26008},
											exprs: []interface{}{
												&notExpr{
													pos: position{line: 598, col: 41, offset: 26008},
													expr: &litMatcher{
														pos:        position{line: 598, col: 42, offset: 26009},
														val:        "+++",
														ignoreCase: false,
													},
												},
												&anyMatcher{
													line: 598, col: 48, offset: 26015,
												},
											},
										},
									},
								},
								&litMatcher{
									pos:        position{line: 598, col: 52, offset: 26019},
									val:        "+++",
									ignoreCase: false,
								},
							},
						},
					},
					&actionExpr{
						pos: position{line: 594, col: 26, offset: 25842},
						run: (*parser).callonPassthrough12,
						expr: &seqExpr{
							pos: position{line: 594, col: 26, offset: 25842},
							exprs: []interface{}{
								&litMatcher{
									pos:        position{line: 594, col: 26, offset: 25842},
									val:        "+",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 594, col: 30, offset: 25846},
									label: "content",
									expr: &zeroOrMoreExpr{
										pos: position{line: 594, col: 38, offset: 25854},
										expr: &seqExpr{
											pos: position{line: 594, col: 39, offset: 25855},
											exprs: []interface{}{
												&notExpr{
													pos: position{line: 594, col: 39, offset: 25855},
													expr: &choiceExpr{
														pos: position{line: 899, col: 12, offset: 37169},
														alternatives: []interface{}{
															&litMatcher{
																pos:        position{line: 899, col: 12, offset: 37169},
																val:        "\r\n",
																ignoreCase: false,
															},
															&charClassMatcher{
																pos:        position{line: 899, col: 21, offset: 37178},
																val:        "[\\r\\n]",
																chars:      []rune{'\r', '\n'},
																ignoreCase: false,
																inverted:   false,
															},
														},
													},
												},
												&notExpr{
													pos: position{line: 594, col: 48, offset: 25864},
													expr: &litMatcher{
														pos:        position{line: 594, col: 49, offset: 25865},
														val:        "+",
														ignoreCase: false,
													},
												},
												&anyMatcher{
													line: 594, col: 53, offset: 25869,
												},
											},
										},
									},
								},
								&litMatcher{
									pos:        position{line: 594, col: 57, offset: 25873},
									val:        "+",
									ignoreCase: false,
								},
							},
						},
					},
					&ruleRefExpr{
						pos:  position{line: 592, col: 64, offset: 25799},
						name: "PassthroughMacro",
					},
				},
			},
		},
		{
			name: "PassthroughMacro",
			pos:  position{line: 602, col: 1, offset: 26116},
			expr: &choiceExpr{
				pos: position{line: 602, col: 21, offset: 26136},
				alternatives: []interface{}{
					&actionExpr{
						pos: position{line: 602, col: 21, offset: 26136},
						run: (*parser).callonPassthroughMacro2,
						expr: &seqExpr{
							pos: position{line: 602, col: 21, offset: 26136},
							exprs: []interface{}{
								&litMatcher{
									pos:        position{line: 602, col: 21, offset: 26136},
									val:        "pass:[",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 602, col: 30, offset: 26145},
									label: "content",
									expr: &zeroOrMoreExpr{
										pos: position{line: 602, col: 38, offset: 26153},
										expr: &seqExpr{
											pos: position{line: 608, col: 31, offset: 26453},
											exprs: []interface{}{
												&notExpr{
													pos: position{line: 608, col: 31, offset: 26453},
													expr: &litMatcher{
														pos:        position{line: 608, col: 32, offset: 26454},
														val:        "]",
														ignoreCase: false,
													},
												},
												&anyMatcher{
													line: 608, col: 36, offset: 26458,
												},
											},
										},
									},
								},
								&litMatcher{
									pos:        position{line: 602, col: 67, offset: 26182},
									val:        "]",
									ignoreCase: false,
								},
							},
						},
					},
					&actionExpr{
						pos: position{line: 604, col: 5, offset: 26273},
						run: (*parser).callonPassthroughMacro12,
						expr: &seqExpr{
							pos: position{line: 604, col: 5, offset: 26273},
							exprs: []interface{}{
								&litMatcher{
									pos:        position{line: 604, col: 5, offset: 26273},
									val:        "pass:q[",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 604, col: 15, offset: 26283},
									label: "content",
									expr: &zeroOrMoreExpr{
										pos: position{line: 604, col: 23, offset: 26291},
										expr: &choiceExpr{
											pos: position{line: 604, col: 24, offset: 26292},
											alternatives: []interface{}{
												&ruleRefExpr{
													pos:  position{line: 604, col: 24, offset: 26292},
													name: "QuotedText",
												},
												&seqExpr{
													pos: position{line: 608, col: 31, offset: 26453},
													exprs: []interface{}{
														&notExpr{
															pos: position{line: 608, col: 31, offset: 26453},
															expr: &litMatcher{
																pos:        position{line: 608, col: 32, offset: 26454},
																val:        "]",
																ignoreCase: false,
															},
														},
														&anyMatcher{
															line: 608, col: 36, offset: 26458,
														},
													},
												},
											},
										},
									},
								},
								&litMatcher{
									pos:        position{line: 604, col: 65, offset: 26333},
									val:        "]",
									ignoreCase: false,
								},
							},
						},
					},
				},
			},
		},
		{
			name: "DelimitedBlock",
			pos:  position{line: 682, col: 1, offset: 29528},
			expr: &choiceExpr{
				pos: position{line: 682, col: 19, offset: 29546},
				alternatives: []interface{}{
					&ruleRefExpr{
						pos:  position{line: 682, col: 19, offset: 29546},
						name: "FencedBlock",
					},
					&actionExpr{
						pos: position{line: 698, col: 17, offset: 30221},
						run: (*parser).callonDelimitedBlock3,
						expr: &seqExpr{
							pos: position{line: 698, col: 17, offset: 30221},
							exprs: []interface{}{
								&labeledExpr{
									pos:   position{line: 698, col: 17, offset: 30221},
									label: "attributes",
									expr: &zeroOrMoreExpr{
										pos: position{line: 698, col: 28, offset: 30232},
										expr: &actionExpr{
											pos: position{line: 120, col: 21, offset: 5039},
											run: (*parser).callonDelimitedBlock7,
											expr: &seqExpr{
												pos: position{line: 120, col: 21, offset: 5039},
												exprs: []interface{}{
													&labeledExpr{
														pos:   position{line: 120, col: 21, offset: 5039},
														label: "attr",
														expr: &choiceExpr{
															pos: position{line: 120, col: 27, offset: 5045},
															alternatives: []interface{}{
																&actionExpr{
																	pos: position{line: 129, col: 14, offset: 5496},
																	run: (*parser).callonDelimitedBlock11,
																	expr: &labeledExpr{
																		pos:   position{line: 129, col: 14, offset: 5496},
																		label: "id",
																		expr: &actionExpr{
																			pos: position{line: 135, col: 20, offset: 5626},
																			run: (*parser).callonDelimitedBlock13,
																			expr: &seqExpr{
																				pos: position{line: 135, col: 20, offset: 5626},
																				exprs: []interface{}{
																					&litMatcher{
																						pos:        position{line: 135, col: 20, offset: 5626},
																						val:        "[[",
																						ignoreCase: false,
																					},
																					&labeledExpr{
																						pos:   position{line: 135, col: 25, offset: 5631},
																						label: "id",
																						expr: &actionExpr{
																							pos: position{line: 883, col: 7, offset: 36866},
																							run: (*parser).callonDelimitedBlock17,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 883, col: 7, offset: 36866},
																								expr: &seqExpr{
																									pos: position{line: 883, col: 8, offset: 36867},
																									exprs: []interface{}{
																										&notExpr{
																											pos: position{line: 883, col: 8, offset: 36867},
																											expr: &choiceExpr{
																												pos: position{line: 899, col: 12, offset: 37169},
																												alternatives: []interface{}{
																													&litMatcher{
																														pos:        position{line: 899, col: 12, offset: 37169},
																														val:        "\r\n",
																														ignoreCase: false,
																													},
																													&charClassMatcher{
																														pos:        position{line: 899, col: 21, offset: 37178},
																														val:        "[\\r\\n]",
																														chars:      []rune{'\r', '\n'},
																														ignoreCase: false,
																														inverted:   false,
																													},
																												},
																											},
																										},
																										&notExpr{
																											pos: position{line: 883, col: 17, offset: 36876},
																											expr: &choiceExpr{
																												pos: position{line: 895, col: 7, offset: 37107},
																												alternatives: []interface{}{
																													&litMatcher{
																														pos:        position{line: 895, col: 7, offset: 37107},
																														val:        " ",
																														ignoreCase: false,
																													},
																													&actionExpr{
																														pos: position{line: 895, col: 13, offset: 37113},
																														run: (*parser).callonDelimitedBlock27,
																														expr: &litMatcher{
																															pos:        position{line: 895, col: 13, offset: 37113},
																															val:        "\t",
																															ignoreCase: false,
																														},
																													},
																												},
																											},
																										},
																										&notExpr{
																											pos: position{line: 883, col: 21, offset: 36880},
																											expr: &litMatcher{
																												pos:        position{line: 883, col: 22, offset: 36881},
																												val:        "[",
																												ignoreCase: false,
																											},
																										},
																										&notExpr{
																											pos: position{line: 883, col: 26, offset: 36885},
																											expr: &litMatcher{
																												pos:        position{line: 883, col: 27, offset: 36886},
																												val:        "]",
																												ignoreCase: false,
																											},
																										},
																										&notExpr{
																											pos: position{line: 883, col: 31, offset: 36890},
																											expr: &litMatcher{
																												pos:        position{line: 883, col: 32, offset: 36891},
																												val:        "<<",
																												ignoreCase: false,
																											},
																										},
																										&notExpr{
																											pos: position{line: 883, col: 37, offset: 36896},
																											expr: &litMatcher{
																												pos:        position{line: 883, col: 38, offset: 36897},
																												val:        ">>",
																												ignoreCase: false,
																											},
																										},
																										&anyMatcher{
																											line: 883, col: 42, offset: 36901,
																										},
																									},
																								},
																							},
																						},
																					},
																					&litMatcher{
																						pos:        position{line: 135, col: 33, offset: 5639},
																						val:        "]]",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																},
																&actionExpr{
																	pos: position{line: 131, col: 5, offset: 5542},
																	run: (*parser).callonDelimitedBlock39,
																	expr: &seqExpr{
																		pos: position{line: 131, col: 5, offset: 5542},
																		exprs: []interface{}{
																			&litMatcher{
																				pos:        position{line: 131, col: 5, offset: 5542},
																				val:        "[#",
																				ignoreCase: false,
																			},
																			&labeledExpr{
																				pos:   position{line: 131, col: 10, offset: 5547},
																				label: "id",
																				expr: &actionExpr{
																					pos: position{line: 883, col: 7, offset: 36866},
																					run: (*parser).callonDelimitedBlock43,
																					expr: &oneOrMoreExpr{
																						pos: position{line: 883, col: 7, offset: 36866},
																						expr: &seqExpr{
																							pos: position{line: 883, col: 8, offset: 36867},
																							exprs: []interface{}{
																								&notExpr{
																									pos: position{line: 883, col: 8, offset: 36867},
																									expr: &choiceExpr{
																										pos: position{line: 899, col: 12, offset: 37169},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 899, col: 12, offset: 37169},
																												val:        "\r\n",
																												ignoreCase: false,
																											},
																											&charClassMatcher{
																												pos:        position{line: 899, col: 21, offset: 37178},
																												val:        "[\\r\\n]",
																												chars:      []rune{'\r', '\n'},
																												ignoreCase: false,
																												inverted:   false,
																											},
																										},
																									},
																								},
																								&notExpr{
																									pos: position{line: 883, col: 17, offset: 36876},
																									expr: &choiceExpr{
																										pos: position{line: 895, col: 7, offset: 37107},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 895, col: 7, offset: 37107},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 895, col: 13, offset: 37113},
																												run: (*parser).callonDelimitedBlock53,
																												expr: &litMatcher{
																													pos:        position{line: 895, col: 13, offset: 37113},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																								&notExpr{
																									pos: position{line: 883, col: 21, offset: 36880},
																									expr: &litMatcher{
																										pos:        position{line: 883, col: 22, offset: 36881},
																										val:        "[",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 883, col: 26, offset: 36885},
																									expr: &litMatcher{
																										pos:        position{line: 883, col: 27, offset: 36886},
																										val:        "]",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 883, col: 31, offset: 36890},
																									expr: &litMatcher{
																										pos:        position{line: 883, col: 32, offset: 36891},
																										val:        "<<",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 883, col: 37, offset: 36896},
																									expr: &litMatcher{
																										pos:        position{line: 883, col: 38, offset: 36897},
																										val:        ">>",
																										ignoreCase: false,
																									},
																								},
																								&anyMatcher{
																									line: 883, col: 42, offset: 36901,
																								},
																							},
																						},
																					},
																				},
																			},
																			&litMatcher{
																				pos:        position{line: 131, col: 18, offset: 5555},
																				val:        "]",
																				ignoreCase: false,
																			},
																		},
																	},
																},
																&actionExpr{
																	pos: position{line: 141, col: 17, offset: 5848},
																	run: (*parser).callonDelimitedBlock65,
																	expr: &seqExpr{
																		pos: position{line: 141, col: 17, offset: 5848},
																		exprs: []interface{}{
																			&litMatcher{
																				pos:        position{line: 141, col: 17, offset: 5848},
																				val:        ".",
																				ignoreCase: false,
																			},
																			&notExpr{
																				pos: position{line: 141, col: 21, offset: 5852},
																				expr: &litMatcher{
																					pos:        position{line: 141, col: 22, offset: 5853},
																					val:        ".",
																					ignoreCase: false,
																				},
																			},
																			&notExpr{
																				pos: position{line: 141, col: 26, offset: 5857},
																				expr: &choiceExpr{
																					pos: position{line: 895, col: 7, offset: 37107},
																					alternatives: []interface{}{
																						&litMatcher{
																							pos:        position{line: 895, col: 7, offset: 37107},
																							val:        " ",
																							ignoreCase: false,
																						},
																						&actionExpr{
																							pos: position{line: 895, col: 13, offset: 37113},
																							run: (*parser).callonDelimitedBlock73,
																							expr: &litMatcher{
																								pos:        position{line: 895, col: 13, offset: 37113},
																								val:        "\t",
																								ignoreCase: false,
																							},
																						},
																					},
																				},
																			},
																			&labeledExpr{
																				pos:   position{line: 141, col: 30, offset: 5861},
																				label: "title",
																				expr: &oneOrMoreExpr{
																					pos: position{line: 141, col: 36, offset: 5867},
																					expr: &seqExpr{
																						pos: position{line: 141, col: 37, offset: 5868},
																						exprs: []interface{}{
																							&notExpr{
																								pos: position{line: 141, col: 37, offset: 5868},
																								expr: &choiceExpr{
																									pos: position{line: 899, col: 12, offset: 37169},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 899, col: 12, offset: 37169},
																											val:        "\r\n",
																											ignoreCase: false,
																										},
																										&charClassMatcher{
																											pos:        position{line: 899, col: 21, offset: 37178},
																											val:        "[\\r\\n]",
																											chars:      []rune{'\r', '\n'},
																											ignoreCase: false,
																											inverted:   false,
																										},
																									},
																								},
																							},
																							&anyMatcher{
																								line: 141, col: 46, offset: 5877,
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																},
																&actionExpr{
																	pos: position{line: 147, col: 16, offset: 6051},
																	run: (*parser).callonDelimitedBlock83,
																	expr: &seqExpr{
																		pos: position{line: 147, col: 16, offset: 6051},
																		exprs: []interface{}{
																			&litMatcher{
																				pos:        position{line: 147, col: 16, offset: 6051},
																				val:        "[.",
																				ignoreCase: false,
																			},
																			&notExpr{
																				pos: position{line: 147, col: 21, offset: 6056},
																				expr: &choiceExpr{
																					pos: position{line: 895, col: 7, offset: 37107},
																					alternatives: []interface{}{
																						&litMatcher{
																							pos:        position{line: 895, col: 7, offset: 37107},
																							val:        " ",
																							ignoreCase: false,
																						},
																						&actionExpr{
																							pos: position{line: 895, col: 13, offset: 37113},
																							run: (*parser).callonDelimitedBlock89,
																							expr: &litMatcher{
																								pos:        position{line: 895, col: 13, offset: 37113},
																								val:        "\t",
																								ignoreCase: false,
																							},
																						},
																					},
																				},
																			},
																			&labeledExpr{
																				pos:   position{line: 147, col: 25, offset: 6060},
																				label: "role",
																				expr: &oneOrMoreExpr{
																					pos: position{line: 147, col: 30, offset: 6065},
																					expr: &seqExpr{
																						pos: position{line: 147, col: 31, offset: 6066},
																						exprs: []interface{}{
																							&notExpr{
																								pos: position{line: 147, col: 31, offset: 6066},
																								expr: &choiceExpr{
																									pos: position{line: 899, col: 12, offset: 37169},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 899, col: 12, offset: 37169},
																											val:        "\r\n",
																											ignoreCase: false,
																										},
																										&charClassMatcher{
																											pos:        position{line: 899, col: 21, offset: 37178},
																											val:        "[\\r\\n]",
																											chars:      []rune{'\r', '\n'},
																											ignoreCase: false,
																											inverted:   false,
																										},
																									},
																								},
																							},
																							&notExpr{
																								pos: position{line: 147, col: 40, offset: 6075},
																								expr: &litMatcher{
																									pos:        position{line: 147, col: 41, offset: 6076},
																									val:        "]",
																									ignoreCase: false,
																								},
																							},
																							&anyMatcher{
																								line: 147, col: 45, offset: 6080,
																							},
																						},
																					},
																				},
																			},
																			&litMatcher{
																				pos:        position{line: 147, col: 49, offset: 6084},
																				val:        "]",
																				ignoreCase: false,
																			},
																		},
																	},
																},
																&actionExpr{
																	pos: position{line: 152, col: 30, offset: 6255},
																	run: (*parser).callonDelimitedBlock102,
																	expr: &seqExpr{
																		pos: position{line: 152, col: 30, offset: 6255},
																		exprs: []interface{}{
																			&litMatcher{
																				pos:        position{line: 152, col: 30, offset: 6255},
																				val:        "[",
																				ignoreCase: false,
																			},
																			&labeledExpr{
																				pos:   position{line: 152, col: 34, offset: 6259},
																				label: "k",
																				expr: &choiceExpr{
																					pos: position{line: 470, col: 19, offset: 18925},
																					alternatives: []interface{}{
																						&actionExpr{
																							pos: position{line: 470, col: 19, offset: 18925},
																							run: (*parser).callonDelimitedBlock107,
																							expr: &litMatcher{
																								pos:        position{line: 470, col: 19, offset: 18925},
																								val:        "TIP",
																								ignoreCase: false,
																							},
																						},
																						&actionExpr{
																							pos: position{line: 472, col: 5, offset: 18963},
																							run: (*parser).callonDelimitedBlock109,
																							expr: &litMatcher{
																								pos:        position{line: 472, col: 5, offset: 18963},
																								val:        "NOTE",
																								ignoreCase: false,
																							},
																						},
																						&actionExpr{
																							pos: position{line: 474, col: 5, offset: 19003},
																							run: (*parser).callonDelimitedBlock111,
																							expr: &litMatcher{
																								pos:        position{line: 474, col: 5, offset: 19003},
																								val:        "IMPORTANT",
																								ignoreCase: false,
																							},
																						},
																						&actionExpr{
																							pos: position{line: 476, col: 5, offset: 19053},
																							run: (*parser).callonDelimitedBlock113,
																							expr: &litMatcher{
																								pos:        position{line: 476, col: 5, offset: 19053},
																								val:        "WARNING",
																								ignoreCase: false,
																							},
																						},
																						&actionExpr{
																							pos: position{line: 478, col: 5, offset: 19099},
																							run: (*parser).callonDelimitedBlock115,
																							expr: &litMatcher{
																								pos:        position{line: 478, col: 5, offset: 19099},
																								val:        "CAUTION",
																								ignoreCase: false,
																							},
																						},
																					},
																				},
																			},
																			&litMatcher{
																				pos:        position{line: 152, col: 53, offset: 6278},
																				val:        "]",
																				ignoreCase: false,
																			},
																		},
																	},
																},
																&actionExpr{
																	pos: position{line: 175, col: 21, offset: 7013},
																	run: (*parser).callonDelimitedBlock118,
																	expr: &litMatcher{
																		pos:        position{line: 175, col: 21, offset: 7013},
																		val:        "[horizontal]",
																		ignoreCase: false,
																	},
																},
																&actionExpr{
																	pos: position{line: 157, col: 19, offset: 6439},
																	run: (*parser).callonDelimitedBlock120,
																	expr: &seqExpr{
																		pos: position{line: 157, col: 19, offset: 6439},
																		exprs: []interface{}{
																			&litMatcher{
																				pos:        position{line: 157, col: 19, offset: 6439},
																				val:        "[",
																				ignoreCase: false,
																			},
																			&notExpr{
																				pos: position{line: 157, col: 23, offset: 6443},
																				expr: &choiceExpr{
																					pos: position{line: 895, col: 7, offset: 37107},
																					alternatives: []interface{}{
																						&litMatcher{
																							pos:        position{line: 895, col: 7, offset: 37107},
																							val:        " ",
																							ignoreCase: false,
																						},
																						&actionExpr{
																							pos: position{line: 895, col: 13, offset: 37113},
																							run: (*parser).callonDelimitedBlock126,
																							expr: &litMatcher{
																								pos:        position{line: 895, col: 13, offset: 37113},
																								val:        "\t",
																								ignoreCase: false,
																							},
																						},
																					},
																				},
																			},
																			&labeledExpr{
																				pos:   position{line: 157, col: 27, offset: 6447},
																				label: "attributes",
																				expr: &zeroOrMoreExpr{
																					pos: position{line: 157, col: 38, offset: 6458},
																					expr: &choiceExpr{
																						pos: position{line: 161, col: 21, offset: 6571},
																						alternatives: []interface{}{
																							&actionExpr{
																								pos: position{line: 161, col: 21, offset: 6571},
																								run: (*parser).callonDelimitedBlock131,
																								expr: &seqExpr{
																									pos: position{line: 161, col: 21, offset: 6571},
																									exprs: []interface{}{
																										&labeledExpr{
																											pos:   position{line: 161, col: 21, offset: 6571},
																											label: "key",
																											expr: &actionExpr{
																												pos: position{line: 167, col: 17, offset: 6861},
																												run: (*parser).callonDelimitedBlock134,
																												expr: &seqExpr{
																													pos: position{line: 167, col: 17, offset: 6861},
																													exprs: []interface{}{
																														&notExpr{
																															pos: position{line: 167, col: 17, offset: 6861},
																															expr: &actionExpr{
																																pos: position{line: 207, col: 14, offset: 8362},
																																run: (*parser).callonDelimitedBlock137,
																																expr: &litMatcher{
																																	pos:        position{line: 207, col: 14, offset: 8362},
																																	val:        "verse",
																																	ignoreCase: false,
																																},
																															},
																														},
																														&labeledExpr{
																															pos:   position{line: 167, col: 28, offset: 6872},
																															label: "key",
																															expr: &oneOrMoreExpr{
																																pos: position{line: 167, col: 32, offset: 6876},
																																expr: &seqExpr{
																																	pos: position{line: 167, col: 33, offset: 6877},
																																	exprs: []interface{}{
																																		&notExpr{
																																			pos: position{line: 167, col: 33, offset: 6877},
																																			expr: &litMatcher{
																																				pos:        position{line: 167, col: 34, offset: 6878},
																																				val:        "=",
																																				ignoreCase: false,
																																			},
																																		},
																																		&notExpr{
																																			pos: position{line: 167, col: 38, offset: 6882},
																																			expr: &litMatcher{
																																				pos:        position{line: 167, col: 39, offset: 6883},
																																				val:        ",",
																																				ignoreCase: false,
																																			},
																																		},
																																		&notExpr{
																																			pos: position{line: 167, col: 43, offset: 6887},
																																			expr: &litMatcher{
																																				pos:        position{line: 167, col: 44, offset: 6888},
																																				val:        "]",
																																				ignoreCase: false,
																																			},
																																		},
																																		&anyMatcher{
																																			line: 167, col: 48, offset: 6892,
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																										&litMatcher{
																											pos:        position{line: 161, col: 40, offset: 6590},
																											val:        "=",
																											ignoreCase: false,
																										},
																										&labeledExpr{
																											pos:   position{line: 161, col: 44, offset: 6594},
																											label: "value",
																											expr: &actionExpr{
																												pos: position{line: 171, col: 19, offset: 6940},
																												run: (*parser).callonDelimitedBlock151,
																												expr: &labeledExpr{
																													pos:   position{line: 171, col: 19, offset: 6940},
																													label: "value",
																													expr: &zeroOrMoreExpr{
																														pos: position{line: 171, col: 25, offset: 6946},
																														expr: &seqExpr{
																															pos: position{line: 171, col: 26, offset: 6947},
																															exprs: []interface{}{
																																&notExpr{
																																	pos: position{line: 171, col: 26, offset: 6947},
																																	expr: &litMatcher{
																																		pos:        position{line: 171, col: 27, offset: 6948},
																																		val:        "=",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 171, col: 31, offset: 6952},
																																	expr: &litMatcher{
																																		pos:        position{line: 171, col: 32, offset: 6953},
																																		val:        ",",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 171, col: 36, offset: 6957},
																																	expr: &litMatcher{
																																		pos:        position{line: 171, col: 37, offset: 6958},
																																		val:        "]",
																																		ignoreCase: false,
																																	},
																																},
																																&anyMatcher{
																																	line: 171, col: 41, offset: 6962,
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																										&zeroOrOneExpr{
																											pos: position{line: 161, col: 67, offset: 6617},
																											expr: &litMatcher{
																												pos:        position{line: 161, col: 67, offset: 6617},
																												val:        ",",
																												ignoreCase: false,
																											},
																										},
																										&zeroOrMoreExpr{
																											pos: position{line: 161, col: 72, offset: 6622},
																											expr: &choiceExpr{
																												pos: position{line: 895, col: 7, offset: 37107},
																												alternatives: []interface{}{
																													&litMatcher{
																														pos:        position{line: 895, col: 7, offset: 37107},
																														val:        " ",
																														ignoreCase: false,
																													},
																													&actionExpr{
																														pos: position{line: 895, col: 13, offset: 37113},
																														run: (*parser).callonDelimitedBlock167,
																														expr: &litMatcher{
																															pos:        position{line: 895, col: 13, offset: 37113},
																															val:        "\t",
																															ignoreCase: false,
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&actionExpr{
																								pos: position{line: 163, col: 5, offset: 6729},
																								run: (*parser).callonDelimitedBlock169,
																								expr: &seqExpr{
																									pos: position{line: 163, col: 5, offset: 6729},
																									exprs: []interface{}{
																										&labeledExpr{
																											pos:   position{line: 163, col: 5, offset: 6729},
																											label: "key",
																											expr: &actionExpr{
																												pos: position{line: 167, col: 17, offset: 6861},
																												run: (*parser).callonDelimitedBlock172,
																												expr: &seqExpr{
																													pos: position{line: 167, col: 17, offset: 6861},
																													exprs: []interface{}{
																														&notExpr{
																															pos: position{line: 167, col: 17, offset: 6861},
																															expr: &actionExpr{
																																pos: position{line: 207, col: 14, offset: 8362},
																																run: (*parser).callonDelimitedBlock175,
																																expr: &litMatcher{
																																	pos:        position{line: 207, col: 14, offset: 8362},
																																	val:        "verse",
																																	ignoreCase: false,
																																},
																															},
																														},
																														&labeledExpr{
																															pos:   position{line: 167, col: 28, offset: 6872},
																															label: "key",
																															expr: &oneOrMoreExpr{
																																pos: position{line: 167, col: 32, offset: 6876},
																																expr: &seqExpr{
																																	pos: position{line: 167, col: 33, offset: 6877},
																																	exprs: []interface{}{
																																		&notExpr{
																																			pos: position{line: 167, col: 33, offset: 6877},
																																			expr: &litMatcher{
																																				pos:        position{line: 167, col: 34, offset: 6878},
																																				val:        "=",
																																				ignoreCase: false,
																																			},
																																		},
																																		&notExpr{
																																			pos: position{line: 167, col: 38, offset: 6882},
																																			expr: &litMatcher{
																																				pos:        position{line: 167, col: 39, offset: 6883},
																																				val:        ",",
																																				ignoreCase: false,
																																			},
																																		},
																																		&notExpr{
																																			pos: position{line: 167, col: 43, offset: 6887},
																																			expr: &litMatcher{
																																				pos:        position{line: 167, col: 44, offset: 6888},
																																				val:        "]",
																																				ignoreCase: false,
																																			},
																																		},
																																		&anyMatcher{
																																			line: 167, col: 48, offset: 6892,
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																										&zeroOrOneExpr{
																											pos: position{line: 163, col: 24, offset: 6748},
																											expr: &litMatcher{
																												pos:        position{line: 163, col: 24, offset: 6748},
																												val:        ",",
																												ignoreCase: false,
																											},
																										},
																										&zeroOrMoreExpr{
																											pos: position{line: 163, col: 29, offset: 6753},
																											expr: &choiceExpr{
																												pos: position{line: 895, col: 7, offset: 37107},
																												alternatives: []interface{}{
																													&litMatcher{
																														pos:        position{line: 895, col: 7, offset: 37107},
																														val:        " ",
																														ignoreCase: false,
																													},
																													&actionExpr{
																														pos: position{line: 895, col: 13, offset: 37113},
																														run: (*parser).callonDelimitedBlock192,
																														expr: &litMatcher{
																															pos:        position{line: 895, col: 13, offset: 37113},
																															val:        "\t",
																															ignoreCase: false,
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																			&litMatcher{
																				pos:        position{line: 157, col: 59, offset: 6479},
																				val:        "]",
																				ignoreCase: false,
																			},
																		},
																	},
																},
															},
														},
													},
													&zeroOrMoreExpr{
														pos: position{line: 120, col: 131, offset: 5149},
														expr: &choiceExpr{
															pos: position{line: 895, col: 7, offset: 37107},
															alternatives: []interface{}{
																&litMatcher{
																	pos:        position{line: 895, col: 7, offset: 37107},
																	val:        " ",
																	ignoreCase: false,
																},
																&actionExpr{
																	pos: position{line: 895, col: 13, offset: 37113},
																	run: (*parser).callonDelimitedBlock198,
																	expr: &litMatcher{
																		pos:        position{line: 895, col: 13, offset: 37113},
																		val:        "\t",
																		ignoreCase: false,
																	},
																},
															},
														},
													},
													&choiceExpr{
														pos: position{line: 903, col: 8, offset: 37209},
														alternatives: []interface{}{
															&litMatcher{
																pos:        position{line: 899, col: 12, offset: 37169},
																val:        "\r\n",
																ignoreCase: false,
															},
															&charClassMatcher{
																pos:        position{line: 899, col: 21, offset: 37178},
																val:        "[\\r\\n]",
																chars:      []rune{'\r', '\n'},
																ignoreCase: false,
																inverted:   false,
															},
															&notExpr{
																pos: position{line: 901, col: 8, offset: 37198},
																expr: &anyMatcher{
																	line: 901, col: 9, offset: 37199,
																},
															},
														},
													},
												},
											},
										},
									},
								},
								&litMatcher{
									pos:        position{line: 695, col: 26, offset: 30162},
									val:        "----",
									ignoreCase: false,
								},
								&zeroOrMoreExpr{
									pos: position{line: 698, col: 70, offset: 30274},
									expr: &choiceExpr{
										pos: position{line: 895, col: 7, offset: 37107},
										alternatives: []interface{}{
											&litMatcher{
												pos:        position{line: 895, col: 7, offset: 37107},
												val:        " ",
												ignoreCase: false,
											},
											&actionExpr{
												pos: position{line: 895, col: 13, offset: 37113},
												run: (*parser).callonDelimitedBlock209,
												expr: &litMatcher{
													pos:        position{line: 895, col: 13, offset: 37113},
													val:        "\t",
													ignoreCase: false,
												},
											},
										},
									},
								},
								&choiceExpr{
									pos: position{line: 899, col: 12, offset: 37169},
									alternatives: []interface{}{
										&litMatcher{
											pos:        position{line: 899, col: 12, offset: 37169},
											val:        "\r\n",
											ignoreCase: false,
										},
										&charClassMatcher{
											pos:        position{line: 899, col: 21, offset: 37178},
											val:        "[\\r\\n]",
											chars:      []rune{'\r', '\n'},
											ignoreCase: false,
											inverted:   false,
										},
									},
								},
								&labeledExpr{
									pos:   position{line: 698, col: 82, offset: 30286},
									label: "content",
									expr: &zeroOrMoreExpr{
										pos: position{line: 698, col: 90, offset: 30294},
										expr: &actionExpr{
											pos: position{line: 702, col: 24, offset: 30500},
											run: (*parser).callonDelimitedBlock216,
											expr: &labeledExpr{
												pos:   position{line: 702, col: 24, offset: 30500},
												label: "lines",
												expr: &oneOrMoreExpr{
													pos: position{line: 702, col: 30, offset: 30506},
													expr: &actionExpr{
														pos: position{line: 706, col: 21, offset: 30609},
														run: (*parser).callonDelimitedBlock219,
														expr: &seqExpr{
															pos: position{line: 706, col: 21, offset: 30609},
															exprs: []interface{}{
																&notExpr{
																	pos: position{line: 706, col: 21, offset: 30609},
																	expr: &litMatcher{
																		pos:        position{line: 695, col: 26, offset: 30162},
																		val:        "----",
																		ignoreCase: false,
																	},
																},
																&notExpr{
																	pos: position{line: 706, col: 44, offset: 30632},
																	expr: &notExpr{
																		pos: position{line: 901, col: 8, offset: 37198},
																		expr: &anyMatcher{
																			line: 901, col: 9, offset: 37199,
																		},
																	},
																},
																&labeledExpr{
																	pos:   position{line: 706, col: 49, offset: 30637},
																	label: "line",
																	expr: &actionExpr{
																		pos: position{line: 710, col: 28, offset: 30748},
																		run: (*parser).callonDelimitedBlock227,
																		expr: &zeroOrMoreExpr{
																			pos: position{line: 710, col: 28, offset: 30748},
																			expr: &seqExpr{
																				pos: position{line: 710, col: 29, offset: 30749},
																				exprs: []interface{}{
																					&notExpr{
																						pos: position{line: 710, col: 29, offset: 30749},
																						expr: &litMatcher{
																							pos:        position{line: 695, col: 26, offset: 30162},
																							val:        "----",
																							ignoreCase: false,
																						},
																					},
																					&notExpr{
																						pos: position{line: 710, col: 52, offset: 30772},
																						expr: &choiceExpr{
																							pos: position{line: 903, col: 8, offset: 37209},
																							alternatives: []interface{}{
																								&litMatcher{
																									pos:        position{line: 899, col: 12, offset: 37169},
																									val:        "\r\n",
																									ignoreCase: false,
																								},
																								&charClassMatcher{
																									pos:        position{line: 899, col: 21, offset: 37178},
																									val:        "[\\r\\n]",
																									chars:      []rune{'\r', '\n'},
																									ignoreCase: false,
																									inverted:   false,
																								},
																								&notExpr{
																									pos: position{line: 901, col: 8, offset: 37198},
																									expr: &anyMatcher{
																										line: 901, col: 9, offset: 37199,
																									},
																								},
																							},
																						},
																					},
																					&anyMatcher{
																						line: 710, col: 57, offset: 30777,
																					},
																				},
																			},
																		},
																	},
																},
																&choiceExpr{
																	pos: position{line: 903, col: 8, offset: 37209},
																	alternatives: []interface{}{
																		&litMatcher{
																			pos:        position{line: 899, col: 12, offset: 37169},
																			val:        "\r\n",
																			ignoreCase: false,
																		},
																		&charClassMatcher{
																			pos:        position{line: 899, col: 21, offset: 37178},
																			val:        "[\\r\\n]",
																			chars:      []rune{'\r', '\n'},
																			ignoreCase: false,
																			inverted:   false,
																		},
																		&notExpr{
																			pos: position{line: 901, col: 8, offset: 37198},
																			expr: &anyMatcher{
																				line: 901, col: 9, offset: 37199,
																			},
																		},
																	},
																},
															},
														},
													},
												},
											},
										},
									},
								},
								&choiceExpr{
									pos: position{line: 698, col: 114, offset: 30318},
									alternatives: []interface{}{
										&seqExpr{
											pos: position{line: 698, col: 115, offset: 30319},
											exprs: []interface{}{
												&litMatcher{
													pos:        position{line: 695, col: 26, offset: 30162},
													val:        "----",
													ignoreCase: false,
												},
												&zeroOrMoreExpr{
													pos: position{line: 698, col: 137, offset: 30341},
													expr: &choiceExpr{
														pos: position{line: 895, col: 7, offset: 37107},
														alternatives: []interface{}{
															&litMatcher{
																pos:        position{line: 895, col: 7, offset: 37107},
																val:        " ",
																ignoreCase: false,
															},
															&actionExpr{
																pos: position{line: 895, col: 13, offset: 37113},
																run: (*parser).callonDelimitedBlock250,
																expr: &litMatcher{
																	pos:        position{line: 895, col: 13, offset: 37113},
																	val:        "\t",
																	ignoreCase: false,
																},
															},
														},
													},
												},
												&choiceExpr{
													pos: position{line: 903, col: 8, offset: 37209},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 899, col: 12, offset: 37169},
															val:        "\r\n",
															ignoreCase: false,
														},
														&charClassMatcher{
															pos:        position{line: 899, col: 21, offset: 37178},
															val:        "[\\r\\n]",
															chars:      []rune{'\r', '\n'},
															ignoreCase: false,
															inverted:   false,
														},
														&notExpr{
															pos: position{line: 901, col: 8, offset: 37198},
															expr: &anyMatcher{
																line: 901, col: 9, offset: 37199,
															},
														},
													},
												},
											},
										},
										&notExpr{
											pos: position{line: 901, col: 8, offset: 37198},
											expr: &anyMatcher{
												line: 901, col: 9, offset: 37199,
											},
										},
									},
								},
							},
						},
					},
					&ruleRefExpr{
						pos:  position{line: 682, col: 48, offset: 29575},
						name: "ExampleBlock",
					},
					&actionExpr{
						pos: position{line: 818, col: 17, offset: 34443},
						run: (*parser).callonDelimitedBlock260,
						expr: &seqExpr{
							pos: position{line: 818, col: 17, offset: 34443},
							exprs: []interface{}{
								&labeledExpr{
									pos:   position{line: 818, col: 17, offset: 34443},
									label: "attributes",
									expr: &zeroOrMoreExpr{
										pos: position{line: 818, col: 28, offset: 34454},
										expr: &actionExpr{
											pos: position{line: 120, col: 21, offset: 5039},
											run: (*parser).callonDelimitedBlock264,
											expr: &seqExpr{
												pos: position{line: 120, col: 21, offset: 5039},
												exprs: []interface{}{
													&labeledExpr{
														pos:   position{line: 120, col: 21, offset: 5039},
														label: "attr",
														expr: &choiceExpr{
															pos: position{line: 120, col: 27, offset: 5045},
															alternatives: []interface{}{
																&actionExpr{
																	pos: position{line: 129, col: 14, offset: 5496},
																	run: (*parser).callonDelimitedBlock268,
																	expr: &labeledExpr{
																		pos:   position{line: 129, col: 14, offset: 5496},
																		label: "id",
																		expr: &actionExpr{
																			pos: position{line: 135, col: 20, offset: 5626},
																			run: (*parser).callonDelimitedBlock270,
																			expr: &seqExpr{
																				pos: position{line: 135, col: 20, offset: 5626},
																				exprs: []interface{}{
																					&litMatcher{
																						pos:        position{line: 135, col: 20, offset: 5626},
																						val:        "[[",
																						ignoreCase: false,
																					},
																					&labeledExpr{
																						pos:   position{line: 135, col: 25, offset: 5631},
																						label: "id",
																						expr: &actionExpr{
																							pos: position{line: 883, col: 7, offset: 36866},
																							run: (*parser).callonDelimitedBlock274,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 883, col: 7, offset: 36866},
																								expr: &seqExpr{
																									pos: position{line: 883, col: 8, offset: 36867},
																									exprs: []interface{}{
																										&notExpr{
																											pos: position{line: 883, col: 8, offset: 36867},
																											expr: &choiceExpr{
																												pos: position{line: 899, col: 12, offset: 37169},
																												alternatives: []interface{}{
																													&litMatcher{
																														pos:        position{line: 899, col: 12, offset: 37169},
																														val:        "\r\n",
																														ignoreCase: false,
																													},
																													&charClassMatcher{
																														pos:        position{line: 899, col: 21, offset: 37178},
																														val:        "[\\r\\n]",
																														chars:      []rune{'\r', '\n'},
																														ignoreCase: false,
																														inverted:   false,
																													},
																												},
																											},
																										},
																										&notExpr{
																											pos: position{line: 883, col: 17, offset: 36876},
																											expr: &choiceExpr{
																												pos: position{line: 895, col: 7, offset: 37107},
																												alternatives: []interface{}{
																													&litMatcher{
																														pos:        position{line: 895, col: 7, offset: 37107},
																														val:        " ",
																														ignoreCase: false,
																													},
																													&actionExpr{
																														pos: position{line: 895, col: 13, offset: 37113},
																														run: (*parser).callonDelimitedBlock284,
																														expr: &litMatcher{
																															pos:        position{line: 895, col: 13, offset: 37113},
																															val:        "\t",
																															ignoreCase: false,
																														},
																													},
																												},
																											},
																										},
																										&notExpr{
																											pos: position{line: 883, col: 21, offset: 36880},
																											expr: &litMatcher{
																												pos:        position{line: 883, col: 22, offset: 36881},
																												val:        "[",
																												ignoreCase: false,
																											},
																										},
																										&notExpr{
																											pos: position{line: 883, col: 26, offset: 36885},
																											expr: &litMatcher{
																												pos:        position{line: 883, col: 27, offset: 36886},
																												val:        "]",
																												ignoreCase: false,
																											},
																										},
																										&notExpr{
																											pos: position{line: 883, col: 31, offset: 36890},
																											expr: &litMatcher{
																												pos:        position{line: 883, col: 32, offset: 36891},
																												val:        "<<",
																												ignoreCase: false,
																											},
																										},
																										&notExpr{
																											pos: position{line: 883, col: 37, offset: 36896},
																											expr: &litMatcher{
																												pos:        position{line: 883, col: 38, offset: 36897},
																												val:        ">>",
																												ignoreCase: false,
																											},
																										},
																										&anyMatcher{
																											line: 883, col: 42, offset: 36901,
																										},
																									},
																								},
																							},
																						},
																					},
																					&litMatcher{
																						pos:        position{line: 135, col: 33, offset: 5639},
																						val:        "]]",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																},
																&actionExpr{
																	pos: position{line: 131, col: 5, offset: 5542},
																	run: (*parser).callonDelimitedBlock296,
																	expr: &seqExpr{
																		pos: position{line: 131, col: 5, offset: 5542},
																		exprs: []interface{}{
																			&litMatcher{
																				pos:        position{line: 131, col: 5, offset: 5542},
																				val:        "[#",
																				ignoreCase: false,
																			},
																			&labeledExpr{
																				pos:   position{line: 131, col: 10, offset: 5547},
																				label: "id",
																				expr: &actionExpr{
																					pos: position{line: 883, col: 7, offset: 36866},
																					run: (*parser).callonDelimitedBlock300,
																					expr: &oneOrMoreExpr{
																						pos: position{line: 883, col: 7, offset: 36866},
																						expr: &seqExpr{
																							pos: position{line: 883, col: 8, offset: 36867},
																							exprs: []interface{}{
																								&notExpr{
																									pos: position{line: 883, col: 8, offset: 36867},
																									expr: &choiceExpr{
																										pos: position{line: 899, col: 12, offset: 37169},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 899, col: 12, offset: 37169},
																												val:        "\r\n",
																												ignoreCase: false,
																											},
																											&charClassMatcher{
																												pos:        position{line: 899, col: 21, offset: 37178},
																												val:        "[\\r\\n]",
																												chars:      []rune{'\r', '\n'},
																												ignoreCase: false,
																												inverted:   false,
																											},
																										},
																									},
																								},
																								&notExpr{
																									pos: position{line: 883, col: 17, offset: 36876},
																									expr: &choiceExpr{
																										pos: position{line: 895, col: 7, offset: 37107},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 895, col: 7, offset: 37107},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 895, col: 13, offset: 37113},
																												run: (*parser).callonDelimitedBlock310,
																												expr: &litMatcher{
																													pos:        position{line: 895, col: 13, offset: 37113},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																								&notExpr{
																									pos: position{line: 883, col: 21, offset: 36880},
																									expr: &litMatcher{
																										pos:        position{line: 883, col: 22, offset: 36881},
																										val:        "[",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 883, col: 26, offset: 36885},
																									expr: &litMatcher{
																										pos:        position{line: 883, col: 27, offset: 36886},
																										val:        "]",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 883, col: 31, offset: 36890},
																									expr: &litMatcher{
																										pos:        position{line: 883, col: 32, offset: 36891},
																										val:        "<<",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 883, col: 37, offset: 36896},
																									expr: &litMatcher{
																										pos:        position{line: 883, col: 38, offset: 36897},
																										val:        ">>",
																										ignoreCase: false,
																									},
																								},
																								&anyMatcher{
																									line: 883, col: 42, offset: 36901,
																								},
																							},
																						},
																					},
																				},
																			},
																			&litMatcher{
																				pos:        position{line: 131, col: 18, offset: 5555},
																				val:        "]",
																				ignoreCase: false,
																			},
																		},
																	},
																},
																&actionExpr{
																	pos: position{line: 141, col: 17, offset: 5848},
																	run: (*parser).callonDelimitedBlock322,
																	expr: &seqExpr{
																		pos: position{line: 141, col: 17, offset: 5848},
																		exprs: []interface{}{
																			&litMatcher{
																				pos:        position{line: 141, col: 17, offset: 5848},
																				val:        ".",
																				ignoreCase: false,
																			},
																			&notExpr{
																				pos: position{line: 141, col: 21, offset: 5852},
																				expr: &litMatcher{
																					pos:        position{line: 141, col: 22, offset: 5853},
																					val:        ".",
																					ignoreCase: false,
																				},
																			},
																			&notExpr{
																				pos: position{line: 141, col: 26, offset: 5857},
																				expr: &choiceExpr{
																					pos: position{line: 895, col: 7, offset: 37107},
																					alternatives: []interface{}{
																						&litMatcher{
																							pos:        position{line: 895, col: 7, offset: 37107},
																							val:        " ",
																							ignoreCase: false,
																						},
																						&actionExpr{
																							pos: position{line: 895, col: 13, offset: 37113},
																							run: (*parser).callonDelimitedBlock330,
																							expr: &litMatcher{
																								pos:        position{line: 895, col: 13, offset: 37113},
																								val:        "\t",
																								ignoreCase: false,
																							},
																						},
																					},
																				},
																			},
																			&labeledExpr{
																				pos:   position{line: 141, col: 30, offset: 5861},
																				label: "title",
																				expr: &oneOrMoreExpr{
																					pos: position{line: 141, col: 36, offset: 5867},
																					expr: &seqExpr{
																						pos: position{line: 141, col: 37, offset: 5868},
																						exprs: []interface{}{
																							&notExpr{
																								pos: position{line: 141, col: 37, offset: 5868},
																								expr: &choiceExpr{
																									pos: position{line: 899, col: 12, offset: 37169},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 899, col: 12, offset: 37169},
																											val:        "\r\n",
																											ignoreCase: false,
																										},
																										&charClassMatcher{
																											pos:        position{line: 899, col: 21, offset: 37178},
																											val:        "[\\r\\n]",
																											chars:      []rune{'\r', '\n'},
																											ignoreCase: false,
																											inverted:   false,
																										},
																									},
																								},
																							},
																							&anyMatcher{
																								line: 141, col: 46, offset: 5877,
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																},
																&actionExpr{
																	pos: position{line: 147, col: 16, offset: 6051},
																	run: (*parser).callonDelimitedBlock340,
																	expr: &seqExpr{
																		pos: position{line: 147, col: 16, offset: 6051},
																		exprs: []interface{}{
																			&litMatcher{
																				pos:        position{line: 147, col: 16, offset: 6051},
																				val:        "[.",
																				ignoreCase: false,
																			},
																			&notExpr{
																				pos: position{line: 147, col: 21, offset: 6056},
																				expr: &choiceExpr{
																					pos: position{line: 895, col: 7, offset: 37107},
																					alternatives: []interface{}{
																						&litMatcher{
																							pos:        position{line: 895, col: 7, offset: 37107},
																							val:        " ",
																							ignoreCase: false,
																						},
																						&actionExpr{
																							pos: position{line: 895, col: 13, offset: 37113},
																							run: (*parser).callonDelimitedBlock346,
																							expr: &litMatcher{
																								pos:        position{line: 895, col: 13, offset: 37113},
																								val:        "\t",
																								ignoreCase: false,
																							},
																						},
																					},
																				},
																			},
																			&labeledExpr{
																				pos:   position{line: 147, col: 25, offset: 6060},
																				label: "role",
																				expr: &oneOrMoreExpr{
																					pos: position{line: 147, col: 30, offset: 6065},
																					expr: &seqExpr{
																						pos: position{line: 147, col: 31, offset: 6066},
																						exprs: []interface{}{
																							&notExpr{
																								pos: position{line: 147, col: 31, offset: 6066},
																								expr: &choiceExpr{
																									pos: position{line: 899, col: 12, offset: 37169},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 899, col: 12, offset: 37169},
																											val:        "\r\n",
																											ignoreCase: false,
																										},
																										&charClassMatcher{
																											pos:        position{line: 899, col: 21, offset: 37178},
																											val:        "[\\r\\n]",
																											chars:      []rune{'\r', '\n'},
																											ignoreCase: false,
																											inverted:   false,
																										},
																									},
																								},
																							},
																							&notExpr{
																								pos: position{line: 147, col: 40, offset: 6075},
																								expr: &litMatcher{
																									pos:        position{line: 147, col: 41, offset: 6076},
																									val:        "]",
																									ignoreCase: false,
																								},
																							},
																							&anyMatcher{
																								line: 147, col: 45, offset: 6080,
																							},
																						},
																					},
																				},
																			},
																			&litMatcher{
																				pos:        position{line: 147, col: 49, offset: 6084},
																				val:        "]",
																				ignoreCase: false,
																			},
																		},
																	},
																},
																&actionExpr{
																	pos: position{line: 152, col: 30, offset: 6255},
																	run: (*parser).callonDelimitedBlock359,
																	expr: &seqExpr{
																		pos: position{line: 152, col: 30, offset: 6255},
																		exprs: []interface{}{
																			&litMatcher{
																				pos:        position{line: 152, col: 30, offset: 6255},
																				val:        "[",
																				ignoreCase: false,
																			},
																			&labeledExpr{
																				pos:   position{line: 152, col: 34, offset: 6259},
																				label: "k",
																				expr: &choiceExpr{
																					pos: position{line: 470, col: 19, offset: 18925},
																					alternatives: []interface{}{
																						&actionExpr{
																							pos: position{line: 470, col: 19, offset: 18925},
																							run: (*parser).callonDelimitedBlock364,
																							expr: &litMatcher{
																								pos:        position{line: 470, col: 19, offset: 18925},
																								val:        "TIP",
																								ignoreCase: false,
																							},
																						},
																						&actionExpr{
																							pos: position{line: 472, col: 5, offset: 18963},
																							run: (*parser).callonDelimitedBlock366,
																							expr: &litMatcher{
																								pos:        position{line: 472, col: 5, offset: 18963},
																								val:        "NOTE",
																								ignoreCase: false,
																							},
																						},
																						&actionExpr{
																							pos: position{line: 474, col: 5, offset: 19003},
																							run: (*parser).callonDelimitedBlock368,
																							expr: &litMatcher{
																								pos:        position{line: 474, col: 5, offset: 19003},
																								val:        "IMPORTANT",
																								ignoreCase: false,
																							},
																						},
																						&actionExpr{
																							pos: position{line: 476, col: 5, offset: 19053},
																							run: (*parser).callonDelimitedBlock370,
																							expr: &litMatcher{
																								pos:        position{line: 476, col: 5, offset: 19053},
																								val:        "WARNING",
																								ignoreCase: false,
																							},
																						},
																						&actionExpr{
																							pos: position{line: 478, col: 5, offset: 19099},
																							run: (*parser).callonDelimitedBlock372,
																							expr: &litMatcher{
																								pos:        position{line: 478, col: 5, offset: 19099},
																								val:        "CAUTION",
																								ignoreCase: false,
																							},
																						},
																					},
																				},
																			},
																			&litMatcher{
																				pos:        position{line: 152, col: 53, offset: 6278},
																				val:        "]",
																				ignoreCase: false,
																			},
																		},
																	},
																},
																&actionExpr{
																	pos: position{line: 175, col: 21, offset: 7013},
																	run: (*parser).callonDelimitedBlock375,
																	expr: &litMatcher{
																		pos:        position{line: 175, col: 21, offset: 7013},
																		val:        "[horizontal]",
																		ignoreCase: false,
																	},
																},
																&actionExpr{
																	pos: position{line: 157, col: 19, offset: 6439},
																	run: (*parser).callonDelimitedBlock377,
																	expr: &seqExpr{
																		pos: position{line: 157, col: 19, offset: 6439},
																		exprs: []interface{}{
																			&litMatcher{
																				pos:        position{line: 157, col: 19, offset: 6439},
																				val:        "[",
																				ignoreCase: false,
																			},
																			&notExpr{
																				pos: position{line: 157, col: 23, offset: 6443},
																				expr: &choiceExpr{
																					pos: position{line: 895, col: 7, offset: 37107},
																					alternatives: []interface{}{
																						&litMatcher{
																							pos:        position{line: 895, col: 7, offset: 37107},
																							val:        " ",
																							ignoreCase: false,
																						},
																						&actionExpr{
																							pos: position{line: 895, col: 13, offset: 37113},
																							run: (*parser).callonDelimitedBlock383,
																							expr: &litMatcher{
																								pos:        position{line: 895, col: 13, offset: 37113},
																								val:        "\t",
																								ignoreCase: false,
																							},
																						},
																					},
																				},
																			},
																			&labeledExpr{
																				pos:   position{line: 157, col: 27, offset: 6447},
																				label: "attributes",
																				expr: &zeroOrMoreExpr{
																					pos: position{line: 157, col: 38, offset: 6458},
																					expr: &choiceExpr{
																						pos: position{line: 161, col: 21, offset: 6571},
																						alternatives: []interface{}{
																							&actionExpr{
																								pos: position{line: 161, col: 21, offset: 6571},
																								run: (*parser).callonDelimitedBlock388,
																								expr: &seqExpr{
																									pos: position{line: 161, col: 21, offset: 6571},
																									exprs: []interface{}{
																										&labeledExpr{
																											pos:   position{line: 161, col: 21, offset: 6571},
																											label: "key",
																											expr: &actionExpr{
																												pos: position{line: 167, col: 17, offset: 6861},
																												run: (*parser).callonDelimitedBlock391,
																												expr: &seqExpr{
																													pos: position{line: 167, col: 17, offset: 6861},
																													exprs: []interface{}{
																														&notExpr{
																															pos: position{line: 167, col: 17, offset: 6861},
																															expr: &actionExpr{
																																pos: position{line: 207, col: 14, offset: 8362},
																																run: (*parser).callonDelimitedBlock394,
																																expr: &litMatcher{
																																	pos:        position{line: 207, col: 14, offset: 8362},
																																	val:        "verse",
																																	ignoreCase: false,
																																},
																															},
																														},
																														&labeledExpr{
																															pos:   position{line: 167, col: 28, offset: 6872},
																															label: "key",
																															expr: &oneOrMoreExpr{
																																pos: position{line: 167, col: 32, offset: 6876},
																																expr: &seqExpr{
																																	pos: position{line: 167, col: 33, offset: 6877},
																																	exprs: []interface{}{
																																		&notExpr{
																																			pos: position{line: 167, col: 33, offset: 6877},
																																			expr: &litMatcher{
																																				pos:        position{line: 167, col: 34, offset: 6878},
																																				val:        "=",
																																				ignoreCase: false,
																																			},
																																		},
																																		&notExpr{
																																			pos: position{line: 167, col: 38, offset: 6882},
																																			expr: &litMatcher{
																																				pos:        position{line: 167, col: 39, offset: 6883},
																																				val:        ",",
																																				ignoreCase: false,
																																			},
																																		},
																																		&notExpr{
																																			pos: position{line: 167, col: 43, offset: 6887},
																																			expr: &litMatcher{
																																				pos:        position{line: 167, col: 44, offset: 6888},
																																				val:        "]",
																																				ignoreCase: false,
																																			},
																																		},
																																		&anyMatcher{
																																			line: 167, col: 48, offset: 6892,
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																										&litMatcher{
																											pos:        position{line: 161, col: 40, offset: 6590},
																											val:        "=",
																											ignoreCase: false,
																										},
																										&labeledExpr{
																											pos:   position{line: 161, col: 44, offset: 6594},
																											label: "value",
																											expr: &actionExpr{
																												pos: position{line: 171, col: 19, offset: 6940},
																												run: (*parser).callonDelimitedBlock408,
																												expr: &labeledExpr{
																													pos:   position{line: 171, col: 19, offset: 6940},
																													label: "value",
																													expr: &zeroOrMoreExpr{
																														pos: position{line: 171, col: 25, offset: 6946},
																														expr: &seqExpr{
																															pos: position{line: 171, col: 26, offset: 6947},
																															exprs: []interface{}{
																																&notExpr{
																																	pos: position{line: 171, col: 26, offset: 6947},
																																	expr: &litMatcher{
																																		pos:        position{line: 171, col: 27, offset: 6948},
																																		val:        "=",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 171, col: 31, offset: 6952},
																																	expr: &litMatcher{
																																		pos:        position{line: 171, col: 32, offset: 6953},
																																		val:        ",",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 171, col: 36, offset: 6957},
																																	expr: &litMatcher{
																																		pos:        position{line: 171, col: 37, offset: 6958},
																																		val:        "]",
																																		ignoreCase: false,
																																	},
																																},
																																&anyMatcher{
																																	line: 171, col: 41, offset: 6962,
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																										&zeroOrOneExpr{
																											pos: position{line: 161, col: 67, offset: 6617},
																											expr: &litMatcher{
																												pos:        position{line: 161, col: 67, offset: 6617},
																												val:        ",",
																												ignoreCase: false,
																											},
																										},
																										&zeroOrMoreExpr{
																											pos: position{line: 161, col: 72, offset: 6622},
																											expr: &choiceExpr{
																												pos: position{line: 895, col: 7, offset: 37107},
																												alternatives: []interface{}{
																													&litMatcher{
																														pos:        position{line: 895, col: 7, offset: 37107},
																														val:        " ",
																														ignoreCase: false,
																													},
																													&actionExpr{
																														pos: position{line: 895, col: 13, offset: 37113},
																														run: (*parser).callonDelimitedBlock424,
																														expr: &litMatcher{
																															pos:        position{line: 895, col: 13, offset: 37113},
																															val:        "\t",
																															ignoreCase: false,
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&actionExpr{
																								pos: position{line: 163, col: 5, offset: 6729},
																								run: (*parser).callonDelimitedBlock426,
																								expr: &seqExpr{
																									pos: position{line: 163, col: 5, offset: 6729},
																									exprs: []interface{}{
																										&labeledExpr{
																											pos:   position{line: 163, col: 5, offset: 6729},
																											label: "key",
																											expr: &actionExpr{
																												pos: position{line: 167, col: 17, offset: 6861},
																												run: (*parser).callonDelimitedBlock429,
																												expr: &seqExpr{
																													pos: position{line: 167, col: 17, offset: 6861},
																													exprs: []interface{}{
																														&notExpr{
																															pos: position{line: 167, col: 17, offset: 6861},
																															expr: &actionExpr{
																																pos: position{line: 207, col: 14, offset: 8362},
																																run: (*parser).callonDelimitedBlock432,
																																expr: &litMatcher{
																																	pos:        position{line: 207, col: 14, offset: 8362},
																																	val:        "verse",
																																	ignoreCase: false,
																																},
																															},
																														},
																														&labeledExpr{
																															pos:   position{line: 167, col: 28, offset: 6872},
																															label: "key",
																															expr: &oneOrMoreExpr{
																																pos: position{line: 167, col: 32, offset: 6876},
																																expr: &seqExpr{
																																	pos: position{line: 167, col: 33, offset: 6877},
																																	exprs: []interface{}{
																																		&notExpr{
																																			pos: position{line: 167, col: 33, offset: 6877},
																																			expr: &litMatcher{
																																				pos:        position{line: 167, col: 34, offset: 6878},
																																				val:        "=",
																																				ignoreCase: false,
																																			},
																																		},
																																		&notExpr{
																																			pos: position{line: 167, col: 38, offset: 6882},
																																			expr: &litMatcher{
																																				pos:        position{line: 167, col: 39, offset: 6883},
																																				val:        ",",
																																				ignoreCase: false,
																																			},
																																		},
																																		&notExpr{
																																			pos: position{line: 167, col: 43, offset: 6887},
																																			expr: &litMatcher{
																																				pos:        position{line: 167, col: 44, offset: 6888},
																																				val:        "]",
																																				ignoreCase: false,
																																			},
																																		},
																																		&anyMatcher{
																																			line: 167, col: 48, offset: 6892,
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																										&zeroOrOneExpr{
																											pos: position{line: 163, col: 24, offset: 6748},
																											expr: &litMatcher{
																												pos:        position{line: 163, col: 24, offset: 6748},
																												val:        ",",
																												ignoreCase: false,
																											},
																										},
																										&zeroOrMoreExpr{
																											pos: position{line: 163, col: 29, offset: 6753},
																											expr: &choiceExpr{
																												pos: position{line: 895, col: 7, offset: 37107},
																												alternatives: []interface{}{
																													&litMatcher{
																														pos:        position{line: 895, col: 7, offset: 37107},
																														val:        " ",
																														ignoreCase: false,
																													},
																													&actionExpr{
																														pos: position{line: 895, col: 13, offset: 37113},
																														run: (*parser).callonDelimitedBlock449,
																														expr: &litMatcher{
																															pos:        position{line: 895, col: 13, offset: 37113},
																															val:        "\t",
																															ignoreCase: false,
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																			&litMatcher{
																				pos:        position{line: 157, col: 59, offset: 6479},
																				val:        "]",
																				ignoreCase: false,
																			},
																		},
																	},
																},
															},
														},
													},
													&zeroOrMoreExpr{
														pos: position{line: 120, col: 131, offset: 5149},
														expr: &choiceExpr{
															pos: position{line: 895, col: 7, offset: 37107},
															alternatives: []interface{}{
																&litMatcher{
																	pos:        position{line: 895, col: 7, offset: 37107},
																	val:        " ",
																	ignoreCase: false,
																},
																&actionExpr{
																	pos: position{line: 895, col: 13, offset: 37113},
																	run: (*parser).callonDelimitedBlock455,
																	expr: &litMatcher{
																		pos:        position{line: 895, col: 13, offset: 37113},
																		val:        "\t",
																		ignoreCase: false,
																	},
																},
															},
														},
													},
													&choiceExpr{
														pos: position{line: 903, col: 8, offset: 37209},
														alternatives: []interface{}{
															&litMatcher{
																pos:        position{line: 899, col: 12, offset: 37169},
																val:        "\r\n",
																ignoreCase: false,
															},
															&charClassMatcher{
																pos:        position{line: 899, col: 21, offset: 37178},
																val:        "[\\r\\n]",
																chars:      []rune{'\r', '\n'},
																ignoreCase: false,
																inverted:   false,
															},
															&notExpr{
																pos: position{line: 901, col: 8, offset: 37198},
																expr: &anyMatcher{
																	line: 901, col: 9, offset: 37199,
																},
															},
														},
													},
												},
											},
										},
									},
								},
								&litMatcher{
									pos:        position{line: 816, col: 26, offset: 34419},
									val:        "////",
									ignoreCase: false,
								},
								&zeroOrMoreExpr{
									pos: position{line: 818, col: 70, offset: 34496},
									expr: &choiceExpr{
										pos: position{line: 895, col: 7, offset: 37107},
										alternatives: []interface{}{
											&litMatcher{
												pos:        position{line: 895, col: 7, offset: 37107},
												val:        " ",
												ignoreCase: false,
											},
											&actionExpr{
												pos: position{line: 895, col: 13, offset: 37113},
												run: (*parser).callonDelimitedBlock466,
												expr: &litMatcher{
													pos:        position{line: 895, col: 13, offset: 37113},
													val:        "\t",
													ignoreCase: false,
												},
											},
										},
									},
								},
								&choiceExpr{
									pos: position{line: 899, col: 12, offset: 37169},
									alternatives: []interface{}{
										&litMatcher{
											pos:        position{line: 899, col: 12, offset: 37169},
											val:        "\r\n",
											ignoreCase: false,
										},
										&charClassMatcher{
											pos:        position{line: 899, col: 21, offset: 37178},
											val:        "[\\r\\n]",
											chars:      []rune{'\r', '\n'},
											ignoreCase: false,
											inverted:   false,
										},
									},
								},
								&labeledExpr{
									pos:   position{line: 818, col: 82, offset: 34508},
									label: "content",
									expr: &zeroOrMoreExpr{
										pos: position{line: 818, col: 90, offset: 34516},
										expr: &actionExpr{
											pos: position{line: 822, col: 21, offset: 34721},
											run: (*parser).callonDelimitedBlock473,
											expr: &seqExpr{
												pos: position{line: 822, col: 21, offset: 34721},
												exprs: []interface{}{
													&labeledExpr{
														pos:   position{line: 822, col: 21, offset: 34721},
														label: "content",
														expr: &zeroOrMoreExpr{
															pos: position{line: 822, col: 29, offset: 34729},
															expr: &seqExpr{
																pos: position{line: 822, col: 30, offset: 34730},
																exprs: []interface{}{
																	&notExpr{
																		pos: position{line: 822, col: 30, offset: 34730},
																		expr: &litMatcher{
																			pos:        position{line: 816, col: 26, offset: 34419},
																			val:        "////",
																			ignoreCase: false,
																		},
																	},
																	&notExpr{
																		pos: position{line: 822, col: 53, offset: 34753},
																		expr: &choiceExpr{
																			pos: position{line: 903, col: 8, offset: 37209},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 899, col: 12, offset: 37169},
																					val:        "\r\n",
																					ignoreCase: false,
																				},
																				&charClassMatcher{
																					pos:        position{line: 899, col: 21, offset: 37178},
																					val:        "[\\r\\n]",
																					chars:      []rune{'\r', '\n'},
																					ignoreCase: false,
																					inverted:   false,
																				},
																				&notExpr{
																					pos: position{line: 901, col: 8, offset: 37198},
																					expr: &anyMatcher{
																						line: 901, col: 9, offset: 37199,
																					},
																				},
																			},
																		},
																	},
																	&anyMatcher{
																		line: 822, col: 58, offset: 34758,
																	},
																},
															},
														},
													},
													&choiceExpr{
														pos: position{line: 903, col: 8, offset: 37209},
														alternatives: []interface{}{
															&litMatcher{
																pos:        position{line: 899, col: 12, offset: 37169},
																val:        "\r\n",
																ignoreCase: false,
															},
															&charClassMatcher{
																pos:        position{line: 899, col: 21, offset: 37178},
																val:        "[\\r\\n]",
																chars:      []rune{'\r', '\n'},
																ignoreCase: false,
																inverted:   false,
															},
															&notExpr{
																pos: position{line: 901, col: 8, offset: 37198},
																expr: &anyMatcher{
																	line: 901, col: 9, offset: 37199,
																},
															},
														},
													},
												},
											},
										},
									},
								},
								&choiceExpr{
									pos: position{line: 818, col: 112, offset: 34538},
									alternatives: []interface{}{
										&seqExpr{
											pos: position{line: 818, col: 113, offset: 34539},
											exprs: []interface{}{
												&litMatcher{
													pos:        position{line: 816, col: 26, offset: 34419},
													val:        "////",
													ignoreCase: false,
												},
												&zeroOrMoreExpr{
													pos: position{line: 818, col: 135, offset: 34561},
													expr: &choiceExpr{
														pos: position{line: 895, col: 7, offset: 37107},
														alternatives: []interface{}{
															&litMatcher{
																pos:        position{line: 895, col: 7, offset: 37107},
																val:        " ",
																ignoreCase: false,
															},
															&actionExpr{
																pos: position{line: 895, col: 13, offset: 37113},
																run: (*parser).callonDelimitedBlock498,
																expr: &litMatcher{
																	pos:        position{line: 895, col: 13, offset: 37113},
																	val:        "\t",
																	ignoreCase: false,
																},
															},
														},
													},
												},
												&choiceExpr{
													pos: position{line: 903, col: 8, offset: 37209},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 899, col: 12, offset: 37169},
															val:        "\r\n",
															ignoreCase: false,
														},
														&charClassMatcher{
															pos:        position{line: 899, col: 21, offset: 37178},
															val:        "[\\r\\n]",
															chars:      []rune{'\r', '\n'},
															ignoreCase: false,
															inverted:   false,
														},
														&notExpr{
															pos: position{line: 901, col: 8, offset: 37198},
															expr: &anyMatcher{
																line: 901, col: 9, offset: 37199,
															},
														},
													},
												},
											},
										},
										&notExpr{
											pos: position{line: 901, col: 8, offset: 37198},
											expr: &anyMatcher{
												line: 901, col: 9, offset: 37199,
											},
										},
									},
								},
							},
						},
					},
					&ruleRefExpr{
						pos:  position{line: 682, col: 78, offset: 29605},
						name: "VerseBlock",
					},
					&ruleRefExpr{
						pos:  position{line: 682, col: 91, offset: 29618},
						name: "QuoteBlock",
					},
				},
			},
		},
		{
			name: "FencedBlock",
			pos:  position{line: 690, col: 1, offset: 29837},
			expr: &actionExpr{
				pos: position{line: 690, col: 16, offset: 29852},
				run: (*parser).callonFencedBlock1,
				expr: &seqExpr{
					pos: position{line: 690, col: 16, offset: 29852},
					exprs: []interface{}{
						&labeledExpr{
							pos:   position{line: 690, col: 16, offset: 29852},
							label: "attributes",
							expr: &zeroOrMoreExpr{
								pos: position{line: 690, col: 27, offset: 29863},
								expr: &actionExpr{
									pos: position{line: 120, col: 21, offset: 5039},
									run: (*parser).callonFencedBlock5,
									expr: &seqExpr{
										pos: position{line: 120, col: 21, offset: 5039},
										exprs: []interface{}{
											&labeledExpr{
												pos:   position{line: 120, col: 21, offset: 5039},
												label: "attr",
												expr: &choiceExpr{
													pos: position{line: 120, col: 27, offset: 5045},
													alternatives: []interface{}{
														&actionExpr{
															pos: position{line: 129, col: 14, offset: 5496},
															run: (*parser).callonFencedBlock9,
															expr: &labeledExpr{
																pos:   position{line: 129, col: 14, offset: 5496},
																label: "id",
																expr: &actionExpr{
																	pos: position{line: 135, col: 20, offset: 5626},
																	run: (*parser).callonFencedBlock11,
																	expr: &seqExpr{
																		pos: position{line: 135, col: 20, offset: 5626},
																		exprs: []interface{}{
																			&litMatcher{
																				pos:        position{line: 135, col: 20, offset: 5626},
																				val:        "[[",
																				ignoreCase: false,
																			},
																			&labeledExpr{
																				pos:   position{line: 135, col: 25, offset: 5631},
																				label: "id",
																				expr: &actionExpr{
																					pos: position{line: 883, col: 7, offset: 36866},
																					run: (*parser).callonFencedBlock15,
																					expr: &oneOrMoreExpr{
																						pos: position{line: 883, col: 7, offset: 36866},
																						expr: &seqExpr{
																							pos: position{line: 883, col: 8, offset: 36867},
																							exprs: []interface{}{
																								&notExpr{
																									pos: position{line: 883, col: 8, offset: 36867},
																									expr: &choiceExpr{
																										pos: position{line: 899, col: 12, offset: 37169},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 899, col: 12, offset: 37169},
																												val:        "\r\n",
																												ignoreCase: false,
																											},
																											&charClassMatcher{
																												pos:        position{line: 899, col: 21, offset: 37178},
																												val:        "[\\r\\n]",
																												chars:      []rune{'\r', '\n'},
																												ignoreCase: false,
																												inverted:   false,
																											},
																										},
																									},
																								},
																								&notExpr{
																									pos: position{line: 883, col: 17, offset: 36876},
																									expr: &choiceExpr{
																										pos: position{line: 895, col: 7, offset: 37107},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 895, col: 7, offset: 37107},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 895, col: 13, offset: 37113},
																												run: (*parser).callonFencedBlock25,
																												expr: &litMatcher{
																													pos:        position{line: 895, col: 13, offset: 37113},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																								&notExpr{
																									pos: position{line: 883, col: 21, offset: 36880},
																									expr: &litMatcher{
																										pos:        position{line: 883, col: 22, offset: 36881},
																										val:        "[",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 883, col: 26, offset: 36885},
																									expr: &litMatcher{
																										pos:        position{line: 883, col: 27, offset: 36886},
																										val:        "]",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 883, col: 31, offset: 36890},
																									expr: &litMatcher{
																										pos:        position{line: 883, col: 32, offset: 36891},
																										val:        "<<",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 883, col: 37, offset: 36896},
																									expr: &litMatcher{
																										pos:        position{line: 883, col: 38, offset: 36897},
																										val:        ">>",
																										ignoreCase: false,
																									},
																								},
																								&anyMatcher{
																									line: 883, col: 42, offset: 36901,
																								},
																							},
																						},
																					},
																				},
																			},
																			&litMatcher{
																				pos:        position{line: 135, col: 33, offset: 5639},
																				val:        "]]",
																				ignoreCase: false,
																			},
																		},
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 131, col: 5, offset: 5542},
															run: (*parser).callonFencedBlock37,
															expr: &seqExpr{
																pos: position{line: 131, col: 5, offset: 5542},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 131, col: 5, offset: 5542},
																		val:        "[#",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 131, col: 10, offset: 5547},
																		label: "id",
																		expr: &actionExpr{
																			pos: position{line: 883, col: 7, offset: 36866},
																			run: (*parser).callonFencedBlock41,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 883, col: 7, offset: 36866},
																				expr: &seqExpr{
																					pos: position{line: 883, col: 8, offset: 36867},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 883, col: 8, offset: 36867},
																							expr: &choiceExpr{
																								pos: position{line: 899, col: 12, offset: 37169},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 899, col: 12, offset: 37169},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 899, col: 21, offset: 37178},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 883, col: 17, offset: 36876},
																							expr: &choiceExpr{
																								pos: position{line: 895, col: 7, offset: 37107},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 895, col: 7, offset: 37107},
																										val:        " ",
																										ignoreCase: false,
																									},
																									&actionExpr{
																										pos: position{line: 895, col: 13, offset: 37113},
																										run: (*parser).callonFencedBlock51,
																										expr: &litMatcher{
																											pos:        position{line: 895, col: 13, offset: 37113},
																											val:        "\t",
																											ignoreCase: false,
																										},
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 883, col: 21, offset: 36880},
																							expr: &litMatcher{
																								pos:        position{line: 883, col: 22, offset: 36881},
																								val:        "[",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 883, col: 26, offset: 36885},
																							expr: &litMatcher{
																								pos:        position{line: 883, col: 27, offset: 36886},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 883, col: 31, offset: 36890},
																							expr: &litMatcher{
																								pos:        position{line: 883, col: 32, offset: 36891},
																								val:        "<<",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 883, col: 37, offset: 36896},
																							expr: &litMatcher{
																								pos:        position{line: 883, col: 38, offset: 36897},
																								val:        ">>",
																								ignoreCase: false,
																							},
																						},
																						&anyMatcher{
																							line: 883, col: 42, offset: 36901,
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 131, col: 18, offset: 5555},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 141, col: 17, offset: 5848},
															run: (*parser).callonFencedBlock63,
															expr: &seqExpr{
																pos: position{line: 141, col: 17, offset: 5848},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 141, col: 17, offset: 5848},
																		val:        ".",
																		ignoreCase: false,
																	},
																	&notExpr{
																		pos: position{line: 141, col: 21, offset: 5852},
																		expr: &litMatcher{
																			pos:        position{line: 141, col: 22, offset: 5853},
																			val:        ".",
																			ignoreCase: false,
																		},
																	},
																	&notExpr{
																		pos: position{line: 141, col: 26, offset: 5857},
																		expr: &choiceExpr{
																			pos: position{line: 895, col: 7, offset: 37107},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 895, col: 7, offset: 37107},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 895, col: 13, offset: 37113},
																					run: (*parser).callonFencedBlock71,
																					expr: &litMatcher{
																						pos:        position{line: 895, col: 13, offset: 37113},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 141, col: 30, offset: 5861},
																		label: "title",
																		expr: &oneOrMoreExpr{
																			pos: position{line: 141, col: 36, offset: 5867},
																			expr: &seqExpr{
																				pos: position{line: 141, col: 37, offset: 5868},
																				exprs: []interface{}{
																					&notExpr{
																						pos: position{line: 141, col: 37, offset: 5868},
																						expr: &choiceExpr{
																							pos: position{line: 899, col: 12, offset: 37169},
																							alternatives: []interface{}{
																								&litMatcher{
																									pos:        position{line: 899, col: 12, offset: 37169},
																									val:        "\r\n",
																									ignoreCase: false,
																								},
																								&charClassMatcher{
																									pos:        position{line: 899, col: 21, offset: 37178},
																									val:        "[\\r\\n]",
																									chars:      []rune{'\r', '\n'},
																									ignoreCase: false,
																									inverted:   false,
																								},
																							},
																						},
																					},
																					&anyMatcher{
																						line: 141, col: 46, offset: 5877,
																					},
																				},
																			},
																		},
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 147, col: 16, offset: 6051},
															run: (*parser).callonFencedBlock81,
															expr: &seqExpr{
																pos: position{line: 147, col: 16, offset: 6051},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 147, col: 16, offset: 6051},
																		val:        "[.",
																		ignoreCase: false,
																	},
																	&notExpr{
																		pos: position{line: 147, col: 21, offset: 6056},
																		expr: &choiceExpr{
																			pos: position{line: 895, col: 7, offset: 37107},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 895, col: 7, offset: 37107},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 895, col: 13, offset: 37113},
																					run: (*parser).callonFencedBlock87,
																					expr: &litMatcher{
																						pos:        position{line: 895, col: 13, offset: 37113},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 147, col: 25, offset: 6060},
																		label: "role",
																		expr: &oneOrMoreExpr{
																			pos: position{line: 147, col: 30, offset: 6065},
																			expr: &seqExpr{
																				pos: position{line: 147, col: 31, offset: 6066},
																				exprs: []interface{}{
																					&notExpr{
																						pos: position{line: 147, col: 31, offset: 6066},
																						expr: &choiceExpr{
																							pos: position{line: 899, col: 12, offset: 37169},
																							alternatives: []interface{}{
																								&litMatcher{
																									pos:        position{line: 899, col: 12, offset: 37169},
																									val:        "\r\n",
																									ignoreCase: false,
																								},
																								&charClassMatcher{
																									pos:        position{line: 899, col: 21, offset: 37178},
																									val:        "[\\r\\n]",
																									chars:      []rune{'\r', '\n'},
																									ignoreCase: false,
																									inverted:   false,
																								},
																							},
																						},
																					},
																					&notExpr{
																						pos: position{line: 147, col: 40, offset: 6075},
																						expr: &litMatcher{
																							pos:        position{line: 147, col: 41, offset: 6076},
																							val:        "]",
																							ignoreCase: false,
																						},
																					},
																					&anyMatcher{
																						line: 147, col: 45, offset: 6080,
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 147, col: 49, offset: 6084},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 152, col: 30, offset: 6255},
															run: (*parser).callonFencedBlock100,
															expr: &seqExpr{
																pos: position{line: 152, col: 30, offset: 6255},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 152, col: 30, offset: 6255},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 152, col: 34, offset: 6259},
																		label: "k",
																		expr: &choiceExpr{
																			pos: position{line: 470, col: 19, offset: 18925},
																			alternatives: []interface{}{
																				&actionExpr{
																					pos: position{line: 470, col: 19, offset: 18925},
																					run: (*parser).callonFencedBlock105,
																					expr: &litMatcher{
																						pos:        position{line: 470, col: 19, offset: 18925},
																						val:        "TIP",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 472, col: 5, offset: 18963},
																					run: (*parser).callonFencedBlock107,
																					expr: &litMatcher{
																						pos:        position{line: 472, col: 5, offset: 18963},
																						val:        "NOTE",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 474, col: 5, offset: 19003},
																					run: (*parser).callonFencedBlock109,
																					expr: &litMatcher{
																						pos:        position{line: 474, col: 5, offset: 19003},
																						val:        "IMPORTANT",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 476, col: 5, offset: 19053},
																					run: (*parser).callonFencedBlock111,
																					expr: &litMatcher{
																						pos:        position{line: 476, col: 5, offset: 19053},
																						val:        "WARNING",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 478, col: 5, offset: 19099},
																					run: (*parser).callonFencedBlock113,
																					expr: &litMatcher{
																						pos:        position{line: 478, col: 5, offset: 19099},
																						val:        "CAUTION",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 152, col: 53, offset: 6278},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 175, col: 21, offset: 7013},
															run: (*parser).callonFencedBlock116,
															expr: &litMatcher{
																pos:        position{line: 175, col: 21, offset: 7013},
																val:        "[horizontal]",
																ignoreCase: false,
															},
														},
														&actionExpr{
															pos: position{line: 157, col: 19, offset: 6439},
															run: (*parser).callonFencedBlock118,
															expr: &seqExpr{
																pos: position{line: 157, col: 19, offset: 6439},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 157, col: 19, offset: 6439},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&notExpr{
																		pos: position{line: 157, col: 23, offset: 6443},
																		expr: &choiceExpr{
																			pos: position{line: 895, col: 7, offset: 37107},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 895, col: 7, offset: 37107},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 895, col: 13, offset: 37113},
																					run: (*parser).callonFencedBlock124,
																					expr: &litMatcher{
																						pos:        position{line: 895, col: 13, offset: 37113},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 157, col: 27, offset: 6447},
																		label: "attributes",
																		expr: &zeroOrMoreExpr{
																			pos: position{line: 157, col: 38, offset: 6458},
																			expr: &choiceExpr{
																				pos: position{line: 161, col: 21, offset: 6571},
																				alternatives: []interface{}{
																					&actionExpr{
																						pos: position{line: 161, col: 21, offset: 6571},
																						run: (*parser).callonFencedBlock129,
																						expr: &seqExpr{
																							pos: position{line: 161, col: 21, offset: 6571},
																							exprs: []interface{}{
																								&labeledExpr{
																									pos:   position{line: 161, col: 21, offset: 6571},
																									label: "key",
																									expr: &actionExpr{
																										pos: position{line: 167, col: 17, offset: 6861},
																										run: (*parser).callonFencedBlock132,
																										expr: &seqExpr{
																											pos: position{line: 167, col: 17, offset: 6861},
																											exprs: []interface{}{
																												&notExpr{
																													pos: position{line: 167, col: 17, offset: 6861},
																													expr: &actionExpr{
																														pos: position{line: 207, col: 14, offset: 8362},
																														run: (*parser).callonFencedBlock135,
																														expr: &litMatcher{
																															pos:        position{line: 207, col: 14, offset: 8362},
																															val:        "verse",
																															ignoreCase: false,
																														},
																													},
																												},
																												&labeledExpr{
																													pos:   position{line: 167, col: 28, offset: 6872},
																													label: "key",
																													expr: &oneOrMoreExpr{
																														pos: position{line: 167, col: 32, offset: 6876},
																														expr: &seqExpr{
																															pos: position{line: 167, col: 33, offset: 6877},
																															exprs: []interface{}{
																																&notExpr{
																																	pos: position{line: 167, col: 33, offset: 6877},
																																	expr: &litMatcher{
																																		pos:        position{line: 167, col: 34, offset: 6878},
																																		val:        "=",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 167, col: 38, offset: 6882},
																																	expr: &litMatcher{
																																		pos:        position{line: 167, col: 39, offset: 6883},
																																		val:        ",",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 167, col: 43, offset: 6887},
																																	expr: &litMatcher{
																																		pos:        position{line: 167, col: 44, offset: 6888},
																																		val:        "]",
																																		ignoreCase: false,
																																	},
																																},
																																&anyMatcher{
																																	line: 167, col: 48, offset: 6892,
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&litMatcher{
																									pos:        position{line: 161, col: 40, offset: 6590},
																									val:        "=",
																									ignoreCase: false,
																								},
																								&labeledExpr{
																									pos:   position{line: 161, col: 44, offset: 6594},
																									label: "value",
																									expr: &actionExpr{
																										pos: position{line: 171, col: 19, offset: 6940},
																										run: (*parser).callonFencedBlock149,
																										expr: &labeledExpr{
																											pos:   position{line: 171, col: 19, offset: 6940},
																											label: "value",
																											expr: &zeroOrMoreExpr{
																												pos: position{line: 171, col: 25, offset: 6946},
																												expr: &seqExpr{
																													pos: position{line: 171, col: 26, offset: 6947},
																													exprs: []interface{}{
																														&notExpr{
																															pos: position{line: 171, col: 26, offset: 6947},
																															expr: &litMatcher{
																																pos:        position{line: 171, col: 27, offset: 6948},
																																val:        "=",
																																ignoreCase: false,
																															},
																														},
																														&notExpr{
																															pos: position{line: 171, col: 31, offset: 6952},
																															expr: &litMatcher{
																																pos:        position{line: 171, col: 32, offset: 6953},
																																val:        ",",
																																ignoreCase: false,
																															},
																														},
																														&notExpr{
																															pos: position{line: 171, col: 36, offset: 6957},
																															expr: &litMatcher{
																																pos:        position{line: 171, col: 37, offset: 6958},
																																val:        "]",
																																ignoreCase: false,
																															},
																														},
																														&anyMatcher{
																															line: 171, col: 41, offset: 6962,
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&zeroOrOneExpr{
																									pos: position{line: 161, col: 67, offset: 6617},
																									expr: &litMatcher{
																										pos:        position{line: 161, col: 67, offset: 6617},
																										val:        ",",
																										ignoreCase: false,
																									},
																								},
																								&zeroOrMoreExpr{
																									pos: position{line: 161, col: 72, offset: 6622},
																									expr: &choiceExpr{
																										pos: position{line: 895, col: 7, offset: 37107},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 895, col: 7, offset: 37107},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 895, col: 13, offset: 37113},
																												run: (*parser).callonFencedBlock165,
																												expr: &litMatcher{
																													pos:        position{line: 895, col: 13, offset: 37113},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																					&actionExpr{
																						pos: position{line: 163, col: 5, offset: 6729},
																						run: (*parser).callonFencedBlock167,
																						expr: &seqExpr{
																							pos: position{line: 163, col: 5, offset: 6729},
																							exprs: []interface{}{
																								&labeledExpr{
																									pos:   position{line: 163, col: 5, offset: 6729},
																									label: "key",
																									expr: &actionExpr{
																										pos: position{line: 167, col: 17, offset: 6861},
																										run: (*parser).callonFencedBlock170,
																										expr: &seqExpr{
																											pos: position{line: 167, col: 17, offset: 6861},
																											exprs: []interface{}{
																												&notExpr{
																													pos: position{line: 167, col: 17, offset: 6861},
																													expr: &actionExpr{
																														pos: position{line: 207, col: 14, offset: 8362},
																														run: (*parser).callonFencedBlock173,
																														expr: &litMatcher{
																															pos:        position{line: 207, col: 14, offset: 8362},
																															val:        "verse",
																															ignoreCase: false,
																														},
																													},
																												},
																												&labeledExpr{
																													pos:   position{line: 167, col: 28, offset: 6872},
																													label: "key",
																													expr: &oneOrMoreExpr{
																														pos: position{line: 167, col: 32, offset: 6876},
																														expr: &seqExpr{
																															pos: position{line: 167, col: 33, offset: 6877},
																															exprs: []interface{}{
																																&notExpr{
																																	pos: position{line: 167, col: 33, offset: 6877},
																																	expr: &litMatcher{
																																		pos:        position{line: 167, col: 34, offset: 6878},
																																		val:        "=",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 167, col: 38, offset: 6882},
																																	expr: &litMatcher{
																																		pos:        position{line: 167, col: 39, offset: 6883},
																																		val:        ",",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 167, col: 43, offset: 6887},
																																	expr: &litMatcher{
																																		pos:        position{line: 167, col: 44, offset: 6888},
																																		val:        "]",
																																		ignoreCase: false,
																																	},
																																},
																																&anyMatcher{
																																	line: 167, col: 48, offset: 6892,
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&zeroOrOneExpr{
																									pos: position{line: 163, col: 24, offset: 6748},
																									expr: &litMatcher{
																										pos:        position{line: 163, col: 24, offset: 6748},
																										val:        ",",
																										ignoreCase: false,
																									},
																								},
																								&zeroOrMoreExpr{
																									pos: position{line: 163, col: 29, offset: 6753},
																									expr: &choiceExpr{
																										pos: position{line: 895, col: 7, offset: 37107},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 895, col: 7, offset: 37107},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 895, col: 13, offset: 37113},
																												run: (*parser).callonFencedBlock190,
																												expr: &litMatcher{
																													pos:        position{line: 895, col: 13, offset: 37113},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 157, col: 59, offset: 6479},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
													},
												},
											},
											&zeroOrMoreExpr{
												pos: position{line: 120, col: 131, offset: 5149},
												expr: &choiceExpr{
													pos: position{line: 895, col: 7, offset: 37107},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 895, col: 7, offset: 37107},
															val:        " ",
															ignoreCase: false,
														},
														&actionExpr{
															pos: position{line: 895, col: 13, offset: 37113},
															run: (*parser).callonFencedBlock196,
															expr: &litMatcher{
																pos:        position{line: 895, col: 13, offset: 37113},
																val:        "\t",
																ignoreCase: false,
															},
														},
													},
												},
											},
											&choiceExpr{
												pos: position{line: 903, col: 8, offset: 37209},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 899, col: 12, offset: 37169},
														val:        "\r\n",
														ignoreCase: false,
													},
													&charClassMatcher{
														pos:        position{line: 899, col: 21, offset: 37178},
														val:        "[\\r\\n]",
														chars:      []rune{'\r', '\n'},
														ignoreCase: false,
														inverted:   false,
													},
													&notExpr{
														pos: position{line: 901, col: 8, offset: 37198},
														expr: &anyMatcher{
															line: 901, col: 9, offset: 37199,
														},
													},
												},
											},
										},
									},
								},
							},
						},
						&litMatcher{
							pos:        position{line: 688, col: 25, offset: 29830},
							val:        "```",
							ignoreCase: false,
						},
						&zeroOrMoreExpr{
							pos: position{line: 690, col: 68, offset: 29904},
							expr: &choiceExpr{
								pos: position{line: 895, col: 7, offset: 37107},
								alternatives: []interface{}{
									&litMatcher{
										pos:        position{line: 895, col: 7, offset: 37107},
										val:        " ",
										ignoreCase: false,
									},
									&actionExpr{
										pos: position{line: 895, col: 13, offset: 37113},
										run: (*parser).callonFencedBlock207,
										expr: &litMatcher{
											pos:        position{line: 895, col: 13, offset: 37113},
											val:        "\t",
											ignoreCase: false,
										},
									},
								},
							},
						},
						&choiceExpr{
							pos: position{line: 899, col: 12, offset: 37169},
							alternatives: []interface{}{
								&litMatcher{
									pos:        position{line: 899, col: 12, offset: 37169},
									val:        "\r\n",
									ignoreCase: false,
								},
								&charClassMatcher{
									pos:        position{line: 899, col: 21, offset: 37178},
									val:        "[\\r\\n]",
									chars:      []rune{'\r', '\n'},
									ignoreCase: false,
									inverted:   false,
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 690, col: 80, offset: 29916},
							label: "content",
							expr: &zeroOrMoreExpr{
								pos: position{line: 690, col: 88, offset: 29924},
								expr: &choiceExpr{
									pos: position{line: 690, col: 89, offset: 29925},
									alternatives: []interface{}{
										&ruleRefExpr{
											pos:  position{line: 690, col: 89, offset: 29925},
											name: "List",
										},
										&ruleRefExpr{
											pos:  position{line: 690, col: 96, offset: 29932},
											name: "BlockParagraph",
										},
										&actionExpr{
											pos: position{line: 864, col: 14, offset: 36495},
											run: (*parser).callonFencedBlock217,
											expr: &seqExpr{
												pos: position{line: 864, col: 14, offset: 36495},
												exprs: []interface{}{
													&notExpr{
														pos: position{line: 864, col: 14, offset: 36495},
														expr: &notExpr{
															pos: position{line: 901, col: 8, offset: 37198},
															expr: &anyMatcher{
																line: 901, col: 9, offset: 37199,
															},
														},
													},
													&zeroOrMoreExpr{
														pos: position{line: 864, col: 19, offset: 36500},
														expr: &choiceExpr{
															pos: position{line: 895, col: 7, offset: 37107},
															alternatives: []interface{}{
																&litMatcher{
																	pos:        position{line: 895, col: 7, offset: 37107},
																	val:        " ",
																	ignoreCase: false,
																},
																&actionExpr{
																	pos: position{line: 895, col: 13, offset: 37113},
																	run: (*parser).callonFencedBlock225,
																	expr: &litMatcher{
																		pos:        position{line: 895, col: 13, offset: 37113},
																		val:        "\t",
																		ignoreCase: false,
																	},
																},
															},
														},
													},
													&choiceExpr{
														pos: position{line: 903, col: 8, offset: 37209},
														alternatives: []interface{}{
															&litMatcher{
																pos:        position{line: 899, col: 12, offset: 37169},
																val:        "\r\n",
																ignoreCase: false,
															},
															&charClassMatcher{
																pos:        position{line: 899, col: 21, offset: 37178},
																val:        "[\\r\\n]",
																chars:      []rune{'\r', '\n'},
																ignoreCase: false,
																inverted:   false,
															},
															&notExpr{
																pos: position{line: 901, col: 8, offset: 37198},
																expr: &anyMatcher{
																	line: 901, col: 9, offset: 37199,
																},
															},
														},
													},
												},
											},
										},
									},
								},
							},
						},
						&choiceExpr{
							pos: position{line: 690, col: 126, offset: 29962},
							alternatives: []interface{}{
								&seqExpr{
									pos: position{line: 690, col: 127, offset: 29963},
									exprs: []interface{}{
										&litMatcher{
											pos:        position{line: 688, col: 25, offset: 29830},
											val:        "```",
											ignoreCase: false,
										},
										&zeroOrMoreExpr{
											pos: position{line: 690, col: 148, offset: 29984},
											expr: &choiceExpr{
												pos: position{line: 895, col: 7, offset: 37107},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 895, col: 7, offset: 37107},
														val:        " ",
														ignoreCase: false,
													},
													&actionExpr{
														pos: position{line: 895, col: 13, offset: 37113},
														run: (*parser).callonFencedBlock238,
														expr: &litMatcher{
															pos:        position{line: 895, col: 13, offset: 37113},
															val:        "\t",
															ignoreCase: false,
														},
													},
												},
											},
										},
										&choiceExpr{
											pos: position{line: 903, col: 8, offset: 37209},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 899, col: 12, offset: 37169},
													val:        "\r\n",
													ignoreCase: false,
												},
												&charClassMatcher{
													pos:        position{line: 899, col: 21, offset: 37178},
													val:        "[\\r\\n]",
													chars:      []rune{'\r', '\n'},
													ignoreCase: false,
													inverted:   false,
												},
												&notExpr{
													pos: position{line: 901, col: 8, offset: 37198},
													expr: &anyMatcher{
														line: 901, col: 9, offset: 37199,
													},
												},
											},
										},
									},
								},
								&notExpr{
									pos: position{line: 901, col: 8, offset: 37198},
									expr: &anyMatcher{
										line: 901, col: 9, offset: 37199,
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "ExampleBlock",
			pos:  position{line: 717, col: 1, offset: 30968},
			expr: &actionExpr{
				pos: position{line: 717, col: 17, offset: 30984},
				run: (*parser).callonExampleBlock1,
				expr: &seqExpr{
					pos: position{line: 717, col: 17, offset: 30984},
					exprs: []interface{}{
						&labeledExpr{
							pos:   position{line: 717, col: 17, offset: 30984},
							label: "attributes",
							expr: &zeroOrMoreExpr{
								pos: position{line: 717, col: 28, offset: 30995},
								expr: &actionExpr{
									pos: position{line: 120, col: 21, offset: 5039},
									run: (*parser).callonExampleBlock5,
									expr: &seqExpr{
										pos: position{line: 120, col: 21, offset: 5039},
										exprs: []interface{}{
											&labeledExpr{
												pos:   position{line: 120, col: 21, offset: 5039},
												label: "attr",
												expr: &choiceExpr{
													pos: position{line: 120, col: 27, offset: 5045},
													alternatives: []interface{}{
														&actionExpr{
															pos: position{line: 129, col: 14, offset: 5496},
															run: (*parser).callonExampleBlock9,
															expr: &labeledExpr{
																pos:   position{line: 129, col: 14, offset: 5496},
																label: "id",
																expr: &actionExpr{
																	pos: position{line: 135, col: 20, offset: 5626},
																	run: (*parser).callonExampleBlock11,
																	expr: &seqExpr{
																		pos: position{line: 135, col: 20, offset: 5626},
																		exprs: []interface{}{
																			&litMatcher{
																				pos:        position{line: 135, col: 20, offset: 5626},
																				val:        "[[",
																				ignoreCase: false,
																			},
																			&labeledExpr{
																				pos:   position{line: 135, col: 25, offset: 5631},
																				label: "id",
																				expr: &actionExpr{
																					pos: position{line: 883, col: 7, offset: 36866},
																					run: (*parser).callonExampleBlock15,
																					expr: &oneOrMoreExpr{
																						pos: position{line: 883, col: 7, offset: 36866},
																						expr: &seqExpr{
																							pos: position{line: 883, col: 8, offset: 36867},
																							exprs: []interface{}{
																								&notExpr{
																									pos: position{line: 883, col: 8, offset: 36867},
																									expr: &choiceExpr{
																										pos: position{line: 899, col: 12, offset: 37169},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 899, col: 12, offset: 37169},
																												val:        "\r\n",
																												ignoreCase: false,
																											},
																											&charClassMatcher{
																												pos:        position{line: 899, col: 21, offset: 37178},
																												val:        "[\\r\\n]",
																												chars:      []rune{'\r', '\n'},
																												ignoreCase: false,
																												inverted:   false,
																											},
																										},
																									},
																								},
																								&notExpr{
																									pos: position{line: 883, col: 17, offset: 36876},
																									expr: &choiceExpr{
																										pos: position{line: 895, col: 7, offset: 37107},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 895, col: 7, offset: 37107},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 895, col: 13, offset: 37113},
																												run: (*parser).callonExampleBlock25,
																												expr: &litMatcher{
																													pos:        position{line: 895, col: 13, offset: 37113},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																								&notExpr{
																									pos: position{line: 883, col: 21, offset: 36880},
																									expr: &litMatcher{
																										pos:        position{line: 883, col: 22, offset: 36881},
																										val:        "[",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 883, col: 26, offset: 36885},
																									expr: &litMatcher{
																										pos:        position{line: 883, col: 27, offset: 36886},
																										val:        "]",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 883, col: 31, offset: 36890},
																									expr: &litMatcher{
																										pos:        position{line: 883, col: 32, offset: 36891},
																										val:        "<<",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 883, col: 37, offset: 36896},
																									expr: &litMatcher{
																										pos:        position{line: 883, col: 38, offset: 36897},
																										val:        ">>",
																										ignoreCase: false,
																									},
																								},
																								&anyMatcher{
																									line: 883, col: 42, offset: 36901,
																								},
																							},
																						},
																					},
																				},
																			},
																			&litMatcher{
																				pos:        position{line: 135, col: 33, offset: 5639},
																				val:        "]]",
																				ignoreCase: false,
																			},
																		},
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 131, col: 5, offset: 5542},
															run: (*parser).callonExampleBlock37,
															expr: &seqExpr{
																pos: position{line: 131, col: 5, offset: 5542},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 131, col: 5, offset: 5542},
																		val:        "[#",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 131, col: 10, offset: 5547},
																		label: "id",
																		expr: &actionExpr{
																			pos: position{line: 883, col: 7, offset: 36866},
																			run: (*parser).callonExampleBlock41,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 883, col: 7, offset: 36866},
																				expr: &seqExpr{
																					pos: position{line: 883, col: 8, offset: 36867},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 883, col: 8, offset: 36867},
																							expr: &choiceExpr{
																								pos: position{line: 899, col: 12, offset: 37169},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 899, col: 12, offset: 37169},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 899, col: 21, offset: 37178},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 883, col: 17, offset: 36876},
																							expr: &choiceExpr{
																								pos: position{line: 895, col: 7, offset: 37107},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 895, col: 7, offset: 37107},
																										val:        " ",
																										ignoreCase: false,
																									},
																									&actionExpr{
																										pos: position{line: 895, col: 13, offset: 37113},
																										run: (*parser).callonExampleBlock51,
																										expr: &litMatcher{
																											pos:        position{line: 895, col: 13, offset: 37113},
																											val:        "\t",
																											ignoreCase: false,
																										},
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 883, col: 21, offset: 36880},
																							expr: &litMatcher{
																								pos:        position{line: 883, col: 22, offset: 36881},
																								val:        "[",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 883, col: 26, offset: 36885},
																							expr: &litMatcher{
																								pos:        position{line: 883, col: 27, offset: 36886},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 883, col: 31, offset: 36890},
																							expr: &litMatcher{
																								pos:        position{line: 883, col: 32, offset: 36891},
																								val:        "<<",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 883, col: 37, offset: 36896},
																							expr: &litMatcher{
																								pos:        position{line: 883, col: 38, offset: 36897},
																								val:        ">>",
																								ignoreCase: false,
																							},
																						},
																						&anyMatcher{
																							line: 883, col: 42, offset: 36901,
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 131, col: 18, offset: 5555},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 141, col: 17, offset: 5848},
															run: (*parser).callonExampleBlock63,
															expr: &seqExpr{
																pos: position{line: 141, col: 17, offset: 5848},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 141, col: 17, offset: 5848},
																		val:        ".",
																		ignoreCase: false,
																	},
																	&notExpr{
																		pos: position{line: 141, col: 21, offset: 5852},
																		expr: &litMatcher{
																			pos:        position{line: 141, col: 22, offset: 5853},
																			val:        ".",
																			ignoreCase: false,
																		},
																	},
																	&notExpr{
																		pos: position{line: 141, col: 26, offset: 5857},
																		expr: &choiceExpr{
																			pos: position{line: 895, col: 7, offset: 37107},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 895, col: 7, offset: 37107},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 895, col: 13, offset: 37113},
																					run: (*parser).callonExampleBlock71,
																					expr: &litMatcher{
																						pos:        position{line: 895, col: 13, offset: 37113},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 141, col: 30, offset: 5861},
																		label: "title",
																		expr: &oneOrMoreExpr{
																			pos: position{line: 141, col: 36, offset: 5867},
																			expr: &seqExpr{
																				pos: position{line: 141, col: 37, offset: 5868},
																				exprs: []interface{}{
																					&notExpr{
																						pos: position{line: 141, col: 37, offset: 5868},
																						expr: &choiceExpr{
																							pos: position{line: 899, col: 12, offset: 37169},
																							alternatives: []interface{}{
																								&litMatcher{
																									pos:        position{line: 899, col: 12, offset: 37169},
																									val:        "\r\n",
																									ignoreCase: false,
																								},
																								&charClassMatcher{
																									pos:        position{line: 899, col: 21, offset: 37178},
																									val:        "[\\r\\n]",
																									chars:      []rune{'\r', '\n'},
																									ignoreCase: false,
																									inverted:   false,
																								},
																							},
																						},
																					},
																					&anyMatcher{
																						line: 141, col: 46, offset: 5877,
																					},
																				},
																			},
																		},
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 147, col: 16, offset: 6051},
															run: (*parser).callonExampleBlock81,
															expr: &seqExpr{
																pos: position{line: 147, col: 16, offset: 6051},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 147, col: 16, offset: 6051},
																		val:        "[.",
																		ignoreCase: false,
																	},
																	&notExpr{
																		pos: position{line: 147, col: 21, offset: 6056},
																		expr: &choiceExpr{
																			pos: position{line: 895, col: 7, offset: 37107},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 895, col: 7, offset: 37107},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 895, col: 13, offset: 37113},
																					run: (*parser).callonExampleBlock87,
																					expr: &litMatcher{
																						pos:        position{line: 895, col: 13, offset: 37113},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 147, col: 25, offset: 6060},
																		label: "role",
																		expr: &oneOrMoreExpr{
																			pos: position{line: 147, col: 30, offset: 6065},
																			expr: &seqExpr{
																				pos: position{line: 147, col: 31, offset: 6066},
																				exprs: []interface{}{
																					&notExpr{
																						pos: position{line: 147, col: 31, offset: 6066},
																						expr: &choiceExpr{
																							pos: position{line: 899, col: 12, offset: 37169},
																							alternatives: []interface{}{
																								&litMatcher{
																									pos:        position{line: 899, col: 12, offset: 37169},
																									val:        "\r\n",
																									ignoreCase: false,
																								},
																								&charClassMatcher{
																									pos:        position{line: 899, col: 21, offset: 37178},
																									val:        "[\\r\\n]",
																									chars:      []rune{'\r', '\n'},
																									ignoreCase: false,
																									inverted:   false,
																								},
																							},
																						},
																					},
																					&notExpr{
																						pos: position{line: 147, col: 40, offset: 6075},
																						expr: &litMatcher{
																							pos:        position{line: 147, col: 41, offset: 6076},
																							val:        "]",
																							ignoreCase: false,
																						},
																					},
																					&anyMatcher{
																						line: 147, col: 45, offset: 6080,
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 147, col: 49, offset: 6084},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 152, col: 30, offset: 6255},
															run: (*parser).callonExampleBlock100,
															expr: &seqExpr{
																pos: position{line: 152, col: 30, offset: 6255},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 152, col: 30, offset: 6255},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 152, col: 34, offset: 6259},
																		label: "k",
																		expr: &choiceExpr{
																			pos: position{line: 470, col: 19, offset: 18925},
																			alternatives: []interface{}{
																				&actionExpr{
																					pos: position{line: 470, col: 19, offset: 18925},
																					run: (*parser).callonExampleBlock105,
																					expr: &litMatcher{
																						pos:        position{line: 470, col: 19, offset: 18925},
																						val:        "TIP",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 472, col: 5, offset: 18963},
																					run: (*parser).callonExampleBlock107,
																					expr: &litMatcher{
																						pos:        position{line: 472, col: 5, offset: 18963},
																						val:        "NOTE",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 474, col: 5, offset: 19003},
																					run: (*parser).callonExampleBlock109,
																					expr: &litMatcher{
																						pos:        position{line: 474, col: 5, offset: 19003},
																						val:        "IMPORTANT",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 476, col: 5, offset: 19053},
																					run: (*parser).callonExampleBlock111,
																					expr: &litMatcher{
																						pos:        position{line: 476, col: 5, offset: 19053},
																						val:        "WARNING",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 478, col: 5, offset: 19099},
																					run: (*parser).callonExampleBlock113,
																					expr: &litMatcher{
																						pos:        position{line: 478, col: 5, offset: 19099},
																						val:        "CAUTION",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 152, col: 53, offset: 6278},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 175, col: 21, offset: 7013},
															run: (*parser).callonExampleBlock116,
															expr: &litMatcher{
																pos:        position{line: 175, col: 21, offset: 7013},
																val:        "[horizontal]",
																ignoreCase: false,
															},
														},
														&actionExpr{
															pos: position{line: 157, col: 19, offset: 6439},
															run: (*parser).callonExampleBlock118,
															expr: &seqExpr{
																pos: position{line: 157, col: 19, offset: 6439},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 157, col: 19, offset: 6439},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&notExpr{
																		pos: position{line: 157, col: 23, offset: 6443},
																		expr: &choiceExpr{
																			pos: position{line: 895, col: 7, offset: 37107},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 895, col: 7, offset: 37107},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 895, col: 13, offset: 37113},
																					run: (*parser).callonExampleBlock124,
																					expr: &litMatcher{
																						pos:        position{line: 895, col: 13, offset: 37113},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 157, col: 27, offset: 6447},
																		label: "attributes",
																		expr: &zeroOrMoreExpr{
																			pos: position{line: 157, col: 38, offset: 6458},
																			expr: &choiceExpr{
																				pos: position{line: 161, col: 21, offset: 6571},
																				alternatives: []interface{}{
																					&actionExpr{
																						pos: position{line: 161, col: 21, offset: 6571},
																						run: (*parser).callonExampleBlock129,
																						expr: &seqExpr{
																							pos: position{line: 161, col: 21, offset: 6571},
																							exprs: []interface{}{
																								&labeledExpr{
																									pos:   position{line: 161, col: 21, offset: 6571},
																									label: "key",
																									expr: &actionExpr{
																										pos: position{line: 167, col: 17, offset: 6861},
																										run: (*parser).callonExampleBlock132,
																										expr: &seqExpr{
																											pos: position{line: 167, col: 17, offset: 6861},
																											exprs: []interface{}{
																												&notExpr{
																													pos: position{line: 167, col: 17, offset: 6861},
																													expr: &actionExpr{
																														pos: position{line: 207, col: 14, offset: 8362},
																														run: (*parser).callonExampleBlock135,
																														expr: &litMatcher{
																															pos:        position{line: 207, col: 14, offset: 8362},
																															val:        "verse",
																															ignoreCase: false,
																														},
																													},
																												},
																												&labeledExpr{
																													pos:   position{line: 167, col: 28, offset: 6872},
																													label: "key",
																													expr: &oneOrMoreExpr{
																														pos: position{line: 167, col: 32, offset: 6876},
																														expr: &seqExpr{
																															pos: position{line: 167, col: 33, offset: 6877},
																															exprs: []interface{}{
																																&notExpr{
																																	pos: position{line: 167, col: 33, offset: 6877},
																																	expr: &litMatcher{
																																		pos:        position{line: 167, col: 34, offset: 6878},
																																		val:        "=",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 167, col: 38, offset: 6882},
																																	expr: &litMatcher{
																																		pos:        position{line: 167, col: 39, offset: 6883},
																																		val:        ",",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 167, col: 43, offset: 6887},
																																	expr: &litMatcher{
																																		pos:        position{line: 167, col: 44, offset: 6888},
																																		val:        "]",
																																		ignoreCase: false,
																																	},
																																},
																																&anyMatcher{
																																	line: 167, col: 48, offset: 6892,
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&litMatcher{
																									pos:        position{line: 161, col: 40, offset: 6590},
																									val:        "=",
																									ignoreCase: false,
																								},
																								&labeledExpr{
																									pos:   position{line: 161, col: 44, offset: 6594},
																									label: "value",
																									expr: &actionExpr{
																										pos: position{line: 171, col: 19, offset: 6940},
																										run: (*parser).callonExampleBlock149,
																										expr: &labeledExpr{
																											pos:   position{line: 171, col: 19, offset: 6940},
																											label: "value",
																											expr: &zeroOrMoreExpr{
																												pos: position{line: 171, col: 25, offset: 6946},
																												expr: &seqExpr{
																													pos: position{line: 171, col: 26, offset: 6947},
																													exprs: []interface{}{
																														&notExpr{
																															pos: position{line: 171, col: 26, offset: 6947},
																															expr: &litMatcher{
																																pos:        position{line: 171, col: 27, offset: 6948},
																																val:        "=",
																																ignoreCase: false,
																															},
																														},
																														&notExpr{
																															pos: position{line: 171, col: 31, offset: 6952},
																															expr: &litMatcher{
																																pos:        position{line: 171, col: 32, offset: 6953},
																																val:        ",",
																																ignoreCase: false,
																															},
																														},
																														&notExpr{
																															pos: position{line: 171, col: 36, offset: 6957},
																															expr: &litMatcher{
																																pos:        position{line: 171, col: 37, offset: 6958},
																																val:        "]",
																																ignoreCase: false,
																															},
																														},
																														&anyMatcher{
																															line: 171, col: 41, offset: 6962,
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&zeroOrOneExpr{
																									pos: position{line: 161, col: 67, offset: 6617},
																									expr: &litMatcher{
																										pos:        position{line: 161, col: 67, offset: 6617},
																										val:        ",",
																										ignoreCase: false,
																									},
																								},
																								&zeroOrMoreExpr{
																									pos: position{line: 161, col: 72, offset: 6622},
																									expr: &choiceExpr{
																										pos: position{line: 895, col: 7, offset: 37107},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 895, col: 7, offset: 37107},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 895, col: 13, offset: 37113},
																												run: (*parser).callonExampleBlock165,
																												expr: &litMatcher{
																													pos:        position{line: 895, col: 13, offset: 37113},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																					&actionExpr{
																						pos: position{line: 163, col: 5, offset: 6729},
																						run: (*parser).callonExampleBlock167,
																						expr: &seqExpr{
																							pos: position{line: 163, col: 5, offset: 6729},
																							exprs: []interface{}{
																								&labeledExpr{
																									pos:   position{line: 163, col: 5, offset: 6729},
																									label: "key",
																									expr: &actionExpr{
																										pos: position{line: 167, col: 17, offset: 6861},
																										run: (*parser).callonExampleBlock170,
																										expr: &seqExpr{
																											pos: position{line: 167, col: 17, offset: 6861},
																											exprs: []interface{}{
																												&notExpr{
																													pos: position{line: 167, col: 17, offset: 6861},
																													expr: &actionExpr{
																														pos: position{line: 207, col: 14, offset: 8362},
																														run: (*parser).callonExampleBlock173,
																														expr: &litMatcher{
																															pos:        position{line: 207, col: 14, offset: 8362},
																															val:        "verse",
																															ignoreCase: false,
																														},
																													},
																												},
																												&labeledExpr{
																													pos:   position{line: 167, col: 28, offset: 6872},
																													label: "key",
																													expr: &oneOrMoreExpr{
																														pos: position{line: 167, col: 32, offset: 6876},
																														expr: &seqExpr{
																															pos: position{line: 167, col: 33, offset: 6877},
																															exprs: []interface{}{
																																&notExpr{
																																	pos: position{line: 167, col: 33, offset: 6877},
																																	expr: &litMatcher{
																																		pos:        position{line: 167, col: 34, offset: 6878},
																																		val:        "=",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 167, col: 38, offset: 6882},
																																	expr: &litMatcher{
																																		pos:        position{line: 167, col: 39, offset: 6883},
																																		val:        ",",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 167, col: 43, offset: 6887},
																																	expr: &litMatcher{
																																		pos:        position{line: 167, col: 44, offset: 6888},
																																		val:        "]",
																																		ignoreCase: false,
																																	},
																																},
																																&anyMatcher{
																																	line: 167, col: 48, offset: 6892,
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&zeroOrOneExpr{
																									pos: position{line: 163, col: 24, offset: 6748},
																									expr: &litMatcher{
																										pos:        position{line: 163, col: 24, offset: 6748},
																										val:        ",",
																										ignoreCase: false,
																									},
																								},
																								&zeroOrMoreExpr{
																									pos: position{line: 163, col: 29, offset: 6753},
																									expr: &choiceExpr{
																										pos: position{line: 895, col: 7, offset: 37107},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 895, col: 7, offset: 37107},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 895, col: 13, offset: 37113},
																												run: (*parser).callonExampleBlock190,
																												expr: &litMatcher{
																													pos:        position{line: 895, col: 13, offset: 37113},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 157, col: 59, offset: 6479},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
													},
												},
											},
											&zeroOrMoreExpr{
												pos: position{line: 120, col: 131, offset: 5149},
												expr: &choiceExpr{
													pos: position{line: 895, col: 7, offset: 37107},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 895, col: 7, offset: 37107},
															val:        " ",
															ignoreCase: false,
														},
														&actionExpr{
															pos: position{line: 895, col: 13, offset: 37113},
															run: (*parser).callonExampleBlock196,
															expr: &litMatcher{
																pos:        position{line: 895, col: 13, offset: 37113},
																val:        "\t",
																ignoreCase: false,
															},
														},
													},
												},
											},
											&choiceExpr{
												pos: position{line: 903, col: 8, offset: 37209},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 899, col: 12, offset: 37169},
														val:        "\r\n",
														ignoreCase: false,
													},
													&charClassMatcher{
														pos:        position{line: 899, col: 21, offset: 37178},
														val:        "[\\r\\n]",
														chars:      []rune{'\r', '\n'},
														ignoreCase: false,
														inverted:   false,
													},
													&notExpr{
														pos: position{line: 901, col: 8, offset: 37198},
														expr: &anyMatcher{
															line: 901, col: 9, offset: 37199,
														},
													},
												},
											},
										},
									},
								},
							},
						},
						&litMatcher{
							pos:        position{line: 715, col: 26, offset: 30960},
							val:        "====",
							ignoreCase: false,
						},
						&zeroOrMoreExpr{
							pos: position{line: 717, col: 70, offset: 31037},
							expr: &choiceExpr{
								pos: position{line: 895, col: 7, offset: 37107},
								alternatives: []interface{}{
									&litMatcher{
										pos:        position{line: 895, col: 7, offset: 37107},
										val:        " ",
										ignoreCase: false,
									},
									&actionExpr{
										pos: position{line: 895, col: 13, offset: 37113},
										run: (*parser).callonExampleBlock207,
										expr: &litMatcher{
											pos:        position{line: 895, col: 13, offset: 37113},
											val:        "\t",
											ignoreCase: false,
										},
									},
								},
							},
						},
						&choiceExpr{
							pos: position{line: 899, col: 12, offset: 37169},
							alternatives: []interface{}{
								&litMatcher{
									pos:        position{line: 899, col: 12, offset: 37169},
									val:        "\r\n",
									ignoreCase: false,
								},
								&charClassMatcher{
									pos:        position{line: 899, col: 21, offset: 37178},
									val:        "[\\r\\n]",
									chars:      []rune{'\r', '\n'},
									ignoreCase: false,
									inverted:   false,
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 717, col: 82, offset: 31049},
							label: "content",
							expr: &zeroOrMoreExpr{
								pos: position{line: 717, col: 90, offset: 31057},
								expr: &choiceExpr{
									pos: position{line: 717, col: 91, offset: 31058},
									alternatives: []interface{}{
										&ruleRefExpr{
											pos:  position{line: 717, col: 91, offset: 31058},
											name: "List",
										},
										&ruleRefExpr{
											pos:  position{line: 717, col: 98, offset: 31065},
											name: "BlockParagraph",
										},
										&actionExpr{
											pos: position{line: 864, col: 14, offset: 36495},
											run: (*parser).callonExampleBlock217,
											expr: &seqExpr{
												pos: position{line: 864, col: 14, offset: 36495},
												exprs: []interface{}{
													&notExpr{
														pos: position{line: 864, col: 14, offset: 36495},
														expr: &notExpr{
															pos: position{line: 901, col: 8, offset: 37198},
															expr: &anyMatcher{
																line: 901, col: 9, offset: 37199,
															},
														},
													},
													&zeroOrMoreExpr{
														pos: position{line: 864, col: 19, offset: 36500},
														expr: &choiceExpr{
															pos: position{line: 895, col: 7, offset: 37107},
															alternatives: []interface{}{
																&litMatcher{
																	pos:        position{line: 895, col: 7, offset: 37107},
																	val:        " ",
																	ignoreCase: false,
																},
																&actionExpr{
																	pos: position{line: 895, col: 13, offset: 37113},
																	run: (*parser).callonExampleBlock225,
																	expr: &litMatcher{
																		pos:        position{line: 895, col: 13, offset: 37113},
																		val:        "\t",
																		ignoreCase: false,
																	},
																},
															},
														},
													},
													&choiceExpr{
														pos: position{line: 903, col: 8, offset: 37209},
														alternatives: []interface{}{
															&litMatcher{
																pos:        position{line: 899, col: 12, offset: 37169},
																val:        "\r\n",
																ignoreCase: false,
															},
															&charClassMatcher{
																pos:        position{line: 899, col: 21, offset: 37178},
																val:        "[\\r\\n]",
																chars:      []rune{'\r', '\n'},
																ignoreCase: false,
																inverted:   false,
															},
															&notExpr{
																pos: position{line: 901, col: 8, offset: 37198},
																expr: &anyMatcher{
																	line: 901, col: 9, offset: 37199,
																},
															},
														},
													},
												},
											},
										},
									},
								},
							},
						},
						&choiceExpr{
							pos: position{line: 717, col: 129, offset: 31096},
							alternatives: []interface{}{
								&seqExpr{
									pos: position{line: 717, col: 130, offset: 31097},
									exprs: []interface{}{
										&litMatcher{
											pos:        position{line: 715, col: 26, offset: 30960},
											val:        "====",
											ignoreCase: false,
										},
										&zeroOrMoreExpr{
											pos: position{line: 717, col: 152, offset: 31119},
											expr: &choiceExpr{
												pos: position{line: 895, col: 7, offset: 37107},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 895, col: 7, offset: 37107},
														val:        " ",
														ignoreCase: false,
													},
													&actionExpr{
														pos: position{line: 895, col: 13, offset: 37113},
														run: (*parser).callonExampleBlock238,
														expr: &litMatcher{
															pos:        position{line: 895, col: 13, offset: 37113},
															val:        "\t",
															ignoreCase: false,
														},
													},
												},
											},
										},
										&choiceExpr{
											pos: position{line: 903, col: 8, offset: 37209},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 899, col: 12, offset: 37169},
													val:        "\r\n",
													ignoreCase: false,
												},
												&charClassMatcher{
													pos:        position{line: 899, col: 21, offset: 37178},
													val:        "[\\r\\n]",
													chars:      []rune{'\r', '\n'},
													ignoreCase: false,
													inverted:   false,
												},
												&notExpr{
													pos: position{line: 901, col: 8, offset: 37198},
													expr: &anyMatcher{
														line: 901, col: 9, offset: 37199,
													},
												},
											},
										},
									},
								},
								&notExpr{
									pos: position{line: 901, col: 8, offset: 37198},
									expr: &anyMatcher{
										line: 901, col: 9, offset: 37199,
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "BlockParagraph",
			pos:  position{line: 723, col: 1, offset: 31274},
			expr: &actionExpr{
				pos: position{line: 723, col: 20, offset: 31293},
				run: (*parser).callonBlockParagraph1,
				expr: &labeledExpr{
					pos:   position{line: 723, col: 20, offset: 31293},
					label: "lines",
					expr: &oneOrMoreExpr{
						pos: position{line: 723, col: 26, offset: 31299},
						expr: &ruleRefExpr{
							pos:  position{line: 723, col: 27, offset: 31300},
							name: "BlockParagraphLine",
						},
					},
				},
			},
		},
		{
			name: "BlockParagraphLine",
			pos:  position{line: 727, col: 1, offset: 31385},
			expr: &actionExpr{
				pos: position{line: 727, col: 23, offset: 31407},
				run: (*parser).callonBlockParagraphLine1,
				expr: &seqExpr{
					pos: position{line: 727, col: 23, offset: 31407},
					exprs: []interface{}{
						&notExpr{
							pos: position{line: 727, col: 23, offset: 31407},
							expr: &actionExpr{
								pos: position{line: 381, col: 26, offset: 14670},
								run: (*parser).callonBlockParagraphLine4,
								expr: &seqExpr{
									pos: position{line: 381, col: 26, offset: 14670},
									exprs: []interface{}{
										&zeroOrMoreExpr{
											pos: position{line: 381, col: 26, offset: 14670},
											expr: &choiceExpr{
												pos: position{line: 895, col: 7, offset: 37107},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 895, col: 7, offset: 37107},
														val:        " ",
														ignoreCase: false,
													},
													&actionExpr{
														pos: position{line: 895, col: 13, offset: 37113},
														run: (*parser).callonBlockParagraphLine9,
														expr: &litMatcher{
															pos:        position{line: 895, col: 13, offset: 37113},
															val:        "\t",
															ignoreCase: false,
														},
													},
												},
											},
										},
										&labeledExpr{
											pos:   position{line: 381, col: 30, offset: 14674},
											label: "prefix",
											expr: &choiceExpr{
												pos: position{line: 383, col: 5, offset: 14729},
												alternatives: []interface{}{
													&actionExpr{
														pos: position{line: 383, col: 5, offset: 14729},
														run: (*parser).callonBlockParagraphLine13,
														expr: &litMatcher{
															pos:        position{line: 383, col: 5, offset: 14729},
															val:        ".....",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 385, col: 9, offset: 14842},
														run: (*parser).callonBlockParagraphLine15,
														expr: &litMatcher{
															pos:        position{line: 385, col: 9, offset: 14842},
															val:        "....",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 387, col: 9, offset: 14953},
														run: (*parser).callonBlockParagraphLine17,
														expr: &litMatcher{
															pos:        position{line: 387, col: 9, offset: 14953},
															val:        "...",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 389, col: 9, offset: 15062},
														run: (*parser).callonBlockParagraphLine19,
														expr: &litMatcher{
															pos:        position{line: 389, col: 9, offset: 15062},
															val:        "..",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 391, col: 9, offset: 15169},
														run: (*parser).callonBlockParagraphLine21,
														expr: &litMatcher{
															pos:        position{line: 391, col: 9, offset: 15169},
															val:        ".",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 394, col: 9, offset: 15296},
														run: (*parser).callonBlockParagraphLine23,
														expr: &seqExpr{
															pos: position{line: 394, col: 9, offset: 15296},
															exprs: []interface{}{
																&oneOrMoreExpr{
																	pos: position{line: 394, col: 9, offset: 15296},
																	expr: &charClassMatcher{
																		pos:        position{line: 394, col: 10, offset: 15297},
																		val:        "[0-9]",
																		ranges:     []rune{'0', '9'},
																		ignoreCase: false,
																		inverted:   false,
																	},
																},
																&litMatcher{
																	pos:        position{line: 394, col: 18, offset: 15305},
																	val:        ".",
																	ignoreCase: false,
																},
															},
														},
													},
													&actionExpr{
														pos: position{line: 396, col: 9, offset: 15408},
														run: (*parser).callonBlockParagraphLine28,
														expr: &seqExpr{
															pos: position{line: 396, col: 9, offset: 15408},
															exprs: []interface{}{
																&oneOrMoreExpr{
																	pos: position{line: 396, col: 9, offset: 15408},
																	expr: &charClassMatcher{
																		pos:        position{line: 396, col: 10, offset: 15409},
																		val:        "[a-z]",
																		ranges:     []rune{'a', 'z'},
																		ignoreCase: false,
																		inverted:   false,
																	},
																},
																&litMatcher{
																	pos:        position{line: 396, col: 18, offset: 15417},
																	val:        ".",
																	ignoreCase: false,
																},
															},
														},
													},
													&actionExpr{
														pos: position{line: 398, col: 9, offset: 15523},
														run: (*parser).callonBlockParagraphLine33,
														expr: &seqExpr{
															pos: position{line: 398, col: 9, offset: 15523},
															exprs: []interface{}{
																&oneOrMoreExpr{
																	pos: position{line: 398, col: 9, offset: 15523},
																	expr: &charClassMatcher{
																		pos:        position{line: 398, col: 10, offset: 15524},
																		val:        "[A-Z]",
																		ranges:     []rune{'A', 'Z'},
																		ignoreCase: false,
																		inverted:   false,
																	},
																},
																&litMatcher{
																	pos:        position{line: 398, col: 18, offset: 15532},
																	val:        ".",
																	ignoreCase: false,
																},
															},
														},
													},
													&actionExpr{
														pos: position{line: 400, col: 9, offset: 15638},
														run: (*parser).callonBlockParagraphLine38,
														expr: &seqExpr{
															pos: position{line: 400, col: 9, offset: 15638},
															exprs: []interface{}{
																&oneOrMoreExpr{
																	pos: position{line: 400, col: 9, offset: 15638},
																	expr: &charClassMatcher{
																		pos:        position{line: 400, col: 10, offset: 15639},
																		val:        "[a-z]",
																		ranges:     []rune{'a', 'z'},
																		ignoreCase: false,
																		inverted:   false,
																	},
																},
																&litMatcher{
																	pos:        position{line: 400, col: 18, offset: 15647},
																	val:        ")",
																	ignoreCase: false,
																},
															},
														},
													},
													&actionExpr{
														pos: position{line: 402, col: 9, offset: 15753},
														run: (*parser).callonBlockParagraphLine43,
														expr: &seqExpr{
															pos: position{line: 402, col: 9, offset: 15753},
															exprs: []interface{}{
																&oneOrMoreExpr{
																	pos: position{line: 402, col: 9, offset: 15753},
																	expr: &charClassMatcher{
																		pos:        position{line: 402, col: 10, offset: 15754},
																		val:        "[A-Z]",
																		ranges:     []rune{'A', 'Z'},
																		ignoreCase: false,
																		inverted:   false,
																	},
																},
																&litMatcher{
																	pos:        position{line: 402, col: 18, offset: 15762},
																	val:        ")",
																	ignoreCase: false,
																},
															},
														},
													},
												},
											},
										},
										&oneOrMoreExpr{
											pos: position{line: 404, col: 8, offset: 15867},
											expr: &choiceExpr{
												pos: position{line: 895, col: 7, offset: 37107},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 895, col: 7, offset: 37107},
														val:        " ",
														ignoreCase: false,
													},
													&actionExpr{
														pos: position{line: 895, col: 13, offset: 37113},
														run: (*parser).callonBlockParagraphLine51,
														expr: &litMatcher{
															pos:        position{line: 895, col: 13, offset: 37113},
															val:        "\t",
															ignoreCase: false,
														},
													},
												},
											},
										},
									},
								},
							},
						},
						&notExpr{
							pos: position{line: 728, col: 9, offset: 31441},
							expr: &actionExpr{
								pos: position{line: 420, col: 5, offset: 16525},
								run: (*parser).callonBlockParagraphLine54,
								expr: &seqExpr{
									pos: position{line: 420, col: 5, offset: 16525},
									exprs: []interface{}{
										&zeroOrMoreExpr{
											pos: position{line: 420, col: 5, offset: 16525},
											expr: &choiceExpr{
												pos: position{line: 895, col: 7, offset: 37107},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 895, col: 7, offset: 37107},
														val:        " ",
														ignoreCase: false,
													},
													&actionExpr{
														pos: position{line: 895, col: 13, offset: 37113},
														run: (*parser).callonBlockParagraphLine59,
														expr: &litMatcher{
															pos:        position{line: 895, col: 13, offset: 37113},
															val:        "\t",
															ignoreCase: false,
														},
													},
												},
											},
										},
										&labeledExpr{
											pos:   position{line: 420, col: 9, offset: 16529},
											label: "prefix",
											expr: &choiceExpr{
												pos: position{line: 421, col: 9, offset: 16546},
												alternatives: []interface{}{
													&actionExpr{
														pos: position{line: 421, col: 9, offset: 16546},
														run: (*parser).callonBlockParagraphLine63,
														expr: &litMatcher{
															pos:        position{line: 421, col: 9, offset: 16546},
															val:        "*****",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 424, col: 11, offset: 16715},
														run: (*parser).callonBlockParagraphLine65,
														expr: &litMatcher{
															pos:        position{line: 424, col: 11, offset: 16715},
															val:        "****",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 427, col: 11, offset: 16884},
														run: (*parser).callonBlockParagraphLine67,
														expr: &litMatcher{
															pos:        position{line: 427, col: 11, offset: 16884},
															val:        "***",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 430, col: 11, offset: 17053},
														run: (*parser).callonBlockParagraphLine69,
														expr: &litMatcher{
															pos:        position{line: 430, col: 11, offset: 17053},
															val:        "**",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 433, col: 11, offset: 17219},
														run: (*parser).callonBlockParagraphLine71,
														expr: &litMatcher{
															pos:        position{line: 433, col: 11, offset: 17219},
															val:        "*",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 436, col: 11, offset: 17383},
														run: (*parser).callonBlockParagraphLine73,
														expr: &litMatcher{
															pos:        position{line: 436, col: 11, offset: 17383},
															val:        "-",
															ignoreCase: false,
														},
													},
												},
											},
										},
										&oneOrMoreExpr{
											pos: position{line: 438, col: 12, offset: 17530},
											expr: &choiceExpr{
												pos: position{line: 895, col: 7, offset: 37107},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 895, col: 7, offset: 37107},
														val:        " ",
														ignoreCase: false,
													},
													&actionExpr{
														pos: position{line: 895, col: 13, offset: 37113},
														run: (*parser).callonBlockParagraphLine78,
														expr: &litMatcher{
															pos:        position{line: 895, col: 13, offset: 37113},
															val:        "\t",
															ignoreCase: false,
														},
													},
												},
											},
										},
									},
								},
							},
						},
						&notExpr{
							pos: position{line: 729, col: 9, offset: 31477},
							expr: &seqExpr{
								pos: position{line: 729, col: 11, offset: 31479},
								exprs: []interface{}{
									&actionExpr{
										pos: position{line: 456, col: 24, offset: 18380},
										run: (*parser).callonBlockParagraphLine82,
										expr: &labeledExpr{
											pos:   position{line: 456, col: 24, offset: 18380},
											label: "term",
											expr: &zeroOrMoreExpr{
												pos: position{line: 456, col: 29, offset: 18385},
												expr: &seqExpr{
													pos: position{line: 456, col: 30, offset: 18386},
													exprs: []interface{}{
														&notExpr{
															pos: position{line: 456, col: 30, offset: 18386},
															expr: &choiceExpr{
																pos: position{line: 899, col: 12, offset: 37169},
																alternatives: []interface{}{
																	&litMatcher{
																		pos:        position{line: 899, col: 12, offset: 37169},
																		val:        "\r\n",
																		ignoreCase: false,
																	},
																	&charClassMatcher{
																		pos:        position{line: 899, col: 21, offset: 37178},
																		val:        "[\\r\\n]",
																		chars:      []rune{'\r', '\n'},
																		ignoreCase: false,
																		inverted:   false,
																	},
																},
															},
														},
														&notExpr{
															pos: position{line: 456, col: 39, offset: 18395},
															expr: &litMatcher{
																pos:        position{line: 456, col: 40, offset: 18396},
																val:        "::",
																ignoreCase: false,
															},
														},
														&anyMatcher{
															line: 456, col: 45, offset: 18401,
														},
													},
												},
											},
										},
									},
									&litMatcher{
										pos:        position{line: 461, col: 30, offset: 18521},
										val:        "::",
										ignoreCase: false,
									},
									&oneOrMoreExpr{
										pos: position{line: 461, col: 35, offset: 18526},
										expr: &choiceExpr{
											pos: position{line: 461, col: 36, offset: 18527},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 895, col: 7, offset: 37107},
													val:        " ",
													ignoreCase: false,
												},
												&actionExpr{
													pos: position{line: 895, col: 13, offset: 37113},
													run: (*parser).callonBlockParagraphLine97,
													expr: &litMatcher{
														pos:        position{line: 895, col: 13, offset: 37113},
														val:        "\t",
														ignoreCase: false,
													},
												},
												&litMatcher{
													pos:        position{line: 899, col: 12, offset: 37169},
													val:        "\r\n",
													ignoreCase: false,
												},
												&charClassMatcher{
													pos:        position{line: 899, col: 21, offset: 37178},
													val:        "[\\r\\n]",
													chars:      []rune{'\r', '\n'},
													ignoreCase: false,
													inverted:   false,
												},
											},
										},
									},
								},
							},
						},
						&notExpr{
							pos: position{line: 730, col: 9, offset: 31534},
							expr: &actionExpr{
								pos: position{line: 366, col: 25, offset: 14116},
								run: (*parser).callonBlockParagraphLine102,
								expr: &seqExpr{
									pos: position{line: 366, col: 25, offset: 14116},
									exprs: []interface{}{
										&litMatcher{
											pos:        position{line: 366, col: 25, offset: 14116},
											val:        "+",
											ignoreCase: false,
										},
										&zeroOrMoreExpr{
											pos: position{line: 366, col: 29, offset: 14120},
											expr: &choiceExpr{
												pos: position{line: 895, col: 7, offset: 37107},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 895, col: 7, offset: 37107},
														val:        " ",
														ignoreCase: false,
													},
													&actionExpr{
														pos: position{line: 895, col: 13, offset: 37113},
														run: (*parser).callonBlockParagraphLine108,
														expr: &litMatcher{
															pos:        position{line: 895, col: 13, offset: 37113},
															val:        "\t",
															ignoreCase: false,
														},
													},
												},
											},
										},
										&choiceExpr{
											pos: position{line: 903, col: 8, offset: 37209},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 899, col: 12, offset: 37169},
													val:        "\r\n",
													ignoreCase: false,
												},
												&charClassMatcher{
													pos:        position{line: 899, col: 21, offset: 37178},
													val:        "[\\r\\n]",
													chars:      []rune{'\r', '\n'},
													ignoreCase: false,
													inverted:   false,
												},
												&notExpr{
													pos: position{line: 901, col: 8, offset: 37198},
													expr: &anyMatcher{
														line: 901, col: 9, offset: 37199,
													},
												},
											},
										},
									},
								},
							},
						},
						&notExpr{
							pos: position{line: 731, col: 9, offset: 31567},
							expr: &choiceExpr{
								pos: position{line: 684, col: 19, offset: 29648},
								alternatives: []interface{}{
									&litMatcher{
										pos:        position{line: 854, col: 26, offset: 36130},
										val:        "....",
										ignoreCase: false,
									},
									&litMatcher{
										pos:        position{line: 688, col: 25, offset: 29830},
										val:        "```",
										ignoreCase: false,
									},
									&litMatcher{
										pos:        position{line: 695, col: 26, offset: 30162},
										val:        "----",
										ignoreCase: false,
									},
									&litMatcher{
										pos:        position{line: 715, col: 26, offset: 30960},
										val:        "====",
										ignoreCase: false,
									},
									&litMatcher{
										pos:        position{line: 816, col: 26, offset: 34419},
										val:        "////",
										ignoreCase: false,
									},
									&litMatcher{
										pos:        position{line: 737, col: 24, offset: 31681},
										val:        "____",
										ignoreCase: false,
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 732, col: 9, offset: 31594},
							label: "line",
							expr: &ruleRefExpr{
								pos:  position{line: 732, col: 15, offset: 31600},
								name: "InlineElements",
							},
						},
					},
				},
			},
		},
		{
			name: "QuoteBlock",
			pos:  position{line: 739, col: 1, offset: 31714},
			expr: &actionExpr{
				pos: position{line: 739, col: 15, offset: 31728},
				run: (*parser).callonQuoteBlock1,
				expr: &seqExpr{
					pos: position{line: 739, col: 15, offset: 31728},
					exprs: []interface{}{
						&labeledExpr{
							pos:   position{line: 739, col: 15, offset: 31728},
							label: "attributes",
							expr: &oneOrMoreExpr{
								pos: position{line: 739, col: 26, offset: 31739},
								expr: &actionExpr{
									pos: position{line: 747, col: 5, offset: 32037},
									run: (*parser).callonQuoteBlock5,
									expr: &seqExpr{
										pos: position{line: 747, col: 5, offset: 32037},
										exprs: []interface{}{
											&labeledExpr{
												pos:   position{line: 747, col: 5, offset: 32037},
												label: "attribute",
												expr: &choiceExpr{
													pos: position{line: 179, col: 20, offset: 7116},
													alternatives: []interface{}{
														&actionExpr{
															pos: position{line: 179, col: 20, offset: 7116},
															run: (*parser).callonQuoteBlock9,
															expr: &seqExpr{
																pos: position{line: 179, col: 20, offset: 7116},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 179, col: 20, offset: 7116},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 179, col: 24, offset: 7120},
																		label: "kind",
																		expr: &actionExpr{
																			pos: position{line: 191, col: 14, offset: 7626},
																			run: (*parser).callonQuoteBlock13,
																			expr: &seqExpr{
																				pos: position{line: 191, col: 14, offset: 7626},
																				exprs: []interface{}{
																					&notExpr{
																						pos: position{line: 191, col: 14, offset: 7626},
																						expr: &actionExpr{
																							pos: position{line: 207, col: 14, offset: 8362},
																							run: (*parser).callonQuoteBlock16,
																							expr: &litMatcher{
																								pos:        position{line: 207, col: 14, offset: 8362},
																								val:        "verse",
																								ignoreCase: false,
																							},
																						},
																					},
																					&zeroOrMoreExpr{
																						pos: position{line: 191, col: 25, offset: 7637},
																						expr: &seqExpr{
																							pos: position{line: 191, col: 26, offset: 7638},
																							exprs: []interface{}{
																								&notExpr{
																									pos: position{line: 191, col: 26, offset: 7638},
																									expr: &choiceExpr{
																										pos: position{line: 903, col: 8, offset: 37209},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 899, col: 12, offset: 37169},
																												val:        "\r\n",
																												ignoreCase: false,
																											},
																											&charClassMatcher{
																												pos:        position{line: 899, col: 21, offset: 37178},
																												val:        "[\\r\\n]",
																												chars:      []rune{'\r', '\n'},
																												ignoreCase: false,
																												inverted:   false,
																											},
																											&notExpr{
																												pos: position{line: 901, col: 8, offset: 37198},
																												expr: &anyMatcher{
																													line: 901, col: 9, offset: 37199,
																												},
																											},
																										},
																									},
																								},
																								&notExpr{
																									pos: position{line: 191, col: 31, offset: 7643},
																									expr: &choiceExpr{
																										pos: position{line: 895, col: 7, offset: 37107},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 895, col: 7, offset: 37107},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 895, col: 13, offset: 37113},
																												run: (*parser).callonQuoteBlock29,
																												expr: &litMatcher{
																													pos:        position{line: 895, col: 13, offset: 37113},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																								&notExpr{
																									pos: position{line: 191, col: 35, offset: 7647},
																									expr: &litMatcher{
																										pos:        position{line: 191, col: 36, offset: 7648},
																										val:        ",",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 191, col: 40, offset: 7652},
																									expr: &litMatcher{
																										pos:        position{line: 191, col: 41, offset: 7653},
																										val:        "]",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 191, col: 45, offset: 7657},
																									expr: &litMatcher{
																										pos:        position{line: 191, col: 46, offset: 7658},
																										val:        "#",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 191, col: 50, offset: 7662},
																									expr: &litMatcher{
																										pos:        position{line: 191, col: 51, offset: 7663},
																										val:        "=",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 191, col: 55, offset: 7667},
																									expr: &choiceExpr{
																										pos: position{line: 470, col: 19, offset: 18925},
																										alternatives: []interface{}{
																											&actionExpr{
																												pos: position{line: 470, col: 19, offset: 18925},
																												run: (*parser).callonQuoteBlock41,
																												expr: &litMatcher{
																													pos:        position{line: 470, col: 19, offset: 18925},
																													val:        "TIP",
																													ignoreCase: false,
																												},
																											},
																											&actionExpr{
																												pos: position{line: 472, col: 5, offset: 18963},
																												run: (*parser).callonQuoteBlock43,
																												expr: &litMatcher{
																													pos:        position{line: 472, col: 5, offset: 18963},
																													val:        "NOTE",
																													ignoreCase: false,
																												},
																											},
																											&actionExpr{
																												pos: position{line: 474, col: 5, offset: 19003},
																												run: (*parser).callonQuoteBlock45,
																												expr: &litMatcher{
																													pos:        position{line: 474, col: 5, offset: 19003},
																													val:        "IMPORTANT",
																													ignoreCase: false,
																												},
																											},
																											&actionExpr{
																												pos: position{line: 476, col: 5, offset: 19053},
																												run: (*parser).callonQuoteBlock47,
																												expr: &litMatcher{
																													pos:        position{line: 476, col: 5, offset: 19053},
																													val:        "WARNING",
																													ignoreCase: false,
																												},
																											},
																											&actionExpr{
																												pos: position{line: 478, col: 5, offset: 19099},
																												run: (*parser).callonQuoteBlock49,
																												expr: &litMatcher{
																													pos:        position{line: 478, col: 5, offset: 19099},
																													val:        "CAUTION",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																								&anyMatcher{
																									line: 191, col: 71, offset: 7683,
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&zeroOrMoreExpr{
																		pos: position{line: 179, col: 41, offset: 7137},
																		expr: &choiceExpr{
																			pos: position{line: 895, col: 7, offset: 37107},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 895, col: 7, offset: 37107},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 895, col: 13, offset: 37113},
																					run: (*parser).callonQuoteBlock55,
																					expr: &litMatcher{
																						pos:        position{line: 895, col: 13, offset: 37113},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 179, col: 45, offset: 7141},
																		val:        ",",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 179, col: 49, offset: 7145},
																		label: "author",
																		expr: &actionExpr{
																			pos: position{line: 211, col: 16, offset: 8421},
																			run: (*parser).callonQuoteBlock59,
																			expr: &zeroOrMoreExpr{
																				pos: position{line: 211, col: 16, offset: 8421},
																				expr: &seqExpr{
																					pos: position{line: 211, col: 17, offset: 8422},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 211, col: 17, offset: 8422},
																							expr: &choiceExpr{
																								pos: position{line: 903, col: 8, offset: 37209},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 899, col: 12, offset: 37169},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 899, col: 21, offset: 37178},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																									&notExpr{
																										pos: position{line: 901, col: 8, offset: 37198},
																										expr: &anyMatcher{
																											line: 901, col: 9, offset: 37199,
																										},
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 211, col: 22, offset: 8427},
																							expr: &litMatcher{
																								pos:        position{line: 211, col: 23, offset: 8428},
																								val:        ",",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 211, col: 27, offset: 8432},
																							expr: &litMatcher{
																								pos:        position{line: 211, col: 28, offset: 8433},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																						&anyMatcher{
																							line: 211, col: 32, offset: 8437,
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 179, col: 70, offset: 7166},
																		val:        ",",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 179, col: 74, offset: 7170},
																		label: "title",
																		expr: &actionExpr{
																			pos: position{line: 215, col: 15, offset: 8491},
																			run: (*parser).callonQuoteBlock75,
																			expr: &zeroOrMoreExpr{
																				pos: position{line: 215, col: 15, offset: 8491},
																				expr: &seqExpr{
																					pos: position{line: 215, col: 16, offset: 8492},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 215, col: 16, offset: 8492},
																							expr: &choiceExpr{
																								pos: position{line: 903, col: 8, offset: 37209},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 899, col: 12, offset: 37169},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 899, col: 21, offset: 37178},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																									&notExpr{
																										pos: position{line: 901, col: 8, offset: 37198},
																										expr: &anyMatcher{
																											line: 901, col: 9, offset: 37199,
																										},
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 215, col: 21, offset: 8497},
																							expr: &litMatcher{
																								pos:        position{line: 215, col: 22, offset: 8498},
																								val:        ",",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 215, col: 26, offset: 8502},
																							expr: &litMatcher{
																								pos:        position{line: 215, col: 27, offset: 8503},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																						&anyMatcher{
																							line: 215, col: 31, offset: 8507,
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 179, col: 93, offset: 7189},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 183, col: 5, offset: 7332},
															run: (*parser).callonQuoteBlock90,
															expr: &seqExpr{
																pos: position{line: 183, col: 5, offset: 7332},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 183, col: 5, offset: 7332},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 183, col: 9, offset: 7336},
																		label: "kind",
																		expr: &actionExpr{
																			pos: position{line: 191, col: 14, offset: 7626},
																			run: (*parser).callonQuoteBlock94,
																			expr: &seqExpr{
																				pos: position{line: 191, col: 14, offset: 7626},
																				exprs: []interface{}{
																					&notExpr{
																						pos: position{line: 191, col: 14, offset: 7626},
																						expr: &actionExpr{
																							pos: position{line: 207, col: 14, offset: 8362},
																							run: (*parser).callonQuoteBlock97,
																							expr: &litMatcher{
																								pos:        position{line: 207, col: 14, offset: 8362},
																								val:        "verse",
																								ignoreCase: false,
																							},
																						},
																					},
																					&zeroOrMoreExpr{
																						pos: position{line: 191, col: 25, offset: 7637},
																						expr: &seqExpr{
																							pos: position{line: 191, col: 26, offset: 7638},
																							exprs: []interface{}{
																								&notExpr{
																									pos: position{line: 191, col: 26, offset: 7638},
																									expr: &choiceExpr{
																										pos: position{line: 903, col: 8, offset: 37209},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 899, col: 12, offset: 37169},
																												val:        "\r\n",
																												ignoreCase: false,
																											},
																											&charClassMatcher{
																												pos:        position{line: 899, col: 21, offset: 37178},
																												val:        "[\\r\\n]",
																												chars:      []rune{'\r', '\n'},
																												ignoreCase: false,
																												inverted:   false,
																											},
																											&notExpr{
																												pos: position{line: 901, col: 8, offset: 37198},
																												expr: &anyMatcher{
																													line: 901, col: 9, offset: 37199,
																												},
																											},
																										},
																									},
																								},
																								&notExpr{
																									pos: position{line: 191, col: 31, offset: 7643},
																									expr: &choiceExpr{
																										pos: position{line: 895, col: 7, offset: 37107},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 895, col: 7, offset: 37107},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 895, col: 13, offset: 37113},
																												run: (*parser).callonQuoteBlock110,
																												expr: &litMatcher{
																													pos:        position{line: 895, col: 13, offset: 37113},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																								&notExpr{
																									pos: position{line: 191, col: 35, offset: 7647},
																									expr: &litMatcher{
																										pos:        position{line: 191, col: 36, offset: 7648},
																										val:        ",",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 191, col: 40, offset: 7652},
																									expr: &litMatcher{
																										pos:        position{line: 191, col: 41, offset: 7653},
																										val:        "]",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 191, col: 45, offset: 7657},
																									expr: &litMatcher{
																										pos:        position{line: 191, col: 46, offset: 7658},
																										val:        "#",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 191, col: 50, offset: 7662},
																									expr: &litMatcher{
																										pos:        position{line: 191, col: 51, offset: 7663},
																										val:        "=",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 191, col: 55, offset: 7667},
																									expr: &choiceExpr{
																										pos: position{line: 470, col: 19, offset: 18925},
																										alternatives: []interface{}{
																											&actionExpr{
																												pos: position{line: 470, col: 19, offset: 18925},
																												run: (*parser).callonQuoteBlock122,
																												expr: &litMatcher{
																													pos:        position{line: 470, col: 19, offset: 18925},
																													val:        "TIP",
																													ignoreCase: false,
																												},
																											},
																											&actionExpr{
																												pos: position{line: 472, col: 5, offset: 18963},
																												run: (*parser).callonQuoteBlock124,
																												expr: &litMatcher{
																													pos:        position{line: 472, col: 5, offset: 18963},
																													val:        "NOTE",
																													ignoreCase: false,
																												},
																											},
																											&actionExpr{
																												pos: position{line: 474, col: 5, offset: 19003},
																												run: (*parser).callonQuoteBlock126,
																												expr: &litMatcher{
																													pos:        position{line: 474, col: 5, offset: 19003},
																													val:        "IMPORTANT",
																													ignoreCase: false,
																												},
																											},
																											&actionExpr{
																												pos: position{line: 476, col: 5, offset: 19053},
																												run: (*parser).callonQuoteBlock128,
																												expr: &litMatcher{
																													pos:        position{line: 476, col: 5, offset: 19053},
																													val:        "WARNING",
																													ignoreCase: false,
																												},
																											},
																											&actionExpr{
																												pos: position{line: 478, col: 5, offset: 19099},
																												run: (*parser).callonQuoteBlock130,
																												expr: &litMatcher{
																													pos:        position{line: 478, col: 5, offset: 19099},
																													val:        "CAUTION",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																								&anyMatcher{
																									line: 191, col: 71, offset: 7683,
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&zeroOrMoreExpr{
																		pos: position{line: 183, col: 26, offset: 7353},
																		expr: &choiceExpr{
																			pos: position{line: 895, col: 7, offset: 37107},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 895, col: 7, offset: 37107},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 895, col: 13, offset: 37113},
																					run: (*parser).callonQuoteBlock136,
																					expr: &litMatcher{
																						pos:        position{line: 895, col: 13, offset: 37113},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 183, col: 30, offset: 7357},
																		val:        ",",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 183, col: 34, offset: 7361},
																		label: "author",
																		expr: &actionExpr{
																			pos: position{line: 211, col: 16, offset: 8421},
																			run: (*parser).callonQuoteBlock140,
																			expr: &zeroOrMoreExpr{
																				pos: position{line: 211, col: 16, offset: 8421},
																				expr: &seqExpr{
																					pos: position{line: 211, col: 17, offset: 8422},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 211, col: 17, offset: 8422},
																							expr: &choiceExpr{
																								pos: position{line: 903, col: 8, offset: 37209},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 899, col: 12, offset: 37169},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 899, col: 21, offset: 37178},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																									&notExpr{
																										pos: position{line: 901, col: 8, offset: 37198},
																										expr: &anyMatcher{
																											line: 901, col: 9, offset: 37199,
																										},
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 211, col: 22, offset: 8427},
																							expr: &litMatcher{
																								pos:        position{line: 211, col: 23, offset: 8428},
																								val:        ",",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 211, col: 27, offset: 8432},
																							expr: &litMatcher{
																								pos:        position{line: 211, col: 28, offset: 8433},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																						&anyMatcher{
																							line: 211, col: 32, offset: 8437,
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 183, col: 55, offset: 7382},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 187, col: 5, offset: 7513},
															run: (*parser).callonQuoteBlock155,
															expr: &seqExpr{
																pos: position{line: 187, col: 5, offset: 7513},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 187, col: 5, offset: 7513},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 187, col: 9, offset: 7517},
																		label: "kind",
																		expr: &actionExpr{
																			pos: position{line: 191, col: 14, offset: 7626},
																			run: (*parser).callonQuoteBlock159,
																			expr: &seqExpr{
																				pos: position{line: 191, col: 14, offset: 7626},
																				exprs: []interface{}{
																					&notExpr{
																						pos: position{line: 191, col: 14, offset: 7626},
																						expr: &actionExpr{
																							pos: position{line: 207, col: 14, offset: 8362},
																							run: (*parser).callonQuoteBlock162,
																							expr: &litMatcher{
																								pos:        position{line: 207, col: 14, offset: 8362},
																								val:        "verse",
																								ignoreCase: false,
																							},
																						},
																					},
																					&zeroOrMoreExpr{
																						pos: position{line: 191, col: 25, offset: 7637},
																						expr: &seqExpr{
																							pos: position{line: 191, col: 26, offset: 7638},
																							exprs: []interface{}{
																								&notExpr{
																									pos: position{line: 191, col: 26, offset: 7638},
																									expr: &choiceExpr{
																										pos: position{line: 903, col: 8, offset: 37209},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 899, col: 12, offset: 37169},
																												val:        "\r\n",
																												ignoreCase: false,
																											},
																											&charClassMatcher{
																												pos:        position{line: 899, col: 21, offset: 37178},
																												val:        "[\\r\\n]",
																												chars:      []rune{'\r', '\n'},
																												ignoreCase: false,
																												inverted:   false,
																											},
																											&notExpr{
																												pos: position{line: 901, col: 8, offset: 37198},
																												expr: &anyMatcher{
																													line: 901, col: 9, offset: 37199,
																												},
																											},
																										},
																									},
																								},
																								&notExpr{
																									pos: position{line: 191, col: 31, offset: 7643},
																									expr: &choiceExpr{
																										pos: position{line: 895, col: 7, offset: 37107},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 895, col: 7, offset: 37107},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 895, col: 13, offset: 37113},
																												run: (*parser).callonQuoteBlock175,
																												expr: &litMatcher{
																													pos:        position{line: 895, col: 13, offset: 37113},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																								&notExpr{
																									pos: position{line: 191, col: 35, offset: 7647},
																									expr: &litMatcher{
																										pos:        position{line: 191, col: 36, offset: 7648},
																										val:        ",",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 191, col: 40, offset: 7652},
																									expr: &litMatcher{
																										pos:        position{line: 191, col: 41, offset: 7653},
																										val:        "]",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 191, col: 45, offset: 7657},
																									expr: &litMatcher{
																										pos:        position{line: 191, col: 46, offset: 7658},
																										val:        "#",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 191, col: 50, offset: 7662},
																									expr: &litMatcher{
																										pos:        position{line: 191, col: 51, offset: 7663},
																										val:        "=",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 191, col: 55, offset: 7667},
																									expr: &choiceExpr{
																										pos: position{line: 470, col: 19, offset: 18925},
																										alternatives: []interface{}{
																											&actionExpr{
																												pos: position{line: 470, col: 19, offset: 18925},
																												run: (*parser).callonQuoteBlock187,
																												expr: &litMatcher{
																													pos:        position{line: 470, col: 19, offset: 18925},
																													val:        "TIP",
																													ignoreCase: false,
																												},
																											},
																											&actionExpr{
																												pos: position{line: 472, col: 5, offset: 18963},
																												run: (*parser).callonQuoteBlock189,
																												expr: &litMatcher{
																													pos:        position{line: 472, col: 5, offset: 18963},
																													val:        "NOTE",
																													ignoreCase: false,
																												},
																											},
																											&actionExpr{
																												pos: position{line: 474, col: 5, offset: 19003},
																												run: (*parser).callonQuoteBlock191,
																												expr: &litMatcher{
																													pos:        position{line: 474, col: 5, offset: 19003},
																													val:        "IMPORTANT",
																													ignoreCase: false,
																												},
																											},
																											&actionExpr{
																												pos: position{line: 476, col: 5, offset: 19053},
																												run: (*parser).callonQuoteBlock193,
																												expr: &litMatcher{
																													pos:        position{line: 476, col: 5, offset: 19053},
																													val:        "WARNING",
																													ignoreCase: false,
																												},
																											},
																											&actionExpr{
																												pos: position{line: 478, col: 5, offset: 19099},
																												run: (*parser).callonQuoteBlock195,
																												expr: &litMatcher{
																													pos:        position{line: 478, col: 5, offset: 19099},
																													val:        "CAUTION",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																								&anyMatcher{
																									line: 191, col: 71, offset: 7683,
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&zeroOrMoreExpr{
																		pos: position{line: 187, col: 26, offset: 7534},
																		expr: &choiceExpr{
																			pos: position{line: 895, col: 7, offset: 37107},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 895, col: 7, offset: 37107},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 895, col: 13, offset: 37113},
																					run: (*parser).callonQuoteBlock201,
																					expr: &litMatcher{
																						pos:        position{line: 895, col: 13, offset: 37113},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 187, col: 30, offset: 7538},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
													},
												},
											},
											&zeroOrMoreExpr{
												pos: position{line: 747, col: 33, offset: 32065},
												expr: &choiceExpr{
													pos: position{line: 895, col: 7, offset: 37107},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 895, col: 7, offset: 37107},
															val:        " ",
															ignoreCase: false,
														},
														&actionExpr{
															pos: position{line: 895, col: 13, offset: 37113},
															run: (*parser).callonQuoteBlock207,
															expr: &litMatcher{
																pos:        position{line: 895, col: 13, offset: 37113},
																val:        "\t",
																ignoreCase: false,
															},
														},
													},
												},
											},
											&choiceExpr{
												pos: position{line: 903, col: 8, offset: 37209},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 899, col: 12, offset: 37169},
														val:        "\r\n",
														ignoreCase: false,
													},
													&charClassMatcher{
														pos:        position{line: 899, col: 21, offset: 37178},
														val:        "[\\r\\n]",
														chars:      []rune{'\r', '\n'},
														ignoreCase: false,
														inverted:   false,
													},
													&notExpr{
														pos: position{line: 901, col: 8, offset: 37198},
														expr: &anyMatcher{
															line: 901, col: 9, offset: 37199,
														},
													},
												},
											},
										},
									},
								},
							},
						},
						&litMatcher{
							pos:        position{line: 737, col: 24, offset: 31681},
							val:        "____",
							ignoreCase: false,
						},
						&zeroOrMoreExpr{
							pos: position{line: 739, col: 70, offset: 31783},
							expr: &choiceExpr{
								pos: position{line: 895, col: 7, offset: 37107},
								alternatives: []interface{}{
									&litMatcher{
										pos:        position{line: 895, col: 7, offset: 37107},
										val:        " ",
										ignoreCase: false,
									},
									&actionExpr{
										pos: position{line: 895, col: 13, offset: 37113},
										run: (*parser).callonQuoteBlock218,
										expr: &litMatcher{
											pos:        position{line: 895, col: 13, offset: 37113},
											val:        "\t",
											ignoreCase: false,
										},
									},
								},
							},
						},
						&choiceExpr{
							pos: position{line: 899, col: 12, offset: 37169},
							alternatives: []interface{}{
								&litMatcher{
									pos:        position{line: 899, col: 12, offset: 37169},
									val:        "\r\n",
									ignoreCase: false,
								},
								&charClassMatcher{
									pos:        position{line: 899, col: 21, offset: 37178},
									val:        "[\\r\\n]",
									chars:      []rune{'\r', '\n'},
									ignoreCase: false,
									inverted:   false,
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 739, col: 82, offset: 31795},
							label: "content",
							expr: &zeroOrMoreExpr{
								pos: position{line: 739, col: 90, offset: 31803},
								expr: &ruleRefExpr{
									pos:  position{line: 739, col: 91, offset: 31804},
									name: "QuoteBlockContent",
								},
							},
						},
						&choiceExpr{
							pos: position{line: 739, col: 113, offset: 31826},
							alternatives: []interface{}{
								&seqExpr{
									pos: position{line: 739, col: 114, offset: 31827},
									exprs: []interface{}{
										&litMatcher{
											pos:        position{line: 737, col: 24, offset: 31681},
											val:        "____",
											ignoreCase: false,
										},
										&zeroOrMoreExpr{
											pos: position{line: 739, col: 134, offset: 31847},
											expr: &choiceExpr{
												pos: position{line: 895, col: 7, offset: 37107},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 895, col: 7, offset: 37107},
														val:        " ",
														ignoreCase: false,
													},
													&actionExpr{
														pos: position{line: 895, col: 13, offset: 37113},
														run: (*parser).callonQuoteBlock232,
														expr: &litMatcher{
															pos:        position{line: 895, col: 13, offset: 37113},
															val:        "\t",
															ignoreCase: false,
														},
													},
												},
											},
										},
										&choiceExpr{
											pos: position{line: 903, col: 8, offset: 37209},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 899, col: 12, offset: 37169},
													val:        "\r\n",
													ignoreCase: false,
												},
												&charClassMatcher{
													pos:        position{line: 899, col: 21, offset: 37178},
													val:        "[\\r\\n]",
													chars:      []rune{'\r', '\n'},
													ignoreCase: false,
													inverted:   false,
												},
												&notExpr{
													pos: position{line: 901, col: 8, offset: 37198},
													expr: &anyMatcher{
														line: 901, col: 9, offset: 37199,
													},
												},
											},
										},
									},
								},
								&notExpr{
									pos: position{line: 901, col: 8, offset: 37198},
									expr: &anyMatcher{
										line: 901, col: 9, offset: 37199,
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "QuoteBlockContent",
			pos:  position{line: 754, col: 1, offset: 32197},
			expr: &actionExpr{
				pos: position{line: 755, col: 5, offset: 32223},
				run: (*parser).callonQuoteBlockContent1,
				expr: &seqExpr{
					pos: position{line: 755, col: 5, offset: 32223},
					exprs: []interface{}{
						&notExpr{
							pos: position{line: 755, col: 5, offset: 32223},
							expr: &litMatcher{
								pos:        position{line: 737, col: 24, offset: 31681},
								val:        "____",
								ignoreCase: false,
							},
						},
						&notExpr{
							pos: position{line: 755, col: 26, offset: 32244},
							expr: &notExpr{
								pos: position{line: 901, col: 8, offset: 37198},
								expr: &anyMatcher{
									line: 901, col: 9, offset: 37199,
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 755, col: 31, offset: 32249},
							label: "element",
							expr: &ruleRefExpr{
								pos:  position{line: 755, col: 40, offset: 32258},
								name: "DocumentBlock",
							},
						},
					},
				},
			},
		},
		{
			name: "VerseBlock",
			pos:  position{line: 760, col: 1, offset: 32327},
			expr: &actionExpr{
				pos: position{line: 760, col: 15, offset: 32341},
				run: (*parser).callonVerseBlock1,
				expr: &seqExpr{
					pos: position{line: 760, col: 15, offset: 32341},
					exprs: []interface{}{
						&labeledExpr{
							pos:   position{line: 760, col: 15, offset: 32341},
							label: "attributes",
							expr: &oneOrMoreExpr{
								pos: position{line: 760, col: 26, offset: 32352},
								expr: &actionExpr{
									pos: position{line: 768, col: 5, offset: 32649},
									run: (*parser).callonVerseBlock5,
									expr: &seqExpr{
										pos: position{line: 768, col: 5, offset: 32649},
										exprs: []interface{}{
											&labeledExpr{
												pos:   position{line: 768, col: 5, offset: 32649},
												label: "attribute",
												expr: &choiceExpr{
													pos: position{line: 195, col: 20, offset: 7852},
													alternatives: []interface{}{
														&actionExpr{
															pos: position{line: 195, col: 20, offset: 7852},
															run: (*parser).callonVerseBlock9,
															expr: &seqExpr{
																pos: position{line: 195, col: 20, offset: 7852},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 195, col: 20, offset: 7852},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 195, col: 24, offset: 7856},
																		label: "kind",
																		expr: &actionExpr{
																			pos: position{line: 207, col: 14, offset: 8362},
																			run: (*parser).callonVerseBlock13,
																			expr: &litMatcher{
																				pos:        position{line: 207, col: 14, offset: 8362},
																				val:        "verse",
																				ignoreCase: false,
																			},
																		},
																	},
																	&zeroOrMoreExpr{
																		pos: position{line: 195, col: 41, offset: 7873},
																		expr: &choiceExpr{
																			pos: position{line: 895, col: 7, offset: 37107},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 895, col: 7, offset: 37107},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 895, col: 13, offset: 37113},
																					run: (*parser).callonVerseBlock18,
																					expr: &litMatcher{
																						pos:        position{line: 895, col: 13, offset: 37113},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 195, col: 45, offset: 7877},
																		val:        ",",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 195, col: 49, offset: 7881},
																		label: "author",
																		expr: &actionExpr{
																			pos: position{line: 211, col: 16, offset: 8421},
																			run: (*parser).callonVerseBlock22,
																			expr: &zeroOrMoreExpr{
																				pos: position{line: 211, col: 16, offset: 8421},
																				expr: &seqExpr{
																					pos: position{line: 211, col: 17, offset: 8422},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 211, col: 17, offset: 8422},
																							expr: &choiceExpr{
																								pos: position{line: 903, col: 8, offset: 37209},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 899, col: 12, offset: 37169},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 899, col: 21, offset: 37178},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																									&notExpr{
																										pos: position{line: 901, col: 8, offset: 37198},
																										expr: &anyMatcher{
																											line: 901, col: 9, offset: 37199,
																										},
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 211, col: 22, offset: 8427},
																							expr: &litMatcher{
																								pos:        position{line: 211, col: 23, offset: 8428},
																								val:        ",",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 211, col: 27, offset: 8432},
																							expr: &litMatcher{
																								pos:        position{line: 211, col: 28, offset: 8433},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																						&anyMatcher{
																							line: 211, col: 32, offset: 8437,
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 195, col: 70, offset: 7902},
																		val:        ",",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 195, col: 74, offset: 7906},
																		label: "title",
																		expr: &actionExpr{
																			pos: position{line: 215, col: 15, offset: 8491},
																			run: (*parser).callonVerseBlock38,
																			expr: &zeroOrMoreExpr{
																				pos: position{line: 215, col: 15, offset: 8491},
																				expr: &seqExpr{
																					pos: position{line: 215, col: 16, offset: 8492},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 215, col: 16, offset: 8492},
																							expr: &choiceExpr{
																								pos: position{line: 903, col: 8, offset: 37209},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 899, col: 12, offset: 37169},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 899, col: 21, offset: 37178},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																									&notExpr{
																										pos: position{line: 901, col: 8, offset: 37198},
																										expr: &anyMatcher{
																											line: 901, col: 9, offset: 37199,
																										},
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 215, col: 21, offset: 8497},
																							expr: &litMatcher{
																								pos:        position{line: 215, col: 22, offset: 8498},
																								val:        ",",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 215, col: 26, offset: 8502},
																							expr: &litMatcher{
																								pos:        position{line: 215, col: 27, offset: 8503},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																						&anyMatcher{
																							line: 215, col: 31, offset: 8507,
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 195, col: 93, offset: 7925},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 199, col: 5, offset: 8068},
															run: (*parser).callonVerseBlock53,
															expr: &seqExpr{
																pos: position{line: 199, col: 5, offset: 8068},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 199, col: 5, offset: 8068},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 199, col: 9, offset: 8072},
																		label: "kind",
																		expr: &actionExpr{
																			pos: position{line: 207, col: 14, offset: 8362},
																			run: (*parser).callonVerseBlock57,
																			expr: &litMatcher{
																				pos:        position{line: 207, col: 14, offset: 8362},
																				val:        "verse",
																				ignoreCase: false,
																			},
																		},
																	},
																	&zeroOrMoreExpr{
																		pos: position{line: 199, col: 26, offset: 8089},
																		expr: &choiceExpr{
																			pos: position{line: 895, col: 7, offset: 37107},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 895, col: 7, offset: 37107},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 895, col: 13, offset: 37113},
																					run: (*parser).callonVerseBlock62,
																					expr: &litMatcher{
																						pos:        position{line: 895, col: 13, offset: 37113},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 199, col: 30, offset: 8093},
																		val:        ",",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 199, col: 34, offset: 8097},
																		label: "author",
																		expr: &actionExpr{
																			pos: position{line: 211, col: 16, offset: 8421},
																			run: (*parser).callonVerseBlock66,
																			expr: &zeroOrMoreExpr{
																				pos: position{line: 211, col: 16, offset: 8421},
																				expr: &seqExpr{
																					pos: position{line: 211, col: 17, offset: 8422},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 211, col: 17, offset: 8422},
																							expr: &choiceExpr{
																								pos: position{line: 903, col: 8, offset: 37209},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 899, col: 12, offset: 37169},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 899, col: 21, offset: 37178},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																									&notExpr{
																										pos: position{line: 901, col: 8, offset: 37198},
																										expr: &anyMatcher{
																											line: 901, col: 9, offset: 37199,
																										},
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 211, col: 22, offset: 8427},
																							expr: &litMatcher{
																								pos:        position{line: 211, col: 23, offset: 8428},
																								val:        ",",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 211, col: 27, offset: 8432},
																							expr: &litMatcher{
																								pos:        position{line: 211, col: 28, offset: 8433},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																						&anyMatcher{
																							line: 211, col: 32, offset: 8437,
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 199, col: 55, offset: 8118},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 203, col: 5, offset: 8249},
															run: (*parser).callonVerseBlock81,
															expr: &seqExpr{
																pos: position{line: 203, col: 5, offset: 8249},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 203, col: 5, offset: 8249},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 203, col: 9, offset: 8253},
																		label: "kind",
																		expr: &actionExpr{
																			pos: position{line: 207, col: 14, offset: 8362},
																			run: (*parser).callonVerseBlock85,
																			expr: &litMatcher{
																				pos:        position{line: 207, col: 14, offset: 8362},
																				val:        "verse",
																				ignoreCase: false,
																			},
																		},
																	},
																	&zeroOrMoreExpr{
																		pos: position{line: 203, col: 26, offset: 8270},
																		expr: &choiceExpr{
																			pos: position{line: 895, col: 7, offset: 37107},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 895, col: 7, offset: 37107},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 895, col: 13, offset: 37113},
																					run: (*parser).callonVerseBlock90,
																					expr: &litMatcher{
																						pos:        position{line: 895, col: 13, offset: 37113},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 203, col: 30, offset: 8274},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
													},
												},
											},
											&zeroOrMoreExpr{
												pos: position{line: 768, col: 33, offset: 32677},
												expr: &choiceExpr{
													pos: position{line: 895, col: 7, offset: 37107},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 895, col: 7, offset: 37107},
															val:        " ",
															ignoreCase: false,
														},
														&actionExpr{
															pos: position{line: 895, col: 13, offset: 37113},
															run: (*parser).callonVerseBlock96,
															expr: &litMatcher{
																pos:        position{line: 895, col: 13, offset: 37113},
																val:        "\t",
																ignoreCase: false,
															},
														},
													},
												},
											},
											&choiceExpr{
												pos: position{line: 903, col: 8, offset: 37209},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 899, col: 12, offset: 37169},
														val:        "\r\n",
														ignoreCase: false,
													},
													&charClassMatcher{
														pos:        position{line: 899, col: 21, offset: 37178},
														val:        "[\\r\\n]",
														chars:      []rune{'\r', '\n'},
														ignoreCase: false,
														inverted:   false,
													},
													&notExpr{
														pos: position{line: 901, col: 8, offset: 37198},
														expr: &anyMatcher{
															line: 901, col: 9, offset: 37199,
														},
													},
												},
											},
										},
									},
								},
							},
						},
						&litMatcher{
							pos:        position{line: 737, col: 24, offset: 31681},
							val:        "____",
							ignoreCase: false,
						},
						&zeroOrMoreExpr{
							pos: position{line: 760, col: 70, offset: 32396},
							expr: &choiceExpr{
								pos: position{line: 895, col: 7, offset: 37107},
								alternatives: []interface{}{
									&litMatcher{
										pos:        position{line: 895, col: 7, offset: 37107},
										val:        " ",
										ignoreCase: false,
									},
									&actionExpr{
										pos: position{line: 895, col: 13, offset: 37113},
										run: (*parser).callonVerseBlock107,
										expr: &litMatcher{
											pos:        position{line: 895, col: 13, offset: 37113},
											val:        "\t",
											ignoreCase: false,
										},
									},
								},
							},
						},
						&choiceExpr{
							pos: position{line: 899, col: 12, offset: 37169},
							alternatives: []interface{}{
								&litMatcher{
									pos:        position{line: 899, col: 12, offset: 37169},
									val:        "\r\n",
									ignoreCase: false,
								},
								&charClassMatcher{
									pos:        position{line: 899, col: 21, offset: 37178},
									val:        "[\\r\\n]",
									chars:      []rune{'\r', '\n'},
									ignoreCase: false,
									inverted:   false,
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 760, col: 82, offset: 32408},
							label: "content",
							expr: &zeroOrMoreExpr{
								pos: position{line: 760, col: 90, offset: 32416},
								expr: &ruleRefExpr{
									pos:  position{line: 760, col: 91, offset: 32417},
									name: "VerseBlockContent",
								},
							},
						},
						&choiceExpr{
							pos: position{line: 760, col: 112, offset: 32438},
							alternatives: []interface{}{
								&seqExpr{
									pos: position{line: 760, col: 113, offset: 32439},
									exprs: []interface{}{
										&litMatcher{
											pos:        position{line: 737, col: 24, offset: 31681},
											val:        "____",
											ignoreCase: false,
										},
										&zeroOrMoreExpr{
											pos: position{line: 760, col: 133, offset: 32459},
											expr: &choiceExpr{
												pos: position{line: 895, col: 7, offset: 37107},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 895, col: 7, offset: 37107},
														val:        " ",
														ignoreCase: false,
													},
													&actionExpr{
														pos: position{line: 895, col: 13, offset: 37113},
														run: (*parser).callonVerseBlock121,
														expr: &litMatcher{
															pos:        position{line: 895, col: 13, offset: 37113},
															val:        "\t",
															ignoreCase: false,
														},
													},
												},
											},
										},
										&choiceExpr{
											pos: position{line: 903, col: 8, offset: 37209},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 899, col: 12, offset: 37169},
													val:        "\r\n",
													ignoreCase: false,
												},
												&charClassMatcher{
													pos:        position{line: 899, col: 21, offset: 37178},
													val:        "[\\r\\n]",
													chars:      []rune{'\r', '\n'},
													ignoreCase: false,
													inverted:   false,
												},
												&notExpr{
													pos: position{line: 901, col: 8, offset: 37198},
													expr: &anyMatcher{
														line: 901, col: 9, offset: 37199,
													},
												},
											},
										},
									},
								},
								&notExpr{
									pos: position{line: 901, col: 8, offset: 37198},
									expr: &anyMatcher{
										line: 901, col: 9, offset: 37199,
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "VerseBlockContent",
			pos:  position{line: 772, col: 1, offset: 32726},
			expr: &actionExpr{
				pos: position{line: 772, col: 22, offset: 32747},
				run: (*parser).callonVerseBlockContent1,
				expr: &labeledExpr{
					pos:   position{line: 772, col: 22, offset: 32747},
					label: "lines",
					expr: &oneOrMoreExpr{
						pos: position{line: 772, col: 28, offset: 32753},
						expr: &ruleRefExpr{
							pos:  position{line: 772, col: 29, offset: 32754},
							name: "VerseBlockLine",
						},
					},
				},
			},
		},
		{
			name: "VerseBlockLine",
			pos:  position{line: 776, col: 1, offset: 32834},
			expr: &actionExpr{
				pos: position{line: 776, col: 19, offset: 32852},
				run: (*parser).callonVerseBlockLine1,
				expr: &seqExpr{
					pos: position{line: 776, col: 19, offset: 32852},
					exprs: []interface{}{
						&notExpr{
							pos: position{line: 776, col: 19, offset: 32852},
							expr: &litMatcher{
								pos:        position{line: 737, col: 24, offset: 31681},
								val:        "____",
								ignoreCase: false,
							},
						},
						&notExpr{
							pos: position{line: 776, col: 40, offset: 32873},
							expr: &notExpr{
								pos: position{line: 901, col: 8, offset: 37198},
								expr: &anyMatcher{
									line: 901, col: 9, offset: 37199,
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 776, col: 45, offset: 32878},
							label: "line",
							expr: &ruleRefExpr{
								pos:  position{line: 776, col: 51, offset: 32884},
								name: "VerseBlockLineContent",
							},
						},
						&choiceExpr{
							pos: position{line: 903, col: 8, offset: 37209},
							alternatives: []interface{}{
								&litMatcher{
									pos:        position{line: 899, col: 12, offset: 37169},
									val:        "\r\n",
									ignoreCase: false,
								},
								&charClassMatcher{
									pos:        position{line: 899, col: 21, offset: 37178},
									val:        "[\\r\\n]",
									chars:      []rune{'\r', '\n'},
									ignoreCase: false,
									inverted:   false,
								},
								&notExpr{
									pos: position{line: 901, col: 8, offset: 37198},
									expr: &anyMatcher{
										line: 901, col: 9, offset: 37199,
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "VerseBlockLineContent",
			pos:  position{line: 780, col: 1, offset: 32960},
			expr: &actionExpr{
				pos: position{line: 780, col: 26, offset: 32985},
				run: (*parser).callonVerseBlockLineContent1,
				expr: &labeledExpr{
					pos:   position{line: 780, col: 26, offset: 32985},
					label: "elements",
					expr: &zeroOrMoreExpr{
						pos: position{line: 780, col: 35, offset: 32994},
						expr: &seqExpr{
							pos: position{line: 780, col: 36, offset: 32995},
							exprs: []interface{}{
								&notExpr{
									pos: position{line: 780, col: 36, offset: 32995},
									expr: &litMatcher{
										pos:        position{line: 737, col: 24, offset: 31681},
										val:        "____",
										ignoreCase: false,
									},
								},
								&notExpr{
									pos: position{line: 780, col: 57, offset: 33016},
									expr: &choiceExpr{
										pos: position{line: 903, col: 8, offset: 37209},
										alternatives: []interface{}{
											&litMatcher{
												pos:        position{line: 899, col: 12, offset: 37169},
												val:        "\r\n",
												ignoreCase: false,
											},
											&charClassMatcher{
												pos:        position{line: 899, col: 21, offset: 37178},
												val:        "[\\r\\n]",
												chars:      []rune{'\r', '\n'},
												ignoreCase: false,
												inverted:   false,
											},
											&notExpr{
												pos: position{line: 901, col: 8, offset: 37198},
												expr: &anyMatcher{
													line: 901, col: 9, offset: 37199,
												},
											},
										},
									},
								},
								&zeroOrMoreExpr{
									pos: position{line: 780, col: 62, offset: 33021},
									expr: &choiceExpr{
										pos: position{line: 895, col: 7, offset: 37107},
										alternatives: []interface{}{
											&litMatcher{
												pos:        position{line: 895, col: 7, offset: 37107},
												val:        " ",
												ignoreCase: false,
											},
											&actionExpr{
												pos: position{line: 895, col: 13, offset: 37113},
												run: (*parser).callonVerseBlockLineContent16,
												expr: &litMatcher{
													pos:        position{line: 895, col: 13, offset: 37113},
													val:        "\t",
													ignoreCase: false,
												},
											},
										},
									},
								},
								&ruleRefExpr{
									pos:  position{line: 780, col: 66, offset: 33025},
									name: "InlineElement",
								},
								&zeroOrMoreExpr{
									pos: position{line: 780, col: 80, offset: 33039},
									expr: &choiceExpr{
										pos: position{line: 895, col: 7, offset: 37107},
										alternatives: []interface{}{
											&litMatcher{
												pos:        position{line: 895, col: 7, offset: 37107},
												val:        " ",
												ignoreCase: false,
											},
											&actionExpr{
												pos: position{line: 895, col: 13, offset: 37113},
												run: (*parser).callonVerseBlockLineContent22,
												expr: &litMatcher{
													pos:        position{line: 895, col: 13, offset: 37113},
													val:        "\t",
													ignoreCase: false,
												},
											},
										},
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "Table",
			pos:  position{line: 787, col: 1, offset: 33379},
			expr: &actionExpr{
				pos: position{line: 787, col: 10, offset: 33388},
				run: (*parser).callonTable1,
				expr: &seqExpr{
					pos: position{line: 787, col: 10, offset: 33388},
					exprs: []interface{}{
						&labeledExpr{
							pos:   position{line: 787, col: 10, offset: 33388},
							label: "attributes",
							expr: &zeroOrMoreExpr{
								pos: position{line: 787, col: 21, offset: 33399},
								expr: &actionExpr{
									pos: position{line: 120, col: 21, offset: 5039},
									run: (*parser).callonTable5,
									expr: &seqExpr{
										pos: position{line: 120, col: 21, offset: 5039},
										exprs: []interface{}{
											&labeledExpr{
												pos:   position{line: 120, col: 21, offset: 5039},
												label: "attr",
												expr: &choiceExpr{
													pos: position{line: 120, col: 27, offset: 5045},
													alternatives: []interface{}{
														&actionExpr{
															pos: position{line: 129, col: 14, offset: 5496},
															run: (*parser).callonTable9,
															expr: &labeledExpr{
																pos:   position{line: 129, col: 14, offset: 5496},
																label: "id",
																expr: &actionExpr{
																	pos: position{line: 135, col: 20, offset: 5626},
																	run: (*parser).callonTable11,
																	expr: &seqExpr{
																		pos: position{line: 135, col: 20, offset: 5626},
																		exprs: []interface{}{
																			&litMatcher{
																				pos:        position{line: 135, col: 20, offset: 5626},
																				val:        "[[",
																				ignoreCase: false,
																			},
																			&labeledExpr{
																				pos:   position{line: 135, col: 25, offset: 5631},
																				label: "id",
																				expr: &actionExpr{
																					pos: position{line: 883, col: 7, offset: 36866},
																					run: (*parser).callonTable15,
																					expr: &oneOrMoreExpr{
																						pos: position{line: 883, col: 7, offset: 36866},
																						expr: &seqExpr{
																							pos: position{line: 883, col: 8, offset: 36867},
																							exprs: []interface{}{
																								&notExpr{
																									pos: position{line: 883, col: 8, offset: 36867},
																									expr: &choiceExpr{
																										pos: position{line: 899, col: 12, offset: 37169},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 899, col: 12, offset: 37169},
																												val:        "\r\n",
																												ignoreCase: false,
																											},
																											&charClassMatcher{
																												pos:        position{line: 899, col: 21, offset: 37178},
																												val:        "[\\r\\n]",
																												chars:      []rune{'\r', '\n'},
																												ignoreCase: false,
																												inverted:   false,
																											},
																										},
																									},
																								},
																								&notExpr{
																									pos: position{line: 883, col: 17, offset: 36876},
																									expr: &choiceExpr{
																										pos: position{line: 895, col: 7, offset: 37107},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 895, col: 7, offset: 37107},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 895, col: 13, offset: 37113},
																												run: (*parser).callonTable25,
																												expr: &litMatcher{
																													pos:        position{line: 895, col: 13, offset: 37113},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																								&notExpr{
																									pos: position{line: 883, col: 21, offset: 36880},
																									expr: &litMatcher{
																										pos:        position{line: 883, col: 22, offset: 36881},
																										val:        "[",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 883, col: 26, offset: 36885},
																									expr: &litMatcher{
																										pos:        position{line: 883, col: 27, offset: 36886},
																										val:        "]",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 883, col: 31, offset: 36890},
																									expr: &litMatcher{
																										pos:        position{line: 883, col: 32, offset: 36891},
																										val:        "<<",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 883, col: 37, offset: 36896},
																									expr: &litMatcher{
																										pos:        position{line: 883, col: 38, offset: 36897},
																										val:        ">>",
																										ignoreCase: false,
																									},
																								},
																								&anyMatcher{
																									line: 883, col: 42, offset: 36901,
																								},
																							},
																						},
																					},
																				},
																			},
																			&litMatcher{
																				pos:        position{line: 135, col: 33, offset: 5639},
																				val:        "]]",
																				ignoreCase: false,
																			},
																		},
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 131, col: 5, offset: 5542},
															run: (*parser).callonTable37,
															expr: &seqExpr{
																pos: position{line: 131, col: 5, offset: 5542},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 131, col: 5, offset: 5542},
																		val:        "[#",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 131, col: 10, offset: 5547},
																		label: "id",
																		expr: &actionExpr{
																			pos: position{line: 883, col: 7, offset: 36866},
																			run: (*parser).callonTable41,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 883, col: 7, offset: 36866},
																				expr: &seqExpr{
																					pos: position{line: 883, col: 8, offset: 36867},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 883, col: 8, offset: 36867},
																							expr: &choiceExpr{
																								pos: position{line: 899, col: 12, offset: 37169},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 899, col: 12, offset: 37169},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 899, col: 21, offset: 37178},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 883, col: 17, offset: 36876},
																							expr: &choiceExpr{
																								pos: position{line: 895, col: 7, offset: 37107},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 895, col: 7, offset: 37107},
																										val:        " ",
																										ignoreCase: false,
																									},
																									&actionExpr{
																										pos: position{line: 895, col: 13, offset: 37113},
																										run: (*parser).callonTable51,
																										expr: &litMatcher{
																											pos:        position{line: 895, col: 13, offset: 37113},
																											val:        "\t",
																											ignoreCase: false,
																										},
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 883, col: 21, offset: 36880},
																							expr: &litMatcher{
																								pos:        position{line: 883, col: 22, offset: 36881},
																								val:        "[",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 883, col: 26, offset: 36885},
																							expr: &litMatcher{
																								pos:        position{line: 883, col: 27, offset: 36886},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 883, col: 31, offset: 36890},
																							expr: &litMatcher{
																								pos:        position{line: 883, col: 32, offset: 36891},
																								val:        "<<",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 883, col: 37, offset: 36896},
																							expr: &litMatcher{
																								pos:        position{line: 883, col: 38, offset: 36897},
																								val:        ">>",
																								ignoreCase: false,
																							},
																						},
																						&anyMatcher{
																							line: 883, col: 42, offset: 36901,
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 131, col: 18, offset: 5555},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 141, col: 17, offset: 5848},
															run: (*parser).callonTable63,
															expr: &seqExpr{
																pos: position{line: 141, col: 17, offset: 5848},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 141, col: 17, offset: 5848},
																		val:        ".",
																		ignoreCase: false,
																	},
																	&notExpr{
																		pos: position{line: 141, col: 21, offset: 5852},
																		expr: &litMatcher{
																			pos:        position{line: 141, col: 22, offset: 5853},
																			val:        ".",
																			ignoreCase: false,
																		},
																	},
																	&notExpr{
																		pos: position{line: 141, col: 26, offset: 5857},
																		expr: &choiceExpr{
																			pos: position{line: 895, col: 7, offset: 37107},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 895, col: 7, offset: 37107},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 895, col: 13, offset: 37113},
																					run: (*parser).callonTable71,
																					expr: &litMatcher{
																						pos:        position{line: 895, col: 13, offset: 37113},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 141, col: 30, offset: 5861},
																		label: "title",
																		expr: &oneOrMoreExpr{
																			pos: position{line: 141, col: 36, offset: 5867},
																			expr: &seqExpr{
																				pos: position{line: 141, col: 37, offset: 5868},
																				exprs: []interface{}{
																					&notExpr{
																						pos: position{line: 141, col: 37, offset: 5868},
																						expr: &choiceExpr{
																							pos: position{line: 899, col: 12, offset: 37169},
																							alternatives: []interface{}{
																								&litMatcher{
																									pos:        position{line: 899, col: 12, offset: 37169},
																									val:        "\r\n",
																									ignoreCase: false,
																								},
																								&charClassMatcher{
																									pos:        position{line: 899, col: 21, offset: 37178},
																									val:        "[\\r\\n]",
																									chars:      []rune{'\r', '\n'},
																									ignoreCase: false,
																									inverted:   false,
																								},
																							},
																						},
																					},
																					&anyMatcher{
																						line: 141, col: 46, offset: 5877,
																					},
																				},
																			},
																		},
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 147, col: 16, offset: 6051},
															run: (*parser).callonTable81,
															expr: &seqExpr{
																pos: position{line: 147, col: 16, offset: 6051},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 147, col: 16, offset: 6051},
																		val:        "[.",
																		ignoreCase: false,
																	},
																	&notExpr{
																		pos: position{line: 147, col: 21, offset: 6056},
																		expr: &choiceExpr{
																			pos: position{line: 895, col: 7, offset: 37107},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 895, col: 7, offset: 37107},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 895, col: 13, offset: 37113},
																					run: (*parser).callonTable87,
																					expr: &litMatcher{
																						pos:        position{line: 895, col: 13, offset: 37113},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 147, col: 25, offset: 6060},
																		label: "role",
																		expr: &oneOrMoreExpr{
																			pos: position{line: 147, col: 30, offset: 6065},
																			expr: &seqExpr{
																				pos: position{line: 147, col: 31, offset: 6066},
																				exprs: []interface{}{
																					&notExpr{
																						pos: position{line: 147, col: 31, offset: 6066},
																						expr: &choiceExpr{
																							pos: position{line: 899, col: 12, offset: 37169},
																							alternatives: []interface{}{
																								&litMatcher{
																									pos:        position{line: 899, col: 12, offset: 37169},
																									val:        "\r\n",
																									ignoreCase: false,
																								},
																								&charClassMatcher{
																									pos:        position{line: 899, col: 21, offset: 37178},
																									val:        "[\\r\\n]",
																									chars:      []rune{'\r', '\n'},
																									ignoreCase: false,
																									inverted:   false,
																								},
																							},
																						},
																					},
																					&notExpr{
																						pos: position{line: 147, col: 40, offset: 6075},
																						expr: &litMatcher{
																							pos:        position{line: 147, col: 41, offset: 6076},
																							val:        "]",
																							ignoreCase: false,
																						},
																					},
																					&anyMatcher{
																						line: 147, col: 45, offset: 6080,
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 147, col: 49, offset: 6084},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 152, col: 30, offset: 6255},
															run: (*parser).callonTable100,
															expr: &seqExpr{
																pos: position{line: 152, col: 30, offset: 6255},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 152, col: 30, offset: 6255},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 152, col: 34, offset: 6259},
																		label: "k",
																		expr: &choiceExpr{
																			pos: position{line: 470, col: 19, offset: 18925},
																			alternatives: []interface{}{
																				&actionExpr{
																					pos: position{line: 470, col: 19, offset: 18925},
																					run: (*parser).callonTable105,
																					expr: &litMatcher{
																						pos:        position{line: 470, col: 19, offset: 18925},
																						val:        "TIP",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 472, col: 5, offset: 18963},
																					run: (*parser).callonTable107,
																					expr: &litMatcher{
																						pos:        position{line: 472, col: 5, offset: 18963},
																						val:        "NOTE",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 474, col: 5, offset: 19003},
																					run: (*parser).callonTable109,
																					expr: &litMatcher{
																						pos:        position{line: 474, col: 5, offset: 19003},
																						val:        "IMPORTANT",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 476, col: 5, offset: 19053},
																					run: (*parser).callonTable111,
																					expr: &litMatcher{
																						pos:        position{line: 476, col: 5, offset: 19053},
																						val:        "WARNING",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 478, col: 5, offset: 19099},
																					run: (*parser).callonTable113,
																					expr: &litMatcher{
																						pos:        position{line: 478, col: 5, offset: 19099},
																						val:        "CAUTION",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 152, col: 53, offset: 6278},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 175, col: 21, offset: 7013},
															run: (*parser).callonTable116,
															expr: &litMatcher{
																pos:        position{line: 175, col: 21, offset: 7013},
																val:        "[horizontal]",
																ignoreCase: false,
															},
														},
														&actionExpr{
															pos: position{line: 157, col: 19, offset: 6439},
															run: (*parser).callonTable118,
															expr: &seqExpr{
																pos: position{line: 157, col: 19, offset: 6439},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 157, col: 19, offset: 6439},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&notExpr{
																		pos: position{line: 157, col: 23, offset: 6443},
																		expr: &choiceExpr{
																			pos: position{line: 895, col: 7, offset: 37107},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 895, col: 7, offset: 37107},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 895, col: 13, offset: 37113},
																					run: (*parser).callonTable124,
																					expr: &litMatcher{
																						pos:        position{line: 895, col: 13, offset: 37113},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 157, col: 27, offset: 6447},
																		label: "attributes",
																		expr: &zeroOrMoreExpr{
																			pos: position{line: 157, col: 38, offset: 6458},
																			expr: &choiceExpr{
																				pos: position{line: 161, col: 21, offset: 6571},
																				alternatives: []interface{}{
																					&actionExpr{
																						pos: position{line: 161, col: 21, offset: 6571},
																						run: (*parser).callonTable129,
																						expr: &seqExpr{
																							pos: position{line: 161, col: 21, offset: 6571},
																							exprs: []interface{}{
																								&labeledExpr{
																									pos:   position{line: 161, col: 21, offset: 6571},
																									label: "key",
																									expr: &actionExpr{
																										pos: position{line: 167, col: 17, offset: 6861},
																										run: (*parser).callonTable132,
																										expr: &seqExpr{
																											pos: position{line: 167, col: 17, offset: 6861},
																											exprs: []interface{}{
																												&notExpr{
																													pos: position{line: 167, col: 17, offset: 6861},
																													expr: &actionExpr{
																														pos: position{line: 207, col: 14, offset: 8362},
																														run: (*parser).callonTable135,
																														expr: &litMatcher{
																															pos:        position{line: 207, col: 14, offset: 8362},
																															val:        "verse",
																															ignoreCase: false,
																														},
																													},
																												},
																												&labeledExpr{
																													pos:   position{line: 167, col: 28, offset: 6872},
																													label: "key",
																													expr: &oneOrMoreExpr{
																														pos: position{line: 167, col: 32, offset: 6876},
																														expr: &seqExpr{
																															pos: position{line: 167, col: 33, offset: 6877},
																															exprs: []interface{}{
																																&notExpr{
																																	pos: position{line: 167, col: 33, offset: 6877},
																																	expr: &litMatcher{
																																		pos:        position{line: 167, col: 34, offset: 6878},
																																		val:        "=",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 167, col: 38, offset: 6882},
																																	expr: &litMatcher{
																																		pos:        position{line: 167, col: 39, offset: 6883},
																																		val:        ",",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 167, col: 43, offset: 6887},
																																	expr: &litMatcher{
																																		pos:        position{line: 167, col: 44, offset: 6888},
																																		val:        "]",
																																		ignoreCase: false,
																																	},
																																},
																																&anyMatcher{
																																	line: 167, col: 48, offset: 6892,
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&litMatcher{
																									pos:        position{line: 161, col: 40, offset: 6590},
																									val:        "=",
																									ignoreCase: false,
																								},
																								&labeledExpr{
																									pos:   position{line: 161, col: 44, offset: 6594},
																									label: "value",
																									expr: &actionExpr{
																										pos: position{line: 171, col: 19, offset: 6940},
																										run: (*parser).callonTable149,
																										expr: &labeledExpr{
																											pos:   position{line: 171, col: 19, offset: 6940},
																											label: "value",
																											expr: &zeroOrMoreExpr{
																												pos: position{line: 171, col: 25, offset: 6946},
																												expr: &seqExpr{
																													pos: position{line: 171, col: 26, offset: 6947},
																													exprs: []interface{}{
																														&notExpr{
																															pos: position{line: 171, col: 26, offset: 6947},
																															expr: &litMatcher{
																																pos:        position{line: 171, col: 27, offset: 6948},
																																val:        "=",
																																ignoreCase: false,
																															},
																														},
																														&notExpr{
																															pos: position{line: 171, col: 31, offset: 6952},
																															expr: &litMatcher{
																																pos:        position{line: 171, col: 32, offset: 6953},
																																val:        ",",
																																ignoreCase: false,
																															},
																														},
																														&notExpr{
																															pos: position{line: 171, col: 36, offset: 6957},
																															expr: &litMatcher{
																																pos:        position{line: 171, col: 37, offset: 6958},
																																val:        "]",
																																ignoreCase: false,
																															},
																														},
																														&anyMatcher{
																															line: 171, col: 41, offset: 6962,
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&zeroOrOneExpr{
																									pos: position{line: 161, col: 67, offset: 6617},
																									expr: &litMatcher{
																										pos:        position{line: 161, col: 67, offset: 6617},
																										val:        ",",
																										ignoreCase: false,
																									},
																								},
																								&zeroOrMoreExpr{
																									pos: position{line: 161, col: 72, offset: 6622},
																									expr: &choiceExpr{
																										pos: position{line: 895, col: 7, offset: 37107},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 895, col: 7, offset: 37107},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 895, col: 13, offset: 37113},
																												run: (*parser).callonTable165,
																												expr: &litMatcher{
																													pos:        position{line: 895, col: 13, offset: 37113},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																					&actionExpr{
																						pos: position{line: 163, col: 5, offset: 6729},
																						run: (*parser).callonTable167,
																						expr: &seqExpr{
																							pos: position{line: 163, col: 5, offset: 6729},
																							exprs: []interface{}{
																								&labeledExpr{
																									pos:   position{line: 163, col: 5, offset: 6729},
																									label: "key",
																									expr: &actionExpr{
																										pos: position{line: 167, col: 17, offset: 6861},
																										run: (*parser).callonTable170,
																										expr: &seqExpr{
																											pos: position{line: 167, col: 17, offset: 6861},
																											exprs: []interface{}{
																												&notExpr{
																													pos: position{line: 167, col: 17, offset: 6861},
																													expr: &actionExpr{
																														pos: position{line: 207, col: 14, offset: 8362},
																														run: (*parser).callonTable173,
																														expr: &litMatcher{
																															pos:        position{line: 207, col: 14, offset: 8362},
																															val:        "verse",
																															ignoreCase: false,
																														},
																													},
																												},
																												&labeledExpr{
																													pos:   position{line: 167, col: 28, offset: 6872},
																													label: "key",
																													expr: &oneOrMoreExpr{
																														pos: position{line: 167, col: 32, offset: 6876},
																														expr: &seqExpr{
																															pos: position{line: 167, col: 33, offset: 6877},
																															exprs: []interface{}{
																																&notExpr{
																																	pos: position{line: 167, col: 33, offset: 6877},
																																	expr: &litMatcher{
																																		pos:        position{line: 167, col: 34, offset: 6878},
																																		val:        "=",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 167, col: 38, offset: 6882},
																																	expr: &litMatcher{
																																		pos:        position{line: 167, col: 39, offset: 6883},
																																		val:        ",",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 167, col: 43, offset: 6887},
																																	expr: &litMatcher{
																																		pos:        position{line: 167, col: 44, offset: 6888},
																																		val:        "]",
																																		ignoreCase: false,
																																	},
																																},
																																&anyMatcher{
																																	line: 167, col: 48, offset: 6892,
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&zeroOrOneExpr{
																									pos: position{line: 163, col: 24, offset: 6748},
																									expr: &litMatcher{
																										pos:        position{line: 163, col: 24, offset: 6748},
																										val:        ",",
																										ignoreCase: false,
																									},
																								},
																								&zeroOrMoreExpr{
																									pos: position{line: 163, col: 29, offset: 6753},
																									expr: &choiceExpr{
																										pos: position{line: 895, col: 7, offset: 37107},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 895, col: 7, offset: 37107},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 895, col: 13, offset: 37113},
																												run: (*parser).callonTable190,
																												expr: &litMatcher{
																													pos:        position{line: 895, col: 13, offset: 37113},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 157, col: 59, offset: 6479},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
													},
												},
											},
											&zeroOrMoreExpr{
												pos: position{line: 120, col: 131, offset: 5149},
												expr: &choiceExpr{
													pos: position{line: 895, col: 7, offset: 37107},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 895, col: 7, offset: 37107},
															val:        " ",
															ignoreCase: false,
														},
														&actionExpr{
															pos: position{line: 895, col: 13, offset: 37113},
															run: (*parser).callonTable196,
															expr: &litMatcher{
																pos:        position{line: 895, col: 13, offset: 37113},
																val:        "\t",
																ignoreCase: false,
															},
														},
													},
												},
											},
											&choiceExpr{
												pos: position{line: 903, col: 8, offset: 37209},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 899, col: 12, offset: 37169},
														val:        "\r\n",
														ignoreCase: false,
													},
													&charClassMatcher{
														pos:        position{line: 899, col: 21, offset: 37178},
														val:        "[\\r\\n]",
														chars:      []rune{'\r', '\n'},
														ignoreCase: false,
														inverted:   false,
													},
													&notExpr{
														pos: position{line: 901, col: 8, offset: 37198},
														expr: &anyMatcher{
															line: 901, col: 9, offset: 37199,
														},
													},
												},
											},
										},
									},
								},
							},
						},
						&litMatcher{
							pos:        position{line: 797, col: 19, offset: 33744},
							val:        "|===",
							ignoreCase: false,
						},
						&zeroOrMoreExpr{
							pos: position{line: 788, col: 24, offset: 33443},
							expr: &choiceExpr{
								pos: position{line: 895, col: 7, offset: 37107},
								alternatives: []interface{}{
									&litMatcher{
										pos:        position{line: 895, col: 7, offset: 37107},
										val:        " ",
										ignoreCase: false,
									},
									&actionExpr{
										pos: position{line: 895, col: 13, offset: 37113},
										run: (*parser).callonTable207,
										expr: &litMatcher{
											pos:        position{line: 895, col: 13, offset: 37113},
											val:        "\t",
											ignoreCase: false,
										},
									},
								},
							},
						},
						&choiceExpr{
							pos: position{line: 899, col: 12, offset: 37169},
							alternatives: []interface{}{
								&litMatcher{
									pos:        position{line: 899, col: 12, offset: 37169},
									val:        "\r\n",
									ignoreCase: false,
								},
								&charClassMatcher{
									pos:        position{line: 899, col: 21, offset: 37178},
									val:        "[\\r\\n]",
									chars:      []rune{'\r', '\n'},
									ignoreCase: false,
									inverted:   false,
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 789, col: 9, offset: 33463},
							label: "header",
							expr: &zeroOrOneExpr{
								pos: position{line: 789, col: 16, offset: 33470},
								expr: &ruleRefExpr{
									pos:  position{line: 789, col: 17, offset: 33471},
									name: "TableLineHeader",
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 790, col: 9, offset: 33497},
							label: "lines",
							expr: &zeroOrMoreExpr{
								pos: position{line: 790, col: 15, offset: 33503},
								expr: &ruleRefExpr{
									pos:  position{line: 790, col: 16, offset: 33504},
									name: "TableLine",
								},
							},
						},
						&choiceExpr{
							pos: position{line: 791, col: 10, offset: 33525},
							alternatives: []interface{}{
								&seqExpr{
									pos: position{line: 791, col: 11, offset: 33526},
									exprs: []interface{}{
										&litMatcher{
											pos:        position{line: 797, col: 19, offset: 33744},
											val:        "|===",
											ignoreCase: false,
										},
										&zeroOrMoreExpr{
											pos: position{line: 791, col: 26, offset: 33541},
											expr: &choiceExpr{
												pos: position{line: 895, col: 7, offset: 37107},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 895, col: 7, offset: 37107},
														val:        " ",
														ignoreCase: false,
													},
													&actionExpr{
														pos: position{line: 895, col: 13, offset: 37113},
														run: (*parser).callonTable224,
														expr: &litMatcher{
															pos:        position{line: 895, col: 13, offset: 37113},
															val:        "\t",
															ignoreCase: false,
														},
													},
												},
											},
										},
										&choiceExpr{
											pos: position{line: 903, col: 8, offset: 37209},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 899, col: 12, offset: 37169},
													val:        "\r\n",
													ignoreCase: false,
												},
												&charClassMatcher{
													pos:        position{line: 899, col: 21, offset: 37178},
													val:        "[\\r\\n]",
													chars:      []rune{'\r', '\n'},
													ignoreCase: false,
													inverted:   false,
												},
												&notExpr{
													pos: position{line: 901, col: 8, offset: 37198},
													expr: &anyMatcher{
														line: 901, col: 9, offset: 37199,
													},
												},
											},
										},
									},
								},
								&notExpr{
									pos: position{line: 901, col: 8, offset: 37198},
									expr: &anyMatcher{
										line: 901, col: 9, offset: 37199,
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "TableLineHeader",
			pos:  position{line: 800, col: 1, offset: 33815},
			expr: &actionExpr{
				pos: position{line: 800, col: 20, offset: 33834},
				run: (*parser).callonTableLineHeader1,
				expr: &seqExpr{
					pos: position{line: 800, col: 20, offset: 33834},
					exprs: []interface{}{
						&notExpr{
							pos: position{line: 800, col: 20, offset: 33834},
							expr: &litMatcher{
								pos:        position{line: 797, col: 19, offset: 33744},
								val:        "|===",
								ignoreCase: false,
							},
						},
						&labeledExpr{
							pos:   position{line: 800, col: 36, offset: 33850},
							label: "cells",
							expr: &oneOrMoreExpr{
								pos: position{line: 800, col: 42, offset: 33856},
								expr: &ruleRefExpr{
									pos:  position{line: 800, col: 43, offset: 33857},
									name: "TableCell",
								},
							},
						},
						&choiceExpr{
							pos: position{line: 903, col: 8, offset: 37209},
							alternatives: []interface{}{
								&litMatcher{
									pos:        position{line: 899, col: 12, offset: 37169},
									val:        "\r\n",
									ignoreCase: false,
								},
								&charClassMatcher{
									pos:        position{line: 899, col: 21, offset: 37178},
									val:        "[\\r\\n]",
									chars:      []rune{'\r', '\n'},
									ignoreCase: false,
									inverted:   false,
								},
								&notExpr{
									pos: position{line: 901, col: 8, offset: 37198},
									expr: &anyMatcher{
										line: 901, col: 9, offset: 37199,
									},
								},
							},
						},
						&actionExpr{
							pos: position{line: 864, col: 14, offset: 36495},
							run: (*parser).callonTableLineHeader13,
							expr: &seqExpr{
								pos: position{line: 864, col: 14, offset: 36495},
								exprs: []interface{}{
									&notExpr{
										pos: position{line: 864, col: 14, offset: 36495},
										expr: &notExpr{
											pos: position{line: 901, col: 8, offset: 37198},
											expr: &anyMatcher{
												line: 901, col: 9, offset: 37199,
											},
										},
									},
									&zeroOrMoreExpr{
										pos: position{line: 864, col: 19, offset: 36500},
										expr: &choiceExpr{
											pos: position{line: 895, col: 7, offset: 37107},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 895, col: 7, offset: 37107},
													val:        " ",
													ignoreCase: false,
												},
												&actionExpr{
													pos: position{line: 895, col: 13, offset: 37113},
													run: (*parser).callonTableLineHeader21,
													expr: &litMatcher{
														pos:        position{line: 895, col: 13, offset: 37113},
														val:        "\t",
														ignoreCase: false,
													},
												},
											},
										},
									},
									&choiceExpr{
										pos: position{line: 903, col: 8, offset: 37209},
										alternatives: []interface{}{
											&litMatcher{
												pos:        position{line: 899, col: 12, offset: 37169},
												val:        "\r\n",
												ignoreCase: false,
											},
											&charClassMatcher{
												pos:        position{line: 899, col: 21, offset: 37178},
												val:        "[\\r\\n]",
												chars:      []rune{'\r', '\n'},
												ignoreCase: false,
												inverted:   false,
											},
											&notExpr{
												pos: position{line: 901, col: 8, offset: 37198},
												expr: &anyMatcher{
													line: 901, col: 9, offset: 37199,
												},
											},
										},
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "TableLine",
			pos:  position{line: 804, col: 1, offset: 33941},
			expr: &actionExpr{
				pos: position{line: 804, col: 14, offset: 33954},
				run: (*parser).callonTableLine1,
				expr: &seqExpr{
					pos: position{line: 804, col: 14, offset: 33954},
					exprs: []interface{}{
						&notExpr{
							pos: position{line: 804, col: 14, offset: 33954},
							expr: &litMatcher{
								pos:        position{line: 797, col: 19, offset: 33744},
								val:        "|===",
								ignoreCase: false,
							},
						},
						&labeledExpr{
							pos:   position{line: 804, col: 30, offset: 33970},
							label: "cells",
							expr: &oneOrMoreExpr{
								pos: position{line: 804, col: 36, offset: 33976},
								expr: &ruleRefExpr{
									pos:  position{line: 804, col: 37, offset: 33977},
									name: "TableCell",
								},
							},
						},
						&choiceExpr{
							pos: position{line: 903, col: 8, offset: 37209},
							alternatives: []interface{}{
								&litMatcher{
									pos:        position{line: 899, col: 12, offset: 37169},
									val:        "\r\n",
									ignoreCase: false,
								},
								&charClassMatcher{
									pos:        position{line: 899, col: 21, offset: 37178},
									val:        "[\\r\\n]",
									chars:      []rune{'\r', '\n'},
									ignoreCase: false,
									inverted:   false,
								},
								&notExpr{
									pos: position{line: 901, col: 8, offset: 37198},
									expr: &anyMatcher{
										line: 901, col: 9, offset: 37199,
									},
								},
							},
						},
						&zeroOrMoreExpr{
							pos: position{line: 804, col: 53, offset: 33993},
							expr: &actionExpr{
								pos: position{line: 864, col: 14, offset: 36495},
								run: (*parser).callonTableLine14,
								expr: &seqExpr{
									pos: position{line: 864, col: 14, offset: 36495},
									exprs: []interface{}{
										&notExpr{
											pos: position{line: 864, col: 14, offset: 36495},
											expr: &notExpr{
												pos: position{line: 901, col: 8, offset: 37198},
												expr: &anyMatcher{
													line: 901, col: 9, offset: 37199,
												},
											},
										},
										&zeroOrMoreExpr{
											pos: position{line: 864, col: 19, offset: 36500},
											expr: &choiceExpr{
												pos: position{line: 895, col: 7, offset: 37107},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 895, col: 7, offset: 37107},
														val:        " ",
														ignoreCase: false,
													},
													&actionExpr{
														pos: position{line: 895, col: 13, offset: 37113},
														run: (*parser).callonTableLine22,
														expr: &litMatcher{
															pos:        position{line: 895, col: 13, offset: 37113},
															val:        "\t",
															ignoreCase: false,
														},
													},
												},
											},
										},
										&choiceExpr{
											pos: position{line: 903, col: 8, offset: 37209},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 899, col: 12, offset: 37169},
													val:        "\r\n",
													ignoreCase: false,
												},
												&charClassMatcher{
													pos:        position{line: 899, col: 21, offset: 37178},
													val:        "[\\r\\n]",
													chars:      []rune{'\r', '\n'},
													ignoreCase: false,
													inverted:   false,
												},
												&notExpr{
													pos: position{line: 901, col: 8, offset: 37198},
													expr: &anyMatcher{
														line: 901, col: 9, offset: 37199,
													},
												},
											},
										},
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "TableCell",
			pos:  position{line: 808, col: 1, offset: 34062},
			expr: &actionExpr{
				pos: position{line: 808, col: 14, offset: 34075},
				run: (*parser).callonTableCell1,
				expr: &seqExpr{
					pos: position{line: 808, col: 14, offset: 34075},
					exprs: []interface{}{
						&litMatcher{
							pos:        position{line: 795, col: 23, offset: 33717},
							val:        "|",
							ignoreCase: false,
						},
						&zeroOrMoreExpr{
							pos: position{line: 795, col: 27, offset: 33721},
							expr: &choiceExpr{
								pos: position{line: 895, col: 7, offset: 37107},
								alternatives: []interface{}{
									&litMatcher{
										pos:        position{line: 895, col: 7, offset: 37107},
										val:        " ",
										ignoreCase: false,
									},
									&actionExpr{
										pos: position{line: 895, col: 13, offset: 37113},
										run: (*parser).callonTableCell7,
										expr: &litMatcher{
											pos:        position{line: 895, col: 13, offset: 37113},
											val:        "\t",
											ignoreCase: false,
										},
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 808, col: 33, offset: 34094},
							label: "elements",
							expr: &oneOrMoreExpr{
								pos: position{line: 808, col: 42, offset: 34103},
								expr: &seqExpr{
									pos: position{line: 808, col: 43, offset: 34104},
									exprs: []interface{}{
										&notExpr{
											pos: position{line: 808, col: 43, offset: 34104},
											expr: &seqExpr{
												pos: position{line: 795, col: 23, offset: 33717},
												exprs: []interface{}{
													&litMatcher{
														pos:        position{line: 795, col: 23, offset: 33717},
														val:        "|",
														ignoreCase: false,
													},
													&zeroOrMoreExpr{
														pos: position{line: 795, col: 27, offset: 33721},
														expr: &choiceExpr{
															pos: position{line: 895, col: 7, offset: 37107},
															alternatives: []interface{}{
																&litMatcher{
																	pos:        position{line: 895, col: 7, offset: 37107},
																	val:        " ",
																	ignoreCase: false,
																},
																&actionExpr{
																	pos: position{line: 895, col: 13, offset: 37113},
																	run: (*parser).callonTableCell18,
																	expr: &litMatcher{
																		pos:        position{line: 895, col: 13, offset: 37113},
																		val:        "\t",
																		ignoreCase: false,
																	},
																},
															},
														},
													},
												},
											},
										},
										&notExpr{
											pos: position{line: 808, col: 63, offset: 34124},
											expr: &choiceExpr{
												pos: position{line: 903, col: 8, offset: 37209},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 899, col: 12, offset: 37169},
														val:        "\r\n",
														ignoreCase: false,
													},
													&charClassMatcher{
														pos:        position{line: 899, col: 21, offset: 37178},
														val:        "[\\r\\n]",
														chars:      []rune{'\r', '\n'},
														ignoreCase: false,
														inverted:   false,
													},
													&notExpr{
														pos: position{line: 901, col: 8, offset: 37198},
														expr: &anyMatcher{
															line: 901, col: 9, offset: 37199,
														},
													},
												},
											},
										},
										&zeroOrMoreExpr{
											pos: position{line: 808, col: 68, offset: 34129},
											expr: &choiceExpr{
												pos: position{line: 895, col: 7, offset: 37107},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 895, col: 7, offset: 37107},
														val:        " ",
														ignoreCase: false,
													},
													&actionExpr{
														pos: position{line: 895, col: 13, offset: 37113},
														run: (*parser).callonTableCell29,
														expr: &litMatcher{
															pos:        position{line: 895, col: 13, offset: 37113},
															val:        "\t",
															ignoreCase: false,
														},
													},
												},
											},
										},
										&ruleRefExpr{
											pos:  position{line: 808, col: 72, offset: 34133},
											name: "InlineElement",
										},
										&zeroOrMoreExpr{
											pos: position{line: 808, col: 86, offset: 34147},
											expr: &choiceExpr{
												pos: position{line: 895, col: 7, offset: 37107},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 895, col: 7, offset: 37107},
														val:        " ",
														ignoreCase: false,
													},
													&actionExpr{
														pos: position{line: 895, col: 13, offset: 37113},
														run: (*parser).callonTableCell35,
														expr: &litMatcher{
															pos:        position{line: 895, col: 13, offset: 37113},
															val:        "\t",
															ignoreCase: false,
														},
													},
												},
											},
										},
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "WS",
			pos:  position{line: 895, col: 1, offset: 37101},
			expr: &choiceExpr{
				pos: position{line: 895, col: 7, offset: 37107},
				alternatives: []interface{}{
					&litMatcher{
						pos:        position{line: 895, col: 7, offset: 37107},
						val:        " ",
						ignoreCase: false,
					},
					&actionExpr{
						pos: position{line: 895, col: 13, offset: 37113},
						run: (*parser).callonWS3,
						expr: &litMatcher{
							pos:        position{line: 895, col: 13, offset: 37113},
							val:        "\t",
							ignoreCase: false,
						},
					},
				},
			},
		},
		{
			name: "NEWLINE",
			pos:  position{line: 899, col: 1, offset: 37158},
			expr: &choiceExpr{
				pos: position{line: 899, col: 12, offset: 37169},
				alternatives: []interface{}{
					&litMatcher{
						pos:        position{line: 899, col: 12, offset: 37169},
						val:        "\r\n",
						ignoreCase: false,
					},
					&charClassMatcher{
						pos:        position{line: 899, col: 21, offset: 37178},
						val:        "[\\r\\n]",
						chars:      []rune{'\r', '\n'},
						ignoreCase: false,
						inverted:   false,
					},
				},
			},
		},
	},
}

func (c *current) onDocument1(frontMatter, documentHeader, blocks interface{}) (interface{}, error) {
	return types.NewDocument(frontMatter, documentHeader, blocks.([]interface{}))
}

func (p *parser) callonDocument1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocument1(stack["frontMatter"], stack["documentHeader"], stack["blocks"])
}

func (c *current) onDocumentBlock16() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock16() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock16()
}

func (c *current) onDocumentBlock8() (interface{}, error) {
	return types.NewBlankLine()
}

func (p *parser) callonDocumentBlock8() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock8()
}

func (c *current) onDocumentBlock35() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock35() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock35()
}

func (c *current) onDocumentBlock23(name interface{}) (interface{}, error) {
	return types.NewDocumentAttributeDeclaration(name.([]interface{}), nil)
}

func (p *parser) callonDocumentBlock23() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock23(stack["name"])
}

func (c *current) onDocumentBlock54() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock54() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock54()
}

func (c *current) onDocumentBlock42(name, value interface{}) (interface{}, error) {
	return types.NewDocumentAttributeDeclaration(name.([]interface{}), value.([]interface{}))
}

func (p *parser) callonDocumentBlock42() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock42(stack["name"], stack["value"])
}

func (c *current) onDocumentBlock81() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock81() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock81()
}

func (c *current) onDocumentBlock69(name interface{}) (interface{}, error) {
	return types.NewDocumentAttributeReset(name.([]interface{}))
}

func (p *parser) callonDocumentBlock69() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock69(stack["name"])
}

func (c *current) onDocumentBlock100() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock100() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock100()
}

func (c *current) onDocumentBlock88(name interface{}) (interface{}, error) {
	return types.NewDocumentAttributeReset(name.([]interface{}))
}

func (p *parser) callonDocumentBlock88() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock88(stack["name"])
}

func (c *current) onDocumentBlock137() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock137() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock137()
}

func (c *current) onDocumentBlock127() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock127() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock127()
}

func (c *current) onDocumentBlock123(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonDocumentBlock123() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock123(stack["id"])
}

func (c *current) onDocumentBlock121(id interface{}) (interface{}, error) {
	return id, nil
}

func (p *parser) callonDocumentBlock121() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock121(stack["id"])
}

func (c *current) onDocumentBlock163() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock163() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock163()
}

func (c *current) onDocumentBlock153() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock153() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock153()
}

func (c *current) onDocumentBlock149(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonDocumentBlock149() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock149(stack["id"])
}

func (c *current) onDocumentBlock183() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock183() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock183()
}

func (c *current) onDocumentBlock175(title interface{}) (interface{}, error) {
	return types.NewElementTitle(title.([]interface{}))
}

func (p *parser) callonDocumentBlock175() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock175(stack["title"])
}

func (c *current) onDocumentBlock199() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock199() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock199()
}

func (c *current) onDocumentBlock193(role interface{}) (interface{}, error) {
	return types.NewElementRole(role.([]interface{}))
}

func (p *parser) callonDocumentBlock193() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock193(stack["role"])
}

func (c *current) onDocumentBlock217() (interface{}, error) {
	return types.Tip, nil
}

func (p *parser) callonDocumentBlock217() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock217()
}

func (c *current) onDocumentBlock219() (interface{}, error) {
	return types.Note, nil
}

func (p *parser) callonDocumentBlock219() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock219()
}

func (c *current) onDocumentBlock221() (interface{}, error) {
	return types.Important, nil
}

func (p *parser) callonDocumentBlock221() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock221()
}

func (c *current) onDocumentBlock223() (interface{}, error) {
	return types.Warning, nil
}

func (p *parser) callonDocumentBlock223() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock223()
}

func (c *current) onDocumentBlock225() (interface{}, error) {
	return types.Caution, nil
}

func (p *parser) callonDocumentBlock225() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock225()
}

func (c *current) onDocumentBlock212(k interface{}) (interface{}, error) {
	return types.NewAdmonitionAttribute(k.(types.AdmonitionKind))
}

func (p *parser) callonDocumentBlock212() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock212(stack["k"])
}

func (c *current) onDocumentBlock228() (interface{}, error) {
	return types.ElementAttributes{"layout": "horizontal"}, nil
}

func (p *parser) callonDocumentBlock228() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock228()
}

func (c *current) onDocumentBlock236() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock236() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock236()
}

func (c *current) onDocumentBlock247() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock247() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock247()
}

func (c *current) onDocumentBlock244(key interface{}) (interface{}, error) {
	return key, nil
}

func (p *parser) callonDocumentBlock244() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock244(stack["key"])
}

func (c *current) onDocumentBlock261(value interface{}) (interface{}, error) {
	return value, nil
}

func (p *parser) callonDocumentBlock261() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock261(stack["value"])
}

func (c *current) onDocumentBlock277() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock277() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock277()
}

func (c *current) onDocumentBlock241(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.([]interface{}), value.([]interface{}))
}

func (p *parser) callonDocumentBlock241() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock241(stack["key"], stack["value"])
}

func (c *current) onDocumentBlock285() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock285() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock285()
}

func (c *current) onDocumentBlock282(key interface{}) (interface{}, error) {
	return key, nil
}

func (p *parser) callonDocumentBlock282() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock282(stack["key"])
}

func (c *current) onDocumentBlock302() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock302() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock302()
}

func (c *current) onDocumentBlock279(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.([]interface{}), nil)
}

func (p *parser) callonDocumentBlock279() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock279(stack["key"])
}

func (c *current) onDocumentBlock230(attributes interface{}) (interface{}, error) {
	return types.NewAttributeGroup(attributes.([]interface{}))
}

func (p *parser) callonDocumentBlock230() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock230(stack["attributes"])
}

func (c *current) onDocumentBlock308() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock308() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock308()
}

func (c *current) onDocumentBlock117(attr interface{}) (interface{}, error) {
	return attr, nil // avoid returning something like `[]interface{}{attr, EOL}`
}

func (p *parser) callonDocumentBlock117() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock117(stack["attr"])
}

func (c *current) onDocumentBlock327() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock327() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock327()
}

func (c *current) onDocumentBlock317() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock317() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock317()
}

func (c *current) onDocumentBlock340(value interface{}) (interface{}, error) {
	// attribute is followed by "," or "]" (but do not consume the latter)
	return value, nil
}

func (p *parser) callonDocumentBlock340() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock340(stack["value"])
}

func (c *current) onDocumentBlock357(value interface{}) (interface{}, error) {
	// attribute is followed by "," or "]" (but do not consume the latter)
	return value, nil
}

func (p *parser) callonDocumentBlock357() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock357(stack["value"])
}

func (c *current) onDocumentBlock374(value interface{}) (interface{}, error) {
	// attribute is followed by "," or "]" (but do not consume the latter)
	return value, nil
}

func (p *parser) callonDocumentBlock374() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock374(stack["value"])
}

func (c *current) onDocumentBlock399() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock399() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock399()
}

func (c *current) onDocumentBlock396(key interface{}) (interface{}, error) {
	return key, nil
}

func (p *parser) callonDocumentBlock396() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock396(stack["key"])
}

func (c *current) onDocumentBlock413(value interface{}) (interface{}, error) {
	return value, nil
}

func (p *parser) callonDocumentBlock413() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock413(stack["value"])
}

func (c *current) onDocumentBlock429() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock429() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock429()
}

func (c *current) onDocumentBlock393(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.([]interface{}), value.([]interface{}))
}

func (p *parser) callonDocumentBlock393() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock393(stack["key"], stack["value"])
}

func (c *current) onDocumentBlock437() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock437() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock437()
}

func (c *current) onDocumentBlock434(key interface{}) (interface{}, error) {
	return key, nil
}

func (p *parser) callonDocumentBlock434() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock434(stack["key"])
}

func (c *current) onDocumentBlock454() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock454() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock454()
}

func (c *current) onDocumentBlock431(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.([]interface{}), nil)
}

func (p *parser) callonDocumentBlock431() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock431(stack["key"])
}

func (c *current) onDocumentBlock336(alt, width, height, otherAttrs interface{}) (interface{}, error) {
	return types.NewImageAttributes(alt.([]interface{}), width.([]interface{}), height.([]interface{}), otherAttrs.([]interface{}))

}

func (p *parser) callonDocumentBlock336() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock336(stack["alt"], stack["width"], stack["height"], stack["otherAttrs"])
}

func (c *current) onDocumentBlock461(value interface{}) (interface{}, error) {
	// attribute is followed by "," or "]" (but do not consume the latter)
	return value, nil
}

func (p *parser) callonDocumentBlock461() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock461(stack["value"])
}

func (c *current) onDocumentBlock478(value interface{}) (interface{}, error) {
	// attribute is followed by "," or "]" (but do not consume the latter)
	return value, nil
}

func (p *parser) callonDocumentBlock478() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock478(stack["value"])
}

func (c *current) onDocumentBlock503() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock503() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock503()
}

func (c *current) onDocumentBlock500(key interface{}) (interface{}, error) {
	return key, nil
}

func (p *parser) callonDocumentBlock500() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock500(stack["key"])
}

func (c *current) onDocumentBlock517(value interface{}) (interface{}, error) {
	return value, nil
}

func (p *parser) callonDocumentBlock517() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock517(stack["value"])
}

func (c *current) onDocumentBlock533() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock533() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock533()
}

func (c *current) onDocumentBlock497(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.([]interface{}), value.([]interface{}))
}

func (p *parser) callonDocumentBlock497() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock497(stack["key"], stack["value"])
}

func (c *current) onDocumentBlock541() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock541() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock541()
}

func (c *current) onDocumentBlock538(key interface{}) (interface{}, error) {
	return key, nil
}

func (p *parser) callonDocumentBlock538() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock538(stack["key"])
}

func (c *current) onDocumentBlock558() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock558() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock558()
}

func (c *current) onDocumentBlock535(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.([]interface{}), nil)
}

func (p *parser) callonDocumentBlock535() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock535(stack["key"])
}

func (c *current) onDocumentBlock457(alt, width, otherAttrs interface{}) (interface{}, error) {
	return types.NewImageAttributes(alt.([]interface{}), width.([]interface{}), nil, otherAttrs.([]interface{}))

}

func (p *parser) callonDocumentBlock457() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock457(stack["alt"], stack["width"], stack["otherAttrs"])
}

func (c *current) onDocumentBlock565(value interface{}) (interface{}, error) {
	// attribute is followed by "," or "]" (but do not consume the latter)
	return value, nil
}

func (p *parser) callonDocumentBlock565() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock565(stack["value"])
}

func (c *current) onDocumentBlock590() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock590() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock590()
}

func (c *current) onDocumentBlock587(key interface{}) (interface{}, error) {
	return key, nil
}

func (p *parser) callonDocumentBlock587() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock587(stack["key"])
}

func (c *current) onDocumentBlock604(value interface{}) (interface{}, error) {
	return value, nil
}

func (p *parser) callonDocumentBlock604() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock604(stack["value"])
}

func (c *current) onDocumentBlock620() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock620() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock620()
}

func (c *current) onDocumentBlock584(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.([]interface{}), value.([]interface{}))
}

func (p *parser) callonDocumentBlock584() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock584(stack["key"], stack["value"])
}

func (c *current) onDocumentBlock628() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock628() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock628()
}

func (c *current) onDocumentBlock625(key interface{}) (interface{}, error) {
	return key, nil
}

func (p *parser) callonDocumentBlock625() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock625(stack["key"])
}

func (c *current) onDocumentBlock645() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock645() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock645()
}

func (c *current) onDocumentBlock622(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.([]interface{}), nil)
}

func (p *parser) callonDocumentBlock622() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock622(stack["key"])
}

func (c *current) onDocumentBlock561(alt, otherAttrs interface{}) (interface{}, error) {
	return types.NewImageAttributes(alt.([]interface{}), nil, nil, otherAttrs.([]interface{}))

}

func (p *parser) callonDocumentBlock561() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock561(stack["alt"], stack["otherAttrs"])
}

func (c *current) onDocumentBlock660() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock660() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock660()
}

func (c *current) onDocumentBlock657(key interface{}) (interface{}, error) {
	return key, nil
}

func (p *parser) callonDocumentBlock657() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock657(stack["key"])
}

func (c *current) onDocumentBlock674(value interface{}) (interface{}, error) {
	return value, nil
}

func (p *parser) callonDocumentBlock674() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock674(stack["value"])
}

func (c *current) onDocumentBlock690() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock690() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock690()
}

func (c *current) onDocumentBlock654(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.([]interface{}), value.([]interface{}))
}

func (p *parser) callonDocumentBlock654() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock654(stack["key"], stack["value"])
}

func (c *current) onDocumentBlock698() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock698() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock698()
}

func (c *current) onDocumentBlock695(key interface{}) (interface{}, error) {
	return key, nil
}

func (p *parser) callonDocumentBlock695() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock695(stack["key"])
}

func (c *current) onDocumentBlock715() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock715() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock715()
}

func (c *current) onDocumentBlock692(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.([]interface{}), nil)
}

func (p *parser) callonDocumentBlock692() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock692(stack["key"])
}

func (c *current) onDocumentBlock648(otherAttrs interface{}) (interface{}, error) {
	return types.NewImageAttributes(nil, nil, nil, otherAttrs.([]interface{}))

}

func (p *parser) callonDocumentBlock648() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock648(stack["otherAttrs"])
}

func (c *current) onDocumentBlock721() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock721() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock721()
}

func (c *current) onDocumentBlock113(attributes, path, inlineAttributes interface{}) (interface{}, error) {
	return types.NewBlockImage(path.(string), attributes.([]interface{}), inlineAttributes.(types.ElementAttributes))
}

func (p *parser) callonDocumentBlock113() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock113(stack["attributes"], stack["path"], stack["inlineAttributes"])
}

func (c *current) onDocumentBlock734() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock734() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock734()
}

func (c *current) onDocumentBlock758() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock758() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock758()
}

func (c *current) onDocumentBlock750() (interface{}, error) {
	return types.NewBlankLine()
}

func (p *parser) callonDocumentBlock750() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock750()
}

func (c *current) onDocumentBlock741(content interface{}) (interface{}, error) {

	return content, nil
}

func (p *parser) callonDocumentBlock741() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock741(stack["content"])
}

func (c *current) onDocumentBlock779() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock779() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock779()
}

func (c *current) onDocumentBlock771() (interface{}, error) {
	return types.NewBlankLine()
}

func (p *parser) callonDocumentBlock771() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock771()
}

func (c *current) onDocumentBlock728(spaces, content interface{}) (interface{}, error) {
	return types.NewLiteralBlock(spaces.([]interface{}), content.([]interface{}))
}

func (p *parser) callonDocumentBlock728() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock728(stack["spaces"], stack["content"])
}

func (c *current) onDocumentBlock796() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock796() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock796()
}

func (c *current) onDocumentBlock813() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock813() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock813()
}

func (c *current) onDocumentBlock790(content interface{}) (interface{}, error) {
	return types.NewLiteralBlock([]interface{}{}, content.([]interface{}))
}

func (p *parser) callonDocumentBlock790() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock790(stack["content"])
}

func (c *current) onDocumentBlock828() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock828() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock828()
}

func (c *current) onDocumentBlock851() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock851() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock851()
}

func (c *current) onDocumentBlock843() (interface{}, error) {
	return types.NewBlankLine()
}

func (p *parser) callonDocumentBlock843() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock843()
}

func (c *current) onDocumentBlock834(content interface{}) (interface{}, error) {

	return content, nil
}

func (p *parser) callonDocumentBlock834() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock834(stack["content"])
}

func (c *current) onDocumentBlock872() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock872() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock872()
}

func (c *current) onDocumentBlock864() (interface{}, error) {
	return types.NewBlankLine()
}

func (p *parser) callonDocumentBlock864() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock864()
}

func (c *current) onDocumentBlock822(content interface{}) (interface{}, error) {
	return types.NewLiteralBlock([]interface{}{}, content.([]interface{}))
}

func (p *parser) callonDocumentBlock822() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock822(stack["content"])
}

func (c *current) onDocumentBlock1(block interface{}) (interface{}, error) {
	// element attribute alone should be take recognized as such
	return block, nil
}

func (p *parser) callonDocumentBlock1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock1(stack["block"])
}

func (c *current) onFrontMatter10() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonFrontMatter10() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFrontMatter10()
}

func (c *current) onFrontMatter1(content interface{}) (interface{}, error) {
	return types.NewYamlFrontMatter(content.(string))
}

func (p *parser) callonFrontMatter1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFrontMatter1(stack["content"])
}

func (c *current) onDocumentHeader13() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader13() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader13()
}

func (c *current) onDocumentHeader24() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader24() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader24()
}

func (c *current) onDocumentHeader41() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader41() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader41()
}

func (c *current) onDocumentHeader47() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader47() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader47()
}

func (c *current) onDocumentHeader65() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader65() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader65()
}

func (c *current) onDocumentHeader71() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader71() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader71()
}

func (c *current) onDocumentHeader89() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader89() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader89()
}

func (c *current) onDocumentHeader95() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader95() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader95()
}

func (c *current) onDocumentHeader117() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader117() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader117()
}

func (c *current) onDocumentHeader124() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader124() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader124()
}

func (c *current) onDocumentHeader19(namePart1, namePart2, namePart3, email interface{}) (interface{}, error) {
	return types.NewDocumentAuthor(namePart1, namePart2, namePart3, email)
}

func (p *parser) callonDocumentHeader19() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader19(stack["namePart1"], stack["namePart2"], stack["namePart3"], stack["email"])
}

func (c *current) onDocumentHeader8(authors interface{}) (interface{}, error) {
	return types.NewDocumentAuthors(authors.([]interface{}))
}

func (p *parser) callonDocumentHeader8() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader8(stack["authors"])
}

func (c *current) onDocumentHeader136() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader136() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader136()
}

func (c *current) onDocumentHeader145() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader145() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader145()
}

func (c *current) onDocumentHeader162() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader162() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader162()
}

func (c *current) onDocumentHeader168() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader168() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader168()
}

func (c *current) onDocumentHeader238() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader238() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader238()
}

func (c *current) onDocumentHeader245() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader245() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader245()
}

func (c *current) onDocumentHeader140(namePart1, namePart2, namePart3, email interface{}) (interface{}, error) {
	return types.NewDocumentAuthor(namePart1, namePart2, namePart3, email)
}

func (p *parser) callonDocumentHeader140() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader140(stack["namePart1"], stack["namePart2"], stack["namePart3"], stack["email"])
}

func (c *current) onDocumentHeader131(author interface{}) (interface{}, error) {
	return []types.DocumentAuthor{author.(types.DocumentAuthor)}, nil
}

func (p *parser) callonDocumentHeader131() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader131(stack["author"])
}

func (c *current) onDocumentHeader254() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader254() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader254()
}

func (c *current) onDocumentHeader297() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader297() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader297()
}

func (c *current) onDocumentHeader249(revnumber, revdate, revremark interface{}) (interface{}, error) {
	return types.NewDocumentRevision(revnumber, revdate, revremark)
}

func (p *parser) callonDocumentHeader249() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader249(stack["revnumber"], stack["revdate"], stack["revremark"])
}

func (c *current) onDocumentHeader349() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader349() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader349()
}

func (c *current) onDocumentHeader337(name interface{}) (interface{}, error) {
	return types.NewDocumentAttributeDeclaration(name.([]interface{}), nil)
}

func (p *parser) callonDocumentHeader337() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader337(stack["name"])
}

func (c *current) onDocumentHeader368() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader368() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader368()
}

func (c *current) onDocumentHeader356(name, value interface{}) (interface{}, error) {
	return types.NewDocumentAttributeDeclaration(name.([]interface{}), value.([]interface{}))
}

func (p *parser) callonDocumentHeader356() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader356(stack["name"], stack["value"])
}

func (c *current) onDocumentHeader1(header, authors, revision, otherAttributes interface{}) (interface{}, error) {

	return types.NewDocumentHeader(header, authors, revision, otherAttributes.([]interface{}))
}

func (p *parser) callonDocumentHeader1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader1(stack["header"], stack["authors"], stack["revision"], stack["otherAttributes"])
}

func (c *current) onSection1(section interface{}) (interface{}, error) {
	return section, nil

}

func (p *parser) callonSection1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1(stack["section"])
}

func (c *current) onSection07(header, elements interface{}) (interface{}, error) {
	return types.NewSection(0, header.(types.SectionTitle), elements.([]interface{}))

}

func (p *parser) callonSection07() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection07(stack["header"], stack["elements"])
}

func (c *current) onSection01(section interface{}) (interface{}, error) {
	return section, nil

}

func (p *parser) callonSection01() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection01(stack["section"])
}

func (c *current) onSection0Title25() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Title25() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Title25()
}

func (c *current) onSection0Title15() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Title15() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Title15()
}

func (c *current) onSection0Title11(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonSection0Title11() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Title11(stack["id"])
}

func (c *current) onSection0Title9(id interface{}) (interface{}, error) {
	return id, nil
}

func (p *parser) callonSection0Title9() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Title9(stack["id"])
}

func (c *current) onSection0Title51() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Title51() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Title51()
}

func (c *current) onSection0Title41() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Title41() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Title41()
}

func (c *current) onSection0Title37(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonSection0Title37() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Title37(stack["id"])
}

func (c *current) onSection0Title71() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Title71() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Title71()
}

func (c *current) onSection0Title63(title interface{}) (interface{}, error) {
	return types.NewElementTitle(title.([]interface{}))
}

func (p *parser) callonSection0Title63() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Title63(stack["title"])
}

func (c *current) onSection0Title87() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Title87() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Title87()
}

func (c *current) onSection0Title81(role interface{}) (interface{}, error) {
	return types.NewElementRole(role.([]interface{}))
}

func (p *parser) callonSection0Title81() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Title81(stack["role"])
}

func (c *current) onSection0Title105() (interface{}, error) {
	return types.Tip, nil
}

func (p *parser) callonSection0Title105() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Title105()
}

func (c *current) onSection0Title107() (interface{}, error) {
	return types.Note, nil
}

func (p *parser) callonSection0Title107() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Title107()
}

func (c *current) onSection0Title109() (interface{}, error) {
	return types.Important, nil
}

func (p *parser) callonSection0Title109() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Title109()
}

func (c *current) onSection0Title111() (interface{}, error) {
	return types.Warning, nil
}

func (p *parser) callonSection0Title111() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Title111()
}

func (c *current) onSection0Title113() (interface{}, error) {
	return types.Caution, nil
}

func (p *parser) callonSection0Title113() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Title113()
}

func (c *current) onSection0Title100(k interface{}) (interface{}, error) {
	return types.NewAdmonitionAttribute(k.(types.AdmonitionKind))
}

func (p *parser) callonSection0Title100() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Title100(stack["k"])
}

func (c *current) onSection0Title116() (interface{}, error) {
	return types.ElementAttributes{"layout": "horizontal"}, nil
}

func (p *parser) callonSection0Title116() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Title116()
}

func (c *current) onSection0Title124() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Title124() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Title124()
}

func (c *current) onSection0Title135() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Title135() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Title135()
}

func (c *current) onSection0Title132(key interface{}) (interface{}, error) {
	return key, nil
}

func (p *parser) callonSection0Title132() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Title132(stack["key"])
}

func (c *current) onSection0Title149(value interface{}) (interface{}, error) {
	return value, nil
}

func (p *parser) callonSection0Title149() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Title149(stack["value"])
}

func (c *current) onSection0Title165() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Title165() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Title165()
}

func (c *current) onSection0Title129(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.([]interface{}), value.([]interface{}))
}

func (p *parser) callonSection0Title129() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Title129(stack["key"], stack["value"])
}

func (c *current) onSection0Title173() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Title173() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Title173()
}

func (c *current) onSection0Title170(key interface{}) (interface{}, error) {
	return key, nil
}

func (p *parser) callonSection0Title170() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Title170(stack["key"])
}

func (c *current) onSection0Title190() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Title190() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Title190()
}

func (c *current) onSection0Title167(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.([]interface{}), nil)
}

func (p *parser) callonSection0Title167() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Title167(stack["key"])
}

func (c *current) onSection0Title118(attributes interface{}) (interface{}, error) {
	return types.NewAttributeGroup(attributes.([]interface{}))
}

func (p *parser) callonSection0Title118() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Title118(stack["attributes"])
}

func (c *current) onSection0Title196() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Title196() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Title196()
}

func (c *current) onSection0Title5(attr interface{}) (interface{}, error) {
	return attr, nil // avoid returning something like `[]interface{}{attr, EOL}`
}

func (p *parser) callonSection0Title5() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Title5(stack["attr"])
}

func (c *current) onSection0Title207() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Title207() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Title207()
}

func (c *current) onSection0Title214() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Title214() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Title214()
}

func (c *current) onSection0Title232() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Title232() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Title232()
}

func (c *current) onSection0Title222() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Title222() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Title222()
}

func (c *current) onSection0Title218(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonSection0Title218() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Title218(stack["id"])
}

func (c *current) onSection0Title247() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Title247() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Title247()
}

func (c *current) onSection0Title1(attributes, content, id interface{}) (interface{}, error) {

	return types.NewSectionTitle(content.(types.InlineElements), append(attributes.([]interface{}), id))
}

func (p *parser) callonSection0Title1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Title1(stack["attributes"], stack["content"], stack["id"])
}

func (c *current) onSection0Block1(content interface{}) (interface{}, error) {
	return content, nil
}

func (p *parser) callonSection0Block1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Block1(stack["content"])
}

func (c *current) onSection17(header, elements interface{}) (interface{}, error) {
	return types.NewSection(1, header.(types.SectionTitle), elements.([]interface{}))

}

func (p *parser) callonSection17() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection17(stack["header"], stack["elements"])
}

func (c *current) onSection11(section interface{}) (interface{}, error) {
	return section, nil
}

func (p *parser) callonSection11() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection11(stack["section"])
}

func (c *current) onSection1Title25() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Title25() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Title25()
}

func (c *current) onSection1Title15() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Title15() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Title15()
}

func (c *current) onSection1Title11(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonSection1Title11() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Title11(stack["id"])
}

func (c *current) onSection1Title9(id interface{}) (interface{}, error) {
	return id, nil
}

func (p *parser) callonSection1Title9() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Title9(stack["id"])
}

func (c *current) onSection1Title51() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Title51() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Title51()
}

func (c *current) onSection1Title41() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Title41() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Title41()
}

func (c *current) onSection1Title37(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonSection1Title37() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Title37(stack["id"])
}

func (c *current) onSection1Title71() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Title71() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Title71()
}

func (c *current) onSection1Title63(title interface{}) (interface{}, error) {
	return types.NewElementTitle(title.([]interface{}))
}

func (p *parser) callonSection1Title63() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Title63(stack["title"])
}

func (c *current) onSection1Title87() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Title87() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Title87()
}

func (c *current) onSection1Title81(role interface{}) (interface{}, error) {
	return types.NewElementRole(role.([]interface{}))
}

func (p *parser) callonSection1Title81() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Title81(stack["role"])
}

func (c *current) onSection1Title105() (interface{}, error) {
	return types.Tip, nil
}

func (p *parser) callonSection1Title105() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Title105()
}

func (c *current) onSection1Title107() (interface{}, error) {
	return types.Note, nil
}

func (p *parser) callonSection1Title107() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Title107()
}

func (c *current) onSection1Title109() (interface{}, error) {
	return types.Important, nil
}

func (p *parser) callonSection1Title109() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Title109()
}

func (c *current) onSection1Title111() (interface{}, error) {
	return types.Warning, nil
}

func (p *parser) callonSection1Title111() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Title111()
}

func (c *current) onSection1Title113() (interface{}, error) {
	return types.Caution, nil
}

func (p *parser) callonSection1Title113() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Title113()
}

func (c *current) onSection1Title100(k interface{}) (interface{}, error) {
	return types.NewAdmonitionAttribute(k.(types.AdmonitionKind))
}

func (p *parser) callonSection1Title100() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Title100(stack["k"])
}

func (c *current) onSection1Title116() (interface{}, error) {
	return types.ElementAttributes{"layout": "horizontal"}, nil
}

func (p *parser) callonSection1Title116() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Title116()
}

func (c *current) onSection1Title124() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Title124() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Title124()
}

func (c *current) onSection1Title135() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Title135() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Title135()
}

func (c *current) onSection1Title132(key interface{}) (interface{}, error) {
	return key, nil
}

func (p *parser) callonSection1Title132() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Title132(stack["key"])
}

func (c *current) onSection1Title149(value interface{}) (interface{}, error) {
	return value, nil
}

func (p *parser) callonSection1Title149() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Title149(stack["value"])
}

func (c *current) onSection1Title165() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Title165() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Title165()
}

func (c *current) onSection1Title129(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.([]interface{}), value.([]interface{}))
}

func (p *parser) callonSection1Title129() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Title129(stack["key"], stack["value"])
}

func (c *current) onSection1Title173() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Title173() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Title173()
}

func (c *current) onSection1Title170(key interface{}) (interface{}, error) {
	return key, nil
}

func (p *parser) callonSection1Title170() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Title170(stack["key"])
}

func (c *current) onSection1Title190() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Title190() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Title190()
}

func (c *current) onSection1Title167(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.([]interface{}), nil)
}

func (p *parser) callonSection1Title167() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Title167(stack["key"])
}

func (c *current) onSection1Title118(attributes interface{}) (interface{}, error) {
	return types.NewAttributeGroup(attributes.([]interface{}))
}

func (p *parser) callonSection1Title118() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Title118(stack["attributes"])
}

func (c *current) onSection1Title196() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Title196() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Title196()
}

func (c *current) onSection1Title5(attr interface{}) (interface{}, error) {
	return attr, nil // avoid returning something like `[]interface{}{attr, EOL}`
}

func (p *parser) callonSection1Title5() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Title5(stack["attr"])
}

func (c *current) onSection1Title207() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Title207() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Title207()
}

func (c *current) onSection1Title214() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Title214() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Title214()
}

func (c *current) onSection1Title232() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Title232() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Title232()
}

func (c *current) onSection1Title222() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Title222() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Title222()
}

func (c *current) onSection1Title218(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonSection1Title218() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Title218(stack["id"])
}

func (c *current) onSection1Title247() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Title247() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Title247()
}

func (c *current) onSection1Title1(attributes, content, id interface{}) (interface{}, error) {

	return types.NewSectionTitle(content.(types.InlineElements), append(attributes.([]interface{}), id))
}

func (p *parser) callonSection1Title1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Title1(stack["attributes"], stack["content"], stack["id"])
}

func (c *current) onSection1Block1(content interface{}) (interface{}, error) {
	return content, nil
}

func (p *parser) callonSection1Block1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Block1(stack["content"])
}

func (c *current) onSection27(header, elements interface{}) (interface{}, error) {
	return types.NewSection(2, header.(types.SectionTitle), elements.([]interface{}))

}

func (p *parser) callonSection27() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection27(stack["header"], stack["elements"])
}

func (c *current) onSection21(section interface{}) (interface{}, error) {
	return section, nil

}

func (p *parser) callonSection21() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection21(stack["section"])
}

func (c *current) onSection2Title25() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Title25() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Title25()
}

func (c *current) onSection2Title15() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Title15() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Title15()
}

func (c *current) onSection2Title11(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonSection2Title11() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Title11(stack["id"])
}

func (c *current) onSection2Title9(id interface{}) (interface{}, error) {
	return id, nil
}

func (p *parser) callonSection2Title9() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Title9(stack["id"])
}

func (c *current) onSection2Title51() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Title51() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Title51()
}

func (c *current) onSection2Title41() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Title41() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Title41()
}

func (c *current) onSection2Title37(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonSection2Title37() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Title37(stack["id"])
}

func (c *current) onSection2Title71() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Title71() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Title71()
}

func (c *current) onSection2Title63(title interface{}) (interface{}, error) {
	return types.NewElementTitle(title.([]interface{}))
}

func (p *parser) callonSection2Title63() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Title63(stack["title"])
}

func (c *current) onSection2Title87() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Title87() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Title87()
}

func (c *current) onSection2Title81(role interface{}) (interface{}, error) {
	return types.NewElementRole(role.([]interface{}))
}

func (p *parser) callonSection2Title81() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Title81(stack["role"])
}

func (c *current) onSection2Title105() (interface{}, error) {
	return types.Tip, nil
}

func (p *parser) callonSection2Title105() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Title105()
}

func (c *current) onSection2Title107() (interface{}, error) {
	return types.Note, nil
}

func (p *parser) callonSection2Title107() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Title107()
}

func (c *current) onSection2Title109() (interface{}, error) {
	return types.Important, nil
}

func (p *parser) callonSection2Title109() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Title109()
}

func (c *current) onSection2Title111() (interface{}, error) {
	return types.Warning, nil
}

func (p *parser) callonSection2Title111() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Title111()
}

func (c *current) onSection2Title113() (interface{}, error) {
	return types.Caution, nil
}

func (p *parser) callonSection2Title113() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Title113()
}

func (c *current) onSection2Title100(k interface{}) (interface{}, error) {
	return types.NewAdmonitionAttribute(k.(types.AdmonitionKind))
}

func (p *parser) callonSection2Title100() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Title100(stack["k"])
}

func (c *current) onSection2Title116() (interface{}, error) {
	return types.ElementAttributes{"layout": "horizontal"}, nil
}

func (p *parser) callonSection2Title116() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Title116()
}

func (c *current) onSection2Title124() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Title124() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Title124()
}

func (c *current) onSection2Title135() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Title135() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Title135()
}

func (c *current) onSection2Title132(key interface{}) (interface{}, error) {
	return key, nil
}

func (p *parser) callonSection2Title132() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Title132(stack["key"])
}

func (c *current) onSection2Title149(value interface{}) (interface{}, error) {
	return value, nil
}

func (p *parser) callonSection2Title149() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Title149(stack["value"])
}

func (c *current) onSection2Title165() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Title165() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Title165()
}

func (c *current) onSection2Title129(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.([]interface{}), value.([]interface{}))
}

func (p *parser) callonSection2Title129() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Title129(stack["key"], stack["value"])
}

func (c *current) onSection2Title173() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Title173() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Title173()
}

func (c *current) onSection2Title170(key interface{}) (interface{}, error) {
	return key, nil
}

func (p *parser) callonSection2Title170() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Title170(stack["key"])
}

func (c *current) onSection2Title190() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Title190() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Title190()
}

func (c *current) onSection2Title167(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.([]interface{}), nil)
}

func (p *parser) callonSection2Title167() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Title167(stack["key"])
}

func (c *current) onSection2Title118(attributes interface{}) (interface{}, error) {
	return types.NewAttributeGroup(attributes.([]interface{}))
}

func (p *parser) callonSection2Title118() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Title118(stack["attributes"])
}

func (c *current) onSection2Title196() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Title196() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Title196()
}

func (c *current) onSection2Title5(attr interface{}) (interface{}, error) {
	return attr, nil // avoid returning something like `[]interface{}{attr, EOL}`
}

func (p *parser) callonSection2Title5() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Title5(stack["attr"])
}

func (c *current) onSection2Title207() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Title207() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Title207()
}

func (c *current) onSection2Title214() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Title214() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Title214()
}

func (c *current) onSection2Title232() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Title232() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Title232()
}

func (c *current) onSection2Title222() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Title222() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Title222()
}

func (c *current) onSection2Title218(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonSection2Title218() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Title218(stack["id"])
}

func (c *current) onSection2Title247() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Title247() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Title247()
}

func (c *current) onSection2Title1(attributes, content, id interface{}) (interface{}, error) {
	return types.NewSectionTitle(content.(types.InlineElements), append(attributes.([]interface{}), id))
}

func (p *parser) callonSection2Title1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Title1(stack["attributes"], stack["content"], stack["id"])
}

func (c *current) onSection2Block1(content interface{}) (interface{}, error) {
	return content, nil
}

func (p *parser) callonSection2Block1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Block1(stack["content"])
}

func (c *current) onSection37(header, elements interface{}) (interface{}, error) {
	return types.NewSection(3, header.(types.SectionTitle), elements.([]interface{}))

}

func (p *parser) callonSection37() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection37(stack["header"], stack["elements"])
}

func (c *current) onSection31(section interface{}) (interface{}, error) {
	return section, nil

}

func (p *parser) callonSection31() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection31(stack["section"])
}

func (c *current) onSection3Title25() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Title25() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Title25()
}

func (c *current) onSection3Title15() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Title15() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Title15()
}

func (c *current) onSection3Title11(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonSection3Title11() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Title11(stack["id"])
}

func (c *current) onSection3Title9(id interface{}) (interface{}, error) {
	return id, nil
}

func (p *parser) callonSection3Title9() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Title9(stack["id"])
}

func (c *current) onSection3Title51() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Title51() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Title51()
}

func (c *current) onSection3Title41() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Title41() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Title41()
}

func (c *current) onSection3Title37(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonSection3Title37() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Title37(stack["id"])
}

func (c *current) onSection3Title71() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Title71() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Title71()
}

func (c *current) onSection3Title63(title interface{}) (interface{}, error) {
	return types.NewElementTitle(title.([]interface{}))
}

func (p *parser) callonSection3Title63() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Title63(stack["title"])
}

func (c *current) onSection3Title87() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Title87() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Title87()
}

func (c *current) onSection3Title81(role interface{}) (interface{}, error) {
	return types.NewElementRole(role.([]interface{}))
}

func (p *parser) callonSection3Title81() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Title81(stack["role"])
}

func (c *current) onSection3Title105() (interface{}, error) {
	return types.Tip, nil
}

func (p *parser) callonSection3Title105() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Title105()
}

func (c *current) onSection3Title107() (interface{}, error) {
	return types.Note, nil
}

func (p *parser) callonSection3Title107() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Title107()
}

func (c *current) onSection3Title109() (interface{}, error) {
	return types.Important, nil
}

func (p *parser) callonSection3Title109() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Title109()
}

func (c *current) onSection3Title111() (interface{}, error) {
	return types.Warning, nil
}

func (p *parser) callonSection3Title111() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Title111()
}

func (c *current) onSection3Title113() (interface{}, error) {
	return types.Caution, nil
}

func (p *parser) callonSection3Title113() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Title113()
}

func (c *current) onSection3Title100(k interface{}) (interface{}, error) {
	return types.NewAdmonitionAttribute(k.(types.AdmonitionKind))
}

func (p *parser) callonSection3Title100() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Title100(stack["k"])
}

func (c *current) onSection3Title116() (interface{}, error) {
	return types.ElementAttributes{"layout": "horizontal"}, nil
}

func (p *parser) callonSection3Title116() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Title116()
}

func (c *current) onSection3Title124() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Title124() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Title124()
}

func (c *current) onSection3Title135() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Title135() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Title135()
}

func (c *current) onSection3Title132(key interface{}) (interface{}, error) {
	return key, nil
}

func (p *parser) callonSection3Title132() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Title132(stack["key"])
}

func (c *current) onSection3Title149(value interface{}) (interface{}, error) {
	return value, nil
}

func (p *parser) callonSection3Title149() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Title149(stack["value"])
}

func (c *current) onSection3Title165() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Title165() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Title165()
}

func (c *current) onSection3Title129(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.([]interface{}), value.([]interface{}))
}

func (p *parser) callonSection3Title129() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Title129(stack["key"], stack["value"])
}

func (c *current) onSection3Title173() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Title173() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Title173()
}

func (c *current) onSection3Title170(key interface{}) (interface{}, error) {
	return key, nil
}

func (p *parser) callonSection3Title170() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Title170(stack["key"])
}

func (c *current) onSection3Title190() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Title190() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Title190()
}

func (c *current) onSection3Title167(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.([]interface{}), nil)
}

func (p *parser) callonSection3Title167() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Title167(stack["key"])
}

func (c *current) onSection3Title118(attributes interface{}) (interface{}, error) {
	return types.NewAttributeGroup(attributes.([]interface{}))
}

func (p *parser) callonSection3Title118() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Title118(stack["attributes"])
}

func (c *current) onSection3Title196() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Title196() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Title196()
}

func (c *current) onSection3Title5(attr interface{}) (interface{}, error) {
	return attr, nil // avoid returning something like `[]interface{}{attr, EOL}`
}

func (p *parser) callonSection3Title5() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Title5(stack["attr"])
}

func (c *current) onSection3Title207() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Title207() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Title207()
}

func (c *current) onSection3Title214() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Title214() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Title214()
}

func (c *current) onSection3Title232() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Title232() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Title232()
}

func (c *current) onSection3Title222() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Title222() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Title222()
}

func (c *current) onSection3Title218(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonSection3Title218() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Title218(stack["id"])
}

func (c *current) onSection3Title1(attributes, content, id interface{}) (interface{}, error) {
	return types.NewSectionTitle(content.(types.InlineElements), append(attributes.([]interface{}), id))
}

func (p *parser) callonSection3Title1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Title1(stack["attributes"], stack["content"], stack["id"])
}

func (c *current) onSection3Block1(content interface{}) (interface{}, error) {
	return content, nil
}

func (p *parser) callonSection3Block1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Block1(stack["content"])
}

func (c *current) onSection47(header, elements interface{}) (interface{}, error) {
	return types.NewSection(4, header.(types.SectionTitle), elements.([]interface{}))

}

func (p *parser) callonSection47() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection47(stack["header"], stack["elements"])
}

func (c *current) onSection41(section interface{}) (interface{}, error) {
	return section, nil

}

func (p *parser) callonSection41() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection41(stack["section"])
}

func (c *current) onSection4Title25() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Title25() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Title25()
}

func (c *current) onSection4Title15() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Title15() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Title15()
}

func (c *current) onSection4Title11(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonSection4Title11() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Title11(stack["id"])
}

func (c *current) onSection4Title9(id interface{}) (interface{}, error) {
	return id, nil
}

func (p *parser) callonSection4Title9() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Title9(stack["id"])
}

func (c *current) onSection4Title51() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Title51() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Title51()
}

func (c *current) onSection4Title41() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Title41() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Title41()
}

func (c *current) onSection4Title37(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonSection4Title37() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Title37(stack["id"])
}

func (c *current) onSection4Title71() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Title71() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Title71()
}

func (c *current) onSection4Title63(title interface{}) (interface{}, error) {
	return types.NewElementTitle(title.([]interface{}))
}

func (p *parser) callonSection4Title63() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Title63(stack["title"])
}

func (c *current) onSection4Title87() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Title87() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Title87()
}

func (c *current) onSection4Title81(role interface{}) (interface{}, error) {
	return types.NewElementRole(role.([]interface{}))
}

func (p *parser) callonSection4Title81() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Title81(stack["role"])
}

func (c *current) onSection4Title105() (interface{}, error) {
	return types.Tip, nil
}

func (p *parser) callonSection4Title105() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Title105()
}

func (c *current) onSection4Title107() (interface{}, error) {
	return types.Note, nil
}

func (p *parser) callonSection4Title107() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Title107()
}

func (c *current) onSection4Title109() (interface{}, error) {
	return types.Important, nil
}

func (p *parser) callonSection4Title109() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Title109()
}

func (c *current) onSection4Title111() (interface{}, error) {
	return types.Warning, nil
}

func (p *parser) callonSection4Title111() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Title111()
}

func (c *current) onSection4Title113() (interface{}, error) {
	return types.Caution, nil
}

func (p *parser) callonSection4Title113() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Title113()
}

func (c *current) onSection4Title100(k interface{}) (interface{}, error) {
	return types.NewAdmonitionAttribute(k.(types.AdmonitionKind))
}

func (p *parser) callonSection4Title100() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Title100(stack["k"])
}

func (c *current) onSection4Title116() (interface{}, error) {
	return types.ElementAttributes{"layout": "horizontal"}, nil
}

func (p *parser) callonSection4Title116() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Title116()
}

func (c *current) onSection4Title124() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Title124() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Title124()
}

func (c *current) onSection4Title135() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Title135() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Title135()
}

func (c *current) onSection4Title132(key interface{}) (interface{}, error) {
	return key, nil
}

func (p *parser) callonSection4Title132() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Title132(stack["key"])
}

func (c *current) onSection4Title149(value interface{}) (interface{}, error) {
	return value, nil
}

func (p *parser) callonSection4Title149() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Title149(stack["value"])
}

func (c *current) onSection4Title165() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Title165() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Title165()
}

func (c *current) onSection4Title129(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.([]interface{}), value.([]interface{}))
}

func (p *parser) callonSection4Title129() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Title129(stack["key"], stack["value"])
}

func (c *current) onSection4Title173() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Title173() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Title173()
}

func (c *current) onSection4Title170(key interface{}) (interface{}, error) {
	return key, nil
}

func (p *parser) callonSection4Title170() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Title170(stack["key"])
}

func (c *current) onSection4Title190() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Title190() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Title190()
}

func (c *current) onSection4Title167(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.([]interface{}), nil)
}

func (p *parser) callonSection4Title167() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Title167(stack["key"])
}

func (c *current) onSection4Title118(attributes interface{}) (interface{}, error) {
	return types.NewAttributeGroup(attributes.([]interface{}))
}

func (p *parser) callonSection4Title118() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Title118(stack["attributes"])
}

func (c *current) onSection4Title196() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Title196() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Title196()
}

func (c *current) onSection4Title5(attr interface{}) (interface{}, error) {
	return attr, nil // avoid returning something like `[]interface{}{attr, EOL}`
}

func (p *parser) callonSection4Title5() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Title5(stack["attr"])
}

func (c *current) onSection4Title207() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Title207() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Title207()
}

func (c *current) onSection4Title214() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Title214() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Title214()
}

func (c *current) onSection4Title232() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Title232() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Title232()
}

func (c *current) onSection4Title222() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Title222() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Title222()
}

func (c *current) onSection4Title218(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonSection4Title218() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Title218(stack["id"])
}

func (c *current) onSection4Title1(attributes, content, id interface{}) (interface{}, error) {
	return types.NewSectionTitle(content.(types.InlineElements), append(attributes.([]interface{}), id))
}

func (p *parser) callonSection4Title1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Title1(stack["attributes"], stack["content"], stack["id"])
}

func (c *current) onSection4Block1(content interface{}) (interface{}, error) {
	return content, nil
}

func (p *parser) callonSection4Block1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Block1(stack["content"])
}

func (c *current) onSection57(header, elements interface{}) (interface{}, error) {
	return types.NewSection(5, header.(types.SectionTitle), elements.([]interface{}))

}

func (p *parser) callonSection57() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection57(stack["header"], stack["elements"])
}

func (c *current) onSection51(section interface{}) (interface{}, error) {
	return section, nil

}

func (p *parser) callonSection51() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection51(stack["section"])
}

func (c *current) onSection5Title25() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Title25() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Title25()
}

func (c *current) onSection5Title15() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Title15() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Title15()
}

func (c *current) onSection5Title11(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonSection5Title11() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Title11(stack["id"])
}

func (c *current) onSection5Title9(id interface{}) (interface{}, error) {
	return id, nil
}

func (p *parser) callonSection5Title9() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Title9(stack["id"])
}

func (c *current) onSection5Title51() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Title51() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Title51()
}

func (c *current) onSection5Title41() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Title41() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Title41()
}

func (c *current) onSection5Title37(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonSection5Title37() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Title37(stack["id"])
}

func (c *current) onSection5Title71() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Title71() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Title71()
}

func (c *current) onSection5Title63(title interface{}) (interface{}, error) {
	return types.NewElementTitle(title.([]interface{}))
}

func (p *parser) callonSection5Title63() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Title63(stack["title"])
}

func (c *current) onSection5Title87() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Title87() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Title87()
}

func (c *current) onSection5Title81(role interface{}) (interface{}, error) {
	return types.NewElementRole(role.([]interface{}))
}

func (p *parser) callonSection5Title81() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Title81(stack["role"])
}

func (c *current) onSection5Title105() (interface{}, error) {
	return types.Tip, nil
}

func (p *parser) callonSection5Title105() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Title105()
}

func (c *current) onSection5Title107() (interface{}, error) {
	return types.Note, nil
}

func (p *parser) callonSection5Title107() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Title107()
}

func (c *current) onSection5Title109() (interface{}, error) {
	return types.Important, nil
}

func (p *parser) callonSection5Title109() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Title109()
}

func (c *current) onSection5Title111() (interface{}, error) {
	return types.Warning, nil
}

func (p *parser) callonSection5Title111() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Title111()
}

func (c *current) onSection5Title113() (interface{}, error) {
	return types.Caution, nil
}

func (p *parser) callonSection5Title113() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Title113()
}

func (c *current) onSection5Title100(k interface{}) (interface{}, error) {
	return types.NewAdmonitionAttribute(k.(types.AdmonitionKind))
}

func (p *parser) callonSection5Title100() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Title100(stack["k"])
}

func (c *current) onSection5Title116() (interface{}, error) {
	return types.ElementAttributes{"layout": "horizontal"}, nil
}

func (p *parser) callonSection5Title116() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Title116()
}

func (c *current) onSection5Title124() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Title124() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Title124()
}

func (c *current) onSection5Title135() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Title135() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Title135()
}

func (c *current) onSection5Title132(key interface{}) (interface{}, error) {
	return key, nil
}

func (p *parser) callonSection5Title132() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Title132(stack["key"])
}

func (c *current) onSection5Title149(value interface{}) (interface{}, error) {
	return value, nil
}

func (p *parser) callonSection5Title149() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Title149(stack["value"])
}

func (c *current) onSection5Title165() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Title165() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Title165()
}

func (c *current) onSection5Title129(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.([]interface{}), value.([]interface{}))
}

func (p *parser) callonSection5Title129() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Title129(stack["key"], stack["value"])
}

func (c *current) onSection5Title173() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Title173() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Title173()
}

func (c *current) onSection5Title170(key interface{}) (interface{}, error) {
	return key, nil
}

func (p *parser) callonSection5Title170() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Title170(stack["key"])
}

func (c *current) onSection5Title190() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Title190() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Title190()
}

func (c *current) onSection5Title167(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.([]interface{}), nil)
}

func (p *parser) callonSection5Title167() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Title167(stack["key"])
}

func (c *current) onSection5Title118(attributes interface{}) (interface{}, error) {
	return types.NewAttributeGroup(attributes.([]interface{}))
}

func (p *parser) callonSection5Title118() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Title118(stack["attributes"])
}

func (c *current) onSection5Title196() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Title196() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Title196()
}

func (c *current) onSection5Title5(attr interface{}) (interface{}, error) {
	return attr, nil // avoid returning something like `[]interface{}{attr, EOL}`
}

func (p *parser) callonSection5Title5() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Title5(stack["attr"])
}

func (c *current) onSection5Title207() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Title207() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Title207()
}

func (c *current) onSection5Title214() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Title214() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Title214()
}

func (c *current) onSection5Title232() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Title232() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Title232()
}

func (c *current) onSection5Title222() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Title222() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Title222()
}

func (c *current) onSection5Title218(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonSection5Title218() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Title218(stack["id"])
}

func (c *current) onSection5Title1(attributes, content, id interface{}) (interface{}, error) {
	return types.NewSectionTitle(content.(types.InlineElements), append(attributes.([]interface{}), id))
}

func (p *parser) callonSection5Title1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Title1(stack["attributes"], stack["content"], stack["id"])
}

func (c *current) onSection5Block1(content interface{}) (interface{}, error) {
	return content, nil
}

func (p *parser) callonSection5Block1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Block1(stack["content"])
}

func (c *current) onTitleElements12() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElements12() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElements12()
}

func (c *current) onTitleElements29() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElements29() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElements29()
}

func (c *current) onTitleElements19() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElements19() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElements19()
}

func (c *current) onTitleElements15(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonTitleElements15() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElements15(stack["id"])
}

func (c *current) onTitleElements45() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElements45() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElements45()
}

func (c *current) onTitleElements1(elements interface{}) (interface{}, error) {
	// absorbs heading and trailing spaces
	return types.NewInlineElements(elements.([]interface{}))
}

func (p *parser) callonTitleElements1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElements1(stack["elements"])
}

func (c *current) onTitleElement18() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement18() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement18()
}

func (c *current) onTitleElement8() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement8() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement8()
}

func (c *current) onTitleElement4(id interface{}) (interface{}, error) {
	return types.NewCrossReference(id.(string))
}

func (p *parser) callonTitleElement4() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement4(stack["id"])
}

func (c *current) onTitleElement47() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement47() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement47()
}

func (c *current) onTitleElement37() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement37() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement37()
}

func (c *current) onTitleElement60(value interface{}) (interface{}, error) {
	// attribute is followed by "," or "]" (but do not consume the latter)
	return value, nil
}

func (p *parser) callonTitleElement60() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement60(stack["value"])
}

func (c *current) onTitleElement77(value interface{}) (interface{}, error) {
	// attribute is followed by "," or "]" (but do not consume the latter)
	return value, nil
}

func (p *parser) callonTitleElement77() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement77(stack["value"])
}

func (c *current) onTitleElement94(value interface{}) (interface{}, error) {
	// attribute is followed by "," or "]" (but do not consume the latter)
	return value, nil
}

func (p *parser) callonTitleElement94() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement94(stack["value"])
}

func (c *current) onTitleElement119() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement119() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement119()
}

func (c *current) onTitleElement116(key interface{}) (interface{}, error) {
	return key, nil
}

func (p *parser) callonTitleElement116() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement116(stack["key"])
}

func (c *current) onTitleElement133(value interface{}) (interface{}, error) {
	return value, nil
}

func (p *parser) callonTitleElement133() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement133(stack["value"])
}

func (c *current) onTitleElement149() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement149() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement149()
}

func (c *current) onTitleElement113(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.([]interface{}), value.([]interface{}))
}

func (p *parser) callonTitleElement113() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement113(stack["key"], stack["value"])
}

func (c *current) onTitleElement157() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement157() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement157()
}

func (c *current) onTitleElement154(key interface{}) (interface{}, error) {
	return key, nil
}

func (p *parser) callonTitleElement154() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement154(stack["key"])
}

func (c *current) onTitleElement174() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement174() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement174()
}

func (c *current) onTitleElement151(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.([]interface{}), nil)
}

func (p *parser) callonTitleElement151() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement151(stack["key"])
}

func (c *current) onTitleElement56(alt, width, height, otherAttrs interface{}) (interface{}, error) {
	return types.NewImageAttributes(alt.([]interface{}), width.([]interface{}), height.([]interface{}), otherAttrs.([]interface{}))

}

func (p *parser) callonTitleElement56() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement56(stack["alt"], stack["width"], stack["height"], stack["otherAttrs"])
}

func (c *current) onTitleElement181(value interface{}) (interface{}, error) {
	// attribute is followed by "," or "]" (but do not consume the latter)
	return value, nil
}

func (p *parser) callonTitleElement181() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement181(stack["value"])
}

func (c *current) onTitleElement198(value interface{}) (interface{}, error) {
	// attribute is followed by "," or "]" (but do not consume the latter)
	return value, nil
}

func (p *parser) callonTitleElement198() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement198(stack["value"])
}

func (c *current) onTitleElement223() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement223() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement223()
}

func (c *current) onTitleElement220(key interface{}) (interface{}, error) {
	return key, nil
}

func (p *parser) callonTitleElement220() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement220(stack["key"])
}

func (c *current) onTitleElement237(value interface{}) (interface{}, error) {
	return value, nil
}

func (p *parser) callonTitleElement237() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement237(stack["value"])
}

func (c *current) onTitleElement253() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement253() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement253()
}

func (c *current) onTitleElement217(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.([]interface{}), value.([]interface{}))
}

func (p *parser) callonTitleElement217() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement217(stack["key"], stack["value"])
}

func (c *current) onTitleElement261() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement261() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement261()
}

func (c *current) onTitleElement258(key interface{}) (interface{}, error) {
	return key, nil
}

func (p *parser) callonTitleElement258() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement258(stack["key"])
}

func (c *current) onTitleElement278() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement278() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement278()
}

func (c *current) onTitleElement255(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.([]interface{}), nil)
}

func (p *parser) callonTitleElement255() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement255(stack["key"])
}

func (c *current) onTitleElement177(alt, width, otherAttrs interface{}) (interface{}, error) {
	return types.NewImageAttributes(alt.([]interface{}), width.([]interface{}), nil, otherAttrs.([]interface{}))

}

func (p *parser) callonTitleElement177() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement177(stack["alt"], stack["width"], stack["otherAttrs"])
}

func (c *current) onTitleElement285(value interface{}) (interface{}, error) {
	// attribute is followed by "," or "]" (but do not consume the latter)
	return value, nil
}

func (p *parser) callonTitleElement285() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement285(stack["value"])
}

func (c *current) onTitleElement310() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement310() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement310()
}

func (c *current) onTitleElement307(key interface{}) (interface{}, error) {
	return key, nil
}

func (p *parser) callonTitleElement307() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement307(stack["key"])
}

func (c *current) onTitleElement324(value interface{}) (interface{}, error) {
	return value, nil
}

func (p *parser) callonTitleElement324() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement324(stack["value"])
}

func (c *current) onTitleElement340() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement340() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement340()
}

func (c *current) onTitleElement304(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.([]interface{}), value.([]interface{}))
}

func (p *parser) callonTitleElement304() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement304(stack["key"], stack["value"])
}

func (c *current) onTitleElement348() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement348() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement348()
}

func (c *current) onTitleElement345(key interface{}) (interface{}, error) {
	return key, nil
}

func (p *parser) callonTitleElement345() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement345(stack["key"])
}

func (c *current) onTitleElement365() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement365() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement365()
}

func (c *current) onTitleElement342(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.([]interface{}), nil)
}

func (p *parser) callonTitleElement342() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement342(stack["key"])
}

func (c *current) onTitleElement281(alt, otherAttrs interface{}) (interface{}, error) {
	return types.NewImageAttributes(alt.([]interface{}), nil, nil, otherAttrs.([]interface{}))

}

func (p *parser) callonTitleElement281() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement281(stack["alt"], stack["otherAttrs"])
}

func (c *current) onTitleElement380() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement380() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement380()
}

func (c *current) onTitleElement377(key interface{}) (interface{}, error) {
	return key, nil
}

func (p *parser) callonTitleElement377() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement377(stack["key"])
}

func (c *current) onTitleElement394(value interface{}) (interface{}, error) {
	return value, nil
}

func (p *parser) callonTitleElement394() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement394(stack["value"])
}

func (c *current) onTitleElement410() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement410() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement410()
}

func (c *current) onTitleElement374(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.([]interface{}), value.([]interface{}))
}

func (p *parser) callonTitleElement374() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement374(stack["key"], stack["value"])
}

func (c *current) onTitleElement418() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement418() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement418()
}

func (c *current) onTitleElement415(key interface{}) (interface{}, error) {
	return key, nil
}

func (p *parser) callonTitleElement415() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement415(stack["key"])
}

func (c *current) onTitleElement435() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement435() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement435()
}

func (c *current) onTitleElement412(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.([]interface{}), nil)
}

func (p *parser) callonTitleElement412() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement412(stack["key"])
}

func (c *current) onTitleElement368(otherAttrs interface{}) (interface{}, error) {
	return types.NewImageAttributes(nil, nil, nil, otherAttrs.([]interface{}))

}

func (p *parser) callonTitleElement368() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement368(stack["otherAttrs"])
}

func (c *current) onTitleElement31(path, attributes interface{}) (interface{}, error) {
	return types.NewInlineImage(path.(string), attributes.(types.ElementAttributes))
}

func (p *parser) callonTitleElement31() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement31(stack["path"], stack["attributes"])
}

func (c *current) onTitleElement464() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement464() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement464()
}

func (c *current) onTitleElement454() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement454() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement454()
}

func (c *current) onTitleElement477(value interface{}) (interface{}, error) {
	return value, nil
}

func (p *parser) callonTitleElement477() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement477(stack["value"])
}

func (c *current) onTitleElement495() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement495() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement495()
}

func (c *current) onTitleElement492(key interface{}) (interface{}, error) {
	return key, nil
}

func (p *parser) callonTitleElement492() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement492(stack["key"])
}

func (c *current) onTitleElement509(value interface{}) (interface{}, error) {
	return value, nil
}

func (p *parser) callonTitleElement509() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement509(stack["value"])
}

func (c *current) onTitleElement525() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement525() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement525()
}

func (c *current) onTitleElement489(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.([]interface{}), value.([]interface{}))
}

func (p *parser) callonTitleElement489() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement489(stack["key"], stack["value"])
}

func (c *current) onTitleElement533() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement533() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement533()
}

func (c *current) onTitleElement530(key interface{}) (interface{}, error) {
	return key, nil
}

func (p *parser) callonTitleElement530() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement530(stack["key"])
}

func (c *current) onTitleElement550() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement550() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement550()
}

func (c *current) onTitleElement527(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.([]interface{}), nil)
}

func (p *parser) callonTitleElement527() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement527(stack["key"])
}

func (c *current) onTitleElement473(text, otherAttrs interface{}) (interface{}, error) {
	return types.NewLinkAttributes(text.([]interface{}), otherAttrs.([]interface{}))
}

func (p *parser) callonTitleElement473() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement473(stack["text"], stack["otherAttrs"])
}

func (c *current) onTitleElement565() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement565() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement565()
}

func (c *current) onTitleElement562(key interface{}) (interface{}, error) {
	return key, nil
}

func (p *parser) callonTitleElement562() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement562(stack["key"])
}

func (c *current) onTitleElement579(value interface{}) (interface{}, error) {
	return value, nil
}

func (p *parser) callonTitleElement579() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement579(stack["value"])
}

func (c *current) onTitleElement595() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement595() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement595()
}

func (c *current) onTitleElement559(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.([]interface{}), value.([]interface{}))
}

func (p *parser) callonTitleElement559() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement559(stack["key"], stack["value"])
}

func (c *current) onTitleElement603() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement603() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement603()
}

func (c *current) onTitleElement600(key interface{}) (interface{}, error) {
	return key, nil
}

func (p *parser) callonTitleElement600() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement600(stack["key"])
}

func (c *current) onTitleElement620() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement620() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement620()
}

func (c *current) onTitleElement597(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.([]interface{}), nil)
}

func (p *parser) callonTitleElement597() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement597(stack["key"])
}

func (c *current) onTitleElement553(otherAttrs interface{}) (interface{}, error) {
	return types.NewLinkAttributes(nil, otherAttrs.([]interface{}))
}

func (p *parser) callonTitleElement553() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement553(stack["otherAttrs"])
}

func (c *current) onTitleElement442(url, attributes interface{}) (interface{}, error) {
	return types.NewLink(url.([]interface{}), attributes.(types.ElementAttributes))
}

func (p *parser) callonTitleElement442() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement442(stack["url"], stack["attributes"])
}

func (c *current) onTitleElement643() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement643() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement643()
}

func (c *current) onTitleElement633() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement633() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement633()
}

func (c *current) onTitleElement656(value interface{}) (interface{}, error) {
	return value, nil
}

func (p *parser) callonTitleElement656() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement656(stack["value"])
}

func (c *current) onTitleElement674() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement674() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement674()
}

func (c *current) onTitleElement671(key interface{}) (interface{}, error) {
	return key, nil
}

func (p *parser) callonTitleElement671() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement671(stack["key"])
}

func (c *current) onTitleElement688(value interface{}) (interface{}, error) {
	return value, nil
}

func (p *parser) callonTitleElement688() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement688(stack["value"])
}

func (c *current) onTitleElement704() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement704() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement704()
}

func (c *current) onTitleElement668(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.([]interface{}), value.([]interface{}))
}

func (p *parser) callonTitleElement668() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement668(stack["key"], stack["value"])
}

func (c *current) onTitleElement712() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement712() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement712()
}

func (c *current) onTitleElement709(key interface{}) (interface{}, error) {
	return key, nil
}

func (p *parser) callonTitleElement709() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement709(stack["key"])
}

func (c *current) onTitleElement729() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement729() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement729()
}

func (c *current) onTitleElement706(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.([]interface{}), nil)
}

func (p *parser) callonTitleElement706() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement706(stack["key"])
}

func (c *current) onTitleElement652(text, otherAttrs interface{}) (interface{}, error) {
	return types.NewLinkAttributes(text.([]interface{}), otherAttrs.([]interface{}))
}

func (p *parser) callonTitleElement652() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement652(stack["text"], stack["otherAttrs"])
}

func (c *current) onTitleElement744() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement744() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement744()
}

func (c *current) onTitleElement741(key interface{}) (interface{}, error) {
	return key, nil
}

func (p *parser) callonTitleElement741() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement741(stack["key"])
}

func (c *current) onTitleElement758(value interface{}) (interface{}, error) {
	return value, nil
}

func (p *parser) callonTitleElement758() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement758(stack["value"])
}

func (c *current) onTitleElement774() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement774() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement774()
}

func (c *current) onTitleElement738(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.([]interface{}), value.([]interface{}))
}

func (p *parser) callonTitleElement738() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement738(stack["key"], stack["value"])
}

func (c *current) onTitleElement782() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement782() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement782()
}

func (c *current) onTitleElement779(key interface{}) (interface{}, error) {
	return key, nil
}

func (p *parser) callonTitleElement779() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement779(stack["key"])
}

func (c *current) onTitleElement799() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement799() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement799()
}

func (c *current) onTitleElement776(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.([]interface{}), nil)
}

func (p *parser) callonTitleElement776() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement776(stack["key"])
}

func (c *current) onTitleElement732(otherAttrs interface{}) (interface{}, error) {
	return types.NewLinkAttributes(nil, otherAttrs.([]interface{}))
}

func (p *parser) callonTitleElement732() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement732(stack["otherAttrs"])
}

func (c *current) onTitleElement623(url, attributes interface{}) (interface{}, error) {
	return types.NewLink(url.([]interface{}), attributes.(types.ElementAttributes))
}

func (p *parser) callonTitleElement623() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement623(stack["url"], stack["attributes"])
}

func (c *current) onTitleElement821() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement821() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement821()
}

func (c *current) onTitleElement811() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement811() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement811()
}

func (c *current) onTitleElement802(url interface{}) (interface{}, error) {
	return types.NewLink(url.([]interface{}), nil)
}

func (p *parser) callonTitleElement802() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement802(stack["url"])
}

func (c *current) onTitleElement439(link interface{}) (interface{}, error) {
	return link, nil
}

func (p *parser) callonTitleElement439() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement439(stack["link"])
}

func (c *current) onTitleElement828(name interface{}) (interface{}, error) {
	return types.NewDocumentAttributeSubstitution(name.([]interface{}))
}

func (p *parser) callonTitleElement828() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement828(stack["name"])
}

func (c *current) onTitleElement847() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement847() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement847()
}

func (c *current) onTitleElement837() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement837() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement837()
}

func (c *current) onTitleElement1(element interface{}) (interface{}, error) {
	return element, nil
}

func (p *parser) callonTitleElement1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement1(stack["element"])
}

func (c *current) onList25() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonList25() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onList25()
}

func (c *current) onList15() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonList15() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onList15()
}

func (c *current) onList11(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonList11() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onList11(stack["id"])
}

func (c *current) onList9(id interface{}) (interface{}, error) {
	return id, nil
}

func (p *parser) callonList9() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onList9(stack["id"])
}

func (c *current) onList51() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonList51() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onList51()
}

func (c *current) onList41() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonList41() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onList41()
}

func (c *current) onList37(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonList37() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onList37(stack["id"])
}

func (c *current) onList71() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonList71() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onList71()
}

func (c *current) onList63(title interface{}) (interface{}, error) {
	return types.NewElementTitle(title.([]interface{}))
}

func (p *parser) callonList63() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onList63(stack["title"])
}

func (c *current) onList87() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonList87() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onList87()
}

func (c *current) onList81(role interface{}) (interface{}, error) {
	return types.NewElementRole(role.([]interface{}))
}

func (p *parser) callonList81() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onList81(stack["role"])
}

func (c *current) onList105() (interface{}, error) {
	return types.Tip, nil
}

func (p *parser) callonList105() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onList105()
}

func (c *current) onList107() (interface{}, error) {
	return types.Note, nil
}

func (p *parser) callonList107() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onList107()
}

func (c *current) onList109() (interface{}, error) {
	return types.Important, nil
}

func (p *parser) callonList109() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onList109()
}

func (c *current) onList111() (interface{}, error) {
	return types.Warning, nil
}

func (p *parser) callonList111() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onList111()
}

func (c *current) onList113() (interface{}, error) {
	return types.Caution, nil
}

func (p *parser) callonList113() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onList113()
}

func (c *current) onList100(k interface{}) (interface{}, error) {
	return types.NewAdmonitionAttribute(k.(types.AdmonitionKind))
}

func (p *parser) callonList100() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onList100(stack["k"])
}

func (c *current) onList116() (interface{}, error) {
	return types.ElementAttributes{"layout": "horizontal"}, nil
}

func (p *parser) callonList116() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onList116()
}

func (c *current) onList124() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonList124() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onList124()
}

func (c *current) onList135() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonList135() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onList135()
}

func (c *current) onList132(key interface{}) (interface{}, error) {
	return key, nil
}

func (p *parser) callonList132() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onList132(stack["key"])
}

func (c *current) onList149(value interface{}) (interface{}, error) {
	return value, nil
}

func (p *parser) callonList149() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onList149(stack["value"])
}

func (c *current) onList165() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonList165() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onList165()
}

func (c *current) onList129(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.([]interface{}), value.([]interface{}))
}

func (p *parser) callonList129() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onList129(stack["key"], stack["value"])
}

func (c *current) onList173() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonList173() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onList173()
}

func (c *current) onList170(key interface{}) (interface{}, error) {
	return key, nil
}

func (p *parser) callonList170() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onList170(stack["key"])
}

func (c *current) onList190() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonList190() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onList190()
}

func (c *current) onList167(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.([]interface{}), nil)
}

func (p *parser) callonList167() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onList167(stack["key"])
}

func (c *current) onList118(attributes interface{}) (interface{}, error) {
	return types.NewAttributeGroup(attributes.([]interface{}))
}

func (p *parser) callonList118() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onList118(stack["attributes"])
}

func (c *current) onList196() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonList196() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onList196()
}

func (c *current) onList5(attr interface{}) (interface{}, error) {
	return attr, nil // avoid returning something like `[]interface{}{attr, EOL}`
}

func (p *parser) callonList5() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onList5(stack["attr"])
}

func (c *current) onList1(attributes, elements interface{}) (interface{}, error) {
	return types.NewList(elements.([]interface{}), attributes.([]interface{}))
}

func (p *parser) callonList1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onList1(stack["attributes"], stack["elements"])
}

func (c *current) onListParagraph1(lines interface{}) (interface{}, error) {
	return types.NewParagraph(lines.([]interface{}), nil)
}

func (p *parser) callonListParagraph1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraph1(stack["lines"])
}

func (c *current) onListParagraphLine9() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine9() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine9()
}

func (c *current) onListParagraphLine13() (interface{}, error) {
	// numbering style: "....."
	return types.NewOrderedListItemPrefix(types.UpperRoman, 5)

}

func (p *parser) callonListParagraphLine13() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine13()
}

func (c *current) onListParagraphLine15() (interface{}, error) {
	// numbering style: "...."
	return types.NewOrderedListItemPrefix(types.UpperAlpha, 4)

}

func (p *parser) callonListParagraphLine15() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine15()
}

func (c *current) onListParagraphLine17() (interface{}, error) {
	// numbering style: "..."
	return types.NewOrderedListItemPrefix(types.LowerRoman, 3)

}

func (p *parser) callonListParagraphLine17() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine17()
}

func (c *current) onListParagraphLine19() (interface{}, error) {
	// numbering style: ".."
	return types.NewOrderedListItemPrefix(types.LowerAlpha, 2)

}

func (p *parser) callonListParagraphLine19() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine19()
}

func (c *current) onListParagraphLine21() (interface{}, error) {
	// numbering style: "."
	return types.NewOrderedListItemPrefix(types.Arabic, 1)
	// explicit numbering

}

func (p *parser) callonListParagraphLine21() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine21()
}

func (c *current) onListParagraphLine23() (interface{}, error) {
	// numbering style: "1."
	return types.NewOrderedListItemPrefix(types.Arabic, 1)

}

func (p *parser) callonListParagraphLine23() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine23()
}

func (c *current) onListParagraphLine28() (interface{}, error) {
	// numbering style: "a."
	return types.NewOrderedListItemPrefix(types.LowerAlpha, 1)

}

func (p *parser) callonListParagraphLine28() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine28()
}

func (c *current) onListParagraphLine33() (interface{}, error) {
	// numbering style: "A."
	return types.NewOrderedListItemPrefix(types.UpperAlpha, 1)

}

func (p *parser) callonListParagraphLine33() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine33()
}

func (c *current) onListParagraphLine38() (interface{}, error) {
	// numbering style: "i)"
	return types.NewOrderedListItemPrefix(types.LowerRoman, 1)

}

func (p *parser) callonListParagraphLine38() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine38()
}

func (c *current) onListParagraphLine43() (interface{}, error) {
	// numbering style: "I)"
	return types.NewOrderedListItemPrefix(types.UpperRoman, 1)

}

func (p *parser) callonListParagraphLine43() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine43()
}

func (c *current) onListParagraphLine51() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine51() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine51()
}

func (c *current) onListParagraphLine4(prefix interface{}) (interface{}, error) {
	return prefix, nil

}

func (p *parser) callonListParagraphLine4() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine4(stack["prefix"])
}

func (c *current) onListParagraphLine59() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine59() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine59()
}

func (c *current) onListParagraphLine63() (interface{}, error) {
	// ignore whitespaces, only return the relevant "*"/"-" marker
	return types.NewUnorderedListItemPrefix(types.FiveAsterisks, 5)

}

func (p *parser) callonListParagraphLine63() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine63()
}

func (c *current) onListParagraphLine65() (interface{}, error) {
	// ignore whitespaces, only return the relevant "*"/"-" marker
	return types.NewUnorderedListItemPrefix(types.FourAsterisks, 4)

}

func (p *parser) callonListParagraphLine65() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine65()
}

func (c *current) onListParagraphLine67() (interface{}, error) {
	// ignore whitespaces, only return the relevant "*"/"-" marker
	return types.NewUnorderedListItemPrefix(types.ThreeAsterisks, 3)

}

func (p *parser) callonListParagraphLine67() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine67()
}

func (c *current) onListParagraphLine69() (interface{}, error) {
	// ignore whitespaces, only return the relevant "*"/"-" marker
	return types.NewUnorderedListItemPrefix(types.TwoAsterisks, 2)

}

func (p *parser) callonListParagraphLine69() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine69()
}

func (c *current) onListParagraphLine71() (interface{}, error) {
	// ignore whitespaces, only return the relevant "*"/"-" marker
	return types.NewUnorderedListItemPrefix(types.OneAsterisk, 1)

}

func (p *parser) callonListParagraphLine71() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine71()
}

func (c *current) onListParagraphLine73() (interface{}, error) {
	// ignore whitespaces, only return the relevant "*"/"-" marker
	return types.NewUnorderedListItemPrefix(types.Dash, 1)

}

func (p *parser) callonListParagraphLine73() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine73()
}

func (c *current) onListParagraphLine78() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine78() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine78()
}

func (c *current) onListParagraphLine54(prefix interface{}) (interface{}, error) {
	return prefix, nil

}

func (p *parser) callonListParagraphLine54() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine54(stack["prefix"])
}

func (c *current) onListParagraphLine82(term interface{}) (interface{}, error) {
	return term, nil
}

func (p *parser) callonListParagraphLine82() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine82(stack["term"])
}

func (c *current) onListParagraphLine97() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine97() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine97()
}

func (c *current) onListParagraphLine108() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine108() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine108()
}

func (c *current) onListParagraphLine102() (interface{}, error) {
	return types.NewListItemContinuation()
}

func (p *parser) callonListParagraphLine102() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine102()
}

func (c *current) onListParagraphLine136() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine136() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine136()
}

func (c *current) onListParagraphLine126() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine126() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine126()
}

func (c *current) onListParagraphLine122(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonListParagraphLine122() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine122(stack["id"])
}

func (c *current) onListParagraphLine120(id interface{}) (interface{}, error) {
	return id, nil
}

func (p *parser) callonListParagraphLine120() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine120(stack["id"])
}

func (c *current) onListParagraphLine162() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine162() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine162()
}

func (c *current) onListParagraphLine152() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine152() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine152()
}

func (c *current) onListParagraphLine148(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonListParagraphLine148() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine148(stack["id"])
}

func (c *current) onListParagraphLine182() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine182() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine182()
}

func (c *current) onListParagraphLine174(title interface{}) (interface{}, error) {
	return types.NewElementTitle(title.([]interface{}))
}

func (p *parser) callonListParagraphLine174() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine174(stack["title"])
}

func (c *current) onListParagraphLine198() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine198() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine198()
}

func (c *current) onListParagraphLine192(role interface{}) (interface{}, error) {
	return types.NewElementRole(role.([]interface{}))
}

func (p *parser) callonListParagraphLine192() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine192(stack["role"])
}

func (c *current) onListParagraphLine216() (interface{}, error) {
	return types.Tip, nil
}

func (p *parser) callonListParagraphLine216() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine216()
}

func (c *current) onListParagraphLine218() (interface{}, error) {
	return types.Note, nil
}

func (p *parser) callonListParagraphLine218() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine218()
}

func (c *current) onListParagraphLine220() (interface{}, error) {
	return types.Important, nil
}

func (p *parser) callonListParagraphLine220() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine220()
}

func (c *current) onListParagraphLine222() (interface{}, error) {
	return types.Warning, nil
}

func (p *parser) callonListParagraphLine222() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine222()
}

func (c *current) onListParagraphLine224() (interface{}, error) {
	return types.Caution, nil
}

func (p *parser) callonListParagraphLine224() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine224()
}

func (c *current) onListParagraphLine211(k interface{}) (interface{}, error) {
	return types.NewAdmonitionAttribute(k.(types.AdmonitionKind))
}

func (p *parser) callonListParagraphLine211() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine211(stack["k"])
}

func (c *current) onListParagraphLine227() (interface{}, error) {
	return types.ElementAttributes{"layout": "horizontal"}, nil
}

func (p *parser) callonListParagraphLine227() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine227()
}

func (c *current) onListParagraphLine235() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine235() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine235()
}

func (c *current) onListParagraphLine246() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine246() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine246()
}

func (c *current) onListParagraphLine243(key interface{}) (interface{}, error) {
	return key, nil
}

func (p *parser) callonListParagraphLine243() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine243(stack["key"])
}

func (c *current) onListParagraphLine260(value interface{}) (interface{}, error) {
	return value, nil
}

func (p *parser) callonListParagraphLine260() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine260(stack["value"])
}

func (c *current) onListParagraphLine276() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine276() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine276()
}

func (c *current) onListParagraphLine240(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.([]interface{}), value.([]interface{}))
}

func (p *parser) callonListParagraphLine240() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine240(stack["key"], stack["value"])
}

func (c *current) onListParagraphLine284() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine284() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine284()
}

func (c *current) onListParagraphLine281(key interface{}) (interface{}, error) {
	return key, nil
}

func (p *parser) callonListParagraphLine281() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine281(stack["key"])
}

func (c *current) onListParagraphLine301() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine301() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine301()
}

func (c *current) onListParagraphLine278(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.([]interface{}), nil)
}

func (p *parser) callonListParagraphLine278() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine278(stack["key"])
}

func (c *current) onListParagraphLine229(attributes interface{}) (interface{}, error) {
	return types.NewAttributeGroup(attributes.([]interface{}))
}

func (p *parser) callonListParagraphLine229() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine229(stack["attributes"])
}

func (c *current) onListParagraphLine307() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine307() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine307()
}

func (c *current) onListParagraphLine116(attr interface{}) (interface{}, error) {
	return attr, nil // avoid returning something like `[]interface{}{attr, EOL}`
}

func (p *parser) callonListParagraphLine116() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine116(stack["attr"])
}

func (c *current) onListParagraphLine1(line interface{}) (interface{}, error) {
	return line, nil
}

func (p *parser) callonListParagraphLine1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine1(stack["line"])
}

func (c *current) onContinuedDocumentBlock9() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonContinuedDocumentBlock9() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onContinuedDocumentBlock9()
}

func (c *current) onContinuedDocumentBlock3() (interface{}, error) {
	return types.NewListItemContinuation()
}

func (p *parser) callonContinuedDocumentBlock3() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onContinuedDocumentBlock3()
}

func (c *current) onContinuedDocumentBlock1(element interface{}) (interface{}, error) {
	return element, nil
}

func (p *parser) callonContinuedDocumentBlock1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onContinuedDocumentBlock1(stack["element"])
}

func (c *current) onOrderedListItem25() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem25() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem25()
}

func (c *current) onOrderedListItem15() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem15() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem15()
}

func (c *current) onOrderedListItem11(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonOrderedListItem11() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem11(stack["id"])
}

func (c *current) onOrderedListItem9(id interface{}) (interface{}, error) {
	return id, nil
}

func (p *parser) callonOrderedListItem9() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem9(stack["id"])
}

func (c *current) onOrderedListItem51() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem51() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem51()
}

func (c *current) onOrderedListItem41() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem41() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem41()
}

func (c *current) onOrderedListItem37(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonOrderedListItem37() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem37(stack["id"])
}

func (c *current) onOrderedListItem71() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem71() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem71()
}

func (c *current) onOrderedListItem63(title interface{}) (interface{}, error) {
	return types.NewElementTitle(title.([]interface{}))
}

func (p *parser) callonOrderedListItem63() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem63(stack["title"])
}

func (c *current) onOrderedListItem87() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem87() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem87()
}

func (c *current) onOrderedListItem81(role interface{}) (interface{}, error) {
	return types.NewElementRole(role.([]interface{}))
}

func (p *parser) callonOrderedListItem81() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem81(stack["role"])
}

func (c *current) onOrderedListItem105() (interface{}, error) {
	return types.Tip, nil
}

func (p *parser) callonOrderedListItem105() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem105()
}

func (c *current) onOrderedListItem107() (interface{}, error) {
	return types.Note, nil
}

func (p *parser) callonOrderedListItem107() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem107()
}

func (c *current) onOrderedListItem109() (interface{}, error) {
	return types.Important, nil
}

func (p *parser) callonOrderedListItem109() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem109()
}

func (c *current) onOrderedListItem111() (interface{}, error) {
	return types.Warning, nil
}

func (p *parser) callonOrderedListItem111() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem111()
}

func (c *current) onOrderedListItem113() (interface{}, error) {
	return types.Caution, nil
}

func (p *parser) callonOrderedListItem113() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem113()
}

func (c *current) onOrderedListItem100(k interface{}) (interface{}, error) {
	return types.NewAdmonitionAttribute(k.(types.AdmonitionKind))
}

func (p *parser) callonOrderedListItem100() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem100(stack["k"])
}

func (c *current) onOrderedListItem116() (interface{}, error) {
	return types.ElementAttributes{"layout": "horizontal"}, nil
}

func (p *parser) callonOrderedListItem116() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem116()
}

func (c *current) onOrderedListItem124() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem124() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem124()
}

func (c *current) onOrderedListItem135() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem135() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem135()
}

func (c *current) onOrderedListItem132(key interface{}) (interface{}, error) {
	return key, nil
}

func (p *parser) callonOrderedListItem132() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem132(stack["key"])
}

func (c *current) onOrderedListItem149(value interface{}) (interface{}, error) {
	return value, nil
}

func (p *parser) callonOrderedListItem149() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem149(stack["value"])
}

func (c *current) onOrderedListItem165() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem165() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem165()
}

func (c *current) onOrderedListItem129(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.([]interface{}), value.([]interface{}))
}

func (p *parser) callonOrderedListItem129() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem129(stack["key"], stack["value"])
}

func (c *current) onOrderedListItem173() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem173() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem173()
}

func (c *current) onOrderedListItem170(key interface{}) (interface{}, error) {
	return key, nil
}

func (p *parser) callonOrderedListItem170() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem170(stack["key"])
}

func (c *current) onOrderedListItem190() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem190() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem190()
}

func (c *current) onOrderedListItem167(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.([]interface{}), nil)
}

func (p *parser) callonOrderedListItem167() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem167(stack["key"])
}

func (c *current) onOrderedListItem118(attributes interface{}) (interface{}, error) {
	return types.NewAttributeGroup(attributes.([]interface{}))
}

func (p *parser) callonOrderedListItem118() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem118(stack["attributes"])
}

func (c *current) onOrderedListItem196() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem196() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem196()
}

func (c *current) onOrderedListItem5(attr interface{}) (interface{}, error) {
	return attr, nil // avoid returning something like `[]interface{}{attr, EOL}`
}

func (p *parser) callonOrderedListItem5() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem5(stack["attr"])
}

func (c *current) onOrderedListItem209() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem209() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem209()
}

func (c *current) onOrderedListItem213() (interface{}, error) {
	// numbering style: "....."
	return types.NewOrderedListItemPrefix(types.UpperRoman, 5)

}

func (p *parser) callonOrderedListItem213() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem213()
}

func (c *current) onOrderedListItem215() (interface{}, error) {
	// numbering style: "...."
	return types.NewOrderedListItemPrefix(types.UpperAlpha, 4)

}

func (p *parser) callonOrderedListItem215() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem215()
}

func (c *current) onOrderedListItem217() (interface{}, error) {
	// numbering style: "..."
	return types.NewOrderedListItemPrefix(types.LowerRoman, 3)

}

func (p *parser) callonOrderedListItem217() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem217()
}

func (c *current) onOrderedListItem219() (interface{}, error) {
	// numbering style: ".."
	return types.NewOrderedListItemPrefix(types.LowerAlpha, 2)

}

func (p *parser) callonOrderedListItem219() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem219()
}

func (c *current) onOrderedListItem221() (interface{}, error) {
	// numbering style: "."
	return types.NewOrderedListItemPrefix(types.Arabic, 1)
	// explicit numbering

}

func (p *parser) callonOrderedListItem221() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem221()
}

func (c *current) onOrderedListItem223() (interface{}, error) {
	// numbering style: "1."
	return types.NewOrderedListItemPrefix(types.Arabic, 1)

}

func (p *parser) callonOrderedListItem223() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem223()
}

func (c *current) onOrderedListItem228() (interface{}, error) {
	// numbering style: "a."
	return types.NewOrderedListItemPrefix(types.LowerAlpha, 1)

}

func (p *parser) callonOrderedListItem228() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem228()
}

func (c *current) onOrderedListItem233() (interface{}, error) {
	// numbering style: "A."
	return types.NewOrderedListItemPrefix(types.UpperAlpha, 1)

}

func (p *parser) callonOrderedListItem233() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem233()
}

func (c *current) onOrderedListItem238() (interface{}, error) {
	// numbering style: "i)"
	return types.NewOrderedListItemPrefix(types.LowerRoman, 1)

}

func (p *parser) callonOrderedListItem238() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem238()
}

func (c *current) onOrderedListItem243() (interface{}, error) {
	// numbering style: "I)"
	return types.NewOrderedListItemPrefix(types.UpperRoman, 1)

}

func (p *parser) callonOrderedListItem243() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem243()
}

func (c *current) onOrderedListItem251() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem251() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem251()
}

func (c *current) onOrderedListItem204(prefix interface{}) (interface{}, error) {
	return prefix, nil

}

func (p *parser) callonOrderedListItem204() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem204(stack["prefix"])
}

func (c *current) onOrderedListItem264() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem264() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem264()
}

func (c *current) onOrderedListItem256() (interface{}, error) {
	return types.NewBlankLine()
}

func (p *parser) callonOrderedListItem256() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem256()
}

func (c *current) onOrderedListItem1(attributes, prefix, content interface{}) (interface{}, error) {
	return types.NewOrderedListItem(prefix.(types.OrderedListItemPrefix), content.([]interface{}), attributes.([]interface{}))
}

func (p *parser) callonOrderedListItem1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem1(stack["attributes"], stack["prefix"], stack["content"])
}

func (c *current) onOrderedListItemContent1(elements interface{}) (interface{}, error) {
	// Another list or a literal paragraph immediately following a list item will be implicitly included in the list item
	return types.NewListItemContent(elements.([]interface{}))
}

func (p *parser) callonOrderedListItemContent1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItemContent1(stack["elements"])
}

func (c *current) onUnorderedListItem9() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonUnorderedListItem9() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onUnorderedListItem9()
}

func (c *current) onUnorderedListItem13() (interface{}, error) {
	// ignore whitespaces, only return the relevant "*"/"-" marker
	return types.NewUnorderedListItemPrefix(types.FiveAsterisks, 5)

}

func (p *parser) callonUnorderedListItem13() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onUnorderedListItem13()
}

func (c *current) onUnorderedListItem15() (interface{}, error) {
	// ignore whitespaces, only return the relevant "*"/"-" marker
	return types.NewUnorderedListItemPrefix(types.FourAsterisks, 4)

}

func (p *parser) callonUnorderedListItem15() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onUnorderedListItem15()
}

func (c *current) onUnorderedListItem17() (interface{}, error) {
	// ignore whitespaces, only return the relevant "*"/"-" marker
	return types.NewUnorderedListItemPrefix(types.ThreeAsterisks, 3)

}

func (p *parser) callonUnorderedListItem17() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onUnorderedListItem17()
}

func (c *current) onUnorderedListItem19() (interface{}, error) {
	// ignore whitespaces, only return the relevant "*"/"-" marker
	return types.NewUnorderedListItemPrefix(types.TwoAsterisks, 2)

}

func (p *parser) callonUnorderedListItem19() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onUnorderedListItem19()
}

func (c *current) onUnorderedListItem21() (interface{}, error) {
	// ignore whitespaces, only return the relevant "*"/"-" marker
	return types.NewUnorderedListItemPrefix(types.OneAsterisk, 1)

}

func (p *parser) callonUnorderedListItem21() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onUnorderedListItem21()
}

func (c *current) onUnorderedListItem23() (interface{}, error) {
	// ignore whitespaces, only return the relevant "*"/"-" marker
	return types.NewUnorderedListItemPrefix(types.Dash, 1)

}

func (p *parser) callonUnorderedListItem23() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onUnorderedListItem23()
}

func (c *current) onUnorderedListItem28() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonUnorderedListItem28() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onUnorderedListItem28()
}

func (c *current) onUnorderedListItem4(prefix interface{}) (interface{}, error) {
	return prefix, nil

}

func (p *parser) callonUnorderedListItem4() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onUnorderedListItem4(stack["prefix"])
}

func (c *current) onUnorderedListItem41() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonUnorderedListItem41() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onUnorderedListItem41()
}

func (c *current) onUnorderedListItem33() (interface{}, error) {
	return types.NewBlankLine()
}

func (p *parser) callonUnorderedListItem33() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onUnorderedListItem33()
}

func (c *current) onUnorderedListItem1(prefix, content interface{}) (interface{}, error) {
	return types.NewUnorderedListItem(prefix.(types.UnorderedListItemPrefix), content.([]interface{}))
}

func (p *parser) callonUnorderedListItem1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onUnorderedListItem1(stack["prefix"], stack["content"])
}

func (c *current) onUnorderedListItemContent1(elements interface{}) (interface{}, error) {
	// Another list or a literal paragraph immediately following a list item will be implicitly included in the list item
	return types.NewListItemContent(elements.([]interface{}))
}

func (p *parser) callonUnorderedListItemContent1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onUnorderedListItemContent1(stack["elements"])
}

func (c *current) onLabeledListItem5(term interface{}) (interface{}, error) {
	return term, nil
}

func (p *parser) callonLabeledListItem5() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onLabeledListItem5(stack["term"])
}

func (c *current) onLabeledListItem20() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonLabeledListItem20() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onLabeledListItem20()
}

func (c *current) onLabeledListItem2(term, description interface{}) (interface{}, error) {
	return types.NewLabeledListItem(term.([]interface{}), description.([]interface{}))

}

func (p *parser) callonLabeledListItem2() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onLabeledListItem2(stack["term"], stack["description"])
}

func (c *current) onLabeledListItem29(term interface{}) (interface{}, error) {
	return term, nil
}

func (p *parser) callonLabeledListItem29() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onLabeledListItem29(stack["term"])
}

func (c *current) onLabeledListItem44() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonLabeledListItem44() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onLabeledListItem44()
}

func (c *current) onLabeledListItem26(term interface{}) (interface{}, error) {
	// here, WS is optional since there is no description afterwards
	return types.NewLabeledListItem(term.([]interface{}), nil)

}

func (p *parser) callonLabeledListItem26() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onLabeledListItem26(stack["term"])
}

func (c *current) onLabeledListItemDescription1(elements interface{}) (interface{}, error) {
	// TODO: replace with (ListParagraph+ ContinuedDocumentBlock*) and use a single rule for all item contents ?
	return types.NewListItemContent(elements.([]interface{}))
}

func (p *parser) callonLabeledListItemDescription1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onLabeledListItemDescription1(stack["elements"])
}

func (c *current) onParagraph18() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph18() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph18()
}

func (c *current) onParagraph31() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph31() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph31()
}

func (c *current) onParagraph43() (interface{}, error) {
	return types.Tip, nil
}

func (p *parser) callonParagraph43() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph43()
}

func (c *current) onParagraph45() (interface{}, error) {
	return types.Note, nil
}

func (p *parser) callonParagraph45() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph45()
}

func (c *current) onParagraph47() (interface{}, error) {
	return types.Important, nil
}

func (p *parser) callonParagraph47() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph47()
}

func (c *current) onParagraph49() (interface{}, error) {
	return types.Warning, nil
}

func (p *parser) callonParagraph49() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph49()
}

func (c *current) onParagraph51() (interface{}, error) {
	return types.Caution, nil
}

func (p *parser) callonParagraph51() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph51()
}

func (c *current) onParagraph15() (interface{}, error) {
	// make sure quote attribute does not collide with other generic or specific attributes (ID, Admonition, etc)
	return string(c.text), nil
}

func (p *parser) callonParagraph15() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph15()
}

func (c *current) onParagraph57() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph57() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph57()
}

func (c *current) onParagraph61() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph61() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph61()
}

func (c *current) onParagraph77() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph77() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph77()
}

func (c *current) onParagraph11(kind, author, title interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), author.(string), title.(string))

}

func (p *parser) callonParagraph11() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph11(stack["kind"], stack["author"], stack["title"])
}

func (c *current) onParagraph99() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph99() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph99()
}

func (c *current) onParagraph112() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph112() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph112()
}

func (c *current) onParagraph124() (interface{}, error) {
	return types.Tip, nil
}

func (p *parser) callonParagraph124() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph124()
}

func (c *current) onParagraph126() (interface{}, error) {
	return types.Note, nil
}

func (p *parser) callonParagraph126() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph126()
}

func (c *current) onParagraph128() (interface{}, error) {
	return types.Important, nil
}

func (p *parser) callonParagraph128() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph128()
}

func (c *current) onParagraph130() (interface{}, error) {
	return types.Warning, nil
}

func (p *parser) callonParagraph130() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph130()
}

func (c *current) onParagraph132() (interface{}, error) {
	return types.Caution, nil
}

func (p *parser) callonParagraph132() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph132()
}

func (c *current) onParagraph96() (interface{}, error) {
	// make sure quote attribute does not collide with other generic or specific attributes (ID, Admonition, etc)
	return string(c.text), nil
}

func (p *parser) callonParagraph96() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph96()
}

func (c *current) onParagraph138() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph138() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph138()
}

func (c *current) onParagraph142() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph142() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph142()
}

func (c *current) onParagraph92(kind, author interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), author.(string), "")

}

func (p *parser) callonParagraph92() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph92(stack["kind"], stack["author"])
}

func (c *current) onParagraph164() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph164() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph164()
}

func (c *current) onParagraph177() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph177() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph177()
}

func (c *current) onParagraph189() (interface{}, error) {
	return types.Tip, nil
}

func (p *parser) callonParagraph189() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph189()
}

func (c *current) onParagraph191() (interface{}, error) {
	return types.Note, nil
}

func (p *parser) callonParagraph191() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph191()
}

func (c *current) onParagraph193() (interface{}, error) {
	return types.Important, nil
}

func (p *parser) callonParagraph193() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph193()
}

func (c *current) onParagraph195() (interface{}, error) {
	return types.Warning, nil
}

func (p *parser) callonParagraph195() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph195()
}

func (c *current) onParagraph197() (interface{}, error) {
	return types.Caution, nil
}

func (p *parser) callonParagraph197() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph197()
}

func (c *current) onParagraph161() (interface{}, error) {
	// make sure quote attribute does not collide with other generic or specific attributes (ID, Admonition, etc)
	return string(c.text), nil
}

func (p *parser) callonParagraph161() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph161()
}

func (c *current) onParagraph203() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph203() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph203()
}

func (c *current) onParagraph157(kind interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), "", "")

}

func (p *parser) callonParagraph157() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph157(stack["kind"])
}

func (c *current) onParagraph210() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph210() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph210()
}

func (c *current) onParagraph215() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph215() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph215()
}

func (c *current) onParagraph219() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph219() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph219()
}

func (c *current) onParagraph235() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph235() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph235()
}

func (c *current) onParagraph206(kind, author, title interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), author.(string), title.(string))

}

func (p *parser) callonParagraph206() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph206(stack["kind"], stack["author"], stack["title"])
}

func (c *current) onParagraph254() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph254() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph254()
}

func (c *current) onParagraph259() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph259() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph259()
}

func (c *current) onParagraph263() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph263() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph263()
}

func (c *current) onParagraph250(kind, author interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), author.(string), "")

}

func (p *parser) callonParagraph250() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph250(stack["kind"], stack["author"])
}

func (c *current) onParagraph282() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph282() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph282()
}

func (c *current) onParagraph287() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph287() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph287()
}

func (c *current) onParagraph278(kind interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), "", "")

}

func (p *parser) callonParagraph278() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph278(stack["kind"])
}

func (c *current) onParagraph293() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph293() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph293()
}

func (c *current) onParagraph7(attr interface{}) (interface{}, error) {
	return attr, nil // avoid returning something like `[]interface{}{attr, EOL}`
}

func (p *parser) callonParagraph7() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph7(stack["attr"])
}

func (c *current) onParagraph320() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph320() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph320()
}

func (c *current) onParagraph310() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph310() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph310()
}

func (c *current) onParagraph306(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonParagraph306() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph306(stack["id"])
}

func (c *current) onParagraph304(id interface{}) (interface{}, error) {
	return id, nil
}

func (p *parser) callonParagraph304() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph304(stack["id"])
}

func (c *current) onParagraph346() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph346() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph346()
}

func (c *current) onParagraph336() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph336() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph336()
}

func (c *current) onParagraph332(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonParagraph332() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph332(stack["id"])
}

func (c *current) onParagraph366() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph366() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph366()
}

func (c *current) onParagraph358(title interface{}) (interface{}, error) {
	return types.NewElementTitle(title.([]interface{}))
}

func (p *parser) callonParagraph358() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph358(stack["title"])
}

func (c *current) onParagraph382() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph382() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph382()
}

func (c *current) onParagraph376(role interface{}) (interface{}, error) {
	return types.NewElementRole(role.([]interface{}))
}

func (p *parser) callonParagraph376() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph376(stack["role"])
}

func (c *current) onParagraph400() (interface{}, error) {
	return types.Tip, nil
}

func (p *parser) callonParagraph400() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph400()
}

func (c *current) onParagraph402() (interface{}, error) {
	return types.Note, nil
}

func (p *parser) callonParagraph402() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph402()
}

func (c *current) onParagraph404() (interface{}, error) {
	return types.Important, nil
}

func (p *parser) callonParagraph404() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph404()
}

func (c *current) onParagraph406() (interface{}, error) {
	return types.Warning, nil
}

func (p *parser) callonParagraph406() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph406()
}

func (c *current) onParagraph408() (interface{}, error) {
	return types.Caution, nil
}

func (p *parser) callonParagraph408() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph408()
}

func (c *current) onParagraph395(k interface{}) (interface{}, error) {
	return types.NewAdmonitionAttribute(k.(types.AdmonitionKind))
}

func (p *parser) callonParagraph395() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph395(stack["k"])
}

func (c *current) onParagraph411() (interface{}, error) {
	return types.ElementAttributes{"layout": "horizontal"}, nil
}

func (p *parser) callonParagraph411() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph411()
}

func (c *current) onParagraph419() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph419() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph419()
}

func (c *current) onParagraph430() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph430() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph430()
}

func (c *current) onParagraph427(key interface{}) (interface{}, error) {
	return key, nil
}

func (p *parser) callonParagraph427() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph427(stack["key"])
}

func (c *current) onParagraph444(value interface{}) (interface{}, error) {
	return value, nil
}

func (p *parser) callonParagraph444() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph444(stack["value"])
}

func (c *current) onParagraph460() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph460() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph460()
}

func (c *current) onParagraph424(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.([]interface{}), value.([]interface{}))
}

func (p *parser) callonParagraph424() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph424(stack["key"], stack["value"])
}

func (c *current) onParagraph468() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph468() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph468()
}

func (c *current) onParagraph465(key interface{}) (interface{}, error) {
	return key, nil
}

func (p *parser) callonParagraph465() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph465(stack["key"])
}

func (c *current) onParagraph485() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph485() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph485()
}

func (c *current) onParagraph462(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.([]interface{}), nil)
}

func (p *parser) callonParagraph462() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph462(stack["key"])
}

func (c *current) onParagraph413(attributes interface{}) (interface{}, error) {
	return types.NewAttributeGroup(attributes.([]interface{}))
}

func (p *parser) callonParagraph413() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph413(stack["attributes"])
}

func (c *current) onParagraph491() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph491() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph491()
}

func (c *current) onParagraph300(attr interface{}) (interface{}, error) {
	return attr, nil // avoid returning something like `[]interface{}{attr, EOL}`
}

func (p *parser) callonParagraph300() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph300(stack["attr"])
}

func (c *current) onParagraph505() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph505() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph505()
}

func (c *current) onParagraph513() (interface{}, error) {
	return types.Tip, nil
}

func (p *parser) callonParagraph513() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph513()
}

func (c *current) onParagraph515() (interface{}, error) {
	return types.Note, nil
}

func (p *parser) callonParagraph515() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph515()
}

func (c *current) onParagraph517() (interface{}, error) {
	return types.Important, nil
}

func (p *parser) callonParagraph517() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph517()
}

func (c *current) onParagraph519() (interface{}, error) {
	return types.Warning, nil
}

func (p *parser) callonParagraph519() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph519()
}

func (c *current) onParagraph521() (interface{}, error) {
	return types.Caution, nil
}

func (p *parser) callonParagraph521() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph521()
}

func (c *current) onParagraph2(attributes, t, lines interface{}) (interface{}, error) {

	return types.NewAdmonitionParagraph(lines.([]interface{}), t.(types.AdmonitionKind), attributes.([]interface{}))

}

func (p *parser) callonParagraph2() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph2(stack["attributes"], stack["t"], stack["lines"])
}

func (c *current) onParagraph543() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph543() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph543()
}

func (c *current) onParagraph556() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph556() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph556()
}

func (c *current) onParagraph568() (interface{}, error) {
	return types.Tip, nil
}

func (p *parser) callonParagraph568() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph568()
}

func (c *current) onParagraph570() (interface{}, error) {
	return types.Note, nil
}

func (p *parser) callonParagraph570() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph570()
}

func (c *current) onParagraph572() (interface{}, error) {
	return types.Important, nil
}

func (p *parser) callonParagraph572() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph572()
}

func (c *current) onParagraph574() (interface{}, error) {
	return types.Warning, nil
}

func (p *parser) callonParagraph574() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph574()
}

func (c *current) onParagraph576() (interface{}, error) {
	return types.Caution, nil
}

func (p *parser) callonParagraph576() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph576()
}

func (c *current) onParagraph540() (interface{}, error) {
	// make sure quote attribute does not collide with other generic or specific attributes (ID, Admonition, etc)
	return string(c.text), nil
}

func (p *parser) callonParagraph540() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph540()
}

func (c *current) onParagraph582() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph582() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph582()
}

func (c *current) onParagraph586() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph586() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph586()
}

func (c *current) onParagraph602() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph602() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph602()
}

func (c *current) onParagraph536(kind, author, title interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), author.(string), title.(string))

}

func (p *parser) callonParagraph536() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph536(stack["kind"], stack["author"], stack["title"])
}

func (c *current) onParagraph624() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph624() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph624()
}

func (c *current) onParagraph637() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph637() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph637()
}

func (c *current) onParagraph649() (interface{}, error) {
	return types.Tip, nil
}

func (p *parser) callonParagraph649() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph649()
}

func (c *current) onParagraph651() (interface{}, error) {
	return types.Note, nil
}

func (p *parser) callonParagraph651() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph651()
}

func (c *current) onParagraph653() (interface{}, error) {
	return types.Important, nil
}

func (p *parser) callonParagraph653() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph653()
}

func (c *current) onParagraph655() (interface{}, error) {
	return types.Warning, nil
}

func (p *parser) callonParagraph655() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph655()
}

func (c *current) onParagraph657() (interface{}, error) {
	return types.Caution, nil
}

func (p *parser) callonParagraph657() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph657()
}

func (c *current) onParagraph621() (interface{}, error) {
	// make sure quote attribute does not collide with other generic or specific attributes (ID, Admonition, etc)
	return string(c.text), nil
}

func (p *parser) callonParagraph621() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph621()
}

func (c *current) onParagraph663() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph663() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph663()
}

func (c *current) onParagraph667() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph667() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph667()
}

func (c *current) onParagraph617(kind, author interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), author.(string), "")

}

func (p *parser) callonParagraph617() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph617(stack["kind"], stack["author"])
}

func (c *current) onParagraph689() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph689() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph689()
}

func (c *current) onParagraph702() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph702() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph702()
}

func (c *current) onParagraph714() (interface{}, error) {
	return types.Tip, nil
}

func (p *parser) callonParagraph714() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph714()
}

func (c *current) onParagraph716() (interface{}, error) {
	return types.Note, nil
}

func (p *parser) callonParagraph716() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph716()
}

func (c *current) onParagraph718() (interface{}, error) {
	return types.Important, nil
}

func (p *parser) callonParagraph718() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph718()
}

func (c *current) onParagraph720() (interface{}, error) {
	return types.Warning, nil
}

func (p *parser) callonParagraph720() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph720()
}

func (c *current) onParagraph722() (interface{}, error) {
	return types.Caution, nil
}

func (p *parser) callonParagraph722() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph722()
}

func (c *current) onParagraph686() (interface{}, error) {
	// make sure quote attribute does not collide with other generic or specific attributes (ID, Admonition, etc)
	return string(c.text), nil
}

func (p *parser) callonParagraph686() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph686()
}

func (c *current) onParagraph728() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph728() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph728()
}

func (c *current) onParagraph682(kind interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), "", "")

}

func (p *parser) callonParagraph682() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph682(stack["kind"])
}

func (c *current) onParagraph735() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph735() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph735()
}

func (c *current) onParagraph740() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph740() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph740()
}

func (c *current) onParagraph744() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph744() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph744()
}

func (c *current) onParagraph760() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph760() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph760()
}

func (c *current) onParagraph731(kind, author, title interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), author.(string), title.(string))

}

func (p *parser) callonParagraph731() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph731(stack["kind"], stack["author"], stack["title"])
}

func (c *current) onParagraph779() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph779() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph779()
}

func (c *current) onParagraph784() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph784() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph784()
}

func (c *current) onParagraph788() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph788() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph788()
}

func (c *current) onParagraph775(kind, author interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), author.(string), "")

}

func (p *parser) callonParagraph775() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph775(stack["kind"], stack["author"])
}

func (c *current) onParagraph807() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph807() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph807()
}

func (c *current) onParagraph812() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph812() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph812()
}

func (c *current) onParagraph803(kind interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), "", "")

}

func (p *parser) callonParagraph803() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph803(stack["kind"])
}

func (c *current) onParagraph818() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph818() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph818()
}

func (c *current) onParagraph532(attr interface{}) (interface{}, error) {
	return attr, nil // avoid returning something like `[]interface{}{attr, EOL}`
}

func (p *parser) callonParagraph532() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph532(stack["attr"])
}

func (c *current) onParagraph845() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph845() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph845()
}

func (c *current) onParagraph835() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph835() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph835()
}

func (c *current) onParagraph831(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonParagraph831() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph831(stack["id"])
}

func (c *current) onParagraph829(id interface{}) (interface{}, error) {
	return id, nil
}

func (p *parser) callonParagraph829() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph829(stack["id"])
}

func (c *current) onParagraph871() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph871() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph871()
}

func (c *current) onParagraph861() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph861() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph861()
}

func (c *current) onParagraph857(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonParagraph857() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph857(stack["id"])
}

func (c *current) onParagraph891() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph891() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph891()
}

func (c *current) onParagraph883(title interface{}) (interface{}, error) {
	return types.NewElementTitle(title.([]interface{}))
}

func (p *parser) callonParagraph883() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph883(stack["title"])
}

func (c *current) onParagraph907() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph907() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph907()
}

func (c *current) onParagraph901(role interface{}) (interface{}, error) {
	return types.NewElementRole(role.([]interface{}))
}

func (p *parser) callonParagraph901() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph901(stack["role"])
}

func (c *current) onParagraph925() (interface{}, error) {
	return types.Tip, nil
}

func (p *parser) callonParagraph925() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph925()
}

func (c *current) onParagraph927() (interface{}, error) {
	return types.Note, nil
}

func (p *parser) callonParagraph927() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph927()
}

func (c *current) onParagraph929() (interface{}, error) {
	return types.Important, nil
}

func (p *parser) callonParagraph929() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph929()
}

func (c *current) onParagraph931() (interface{}, error) {
	return types.Warning, nil
}

func (p *parser) callonParagraph931() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph931()
}

func (c *current) onParagraph933() (interface{}, error) {
	return types.Caution, nil
}

func (p *parser) callonParagraph933() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph933()
}

func (c *current) onParagraph920(k interface{}) (interface{}, error) {
	return types.NewAdmonitionAttribute(k.(types.AdmonitionKind))
}

func (p *parser) callonParagraph920() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph920(stack["k"])
}

func (c *current) onParagraph936() (interface{}, error) {
	return types.ElementAttributes{"layout": "horizontal"}, nil
}

func (p *parser) callonParagraph936() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph936()
}

func (c *current) onParagraph944() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph944() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph944()
}

func (c *current) onParagraph955() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph955() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph955()
}

func (c *current) onParagraph952(key interface{}) (interface{}, error) {
	return key, nil
}

func (p *parser) callonParagraph952() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph952(stack["key"])
}

func (c *current) onParagraph969(value interface{}) (interface{}, error) {
	return value, nil
}

func (p *parser) callonParagraph969() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph969(stack["value"])
}

func (c *current) onParagraph985() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph985() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph985()
}

func (c *current) onParagraph949(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.([]interface{}), value.([]interface{}))
}

func (p *parser) callonParagraph949() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph949(stack["key"], stack["value"])
}

func (c *current) onParagraph993() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph993() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph993()
}

func (c *current) onParagraph990(key interface{}) (interface{}, error) {
	return key, nil
}

func (p *parser) callonParagraph990() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph990(stack["key"])
}

func (c *current) onParagraph1010() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph1010() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph1010()
}

func (c *current) onParagraph987(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.([]interface{}), nil)
}

func (p *parser) callonParagraph987() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph987(stack["key"])
}

func (c *current) onParagraph938(attributes interface{}) (interface{}, error) {
	return types.NewAttributeGroup(attributes.([]interface{}))
}

func (p *parser) callonParagraph938() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph938(stack["attributes"])
}

func (c *current) onParagraph1016() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph1016() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph1016()
}

func (c *current) onParagraph825(attr interface{}) (interface{}, error) {
	return attr, nil // avoid returning something like `[]interface{}{attr, EOL}`
}

func (p *parser) callonParagraph825() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph825(stack["attr"])
}

func (c *current) onParagraph1030() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph1030() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph1030()
}

func (c *current) onParagraph527(attributes, lines interface{}) (interface{}, error) {

	return types.NewParagraph(lines.([]interface{}), attributes.([]interface{}))

}

func (p *parser) callonParagraph527() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph527(stack["attributes"], stack["lines"])
}

func (c *current) onInlineElements4(content interface{}) (interface{}, error) {
	return types.NewSingleLineComment(content.([]interface{}))
}

func (p *parser) callonInlineElements4() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElements4(stack["content"])
}

func (c *current) onInlineElements2(comment interface{}) (interface{}, error) {
	return types.NewInlineElements([]interface{}{comment})

}

func (p *parser) callonInlineElements2() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElements2(stack["comment"])
}

func (c *current) onInlineElements49() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElements49() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElements49()
}

func (c *current) onInlineElements66() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElements66() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElements66()
}

func (c *current) onInlineElements56() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElements56() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElements56()
}

func (c *current) onInlineElements52(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonInlineElements52() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElements52(stack["id"])
}

func (c *current) onInlineElements82() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElements82() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElements82()
}

func (c *current) onInlineElements24(elements interface{}) (interface{}, error) {
	// absorbs heading and trailing spaces
	return types.NewInlineElements(elements.([]interface{}))

}

func (p *parser) callonInlineElements24() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElements24(stack["elements"])
}

func (c *current) onInlineElement19() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement19() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement19()
}

func (c *current) onInlineElement9() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement9() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement9()
}

func (c *current) onInlineElement5(id interface{}) (interface{}, error) {
	return types.NewCrossReference(id.(string))
}

func (p *parser) callonInlineElement5() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement5(stack["id"])
}

func (c *current) onInlineElement48() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement48() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement48()
}

func (c *current) onInlineElement38() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement38() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement38()
}

func (c *current) onInlineElement61(value interface{}) (interface{}, error) {
	// attribute is followed by "," or "]" (but do not consume the latter)
	return value, nil
}

func (p *parser) callonInlineElement61() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement61(stack["value"])
}

func (c *current) onInlineElement78(value interface{}) (interface{}, error) {
	// attribute is followed by "," or "]" (but do not consume the latter)
	return value, nil
}

func (p *parser) callonInlineElement78() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement78(stack["value"])
}

func (c *current) onInlineElement95(value interface{}) (interface{}, error) {
	// attribute is followed by "," or "]" (but do not consume the latter)
	return value, nil
}

func (p *parser) callonInlineElement95() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement95(stack["value"])
}

func (c *current) onInlineElement120() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement120() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement120()
}

func (c *current) onInlineElement117(key interface{}) (interface{}, error) {
	return key, nil
}

func (p *parser) callonInlineElement117() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement117(stack["key"])
}

func (c *current) onInlineElement134(value interface{}) (interface{}, error) {
	return value, nil
}

func (p *parser) callonInlineElement134() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement134(stack["value"])
}

func (c *current) onInlineElement150() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement150() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement150()
}

func (c *current) onInlineElement114(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.([]interface{}), value.([]interface{}))
}

func (p *parser) callonInlineElement114() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement114(stack["key"], stack["value"])
}

func (c *current) onInlineElement158() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement158() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement158()
}

func (c *current) onInlineElement155(key interface{}) (interface{}, error) {
	return key, nil
}

func (p *parser) callonInlineElement155() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement155(stack["key"])
}

func (c *current) onInlineElement175() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement175() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement175()
}

func (c *current) onInlineElement152(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.([]interface{}), nil)
}

func (p *parser) callonInlineElement152() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement152(stack["key"])
}

func (c *current) onInlineElement57(alt, width, height, otherAttrs interface{}) (interface{}, error) {
	return types.NewImageAttributes(alt.([]interface{}), width.([]interface{}), height.([]interface{}), otherAttrs.([]interface{}))

}

func (p *parser) callonInlineElement57() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement57(stack["alt"], stack["width"], stack["height"], stack["otherAttrs"])
}

func (c *current) onInlineElement182(value interface{}) (interface{}, error) {
	// attribute is followed by "," or "]" (but do not consume the latter)
	return value, nil
}

func (p *parser) callonInlineElement182() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement182(stack["value"])
}

func (c *current) onInlineElement199(value interface{}) (interface{}, error) {
	// attribute is followed by "," or "]" (but do not consume the latter)
	return value, nil
}

func (p *parser) callonInlineElement199() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement199(stack["value"])
}

func (c *current) onInlineElement224() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement224() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement224()
}

func (c *current) onInlineElement221(key interface{}) (interface{}, error) {
	return key, nil
}

func (p *parser) callonInlineElement221() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement221(stack["key"])
}

func (c *current) onInlineElement238(value interface{}) (interface{}, error) {
	return value, nil
}

func (p *parser) callonInlineElement238() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement238(stack["value"])
}

func (c *current) onInlineElement254() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement254() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement254()
}

func (c *current) onInlineElement218(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.([]interface{}), value.([]interface{}))
}

func (p *parser) callonInlineElement218() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement218(stack["key"], stack["value"])
}

func (c *current) onInlineElement262() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement262() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement262()
}

func (c *current) onInlineElement259(key interface{}) (interface{}, error) {
	return key, nil
}

func (p *parser) callonInlineElement259() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement259(stack["key"])
}

func (c *current) onInlineElement279() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement279() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement279()
}

func (c *current) onInlineElement256(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.([]interface{}), nil)
}

func (p *parser) callonInlineElement256() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement256(stack["key"])
}

func (c *current) onInlineElement178(alt, width, otherAttrs interface{}) (interface{}, error) {
	return types.NewImageAttributes(alt.([]interface{}), width.([]interface{}), nil, otherAttrs.([]interface{}))

}

func (p *parser) callonInlineElement178() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement178(stack["alt"], stack["width"], stack["otherAttrs"])
}

func (c *current) onInlineElement286(value interface{}) (interface{}, error) {
	// attribute is followed by "," or "]" (but do not consume the latter)
	return value, nil
}

func (p *parser) callonInlineElement286() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement286(stack["value"])
}

func (c *current) onInlineElement311() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement311() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement311()
}

func (c *current) onInlineElement308(key interface{}) (interface{}, error) {
	return key, nil
}

func (p *parser) callonInlineElement308() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement308(stack["key"])
}

func (c *current) onInlineElement325(value interface{}) (interface{}, error) {
	return value, nil
}

func (p *parser) callonInlineElement325() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement325(stack["value"])
}

func (c *current) onInlineElement341() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement341() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement341()
}

func (c *current) onInlineElement305(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.([]interface{}), value.([]interface{}))
}

func (p *parser) callonInlineElement305() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement305(stack["key"], stack["value"])
}

func (c *current) onInlineElement349() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement349() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement349()
}

func (c *current) onInlineElement346(key interface{}) (interface{}, error) {
	return key, nil
}

func (p *parser) callonInlineElement346() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement346(stack["key"])
}

func (c *current) onInlineElement366() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement366() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement366()
}

func (c *current) onInlineElement343(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.([]interface{}), nil)
}

func (p *parser) callonInlineElement343() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement343(stack["key"])
}

func (c *current) onInlineElement282(alt, otherAttrs interface{}) (interface{}, error) {
	return types.NewImageAttributes(alt.([]interface{}), nil, nil, otherAttrs.([]interface{}))

}

func (p *parser) callonInlineElement282() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement282(stack["alt"], stack["otherAttrs"])
}

func (c *current) onInlineElement381() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement381() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement381()
}

func (c *current) onInlineElement378(key interface{}) (interface{}, error) {
	return key, nil
}

func (p *parser) callonInlineElement378() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement378(stack["key"])
}

func (c *current) onInlineElement395(value interface{}) (interface{}, error) {
	return value, nil
}

func (p *parser) callonInlineElement395() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement395(stack["value"])
}

func (c *current) onInlineElement411() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement411() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement411()
}

func (c *current) onInlineElement375(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.([]interface{}), value.([]interface{}))
}

func (p *parser) callonInlineElement375() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement375(stack["key"], stack["value"])
}

func (c *current) onInlineElement419() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement419() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement419()
}

func (c *current) onInlineElement416(key interface{}) (interface{}, error) {
	return key, nil
}

func (p *parser) callonInlineElement416() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement416(stack["key"])
}

func (c *current) onInlineElement436() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement436() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement436()
}

func (c *current) onInlineElement413(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.([]interface{}), nil)
}

func (p *parser) callonInlineElement413() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement413(stack["key"])
}

func (c *current) onInlineElement369(otherAttrs interface{}) (interface{}, error) {
	return types.NewImageAttributes(nil, nil, nil, otherAttrs.([]interface{}))

}

func (p *parser) callonInlineElement369() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement369(stack["otherAttrs"])
}

func (c *current) onInlineElement32(path, attributes interface{}) (interface{}, error) {
	return types.NewInlineImage(path.(string), attributes.(types.ElementAttributes))
}

func (p *parser) callonInlineElement32() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement32(stack["path"], stack["attributes"])
}

func (c *current) onInlineElement464() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement464() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement464()
}

func (c *current) onInlineElement454() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement454() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement454()
}

func (c *current) onInlineElement477(value interface{}) (interface{}, error) {
	return value, nil
}

func (p *parser) callonInlineElement477() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement477(stack["value"])
}

func (c *current) onInlineElement495() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement495() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement495()
}

func (c *current) onInlineElement492(key interface{}) (interface{}, error) {
	return key, nil
}

func (p *parser) callonInlineElement492() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement492(stack["key"])
}

func (c *current) onInlineElement509(value interface{}) (interface{}, error) {
	return value, nil
}

func (p *parser) callonInlineElement509() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement509(stack["value"])
}

func (c *current) onInlineElement525() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement525() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement525()
}

func (c *current) onInlineElement489(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.([]interface{}), value.([]interface{}))
}

func (p *parser) callonInlineElement489() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement489(stack["key"], stack["value"])
}

func (c *current) onInlineElement533() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement533() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement533()
}

func (c *current) onInlineElement530(key interface{}) (interface{}, error) {
	return key, nil
}

func (p *parser) callonInlineElement530() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement530(stack["key"])
}

func (c *current) onInlineElement550() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement550() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement550()
}

func (c *current) onInlineElement527(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.([]interface{}), nil)
}

func (p *parser) callonInlineElement527() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement527(stack["key"])
}

func (c *current) onInlineElement473(text, otherAttrs interface{}) (interface{}, error) {
	return types.NewLinkAttributes(text.([]interface{}), otherAttrs.([]interface{}))
}

func (p *parser) callonInlineElement473() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement473(stack["text"], stack["otherAttrs"])
}

func (c *current) onInlineElement565() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement565() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement565()
}

func (c *current) onInlineElement562(key interface{}) (interface{}, error) {
	return key, nil
}

func (p *parser) callonInlineElement562() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement562(stack["key"])
}

func (c *current) onInlineElement579(value interface{}) (interface{}, error) {
	return value, nil
}

func (p *parser) callonInlineElement579() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement579(stack["value"])
}

func (c *current) onInlineElement595() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement595() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement595()
}

func (c *current) onInlineElement559(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.([]interface{}), value.([]interface{}))
}

func (p *parser) callonInlineElement559() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement559(stack["key"], stack["value"])
}

func (c *current) onInlineElement603() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement603() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement603()
}

func (c *current) onInlineElement600(key interface{}) (interface{}, error) {
	return key, nil
}

func (p *parser) callonInlineElement600() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement600(stack["key"])
}

func (c *current) onInlineElement620() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement620() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement620()
}

func (c *current) onInlineElement597(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.([]interface{}), nil)
}

func (p *parser) callonInlineElement597() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement597(stack["key"])
}

func (c *current) onInlineElement553(otherAttrs interface{}) (interface{}, error) {
	return types.NewLinkAttributes(nil, otherAttrs.([]interface{}))
}

func (p *parser) callonInlineElement553() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement553(stack["otherAttrs"])
}

func (c *current) onInlineElement442(url, attributes interface{}) (interface{}, error) {
	return types.NewLink(url.([]interface{}), attributes.(types.ElementAttributes))
}

func (p *parser) callonInlineElement442() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement442(stack["url"], stack["attributes"])
}

func (c *current) onInlineElement643() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement643() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement643()
}

func (c *current) onInlineElement633() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement633() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement633()
}

func (c *current) onInlineElement656(value interface{}) (interface{}, error) {
	return value, nil
}

func (p *parser) callonInlineElement656() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement656(stack["value"])
}

func (c *current) onInlineElement674() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement674() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement674()
}

func (c *current) onInlineElement671(key interface{}) (interface{}, error) {
	return key, nil
}

func (p *parser) callonInlineElement671() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement671(stack["key"])
}

func (c *current) onInlineElement688(value interface{}) (interface{}, error) {
	return value, nil
}

func (p *parser) callonInlineElement688() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement688(stack["value"])
}

func (c *current) onInlineElement704() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement704() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement704()
}

func (c *current) onInlineElement668(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.([]interface{}), value.([]interface{}))
}

func (p *parser) callonInlineElement668() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement668(stack["key"], stack["value"])
}

func (c *current) onInlineElement712() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement712() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement712()
}

func (c *current) onInlineElement709(key interface{}) (interface{}, error) {
	return key, nil
}

func (p *parser) callonInlineElement709() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement709(stack["key"])
}

func (c *current) onInlineElement729() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement729() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement729()
}

func (c *current) onInlineElement706(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.([]interface{}), nil)
}

func (p *parser) callonInlineElement706() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement706(stack["key"])
}

func (c *current) onInlineElement652(text, otherAttrs interface{}) (interface{}, error) {
	return types.NewLinkAttributes(text.([]interface{}), otherAttrs.([]interface{}))
}

func (p *parser) callonInlineElement652() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement652(stack["text"], stack["otherAttrs"])
}

func (c *current) onInlineElement744() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement744() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement744()
}

func (c *current) onInlineElement741(key interface{}) (interface{}, error) {
	return key, nil
}

func (p *parser) callonInlineElement741() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement741(stack["key"])
}

func (c *current) onInlineElement758(value interface{}) (interface{}, error) {
	return value, nil
}

func (p *parser) callonInlineElement758() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement758(stack["value"])
}

func (c *current) onInlineElement774() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement774() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement774()
}

func (c *current) onInlineElement738(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.([]interface{}), value.([]interface{}))
}

func (p *parser) callonInlineElement738() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement738(stack["key"], stack["value"])
}

func (c *current) onInlineElement782() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement782() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement782()
}

func (c *current) onInlineElement779(key interface{}) (interface{}, error) {
	return key, nil
}

func (p *parser) callonInlineElement779() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement779(stack["key"])
}

func (c *current) onInlineElement799() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement799() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement799()
}

func (c *current) onInlineElement776(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.([]interface{}), nil)
}

func (p *parser) callonInlineElement776() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement776(stack["key"])
}

func (c *current) onInlineElement732(otherAttrs interface{}) (interface{}, error) {
	return types.NewLinkAttributes(nil, otherAttrs.([]interface{}))
}

func (p *parser) callonInlineElement732() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement732(stack["otherAttrs"])
}

func (c *current) onInlineElement623(url, attributes interface{}) (interface{}, error) {
	return types.NewLink(url.([]interface{}), attributes.(types.ElementAttributes))
}

func (p *parser) callonInlineElement623() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement623(stack["url"], stack["attributes"])
}

func (c *current) onInlineElement821() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement821() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement821()
}

func (c *current) onInlineElement811() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement811() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement811()
}

func (c *current) onInlineElement802(url interface{}) (interface{}, error) {
	return types.NewLink(url.([]interface{}), nil)
}

func (p *parser) callonInlineElement802() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement802(stack["url"])
}

func (c *current) onInlineElement439(link interface{}) (interface{}, error) {
	return link, nil
}

func (p *parser) callonInlineElement439() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement439(stack["link"])
}

func (c *current) onInlineElement828(name interface{}) (interface{}, error) {
	return types.NewDocumentAttributeSubstitution(name.([]interface{}))
}

func (p *parser) callonInlineElement828() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement828(stack["name"])
}

func (c *current) onInlineElement847() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement847() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement847()
}

func (c *current) onInlineElement837() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement837() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement837()
}

func (c *current) onInlineElement1(element interface{}) (interface{}, error) {
	return element, nil
}

func (p *parser) callonInlineElement1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement1(stack["element"])
}

func (c *current) onBoldText2(content interface{}) (interface{}, error) {
	// double punctuation must be evaluated first
	return types.NewQuotedText(types.Bold, content.([]interface{}))

}

func (p *parser) callonBoldText2() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBoldText2(stack["content"])
}

func (c *current) onBoldText10(content interface{}) (interface{}, error) {
	// unbalanced `**` vs `*` punctuation
	result := append([]interface{}{"*"}, content.([]interface{}))
	return types.NewQuotedText(types.Bold, result)

}

func (p *parser) callonBoldText10() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBoldText10(stack["content"])
}

func (c *current) onBoldText18(content interface{}) (interface{}, error) {
	// single punctuation cannot be followed by a character (needs '**' to emphazise a portion of a word)
	return types.NewQuotedText(types.Bold, content.([]interface{}))

}

func (p *parser) callonBoldText18() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBoldText18(stack["content"])
}

func (c *current) onEscapedBoldText2(backslashes, content interface{}) (interface{}, error) {
	// double punctuation must be evaluated first
	return types.NewEscapedQuotedText(backslashes.([]interface{}), "**", content.([]interface{}))

}

func (p *parser) callonEscapedBoldText2() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onEscapedBoldText2(stack["backslashes"], stack["content"])
}

func (c *current) onEscapedBoldText13(backslashes, content interface{}) (interface{}, error) {
	// unbalanced `**` vs `*` punctuation
	result := append([]interface{}{"*"}, content.([]interface{}))
	return types.NewEscapedQuotedText(backslashes.([]interface{}), "*", result)

}

func (p *parser) callonEscapedBoldText13() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onEscapedBoldText13(stack["backslashes"], stack["content"])
}

func (c *current) onEscapedBoldText24(backslashes, content interface{}) (interface{}, error) {
	// simple punctuation must be evaluated last
	return types.NewEscapedQuotedText(backslashes.([]interface{}), "*", content.([]interface{}))

}

func (p *parser) callonEscapedBoldText24() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onEscapedBoldText24(stack["backslashes"], stack["content"])
}

func (c *current) onItalicText2(content interface{}) (interface{}, error) {
	return types.NewQuotedText(types.Italic, content.([]interface{}))

}

func (p *parser) callonItalicText2() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onItalicText2(stack["content"])
}

func (c *current) onItalicText10(content interface{}) (interface{}, error) {
	// unbalanced `__` vs `_` punctuation
	result := append([]interface{}{"_"}, content.([]interface{}))
	return types.NewQuotedText(types.Italic, result)

}

func (p *parser) callonItalicText10() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onItalicText10(stack["content"])
}

func (c *current) onItalicText18(content interface{}) (interface{}, error) {
	// single punctuation cannot be followed by a character (needs '**' to emphazise a portion of a word)
	return types.NewQuotedText(types.Italic, content.([]interface{}))

}

func (p *parser) callonItalicText18() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onItalicText18(stack["content"])
}

func (c *current) onEscapedItalicText2(backslashes, content interface{}) (interface{}, error) {
	// double punctuation must be evaluated first
	return types.NewEscapedQuotedText(backslashes.([]interface{}), "__", content.([]interface{}))

}

func (p *parser) callonEscapedItalicText2() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onEscapedItalicText2(stack["backslashes"], stack["content"])
}

func (c *current) onEscapedItalicText13(backslashes, content interface{}) (interface{}, error) {
	// unbalanced `__` vs `_` punctuation
	result := append([]interface{}{"_"}, content.([]interface{}))
	return types.NewEscapedQuotedText(backslashes.([]interface{}), "_", result)

}

func (p *parser) callonEscapedItalicText13() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onEscapedItalicText13(stack["backslashes"], stack["content"])
}

func (c *current) onEscapedItalicText24(backslashes, content interface{}) (interface{}, error) {
	// simple punctuation must be evaluated last
	return types.NewEscapedQuotedText(backslashes.([]interface{}), "_", content.([]interface{}))

}

func (p *parser) callonEscapedItalicText24() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onEscapedItalicText24(stack["backslashes"], stack["content"])
}

func (c *current) onMonospaceText2(content interface{}) (interface{}, error) {
	// double punctuation must be evaluated first
	return types.NewQuotedText(types.Monospace, content.([]interface{}))

}

func (p *parser) callonMonospaceText2() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMonospaceText2(stack["content"])
}

func (c *current) onMonospaceText10(content interface{}) (interface{}, error) {
	// unbalanced "``" vs "`" punctuation
	result := append([]interface{}{"`"}, content.([]interface{}))
	return types.NewQuotedText(types.Monospace, result)

}

func (p *parser) callonMonospaceText10() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMonospaceText10(stack["content"])
}

func (c *current) onMonospaceText18(content interface{}) (interface{}, error) {
	// single punctuation cannot be followed by a character (needs '**' to emphazise a portion of a word)
	return types.NewQuotedText(types.Monospace, content.([]interface{}))

}

func (p *parser) callonMonospaceText18() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMonospaceText18(stack["content"])
}

func (c *current) onEscapedMonospaceText2(backslashes, content interface{}) (interface{}, error) {
	// double punctuation must be evaluated first
	return types.NewEscapedQuotedText(backslashes.([]interface{}), "``", content.([]interface{}))

}

func (p *parser) callonEscapedMonospaceText2() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onEscapedMonospaceText2(stack["backslashes"], stack["content"])
}

func (c *current) onEscapedMonospaceText13(backslashes, content interface{}) (interface{}, error) {
	// unbalanced "``" vs "`" punctuation
	result := append([]interface{}{"`"}, content.([]interface{}))
	return types.NewEscapedQuotedText(backslashes.([]interface{}), "`", result)

}

func (p *parser) callonEscapedMonospaceText13() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onEscapedMonospaceText13(stack["backslashes"], stack["content"])
}

func (c *current) onEscapedMonospaceText24(backslashes, content interface{}) (interface{}, error) {
	// simple punctuation must be evaluated last
	return types.NewEscapedQuotedText(backslashes.([]interface{}), "`", content.([]interface{}))

}

func (p *parser) callonEscapedMonospaceText24() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onEscapedMonospaceText24(stack["backslashes"], stack["content"])
}

func (c *current) onQuotedTextContent8() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonQuotedTextContent8() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuotedTextContent8()
}

func (c *current) onQuotedTextContentElement12() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonQuotedTextContentElement12() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuotedTextContentElement12()
}

func (c *current) onQuotedTextContentElement31() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonQuotedTextContentElement31() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuotedTextContentElement31()
}

func (c *current) onQuotedTextContentElement21() (interface{}, error) {
	// can have "*", "_" or "`" within, maybe because the user inserted another quote, or made an error (extra or missing space, for example)
	return c.text, nil
}

func (p *parser) callonQuotedTextContentElement21() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuotedTextContentElement21()
}

func (c *current) onPassthrough2(content interface{}) (interface{}, error) {
	return types.NewPassthrough(types.TriplePlusPassthrough, content.([]interface{}))
}

func (p *parser) callonPassthrough2() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onPassthrough2(stack["content"])
}

func (c *current) onPassthrough12(content interface{}) (interface{}, error) {
	return types.NewPassthrough(types.SinglePlusPassthrough, content.([]interface{}))
}

func (p *parser) callonPassthrough12() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onPassthrough12(stack["content"])
}

func (c *current) onPassthroughMacro2(content interface{}) (interface{}, error) {
	return types.NewPassthrough(types.PassthroughMacro, content.([]interface{}))
}

func (p *parser) callonPassthroughMacro2() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onPassthroughMacro2(stack["content"])
}

func (c *current) onPassthroughMacro12(content interface{}) (interface{}, error) {
	return types.NewPassthrough(types.PassthroughMacro, content.([]interface{}))
}

func (p *parser) callonPassthroughMacro12() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onPassthroughMacro12(stack["content"])
}

func (c *current) onDelimitedBlock27() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDelimitedBlock27() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock27()
}

func (c *current) onDelimitedBlock17() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDelimitedBlock17() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock17()
}

func (c *current) onDelimitedBlock13(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonDelimitedBlock13() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock13(stack["id"])
}

func (c *current) onDelimitedBlock11(id interface{}) (interface{}, error) {
	return id, nil
}

func (p *parser) callonDelimitedBlock11() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock11(stack["id"])
}

func (c *current) onDelimitedBlock53() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDelimitedBlock53() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock53()
}

func (c *current) onDelimitedBlock43() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDelimitedBlock43() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock43()
}

func (c *current) onDelimitedBlock39(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonDelimitedBlock39() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock39(stack["id"])
}

func (c *current) onDelimitedBlock73() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDelimitedBlock73() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock73()
}

func (c *current) onDelimitedBlock65(title interface{}) (interface{}, error) {
	return types.NewElementTitle(title.([]interface{}))
}

func (p *parser) callonDelimitedBlock65() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock65(stack["title"])
}

func (c *current) onDelimitedBlock89() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDelimitedBlock89() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock89()
}

func (c *current) onDelimitedBlock83(role interface{}) (interface{}, error) {
	return types.NewElementRole(role.([]interface{}))
}

func (p *parser) callonDelimitedBlock83() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock83(stack["role"])
}

func (c *current) onDelimitedBlock107() (interface{}, error) {
	return types.Tip, nil
}

func (p *parser) callonDelimitedBlock107() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock107()
}

func (c *current) onDelimitedBlock109() (interface{}, error) {
	return types.Note, nil
}

func (p *parser) callonDelimitedBlock109() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock109()
}

func (c *current) onDelimitedBlock111() (interface{}, error) {
	return types.Important, nil
}

func (p *parser) callonDelimitedBlock111() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock111()
}

func (c *current) onDelimitedBlock113() (interface{}, error) {
	return types.Warning, nil
}

func (p *parser) callonDelimitedBlock113() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock113()
}

func (c *current) onDelimitedBlock115() (interface{}, error) {
	return types.Caution, nil
}

func (p *parser) callonDelimitedBlock115() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock115()
}

func (c *current) onDelimitedBlock102(k interface{}) (interface{}, error) {
	return types.NewAdmonitionAttribute(k.(types.AdmonitionKind))
}

func (p *parser) callonDelimitedBlock102() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock102(stack["k"])
}

func (c *current) onDelimitedBlock118() (interface{}, error) {
	return types.ElementAttributes{"layout": "horizontal"}, nil
}

func (p *parser) callonDelimitedBlock118() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock118()
}

func (c *current) onDelimitedBlock126() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDelimitedBlock126() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock126()
}

func (c *current) onDelimitedBlock137() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDelimitedBlock137() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock137()
}

func (c *current) onDelimitedBlock134(key interface{}) (interface{}, error) {
	return key, nil
}

func (p *parser) callonDelimitedBlock134() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock134(stack["key"])
}

func (c *current) onDelimitedBlock151(value interface{}) (interface{}, error) {
	return value, nil
}

func (p *parser) callonDelimitedBlock151() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock151(stack["value"])
}

func (c *current) onDelimitedBlock167() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDelimitedBlock167() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock167()
}

func (c *current) onDelimitedBlock131(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.([]interface{}), value.([]interface{}))
}

func (p *parser) callonDelimitedBlock131() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock131(stack["key"], stack["value"])
}

func (c *current) onDelimitedBlock175() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDelimitedBlock175() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock175()
}

func (c *current) onDelimitedBlock172(key interface{}) (interface{}, error) {
	return key, nil
}

func (p *parser) callonDelimitedBlock172() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock172(stack["key"])
}

func (c *current) onDelimitedBlock192() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDelimitedBlock192() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock192()
}

func (c *current) onDelimitedBlock169(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.([]interface{}), nil)
}

func (p *parser) callonDelimitedBlock169() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock169(stack["key"])
}

func (c *current) onDelimitedBlock120(attributes interface{}) (interface{}, error) {
	return types.NewAttributeGroup(attributes.([]interface{}))
}

func (p *parser) callonDelimitedBlock120() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock120(stack["attributes"])
}

func (c *current) onDelimitedBlock198() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDelimitedBlock198() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock198()
}

func (c *current) onDelimitedBlock7(attr interface{}) (interface{}, error) {
	return attr, nil // avoid returning something like `[]interface{}{attr, EOL}`
}

func (p *parser) callonDelimitedBlock7() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock7(stack["attr"])
}

func (c *current) onDelimitedBlock209() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDelimitedBlock209() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock209()
}

func (c *current) onDelimitedBlock227() (interface{}, error) {
	// skip EOL in line content, and stop when quote block delimiter is encountered
	return types.NewInlineElements(string(c.text))
}

func (p *parser) callonDelimitedBlock227() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock227()
}

func (c *current) onDelimitedBlock219(line interface{}) (interface{}, error) {
	return line.(types.InlineElements), nil
}

func (p *parser) callonDelimitedBlock219() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock219(stack["line"])
}

func (c *current) onDelimitedBlock216(lines interface{}) (interface{}, error) {
	return types.NewParagraph(lines.([]interface{}), nil)
}

func (p *parser) callonDelimitedBlock216() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock216(stack["lines"])
}

func (c *current) onDelimitedBlock250() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDelimitedBlock250() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock250()
}

func (c *current) onDelimitedBlock3(attributes, content interface{}) (interface{}, error) {
	return types.NewDelimitedBlock(types.Listing, content.([]interface{}), attributes.([]interface{}), types.None)
}

func (p *parser) callonDelimitedBlock3() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock3(stack["attributes"], stack["content"])
}

func (c *current) onDelimitedBlock284() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDelimitedBlock284() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock284()
}

func (c *current) onDelimitedBlock274() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDelimitedBlock274() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock274()
}

func (c *current) onDelimitedBlock270(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonDelimitedBlock270() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock270(stack["id"])
}

func (c *current) onDelimitedBlock268(id interface{}) (interface{}, error) {
	return id, nil
}

func (p *parser) callonDelimitedBlock268() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock268(stack["id"])
}

func (c *current) onDelimitedBlock310() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDelimitedBlock310() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock310()
}

func (c *current) onDelimitedBlock300() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDelimitedBlock300() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock300()
}

func (c *current) onDelimitedBlock296(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonDelimitedBlock296() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock296(stack["id"])
}

func (c *current) onDelimitedBlock330() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDelimitedBlock330() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock330()
}

func (c *current) onDelimitedBlock322(title interface{}) (interface{}, error) {
	return types.NewElementTitle(title.([]interface{}))
}

func (p *parser) callonDelimitedBlock322() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock322(stack["title"])
}

func (c *current) onDelimitedBlock346() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDelimitedBlock346() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock346()
}

func (c *current) onDelimitedBlock340(role interface{}) (interface{}, error) {
	return types.NewElementRole(role.([]interface{}))
}

func (p *parser) callonDelimitedBlock340() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock340(stack["role"])
}

func (c *current) onDelimitedBlock364() (interface{}, error) {
	return types.Tip, nil
}

func (p *parser) callonDelimitedBlock364() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock364()
}

func (c *current) onDelimitedBlock366() (interface{}, error) {
	return types.Note, nil
}

func (p *parser) callonDelimitedBlock366() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock366()
}

func (c *current) onDelimitedBlock368() (interface{}, error) {
	return types.Important, nil
}

func (p *parser) callonDelimitedBlock368() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock368()
}

func (c *current) onDelimitedBlock370() (interface{}, error) {
	return types.Warning, nil
}

func (p *parser) callonDelimitedBlock370() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock370()
}

func (c *current) onDelimitedBlock372() (interface{}, error) {
	return types.Caution, nil
}

func (p *parser) callonDelimitedBlock372() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock372()
}

func (c *current) onDelimitedBlock359(k interface{}) (interface{}, error) {
	return types.NewAdmonitionAttribute(k.(types.AdmonitionKind))
}

func (p *parser) callonDelimitedBlock359() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock359(stack["k"])
}

func (c *current) onDelimitedBlock375() (interface{}, error) {
	return types.ElementAttributes{"layout": "horizontal"}, nil
}

func (p *parser) callonDelimitedBlock375() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock375()
}

func (c *current) onDelimitedBlock383() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDelimitedBlock383() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock383()
}

func (c *current) onDelimitedBlock394() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDelimitedBlock394() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock394()
}

func (c *current) onDelimitedBlock391(key interface{}) (interface{}, error) {
	return key, nil
}

func (p *parser) callonDelimitedBlock391() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock391(stack["key"])
}

func (c *current) onDelimitedBlock408(value interface{}) (interface{}, error) {
	return value, nil
}

func (p *parser) callonDelimitedBlock408() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock408(stack["value"])
}

func (c *current) onDelimitedBlock424() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDelimitedBlock424() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock424()
}

func (c *current) onDelimitedBlock388(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.([]interface{}), value.([]interface{}))
}

func (p *parser) callonDelimitedBlock388() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock388(stack["key"], stack["value"])
}

func (c *current) onDelimitedBlock432() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDelimitedBlock432() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock432()
}

func (c *current) onDelimitedBlock429(key interface{}) (interface{}, error) {
	return key, nil
}

func (p *parser) callonDelimitedBlock429() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock429(stack["key"])
}

func (c *current) onDelimitedBlock449() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDelimitedBlock449() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock449()
}

func (c *current) onDelimitedBlock426(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.([]interface{}), nil)
}

func (p *parser) callonDelimitedBlock426() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock426(stack["key"])
}

func (c *current) onDelimitedBlock377(attributes interface{}) (interface{}, error) {
	return types.NewAttributeGroup(attributes.([]interface{}))
}

func (p *parser) callonDelimitedBlock377() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock377(stack["attributes"])
}

func (c *current) onDelimitedBlock455() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDelimitedBlock455() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock455()
}

func (c *current) onDelimitedBlock264(attr interface{}) (interface{}, error) {
	return attr, nil // avoid returning something like `[]interface{}{attr, EOL}`
}

func (p *parser) callonDelimitedBlock264() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock264(stack["attr"])
}

func (c *current) onDelimitedBlock466() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDelimitedBlock466() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock466()
}

func (c *current) onDelimitedBlock473(content interface{}) (interface{}, error) {
	return content, nil
}

func (p *parser) callonDelimitedBlock473() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock473(stack["content"])
}

func (c *current) onDelimitedBlock498() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDelimitedBlock498() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock498()
}

func (c *current) onDelimitedBlock260(attributes, content interface{}) (interface{}, error) {
	return types.NewDelimitedBlock(types.Comment, content.([]interface{}), attributes.([]interface{}), types.Verbatim)
}

func (p *parser) callonDelimitedBlock260() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock260(stack["attributes"], stack["content"])
}

func (c *current) onFencedBlock25() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonFencedBlock25() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFencedBlock25()
}

func (c *current) onFencedBlock15() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonFencedBlock15() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFencedBlock15()
}

func (c *current) onFencedBlock11(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonFencedBlock11() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFencedBlock11(stack["id"])
}

func (c *current) onFencedBlock9(id interface{}) (interface{}, error) {
	return id, nil
}

func (p *parser) callonFencedBlock9() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFencedBlock9(stack["id"])
}

func (c *current) onFencedBlock51() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonFencedBlock51() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFencedBlock51()
}

func (c *current) onFencedBlock41() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonFencedBlock41() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFencedBlock41()
}

func (c *current) onFencedBlock37(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonFencedBlock37() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFencedBlock37(stack["id"])
}

func (c *current) onFencedBlock71() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonFencedBlock71() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFencedBlock71()
}

func (c *current) onFencedBlock63(title interface{}) (interface{}, error) {
	return types.NewElementTitle(title.([]interface{}))
}

func (p *parser) callonFencedBlock63() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFencedBlock63(stack["title"])
}

func (c *current) onFencedBlock87() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonFencedBlock87() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFencedBlock87()
}

func (c *current) onFencedBlock81(role interface{}) (interface{}, error) {
	return types.NewElementRole(role.([]interface{}))
}

func (p *parser) callonFencedBlock81() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFencedBlock81(stack["role"])
}

func (c *current) onFencedBlock105() (interface{}, error) {
	return types.Tip, nil
}

func (p *parser) callonFencedBlock105() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFencedBlock105()
}

func (c *current) onFencedBlock107() (interface{}, error) {
	return types.Note, nil
}

func (p *parser) callonFencedBlock107() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFencedBlock107()
}

func (c *current) onFencedBlock109() (interface{}, error) {
	return types.Important, nil
}

func (p *parser) callonFencedBlock109() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFencedBlock109()
}

func (c *current) onFencedBlock111() (interface{}, error) {
	return types.Warning, nil
}

func (p *parser) callonFencedBlock111() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFencedBlock111()
}

func (c *current) onFencedBlock113() (interface{}, error) {
	return types.Caution, nil
}

func (p *parser) callonFencedBlock113() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFencedBlock113()
}

func (c *current) onFencedBlock100(k interface{}) (interface{}, error) {
	return types.NewAdmonitionAttribute(k.(types.AdmonitionKind))
}

func (p *parser) callonFencedBlock100() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFencedBlock100(stack["k"])
}

func (c *current) onFencedBlock116() (interface{}, error) {
	return types.ElementAttributes{"layout": "horizontal"}, nil
}

func (p *parser) callonFencedBlock116() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFencedBlock116()
}

func (c *current) onFencedBlock124() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonFencedBlock124() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFencedBlock124()
}

func (c *current) onFencedBlock135() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonFencedBlock135() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFencedBlock135()
}

func (c *current) onFencedBlock132(key interface{}) (interface{}, error) {
	return key, nil
}

func (p *parser) callonFencedBlock132() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFencedBlock132(stack["key"])
}

func (c *current) onFencedBlock149(value interface{}) (interface{}, error) {
	return value, nil
}

func (p *parser) callonFencedBlock149() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFencedBlock149(stack["value"])
}

func (c *current) onFencedBlock165() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonFencedBlock165() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFencedBlock165()
}

func (c *current) onFencedBlock129(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.([]interface{}), value.([]interface{}))
}

func (p *parser) callonFencedBlock129() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFencedBlock129(stack["key"], stack["value"])
}

func (c *current) onFencedBlock173() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonFencedBlock173() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFencedBlock173()
}

func (c *current) onFencedBlock170(key interface{}) (interface{}, error) {
	return key, nil
}

func (p *parser) callonFencedBlock170() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFencedBlock170(stack["key"])
}

func (c *current) onFencedBlock190() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonFencedBlock190() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFencedBlock190()
}

func (c *current) onFencedBlock167(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.([]interface{}), nil)
}

func (p *parser) callonFencedBlock167() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFencedBlock167(stack["key"])
}

func (c *current) onFencedBlock118(attributes interface{}) (interface{}, error) {
	return types.NewAttributeGroup(attributes.([]interface{}))
}

func (p *parser) callonFencedBlock118() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFencedBlock118(stack["attributes"])
}

func (c *current) onFencedBlock196() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonFencedBlock196() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFencedBlock196()
}

func (c *current) onFencedBlock5(attr interface{}) (interface{}, error) {
	return attr, nil // avoid returning something like `[]interface{}{attr, EOL}`
}

func (p *parser) callonFencedBlock5() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFencedBlock5(stack["attr"])
}

func (c *current) onFencedBlock207() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonFencedBlock207() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFencedBlock207()
}

func (c *current) onFencedBlock225() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonFencedBlock225() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFencedBlock225()
}

func (c *current) onFencedBlock217() (interface{}, error) {
	return types.NewBlankLine()
}

func (p *parser) callonFencedBlock217() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFencedBlock217()
}

func (c *current) onFencedBlock238() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonFencedBlock238() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFencedBlock238()
}

func (c *current) onFencedBlock1(attributes, content interface{}) (interface{}, error) {
	return types.NewDelimitedBlock(types.Fenced, content.([]interface{}), attributes.([]interface{}), types.None)
}

func (p *parser) callonFencedBlock1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFencedBlock1(stack["attributes"], stack["content"])
}

func (c *current) onExampleBlock25() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonExampleBlock25() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onExampleBlock25()
}

func (c *current) onExampleBlock15() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonExampleBlock15() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onExampleBlock15()
}

func (c *current) onExampleBlock11(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonExampleBlock11() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onExampleBlock11(stack["id"])
}

func (c *current) onExampleBlock9(id interface{}) (interface{}, error) {
	return id, nil
}

func (p *parser) callonExampleBlock9() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onExampleBlock9(stack["id"])
}

func (c *current) onExampleBlock51() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonExampleBlock51() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onExampleBlock51()
}

func (c *current) onExampleBlock41() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonExampleBlock41() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onExampleBlock41()
}

func (c *current) onExampleBlock37(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonExampleBlock37() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onExampleBlock37(stack["id"])
}

func (c *current) onExampleBlock71() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonExampleBlock71() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onExampleBlock71()
}

func (c *current) onExampleBlock63(title interface{}) (interface{}, error) {
	return types.NewElementTitle(title.([]interface{}))
}

func (p *parser) callonExampleBlock63() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onExampleBlock63(stack["title"])
}

func (c *current) onExampleBlock87() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonExampleBlock87() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onExampleBlock87()
}

func (c *current) onExampleBlock81(role interface{}) (interface{}, error) {
	return types.NewElementRole(role.([]interface{}))
}

func (p *parser) callonExampleBlock81() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onExampleBlock81(stack["role"])
}

func (c *current) onExampleBlock105() (interface{}, error) {
	return types.Tip, nil
}

func (p *parser) callonExampleBlock105() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onExampleBlock105()
}

func (c *current) onExampleBlock107() (interface{}, error) {
	return types.Note, nil
}

func (p *parser) callonExampleBlock107() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onExampleBlock107()
}

func (c *current) onExampleBlock109() (interface{}, error) {
	return types.Important, nil
}

func (p *parser) callonExampleBlock109() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onExampleBlock109()
}

func (c *current) onExampleBlock111() (interface{}, error) {
	return types.Warning, nil
}

func (p *parser) callonExampleBlock111() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onExampleBlock111()
}

func (c *current) onExampleBlock113() (interface{}, error) {
	return types.Caution, nil
}

func (p *parser) callonExampleBlock113() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onExampleBlock113()
}

func (c *current) onExampleBlock100(k interface{}) (interface{}, error) {
	return types.NewAdmonitionAttribute(k.(types.AdmonitionKind))
}

func (p *parser) callonExampleBlock100() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onExampleBlock100(stack["k"])
}

func (c *current) onExampleBlock116() (interface{}, error) {
	return types.ElementAttributes{"layout": "horizontal"}, nil
}

func (p *parser) callonExampleBlock116() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onExampleBlock116()
}

func (c *current) onExampleBlock124() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonExampleBlock124() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onExampleBlock124()
}

func (c *current) onExampleBlock135() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonExampleBlock135() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onExampleBlock135()
}

func (c *current) onExampleBlock132(key interface{}) (interface{}, error) {
	return key, nil
}

func (p *parser) callonExampleBlock132() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onExampleBlock132(stack["key"])
}

func (c *current) onExampleBlock149(value interface{}) (interface{}, error) {
	return value, nil
}

func (p *parser) callonExampleBlock149() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onExampleBlock149(stack["value"])
}

func (c *current) onExampleBlock165() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonExampleBlock165() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onExampleBlock165()
}

func (c *current) onExampleBlock129(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.([]interface{}), value.([]interface{}))
}

func (p *parser) callonExampleBlock129() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onExampleBlock129(stack["key"], stack["value"])
}

func (c *current) onExampleBlock173() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonExampleBlock173() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onExampleBlock173()
}

func (c *current) onExampleBlock170(key interface{}) (interface{}, error) {
	return key, nil
}

func (p *parser) callonExampleBlock170() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onExampleBlock170(stack["key"])
}

func (c *current) onExampleBlock190() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonExampleBlock190() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onExampleBlock190()
}

func (c *current) onExampleBlock167(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.([]interface{}), nil)
}

func (p *parser) callonExampleBlock167() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onExampleBlock167(stack["key"])
}

func (c *current) onExampleBlock118(attributes interface{}) (interface{}, error) {
	return types.NewAttributeGroup(attributes.([]interface{}))
}

func (p *parser) callonExampleBlock118() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onExampleBlock118(stack["attributes"])
}

func (c *current) onExampleBlock196() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonExampleBlock196() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onExampleBlock196()
}

func (c *current) onExampleBlock5(attr interface{}) (interface{}, error) {
	return attr, nil // avoid returning something like `[]interface{}{attr, EOL}`
}

func (p *parser) callonExampleBlock5() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onExampleBlock5(stack["attr"])
}

func (c *current) onExampleBlock207() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonExampleBlock207() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onExampleBlock207()
}

func (c *current) onExampleBlock225() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonExampleBlock225() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onExampleBlock225()
}

func (c *current) onExampleBlock217() (interface{}, error) {
	return types.NewBlankLine()
}

func (p *parser) callonExampleBlock217() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onExampleBlock217()
}

func (c *current) onExampleBlock238() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonExampleBlock238() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onExampleBlock238()
}

func (c *current) onExampleBlock1(attributes, content interface{}) (interface{}, error) {
	return types.NewDelimitedBlock(types.Example, content.([]interface{}), attributes.([]interface{}), types.None)
}

func (p *parser) callonExampleBlock1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onExampleBlock1(stack["attributes"], stack["content"])
}

func (c *current) onBlockParagraph1(lines interface{}) (interface{}, error) {
	return types.NewParagraph(lines.([]interface{}), nil)
}

func (p *parser) callonBlockParagraph1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraph1(stack["lines"])
}

func (c *current) onBlockParagraphLine9() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonBlockParagraphLine9() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraphLine9()
}

func (c *current) onBlockParagraphLine13() (interface{}, error) {
	// numbering style: "....."
	return types.NewOrderedListItemPrefix(types.UpperRoman, 5)

}

func (p *parser) callonBlockParagraphLine13() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraphLine13()
}

func (c *current) onBlockParagraphLine15() (interface{}, error) {
	// numbering style: "...."
	return types.NewOrderedListItemPrefix(types.UpperAlpha, 4)

}

func (p *parser) callonBlockParagraphLine15() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraphLine15()
}

func (c *current) onBlockParagraphLine17() (interface{}, error) {
	// numbering style: "..."
	return types.NewOrderedListItemPrefix(types.LowerRoman, 3)

}

func (p *parser) callonBlockParagraphLine17() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraphLine17()
}

func (c *current) onBlockParagraphLine19() (interface{}, error) {
	// numbering style: ".."
	return types.NewOrderedListItemPrefix(types.LowerAlpha, 2)

}

func (p *parser) callonBlockParagraphLine19() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraphLine19()
}

func (c *current) onBlockParagraphLine21() (interface{}, error) {
	// numbering style: "."
	return types.NewOrderedListItemPrefix(types.Arabic, 1)
	// explicit numbering

}

func (p *parser) callonBlockParagraphLine21() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraphLine21()
}

func (c *current) onBlockParagraphLine23() (interface{}, error) {
	// numbering style: "1."
	return types.NewOrderedListItemPrefix(types.Arabic, 1)

}

func (p *parser) callonBlockParagraphLine23() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraphLine23()
}

func (c *current) onBlockParagraphLine28() (interface{}, error) {
	// numbering style: "a."
	return types.NewOrderedListItemPrefix(types.LowerAlpha, 1)

}

func (p *parser) callonBlockParagraphLine28() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraphLine28()
}

func (c *current) onBlockParagraphLine33() (interface{}, error) {
	// numbering style: "A."
	return types.NewOrderedListItemPrefix(types.UpperAlpha, 1)

}

func (p *parser) callonBlockParagraphLine33() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraphLine33()
}

func (c *current) onBlockParagraphLine38() (interface{}, error) {
	// numbering style: "i)"
	return types.NewOrderedListItemPrefix(types.LowerRoman, 1)

}

func (p *parser) callonBlockParagraphLine38() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraphLine38()
}

func (c *current) onBlockParagraphLine43() (interface{}, error) {
	// numbering style: "I)"
	return types.NewOrderedListItemPrefix(types.UpperRoman, 1)

}

func (p *parser) callonBlockParagraphLine43() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraphLine43()
}

func (c *current) onBlockParagraphLine51() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonBlockParagraphLine51() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraphLine51()
}

func (c *current) onBlockParagraphLine4(prefix interface{}) (interface{}, error) {
	return prefix, nil

}

func (p *parser) callonBlockParagraphLine4() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraphLine4(stack["prefix"])
}

func (c *current) onBlockParagraphLine59() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonBlockParagraphLine59() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraphLine59()
}

func (c *current) onBlockParagraphLine63() (interface{}, error) {
	// ignore whitespaces, only return the relevant "*"/"-" marker
	return types.NewUnorderedListItemPrefix(types.FiveAsterisks, 5)

}

func (p *parser) callonBlockParagraphLine63() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraphLine63()
}

func (c *current) onBlockParagraphLine65() (interface{}, error) {
	// ignore whitespaces, only return the relevant "*"/"-" marker
	return types.NewUnorderedListItemPrefix(types.FourAsterisks, 4)

}

func (p *parser) callonBlockParagraphLine65() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraphLine65()
}

func (c *current) onBlockParagraphLine67() (interface{}, error) {
	// ignore whitespaces, only return the relevant "*"/"-" marker
	return types.NewUnorderedListItemPrefix(types.ThreeAsterisks, 3)

}

func (p *parser) callonBlockParagraphLine67() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraphLine67()
}

func (c *current) onBlockParagraphLine69() (interface{}, error) {
	// ignore whitespaces, only return the relevant "*"/"-" marker
	return types.NewUnorderedListItemPrefix(types.TwoAsterisks, 2)

}

func (p *parser) callonBlockParagraphLine69() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraphLine69()
}

func (c *current) onBlockParagraphLine71() (interface{}, error) {
	// ignore whitespaces, only return the relevant "*"/"-" marker
	return types.NewUnorderedListItemPrefix(types.OneAsterisk, 1)

}

func (p *parser) callonBlockParagraphLine71() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraphLine71()
}

func (c *current) onBlockParagraphLine73() (interface{}, error) {
	// ignore whitespaces, only return the relevant "*"/"-" marker
	return types.NewUnorderedListItemPrefix(types.Dash, 1)

}

func (p *parser) callonBlockParagraphLine73() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraphLine73()
}

func (c *current) onBlockParagraphLine78() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonBlockParagraphLine78() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraphLine78()
}

func (c *current) onBlockParagraphLine54(prefix interface{}) (interface{}, error) {
	return prefix, nil

}

func (p *parser) callonBlockParagraphLine54() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraphLine54(stack["prefix"])
}

func (c *current) onBlockParagraphLine82(term interface{}) (interface{}, error) {
	return term, nil
}

func (p *parser) callonBlockParagraphLine82() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraphLine82(stack["term"])
}

func (c *current) onBlockParagraphLine97() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonBlockParagraphLine97() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraphLine97()
}

func (c *current) onBlockParagraphLine108() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonBlockParagraphLine108() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraphLine108()
}

func (c *current) onBlockParagraphLine102() (interface{}, error) {
	return types.NewListItemContinuation()
}

func (p *parser) callonBlockParagraphLine102() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraphLine102()
}

func (c *current) onBlockParagraphLine1(line interface{}) (interface{}, error) {
	return line, nil
}

func (p *parser) callonBlockParagraphLine1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraphLine1(stack["line"])
}

func (c *current) onQuoteBlock16() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonQuoteBlock16() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteBlock16()
}

func (c *current) onQuoteBlock29() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonQuoteBlock29() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteBlock29()
}

func (c *current) onQuoteBlock41() (interface{}, error) {
	return types.Tip, nil
}

func (p *parser) callonQuoteBlock41() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteBlock41()
}

func (c *current) onQuoteBlock43() (interface{}, error) {
	return types.Note, nil
}

func (p *parser) callonQuoteBlock43() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteBlock43()
}

func (c *current) onQuoteBlock45() (interface{}, error) {
	return types.Important, nil
}

func (p *parser) callonQuoteBlock45() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteBlock45()
}

func (c *current) onQuoteBlock47() (interface{}, error) {
	return types.Warning, nil
}

func (p *parser) callonQuoteBlock47() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteBlock47()
}

func (c *current) onQuoteBlock49() (interface{}, error) {
	return types.Caution, nil
}

func (p *parser) callonQuoteBlock49() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteBlock49()
}

func (c *current) onQuoteBlock13() (interface{}, error) {
	// make sure quote attribute does not collide with other generic or specific attributes (ID, Admonition, etc)
	return string(c.text), nil
}

func (p *parser) callonQuoteBlock13() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteBlock13()
}

func (c *current) onQuoteBlock55() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonQuoteBlock55() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteBlock55()
}

func (c *current) onQuoteBlock59() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonQuoteBlock59() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteBlock59()
}

func (c *current) onQuoteBlock75() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonQuoteBlock75() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteBlock75()
}

func (c *current) onQuoteBlock9(kind, author, title interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), author.(string), title.(string))

}

func (p *parser) callonQuoteBlock9() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteBlock9(stack["kind"], stack["author"], stack["title"])
}

func (c *current) onQuoteBlock97() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonQuoteBlock97() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteBlock97()
}

func (c *current) onQuoteBlock110() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonQuoteBlock110() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteBlock110()
}

func (c *current) onQuoteBlock122() (interface{}, error) {
	return types.Tip, nil
}

func (p *parser) callonQuoteBlock122() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteBlock122()
}

func (c *current) onQuoteBlock124() (interface{}, error) {
	return types.Note, nil
}

func (p *parser) callonQuoteBlock124() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteBlock124()
}

func (c *current) onQuoteBlock126() (interface{}, error) {
	return types.Important, nil
}

func (p *parser) callonQuoteBlock126() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteBlock126()
}

func (c *current) onQuoteBlock128() (interface{}, error) {
	return types.Warning, nil
}

func (p *parser) callonQuoteBlock128() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteBlock128()
}

func (c *current) onQuoteBlock130() (interface{}, error) {
	return types.Caution, nil
}

func (p *parser) callonQuoteBlock130() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteBlock130()
}

func (c *current) onQuoteBlock94() (interface{}, error) {
	// make sure quote attribute does not collide with other generic or specific attributes (ID, Admonition, etc)
	return string(c.text), nil
}

func (p *parser) callonQuoteBlock94() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteBlock94()
}

func (c *current) onQuoteBlock136() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonQuoteBlock136() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteBlock136()
}

func (c *current) onQuoteBlock140() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonQuoteBlock140() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteBlock140()
}

func (c *current) onQuoteBlock90(kind, author interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), author.(string), "")

}

func (p *parser) callonQuoteBlock90() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteBlock90(stack["kind"], stack["author"])
}

func (c *current) onQuoteBlock162() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonQuoteBlock162() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteBlock162()
}

func (c *current) onQuoteBlock175() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonQuoteBlock175() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteBlock175()
}

func (c *current) onQuoteBlock187() (interface{}, error) {
	return types.Tip, nil
}

func (p *parser) callonQuoteBlock187() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteBlock187()
}

func (c *current) onQuoteBlock189() (interface{}, error) {
	return types.Note, nil
}

func (p *parser) callonQuoteBlock189() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteBlock189()
}

func (c *current) onQuoteBlock191() (interface{}, error) {
	return types.Important, nil
}

func (p *parser) callonQuoteBlock191() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteBlock191()
}

func (c *current) onQuoteBlock193() (interface{}, error) {
	return types.Warning, nil
}

func (p *parser) callonQuoteBlock193() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteBlock193()
}

func (c *current) onQuoteBlock195() (interface{}, error) {
	return types.Caution, nil
}

func (p *parser) callonQuoteBlock195() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteBlock195()
}

func (c *current) onQuoteBlock159() (interface{}, error) {
	// make sure quote attribute does not collide with other generic or specific attributes (ID, Admonition, etc)
	return string(c.text), nil
}

func (p *parser) callonQuoteBlock159() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteBlock159()
}

func (c *current) onQuoteBlock201() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonQuoteBlock201() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteBlock201()
}

func (c *current) onQuoteBlock155(kind interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), "", "")

}

func (p *parser) callonQuoteBlock155() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteBlock155(stack["kind"])
}

func (c *current) onQuoteBlock207() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonQuoteBlock207() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteBlock207()
}

func (c *current) onQuoteBlock5(attribute interface{}) (interface{}, error) {
	return attribute, nil

}

func (p *parser) callonQuoteBlock5() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteBlock5(stack["attribute"])
}

func (c *current) onQuoteBlock218() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonQuoteBlock218() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteBlock218()
}

func (c *current) onQuoteBlock232() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonQuoteBlock232() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteBlock232()
}

func (c *current) onQuoteBlock1(attributes, content interface{}) (interface{}, error) {
	return types.NewDelimitedBlock(types.Quote,
		content.([]interface{}),
		attributes.([]interface{}),
		types.None)
}

func (p *parser) callonQuoteBlock1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteBlock1(stack["attributes"], stack["content"])
}

func (c *current) onQuoteBlockContent1(element interface{}) (interface{}, error) {
	return element, nil

}

func (p *parser) callonQuoteBlockContent1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteBlockContent1(stack["element"])
}

func (c *current) onVerseBlock13() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonVerseBlock13() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseBlock13()
}

func (c *current) onVerseBlock18() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonVerseBlock18() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseBlock18()
}

func (c *current) onVerseBlock22() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonVerseBlock22() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseBlock22()
}

func (c *current) onVerseBlock38() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonVerseBlock38() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseBlock38()
}

func (c *current) onVerseBlock9(kind, author, title interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), author.(string), title.(string))

}

func (p *parser) callonVerseBlock9() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseBlock9(stack["kind"], stack["author"], stack["title"])
}

func (c *current) onVerseBlock57() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonVerseBlock57() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseBlock57()
}

func (c *current) onVerseBlock62() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonVerseBlock62() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseBlock62()
}

func (c *current) onVerseBlock66() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonVerseBlock66() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseBlock66()
}

func (c *current) onVerseBlock53(kind, author interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), author.(string), "")

}

func (p *parser) callonVerseBlock53() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseBlock53(stack["kind"], stack["author"])
}

func (c *current) onVerseBlock85() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonVerseBlock85() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseBlock85()
}

func (c *current) onVerseBlock90() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonVerseBlock90() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseBlock90()
}

func (c *current) onVerseBlock81(kind interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), "", "")

}

func (p *parser) callonVerseBlock81() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseBlock81(stack["kind"])
}

func (c *current) onVerseBlock96() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonVerseBlock96() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseBlock96()
}

func (c *current) onVerseBlock5(attribute interface{}) (interface{}, error) {
	return attribute, nil

}

func (p *parser) callonVerseBlock5() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseBlock5(stack["attribute"])
}

func (c *current) onVerseBlock107() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonVerseBlock107() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseBlock107()
}

func (c *current) onVerseBlock121() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonVerseBlock121() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseBlock121()
}

func (c *current) onVerseBlock1(attributes, content interface{}) (interface{}, error) {
	return types.NewDelimitedBlock(types.Verse,
		content.([]interface{}),
		attributes.([]interface{}),
		types.None)
}

func (p *parser) callonVerseBlock1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseBlock1(stack["attributes"], stack["content"])
}

func (c *current) onVerseBlockContent1(lines interface{}) (interface{}, error) {
	return types.NewParagraph(lines.([]interface{}), nil)
}

func (p *parser) callonVerseBlockContent1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseBlockContent1(stack["lines"])
}

func (c *current) onVerseBlockLine1(line interface{}) (interface{}, error) {
	return line.(types.InlineElements), nil
}

func (p *parser) callonVerseBlockLine1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseBlockLine1(stack["line"])
}

func (c *current) onVerseBlockLineContent16() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonVerseBlockLineContent16() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseBlockLineContent16()
}

func (c *current) onVerseBlockLineContent22() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonVerseBlockLineContent22() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseBlockLineContent22()
}

func (c *current) onVerseBlockLineContent1(elements interface{}) (interface{}, error) {
	// skip EOL in line content, and stop when quote block delimiter is encountered
	return types.NewInlineElements(elements.([]interface{}))
}

func (p *parser) callonVerseBlockLineContent1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseBlockLineContent1(stack["elements"])
}

func (c *current) onTable25() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTable25() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTable25()
}

func (c *current) onTable15() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTable15() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTable15()
}

func (c *current) onTable11(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonTable11() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTable11(stack["id"])
}

func (c *current) onTable9(id interface{}) (interface{}, error) {
	return id, nil
}

func (p *parser) callonTable9() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTable9(stack["id"])
}

func (c *current) onTable51() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTable51() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTable51()
}

func (c *current) onTable41() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTable41() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTable41()
}

func (c *current) onTable37(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonTable37() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTable37(stack["id"])
}

func (c *current) onTable71() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTable71() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTable71()
}

func (c *current) onTable63(title interface{}) (interface{}, error) {
	return types.NewElementTitle(title.([]interface{}))
}

func (p *parser) callonTable63() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTable63(stack["title"])
}

func (c *current) onTable87() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTable87() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTable87()
}

func (c *current) onTable81(role interface{}) (interface{}, error) {
	return types.NewElementRole(role.([]interface{}))
}

func (p *parser) callonTable81() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTable81(stack["role"])
}

func (c *current) onTable105() (interface{}, error) {
	return types.Tip, nil
}

func (p *parser) callonTable105() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTable105()
}

func (c *current) onTable107() (interface{}, error) {
	return types.Note, nil
}

func (p *parser) callonTable107() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTable107()
}

func (c *current) onTable109() (interface{}, error) {
	return types.Important, nil
}

func (p *parser) callonTable109() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTable109()
}

func (c *current) onTable111() (interface{}, error) {
	return types.Warning, nil
}

func (p *parser) callonTable111() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTable111()
}

func (c *current) onTable113() (interface{}, error) {
	return types.Caution, nil
}

func (p *parser) callonTable113() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTable113()
}

func (c *current) onTable100(k interface{}) (interface{}, error) {
	return types.NewAdmonitionAttribute(k.(types.AdmonitionKind))
}

func (p *parser) callonTable100() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTable100(stack["k"])
}

func (c *current) onTable116() (interface{}, error) {
	return types.ElementAttributes{"layout": "horizontal"}, nil
}

func (p *parser) callonTable116() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTable116()
}

func (c *current) onTable124() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTable124() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTable124()
}

func (c *current) onTable135() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTable135() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTable135()
}

func (c *current) onTable132(key interface{}) (interface{}, error) {
	return key, nil
}

func (p *parser) callonTable132() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTable132(stack["key"])
}

func (c *current) onTable149(value interface{}) (interface{}, error) {
	return value, nil
}

func (p *parser) callonTable149() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTable149(stack["value"])
}

func (c *current) onTable165() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTable165() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTable165()
}

func (c *current) onTable129(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.([]interface{}), value.([]interface{}))
}

func (p *parser) callonTable129() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTable129(stack["key"], stack["value"])
}

func (c *current) onTable173() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTable173() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTable173()
}

func (c *current) onTable170(key interface{}) (interface{}, error) {
	return key, nil
}

func (p *parser) callonTable170() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTable170(stack["key"])
}

func (c *current) onTable190() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTable190() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTable190()
}

func (c *current) onTable167(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.([]interface{}), nil)
}

func (p *parser) callonTable167() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTable167(stack["key"])
}

func (c *current) onTable118(attributes interface{}) (interface{}, error) {
	return types.NewAttributeGroup(attributes.([]interface{}))
}

func (p *parser) callonTable118() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTable118(stack["attributes"])
}

func (c *current) onTable196() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTable196() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTable196()
}

func (c *current) onTable5(attr interface{}) (interface{}, error) {
	return attr, nil // avoid returning something like `[]interface{}{attr, EOL}`
}

func (p *parser) callonTable5() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTable5(stack["attr"])
}

func (c *current) onTable207() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTable207() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTable207()
}

func (c *current) onTable224() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTable224() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTable224()
}

func (c *current) onTable1(attributes, header, lines interface{}) (interface{}, error) {
	// end delimiter or end of file
	return types.NewTable(header, lines.([]interface{}), attributes.([]interface{}))

}

func (p *parser) callonTable1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTable1(stack["attributes"], stack["header"], stack["lines"])
}

func (c *current) onTableLineHeader21() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTableLineHeader21() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTableLineHeader21()
}

func (c *current) onTableLineHeader13(cells interface{}) (interface{}, error) {
	return types.NewBlankLine()
}

func (p *parser) callonTableLineHeader13() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTableLineHeader13(stack["cells"])
}

func (c *current) onTableLineHeader1(cells interface{}) (interface{}, error) {
	return types.NewTableLine(cells.([]interface{}))
}

func (p *parser) callonTableLineHeader1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTableLineHeader1(stack["cells"])
}

func (c *current) onTableLine22() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTableLine22() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTableLine22()
}

func (c *current) onTableLine14() (interface{}, error) {
	return types.NewBlankLine()
}

func (p *parser) callonTableLine14() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTableLine14()
}

func (c *current) onTableLine1(cells interface{}) (interface{}, error) {
	return types.NewTableLine(cells.([]interface{}))
}

func (p *parser) callonTableLine1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTableLine1(stack["cells"])
}

func (c *current) onTableCell7() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTableCell7() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTableCell7()
}

func (c *current) onTableCell18() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTableCell18() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTableCell18()
}

func (c *current) onTableCell29() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTableCell29() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTableCell29()
}

func (c *current) onTableCell35() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTableCell35() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTableCell35()
}

func (c *current) onTableCell1(elements interface{}) (interface{}, error) {
	return types.NewInlineElements(elements)
}

func (p *parser) callonTableCell1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTableCell1(stack["elements"])
}

func (c *current) onWS3() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonWS3() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onWS3()
}

var (
	// errNoRule is returned when the grammar to parse has no rule.
	errNoRule = errors.New("grammar has no rule")

	// errInvalidEntrypoint is returned when the specified entrypoint rule
	// does not exit.
	errInvalidEntrypoint = errors.New("invalid entrypoint")

	// errInvalidEncoding is returned when the source is not properly
	// utf8-encoded.
	errInvalidEncoding = errors.New("invalid encoding")

	// errMaxExprCnt is used to signal that the maximum number of
	// expressions have been parsed.
	errMaxExprCnt = errors.New("max number of expresssions parsed")
)

// Option is a function that can set an option on the parser. It returns
// the previous setting as an Option.
type Option func(*parser) Option

// MaxExpressions creates an Option to stop parsing after the provided
// number of expressions have been parsed, if the value is 0 then the parser will
// parse for as many steps as needed (possibly an infinite number).
//
// The default for maxExprCnt is 0.
func MaxExpressions(maxExprCnt uint64) Option {
	return func(p *parser) Option {
		oldMaxExprCnt := p.maxExprCnt
		p.maxExprCnt = maxExprCnt
		return MaxExpressions(oldMaxExprCnt)
	}
}

// Entrypoint creates an Option to set the rule name to use as entrypoint.
// The rule name must have been specified in the -alternate-entrypoints
// if generating the parser with the -optimize-grammar flag, otherwise
// it may have been optimized out. Passing an empty string sets the
// entrypoint to the first rule in the grammar.
//
// The default is to start parsing at the first rule in the grammar.
func Entrypoint(ruleName string) Option {
	return func(p *parser) Option {
		oldEntrypoint := p.entrypoint
		p.entrypoint = ruleName
		if ruleName == "" {
			p.entrypoint = g.rules[0].name
		}
		return Entrypoint(oldEntrypoint)
	}
}

// Statistics adds a user provided Stats struct to the parser to allow
// the user to process the results after the parsing has finished.
// Also the key for the "no match" counter is set.
//
// Example usage:
//
//     input := "input"
//     stats := Stats{}
//     _, err := Parse("input-file", []byte(input), Statistics(&stats, "no match"))
//     if err != nil {
//         log.Panicln(err)
//     }
//     b, err := json.MarshalIndent(stats.ChoiceAltCnt, "", "  ")
//     if err != nil {
//         log.Panicln(err)
//     }
//     fmt.Println(string(b))
//
func Statistics(stats *Stats, choiceNoMatch string) Option {
	return func(p *parser) Option {
		oldStats := p.Stats
		p.Stats = stats
		oldChoiceNoMatch := p.choiceNoMatch
		p.choiceNoMatch = choiceNoMatch
		if p.Stats.ChoiceAltCnt == nil {
			p.Stats.ChoiceAltCnt = make(map[string]map[string]int)
		}
		return Statistics(oldStats, oldChoiceNoMatch)
	}
}

// Debug creates an Option to set the debug flag to b. When set to true,
// debugging information is printed to stdout while parsing.
//
// The default is false.
func Debug(b bool) Option {
	return func(p *parser) Option {
		old := p.debug
		p.debug = b
		return Debug(old)
	}
}

// Memoize creates an Option to set the memoize flag to b. When set to true,
// the parser will cache all results so each expression is evaluated only
// once. This guarantees linear parsing time even for pathological cases,
// at the expense of more memory and slower times for typical cases.
//
// The default is false.
func Memoize(b bool) Option {
	return func(p *parser) Option {
		old := p.memoize
		p.memoize = b
		return Memoize(old)
	}
}

// AllowInvalidUTF8 creates an Option to allow invalid UTF-8 bytes.
// Every invalid UTF-8 byte is treated as a utf8.RuneError (U+FFFD)
// by character class matchers and is matched by the any matcher.
// The returned matched value, c.text and c.offset are NOT affected.
//
// The default is false.
func AllowInvalidUTF8(b bool) Option {
	return func(p *parser) Option {
		old := p.allowInvalidUTF8
		p.allowInvalidUTF8 = b
		return AllowInvalidUTF8(old)
	}
}

// Recover creates an Option to set the recover flag to b. When set to
// true, this causes the parser to recover from panics and convert it
// to an error. Setting it to false can be useful while debugging to
// access the full stack trace.
//
// The default is true.
func Recover(b bool) Option {
	return func(p *parser) Option {
		old := p.recover
		p.recover = b
		return Recover(old)
	}
}

// GlobalStore creates an Option to set a key to a certain value in
// the globalStore.
func GlobalStore(key string, value interface{}) Option {
	return func(p *parser) Option {
		old := p.cur.globalStore[key]
		p.cur.globalStore[key] = value
		return GlobalStore(key, old)
	}
}

// InitState creates an Option to set a key to a certain value in
// the global "state" store.
func InitState(key string, value interface{}) Option {
	return func(p *parser) Option {
		old := p.cur.state[key]
		p.cur.state[key] = value
		return InitState(key, old)
	}
}

// ParseFile parses the file identified by filename.
func ParseFile(filename string, opts ...Option) (i interface{}, err error) {
	f, err := os.Open(filename)
	if err != nil {
		return nil, err
	}
	defer func() {
		if closeErr := f.Close(); closeErr != nil {
			err = closeErr
		}
	}()
	return ParseReader(filename, f, opts...)
}

// ParseReader parses the data from r using filename as information in the
// error messages.
func ParseReader(filename string, r io.Reader, opts ...Option) (interface{}, error) {
	b, err := ioutil.ReadAll(r)
	if err != nil {
		return nil, err
	}

	return Parse(filename, b, opts...)
}

// Parse parses the data from b using filename as information in the
// error messages.
func Parse(filename string, b []byte, opts ...Option) (interface{}, error) {
	return newParser(filename, b, opts...).parse(g)
}

// position records a position in the text.
type position struct {
	line, col, offset int
}

func (p position) String() string {
	return fmt.Sprintf("%d:%d [%d]", p.line, p.col, p.offset)
}

// savepoint stores all state required to go back to this point in the
// parser.
type savepoint struct {
	position
	rn rune
	w  int
}

type current struct {
	pos  position // start position of the match
	text []byte   // raw text of the match

	// state is a store for arbitrary key,value pairs that the user wants to be
	// tied to the backtracking of the parser.
	// This is always rolled back if a parsing rule fails.
	state storeDict

	// globalStore is a general store for the user to store arbitrary key-value
	// pairs that they need to manage and that they do not want tied to the
	// backtracking of the parser. This is only modified by the user and never
	// rolled back by the parser. It is always up to the user to keep this in a
	// consistent state.
	globalStore storeDict
}

type storeDict map[string]interface{}

// the AST types...

type grammar struct {
	pos   position
	rules []*rule
}

type rule struct {
	pos         position
	name        string
	displayName string
	expr        interface{}
}

type choiceExpr struct {
	pos          position
	alternatives []interface{}
}

type actionExpr struct {
	pos  position
	expr interface{}
	run  func(*parser) (interface{}, error)
}

type recoveryExpr struct {
	pos          position
	expr         interface{}
	recoverExpr  interface{}
	failureLabel []string
}

type seqExpr struct {
	pos   position
	exprs []interface{}
}

type throwExpr struct {
	pos   position
	label string
}

type labeledExpr struct {
	pos   position
	label string
	expr  interface{}
}

type expr struct {
	pos  position
	expr interface{}
}

type andExpr expr
type notExpr expr
type zeroOrOneExpr expr
type zeroOrMoreExpr expr
type oneOrMoreExpr expr

type ruleRefExpr struct {
	pos  position
	name string
}

type stateCodeExpr struct {
	pos position
	run func(*parser) error
}

type andCodeExpr struct {
	pos position
	run func(*parser) (bool, error)
}

type notCodeExpr struct {
	pos position
	run func(*parser) (bool, error)
}

type litMatcher struct {
	pos        position
	val        string
	ignoreCase bool
}

type charClassMatcher struct {
	pos             position
	val             string
	basicLatinChars [128]bool
	chars           []rune
	ranges          []rune
	classes         []*unicode.RangeTable
	ignoreCase      bool
	inverted        bool
}

type anyMatcher position

// errList cumulates the errors found by the parser.
type errList []error

func (e *errList) add(err error) {
	*e = append(*e, err)
}

func (e errList) err() error {
	if len(e) == 0 {
		return nil
	}
	e.dedupe()
	return e
}

func (e *errList) dedupe() {
	var cleaned []error
	set := make(map[string]bool)
	for _, err := range *e {
		if msg := err.Error(); !set[msg] {
			set[msg] = true
			cleaned = append(cleaned, err)
		}
	}
	*e = cleaned
}

func (e errList) Error() string {
	switch len(e) {
	case 0:
		return ""
	case 1:
		return e[0].Error()
	default:
		var buf bytes.Buffer

		for i, err := range e {
			if i > 0 {
				buf.WriteRune('\n')
			}
			buf.WriteString(err.Error())
		}
		return buf.String()
	}
}

// parserError wraps an error with a prefix indicating the rule in which
// the error occurred. The original error is stored in the Inner field.
type parserError struct {
	Inner    error
	pos      position
	prefix   string
	expected []string
}

// Error returns the error message.
func (p *parserError) Error() string {
	return p.prefix + ": " + p.Inner.Error()
}

// newParser creates a parser with the specified input source and options.
func newParser(filename string, b []byte, opts ...Option) *parser {
	stats := Stats{
		ChoiceAltCnt: make(map[string]map[string]int),
	}

	p := &parser{
		filename: filename,
		errs:     new(errList),
		data:     b,
		pt:       savepoint{position: position{line: 1}},
		recover:  true,
		cur: current{
			state:       make(storeDict),
			globalStore: make(storeDict),
		},
		maxFailPos:      position{col: 1, line: 1},
		maxFailExpected: make([]string, 0, 20),
		Stats:           &stats,
		// start rule is rule [0] unless an alternate entrypoint is specified
		entrypoint: g.rules[0].name,
	}
	p.setOptions(opts)

	if p.maxExprCnt == 0 {
		p.maxExprCnt = math.MaxUint64
	}

	return p
}

// setOptions applies the options to the parser.
func (p *parser) setOptions(opts []Option) {
	for _, opt := range opts {
		opt(p)
	}
}

type resultTuple struct {
	v   interface{}
	b   bool
	end savepoint
}

const choiceNoMatch = -1

// Stats stores some statistics, gathered during parsing
type Stats struct {
	// ExprCnt counts the number of expressions processed during parsing
	// This value is compared to the maximum number of expressions allowed
	// (set by the MaxExpressions option).
	ExprCnt uint64

	// ChoiceAltCnt is used to count for each ordered choice expression,
	// which alternative is used how may times.
	// These numbers allow to optimize the order of the ordered choice expression
	// to increase the performance of the parser
	//
	// The outer key of ChoiceAltCnt is composed of the name of the rule as well
	// as the line and the column of the ordered choice.
	// The inner key of ChoiceAltCnt is the number (one-based) of the matching alternative.
	// For each alternative the number of matches are counted. If an ordered choice does not
	// match, a special counter is incremented. The name of this counter is set with
	// the parser option Statistics.
	// For an alternative to be included in ChoiceAltCnt, it has to match at least once.
	ChoiceAltCnt map[string]map[string]int
}

type parser struct {
	filename string
	pt       savepoint
	cur      current

	data []byte
	errs *errList

	depth   int
	recover bool
	debug   bool

	memoize bool
	// memoization table for the packrat algorithm:
	// map[offset in source] map[expression or rule] {value, match}
	memo map[int]map[interface{}]resultTuple

	// rules table, maps the rule identifier to the rule node
	rules map[string]*rule
	// variables stack, map of label to value
	vstack []map[string]interface{}
	// rule stack, allows identification of the current rule in errors
	rstack []*rule

	// parse fail
	maxFailPos            position
	maxFailExpected       []string
	maxFailInvertExpected bool

	// max number of expressions to be parsed
	maxExprCnt uint64
	// entrypoint for the parser
	entrypoint string

	allowInvalidUTF8 bool

	*Stats

	choiceNoMatch string
	// recovery expression stack, keeps track of the currently available recovery expression, these are traversed in reverse
	recoveryStack []map[string]interface{}
}

// push a variable set on the vstack.
func (p *parser) pushV() {
	if cap(p.vstack) == len(p.vstack) {
		// create new empty slot in the stack
		p.vstack = append(p.vstack, nil)
	} else {
		// slice to 1 more
		p.vstack = p.vstack[:len(p.vstack)+1]
	}

	// get the last args set
	m := p.vstack[len(p.vstack)-1]
	if m != nil && len(m) == 0 {
		// empty map, all good
		return
	}

	m = make(map[string]interface{})
	p.vstack[len(p.vstack)-1] = m
}

// pop a variable set from the vstack.
func (p *parser) popV() {
	// if the map is not empty, clear it
	m := p.vstack[len(p.vstack)-1]
	if len(m) > 0 {
		// GC that map
		p.vstack[len(p.vstack)-1] = nil
	}
	p.vstack = p.vstack[:len(p.vstack)-1]
}

// push a recovery expression with its labels to the recoveryStack
func (p *parser) pushRecovery(labels []string, expr interface{}) {
	if cap(p.recoveryStack) == len(p.recoveryStack) {
		// create new empty slot in the stack
		p.recoveryStack = append(p.recoveryStack, nil)
	} else {
		// slice to 1 more
		p.recoveryStack = p.recoveryStack[:len(p.recoveryStack)+1]
	}

	m := make(map[string]interface{}, len(labels))
	for _, fl := range labels {
		m[fl] = expr
	}
	p.recoveryStack[len(p.recoveryStack)-1] = m
}

// pop a recovery expression from the recoveryStack
func (p *parser) popRecovery() {
	// GC that map
	p.recoveryStack[len(p.recoveryStack)-1] = nil

	p.recoveryStack = p.recoveryStack[:len(p.recoveryStack)-1]
}

func (p *parser) print(prefix, s string) string {
	if !p.debug {
		return s
	}

	fmt.Printf("%s %d:%d:%d: %s [%#U]\n",
		prefix, p.pt.line, p.pt.col, p.pt.offset, s, p.pt.rn)
	return s
}

func (p *parser) in(s string) string {
	p.depth++
	return p.print(strings.Repeat(" ", p.depth)+">", s)
}

func (p *parser) out(s string) string {
	p.depth--
	return p.print(strings.Repeat(" ", p.depth)+"<", s)
}

func (p *parser) addErr(err error) {
	p.addErrAt(err, p.pt.position, []string{})
}

func (p *parser) addErrAt(err error, pos position, expected []string) {
	var buf bytes.Buffer
	if p.filename != "" {
		buf.WriteString(p.filename)
	}
	if buf.Len() > 0 {
		buf.WriteString(":")
	}
	buf.WriteString(fmt.Sprintf("%d:%d (%d)", pos.line, pos.col, pos.offset))
	if len(p.rstack) > 0 {
		if buf.Len() > 0 {
			buf.WriteString(": ")
		}
		rule := p.rstack[len(p.rstack)-1]
		if rule.displayName != "" {
			buf.WriteString("rule " + rule.displayName)
		} else {
			buf.WriteString("rule " + rule.name)
		}
	}
	pe := &parserError{Inner: err, pos: pos, prefix: buf.String(), expected: expected}
	p.errs.add(pe)
}

func (p *parser) failAt(fail bool, pos position, want string) {
	// process fail if parsing fails and not inverted or parsing succeeds and invert is set
	if fail == p.maxFailInvertExpected {
		if pos.offset < p.maxFailPos.offset {
			return
		}

		if pos.offset > p.maxFailPos.offset {
			p.maxFailPos = pos
			p.maxFailExpected = p.maxFailExpected[:0]
		}

		if p.maxFailInvertExpected {
			want = "!" + want
		}
		p.maxFailExpected = append(p.maxFailExpected, want)
	}
}

// read advances the parser to the next rune.
func (p *parser) read() {
	p.pt.offset += p.pt.w
	rn, n := utf8.DecodeRune(p.data[p.pt.offset:])
	p.pt.rn = rn
	p.pt.w = n
	p.pt.col++
	if rn == '\n' {
		p.pt.line++
		p.pt.col = 0
	}

	if rn == utf8.RuneError && n == 1 { // see utf8.DecodeRune
		if !p.allowInvalidUTF8 {
			p.addErr(errInvalidEncoding)
		}
	}
}

// restore parser position to the savepoint pt.
func (p *parser) restore(pt savepoint) {
	if p.debug {
		defer p.out(p.in("restore"))
	}
	if pt.offset == p.pt.offset {
		return
	}
	p.pt = pt
}

// Cloner is implemented by any value that has a Clone method, which returns a
// copy of the value. This is mainly used for types which are not passed by
// value (e.g map, slice, chan) or structs that contain such types.
//
// This is used in conjunction with the global state feature to create proper
// copies of the state to allow the parser to properly restore the state in
// the case of backtracking.
type Cloner interface {
	Clone() interface{}
}

// clone and return parser current state.
func (p *parser) cloneState() storeDict {
	if p.debug {
		defer p.out(p.in("cloneState"))
	}

	state := make(storeDict, len(p.cur.state))
	for k, v := range p.cur.state {
		if c, ok := v.(Cloner); ok {
			state[k] = c.Clone()
		} else {
			state[k] = v
		}
	}
	return state
}

// restore parser current state to the state storeDict.
// every restoreState should applied only one time for every cloned state
func (p *parser) restoreState(state storeDict) {
	if p.debug {
		defer p.out(p.in("restoreState"))
	}
	p.cur.state = state
}

// get the slice of bytes from the savepoint start to the current position.
func (p *parser) sliceFrom(start savepoint) []byte {
	return p.data[start.position.offset:p.pt.position.offset]
}

func (p *parser) getMemoized(node interface{}) (resultTuple, bool) {
	if len(p.memo) == 0 {
		return resultTuple{}, false
	}
	m := p.memo[p.pt.offset]
	if len(m) == 0 {
		return resultTuple{}, false
	}
	res, ok := m[node]
	return res, ok
}

func (p *parser) setMemoized(pt savepoint, node interface{}, tuple resultTuple) {
	if p.memo == nil {
		p.memo = make(map[int]map[interface{}]resultTuple)
	}
	m := p.memo[pt.offset]
	if m == nil {
		m = make(map[interface{}]resultTuple)
		p.memo[pt.offset] = m
	}
	m[node] = tuple
}

func (p *parser) buildRulesTable(g *grammar) {
	p.rules = make(map[string]*rule, len(g.rules))
	for _, r := range g.rules {
		p.rules[r.name] = r
	}
}

func (p *parser) parse(g *grammar) (val interface{}, err error) {
	if len(g.rules) == 0 {
		p.addErr(errNoRule)
		return nil, p.errs.err()
	}

	// TODO : not super critical but this could be generated
	p.buildRulesTable(g)

	if p.recover {
		// panic can be used in action code to stop parsing immediately
		// and return the panic as an error.
		defer func() {
			if e := recover(); e != nil {
				if p.debug {
					defer p.out(p.in("panic handler"))
				}
				val = nil
				switch e := e.(type) {
				case error:
					p.addErr(e)
				default:
					p.addErr(fmt.Errorf("%v", e))
				}
				err = p.errs.err()
			}
		}()
	}

	startRule, ok := p.rules[p.entrypoint]
	if !ok {
		p.addErr(errInvalidEntrypoint)
		return nil, p.errs.err()
	}

	p.read() // advance to first rune
	val, ok = p.parseRule(startRule)
	if !ok {
		if len(*p.errs) == 0 {
			// If parsing fails, but no errors have been recorded, the expected values
			// for the farthest parser position are returned as error.
			maxFailExpectedMap := make(map[string]struct{}, len(p.maxFailExpected))
			for _, v := range p.maxFailExpected {
				maxFailExpectedMap[v] = struct{}{}
			}
			expected := make([]string, 0, len(maxFailExpectedMap))
			eof := false
			if _, ok := maxFailExpectedMap["!."]; ok {
				delete(maxFailExpectedMap, "!.")
				eof = true
			}
			for k := range maxFailExpectedMap {
				expected = append(expected, k)
			}
			sort.Strings(expected)
			if eof {
				expected = append(expected, "EOF")
			}
			p.addErrAt(errors.New("no match found, expected: "+listJoin(expected, ", ", "or")), p.maxFailPos, expected)
		}

		return nil, p.errs.err()
	}
	return val, p.errs.err()
}

func listJoin(list []string, sep string, lastSep string) string {
	switch len(list) {
	case 0:
		return ""
	case 1:
		return list[0]
	default:
		return fmt.Sprintf("%s %s %s", strings.Join(list[:len(list)-1], sep), lastSep, list[len(list)-1])
	}
}

func (p *parser) parseRule(rule *rule) (interface{}, bool) {
	if p.debug {
		defer p.out(p.in("parseRule " + rule.name))
	}

	if p.memoize {
		res, ok := p.getMemoized(rule)
		if ok {
			p.restore(res.end)
			return res.v, res.b
		}
	}

	start := p.pt
	p.rstack = append(p.rstack, rule)
	p.pushV()
	val, ok := p.parseExpr(rule.expr)
	p.popV()
	p.rstack = p.rstack[:len(p.rstack)-1]
	if ok && p.debug {
		p.print(strings.Repeat(" ", p.depth)+"MATCH", string(p.sliceFrom(start)))
	}

	if p.memoize {
		p.setMemoized(start, rule, resultTuple{val, ok, p.pt})
	}
	return val, ok
}

func (p *parser) parseExpr(expr interface{}) (interface{}, bool) {
	var pt savepoint

	if p.memoize {
		res, ok := p.getMemoized(expr)
		if ok {
			p.restore(res.end)
			return res.v, res.b
		}
		pt = p.pt
	}

	p.ExprCnt++
	if p.ExprCnt > p.maxExprCnt {
		panic(errMaxExprCnt)
	}

	var val interface{}
	var ok bool
	switch expr := expr.(type) {
	case *actionExpr:
		val, ok = p.parseActionExpr(expr)
	case *andCodeExpr:
		val, ok = p.parseAndCodeExpr(expr)
	case *andExpr:
		val, ok = p.parseAndExpr(expr)
	case *anyMatcher:
		val, ok = p.parseAnyMatcher(expr)
	case *charClassMatcher:
		val, ok = p.parseCharClassMatcher(expr)
	case *choiceExpr:
		val, ok = p.parseChoiceExpr(expr)
	case *labeledExpr:
		val, ok = p.parseLabeledExpr(expr)
	case *litMatcher:
		val, ok = p.parseLitMatcher(expr)
	case *notCodeExpr:
		val, ok = p.parseNotCodeExpr(expr)
	case *notExpr:
		val, ok = p.parseNotExpr(expr)
	case *oneOrMoreExpr:
		val, ok = p.parseOneOrMoreExpr(expr)
	case *recoveryExpr:
		val, ok = p.parseRecoveryExpr(expr)
	case *ruleRefExpr:
		val, ok = p.parseRuleRefExpr(expr)
	case *seqExpr:
		val, ok = p.parseSeqExpr(expr)
	case *stateCodeExpr:
		val, ok = p.parseStateCodeExpr(expr)
	case *throwExpr:
		val, ok = p.parseThrowExpr(expr)
	case *zeroOrMoreExpr:
		val, ok = p.parseZeroOrMoreExpr(expr)
	case *zeroOrOneExpr:
		val, ok = p.parseZeroOrOneExpr(expr)
	default:
		panic(fmt.Sprintf("unknown expression type %T", expr))
	}
	if p.memoize {
		p.setMemoized(pt, expr, resultTuple{val, ok, p.pt})
	}
	return val, ok
}

func (p *parser) parseActionExpr(act *actionExpr) (interface{}, bool) {
	if p.debug {
		defer p.out(p.in("parseActionExpr"))
	}

	start := p.pt
	val, ok := p.parseExpr(act.expr)
	if ok {
		p.cur.pos = start.position
		p.cur.text = p.sliceFrom(start)
		state := p.cloneState()
		actVal, err := act.run(p)
		if err != nil {
			p.addErrAt(err, start.position, []string{})
		}
		p.restoreState(state)

		val = actVal
	}
	if ok && p.debug {
		p.print(strings.Repeat(" ", p.depth)+"MATCH", string(p.sliceFrom(start)))
	}
	return val, ok
}

func (p *parser) parseAndCodeExpr(and *andCodeExpr) (interface{}, bool) {
	if p.debug {
		defer p.out(p.in("parseAndCodeExpr"))
	}

	state := p.cloneState()

	ok, err := and.run(p)
	if err != nil {
		p.addErr(err)
	}
	p.restoreState(state)

	return nil, ok
}

func (p *parser) parseAndExpr(and *andExpr) (interface{}, bool) {
	if p.debug {
		defer p.out(p.in("parseAndExpr"))
	}

	pt := p.pt
	state := p.cloneState()
	p.pushV()
	_, ok := p.parseExpr(and.expr)
	p.popV()
	p.restoreState(state)
	p.restore(pt)

	return nil, ok
}

func (p *parser) parseAnyMatcher(any *anyMatcher) (interface{}, bool) {
	if p.debug {
		defer p.out(p.in("parseAnyMatcher"))
	}

	if p.pt.rn == utf8.RuneError && p.pt.w == 0 {
		// EOF - see utf8.DecodeRune
		p.failAt(false, p.pt.position, ".")
		return nil, false
	}
	start := p.pt
	p.read()
	p.failAt(true, start.position, ".")
	return p.sliceFrom(start), true
}

func (p *parser) parseCharClassMatcher(chr *charClassMatcher) (interface{}, bool) {
	if p.debug {
		defer p.out(p.in("parseCharClassMatcher"))
	}

	cur := p.pt.rn
	start := p.pt

	// can't match EOF
	if cur == utf8.RuneError && p.pt.w == 0 { // see utf8.DecodeRune
		p.failAt(false, start.position, chr.val)
		return nil, false
	}

	if chr.ignoreCase {
		cur = unicode.ToLower(cur)
	}

	// try to match in the list of available chars
	for _, rn := range chr.chars {
		if rn == cur {
			if chr.inverted {
				p.failAt(false, start.position, chr.val)
				return nil, false
			}
			p.read()
			p.failAt(true, start.position, chr.val)
			return p.sliceFrom(start), true
		}
	}

	// try to match in the list of ranges
	for i := 0; i < len(chr.ranges); i += 2 {
		if cur >= chr.ranges[i] && cur <= chr.ranges[i+1] {
			if chr.inverted {
				p.failAt(false, start.position, chr.val)
				return nil, false
			}
			p.read()
			p.failAt(true, start.position, chr.val)
			return p.sliceFrom(start), true
		}
	}

	// try to match in the list of Unicode classes
	for _, cl := range chr.classes {
		if unicode.Is(cl, cur) {
			if chr.inverted {
				p.failAt(false, start.position, chr.val)
				return nil, false
			}
			p.read()
			p.failAt(true, start.position, chr.val)
			return p.sliceFrom(start), true
		}
	}

	if chr.inverted {
		p.read()
		p.failAt(true, start.position, chr.val)
		return p.sliceFrom(start), true
	}
	p.failAt(false, start.position, chr.val)
	return nil, false
}

func (p *parser) incChoiceAltCnt(ch *choiceExpr, altI int) {
	choiceIdent := fmt.Sprintf("%s %d:%d", p.rstack[len(p.rstack)-1].name, ch.pos.line, ch.pos.col)
	m := p.ChoiceAltCnt[choiceIdent]
	if m == nil {
		m = make(map[string]int)
		p.ChoiceAltCnt[choiceIdent] = m
	}
	// We increment altI by 1, so the keys do not start at 0
	alt := strconv.Itoa(altI + 1)
	if altI == choiceNoMatch {
		alt = p.choiceNoMatch
	}
	m[alt]++
}

func (p *parser) parseChoiceExpr(ch *choiceExpr) (interface{}, bool) {
	if p.debug {
		defer p.out(p.in("parseChoiceExpr"))
	}

	for altI, alt := range ch.alternatives {
		// dummy assignment to prevent compile error if optimized
		_ = altI

		state := p.cloneState()

		p.pushV()
		val, ok := p.parseExpr(alt)
		p.popV()
		if ok {
			p.incChoiceAltCnt(ch, altI)
			return val, ok
		}
		p.restoreState(state)
	}
	p.incChoiceAltCnt(ch, choiceNoMatch)
	return nil, false
}

func (p *parser) parseLabeledExpr(lab *labeledExpr) (interface{}, bool) {
	if p.debug {
		defer p.out(p.in("parseLabeledExpr"))
	}

	p.pushV()
	val, ok := p.parseExpr(lab.expr)
	p.popV()
	if ok && lab.label != "" {
		m := p.vstack[len(p.vstack)-1]
		m[lab.label] = val
	}
	return val, ok
}

func (p *parser) parseLitMatcher(lit *litMatcher) (interface{}, bool) {
	if p.debug {
		defer p.out(p.in("parseLitMatcher"))
	}

	ignoreCase := ""
	if lit.ignoreCase {
		ignoreCase = "i"
	}
	val := fmt.Sprintf("%q%s", lit.val, ignoreCase)
	start := p.pt
	for _, want := range lit.val {
		cur := p.pt.rn
		if lit.ignoreCase {
			cur = unicode.ToLower(cur)
		}
		if cur != want {
			p.failAt(false, start.position, val)
			p.restore(start)
			return nil, false
		}
		p.read()
	}
	p.failAt(true, start.position, val)
	return p.sliceFrom(start), true
}

func (p *parser) parseNotCodeExpr(not *notCodeExpr) (interface{}, bool) {
	if p.debug {
		defer p.out(p.in("parseNotCodeExpr"))
	}

	state := p.cloneState()

	ok, err := not.run(p)
	if err != nil {
		p.addErr(err)
	}
	p.restoreState(state)

	return nil, !ok
}

func (p *parser) parseNotExpr(not *notExpr) (interface{}, bool) {
	if p.debug {
		defer p.out(p.in("parseNotExpr"))
	}

	pt := p.pt
	state := p.cloneState()
	p.pushV()
	p.maxFailInvertExpected = !p.maxFailInvertExpected
	_, ok := p.parseExpr(not.expr)
	p.maxFailInvertExpected = !p.maxFailInvertExpected
	p.popV()
	p.restoreState(state)
	p.restore(pt)

	return nil, !ok
}

func (p *parser) parseOneOrMoreExpr(expr *oneOrMoreExpr) (interface{}, bool) {
	if p.debug {
		defer p.out(p.in("parseOneOrMoreExpr"))
	}

	var vals []interface{}

	for {
		p.pushV()
		val, ok := p.parseExpr(expr.expr)
		p.popV()
		if !ok {
			if len(vals) == 0 {
				// did not match once, no match
				return nil, false
			}
			return vals, true
		}
		vals = append(vals, val)
	}
}

func (p *parser) parseRecoveryExpr(recover *recoveryExpr) (interface{}, bool) {
	if p.debug {
		defer p.out(p.in("parseRecoveryExpr (" + strings.Join(recover.failureLabel, ",") + ")"))
	}

	p.pushRecovery(recover.failureLabel, recover.recoverExpr)
	val, ok := p.parseExpr(recover.expr)
	p.popRecovery()

	return val, ok
}

func (p *parser) parseRuleRefExpr(ref *ruleRefExpr) (interface{}, bool) {
	if p.debug {
		defer p.out(p.in("parseRuleRefExpr " + ref.name))
	}

	if ref.name == "" {
		panic(fmt.Sprintf("%s: invalid rule: missing name", ref.pos))
	}

	rule := p.rules[ref.name]
	if rule == nil {
		p.addErr(fmt.Errorf("undefined rule: %s", ref.name))
		return nil, false
	}
	return p.parseRule(rule)
}

func (p *parser) parseSeqExpr(seq *seqExpr) (interface{}, bool) {
	if p.debug {
		defer p.out(p.in("parseSeqExpr"))
	}

	vals := make([]interface{}, 0, len(seq.exprs))

	pt := p.pt
	state := p.cloneState()
	for _, expr := range seq.exprs {
		val, ok := p.parseExpr(expr)
		if !ok {
			p.restoreState(state)
			p.restore(pt)
			return nil, false
		}
		vals = append(vals, val)
	}
	return vals, true
}

func (p *parser) parseStateCodeExpr(state *stateCodeExpr) (interface{}, bool) {
	if p.debug {
		defer p.out(p.in("parseStateCodeExpr"))
	}

	err := state.run(p)
	if err != nil {
		p.addErr(err)
	}
	return nil, true
}

func (p *parser) parseThrowExpr(expr *throwExpr) (interface{}, bool) {
	if p.debug {
		defer p.out(p.in("parseThrowExpr"))
	}

	for i := len(p.recoveryStack) - 1; i >= 0; i-- {
		if recoverExpr, ok := p.recoveryStack[i][expr.label]; ok {
			if val, ok := p.parseExpr(recoverExpr); ok {
				return val, ok
			}
		}
	}

	return nil, false
}

func (p *parser) parseZeroOrMoreExpr(expr *zeroOrMoreExpr) (interface{}, bool) {
	if p.debug {
		defer p.out(p.in("parseZeroOrMoreExpr"))
	}

	var vals []interface{}

	for {
		p.pushV()
		val, ok := p.parseExpr(expr.expr)
		p.popV()
		if !ok {
			return vals, true
		}
		vals = append(vals, val)
	}
}

func (p *parser) parseZeroOrOneExpr(expr *zeroOrOneExpr) (interface{}, bool) {
	if p.debug {
		defer p.out(p.in("parseZeroOrOneExpr"))
	}

	p.pushV()
	val, _ := p.parseExpr(expr.expr)
	p.popV()
	// whether it matched or not, consider it a match
	return val, true
}
