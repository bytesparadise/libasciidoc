name: ci
on:
  pull_request:
    branches:
      - master

# permissions:
#   contents: write

jobs:
  build_test:
    name: Build and Test on ${{ matrix.os }} / go ${{ matrix.go-version }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        go-version: [1.16.x,1.17.x]
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
    - name: Install Go
      uses: actions/setup-go@v2
      with:
        go-version: ${{ matrix.go-version }}

    - name: Checkout code
      uses: actions/checkout@v2

    - name: Cache dependencies
      uses: actions/cache@v2
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles ('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    - name: Verify parser
      if: runner.os == 'Linux'
      run: |
        make verify-parser

    - name: Build
      run: |
        make build

    - name: Test
      run: |
        make test-with-coverage

    - name: Codecov
      if: runner.os == 'Linux'
      uses: codecov/codecov-action@v1.0.6
      with:
        # Path to coverage file to upload
        file: coverage.txt

  lint:
    name: Lint on ${{ matrix.os }} / go ${{ matrix.go-version }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go-version: [1.17.x]
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Lint
      uses: golangci/golangci-lint-action@v2.3.0
      with:
        version: latest
        args: -c .golangci.yml

  bench:
    name: Bench on ${{ matrix.os }} / go ${{ matrix.go-version }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        go-version: [1.17.x]
        os: [ubuntu-latest]

    steps:
    - name: Install Go
      uses: actions/setup-go@v2
      with:
        go-version: ${{ matrix.go-version }}

    - name: Checkout code
      uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Cache dependencies
      uses: actions/cache@v2
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles ('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    - name: Verify parser
      run: |
        make verify-parser

    - name: Bench and Diff
      id: bench-diff
      run: |
        go install golang.org/x/perf/cmd/benchstat@latest
        make bench-diff
        OUTPUT=$(make print-bench-diff)
        echo "${OUTPUT}"
        OUTPUT="${OUTPUT//$'\n'/%0A}"
        echo "::set-output name=diff::$OUTPUT"

    - name: Comment Benchmark Diffs
      uses: marocchino/sticky-pull-request-comment@v2
      with:
        append: true
        header: bench
        message: |
          ### Benchmark Diffs
          <details><summary>Benchmark diffs</summary>
          ```
          ${{ steps.bench-diff.outputs.diff }}
          ```
          </details>

